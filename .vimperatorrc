let mapleader = ","
command! -nargs=+ lazy autocmd VimperatorEnter .* <args>
noremap < gT
noremap > gt

set editor='/Users/iaj/bin/mvim --remote-wait-silent'

noremap h <C-o>
noremap l <C-i>
map H gT
map L gt
"map x <C-6>
map ,, <C-^>
"map c :firebug toggle<CR>
"map w :flashtoggle<CR>
map I :buffer! marcgalal<CR>
map X :buffer! /typo3/backend<CR>
map E :buffer! Aprica<CR>
map ,e :buffer! youtube<CR>
map ,0 :buffer! bet365<CR>
map ,l :buffer! protennis<CR>
map ,k :buffer! kino<CR>
map ,c :buffer! cbs<CR>
map ,w :buffer! nba scores<CR>
map ,t :buffer! tippen4you<CR>
map ,M :buffer! mailingwork<CR>
map ,F :buffer! facebook<CR>
map ,f :firebug toggle<CR>
"map <C-l> :set nohlsearch
map <silent> <leader><Space> :noh<CR>
"imap jj <Esc>
imap <C-c> <Esc>
imap jk <Esc>
"map \b :buffer!<tab><S-tab>
"set wildoptions=auto
set hls
set incsearch
"map b :b
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>
cnoremap <C-g> <Esc>
cnoremap <C-\\> <C-]>
"cnoremap jj <Esc>
noremap ,M :emenu
noremap ,ms :messages<CR>
" Pageinfo
nnoremap <C-g> g<C-g>
set verbose=9

" no u gt
" map T :tabduplіcate<Enter>
"map e <Insert>
"autocmd VimperatorEnter .* source ~/_vimperator-after.vimp
" feedSomeKeys_2.js
"autocmd LocationChange .* fmapc
"autocmd LocationChange duckduckgo.com :fmap! j k o

" Gmail
"autocmd LocationChange mail\.google\.com/(mail|a)/ :fmap -d 4 c / j k n p o u e x s r a # [ ] z ? gi gs gt gd ga gc
"autocmd LocationChange mail\.google\.com/(mail|a)/ :fmap -d 4 f c / j k l n p o u e x s r a y * # [ ] z ? gi gs gt gd ga gc gl .
"autocmd LocationChange mail\.google\.com/(mail|a)/ :fmap f c / j k l n p o u e x s r a y * # [ ] z ? gi gs gt gd ga gc gl .
"autocmd LocationChange www\.google\.com/ :fmap j k o / <CR>
"Google Reader
"autocmd LocationChange www\.google\.(co\.jp|com)/reader :fmap! -v i j k n p m s v A r S N P X O gh ga gs gt gu u / ? t
"Google Calendar
"autocmd LocationChange ^https?://www\.google\.com/calendar fmap! -vkey -event keydown j k T,t a D,d w m x c e z / + q s ?

" Quickmark in background tab
js <<EOF
mappings.add(config.browserModes,
    ["gN"], "Jump to a QuickMark in a new tab, inverting the 'activate' option",
    function (arg) {
        quickmarks.jumpTo(arg,
            /\bquickmark\b/.test(options["activate"]) ?
            liberator.NEW_BACKGROUND_TAB : liberator.NEW_TAB);
    },
    { arg: true });
EOF

"highlight Hint opacity:0.90
"highlight Hint opacity:0.70
"hi! Hint font-size: 1em; border: black solid 1px; color: black; background: red;
"highlight Hint font-family: "DejaVu Sans Mono", monospace; font-size: 12px; font-weight: normal; color: #FFO099; background-color: 3399FF; padding: 0px 2px;
"background-color:  rgba(255,231,107,1);

"highlight Hint font-family: "DejaVu Sans Mono", monospace; font-size: 12px; font-weight: normal; color: #FFO099; background-color: #3399FF; padding: 0px 2px;
highlight Hint font-family: "DejaVu Sans Mono", monospace; font-size: 12px; font-weight: normal; color: #FFO099; background-color: rgba(255,231,107,1); padding: 0px 2px;
highlight HintElem background-color: #00CC000;
"noremap j 4j
"noremap k 4k
" not working thus far - to hide it...
" set showtabline=1
"set showtabline=1
"set guioptions+=
set gui=none
noremap <leader>j :jumps<CR>
"autocmd LocationChange .* :js modes.passAllKeys = /mail\.google\.com/.test(buffer.URL)
"autocmd LocationChange .* :js modes.passAllKeys = /www\.google\.com\/reader\/view/.test(buffer.URL)
"autocmd LocationChange .* :js modes.passAllKeys = /www\.google\.de\/reader\/view/.test(buffer.URL)
"au LocationChange .* :set editor=gvim -f
"au LocationChange mail\.google\.com :set editor=gvim -f -c 'set ft=mail'
":autocmd LocationChange .* js modes.passAllKeys = /mail\.google\.com/.test(buffer.URL)

"set editor='bash -lc "~/bin/mvim --remote-wait-silent -f \$*"'
"set editor='bash -lc "mvim --remote-silent -f"'
"au LocationChange .*typo3.* :set editor='/Users/iaj/bin/mvim --remote-wait-silent -c set ft=typoscript'
"au LocationChange .*typo3 :set editor='bash -lc "mvim -f --remote-wait-silent -c 'set ft=typoscript' mvim "'
"set editor='bash -lc "g --remote-tab-silent -f \$*"'
map <C-h> :tabmove! -1<CR>
map <C-l> :tabmove! +1<CR>
map ,j <C-w>j
map ,k <C-w>k
map <silent> <F7> :noh<CR>
map <silent> <CR> :noh<CR>
" Hide CmdLine right after a command
"cnoremap <S-CR> <CR>
"cnoremap <CR> <CR>:<Esc>
" Faster scrolling
noremap <C-e> 3<C-e>
noremap <C-y> 3<C-y>

" Homerow hints
"set hintchars="aoeuhtns"

"set noinsertmode
set insertmode
" Options
"set preload
"set showmode
set titlestring=vimperator
" set wildmode=list:full
"set wildoptions=auto
set maxitems=30
set ic
set smartcase
" set wildoptions=auto
set defsearch=google
" set guioptions=T
" set guioptions=r
set complete=l
set focuscontent
set noautocomplete
set history=5000
" Abbreviations
" set goٍ=
" source! ~/.vimperatorrc.local

" Pref (Firefox)
" アドオン/プラグイン開発用
"set! javascript.options.strict=true
"set! javascript.options.showInConsole=true
"set! browser.dom.window.dump.enabled=true

" キャッシュサイズ
set! browser.cache.memory.capacity=32768
" ホームページ
set! browser.startup.homepage="about:blank"

" colorscheeme
" ======================================================================
"colorscheme sweets
"colorscheme wa_sweets
"colorscheme myzenburn
"colorscheme bigchu
"colorscheme jay
"colorscheme theme
"colorscheme persona
"colorscheme tab-numbers
"colorscheme fix-addon
"colorscheme fix-sites
"colorscheme fix-firefox
"colorscheme simple
"the next tab look alike
"style -name tab-text-shadow-fix chrome://* <<EOM
".tab-text-shadow {
" display: none !important; /* Firefox 3.1b Fix */
"}
"EOM
"style -name simple_tabs_container chrome://* <<EOM
".tabs-newtab-button {display: none !important;}
".tabs-container> stack {display: none;}
"EOM

"source ~/.vimperator/scripts/styled.vimperator

"nextlink.js
"let g:nextlink_followlink = "true"
"let g:nextlink_prevmap = "[["
"let g:nextlink_nextmap = "]]"

"let g:smooziee_scroll_amount="120"
"let g:smooziee_scroll_interval="1"

"set hintchars="asdfhjkl;"
let g:asdfghjkl_default = "true"
let g:asdfghjkl_mode_change_key = "<Space>"
loadplugins

" let g:hints_copy_maps = "k K <nop> <nop>"
"lazy fmaps J,j K,k P,p I,p
"lazy fmaps J,j K,k P,p I,p o,O

" hints-for-embedded.js
" let g:hints_for_embedded_mode = "e"

" Passthrough mode shortcut
nmap x <C-z>
"nmap y <C-z>

" use duckduckgo search instead of google ... specify it like that %s is the entered query in that case
"bma -k=k http://duckduckgo.com/?q=%s&v=r
"set ds=k
":au LocationChange .* js modes.passAllKeys = /google\.com/.test(buffer.URL) | /google\.com/.test(buffer.URL) | /duckduckgo\.com/.test(buffer.URL) | /dukgo\.com/.test(buffer.URL)
"lazy fmaps -urls='^http://www\.google\.com/search\?' j k p o
"lazy fmaps -urls='^http://duckduckgo\.com/\?\=' j k
"lazy fmaps -u='^http://duckduckgo\.com/' j k p o
"lazy fmaps -u='mail\.google\.com/mail' c / j k n p o u e x s r a ? gi gs gt gd ga gc
"lazy fmaps -u='mail\.google\.com/mail' -p=<Leader> d,# s,!
"lazy fmaps -u='mail\.google\.com/mail/.*/[0-9a-f]+$' c / j,n k,p n,j p,k o u e x s r a ? gi gs gt gd ga gc
"lazy fmaps -u='mail\.google\.com/mail/.*/[0-9a-f]+$' -p=<Leader> d,# s,!
"let g:ldrc_captureMappings = "['j', 'k', 'p', 'o', '?']"
"let g:ldrc_captureMappings = "['p','o']"
"let g:ldrc_captureMappings = "['p', 'o', '?']"
"let g:ldrc_captureMappings = "['j', 'k'']"
"let g:ldrc_intelligence_bind="true"
noremap ,b :buffer!<Space>
"noremap <silent> zz :centerselect<CR>
set visualbell
let g:hints_for_embedded_mode="e"

abbr mg http://www.marcgalal.com/
abbr mgi http://www.marcgalal.com/index.php?id=
abbr cp http://www.clientproduction.com/
"abbr vm http://www.verimatic.com/de/
"abbr fm http://www.fuel-management.de/
"set nextpattern+=\\bVorwärts\\b
"set previouspattern+=\\bZurück\\b
set nextpattern=>,\\bnext\\b,^Next,Next,\\bVorwärts\\b,^>$,^(>>|»)$,^(>|»),(>|»)$,\\bmore\\b
set previouspattern=<,\\bprev|previous\\b,^Previous,\\bZurück\\b,^<$,^(<<|«)$,^(<|«),(<|«)$
abbr -javascript .url buffer.URL

"map <c-f> :js alert("noob, use / instead!");
map Q :js liberator.open(buffer.URL+"&fmt=18");<CR>
" Next/Prev Tab
nmap w <C-Tab>
nmap v <C-S-Tab>

nnoremap j 7j
nnoremap k 7k

"nnoremap <silent> n n:centerselect<CR>
"nnoremap <silent> N N:centerselect<CR>
nnoremap gh 1gt

"nnoremap <silent> y :<C-u>js util.copyToClipboard(buffer.URL)<CR>
vnoremap y :<C-u>copy %SEL%<CR>
"vnoremap P y<Esc><Esc>P
" Undo
nnoremap U :<C-u>undo<Space>
" undo limit
set! browser.sessionstore.max_tabs_undo=100
nmap <silent> V :tabmove -1<CR>
imap ,, <Esc><C-6>
nmap <silent> W :tabmove +1<CR>
" Disable some regular-Firefox old habits
nmap <M-F12> <Nop>
nmap <M-t> <Nop>
nmap <M-e> <Nop>
nmap <M-b> <Nop>
nmap <M-S-h> <Nop>
nmap <M-k> <Nop>
nmap <M-f> <Nop>
nmap <M-g> <Nop>
nmap <M-l> <Nop>
nmap <M-Q> <Nop>

map gy :js util.copyToClipboard(content.document.wrappedJSObject.body)
" map z<CR> :centerselect
noremap <leader>j :jumps<CR>
" read it later
let g:readitlater_open_as_read = 1
let g:readitlater_get_count = 500
nnoremap <Leader>n :ril open<Space>
nnoremap <Leader>l :ril add<Space>

" 画像のばやい - 拡縮
nnoremap -urls '\.(jpg|png|gif)$' zi zI
nnoremap -urls '\.(jpg|png|gif)$' zo zO

" ignorekeys add -except=:,h,l,f,<,>,<C-d>,<C-u>,<C-f>,<C-b> 'reddit.com/'
" ignorekeys add -except=:,<lt>,<gt>,<C-d>,<C-u>,<C-f>,<C-b> 'mail.google.com/'
" ignorekeys add -except=:,<lt>,<gt>,<C-d>,<C-u>,<C-f>,<C-b> 'mail.google.com/'

" feedSomeKeys_3 {{{
" GMail
lazy fmaps -u='mail\.google\.com/mail' -events=vkeydown,keypress,vkeyup j k
lazy fmaps -u='mail\.google\.com/mail' c n p o u x s r a ? gi gs gt gd ga gc I
"fmaps -u='mail\.google\.com/mail' -p=<Leader> d,# s,! e
"fmaps -u='mail\.google\.com/mail/.*/[0-9a-f]+$' c j,n k,p n,j p,k o u x s r a ? gi gs gt gd ga gc
"fmaps -u='mail\.google\.com/mail/.*/[0-9a-f]+$' -p=<Leader> d,# s,! e
"autocmd LocationChange .* js modes.passAllKeys = /reddit\.com/.test(buffer.URL)
lazy fmaps -u='reddit\.com/' -events=vkeydown,keypress,vkeyup j k J K p x l o O m <S-o> <CR> [ ]
"fmaps -u='reddit\.com/' <CR>
"fmaps -u='reddit\.com/' o,<CR>
"fmaps -u='reddit\.com/' -events=keypress h j k l <CR> i p t <ESC>
"fmaps -u='reddit\.com/' p x l
"fmaps -u='duckduckgo\.com/' j k

" fmaps -u='reddit\.com/' -events=vkeydown,keypress,vkeyup j k
" fmaps -u='reddit\.com/' o <CR> <S-CR> <Return> <S-Return>


" Google Code
"fmaps -u='http://code.google.com/p/vimperator-labs/issues/list' o j k
"fmaps -u='http://code.google.com/p/vimperator-labs/issues/detail' u

" LDRize
"fmaps J,j K,k P,p I,p

" INSERT
"fmaps -modes=i -events=keypress,keydown <C-p>,<Up> <C-n>,<Down>
" }}}
" vim: set ts=8 sw=4 tw=0 ft=vimperator:
