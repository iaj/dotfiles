"" vim: set filetype=vim : ""
" au FileType * execute "setlocal complete+=k".$VIMRUNTIME."/syntax/" . getbufvar("%","current_syntax").".vim"
" au BufNewFile,BufRead /Users/iaj/Documents/todo.txt colorscheme ChocolateLiquor
if has("autocmd")
    augroup filetype
        autocmd!
        au FileType mail sil 1	| call search("^$")
                    \ | sil put! ='X-Editor: Vim-' . Version()
        autocmd FileType python map <F5> :w<CR>:!python "%"<CR>
        autocmd FileType css set omnifunc=csscomplete#CompleteCSS
        autocmd FileType python set omnifunc=pythoncomplete#Complete
        autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
        "autocmd FileType c,cpp,java,javascript,python,xml,xhtml,html set shiftwidth=4
        "autocmd FileType html set autoread
        autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
        autocmd FileType css set omnifunc=csscomplete#CompleteCSS
        autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
        "autocmd FileType php set omnifunc=phpcomplete#CompletePHP
        autocmd FileType c set omnifunc=ccomplete#Complete
        autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete
        "autocmd FileType ruby,perl,tex set shiftwidth=2
        autocmd FileType applescript compiler ruby
        au FileType text,svn setlocal tw=78 fo+=t
        "autocmd BufWinLeave *.vim,*.html,*.htm,*.etc mkview
        "autocmd BufWinEnter *.vim,*.html,*.htm,*.etc silent loadview
        au FileType mail,text let b:delimitMate_autoclose = 0
        " Files to set default textwidth
        autocmd FileType mail,tex set textwidth=78
        autocmd FileType mail,tex let g:textwidth=78
        " Javascript let is a keyword
        autocmd FileType javascript syn keyword javascriptIdentifier "let"
        " Remove ALL autocommands for the current group.
    augroup END
endif

"autocmd BufWinEnter .vimrc silent loadview
"autocmd BufWinLeave .vimrc mkview

" Switch the CWD to the current buffer.
"autocmd BufEnter * lcd %:p:h
"autocmd FileType xhtml,html,xml,sass,tex,plaintex,yaml silent setlocal tabstop=2 softtabstop=2 shiftwidth=2
"au FileType html DelimitMateReload | DelimitMateSwitch

" Jump to last-known-position when editing files
" Note: The | character is used in Vim as a command separator (like ; in C)
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
au BufRead *.js set makeprg=jslint\ %

" bachelor arbeit - alle tags neusetzen projektspezifisch - fÃ¼r Animal als
" auch AnimalScript2
autocmd Filetype java if expand('%:p') =~ expand('~/ba/java/')|map <buffer> <F9> :!/opt/local/bin/ctags -R --links=yes --java-types=cimp -f ~/Documents/workspace/tags ~/Documents/workspace<CR>:!echo 'tags generated!'<CR>|endif
" make c-] work as f3 in eclipse
autocmd Filetype java noremap <buffer> <C-]> :JavaSearchContext<cr>|set fdl=1|set fdm=manual
"autocmd Filetype java noremap <buffer> <C-]> :JavaSearchContext<cr>|set fdl=1

"autocmd BufWinEnter *.java silent loadview
"autocmd BufWinLeave *.java mkview

function! MyControlSpace()
    let b:complType=0
    return "\<C-X>\<C-U>"
endfunction
autocmd Filetype java inoremap <C-Space> <c-r>=MyControlSpace()<cr>
"autocmd Filetype java set foldmethod=manual

"au! Syntax java source ~/.vim/syntax/python.vim

" pentadactyl stuff
"autocmd BufDelete *pentadactyl* silent :!echo 'tell application "Minefield" to activate' | osascript
au! BufRead pentadactyl-* nnoremap <buffer> ,d :silent write \| :bd<CR>
autocmd BufDelete *pentadactyl* silent :!echo 'tell application "Minefield" to activate' | osascript


"Surround options for mailingwork stuff
"Surround word by TRACKING STUFF with '-'
autocmd FileType mw let b:surround_45 = "[URL-TRACKING \"\r\"] [/URL-TRACKING]"
"Surround word by LIS with 'L'
autocmd FileType mw let b:surround_76 = "[LI][B]\r[/B][/LI]"

" Read-only pdf through pdftotext
"autocmd BufReadPre *.pdf silent set ro
"autocmd BufReadPost *.pdf silent %!pdftotext -nopgbrk -layout -q -eol unix "%" - | fmt -w78

augroup filetypedetect
    au! BufNewFile,BufRead *.ch setf cheat
    au BufNewFile,BufRead *.liquid setf liquid
    au! BufRead,BufNewFile *.haml setfiletype haml
    autocmd BufNewFile,BufRead *.yml setf eruby
    autocmd BufRead,BufNewFile *.prawn set filetype=ruby
    autocmd BufRead,BufNewFile *.rsel set filetype=ruby
    autocmd BufNewFile,BufRead *.mxml compiler flex
    au BufNewFile,BufRead *.mxml set filetype=mxml
    au BufNewFile,BufRead *.as set filetype=actionscript
    au! BufNewFile,BufRead *.scpt setf applescript
    au! BufNewFile,BufRead *.applescript setf applescript
    au! BufNewFile,BufRead bash-fc-* setf sh
augroup END

augroup Vimperator
    au! BufRead vimperator-* nnoremap <buffer> ZZ :call FormFieldArchive() \| :silent write \| :bd \| :macaction hide:<CR>
augroup end
