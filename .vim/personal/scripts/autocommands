" Author:  iaj (tyberion@googlemail.com)
"
" NOTE:
" If you're editing this in Vim and don't know how folding works, type zR to
" unfold everything.  And then read ":help folding".

""" General Settings
augroup filetype
    " Remove all autocommands
    autocmd!
    autocmd FileType xml set omnifunc=xmlcomplte#CompleteTags
    autocmd FileType c set omnifunc=ccomplete#Complete
    au FileType text,svn setlocal tw=78 fo+=t
    au FileType mail,text let b:delimitMate_autoclose = 0
    autocmd FileType mail,tex set textwidth=79
    autocmd FileType mail,tex let g:textwidth=79
    autocmd BufNewFile,BufRead *.yml setf eruby
    autocmd BufRead,BufNewFile *.prawn set filetype=ruby
    autocmd BufRead,BufNewFile *.rsel set filetype=ruby
    autocmd BufNewFile,BufRead *.mxml compiler flex
    au BufNewFile,BufRead *.mxml set filetype=mxml
    au BufNewFile,BufRead *.as set filetype=actionscript
augroup END
autocmd BufRead training.txt if expand('%:p') =~ expand('~/Dropbox/training/')|set filetype=tlog

" All textfiles in ~/asciidoc are supposed to be of the type asciidoc
autocmd BufNewFile,BufRead ~/asciidoc/*.txt set filetype=asciidoc

" au VimEnter * map <C-w>o :ZoomWin<CR>
"""" Jump to last position in file
" Jump to last-known-position when editing files
" Note: The | character is used in Vim as a command separator (like ; in C)
autocmd BufWinEnter *
            \ if line("'\"") > 0 && line("'\"") <= line("$") |
            \ execute 'normal! g`"zvzz' |
            \ endif
" \   exe "normal g`\"" |
"au BufEnter * let &l:statusline = g:c_statusline
"Recognize folding settings nicely.
"autocmd BufWinLeave *.vim,*.html,*.htm,*.etc mkview
"autocmd BufWinEnter *.vim,*.html,*.htm,*.etc silent loadview
"""" Titlestring
" Set the title according to the current $PATH
au BufEnter * let &titlestring = Title()
fun! Title() "{{{
    return expand('%:p:h')
endfunction "}}}
"""" AUTOSET DIR TO WORKING FILE
" Switch the CWD to the current buffer.
" autocmd BufEnter * lcd %:p:h
""" Notational Velocity
augroup nv
    autocmd BufDelete */NVPlainTextEditingSpace/* silent :!echo 'tell application "Notational Velocity" to activate' | osascript
augroup end
""" XPT
augroup xpt
    autocmd FileType tex if expand('%:p') =~ expand('/rechnungen/')|normal ggihithare!<ESC>|endif
augroup end
""" Markdown
autocmd BufRead *.mkd  set ai formatoptions=tcroqn2 comments=n:&gt;
autocmd BufRead *.markdown  set ai formatoptions=tcroqn2 comments=n:&gt;
""" TypoScript
augroup typoscript
    autocmd FileType typoscript inoremap <buffer> {<cr> {}<left><cr>.<cr><esc>kA<bs><space><space><space><space>
    autocmd FileType typoscript setlocal commentstring=#%s
augroup END
""" Git
augroup git
    autocmd BufEnter COMMIT_EDITMSG exe "normal 1G" | set tw=70 ft=gitcommit
    autocmd BufDelete COMMIT_EDITMSG silent :!echo 'tell application "iTerm2" to activate' | osascript
augroup end
""" AppleScript
augroup applescript
    au! BufNewFile,BufRead *.scpt setf applescript
    " autocmd FileType applescript compiler ruby
    au! BufNewFile,BufRead *.applescript setf applescript
    autocmd FileType applescript setl makeprg=osascript\ -e\ 'tell\ application\ \"XCode\"\ to\ build\ transcript\ YES'
    autocmd FileType applescript map <leader>t :!osascript -e 'tell application "XCode" to launch'<cr>
augroup END

" QuickCursor using /var/folders/.../ for its files - so we
" Specific for Mail.app called ones...
au! BufRead /var/folders/*/Mail* set ft=mail
""" Pentadactyl/Firefox
" Force activation of Firefox after we edited a *pentadactyl file
"10:55:30   Axioplase_: iaj: hum. :exe ":autocmd BufDelete foo bar" . g:firefox . "to activate qux lol kthxbye"
autocmd FileType pentadactyl setlocal commentstring=\"%s
autocmd FileType vimperator setlocal commentstring=\"%s
autocmd BufDelete *pentadactyl* silent :!echo 'tell application "Firefox" to activate' | osascript
autocmd BufDelete *vimperator-* silent :!echo 'tell application "Firefox" to activate' | osascript
" au! BufRead /var/folders/*/*,pentadactyl-* nnoremap <buffer> ,d :silent write \| :bd<CR>
""" Mailingwork (.mw)
" Surround options for mailingwork stuff
" Surround word by TRACKING STUFF with '-'
autocmd FileType mw let b:surround_45 = "[LINK \'\r\'] [/LINK]"
"Surround word by LIS with 'L'
autocmd FileType mw let b:surround_76 = "[LI][B]\r[/B][/LI]"
""" SQL
" augroup SQL
"     autocmd BufRead,BufNewFile *.sql,*.php call vim_addon_sql#Connect('mysql,{'database':'vnc', 'user','vnc', 'password' : 'vnc'})
"     autocmd BufRead,BufNewFile *.sql,*.php setlocal completefunc=vim_addon_sql#Complete
"     autocmd BufRead,BufNewFile *.sql,*.php call vim_addon_sql#UI()
" augroup end
""" Create missing directory on BufWrite
augroup CREATE_MISSING_DIR_ON_BUF_WRITE
    autocmd BufWritePre * if !isdirectory(expand('%:h')) | call mkdir(expand('%:h'),'p') | endif
augroup end
"" vim: set filetype=vim : ""
"" vim:fdm=expr
"" vim:fde=getline(v\:lnum)=~'^""'?'>'.(matchend(getline(v\:lnum),'""*')-2)\:'='
