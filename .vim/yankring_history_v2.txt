Checking if you have ExtUtils::MakeMaker 6.31 ... Yes (6.48)Checking if you have ExtUtils::Install 1.46 ... Yes (1.50_01)Checking if you have Module::Build 0.28 ... Yes (0.3607)Growl::GNTP is up to date. (0.07),V
,V
},V
content.document.body.appendChild(s);,V
i can just get in the taste createElement(until the forth of us get here);,V
content.createElement(kk,V
icon,V
selectorGadget cannot be run selectorGadget ,V
sel,V
set     fas,V
  }:w,V
    fasdflas;,V
    fasdf sadf sadfl;,V
      ,V
    },V
      fasdfas;,V
    if ( fasdf ) {,V
    an,V
    animal.,V
" NeoComplCache """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""let neocomplcache_enable_at_startup=1let neocomplcache_smart_case=1let neocomplcache_enable_camel_case_completion=1let neocomplcache_enable_underbar_completion=1let neocomplcache_min_syntax_length=3let neocomplcache_lock_buffer_name_pattern = '\*ku\*'let acp_enableAtStartup=0"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" Mappings""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""",V
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""",V
inoremap <expr><C-e>  neocomplcache#cancel_popup() ,V
inoremap <expr><C-y>  neocomplcache#close_popup() ,V
inoremap <expr><BS> neocomplcache#smart_close_popup()."\<C-h>" ,V
inoremap <expr><C-h> neocomplcache#smart_close_popup()."\<C-h>" ,V
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>" ,V
inoremap <expr><CR>  neocomplcache#smart_close_popup() ."\<CR>" ,V
imap <expr><TAB> neocomplcache#sources#snippets_complete#expandable() ? "\<Plug>(neocomplcache_snippets_expand)" : pumvisible() ? "\<C-n>" : "\<TAB>" ,V
inoremap <expr><C-l>     neocomplcache#complete_common_string() ,V
inoremap <expr><C-g>     neocomplcache#undo_completion() ,V
nnoremap <silent><Space> :nohlsearch<Bar>:echo<CR>,V
noremap <C-E><C-E> :NERDTreeToggle<CR>,V
nnoremap <F12> :TlistToggle<CR>,V
source ~/tmp/xilo.vim,V
    animal.ABORT,V
    animal,V
    testFile,V
    anim.get,V
    anim.deleteAnimator(fasd);,V
",v
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" NeoComplCache """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""let neocomplcache_enable_at_startup=1let neocomplcache_smart_case=1let neocomplcache_enable_camel_case_completion=1let neocomplcache_enable_underbar_completion=1let neocomplcache_min_syntax_length=3let neocomplcache_lock_buffer_name_pattern = '\*ku\*'let acp_enableAtStartup=0"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" Mappings"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""nnoremap <F12> :TlistToggle<CR>noremap <C-E><C-E> :NERDTreeToggle<CR>nnoremap <silent><Space> :nohlsearch<Bar>:echo<CR>inoremap <expr><C-g>     neocomplcache#undo_completion() inoremap <expr><C-l>     neocomplcache#complete_common_string() imap <expr><TAB> neocomplcache#sources#snippets_complete#expandable() ? "\<Plug>(neocomplcache_snippets_expand)" : pumvisible() ? "\<C-n>" : "\<TAB>" inoremap <expr><CR>  neocomplcache#smart_close_popup() ."\<CR>" inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>" inoremap <expr><C-h> neocomplcache#smart_close_popup()."\<C-h>" inoremap <expr><BS> neocomplcache#smart_close_popup()."\<C-h>" inoremap <expr><C-y>  neocomplcache#close_popup() inoremap <expr><C-e>  neocomplcache#cancel_popup() ,V
            ich könnte dir schon sagen,V
set hidden;,V
kö,v
jkk,V
test,V
    testFile.,V
    animalConfig.ini,V
fas,V
" Remove ALL auto-commands.  This avoids having the autocommands twice when" the vimrc file is sourced again.autocmd!""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""">" General""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""">set nocompatible " get out of horrible vi-compatible modeset history=1000 " How many lines of history to rememberset cf " enable error files and error jumpingset clipboard+=unnamed set viminfo+=! " make sure it can save viminfoset isk+=_,$,@,%,#,- " none of these should be word dividers, so make them not beset updatecount=0 " disable swapset report=1set backupdir=~/.vim/backupset modeline""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""">" Theme/Colors""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""">set t_Co=256set background=dark " we are using a dark backgroundfiletype plugin indent on " load filetype pluginssyntax on " syntax highlighting oncolorscheme molokai""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""">" Vim UI""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""">set lsp=0 " space it out a little more (easier to read)set wildmenu " turn on wild menuset wildmode=list:longest,full " turn on wild menu with very large listset ruler " Always show current positions along the bottom set cmdheight=2 " the command bar is 2 highset mouse=nvset number " turn on line numbersset hid " you can change buffer without savingset backspace=2 " make backspace work normalset whichwrap+=<,>,h,l  " backspace and cursor keys wrap toset shortmess=atI " shortens messages to avoid 'press a key' prompt set report=0 " tell us when anything is changed via :...set noerrorbells " don't make noise" make the splitters between windows be blankset fillchars=vert:\ ,stl:\ ,stlnc:\ set nostartoflineset sidescroll=1set helpheight=25set showtabline=2 " always show tab line""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""">" Visual Cues""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""">set showmatch " show matching bracketsset mat=5 " how many tenths of a second to blink matching brackets forset hlsearch " highlight searched for phrasesset incsearch " highlight as you type you search phraseset listchars=tab:\|\ ,trail:.,extends:>,precedes:<,eol:$ " what to show when I hit :set listset so=10 " Keep 10 lines (top/bottom) for scopeset novisualbell " don't blinkset noerrorbells " no noisesset statusline=%F%m%r%h%w\ [TYPE=%Y]\ [POS=%04l,%04v][%p%%]\ [LEN=%L]set laststatus=2 " always show the status lineset wrapscan " searches wrap around the end of the fileset ignorecase " ignore case for searchingset smartcase " override ignore case if upper case are used""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""">" Text Formatting/Layout""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""">set fo=tcrqn " See Help (complex)set ai " autoindentset si " smartindent set cindent " do c-style indentingset cinkeys=0{,0},:,0#,!^Fset tabstop=4 " tab spacing (settings below are just to unify it)set softtabstop=4 " unifyset shiftwidth=4 " unify set expandtabset nowrap " do not wrap lines  "setlocal omnifunc=syntaxcomplete#Completeset cot+=menuone""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""">" Folding"   Enable folding, but by default make it act like folding is off, because folding is annoying in a>""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""">set foldenable " Turn on foldingset foldmethod=indent " Make folding indent sensitiveset foldlevel=100 " Don't autofold anything (but I can still fold manually)"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" CTags"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""let Tlist_Ctags_Cmd="/usr/bin/ctags" " Location of ctagslet Tlist_Sort_Type="name" " order by let Tlist_Use_Right_Window=1 " split to the right side of the screenlet Tlist_Compact_Format=1 " show small menulet Tlist_Exit_OnlyWindow=1 " if you are the last, kill yourselflet Tlist_File_Fold_Auto_Close=0 " Do not close tags for other fileslet Tlist_Enable_Fold_Column=0 " Do not show folding treelet Tlist_File_Fold_Auto_Close=1 " fold closed other treeslet Tlist_Auto_Update=1 " automatically update tags for new files"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" NeoComplCache """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""let neocomplcache_enable_at_startup=1let neocomplcache_smart_case=1let neocomplcache_enable_camel_case_completion=1let neocomplcache_enable_underbar_completion=1let neocomplcache_min_syntax_length=3let neocomplcache_lock_buffer_name_pattern = '\*ku\*'let acp_enableAtStartup=0"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" Mappings"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""nnoremap <F12> :TlistToggle<CR>noremap <C-E><C-E> :NERDTreeToggle<CR>nnoremap <silent><Space> :nohlsearch<Bar>:echo<CR>inoremap <expr><C-g>     neocomplcache#undo_completion() inoremap <expr><C-l>     neocomplcache#complete_common_string() imap <expr><TAB> neocomplcache#sources#snippets_complete#expandable() ? "\<Plug>(neocomplcache_snippets_expand)" : pumvisible() ? "\<C-n>" : "\<TAB>" inoremap <expr><CR>  neocomplcache#smart_close_popup() ."\<CR>" inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>" inoremap <expr><C-h> neocomplcache#smart_close_popup()."\<C-h>" inoremap <expr><BS> neocomplcache#smart_close_popup()."\<C-h>" inoremap <expr><C-y>  neocomplcache#close_popup() inoremap <expr><C-e>  neocomplcache#cancel_popup() """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" Autocommands"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""autocmd FileType python set complete+=k~/.vim/syntax/python.vim isk+=.,(autocmd FileType python setlocal omnifunc=pythoncomplete#Complete autocmd BufEnter * if &buftype != '' |setlocal stl=\ |endif,V
    anim,V
https://github.com/Shougo/neocomplcache.git,v
    anim.language,V
    a,V
      animal,V
    parser.equals(,V
    te,V
    testFile.getClass(),V
    ,V
    ,v
    System.setOut(faf);,V
    String faf = "fasdfas";,V
fasdfas,v
SuperTabDefaultCompletionType,V
supertab.what,V
 (default value: 0),v
let g:SuperTabLongestEnhanced (default value: 0),V
g:SuperTabLongestEnhanced (default value: 0),V
    testFile.getBytes(),V
    Animation,V
    k,V
    parser.wait(),V
      parser.,V
o,v
    parser.,V
    testFile.hash,V
set completeopt=longest:menu,v
    fasdf,V
    testFi,V
CTRL-E		Insert the character which is below the cursor.  {not in Vi},V
    foo.,V
    String foo = anim.getLanguage();,V
l,v
foobarfooapplefoobarfdoobar,V
k,V
,V
foo.18,V
    foo.endsWith(,V
system_profiler can be used to hold pretty much,V
 ,v
    let g:SuperTabCompletionContexts = ['s:ContextText', 's:ContextDiscover']    let g:SuperTabContextTextOmniPrecedence = ['&omnifunc', '&completefunc']    let g:SuperTabContextDiscoverDiscovery =        \ ["&completefunc:<c-x><c-u>", "&omnifunc:<c-x><c-o>"],V
D,v
let g:SuperTabDefaultCompletionTypeDiscovery = [,V
"set gdefaulk.defaultFontSize,V
t,v
a,v
    fa.a,V
context,v
let g:SuperTabDefaultCompletionType = "context",V
"let g:xptemplate_vars += "$email=tyberion@googlemail.com",V
