--- Log opened Fri Dec 10 09:57:51 2010
09:57 rudi_s: Tut mir leid, war etwas müde .. Dafür bin ich jetzt schon früh auf ;-)
--- Log closed Fri Dec 10 10:03:09 2010
--- Log opened Fri Dec 10 12:01:41 2010
12:01 iaj: hahaa
12:01 iaj: Wise choice
12:02 rudi_s: ;-) (Kommt ja auch recht selten vor ^^)
12:02 iaj: Hhahha, jep :-)
12:03 rudi_s: :-)
--- Log closed Fri Dec 10 12:08:09 2010
--- Log opened Fri Dec 10 13:13:49 2010
13:13 --- Query: Starting query with rudi_s on FreeNode
13:13 iaj: hi
13:13 rudi_s: Hi.
13:18 iaj: Na Simon
13:18 iaj: :-)
13:18 iaj: Du ich hab mal 2 Fragen...
13:18 rudi_s: ?
13:18 iaj: Ist Simon nicht dein Name
13:18 iaj: dann sorry :)
13:18 rudi_s: Doch.
13:19 rudi_s: ;-)
13:19 iaj: :-P Dann doch nicht.
13:19 iaj: hihi....
13:19 iaj: Geht um nen SVN Repo
13:19 iaj: Kennste dich da gut aus?
13:19 rudi_s: Gut nicht, aber ein bisschen.
13:19 rudi_s: Hab SVN seit 3 Jahren oder so nicht mehr verwendet, aber ein bisschen was weiß ich noch.
13:19 iaj: Wenn ich eine Datei auf den Stand (wie er gerade commited wurde)
13:20 iaj: bzw der letzte Stand im Online Repo
13:20 iaj: und alle Änderungen die ich selbst gemacht habe
13:20 iaj: Will ich verwerfen
13:20 rudi_s: svn revert
13:26 rudi_s: (Sorry, bin mal kurz weg, Mittagessen. Bis später.)
13:27 iaj: nur svn revert?
13:27 iaj: dann heult er doch dennoch rum ;)
--- Log closed Fri Dec 10 13:33:05 2010
--- Log opened Fri Dec 10 14:14:17 2010
14:14 rudi_s: svn help revert
14:14 rudi_s: Und was sagt er? Und was sagt svn status
--- Log closed Fri Dec 10 14:20:05 2010
--- Log opened Fri Dec 10 14:28:04 2010
14:28 iaj: sec hab grad n anderes problem zu solven
14:28 rudi_s: Klar.
14:28 iaj: angenommen in zshrc hab ich ne function foo { }
14:28 iaj: und will nun den ersten parameter abfragen ob der 1 ist
14:28 rudi_s: [[ $1 -eq 1 ]] sollte gehen.
14:28 iaj: [ $1 -eq 1 ] ?
14:28 iaj: doppelte [[ ?
14:28 rudi_s: Ja.
14:30 iaj: wie würde ein else aussehen?
14:30 rudi_s: if [[ .. ]]; then .. else .. fi
14:30 iaj: ist das normal dass  nach function {  <CR> kein indent level erfolgt ?
14:30 iaj: thanks :)
14:31 rudi_s: function brauchst du gar nicht.
14:31 rudi_s: name() {
14:31 rudi_s:     ...
14:31 rudi_s: }
14:31 rudi_s: brauchst du gar nicht = falsch
14:31 iaj: ??
14:32 rudi_s: Es heißt nicht function x() { ... } sondern nur x() { .. }
14:33 iaj: Ahhh
14:33 iaj: Ok das macht Sinn :)
14:33 iaj: Und wird auch richting indented.
14:33 rudi_s: ;-)
14:33 iaj: gibt's nen elseif?
14:33 iaj: oder muss ich da n extra block aufziehen
14:34 iaj: if bed1  elseif bed2  else
14:34 rudi_s: elif IIRC
14:37 iaj: hmm irgendwas scheint nicht zu stimmen
14:37 iaj: http://paste.pocoo.org/show/303134
14:37 iaj: wenn ich zsh neustarte heulter rum :)
14:39 rudi_s: Und was sagt er?
14:39 iaj: naja
14:40 iaj: /Users/iaj/.zshrc:1: condition expected: $1
14:40 iaj: das ergibt für mich nich viel Sinn
14:40 rudi_s: Schau dir mal deine - an.
14:40 iaj: warum Zeile 1 
14:40 iaj: - ?
14:40 rudi_s: - eq
14:40 iaj: ops
14:40 iaj: /Users/iaj/.zshrc:152: parse error near `then'
14:41 iaj: das elif
14:41 rudi_s: Schau mal auf deine Leerzeichen.
14:41 iaj: bah
14:41 iaj: da schaut er drauf?
14:41 rudi_s: Ja, vor ]] muss eins sein.
14:42 iaj: :-(  Sorry
14:42 rudi_s: np ;-)
14:43 iaj: :-))
14:43 iaj: /Users/iaj/.zshrc:152: parse error near `then'function db { cd /Users/iaj/Dropbox/ }
14:43 iaj: ops
14:43 iaj: function db { cd /Users/iaj/Dropbox/ }
14:44 iaj:  die kann ich mir dann alle ersetzen durch db() { ... } 
14:44 rudi_s: Ja.
14:46 iaj: Kurze Frage
14:46 iaj: function paste-xclip; {
14:46 iaj: da steht jetzt ein ; dahinter
14:46 iaj: zle -N paste-xclip
14:46 rudi_s: Das ; macht da keinen Sinn.
14:47 iaj: Danke hmm wie das wohl dahin gekommen ist
14:49 iaj: Wie hoch hast du deinen KEYTIMEOUT gesetzt?
14:49 rudi_s: Hab ich nicht verändert.
14:52 iaj: benutzt du das search-backwards manchmal?
14:53 iaj: zle -N paste-xclip
14:53 iaj: history-incremental-search-backward 
14:53 iaj: meinsch..
14:53 rudi_s: Nein, nur history-beginning-search-backward in ner eigenen Funktion.
14:53 rudi_s: Ja.
14:55 iaj: Okay :)
--- Log closed Fri Dec 10 15:01:12 2010
--- Log opened Fri Dec 10 15:40:15 2010
15:40 iaj: Was heisst ein ?   in svn status?
15:40 rudi_s: Wird nicht von svn getracked.
15:40 iaj: und wie kann ich einen Ordner rausnehmen
15:40 iaj: hmm
15:40 rudi_s: revert
15:41 iaj: also dass der nie getrackt wird?
15:41 iaj: ich hab aber auch ein A bei nem file
15:41 iaj: wieso wird das automatisch getrackt
15:41 rudi_s: Das heißt hinzugefügt.
15:41 rudi_s: Weil du das hinzugefügt hast.
15:41 rudi_s: Da gibts irgend ein svn: Attribut svn:ignore oder so.
15:41 iaj: Ahhh dh der bin Ordner wurde so deklariert
15:42 iaj: vorher schon
15:42 iaj: nicht getrackt zu werden
--- Log closed Fri Dec 10 15:47:12 2010
--- Log opened Fri Dec 10 15:56:56 2010
15:56 iaj: kann ich irgendwie das clipboard mit operationen verbinden?
15:57 iaj: echo $BUFFER | pbcopy   würde zb gehen
15:57 iaj: aber kann ich dass auch mit motions verknüpfen?
15:57 rudi_s: Motions? Du kannst es in einer zle Funktion aufrufen.
15:57 iaj: Was ich vorhabe zb
15:58 iaj: yy im Commandmdoe zu binden
15:58 iaj: dass er die akuelle zeile ins clipboard nimmt
15:58 rudi_s: Mit ner eigenen zle-Funktion sollte das gehen.
15:58 iaj: ich sehe das y an vi-yank gebunden ist
15:58 iaj: kann ich die irgendwo einsehen?
15:59 rudi_s: Ich denke nicht, die ist denke ich mal in C und intern.l
16:00 rudi_s: Aber schau dir mal meine my-vi-history-beginning-search-backward() an. Mit der (und der man-page) solltest du es hinbekommen.
16:00 iaj: :-( dann kann ich also nur den ganzen Buffer kopieren
16:00 rudi_s: In $BUFFER sollte die aktuelle Zeile stehen.
16:01 iaj: Ja die aktuelle Zeile
16:01 rudi_s: Achso, du willst es mit movements kombinieren .. jetzt versteh ichs.
16:01 rudi_s: Hm. Keine Ahnung ob das geht.
16:01 iaj: genau... 
16:01 iaj: yank-pb() { echo $BUFFER | pbcopy }
16:03 rudi_s: Frag mal in #zsh, hab in der man-page nichts gefunden. Was du bräuchst wäre Zugang zum kill buffer.
16:03 rudi_s: Hm, vielleicht killring?
16:03 rudi_s: Hm, $CUTBUFFER?
16:04 iaj: ok mit yy hau ich's nun ins clipboard...
16:04 rudi_s: Hm, ne scheint nicht zu gehen.
16:04 rudi_s: Hm, momemnt.
16:05 rudi_s: $CUTBUFFER scheint zu gehen.
16:06 iaj: Wie genau soll ich das verwenden?
16:07 iaj: bindkey '^P' my-vi-history-beginning-search-backward
16:07 iaj: ops
16:08 rudi_s: Hm, ne, das geht nicht. Ich kann zwar ne eigene vi-yank Funktion bauen, aber das Ergebnis muss ja nach dem Movement verwendet werden.
16:09 rudi_s: Keine Ahnung wie das geht.
16:09 iaj: Problem ist jetzt nurnoch dass wenn ich yy mach sie zwar im System Clipboard ist aber nicht mehr im VIM Buffer
16:09 iaj: muss ich's in den $CUTBUFFER einlesen?
16:10 iaj: wie kann ich echo 'foo' an 2 sachen weiterleiten?
16:10 rudi_s: zle copy-region-as-kill "$BUFFER" sollte gehen.
16:10 iaj: was macht das?
16:10 rudi_s: Geht nicht so einfach. Aber was spricht gegen echo foo | a; echo foo | b.
16:10 rudi_s: man zshall | less -p CUTBUFFER
16:12 iaj: Yeah es funktioniert :)
16:12 rudi_s: ;-)
16:12 iaj: aber habs mit der zle funktion gmeacht
--- Log closed Fri Dec 10 16:18:12 2010
--- Log opened Fri Dec 10 16:46:10 2010
16:46 iaj: noch da?
16:46 rudi_s: Klar.
16:46 iaj: Um nen File nicht länger in der Version control zu haben
16:46 iaj: was tu ich da?
16:46 iaj: svn remove file?
16:46 rudi_s: Ja, aber das löscht es. Also vorher ne Kopie anlegen.
16:47 iaj: svn: Use --force to override this restriction
16:47 iaj: svn: '.classpath' has local modifications
16:47 iaj: also mit --force?
16:47 rudi_s: Denke ja.
16:48 rudi_s: Aber das löscht die Datei!
16:48 iaj: jo hab ne sicherungskopie gemacht
16:48 iaj: und sie wieder reingelegt
16:48 iaj: wasn akt :\
16:48 iaj: iaj(8638)::~/Documents/workspace/AnimalScript2⤴  svn st                                                                                                    (AnimalScript2:15610:svn) M      .
16:48 iaj: D       TestNewParser.java
16:48 iaj: A  +    src/TestNewParser.java
16:48 iaj: D       .classpath
16:48 rudi_s: Must natürlich vorher commiten.
16:49 iaj: dieses erste 'M .'
16:49 rudi_s: Steht das in der vorderen Spalte?
16:49 iaj: das M
16:49 iaj: nein in der zweiten
16:49 iaj: was sagt das?
16:49 rudi_s: Hm, keine Ahnung .. svn ist zu lange her (und zu schlecht ...)
16:50 iaj: svn commit macht lokale änderungen oder im onlinerepo?
16:50 iaj: wahrscheinlich gibt's hier nur onlinerepo
16:50 rudi_s: Online.
16:50 iaj: :p
16:50 rudi_s: Ja.
16:50 rudi_s: Aber warum verwendest du eigentlich SVN?
16:50 iaj: Weil ich's für diese Projekt brauche
16:50 iaj: :(
16:50 iaj: benutzen das alle da
16:50 rudi_s: git svn?
16:51 iaj: hab Angst damit was zu zerstoeren 
16:51 iaj: hhaha
16:51 iaj: benutzt du das?
16:51 rudi_s: Klar, immer. Würde nie mehr SVN benutzen.
16:51 rudi_s: So lange ihr nichts verücktes mit branches in SVN macht, sollte das keine Problem machen.
16:52 rudi_s: (Weil SVN Branches nicht wirklich kann .. konnte.)
16:52 iaj: Nee machen wir nicht..
16:52 iaj: fatal: Not a git repository (or any of the parent directories): .git
16:52 rudi_s: Dann nimm git svn und sei happy ;-)
16:52 iaj: Ist das nicht schwer?
16:52 rudi_s: Nein. Warum sollte es das?
16:52 iaj: kA klingt wie ne Mischung aus Beidem
16:52 iaj: :-D
16:52 rudi_s: man git-svn
16:52 iaj: Und Kreuzungen sind immre schlech
16:52 iaj: t
16:52 rudi_s: Les dir die man-page einfach mal durch.
16:54 iaj: Hmmm okay.
--- Log closed Fri Dec 10 17:00:12 2010
--- Log opened Fri Dec 10 17:03:06 2010
17:03 iaj: Mach gerade ein git-svn clone ^^
17:03 rudi_s: ;-)
17:03 iaj: git svn rebase   führt doch keine Operationen nach aussen durch oder?
17:03 rudi_s: Außer das es neue Versionen fetched nicht, ein.
17:03 rudi_s: *nein
17:05 iaj: W: -empty_dir: resources/JavaIterativeStraightIntSelection_complexity_en.txt    ist das normal?
17:05 rudi_s: Ja. Heißt er hat ein leeres Verzeichnis entfernt weil Git die nicht versionieren kann.
17:07 iaj: Boah, das dauert
17:07 rudi_s: Ja, SVN ist schlecht ;-)
17:07 iaj: Wird das auch weiterhin so lahm?
17:07 iaj: diese r12812 spiegeln die Änderungen wieder?
17:08 rudi_s: Nein. Der Grund warum das so langsam ist, das SVN ein total mieses Protokoll hat .. deshalb dauert das clonen so lange.
17:08 rudi_s: Danach muss er ja nur neue Änderungen runterladen.
17:08 rudi_s: Ja. Revision.
17:08 iaj: Hm, okay, bin mal gespannt
17:08 iaj: :-)
17:09 iaj: schade dass die Befehle denen von git abweichen
17:09 rudi_s: Welche Befehle?
17:10 iaj: statt git commit git dcommit
17:10 iaj: git rebase statt git pull
17:11 rudi_s: Nein.
17:11 rudi_s: Du arbeitest normal mit gits Befehlen.
17:11 rudi_s: Du machst nur am Anfang ein git svn fetch (oder git svn rebase).
17:11 rudi_s: Und am Ende, wenn du alles mögliche mit git ganz normal committet hast, ein git svn dcommit.
17:12 rudi_s: Das überträgt dann die Commits an den SVN Server>
17:12 rudi_s: *.
17:13 iaj: Ahh ich verstehe.... Ok.. aber wenn ich täglich meine Änderungen schon im SVN haben will
17:13 iaj: mach ich immer dcommit
17:13 rudi_s: Ja, sozusagen am "Ende" der Arbeit.
17:13 rudi_s: Aber nur Sachen die schon mit git commit committet wurden, kannst du mit git svn dcommit für SVN committen!
17:14 iaj: okay git dcommit macht sozusagen alles was vorher gemacht wurde
17:14 iaj: normal macht man ja git add , git commit (fuer lokales)
17:14 rudi_s: git _svn_ dcommit übergibt deine commits an SVN.
17:14 rudi_s: Das machst du alles weiterhin.
17:14 iaj: und dann git push (ums Änderungen auf dem Server zu machen)
17:14 iaj: oder?
17:14 rudi_s: Nur wenn du einen (oder mehrere) Commits fertig hast, dann machst du git _svn_ dcommit.
17:15 rudi_s: Nein.
17:15 iaj: ok
17:15 rudi_s: Also, es ist ganz einfach.
17:15 rudi_s: Am Anfang des Arbeitstags: git _svn_ fetch (oder git svn rebase), dann wie üblich mit git arbeiten, git add -p, git commit, git add -p, git commit, ...
17:16 iaj: Okay
17:16 rudi_s: Dann wenn du was ans SVN übermitteln willst, git _svn_ rebase (damit deine Änderungen sicher "oben" liegen, SVN kann ja nicht mergen) und dann ein git _svn_ dcommit.
17:16 rudi_s: (Das git svn rebase kannst du normalerweise auch weglassen, git svn sagt dir, wenn was falsch ist.)
17:17 iaj: ok... nun hab ich's glaub ich verstanden
17:17 iaj: wenn ich der einzige bin der an dem Repo feilt
17:17 iaj: kann ich mir git svn rebase sparen
17:17 iaj: oder?
17:17 rudi_s: Ja. Dann brauchst du nur git svn fetch (oder wenn du ganz allein bist, brauchst du selbst das nie) und dann git svn dcommit.
17:18 rudi_s: Gibt auch noch git svn commit, aber das macht irgendwas anderes!
17:18 iaj: Hmmm okay... klingt ja eigentlich ganz easy - eigetnlich
17:18 iaj: aber es wird schon noch seine Schatten zeigen
17:18 iaj: haha
17:18 rudi_s: Hehe, funktioniert eigentlich ganz gut
17:18 iaj: git add -p... das -p sorgt nur für ne Ausgabe im Terminal?
17:19 rudi_s: Manchmal gibt es ein paar Probleme, aber nur sehr selten.
17:19 rudi_s: man git-add 
17:19 iaj: wenn ich nun nen file aus der Versionscontrolle rausham will.. 
17:20 rudi_s: Wie üblich in git, git rm
17:20 iaj: muss ich's auch sichern?
17:20 rudi_s: man git-rm ...
17:20 rudi_s: Aber klar, wird von git gelöscht, gibt aber bei git rm ne Option.
17:21 iaj: ok.. ja ich wills nur aus der Versionskontrolle rausnehmen
17:21 iaj: git rm <file> --cached   war's wohl
17:22 rudi_s: Jep.
17:23 iaj: wenn ich git commit -m 'foo'; git svn rebase; mache das sollte doch garnicht funzen oder?
17:23 iaj: wenn ich ne datei removed hab
17:23 rudi_s: Warum nicht?
17:23 rudi_s: Das git svn rebase sorgt nur dafür, dass deine lokalen git Änderungen "direkt auf" den SVN commits liegen.
17:23 rudi_s: Und keine Verzweigungen sind.
17:25 iaj: Ahh... okay...  also ich steh nur etwas auf dem Schlacuh... normalerweise werden die Änderungen nach oben mit git push übertragen oder?? Diesmal commite ich nur und wenn ich git svn dcommit mache dann werden die Änderungen auf das SVN Repo übertragen?
17:25 rudi_s: Jep. Genau das ist es.
17:25 rudi_s: git svn dcommit ist sozusagen das SVN Äquivalent zu git push.
17:26 iaj: Ok.. noch was wenn ich ne Datei habe die ich bei mir geaendert haben will, aber sie ignorieren will (also nicht adden und commiten)
17:26 rudi_s: Dann commitest du sie einfach nicht.
17:26 rudi_s: *addest
17:26 rudi_s: In git machst du auf jede Datei git add (oder auf alle).
17:26 iaj: Aber sie lag urspruenglich im Repo
17:26 rudi_s: Achso.
17:26 rudi_s: Und?
17:26 iaj: aber wird von Eclipse geaendert
17:27 iaj: jetzt will ich meine lokale Datei aber nicht hochcommitten sondern er soll se einfach ignorieren.. und ne andere Version bei mir lassen
17:27 rudi_s: Moment, willst du nur die Änderungen ignorieren oder die Datei aus dem Repository entfernen?
17:27 iaj: Änderungen ignorieren egtl... aber jetzt hab ich sie schon entfernt  :-D
17:27 rudi_s: Die Frage ist halt, ob dann ein anderer ohne Datei noch das Eclipse-Projekt verwenden kann.
17:28 iaj: Hmmm. ja vermutlich eher nicht... wie komm ich zurück zum Startpunkt? also verwerf meinen git commit? Und stell Datei wieder her?
17:28 iaj: muss sie wohl nur ignoriere
17:28 iaj: n
17:28 iaj: irgendwie :D
17:29 rudi_s: Kommt darauf an wie dein Log ausschaut. Schon die Änderung ins SVN gepushed?
17:29 iaj: nur git remove, git commit gemacht
17:29 iaj: commit a160a30a59abc560fcbfb66c40c218e96c9da854
17:29 iaj: war meiner
17:29 rudi_s: Ignorieren von geänderten Dateien kann git leider nicht! Das heißt du musst einfach damit leben, das git status sie dir als geändert anzeigt :-/
17:29 rudi_s: Ist das der neueste?
17:30 iaj: commit 02db53281d9f1db6109c8126e9c691ad39420f1a
17:30 iaj: der davor
17:30 rudi_s: Dann einfach git reset HEAD~
17:30 iaj: hmmmm
17:30 iaj: Aber dann macht doch ein git commit ein update der datei oder?
17:31 rudi_s: Nein.
17:31 rudi_s: Nur wenn du es mit git add hinzufügst.
17:31 rudi_s: (Das ist ja eins der super Sachen an git, du kannst lokale Änderungen einfach da lassen und musst sie nicht committen.)
17:31 iaj: # Untracked files:
17:31 iaj: #   (use "git add <file>..." to include in what will be committed)
17:31 iaj: #
17:31 iaj: #       bin/
17:32 iaj: der bleibt auch da oder? Kann ichd en ignorieren
17:32 rudi_s: Ja?
17:32 rudi_s: Ja.
17:32 rudi_s: Solange du nichts git addest, lässt git jede Änderung in Ruhe.
17:32 iaj: Ahh ok.. kann ich den auch irgendwie da nicht mehr mitaufführen?
17:33 rudi_s: Moment mal.
17:33 rudi_s: Der ist ja nicht committed.
17:33 rudi_s: Denn kannst du ignorieren.
17:33 rudi_s: echo bin >> .gitignore
17:33 iaj: ahh danke
17:34 rudi_s: Aber wenn der committet wurde und es lokale Änderungen gibt, dann kannst du die nicht ignoieren.
17:34 rudi_s: *ignorieren
17:34 iaj: Lol das ist ja auch lustig
17:34 iaj: nun muss ich die .gitignore 
17:34 iaj: auch ignorieren :D
17:34 rudi_s: Hehe ja. echo .gitignore >> .gitignore
17:34 rudi_s: Das ist kein Problem.
17:35 iaj: ok gefällt mir jetzt schon besser als svn
17:35 iaj: Jetzt kommt gleich der Test der Tests
17:36 iaj:  2 files changed, 45 insertions(+), 6 deletions(-)
17:36 rudi_s: ;-)
17:36 iaj: 45 insertions?  das heisst anzahl der zeilen?
17:36 rudi_s: Jep.
17:36 iaj: also git commit -m ist durch
17:36 iaj: nun kann ich git svn dcommit
17:36 iaj: vollziehen oder?
17:37 rudi_s: Am besten erstmal git svn fetch
17:37 rudi_s: Dann gitk --all (oder was ähnliches) um zu schauen ob alles passt.
17:37 rudi_s: master muss oberhalb von git-svn (oder trunk oder wie es heißt) sein und darf kein Zweig sein.
17:37 rudi_s: Dann git svn dcommit -n, das zeigt dir was comittet werden würde.
17:38 rudi_s: Und wenn das eine Änderung zeigt, dann sollte git svn dcommit kein Problem sein und funktionieren.
17:38 iaj: iaj(8714)::~/Documents/workspace/AnimalScript2⤴  gitk --all                                                                                                         (master:git-svn)
17:38 iaj: [5] 44131
17:38 iaj: da steht nur [5] 44131
17:38 rudi_s: Das passt. gitk sollte aufgehen.
17:39 iaj: ne da is nix aufgeganen :D
17:39 iaj: gitx tut aber
17:39 rudi_s: Dann nimm gitx.
17:39 rudi_s: gitx --all (oder so)
17:39 rudi_s: Das --all ist wichtig, damit du alle branches siehst.
17:40 iaj: ist nur ein branch
17:40 iaj: wies aussieht
17:40 iaj: kann oben all branches angeben
17:40 iaj: aber nur ein zweig
17:40 iaj: und ich steh ganz oben
17:40 rudi_s: Hm, git-svn oder trunk oder so muss auch irgendwo stehen.
17:42 iaj: https://skitch.com/iiaj/rrm1y/fullscreen
17:42 rudi_s: Skitch geht bei mir leider nicht .. (kein JavaScript).
17:42 iaj: haha... :)
17:43 rudi_s: Was sagt git branch -av?
17:43 iaj: http://dl.dropbox.com/u/3284568/Picture1.png
17:44 iaj: * master          c47d6b9 Minor modifications
17:44 iaj:   remotes/git-svn 02db532 Updates to packages
17:44 rudi_s: Okay, sieht gut aus.
17:44 rudi_s: Du musst nur sicherstellen, das master "oberhalb" von git-svn ist.
17:44 rudi_s: Ah, habs gerade auf dem Bild gesehen. Passt perfekt.
17:45 iaj: Ahhhh
17:45 iaj: AHHHHH
17:45 iaj: jetzt hab ich's gecheck
17:45 iaj: t
17:45 iaj: :-)
17:45 iaj: iaj(8718)::~/Documents/workspace/AnimalScript2⤴  git svn dcommit -n                                                                                                 (master:git-svn)
17:45 iaj: Cannot dcommit with a dirty index.  Commit your changes first, or stash them with `git stash'. at /opt/local/libexec/git-core/git-svn line 499
17:45 rudi_s: Ah, okay.
17:45 rudi_s: git stash
17:46 rudi_s: (Das braucht git svn falls Probleme auftreten, hab ich ganz vergessen.)
17:46 rudi_s: Dann git svn dcommit -n
17:46 rudi_s: Und dann git stash apply
17:46 rudi_s: Dafür ist ein alias super:
17:46 rudi_s: ss = stash save
17:46 rudi_s: ssk = stash save --keep-index
17:46 rudi_s: sa = stash apply
17:47 rudi_s: Dann noch alias g=git und du bist richtig schnell (kannst dir ja mal mein gitconfig anschauen).
17:48 iaj: oh anstatt mv a b lieber git mv a b machen hab ich gerade gelernt :)
17:49 iaj: Ja mach ich gleich mal
17:49 rudi_s: Ja, ist schneller. Funktional aber gleich.
17:49 rudi_s: Also git mv a b ist eigentlich nur mv a b; git rm a; git add b;
17:49 iaj: was genau macht denn git stash.. kann man das in leichte worte fassen :D
17:50 rudi_s: Das speichert alle lokalen Änderungen und entfernt sie aus deinem Workspace.
17:50 rudi_s: Das apply baut sie dann wieder ein.
17:50 iaj: iaj(8738)::~/Documents/workspace/AnimalScript2⤴  git svn dcommit -n                                                                                                 (master:git-svn)
17:50 iaj: Committing to http://interaction.nu.tu-darmstadt.de/svn/AnimalRelated/AnimalScript2 ...
17:50 iaj: diff-tree 443e243e85a0161e78fd62a20b355e8fdfcbbdaf~1 443e243e85a0161e78fd62a20b355e8fdfcbbdaf
17:50 iaj: hats geklappt?
17:50 iaj: hmmm das war jetzt nur ein test oder?
17:51 rudi_s: Was daran super ist, das kann mergen. Will heißen du arbeitest gerade an was, willst aber die neusten Änderungen aus dem Repository haben, machst git stash; dann git fetch; git merge; und dann git stash apply und das baut deine lokalen Änderungen richtig ein.
17:51 rudi_s: Ja, sieht gut aus.
17:51 rudi_s: Nun ohne -n und dann wird es wirklich committet.
17:52 iaj: http://pastebin.com/SmPvfHhT
17:52 iaj: Ok das ist allerdings super... naja muss mich mal dran gewöhnen :)
17:53 rudi_s: Sieht gut aus.
17:53 iaj: ui
17:53 iaj: es hat geklappt
17:53 rudi_s: Nun noch ein git stash apply (oder g sa mit Alias) und alles sollte wieder so wie vorher sein.
17:53 rudi_s: :-D
17:53 iaj: hab garkein git stash gebracuht gehabt
17:53 iaj: musste noch git rm auf /TestNewParser machen
17:54 rudi_s: Oder so.
17:54 rudi_s: Aber nutze git stash, das ist wirklich super. 
17:54 iaj: alle modified sachen?
17:54 iaj: Meinst du mit lokalen Änderungen
17:54 rudi_s: Ja.
--- Log closed Fri Dec 10 18:00:12 2010
--- Log opened Fri Dec 10 19:05:42 2010
19:05 iaj: Also vielen Dank für die ganzen Erklaerungen, im Grunde kann ich mir nun alles zu GIT aneignen und komme auch im SVN -REPO klar oder?
19:05 rudi_s: Kein Problem ;-)
19:06 rudi_s: Ja, sollte ohne Probleme funktionieren.
19:06 iaj: 'Sollte' :-)
19:06 rudi_s: Versprechen kann ich es natürlich nicht ;-)
19:06 iaj: :-(((((((((
19:06 iaj: :-)
19:06 rudi_s: ;-)
19:09 iaj: Kannst du mir ne Lektuere für GIT empfehlen?
19:09 rudi_s: progit
19:09 iaj: http://progit.org/
19:09 iaj: dat da?
19:09 rudi_s: Jep.
19:11 iaj: würde sich solch ein GIT Repo auch für nen Webserver anbieten?
19:11 rudi_s: Prinzipiell klar. Aber pushen sollte man ne Homepage oder so besser mit rsync ist einfacher. Aber lokal hab ich z.B. alle meine Hompages in git repos.
19:12 rudi_s: Bin mal wieder für ne Zeit weg .. Abendessen, bis später.
19:13 iaj: Hehhe Ok:-) Danke !
19:13 iaj: Bis später
--- Log closed Fri Dec 10 19:19:12 2010
--- Log opened Fri Dec 10 19:38:32 2010
19:38 iaj: Top Buch
--- Log closed Fri Dec 10 19:44:12 2010
