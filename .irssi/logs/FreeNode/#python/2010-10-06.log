--- Log opened Wed Oct 06 15:13:53 2010
15:13 --- Users 738 nicks [0 ops, 0 halfops, 0 voices, 738 normal]
15:14  hemanth: Yhg1s, how does once decided which is right for what? any general rule or it comes by practice
15:14  kerio: Alberth: man shells says so
15:14  Yhg1s: hemanth: logic. You have a set of distinct shells. order doesn't matter. duplicates don't matter. Use a set.
15:14  Hadronn: Yhg1s:yes, I understand that much, if you look at line 86. you can see I've created another root window using Toplevel()
15:15  Yhg1s: Hadronn: sure.
15:15 --- Channel #python was synced in 79 seconds
15:15  Yhg1s: Hadronn: but that's not the one you're seeing before you have a button :)
15:15  hemanth: Yhg1s, but sets will remove duplicates right?
15:15  Alberth: kerio: that manpage came with your OS, no guarantee that a different OS ships the same manpage
15:15  kerio: that was a linux manpage
15:15  Yhg1s: hemanth: so?
15:15  kerio: good point, bsd says # is a comment
15:15 * kerio hides in shame
15:16  Yhg1s: kerio: does your manpage actually say # is *not* a comment?
15:16  kerio: the linux man said that it was a list of shells, period
15:16  Yhg1s: so, "no".
15:16  kerio: the BSD File Formats Manual says # is a comment
15:17  amanita_: :-(|)
15:18  hemanth: Yhg1s,nothing, if its again iterated as it will be to check if its installed or not; say if it were to be a list then it would have duplicates then more unwanted runs; as its set not duplicates so relatively we will save runs?
15:18  Hadronn: Yhg1s: I don't understand.. I can see I have made a root window, I've packed a button into it, and that button has a callback that runs Toplevel(), which I read makes another window much like root.. I expected the Toplevel() piece of code would only be called once I pressed the button but I tested commenting it out and it is the piece of code generating the second window at program launch.
15:18  Yhg1s: hemanth: sorry, I don't understand what you're saying.
15:18  kerio: Hadronn: create the toplevel() but don't show it
15:18  kerio: *Toplevel
15:18  kerio: when you create your application
15:18  kerio: then show it
15:18  Yhg1s: Hadronn: ach so.
15:19  Yhg1s: Hadronn: your problem is that you're doing 'command=self._dgMake(master)'
15:19  Yhg1s: Hadronn: that doesn't call self._dgMake(master) when you click the button. That calls self._dgMake(master) when you *create* the button.
15:19  hemanth: Yhg1s, i felt sets are better now, as they would filter duplicates and that in turn would avoid repeated checks, say if its looped to check if it exists
15:20  Brumhart: Hi, can someone help me, what kind of file type i need, and how can i modify the file in python to create a password database, that i can use later for like login and such, and even i could add to it, and remove users from it? I could make a password checker with a predefined database, but i dont know how to make a file that sits on my hardrive and i use it as a user data storage that i can edit?
15:20  Yhg1s: Hadronn: you need to pass a function that, when called, calls self._dgMake(master), and pass that. Or, make self._dgMake not take 'master' as an argument (but rather use self._master) and just pass self._dgMake as the argument.
15:21  Yhg1s: Brumhart: JSON is a convenient format for storing data that's also easily edited by hand.
15:21  Hadronn: Yhg1s: thank you so much, I knew it would be something simple : )
15:22  Dieterbe: Yhg1s: let me put it differently.  i need to know the offset of each single timestamp, to account for javascript treating utc as localtime.  I've checked time.altzone but I don't even get how it works, as the offset depends on which timestamps (ie for some timestamps the offset is bigger due to daylight saving)
15:23  Yhg1s: Dieterbe: I'm not sure how that makes it clearer. Perhaps you should be more specific, though. What is it you *have*, exactly, as the repr() of the value in Python, and what is it you *want*?
15:23  Brumhart: Yhg1s: Never heard of that format before. What program creates it?
15:24  Alberth: Brumhart: the json module in the std library
15:24  Yhg1s: Brumhart: no program in particular, just anything that uses JSON. The json module can read and write it for you.
15:24  hemanth: Yhg1s, i meant http://paste.pocoo.org/show/271726/
15:24  Yhg1s: hemanth: I don't understand what you are asking, sorry.
15:25  hemanth: Yhg1s, about data-structures list vs set;
15:25  Yhg1s: hemanth: perhaps you should try to actually phrase a complete question.
15:25  Yhg1s: because I don't understand what you are trying to ask.
15:25  Brumhart: I see, then i think i should still stay with the basic things, since i have no idea, how to use json module, and how to implement my user database in it. Im pretty new to Python, i just had an idea, and i know im pretty close to it, i just dont see how to advance. :) But thanks for the help :)
15:26  saju_m: I have a list with one object in it l = [<Entity: name=Desktops>] and deepcopy(l) is working
15:26  saju_m: I added a new object to the list l = [<Entity: name=Desktops>,<convirt.core.platforms.kvm.KVMNode.KVMNode object at 0xa5f060c>], now deepcopy(l) not working and showing error http://dpaste.com/253926/
15:26  Yhg1s: oh dear, deepcopy.
15:27  hemanth: Yhg1s, i was asking, if we want to iterate a list which are paths to certain binaries; then converting it to set and then iterating it, is a better way right?
15:27  Yhg1s: saju_m: the object you added to the list isn't deepcopy'able.
15:27  Yhg1s: hemanth: what list? You're iterating over the file.
15:28  Yhg1s: hemanth: there's not much point in converting it to a set just to iterate over it.
15:28  hemanth: Yhg1s, the 'shells'
15:28  saju_m: how can i check weather an object deepcopy'able or not
15:28  Yhg1s: hemanth: there's no list in that snippet in code.
15:28  Yhg1s: saju_m: try it and see.
15:28  Yhg1s: saju_m: usually, using deepcopy is a bad idea.
15:28  Dieterbe: Yhg1s: what i have: a unix timestamp, what i need is something that looks like a unix timestamp, but whose value (when being displayed in something human friendly) shows you the time in your timezone.   so I need to apply the actual offset of the timezone to each individual timestamp
15:28  Yhg1s: using copy is sometimes necessary, but often an indiciation your code isn't optimal.
15:29  saju_m: but i need that
15:29  Habbie: Dieterbe, that's just wrong.
15:29  Dieterbe: Habbie: it sure is.
15:30  Yhg1s: Dieterbe: a unix timestamp never has a timezone. It's always seconds since a fixed point in time. It's always "in UTC", if you will. What timezone gets displayed when you display it depends on what timezone you use when converting it to something easily displayed.
15:30  Yhg1s: Say, whether you use time.localtime() or time.gmtime().
15:30  hemanth: Yhg1s, yup got that, was referring to the other method of readlines() ; chuck that :) ; is there are way to print shells as choice options?
15:30  Yhg1s: hemanth: hundreds of ways.
15:30  hemanth: Yhg1s, ha ha ok :)
15:30  Yhg1s: saju_m: why do you think you need it?
15:30  Dieterbe: Yhg1s: yes i know that, but you don't get what i'm trying to say
15:31  Yhg1s: Dieterbe: that's probably because you stil haven't shown us *specifics*.
15:31  hemanth: the most efficient way would be?
15:31  saju_m: i need to keep orginal copy of that list
15:31  Yhg1s: hemanth: loop over the set, print items.
15:31  Yhg1s: saju_m: so don't modify it.
15:31  Yhg1s: saju_m: create a new list instead.
15:32  Dieterbe: Yhg1s: what else do you want me to tell you?
15:33  Yhg1s: Dieterbe: I want to see a specific timestamp that you get, which you think is in "the wrong timezone", and what time you think it *should* represent.
15:33  Dieterbe: no no, nothing is "in the wrong timezone"
15:33  Dieterbe: ok, i'll give you an example
15:34  hemanth: Yhg1s, to print it something like 1=> <first element for the set> \n 2=> <second element for the set>
15:35  Yhg1s: hemanth: sets have no order. if you want the shells in a specific order, use a list after all.
15:35  hemanth: Yhg1s, two loops? on which runs till the length of the set and other the contents
15:35  Hadronn: Yhg1s: my headache just cleared, thank you again, it's working now.. I'll idle here and see what else I can learn : D
15:35  Yhg1s: hemanth: why would you need two loops?
15:36  hemanth: Yhg1s, one to print the options 1) and other the contents; o no! i can do it with one loop
15:38  hemanth: Yhg1s, i was doing like for shell in shells: where shells is a set; can it be looped with index?
15:38  Yhg1s: hemanth: sets have no order, as I said. you probably don't want to do that. But see enumerate().
15:38  hemanth: ok :)
15:41  Dieterbe: Yhg1s: http://dpaste.com/hold/253933/
15:42  dash: Dieterbe: you probably want to be using the datetime module
15:43  Dieterbe: the best i have come up with right now is multiplying all the fields with the amount seconds they represent
15:43  Dieterbe: but that's pretty ugly
15:44  Yhg1s: dash: well, it looks like Dieterbe wants to generate a unix timestamp that, in UTC, is the same time as the current time in the current timezone.
15:44  Yhg1s: Dieterbe: did I get that right?
15:44  Dieterbe: no, not just current
15:44  Yhg1s: ok, 'a specific time in the current timezone'.
15:44  Yhg1s: That is what you want?
15:44  Dieterbe: yes, exactly
15:45  dash: yeah, i would find that easier to do using datetime+dateutil :)
15:46  hemanth: Yhg1s, i made shells as list and then ; for shell in range(len(shells)): print shell "=>" shells[shell]
15:46  Yhg1s: yes, dateutil would make it easier. Just datetime, not so much.
15:46  Yhg1s: hemanth: use enumerate, as I already said.
15:46  Yhg1s: hemanth: why do you keep asking me questions and then completely ignoring my answer?
15:47  hemanth: Yhg1s, o :( i though it was for sets
15:47  Yhg1s: Dieterbe: what you want is fairly hard, because of timezone/DST transitions :S
15:48  Yhg1s: Dieterbe: but dateutuil at least has enough timezone information to make this possible.
15:49  hemanth: Yhg1s, changed to for i,shell in enumerate(shells):
15:50  saju_m: have any othe method to make deepcopy of list of objects
15:50  Alberth: saju_m: to make a copy of a list, you don't need deepcopy
15:51  saju_m: i dont need shallow copy
15:51  dash: saju_m: why do you want to copy?
15:51  dash: (usually it doesn't make sense)
15:52  Alberth: saju_m: in python, you normally constantly make new things, instead of modifying existing things
15:52  Dieterbe: Yhg1s: ah damn, doing multiplications with the fields of the struct won't work, i just noticed. or at least not easily. because months have different amounts of days etc
15:52 --- elpargo_ is now known as elpargo
15:52  dash: Dieterbe: yeah this is why there's datetime.datetime.astimezone()
15:54  saju_m: i have a list and i iterate over it and will make some changes and at some point i want to undo that changes
15:54  Yhg1s: saju_m: then you will have to not modify the objects involved.
15:54  dash: saju_m: so don't change the list, make a different list instead
15:55  dash: when you want the original, use the original.
15:55  jozefk: :)
15:55  saju_m: that is itrate over the existing list and create a new one
15:56  Alberth: saju_m: so make a new list, push the original one in the undo-stack, and use the new list as the current one
15:57 --- jonesy_ is now known as jonesy
15:57  Xaifas: while True:  some_sock.recv(size)  .. Can anyone tell me like how fast is the sock trying to get data in such a infinite loop?
15:58  Yhg1s: Xaifas: as fast as some_sock.recv() returns.
15:58  Xaifas: I see, can't this cause a pc to accidentally freeze?
15:59  Yhg1s: Xaifas: not unless you have a single-tasking PC and you send a *lot* of data to the socket.
16:00  Alberth: hardware problems is another likely cause
16:00  torpedotux: muahahah!
16:01  Alberth: or a #python user plots one of his evil plans against your pc
16:02  torpedotux: Alberth: just got 2.7,3.1 virtualenv installed.. now onto some testing :)
16:03  Alberth: torpedotux: plotting evil plans aginst your own (virtual) pc eh? :D
16:04  torpedotux: Alberth: heh
16:06  GrIM147: Is there somthing like glade for gtk builder ?
16:07  GrIM147: the interface for making the widgets
16:07  hemanth: Yhg1s, phew, now adding edit function http://paste.pocoo.org/show/yf3IlmV08nBrFbq4Zhdb/
16:07  aerostop: hey guys, can someone tell me, is there a standard that dictates how nested python arrays are computed by urllib.urlencode()? I'm looking to have a dict or sequence of tuples turn out like ?dict['key']=something?dict['next_key']=somethingelse.
16:08  sedulous: GrIM147: Glade does support GtkBuilder
16:09  sedulous: afaik it's even the default nowadays
16:10  FrEaKmAn_: how could I identify if string is in format "number/number"?
16:12  GrIM147: sedulous, oh ok , i did abit of reading because i want to use gtk treeview , and people where saying you cant with glade
16:13  papna-work: FrEaKmAn_: map(float, s.split("/", 1))
16:13  Yhg1s: aerostop: you say 'array', but your desired output suggests 'dict'
16:13  sedulous: GrIM147: you can use TreeView in Glade, however I've never used it with Python before, only GTKMM / C++
16:14  GrIM147: sedulous, oh , kk
16:14  sedulous: just tried it and could drop a GtkTreeView onto a GtkWindow, no problem
16:14  Yhg1s: aerostop: can you give a concrete example of what you have and what you want?
16:15  aerostop: Yhg1s: http://www.hasoffers.com/wiki/OfferPixel:create#Usage_Example
16:16  aerostop: Yhg1s: That's the format of the data I've got to format for the url.
16:16  GrIM147: sedulous, awesome thanks it was grayed out in glade for me for some reason but ill check it out
16:16  Yhg1s: aerostop: that seems to be PHP, not Python.
16:17  Yhg1s: aerostop: what's the *Python* data you have, and what is the query string you want to end up with?
16:17  aerostop: Yhg1s: yeah I'm just demonstrating the format of the array
16:17  Yhg1s: aerostop: you realize PHP arrays are different from Python dicts, yes?
16:18  aerostop: Yhg1s: the string in the end should be '?......&network_id=some_network_id&data['code']=http://url&data['status']=active&.....
16:18  aerostop: Yhg1s: Yes I do understand that
16:18  sedulous: GrIM147: I tried it with Glade 3.6.7
16:18  Yhg1s: aerostop: the PHP function that code uses would ont include those single quotes. Are you sure you want them?
16:19  Yhg1s: In any case, urllib.urlquote() wont' do this for you. You would have to do it yourself.
16:19  aerostop: Yhg1s: sorry yeah that was my mistake just then
16:19  aerostop: urllib.urlencode won't handle any nested tuple sequences or arrays?
16:20  aerostop: Yhg1s: urllib.urlencode won't handle any nested tuple sequences or arrays?
16:20  Yhg1s: aerostop: not in the way you want.
16:20  Yhg1s: if it did, it certainly wouldn't produce the output you want (without the quotes.)
16:20  aerostop: Yhg1s: crazy. something's easier in PHP for once :)
16:21  Yhg1s: I'm sure there's hundreds of builtin functions that do a thing that's easier to do in PHP than in Python -- because in PHP it has a builtin function, and in Python it doesn't.
16:22  aerostop: Yhg1s: No worries, thanks for your help. I'll just do it manually
16:23  CrazyTB: I'm writing a class, let's say, App(). I have a tree of objects inside it, like app.top_frame.option_frame.my_button
16:23  CrazyTB: I want to add a buch of "shortcuts" to those objects, like this: app.ui.my_button
16:24  CrazyTB: but I don't know how to make this new "ui" item. Should it be an empty class? Should it be an inner class?
16:24 --- XDS|AFK is now known as XDS|Onyx|CM6
16:24  CrazyTB: or something else?
16:24  Yhg1s: CrazyTB: how would making 'ui' be app.top_frame.option_frame not work?
16:24  GrIM147: sedulous, i was not useing the right container :P
16:25  sedulous: GrIM147: ah ok
16:25  CrazyTB: Yhg1s: because there are many other frames and other objects
16:25  Yhg1s: CrazyTB: ok, so you want to add more things to this 'ui' "shortcut"?
16:25  CrazyTB: yes
16:26  CrazyTB: Yhg1s: so, app.ui.foobar would point to app.left_frame.some_random_frame.whatever.foobar_checkbox
16:26  Yhg1s: CrazyTB: sounds like you want a class that has a bunch of properties fetch the right attribute from the right object.
16:26  Yhg1s: (unless you just want to set all those attributes statically to start with.)
16:26  CrazyTB: Yhg1s: exactly!
16:27  hemanth: ~/ is not begin expanded in subprocess.call...
16:28  papna-work: hemanth: subprocess.call doesn't invoke your shell.
16:28  papna-work: hemanth: So it won't expand ~
16:28  Yhg1s: hemanth: Python doesn't expand ~/ unless you ask it to.
16:28  Yhg1s: see os.path.expanduser.
16:28  papna-work: hemanth: Perhaps you want os.path.expanduser
16:28  hemanth: ok :)
16:29  tyrion-mx: can anyone tell me his opinion about what's the best way to do this: http://dpaste.com/253953/
16:30  CrazyTB: Yhg1s: hmm... you already gave me one idea, gotta try it
16:33  hemanth: how do i get the last part of the string like, /usr/bin/screen,/bin/bash
16:34  hemanth: split('/')[2] fails for the first one, works for /bin/bash
16:34  Habbie: os.path.basename
16:34  hemanth: split('/')[-1]
16:35  hemanth: o ok basename :)
16:35  dash: tyrion-mx: #django would know bst (if you're using django, which it looks like you are)
16:36  tyrion-mx: dash, yes I am using django, but the question is about python coding style, not about what the code really does
16:37  tyrion-mx: (forgive me for the italian comments in the code, they all mean "better this ... or this ... or this")
16:38  Brend: tyrion-mx, #2 or #4 are both fine
16:39  Brend: #1 is faster if you don't expect it to be missing, but you probably don't care. #3 is just bad.
16:41  dash: tyrion-mx: #2 is what i'd prefer
16:41  tyrion-mx: if I follow what's written here I should use #1 http://docs.python.org/glossary.html#term-eafp
16:42  dash: tyrion-mx: #2 is the best of both worlds :)
16:42  tyrion-mx: actually there are more probabilities for the key to be missing
16:42  tyrion-mx: dash, ok, I will use the second :)
16:43  tyrion-mx: thank you
16:51  noobermin: howdy hoe
16:51  Alan: What is supposed to happen if you have a python module and a python package of the same name in your path (i.e. your current directory) ?
16:51  noobermin: you mean if you try to import?
16:51  Alan: yeah
16:51  Alan: is it guaranteed to always go for the package?
16:51  Alan: it seems to
16:52  arkanes_: Alan: you'll get whichever one is first on the pythonpath
16:52  noobermin: not sure
16:52  noobermin: yeah, that's what i'd guess
16:52  noobermin: g2g
16:52  Alan: arkanes_: but they're both in the same path
16:52  arkanes_: Alan: yeah thats not a behavior I would ever rely on
16:53  arkanes_: it'd depend on a number of different things about the import implementation
16:53  Alan: arkanes_: ok, i was basically trying to work out if it's a defined behaviour or not...
16:54  papna-work: Alan: That's the way it's set up like everywhere.
16:54  Alan: papna-work: ?
16:54  papna-work: It doesn't have to be that way.
16:54  papna-work: But that's the way it's always set up.
16:55  Alan: papna-work: what way? it choosing the package over the module?
16:55  arkanes_: papna-work: checking for packages in a specific pythonpath entry?
16:55  arkanes_: papna-work: I don't think thats even done first on purpose
16:55  papna-work: Oh, I misread what the situation was.
16:56  Alan: the situation is that I'm making a python app, an in it's source directory there is the "ssgen" package, and also a "ssgen.py" script which is what should be run
16:57  Alan: but if the module has the same name as the package, isn't it always going to assume it's trying to import itself?
16:57  papna-work: Alan: You might consider a `scripts` directory for ssgen.py. You might also consider name ssgen.py ssgen.
16:57  Alan: module/script
16:57  BlueAidan: Alan: so don't do that
16:57  Alan: like, no matter where i put it
16:58  Alan: papna-work: if it's not called ssgen.py, python won't think it's a module?
16:58  papna-work: Alan: If it's called ssgen, Python will run it but not import it.
16:59  x0rs_w: I apologize if this question seems extremely newbish, but I am new to programming in general and would like to know how calling a function from within that said function definition actually works?
16:59  arkanes_: x0rs_w: it works just like that
16:59  arkanes_: x0rs_w: it's called "recursion"
16:59  x0rs_w: arkanes, it seems to me that it would create some kind of loop, and I am having a hard time fathoming it
17:00  papna-work: x0rs_w: When you define a function `def foo(...`, it makes "foo" a variable foo that refers to that function. When you run the function and say "foo", it looks up said variable, find a function, and calls that function.
17:00  Kaedenn: x0rs_w: don't worry if you have a hard time grasping recursion. it took me several years to get the hang of it :)
17:00  papna-work: x0rs_w: It does create some kind of loop.
17:00  Kaedenn: x0rs_w: recursion is a fairly powerful kind of loop. you can do more with recursion than you can with normal iteration (for blah in sequence:)
17:00  papna-work: Kaedenn: False.
17:00  anix: loop... beware of infinity
17:00  Yhg1s: recursion is not a loop at all.
17:00  Kaedenn: papna-work: ...? is there a proof of this?
17:01  Yhg1s: and recursion has many issues that iteration does not.
17:01  papna-work: Kaedenn: Sure.
17:01  Yhg1s: (in Python, that is.)
17:01  Kaedenn: papna-work: this is news to me. I'll ask my professor about this today in class.
17:01  Kaedenn: papna-work: thanks for clarifying that for me
17:01  Alan: papna-work: problem is, it's still a module, and therefore even if i have scripts/ssgen, "import ssgen" in that file assumes that the ssgen intended it itself, not the package
17:01  alket: i installed pydev in eclipse but when i want to create a new project i get this error "Project interpreter not specified"
17:01  papna-work: Alan: Nope.
17:02  papna-work: Alan: Do you have a pyc hanging around or something.
17:02  papna-work: ?
17:02  papna-work: Alan: Look at ssgen.__file__
17:02  Alan: papna-work: actually, yes, i do have a .pyc hanging around
17:02  Alan: papna-work: sorry about that, removing the .pyc fixed it
17:03  Alan: papna-work: is this the usual way to do a python application where the script has the same name as the package then?
17:04  Alan: remove the .py, put it somewhere else so it doesn't name clash?
17:04  papna-work: Alan: I don't know that there's a usual way. I can't think of a case where I do this.
17:04  papna-work: Alan: That's how pip deploys.
17:05  papna-work: As for not putting a script and a package in the same directory, that's good organization. I have a scripts or bin directory in my projects for different-named scripts.
17:07  DestinyAwaits: Hello, Guys :-)
17:07  Alan: papna-work: looking at pip's source, i can't see how it gets a script at all, unless that's the "entry_points" options in setup.py
17:08 --- XDS|Onyx|CM6 is now known as XDS|BRB
17:08  alket: i installed pydev in eclipse but when i want to create a new project i get this error "Project interpreter not specified"
17:09  Wild_Cat: alket: go to the preferences and configure Pydev to tell it which version(s) of Python you want to work with
17:09  papna-work: Alan: What?
17:09  papna-work: I mean the pip application itself.
17:10  question2: Hello, My question is: What library should I use to make a GUI compatible with Mac, Windows and Linux?
17:10  eMyller: question2: There is Qt.
17:10  htoothrot: i like qt/pyqt
17:10  eMyller: qt.nokia.com
17:11  alket: thank you Wiebe
17:11  papna-work: question2: The "right" answer is to build separate UIs.
17:11  Wild_Cat: question2: Qt or GTK. Qt is more stable on the Mac.
17:11  papna-work: eMyller: Underdefined in context.
17:11  alket: sorry Wild_Cat
17:11  Alan: papna-work: i'm not sure i follow what you're getting at
17:11  question2: Thank you all
17:11  papna-work: question2: In Python, I'd say PyGTK, wxPython, PyQt, Tkinter, in that order.
17:12  veasel: Can anyone explain to me, what are the point of Python property()
17:12  eMyller: papna-work: qt is pretty accepted in many platforms, isn't it?
17:12  arkanes_: "windows"
17:12  arkanes_: and KDE
17:13  papna-work: eMyller: There are multiple Qt bindings in Python with different strengths.
17:13  eMyller: Mac as well.
17:13  eMyller: talking about qt itself, not @ bindings
17:13  papna-work: eMyller: You should formulate an answer that is useful to OP.
17:14  eMyller: papna-work: searching is good.
17:14  papna-work: eMyller: So are well-defined answers.
17:15  eMyller: i don't usually give ready-to-go answers when there are many options... i give opinion, instead
17:15  eMyller: but well
17:15  eMyller: time to work.
--- Log closed Wed Oct 06 23:32:35 2010
