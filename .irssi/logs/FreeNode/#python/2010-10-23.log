--- Log opened Sat Oct 23 00:00:01 2010
--- Day changed Sat Oct 23 2010
00:00  raininja: Yhg1s: pkg search linc
00:00  raininja: oops
00:00  Arsanerit: Ok.
00:00  ssbr: dash: So do I email mark miller, then?
00:00  ssbr: do I even bother?
00:00  dash: ssbr: about what
00:01  ssbr: dash: about the dead link I want to read
00:01  raininja: Yhg1s: sunpro
00:01  ssbr: dash: "Oleg Kiselyov has also pointed out the <wonderful/terrible story> of the boy that ended up with a police record because he accidentally put an extra pair of parens in a Perl program. This is an example of the kind of accident we hope to make less likely."
00:01  Yhg1s: raininja: and you don't have anything matching libutil* in /lib or /usr/bin?
00:01  Yhg1s: eh, /lib or /usr/lib
00:02  raininja: i check
00:02  raininja: Yhg1s: no sir
00:03  dash: ssbr: looks like this is it: http://www.stonehenge.com/merlyn/UnixReview/col38.html
00:03  Yhg1s: raininja: do you have 'ldd'? it's been a while since I used Solaris.
00:03  raininja: Yhg1s: yes
00:03  merijn: ssbr: Any anecdote starting with the name "Oleg" scares me before I even read it
00:03  dash: heh heh
00:03  dash: yeah, Oleg is a scary guy.
00:04  raininja: ldd python?
00:04  Yhg1s: raininja: does 'ldd /path/to/python' mention libutil?
00:04  raininja: Yhg1s: no it does not
00:07  Yhg1s: raininja: sounds like whatever is adding -lutil to the linker flags is wrong.
00:07  ssbr: dash: excellent, bedankt
00:07  raininja: Yhg1s: i will try modifying the configure script, thanks
00:10  Diverdude: is it possible to make a binary file with variables like a .mat file in matlab? So that i can do load('mybinaryfile') and then a set of variables are loaded into workspace?
00:10  dash: Diverdude: you can save stuff in a file, sure
00:10  exarkun: Diverdude: It's probably not a very good idea.
00:10  dash: Diverdude: json is a nice way to do this
00:11  dash: Diverdude: d = {"foo": 17, "baz": ['a', 'b', 'c'], ... }; json.dump(yourfile, d)
00:11  exarkun: Saving and loading data is nice.  The part that's not a very good idea is trying to copy matlab in minute detail.
00:11  dash: true, let's not have that.
00:12  Diverdude: dash, and if i then want to load it again? How do i do that?
00:12  dash: json.load(somefile)
00:12  exarkun: which will _return_ that {"foo": ...} object
00:12  exarkun: it won't add or change any variables in your namespace
00:12  Diverdude: dash, hmm so it will make a text file with the values then....what if i save a huge matrix....it will take up a lot of diskspace then
00:13  exarkun: Diverdude: How huge are you talking about?
00:13  Sub_Zero: How is it possible to add a resource to a PE executable file in Python (pefile module looks complicated)
00:13  dash: Diverdude: numpy has functions for saving arrays to disk in a packed format.
00:13  ssbr: numpy has its own way of saving matrices
00:15  ssbr: Does anyone know if there's a way to speedup jython load times? Is java the bottleneck? It's ridiculously slow.
00:16  ssbr: I mean, by the time I go through one cycle of "reset the database; create the test data" I could have done it three times in CPython, because I have to run two different python programs in jython. (to be fair, it doesn't help that postgres is a pain)
00:18  Diverdude: dash, okay, what is this function?
00:18  ssbr: I am thinking of array.tostring(). I'm not sure what dash is thinking of.
00:19  dash: Diverdude: i forget
00:19  dash: it's in the numpy docs.
00:23  ssbr: ughn
00:24  ssbr: is this a bad idiom? something = os.path.join(os.path.dirname(__file__), blah)
00:24  blueyed: papna-work: remember does not appear to work with keyword arguments ("TypeError: __init__() got an unexpected keyword argument 'foo'")
00:32  raininja: thanks again Yhg1s
00:36 --- |kesselhaus| is now known as kesselhaus
00:36  sofocles: hi, i would like to get some info on which python to install... i don't get the difference between the python.org version and EPD's...
00:38  Pylix: i'm reading the think python guide and it has me do some exersize with the print command with leading zeros. print 01=1 print 010 gives 8 , 0100 64 and 01000 512. it's a geometeric series but what's the point?
00:38 --- chocoby is now known as CHOCOBY
00:39  sacho: Pylix: it's a what?
00:39  sacho: Pylix: 0xyz numbers are taken as octal form.
00:39  sacho: that's why 010 = 8
00:39  Pylix: right
00:39  ivazquez|laptop: Geometric series.
00:39  Pylix: i meant sequence lol
00:40  sacho: There's nothing geometric about it :|
00:40  KirkMcDonald: Well, if you ever need to deal with Unix file permissions.
00:40  ivazquez|laptop: You multiply by 8 as you shift left.
00:40  Pylix: well if you look at the sequence of numbers 1 8 64 512 4096 the common ratio is 8
00:41  KirkMcDonald: Pylix: Do you know what "octal" means?'
00:41  Pylix: yes
00:41  KirkMcDonald: Pylix: So what is the problem?
00:41  Pylix: it means like 8
00:41  KirkMcDonald: Pylix: It means base 8.
00:42  Pylix: okay
00:42  ivazquez|laptop: It's what they used before hexadecimal was invented.
00:42  ivazquez|laptop: It's also handy because it groups bits in threes.
00:42  Pylix: does python use hex too?
00:42  ivazquez|laptop: 0x...
00:46  sofocles: hi, what's the difference between the python from python.org and that of EPD?
00:46  ivazquez|laptop: Depends.
00:46  ivazquez|laptop: What's EPD?
00:47  KirkMcDonald: Enthought
00:47  sofocles: yeap
00:47  KirkMcDonald: Enthought's should just include some extra whatnot.
00:47  sofocles: exactly
00:47  ivazquez|laptop: mayavi and the like maybe.
00:47  ivazquez|laptop: Nothing you can't get separately.
00:48  sofocles: exactly, mayavi, scipy, numpy, etc
00:49  sofocles: ok i get it but my question is: how does the upgrades work with the regular python version from python.org? i would like to install the version that takes as little maintenance as possible...
00:50  KirkMcDonald: When you upgrade to a new major version of Python (e.g. 2.4 to 2.6) you need to reinstall all of your third-party modules.
00:51  sofocles: ok that's what i thought
00:51  sofocles: major upgrade = major pain
00:51  KirkMcDonald: Note, too, that you can have multiple major versions of Python installed at the same time.
00:52  dash: sofocles: you only have to do that every few years.
00:52  sofocles: yeap but the thought of that gives me headaches
00:52  sofocles: ok good thanks dash for the heads up
00:52  Yhg1s: sofocles: it's generally a minor point compared to the incompatibilities involved in the ugprade as such.
00:53  sofocles: Yhg1s: i don't get what you mean. what are the incompatibilities involved ?
00:54  Yhg1s: sofocles: for Python, there's always semantic changes and often syntactic changes involved in every major version upgrade. For third-party libraries, it's often even worse (except for the syntax.)
00:54  lv: sofocles: server installs of RHEL still have python 2.4 as the accepted, supported, version of python. 2.4 was released, what... 6 years ago?
00:54  sofocles: ok thanks Yhg1s, i didn't know that
00:55  sofocles: lv: thanks for the info, that puts things in perspective
00:56  sofocles: as for the third-party modules, are they difficult to install? will i need to compile/build them? i'm using a mac and i'm not sure how it works (but i guess it is as in linux)
00:56 --- JONAFAN is now known as jonafan
00:56  Yhg1s: sofocles: for OSX and Windows you can usually get binary packages. For OSX, compiling the ones that only come in source is usually fairly painless.
00:56  preaction: if they're on pypi, easy_install works great. if not, ymmv
00:57  sofocles: good, so it's all good news i guess
00:57 * preaction develops python on OS X 10.6
00:57  Yhg1s: yeah, easy_install, not so much. pip, much better.
00:57  preaction: really? better website that pypi even?
00:57  sofocles: pypi?
00:57  Yhg1s: no, just avoiding the utter insanity of easy_install and setuptools.
00:57  lv: python package index
00:57  preaction: how do i get pip?
00:57  Yhg1s: 'easy_install pip'
00:58  sofocles: so easy_install is not so good?
00:58  Yhg1s: or, get it from source, from pypi.python.org.
00:58  lv: sofocles: http://pypi.python.org/pypi
00:58  Yhg1s: sofocles: it's a heaping pile of dung.
00:58  sofocles: nice image
00:58  preaction: Yhg1s: danke. i fucking hate easy_install, but i've been spoiled on cpan all my life
00:58  cicatrix1: did i just read that correctly?
00:59  Yhg1s: cicatrix1: hard to say, since you don't mention what you read or what the correct reading would be.
00:59  sofocles: any other info/hints/precautions i should bear in mind before beginning to install python on mac?
00:59  Yhg1s: sofocles: worrying less is a good idea. it's not rocket science, and it's easy to undo or start over.
00:59  preaction: sofocles: use macports, works wonderfully for me. make sure you have xcode as you'll need the compilers
00:59  cicatrix1: i guess cpan works well but bleh
00:59  arkanes_: sofocles: OS X ships with a python install
01:00  arkanes_: don't use macports, it's horrible, especially if you install the macports python
01:00  sofocles: yeap but according to python.org, it's really outdated
01:00  dash: sofocles: i've had good results using macports exclusively
01:00  arkanes_: sofocles: 2.6
01:00  sofocles: ok 2.6
01:00  dash: sofocles: arkanes enjoys having opposite opinions from me
01:00 * lv <3 macports
01:00  Yhg1s: dash: many people do, really :>
01:00  arkanes_: in particular, you can't do any GUI stuff with the macports python
01:01  arkanes_: because it's not a framework build
01:01  sofocles: i don't care about gui stuff
01:01  lv: arkanes_: eh?
01:01  ikanobori: Wat?
01:01  sofocles: i'll use python for calculations and visualisation of simulation results
01:01  ikanobori: lv: Why do you like macports? It is pretty bad.
01:01  arkanes_: sofocles: anyway, unless you have a pressing need for 2.7, stick with the already-installed version
01:01  lv: arkanes_: there's a python 2.7 package, and a wxpython for python 2.7... in macports. unless we're talking about something else?
01:02  sofocles: no, it's ok i'll get the 2.6 version, according to your opinions and suggestions
01:02  ikanobori: Why does multiprocessing.pool expect sys.stdin to have a fileno and close method?
01:02  arkanes_: sofocles: no, you already have the 2.6 version
01:02  arkanes_: sofocles: OS X ships with python already installed
01:02  preaction: some suggestions and opinions are more equal than others, good luck
01:02  sofocles: ah i thought the shipped version in macs was older
01:03  preaction: sure, if you have a much older OS X
01:03  arkanes_: assuming you have 10.6, which you probably do, then you have python 2.6
01:03  lv: ikanobori: what do you prefer? brew? i like having a source-based install system that has packages for anything i could want to install so that i dont have to deal with multiple dependency systems.
01:03  arkanes_: homebrew is much better
01:03  sofocles: nop it's snow leopard
01:03  ikanobori: brew is a lot better, yes.
01:03  arkanes_: sofocles: thats 1.6
01:03  arkanes_: sofocles: 10.6, rather
01:04  sofocles: yeap
01:04  ikanobori: lv: I'd rather custom install from source then the crapfest that macports brings me.
01:04  ikanobori: I'll have a billion versions of the same library, same python and python modules installed if I use it.
01:04  ikanobori: I did it once and I had to wipe my mac to properly solve it.
01:04  lv: 0.o
01:04  sofocles: ok noted
01:04  arkanes_: macports belief that its the only thing on the system is an issue
01:05  ikanobori: For example, right now, I have Python 2.6.1 and 2.6.2 installed because macports decided it needed to install another python version to install virtulenv.
01:05  ikanobori: Just an example.
01:05  arkanes_: also it insisting that it install everything in unix-style locations instead of OS X conventions is a problem too
01:05  ikanobori: And then you get a package with a wrong version dependency and it'll install yet another python.
01:05  sofocles: i cite python.org "Python comes pre-installed on Mac OS X, but due to Apple's release cycle, it's often one or even two years old. The overwhelming recommendation of the "MacPython" community is to upgrade your Python by downloading and installing a newer version from http://www.python.org/download/releases/."
01:06  ssbr: ikanobori: that's disgusting
01:06  Diverdude: i made a plot using the plot command, but the plot is upside down. is there a way to flip the axes of the plot?
01:06  ikanobori: sofocles: Currently it is not 2 years old.
01:06  ikanobori: sofocles: And that is not macports either.
01:06  Diverdude: in matlab its possible to use axis xy or axis ij
01:06  Yhg1s: sofocles: well, 2.6 *is* two years old.
01:06  sofocles: ok so the statement is (at least) confusing
01:06  arkanes_: sofocles: ironically, that page is 3 years out of date
01:07  Yhg1s: it's just not a big deal.
01:07  ikanobori: Yhg1s: Oh dear, time flies.
01:07  sofocles: ok ok i get it
01:07  sofocles: no ok, it's not a big deal
01:07  _habnabit: Diverdude, why use php, anyway?
01:07  sofocles: so with the preinstalled 2.6 python version, i only need to install the third-party modules (such as numpy, matplotlib, etc), is that right?
01:08  arkanes_: sofocles: most importantly, if you're just getting started with python there's no need to bother with macports or installing a third party python or anything. You have everything you need to start
01:08  arkanes_: sofocles: make changes in response to actual needs
01:08  Luyt: Hmmm, an 'overwhelming' recommendation, even ;-)
01:08  ikanobori: _habnabit: Some people are sadomasochistic.
01:08  arkanes_: Luyt: that was writting when Apple shipped 10.4 with a python that had a large number of known issues
01:08  sofocles: ok
01:08  Luyt: How do you call this urge some people have to install always the most recent version of a software package, even if it's unstable?
01:08  ikanobori: Anyway, where can I find the list of methods file objects *must* implement?
01:08  ikanobori: For Python.
01:09  arkanes_: ikanobori: there isn't one
01:09  ikanobori: Probably it is hidden in a PEP?
01:09  sofocles: actual needs are matrix data treatment in python, that's why i'm trying to understand how to fulfill those needs
01:09  arkanes_: ikanobori: or, alternately, you could just look at the ones they *do* implement and use that
01:09  Yhg1s: ikanobori: no, PEPs are just for enhancements.
01:09  Luyt: I've seen it in junior sysadmins in our company, they would migrate the database overnight to MSSQL 2008 BETA and wonder next day why some software components broke
01:10  ikanobori: Mrm.
01:10  Yhg1s: and files predate PEPs by a decade.
--- Log closed Sat Oct 23 09:51:10 2010
--- Log opened Sat Oct 23 09:51:36 2010
09:51 --- Users 685 nicks [0 ops, 0 halfops, 0 voices, 685 normal]
09:51 --- Server: [niven.freenode.net] [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
09:52 --- Channel #python was synced in 87 seconds
09:59  blast_hardcheese: Is there a way to invoke the Python interpreter programmatically? like, at a certain point dump you into an interactive shell where you can interact with the environment directly?
10:00  _habnabit: pdb.set_trace()
10:01  blast_hardcheese: _habnabit: Much appreciated, thanks
10:03  sheepz: what would be the "pythonic" way of calculating a person's age in days, months and years given a birth date?
10:03  Octave: dash: regarding our earlier convo. jsonpickle works real nice :)
10:08  _habnabit: sheepz, dateutil.relativedelta
10:11  kancha: hi
11:01  kamanashisroy: how can I pass "struct sockaddr_in" in python
11:01  kamanashisroy: ^^ I am mad with this
11:20  kerio: wait, what?
11:34  hesco: is there a close() to match the open() for file handling?
11:36  drmegahertz: hesco: your_file.close()
11:37  drmegahertz: i would recommend using the with-keyword though
11:39  super_anix: #fedora
11:39  super_anix: sorry forgot the /join
11:40  nijan: Hello all, I'm having a porting issue. I need to access data files, such as html documentation and icons from my code. To do this, I use this code (http://paste.pocoo.org/show/279115/) which basically gets PATH env variables. The problem is that in windows it works fine, since it returns the installation directory (I'm using inno for the installer), but in linux (let's not say macosx) I could't figure how to get the right path. I use distutils and it put all
11:40  nijan: the files into site-packages, but the env vars I use for windows return /usr. What should I do? Install into /usr/share or find a way to get the directory is actually installed? Thanks
11:41  nijan: get_config_dir works fine since it return my home.
11:42  nijan: *returns
11:45  figure002: hello. i'm trying to figure out why my script doesn't work with threading. i just found out something, that might be the cause of the problem. it seems that a thread i'm starting never dies. i checked this with is_alive(). what could be the reason the when the run() method finishes, the thread doesn't die?
11:49  hesco: thanks drmegahertz
11:49  hesco: in writing to a file, how do I insert "\n" between the lines of data?
11:50  ikanobori: nijan: One moment.
11:50  nijan:  yes
11:50  ikanobori: nijan: You add the files using distutils with the package_data arg?
11:51  nijan: yes
11:51  drmegahertz: hesco: you'll have to add them yourself. If you store the data as a list you could do file.write('\n'.join(data))
11:51  ikanobori: os.path.dirname(__file__), filename.
11:51  ikanobori: Is what I use.
11:51  m8: HI, i have a package whit some modules, there is any instruction can i put in the __init__.py of the package for import all modules in this package?
11:51  ikanobori: m8: Rather not, but yes you can.
11:51  nijan: I'll try it, but I think you get the file is running then?
11:52  ikanobori: nijan: Yes.
11:52  nijan: which I put in /usr/bin
11:52  m8: ikanobori, how?
11:52  ikanobori: nijan: Normally you'd have an entry point which executes the main function in your applications module.
11:52  ikanobori: So you'd get the modules location.
11:53  ikanobori: For example usr/bin/x executes import bpython.gtk_ as g, g.main()
11:55  nijan: I guess it'll work, in fact I remember I was using something like that before, but then it didn't work in windows since it returned the path of the sym link. But since there's nothing like that in nix installation i think it will work fine. Thanks a lot. I'll have a try right now
11:56  m8: ikanobori,
11:57  ikanobori: m8,
11:57  m8: ikanobori,
11:57  ikanobori: nijan: Should work on windows (does for me) but I don't know how the inno installer does it's job and where it installs it.
11:58  m8: ikanobori, how? :O
11:58  ikanobori: m8: http://jcalderone.livejournal.com/39794.html
11:58  ikanobori: You have that package layout?
11:58  ikanobori: Also, if you want everything to be imported at once, why is it a package and not a module?
11:59  m8: yes it's a package with many modules
11:59  ikanobori: Well, in your __init__.py you could do: from packagename import *
11:59  m8: ok
12:00  m8: the init of the package where are modules?
12:00  ikanobori: You always use absolute names.
12:00  ikanobori: The package will already be on your pythonpath so you can import from it's name.
12:01  ikanobori: Oh wait, make it from packagename import module1, module2, module3 ...
12:01  m8: :O
12:01  m8: not * ?
12:02  ikanobori: Explicit over implicit.
12:02  m8: * doesnt'work :|
12:02  ikanobori: Indeed ;-)
12:02  ikanobori: Because from package import * will import * from it's __init_.
12:03  m8: i'have to explicit import yes?
12:03  ikanobori: Yes.
12:03  m8: :)
12:03  m8: ok
12:03  m8: there is't an implicit method, if i have understand...
12:04  nomatter001: hi
12:05  ikanobori: Well.
12:05  nomatter001: is there any way to do "exactly" the same as that php-code in python: md5(uniqid(rand(), true))
12:05  ikanobori: What does uniqid do?
12:05  ikanobori: And what does rand do?
12:05  savageCW: Hello, I have a quick question about komodo. I was trying to follow the python tutorial and it mentions to open helloworld.html and run command preprocess current file..I can't find it...literally
12:05  nomatter001: ikanobori: uniqid returns a prefixed unique identifier based on the current time in    microseconds
12:06  nomatter001: but uuid in python returns something different
12:06  ikanobori: nomatter001: So, a GUID?
12:06  ikanobori: nomatter001: Also, they won't ever return the same because they will always be a microsecond off?
12:06  hesco: This: http://paste.pocoo.org/show/279123/ show my attempt to write geo-coded data to a shape file: latitue, longitude, hh_id.  Can anyone please advise how to effectively write distinct lines to an output file?  I don't seem to be able to make this work ta the moment.
12:07  nomatter001: ikanobori: yes
12:07  nomatter001: ikanobori: http://php.net/manual/en/function.uniqid.php here is the documentation
12:07  nomatter001: ikanobori: i need the exact same values as php generates because i want to use it for an import script and i don't want to program that in php
12:08  ikanobori: But why?
12:08  ikanobori: You just need a random hash?
12:08  Rhamphoryncus: nomatter001: that's kind of counter-productive.  If you used a cryptographically secure RNG in the first place your chance of collisions would be the same with or without a timestamp
12:08  nomatter001: ikanobori: i need the same random hash as php generates, so that there are no collissions in future
12:09  Rhamphoryncus: nomatter001: what you're doing doesn't guarantee no collisions
12:09  nomatter001: sry i have no idea how secure that system is in terms of collissions i didn't program it and i think its relatively stupid to not use mysql auto increment as pk but i can't change the system
12:09  ikanobori: nomatter001: What if two uniqid() values genearte the same hash?
12:10  ikanobori: nomatter001: If that is the issue why not have a sql transaction and create a new hash when the insert fails?
12:10  hesco: How can I effectively parse out the elements of a list of tuples and write them to a file?  This is not working for me: http://paste.pocoo.org/show/279123/
12:10  nomatter001: ikanobori: i could try that but i don't know if the shop system (after my import) does that
12:10  ikanobori: Long story short: you can't have the exact same uniqid, rand, md5 behaviour in python.
12:10  ikanobori: uniqid is a php-only botch.
12:11  ikanobori: And most people use GUIDs if they want random identifiers.
12:11  nomatter001: ikanobori: a different idea: is there a simple way to call php functions inside python?
12:11  Rhamphoryncus: nomatter001: do you even no if your php rand is cryptographically secure?
12:11  ikanobori: No.
12:11  Rhamphoryncus: s/no/know/
12:11  Rhamphoryncus: ikanobori: or just a random number
12:12  nomatter001: Rhamphoryncus: no i don't cause its not mine, i just do an import for that system and i have not much idea how that system works
12:12  Rhamphoryncus: nomatter001: it's very likely broken
12:12  nomatter001: also what i thought but ...
12:12  nomatter001: not my decision
12:13  nomatter001: so there is no php wrapper for python?
12:13  nomatter001: something like
12:13  nomatter001: res = PHP.call('uniqid(rand(),true);')
12:13  ikanobori: It's not even necessary if all you need is a random md5 hash which doesn't exist in the db.
12:13  cheater99: there's php -r for the command line.
12:14  cheater99: you connect to it with the subprocess module or something.
12:14  cheater99: i think subprocess is actually deprecated, not sure
12:14  ikanobori: Nope.
12:14  Rhamphoryncus: nomatter001: guess what rand() seeds from.  Go on, try to guess :)
12:15  nomatter001: Rhamphoryncus: time?
12:15  Rhamphoryncus: I haven't found explicit documentation (a very bad sign), it's likely time
12:16  Rhamphoryncus: So in essence you're doing hash(curtime + curtime)
12:16  ikanobori: I have the PHP source code around.
12:16  ikanobori: One moment.
12:17  reeniginEesreveR: i have a list of filenames. How can i find the cumulative size of all those files
12:17  Rhamphoryncus: rand() itself seems limited to 32 bit integers, so you're not getting a lot of precision there.  At least uniqid uses microsecond, you could just as well hash a timestamp directly
12:18  ikanobori: I will find it!
12:18  ikanobori: Rhamphoryncus: Timestamp doesn't use microseconds on php.
12:18  ikanobori: You need microtime().
12:19  Rhamphoryncus: Unless this is a long-living process and rand() gets called multiple times, in which case your reuse the PRNG a few times.  That'll hide this design flaw but it may still show up in production
12:19  Rhamphoryncus: ikanobori: yeah, I didn't mean a particular timestamp function, just anything with equivalent precision
12:19  ikanobori: PHP processes are normally not long running but only live to serve the http request :-)
12:20  banisterfiend: hey
12:20  banisterfiend: can a python class reorganize its inheritance hierarchy?
12:20  Rhamphoryncus: banisterfiend: somewhat.  It's messy though
12:20  ikanobori: God, I shouldn've gone off to read this source code.
12:21  Svm: I have hit a part in my code where I need a lot of « if (thisthing == thatthing) » - « elif (thisthing == someotherthing) » -es.  Would I do this or would I use a dictionary?
12:21  ikanobori: Lookup dict.
12:21  Brend: Use a dictionary, if it makes sense.
12:22  banisterfiend: Rhamphoryncus: ah ok, can you tell me how the inheritance system works? like is the superclass chain a linked-list ? or something more complicated than that? (to deal with multiple inheritance) ?
12:22  Brend: banisterfiend, http://www.python.org/download/releases/2.3/mro/
12:23  Brend: (In general, if you need to know stuff that's in that doc, your design is crazy)
12:23  banisterfiend: Brend: im just seeing if there's anything cool in the way python inheritance works that i can steal and implement ini RUby
12:23  banisterfiend: in Ruby*
12:24  Rhamphoryncus: banisterfiend: ah, well the MRO algorithm we use is a published one, not one we created
12:25  banisterfiend: ah ok
12:39  dassouki: morning py-clan
12:46  deever: anyone here aware of an ssh module/package with GSSAPI support?
12:53  Tau: hey, i need a efficient way of getting all elements from within a given list/tupla. for example. [2, 4, 1] so, i could add that to a type set without it getting so myset = ([(elements)]).
12:53  Tau: i just want it to be myset = ([elements]).
12:58  damagednoob: Tau, what about: ([e for e in elements])
13:00  Brend: How about: list(yourThing)
13:00  Brend: (Or maybe you want: set(yourThing) )
13:00  Kylarr: Does he even want a list?
13:00  Brend: Heck if I know/
13:03  Kylarr: Tau, what code are you using at the moment?
13:08  Tau: damagednoob: hmm, yea i will try that.
13:08  Tau: thank you.
13:09  Tau: Kylarr: i got what i was wanting.
13:09  Tau: :)
13:35  CyberJacob: does anybody know a good voip client that I can use in python?
13:37  CyberJacob: does anybody know a good voip client that I can use in python?
13:38  CyberJacob: ar even an api
13:38  CyberJacob: *or
13:48  nosklo: CyberJacob: telepathy has bindings.
13:49  CyberJacob: for python?
13:51  poppiez: hi, how can I join an array with a prefix variable in front of every element? "myvariablehere ".join(includes)
13:52  poppiez: s/array/list
13:52  nosklo: CyberJacob: yes
13:52  nosklo: CyberJacob: there's also divmod sine
13:52  nosklo: CyberJacob: and shtoom
13:52  CyberJacob: so would I be able to call something along the lines of
13:53  CyberJacob: telepathy.makecall(0123456789)
13:53  nosklo: CyberJacob: for that detail you'd have to check the actual libs. I doubt it's that simple, though.
13:53  nosklo: CyberJacob: you need auth, and lots of other things
13:53  CyberJacob: I'm looking for something to go in an embedded device
13:53  CyberJacob: but I'll give it a try
13:55  Kylarr: poppiez I think you want something like: [ "prefix" + include for include in includes ]
13:55  Kylarr: Then use the result in .join
13:57  poppiez: Kylarr: ah okay. so I loop through first and prefix it?
13:58  Kylarr: The list comp makes a new list with the prefix added to each element.
13:59  Kylarr: Does that help?
14:00  poppiez: Kylarr: yes, that's exactly what I want. thank you! however, if "prefix" is a variable, would I just remove the double quotes?
14:00  Kylarr: Yep. =)
14:01  poppiez: Kylarr: sweetness. thanks. as you can hear I just started out using python today :)
14:15 --- CHOCOBY is now known as chocoby
14:21  pradeepbp: need help on Tkinter. Anybody?
14:21  nosklo: pradeepbp: the channel policy is to just ask
14:23  pradeepbp: nosklo: how can I find out the **options that needs to be passed on in tkFileDialog.askopenfile(**options) ?
14:24  nosklo: poppiez: prefix.join(includes) would put prefix in between all elements. The very first element wouldn't have it prefixed
14:24  nosklo: pradeepbp: don't ask me, ask the whole channel
14:24  nosklo: and then wait for an answer
14:24  pradeepbp: nosklo: sorry
14:24  pradeepbp: how can I find out the **options that needs to be passed on in tkFileDialog.askopenfile(**options) ?
14:24 --- EMMA is now known as emma
14:24  nosklo: pradeepbp: to find that, you look for documentation
14:25  nosklo: pradeepbp: use google, search for "tkFileDialog askopenfile"
14:25  nosklo: pradeepbp: I also suggest you move to a better GUI library -- Tkinter is terrible
14:25  pradeepbp: nosklo: i need to know where are these details available in the docs?
14:25  pradeepbp: nosklo: which one do u reccommend?
14:25  nosklo: pradeepbp: Tkinter lacks good source of documentation, you have to google for it
14:25  nosklo: pradeepbp: gtk has great documentation
14:26  nosklo: pradeepbp: I use it.
14:26  nosklo: pradeepbp: I heard qt is also good.
14:26  pradeepbp: you mean pygtk?
14:26  nosklo: yes
14:26  pradeepbp: nosklo: how does it work for a newbie ?
14:26  nosklo: pradeepbp: great! way easier than Tkinter
14:27  pradeepbp: nosklo: that's good  :)
14:27  nosklo: pradeepbp: also, having documentation and a good tutorial available helps
14:27  nosklo: pradeepbp: people on #pygtk at gimpnet irc network is often helpful, too
14:27  nosklo: *are
14:30  pradeepbp: what's Glade?
14:31  nosklo: pradeepbp: it's a nice graphical gui designer
14:31  nosklo: pradeepbp: you can create your gui in glade and load it in your python script, then you just write the event handlers
14:31  pradeepbp: nosklo: ok.
14:32  nosklo: pradeepbp: glade reduces the development cycle. I use it a lot. however knowing how to do it without glade is very useful
14:33  pradeepbp: nosklo: I think I should concentrate on pygtk now and Glade later
14:33  kerio: who came first, Glade or Interface Builder?
14:35  nosklo: kerio: you mean mac os interface builder?
14:35  pradeepbp: is there any good pygtk tutorial (not reference manual) ?
14:36  nosklo: kerio: interface builder it's much older --- it's a port from nextstep or something like that
14:36  nosklo: pradeepbp: the official one
14:36  nosklo: pradeepbp: pygtk.org click on tutorial
14:36  kerio: pradeepbp: http://infohost.nmt.edu/tcc/help/pubs/tkinter/
14:36  nosklo: oh
14:36  nosklo: kerio: that's tkinter, not gtk
14:36  rohan233: hey guys how do you find the smallest value in a list?
14:36  pradeepbp: that tutorial seems to be very old. is it still relevant?
14:37  nosklo: pradeepbp: yes.
14:37  kerio: he was asking for a tkinter tutorial
14:37  nosklo: kerio: <pradeepbp> is there any good pygtk tutorial (not reference manual) ?
14:37  kerio: he was asking for tkinter help *before*
14:38  pradeepbp: kerio: thanks for sharing
14:39  pradeepbp: nosklo: thanks for that info. however the pygtk channel at gimpnet seems to be inactive right now
14:41  Kylarr: rohan233, min(yourlist)
14:42  pradeepbp: nosklo: when I see something like askopenfile(**options) in the documentation, where should I look for the details of '**options' in the doc/
14:43  kerio: no
14:43  kerio: you should look for askopenfile
14:44  pradeepbp: but it does not give anything in detail. It just says 'askopenfile(mode='r', **options)-    Ask for a filename to open, and returned the opened file'
14:46  Kylarr: pradeepbp, where are you looking? I googled the exact search term that nosklo suggested earlier and the first result is http://tkinter.unpythonic.net/wiki/tkFileDialog
14:46  BANSAL: hey guys, I am trying to test http://docs.djangoproject.com/en/dev/ref/contrib/gis/geoip/
14:47  pradeepbp: i was going through the doc generated by 'pydoc -p'
14:47  pradeepbp: Kylarr: i was going through the doc generated by 'pydoc -p'
14:47  BANSAL: i am having this error ..
14:47  BANSAL: http://www.fpaste.org/6A3J/
14:48  BANSAL: can anyone help me getting out of it ?
14:48  BANSAL: i have checked the stuff here http://code.djangoproject.com/changeset/9953
14:49  BANSAL: but everthing all right there .. still the is an error .
14:52  nosklo: pradeepbp: I specifically said to use google, 3 times :)
14:52  pradeepbp: nosklo: hmm.. by bad :(
14:52  pradeepbp: ^my bad
14:58  zer0c00l|Away: I am using os.popen menthod, i see other methods like popen2, popen3,popen4 are in the os module. What is the difference? And when using os.popen method, if the command thows any error message, it gets printed on the screen, how to mute the errors ?
14:58 --- zer0c00l|Away is now known as zer0c00l
15:01  magicblaze0071: a dicionary in python is a hash, right?
15:02  pradeepbp: close
15:04  zer0c00l: magicblaze0071: Yes dictionary uses hashing
15:05  magicblaze0071: thanks
15:07  DX-MON: I have already read through as much of the documentation for the C API as I could that might be relevant and I've also read through the FAQ, but I still cannot find how I might go about loading a class from a memory buffer provided from a compressed file which contains several bundled up. How might I be able to go about doing this, noting that I'm embedding Python in a game engine
15:07  DX-MON: *engine?
15:08  arkanes_: DX-MON: generally not the sort of thing you should be doing unless you already know how to do it without asking
15:09  arkanes_: DX-MON: in particular, you probably should be extending, not embedding, especially to start with
15:11  arkanes_: DX-MON: especially since you're clearly quite new to python
15:11  DX-MON: arkanes_: ok, so how can I use Python in my engine to provide a scripting interface into window events that can be triggered? The file that I decompress is a screen layouts file with "button" trigger information and I need to be able to load Python from that same file system to control what happens when one of the triggers is triggered. My engine also extends Python to allow for such interfacing, the only missing link is loading the Python to handle
15:11  DX-MON: the triggers
15:11  dassouki: has anyone here ever tried learning c# after using python for so many years ?
15:11  DX-MON: arkanes_: I'm also not new to Python itself, but I am new to it's C API
15:11  arkanes_: dassouki: sure
15:11  DX-MON: *to the CPython API
15:11  arkanes_: dassouki: lots of people, I bet
15:12  arkanes_: DX-MON: that really doesn't sound like "the only missing link"
15:12  arkanes_: DX-MON: since what  you are describing is not how python is run at all
15:13  dassouki: arkanes_: i'm finding it difficult, you know i've been hearing that the transition would be smooth but jeez. Today I was reading about MVVM and partial classes :)
15:13  dassouki: and i don't think python has a partial class implementation
15:14  arkanes_: dassouki: it doesn't
15:14  arkanes_: dassouki: but it also doesn't need them, because the concept doesn't make sense in a dynamic language
15:15  dassouki: arkanes_: i agree, when I first read it, I thought of it as a different way of overloading ..
15:15  dassouki: but anyways I need to write a web app taht we might have to support for 10 years, and we're thining that c# might be hte way to go
15:15  DX-MON: arkanes_: I already wrote an application that uses Python through my game engine to provide an interactive command prompt so I could test the programming interface the engine provides: That works fine. When I then go and use Python through my engine in a live testing environment (loading one of the layouts and presenting it for interaction), I need to get the engine able to load the Python from the layout so clicking stuff actually does something. We
15:15  DX-MON: aren't talking about running Python from a CLI here, but instead how it's run from in games such as EVE Online..
15:16  arkanes_: dassouki: no, partial classes are just a way to split the definition of a class in both space and time
15:16  arkanes_: DX-MON: yes, I do understand what embedding is, thank you
15:16  arkanes_: DX-MON: I'm not entirely sure that you do, especially since - again - what you are saying you want to do is *not how python works*
15:17  arkanes_: dassouki: asp.net is incredibly, terribly bad. WPF is nearly as bad
15:18  arkanes_: dassouki: and how long you will need to support it has absolutely no relevance to what language you use for it. C# is not any easier to support than python.
15:18  DX-MON: arkanes_: I wasn't saying otherwise, I'm simply pointing out that this seems a valid way to use Python iff I can load the class from the memory buffer I've got as I need to be able to in order to complete the interfacing between the visible window and the trigger/callback system (I really do not want to have to design my own scripting language for this and hard-coding events in the C/C++ code of the engine is a no-go)
15:18  arkanes_: DX-MON: so here's the thing
15:18  arkanes_: DX-MON:  "loading a class" is not a thing that python does
15:18  dassouki: arkanes_: well we know that the client's other app is in c#, and the other thing is that, we'll either build it with c#/django/pyqt (Web/desktop) or with c#(Wpf/asp) ...
15:19  arkanes_: DX-MON: and anyone who is going to be embedding python really should be absolutely clear on this
15:19  arkanes_: dassouki: well sure using C# can be a good idea if you're working with or for people who have previous C# expertise
15:19  arkanes_: dassouki: thats got nothing to do with the 10 year support thing, though
15:20  arkanes_: dassouki: asp.net is possibly the wost framework ever. it's more magical than django, less reliable than rails, and nearly as convenient to use as the original ASP
15:21  dassouki: i understand ... our second option would be python3.0/flask and we'll rewrite the application for them in 2015
15:21  DX-MON: arkanes_: ok, answer me this then, please: when I use Python from the CLI or I invoke it from the command line, I can either write a module to load via an import statement, or I can write a class which I then instanciate in the code that's run in the Python equivilent of main(). What is Python doing when it loads either that module or class, and can I replicate the class instance of that via a call into CPython from the C API?
15:21  dassouki: with whatever new technology is then
15:21  arkanes_: dassouki: however, if your client already uses it, and is familiar and comfortable with it, the fact that *they* like it could very well be a good reason to use it. That said, if you don't already know it, you probably shouldn't use it
15:21  arkanes_: dassouki: so all told, I'd say that you either should not use asp.net (and thus C#, which is a decent language), or that you are not the write company to be handling this project
15:22  arkanes_: DX-MON: all python does is execute python code
15:22  dassouki: arkanes_: which is fine, We're just bidding, and at any rate, I'll bid with what I know and can afford to maintain. So far it's looking like Python with either django or flask, and rewrite the app for them in 2015
15:23  dassouki: if i can get through the learn c# this weekend and am comfortable enough
15:23  damagednoob: arkanes_, there is a difference between asp.net (webforms) and asp.net mvc
15:23  dassouki: i'll build something small next week
15:23  dassouki: the bid doesn't close until the end of the month
15:23 --- chocoby is now known as CHOCOBY
15:23  damagednoob: webforms is crap and magical
15:23  arkanes_: DX-MON: the only way to "load a class" is to execute some code and hope it creates a class, and then further hope that you know what that class is called and where in the python namespace to find it
15:23  damagednoob: mvc is straight forward
15:23  arkanes_: damagednoob: I don't agree
15:23  dassouki: well we'd be using mvvm
15:24  dassouki: which is confusing as hell
15:24  arkanes_: and the wpf crap is even worse, imo
15:24  damagednoob: arkanes_, why?
15:24  arkanes_: I'm not a tremendous fan of *any* sort of fancy abstractions when you're doing http and creating html
15:24  DX-MON: arkanes_: or C code written in a class or a module that is extending Python.. and I'm not asking CPython to exectue anything else, what I'm asking is is there a function or a set of functions I can use from it's C API to do the same kind of thing as an "from [module] import [class]"
15:24  dassouki: i don't mind wpf, i think if you're a graphic ui designer, wpf is the right tool
15:24  arkanes_: html is simple. http is simple. pretending that you are doing something else is just opening you up for lies
15:25  dassouki: DX-MON: i don't like the from mamma import baby notation
15:25  arkanes_: DX-MON: you're still not understanding
15:25  arkanes_: DX-MON: python cannot do anything *except* execute python
15:26  arkanes_: also from a pure business perspective it's ridiculous
15:26  damagednoob: arkanes_, each to his own then, abstractions are useful and they help me code quicker
15:26  arkanes_: xaml is twice as complicated and much less well known than html
15:26  damagednoob: arkanes_, asp.net mvc helps me code quicker than if i'd have to parse http headers myself
15:27  arkanes_: why would you invest in a tremendous layer of abstraction just so that your UI designer can use something they're not familair with
15:27  damagednoob: had*
15:27  arkanes_: damagednoob: I didnt' say anythign about parsing http headers yourself
15:27  arkanes_: damagednoob: but asp.net goes to considerable lengths to try to hide the fact that you are using http
15:27  dassouki: i think WPF is a work in progress, but is for sure the way of the future with MS gui / web ui dev.
15:27  arkanes_: dassouki: thats actually another good point
15:28  DX-MON: arkanes_: and I never said I was trying to anything else.. though, imho, you are slightly wrong as the CPython engine can call into C/C++ code in the form of extensions and that's nolonger executing *python* code..  but that's not what I was asking about, so imho, you're mis-understanding my question.. I'm looking for a function or some functions I can call from C in the CPython C API that will replicate the Python code that allows you to load a
15:28  DX-MON: specific class so you can then instansiate it. (or, infact, to load a file from disk or memory that contains Python code so you can then use said code)
15:28  damagednoob: arkanes_, don't see how that's true when they give you easy access to Request/Response objects
15:28  arkanes_: dassouki: this borders on FUD territory, but take it from someone who has working in the MS realm for nearly 20 years now - MS creates new technologies that "are the future" every few years without fail
15:28  damagednoob: arkanes_, i think you're still thinking of webforms
15:28  arkanes_: dassouki: WPF is nearly 10 years old and is still a "work in progress"
15:28  DX-MON: arkanes_: and if it's not possible to do, just say that rather than telling me I don't understand
15:29  arkanes_: DX-MON: it's not that it's not possible to do, its that you are asking the wrong question
15:29  dassouki: arkanes_: I agree with you then, but overall don't you think it's a needed improvement over winforms ?
15:29  arkanes_: dassouki: hah no
15:29  DX-MON: arkanes_: so what is the right question, that would be more helpful to know and then have answered, please
15:29  arkanes_: dassouki: MSs stewardship of the UI of their platform has been shitty, WPF is just anotehr example
15:29  dassouki: and other the hand, i've used pyqt on a few projects before, and really sometimes wish it was as easy to use as some of the MS gui stuff
15:29  arkanes_: DX-MON: I told you already
15:30  julienb: hi !!
15:30  dassouki: DX-MON: in a sentence, iwas wondering if you can reiterate your question please
15:31  DX-MON: arkanes_: ok, so I have to use something like the C API equivilant of exec or code.Compile(), yes?
15:31  arkanes_: dassouki: of all the "new future technologies" MS has announced and promoted since i have been working on the windows platform, the *only* one which has actually survived and been fully supported has been the .net vm itself
15:31  julienb: very basic question... how can i make an integer positive ?? something like makepositive(-2)
15:31  arkanes_: julienb: abs
15:31  htoothrot: what's your complaint wiht pyqt vs MS offering's?
15:31  julienb: thanks
15:31  dassouki: julienb: abs(-5)
15:31  dassouki: but i think you need to import math
15:31  dassouki: i'm not sure
15:32  htoothrot: abs is a builtin
15:32  dassouki: ok
15:32  damagednoob: isn't asp.net 10 years old?
15:32  arkanes_: dassouki: I made a pretty heavy commitment to GDI+ back in the day and boy did that turn out badly for me
15:32  dassouki: I bought my first .net collection (5 cds and 1 dvd) in 2001
15:33  arkanes_: dassouki: VS.NET shipped in 2001
15:33  arkanes_: dassouki: asp.net was around somewhat before that
15:33  dassouki: arkanes_: ya GDI+ was horrible, I remember spending nights trying to draw a line, or sending stuff to back .. or even refreshing the canvas as the user was moving, or not having half of my items hide on me
15:33  arkanes_: no, GDI+ was actually pretty good
15:34  dassouki: i prefered winforms over gdi
15:34  arkanes_: but it used a software renderer and had some notable performance bottlenecks
15:34  arkanes_: dassouki: it's not an either/or
15:34  dassouki: true
15:34  arkanes_: anyway, MS talked up GDI+ a lot, it was the rendering layer than .net winforms used, and they talked alot about it's pluggable back ends and how they'd have hardware support and so on
15:35  arkanes_: and it was very nice! cairo was in its infancy then
15:35  dassouki: arkanes_: what do you use for python gui ?
15:35  arkanes_: but they totally dropped it and wrote a *new* renderer, again, for WPF
15:35  arkanes_: dassouki: wxPython
15:35  damagednoob: can you make decent looking interfaces with that?
15:35  arkanes_: of course
15:36  arkanes_: you can make any interface that looks like anything you want with any toolkit
15:36  dassouki: damagednoob: wx makes good interfaces, I've always used pyqt, and I'mgetting to a breaking point now
15:36  htoothrot: what's wrong with pyqt, in your opinion?
15:36  damagednoob: okay, i must be looking at the wrong demos
15:36  damagednoob: they interfaces don't seem to be as slick
15:37  damagednoob: they = the
15:37  arkanes_: damagednoob: wxPython is not designed around "slick"
15:37  DX-MON: dassouki: er, my question is basically that I've got some Python code floating about in memory after a decompression operation that my game engine performs and I need to be able to load it into CPython so I can then use it from in my engine via a call interface it connects into the GTK+ Window mouse-button callback interface. I already know, if I can get the code loaded into Python so I can then instanciate it, that I can call the method I need to
15:37  DX-MON: handle the event from in Python
15:37  arkanes_: damagednoob: actually, wxPython is another example of being screwed by MSes technology hopping and lack of committment
15:37  damagednoob: well that's a pity because that's what users care about
15:37  spinningcompass: dassouki: Please tell me more. I've had issues w/ PyQt, although I enjoy using it. I would enjoy hearing more about the issue you're discussing.
15:37  amogorkon: i just found http://www.speech.kth.se/snack/ but it seems very out of date; are there packages that do the same or more with current versions of python?
15:38  arkanes_: damagednoob: wx is a wrapping toolkit, it uses native controls on all platforms. MS around the time of the release of XP made a lot of promises about the future of its UI vision and its committment to its platform
15:38  arkanes_: damagednoob: and all of that was lies
15:38  arkanes_: damagednoob: also I disagree *entirely* with you about what users actually want and like
15:38  damagednoob: lol, fair enough, i'm no ms fan boy
15:39  damagednoob: i'm just judging the tech as i see it
15:39  DX-MON: dassouki: you can ignore that for the moment though as I have just had an idea as to how I can go about the whole instansiation part as the class inherits an extension class my engine provides which automatically saves a pointer to the instance into one of the control structures for the window that the class should have code executed by
15:39  dassouki: htoothrot: to me it's mostly around form processing, singal/slots nothing to major, but sometimes I wish there was a more straight forward approach
15:39  damagednoob: wpf > wx imo
15:39  arkanes_: just within MS there are at least 4 different incompatible UI toolkits
15:39  arkanes_: only 2 of which are actually usable
15:39  arkanes_: s/usable/public/
15:40  dassouki: as in the other 2 would be what whtye push with their latest products, and what we get with .net is usually one generation older ?
15:40  damagednoob: with more 'sane' api as well
15:40  arkanes_: and of course they've just pissed all over their committments to stuff like unified UI and consistent platform design
15:40  damagednoob: with a*
15:41  damagednoob: arkanes_, well that's because of the programmers they draw to their platforms
15:41  damagednoob: cut/paste vba
15:41  dassouki: what do you guys think of the new wp7 ? is it a game changer like some are saying ? would we be able to develop ironpython apps ?
15:41  arkanes_: damagednoob: partially
15:41  damagednoob: i think wp7 is dead in the water
15:41  arkanes_: dassouki: I'm not familiar with wp7, but ironpython is a real .net thing and it can use anything with a .net interface
15:41  damagednoob: unless they have something huge up their sleeve
15:42  damagednoob: ironpython has no more funding my ms
15:42  arkanes_: oh, windows *phone*
15:42  damagednoob: it's a community project now
15:42  arkanes_: pardon me while I laugh the laugh of a man who worked on the windows mobile platform for 3 years
15:42  damagednoob: haha
15:43  damagednoob: insanity?
15:43  arkanes_: maybe it's better now, but its kinda like mysql or php - I no longer have any trust in them to do anything right, and no interest in going through the reinvestigation process
15:44  spinningcompass: dassouki: WP7 is pretty, but it's not as innovative as its competitors, in my opinion.
15:44  rohan233:    for x in xrange(0, 8000, 50):
15:44  rohan233:       tosum = (acceleration[x:(x+5)])
15:44  damagednoob: so what about android/ios?
15:44  rohan233: what's wrong with my code?
15:44  arkanes_: damagednoob: the iphone app store is a huge political hassle, but developing on and for ios is nearly painless and a very clean experience
15:44  arkanes_: damagednoob: with the caveat that you really want to know obj-c
15:45  dassouki: with android, i think it'll be interesting to see how the java issue ends
15:45  arkanes_: rohan233: I don't know, you tell me
15:45  Kylarr: rohan233, what's not working?
15:46  rohan233: it says invalid index to scalar variable
15:46  arkanes_: damagednoob: overall I find developing on OS X (and ios by extension) to be incredibly nice. They've got all the best parts about being a windows developer in the late 90s
15:46  dassouki: I think php in the next 10 years will be the new cobol
15:46  arkanes_: rohan233: I bet it doesn't say that. Copy & paste, please.
15:46  FrEaKmAn_: would anybody recommend a lib to unzip 7z?
15:46  damagednoob: dassouki, i think java has that label now
15:47  arkanes_: FrEaKmAn_: go to pypi, search for 7z
15:47  spinningcompass: freakman_: pylzma?
15:47  damagednoob: java is a 'enterprise' language and those projects never get written
15:47  damagednoob: (re)written
15:48  FrEaKmAn_: spinningcompass, yeah.. I just need to find a example how to use it..
15:48  damagednoob: arkanes_, when you say developing on os x are you talking only about mobile development?
15:49  dassouki: Ruby would be the only language, i've never touched in my life
15:49  arkanes_: damagednoob: no
15:49  dassouki: i think with OSX now that my mac died, i can't program objective c anywhere
15:49  arkanes_: damagednoob: writing OS X apps is great too
15:49  arkanes_: dassouki: well if what you like is obj-c the language, you can use the GNU implementation
15:49  damagednoob: arkanes_, i hear a lot about how most of the fashionable programmers use mac for web coding, always wondered what it had over linux
15:50  Tze: There's even cross platform Cocoa implementations. Cocotron comes to mind.
15:50  arkanes_: dassouki: for me, though, its not obj-c, which is merely adequate, but cocoa
15:50  arkanes_: damagednoob: I mean specificially writing apps for OS X, not just using ti as a dev machine
15:50  dassouki: arkanes_: i agree, I had built a few projects on my mac using cocoa .. and now i want to build again, but you can't if you don't have a mac
15:50  damagednoob: right
15:51  arkanes_: damagednoob: for web dev I don't think it has any particular advantage over anything, except that it's a very web 2.0 sort of operating system - highly functional but with drop shadows and rounded corners
15:51  dassouki: thanks for hte discussion
15:51  damagednoob: arkanes_, problem is that you automatically restrict yourself to 6% of the market
15:51  dassouki: i'll be going to do some work now
15:51  arkanes_: damagednoob: not a problem for me
15:51  ssbr: damagednoob: more or less, depending
15:54  damagednoob: FrEaKmAn_, do you need a library? what about calling out to a process?
15:57  hesco: How can I effectively parse out the elements of a list of tuples and write them to a file?  This is not working for me: http://paste.pocoo.org/show/279123/
15:58  Bonaparte: hesco, csv module can write to a file
15:59  hesco: Bonaparte: thank you, will check that out.
16:00  FrEaKmAn_: damagednoob, you are right..
16:01  magicblaze0071: I'm passing a object method to a function --> f( callback ) where callback = myobject.method. Now in f I want to call callback with arguments. How can I do this?
16:02 --- amogorkon2 is now known as amogorkon
16:03  papna: magicblaze0071: The same way you call *anything else*.
16:04  Gorroth: def f(): f()\nf()
16:04  dropdrive: How might I write a Python program that modifies environment variables?
16:04  bcj: What's the most Pythonic way of removing all items from a dictionary with keys >2 ?
16:04  papna: dropdrive: For whom?
16:04  bcj: for k in dict.keys():   del dict[k]?
16:05  Gorroth: no
16:05  Gorroth: you cannot modify a sequence you are iterating
16:05  dropdrive: papna: Sort of like the equivalent of "source ..."
16:05  papna: bcj: You would create a new dictionary dict((k, v) for k, v in d.iteritems() if k >= 2)
16:05  bcj: Ok
16:06  hesco: Can anyone please explain this test failure for me?  This makes no sense to me: http://paste.pocoo.org/show/279173/
16:06  papna: bcj: This is O(n) where n is the total number of keys, but several other algorithmic complexities are possible if you used a database or a blist.sorteddict.
16:06  bcj: Hmm
16:07  Gorroth: it's O(n lg n)
16:07  Gorroth: oh
16:07  papna: Gorroth: No it's not.
16:07  Gorroth: i'm thinking of a tree
16:07  bcj: I think the way I'm currently doing it is more efficient.
16:07  Gorroth: it's only expected O(N)
16:07  papna: bcj: You're wrong, the way you pasted has the some asymptotic algorithmic complexity.
16:07  bcj: No, I'm not doing it that way
16:07  papna: hesco: read with no arguments reads the ENTIRE file, not one line.
16:08  hesco: I read last night though that you can modify a copy of sequence you are iterating
16:08  papna: hesco: Perhaps you want f.readline() or next(f)
16:08  bcj: I'm currently just getting a reference to the items I want to keep from the list (3 of them), then making a new list - this is O(1).  The garbage collection overhead should be the same for this as your method (I think).
16:08  hesco: thanks papna
16:08  hesco: trying that now
16:08  Gorroth: i thought you wanted to prune dicts that have keys > 2
16:08  bcj: Just wondered if there was a syntactically neater way
16:08  Pip: Hello, I have a snippet of code, could you fix the syntax error please ?
16:09  papna: bcj: I don't understand what you just said.
16:09  Pip:         except dbus.DBusException, e:
16:09  Pip:             logger.error(e)
16:09  Pip:             remaining_time = -1
16:09  Gorroth: bcj: are you trying to take a dict with keys>2 and turning it into a dict iwth only 2 keys?
16:09  papna: bcj: It's generally poor style to mutate a dict rather than make a new one.
16:09  papna: Pip: The syntax error is caused by something on previous lines (or you're using Python 3).
16:09  bcj: I have a dictionary with integer keys.  I want to make a new dictionary from this with only items with keys 0, 1 and 2.
16:10  Pip: Yes, I have python 3
16:10  hesco: Thank you papna: 8 passing tests and counting now
16:10  bcj: I'm currently getting a reference to those 3 then creating a new list
16:10  bcj: Which is O(1)
16:10  Pip: But before 3, it worked perfectly with python 2
16:10  bcj: I was just wondering if there was nicer syntax; that's all
16:10  Pip: papna, Could you fix the error for python 3 ?
16:10  papna: Pip: http://docs.python.org/release/3.0.1/whatsnew/3.0.html
16:10  papna: Pip: http://wiki.python.org/moin/Python2orPython3
16:11  papna: Pip: Right, Python 3 is not backwards compatible; that's the point.
16:11  bcj: Something like new_dict = old_dict[0, 1, 2]   ...or something.
16:11  Pip: papna, I'm NOT into Python 3, I just want you to fix the syntax error
16:11  papna: bcj: I dont' understand you.
16:11  Gorroth: bcj: so why use a dict at all?
16:11  papna: Pip: If you want me to do your bidding rather than help you write programs, I'll send my consulting rates.
16:11  Gorroth: bcj: forget about that.  maybe you have a reason to create a dict at first
16:11  papna: bcj: dict.keys is O(n), where n is the size of the dict.
16:12  bcj: papna: I'm not using that
16:12  bcj: I'm directly accessing three items, rather than iterating over the keys
16:12  bcj: Which is O(1)
16:12  Pip: papna, :D
16:12  bcj: Well, 3x key hash cost
16:12  papna: bcj: What? Not in your snippet.
16:12  bcj: As I say - I'm not using that code
16:12  papna: bcj: Your snippet had a time complexity of O(n)
16:13  papna: Pip: If you want to run Python 2 code on Python 3 without changing it, you're expecting wrong.
16:13  bcj: I said what I was actually doing was directly looking up three items and creating a new dict
16:13  Gorroth: bcj: l = [None, None, None] ; for k,v in enumerate(d): if k <= 2: l[k] = d[k]
16:13  Gorroth: i meant l[k] =v
16:13  papna: bcj: Gorroth That code is pointless.
16:14  bcj: Yes
16:14  Gorroth: no, not if he wants to create a subset and is using integer indices
16:14  papna: bcj: Okay, so when you were talking about what you were doing, you were talking about something different than you showed us.
16:14  bcj: I think what I have it optimal
16:14 --- zer0c00l is now known as zer0c00l|away
16:14  bcj: Yes, as I said
16:14  bcj: This is roughly the code I have...
16:15  bcj: a = d[0]; b = d[1], c = d[2]; d = {0:a, 1:b, 2:c}
16:16  Gorroth: hah
16:16  Gorroth: it is faster
16:16  papna: And you want {2: c}?
16:16  Gorroth: that has expected runtime of O(1)
16:16  bcj: papna: I want what I've got there.
16:17  papna: That code is at first glance horrendous.
16:17  bcj: Why?
16:17  papna: It looks like it was written by someone who doesn't know what iteration is.
16:18  bcj: Why would you want to iterate if you know exactly the key values you need?
16:18  bcj: Huh?
16:18  bcj: ;-)
16:18  Gorroth: bcj: d = {0:d[0], 1:d[1], 2:d[2]}
16:18  Gorroth: you wouldn't
16:18  Gorroth: your way is better
16:18  bcj: Gorroth: Cheers
16:18  bcj: Thanks
16:19  bcj: Gorroth: I thought of doing it the way you have there, but wasn't sure if it was legal to assign in-place like that.
16:19  bcj: legal/safe
16:19  Gorroth: bcj: yeah, i just tried and it gave no problems
16:19  bcj: Great, thanks
16:20  papna: dict(enumerate(d[:3])
16:22  FrEaKmAn_: I'm getting this stran errno 10060 with ftplib when I want to download file
16:22  FrEaKmAn_: strange*
16:23  FrEaKmAn_: I tried with filezilla and download works..
16:24  FrEaKmAn_: this is my code http://pastie.org/1243046
16:25  pr3d4t0r: Hola.
16:27  pr3d4t0r: Q. Which GUI library do you recommend for Python?  I'm trying to port this touch tool to Python as an educational experience:  http://is.gd/geisV - thanks in advance.
16:28  pr3d4t0r: Like in the Java version, I want to attain maximum portability.  So far wxPython seems to be the best choice around to me, but I have zero experience doing GUIs in Python.
16:29  hesco: any clues how to have my variables interpolated in a heredoc string? Or will I have to manually assemble this string from its component parts?
16:29  dassouki: htoothrot: what were your issues with pyqt ?
16:30  Juhaz: pr3d4t0r, no significant differences in portability for any of the major toolkits when it comes to basic functionality, all of them work on every platform. Some look and feel more native.
16:31  pr3d4t0r: Juhaz: Interesting.  How about learning curve and "staying power"?  Is there one that outclasses the others?
16:31  pr3d4t0r: Juhaz: I've used Qt before when it came to portability, for example, and Trolltech/Nokia are going to stay around for a while.
16:31  kvarley: Why do I get "AttributeError: 'tuple' object has no attribute 'write'" when I click save in this program? http://paste.ubuntu.com/518757/
16:32  verte: none of the four big GUI toolkits have the python nature, but they have all been around for ages and continue to be used
16:32  verte: kvarley: why do you think?
16:32  pr3d4t0r: verte: So it sounds like "pick the one you like among them" and I ought to be fine :)
16:33  pr3d4t0r: verte, Juhaz: Thanks.
16:33  verte: kvarley: on line 10, you create a tuple, on line 11, you call .write on it
16:33  verte: no worries.
16:33  teratorn: kvarley: you're missing "open" before that parenthesis
16:34  kvarley: Thanks all :)
16:34  Juhaz: pr3d4t0r, yeah, "pick the one you like" is probably the best way to make that decision
16:34  pr3d4t0r: Juhaz: :)
16:35 * pr3d4t0r goes back to pondering if jtouch 2.0 will be Python or Cocoa only.
16:35  verte: kvarley: also, os.system is blocking and unsafe. it will work fine in this instance, but in future, use the subprocess module.
16:36  teratorn: kvarley: throw a " &" on the end of the string to os.system, so it doesn't block your app
16:36  verte: pr3d4t0r: was that j supposed to be an i?
16:36  pr3d4t0r: Juhaz: Here's one last question:  in your experience/opinion, is there any advantage in using any GUI API over others in terms of market penetration?  I'd imagine with my limited sample of, say, 200 peeps I know across multiple organizations, that Qt is rather more pervasive.
16:36  pr3d4t0r: verte: No, it was a j.
16:36  verte: teratorn: I think it is supposed to block here.
16:36  pr3d4t0r: verte: "Java touch".
16:36  ultimatebuster: does sys.exit automatically cleans up everything?
16:36  ssbr: pr3d4t0r: "market penetration" is...?
16:36  verte: pr3d4t0r: python or cocoa?!
16:37  Juhaz: pr3d4t0r, gtk is probably most pervasive on Linux, since the most popular distros use gnome as the default desktop, but other than that, no idea.
16:37  verte: ultimatebuster: "cleans up" ? it calls finally blocks and that sort of thing
16:37  ssbr: ultimatebuster: Well, no. sys.exit tells python to exit, by raising SystemExit. It doesn't actually do the cleanup, the cleanup gets done after exit.
16:37  kvarley: verte so to write ftpuserfield to config file would I do something like "write(ftpuserfield, configfile)" ?
16:37  dassouki: does rewriting an app in a different language void the license ?
16:37  pr3d4t0r: verte: It's a GUI touch-like utility.  I wrote it because we had a need for touching a bunch of files all over the file system at the same time and this helped us visualize it better.  2-hour coding exercise little tool.
16:37  ultimatebuster: kay
16:37  pr3d4t0r: Juhaz: Good point.
16:37  ultimatebuster: what i'm trying to do is to break out of a recursion?
16:38  pr3d4t0r: ssbr: How pervasive a GUI handler would be vs. another.
16:38  ssbr: ultimatebuster: use a base case.
16:38  verte: kvarley: what makes you think that?
16:38  ultimatebuster: ssbr: base case?
16:38  verte: kvarley: your write calls are fine
16:38  kerio: eventually you'll stop recursing
16:38  verte: kvarley: you just need to open a file rather than create a tuple
16:38  kerio: do so
16:38  ssbr: ultimatebuster: if you don't have a base case, you'll never stop recursing. the base case returns some simple non-recursive computation, while the recursive case returns a recursive computation.
16:39  kvarley: verte Ah ok so I need to open the file I want to write to before I try and write something to it?
16:39  ssbr: ultimatebuster: you might even have more than one base case
16:39  verte: kvarley: yes
16:39  pr3d4t0r: verte: Well... most people I work with or share code with, etc. are on Macs (and I'm lucky to have a pretty big sample population).  I like the idea of keeping this as a portable toy, but it may be more effective for us to just use Cocoa and be done with it.
16:39  ultimatebuster: it's a game engine, where the mainloop will call the restart command which will call the mainloop function.
16:39  ssbr: ultimatebuster: like, fibnonacci is fib[n] = { 1 if n == 1 else 1 if n == 2 else fib[n-1] + fib[n-2] }
16:40  pr3d4t0r: verte: That's a separate discussion, really, from this.  I'm proficient in both Objective-C and Python; it's the Python GUI bit that I've never done so this sounds like a good time to learn.
16:40  ssbr: ultimatebuster: that is the wrong way to make something restart, honestly.
16:40  ultimatebuster: and if you try to bread out of the second mainloop function you will have to go through the first mainloop too.
16:40  ssbr: (because python is not tail-recursive)
16:40  ultimatebuster: yeah
16:40  ultimatebuster: i'm trying to find a way to make it better.
16:40  ssbr: ultimatebuster: restarting should exit the mainloop, and then re-enter.
16:40  ultimatebuster: but i'm suppose to release the shit in like 10 min.
16:40  ssbr: ultimatebuster: ...
16:40  ultimatebuster: hm.
16:40  ultimatebuster: kay
16:40  ssbr: pr3d4t0r: I think MFC wins there. :D
16:41  papna: "Release" or "turn in"?
16:41  ultimatebuster: i think i found a way.
16:41  pr3d4t0r: verte: It's not like hoards of people download jtouch anyway - I've had, tops, 3,000 downloads.
16:41  ultimatebuster: release.
16:41  pr3d4t0r: ssbr: Hah!
16:41  verte: pr3d4t0r: the state of gui in python is pretty sad imao
16:41  papna: The state of GUI in Python isn't worse than the state of GUI in general.
16:41  ssbr: papna: it's slightly worse.
16:41  verte: not significantly
16:41  ultimatebuster: or i can just raise SystemExit when the player doesn't want a restart.
16:41  papna: ssbr: Worse than what?
16:41  pr3d4t0r: verte: It seems, though I don't want to generalize, that Python GUI programming is just a tad more complicated than it ought to be.
16:42  ssbr: papna: than what I'd expect to have available given the state of GUI programming in general.
16:42  pr3d4t0r: verte: It's probably due to no vendor releasing a "ground up" Python GUI API.
16:42  verte: it's a tad less python then it ought to be.
16:42  papna: pr3d4t0r: GUI programming in general is a lot more complicated than it ought to be.
16:42  ssbr: papna: GUI programming doesn't *have* to be badly documented, prone to mysterious errors, and difficult to get into. it just is... in Python.
16:42  ssbr: (in other languages and environments, it isn't!)
16:42  papna: pr3d4t0r: People have tried, but it turns out more people want something similar to native toolkit stuff.
16:43  papna: ssbr: pyGTK's documentation is quite reasonable.
16:43  pr3d4t0r: papna: Maybe.  I come from Smalltalk.  GOF design patterns madness aside, Swing is actually a pretty decent way of writing GUIs.
16:43  ssbr: papna: oh, did I leave out "difficult to even install? I guess I did.
16:43  ultimatebuster: ssbr: raising systemExit seems to work for now, as I dont have anything really needed to clean up beside 1 variable.
16:43  papna: I've not ran into the problems it sounds like other people have installing or even shipping PyGTK
16:43  verte: html + javascript, tcl/tk, and FRP are all much saner
16:43  verte: particularly frp
16:44  pr3d4t0r: papna: But then Swing was "ground up" into Java and it ended being WORATE :o
16:44  papna: ultimatebuster: Never raise SystemExit. sys.exit does that.
16:44  ssbr: I tried to use PyGTK, but I could not get it installed. There *was* an all-in-one installer, but there isn't anymore. and apparently one of the many small pieces you need to install it (on windows, at any rate) failed for me, and I couldn't get it working.
16:44  pr3d4t0r: papna: WORATE == Write Onece, Run Anywhere, Test Everywhere to ensure it doesn't look like shit in some platform :)
16:44  ultimatebuster: papna: that's what i did
16:44  papna: ssbr: There are 4 things, one of which you probably have, the other three of which are on the same page.
16:44  verte: pr3d4t0r: swing always looks like dog vomit
16:44  eoss: ^
16:44  pr3d4t0r: OKi, I didn't mean to start a GUI flamewar.
16:45  ssbr: papna: I ran all the installers on the page, etc. I don't remember exactly what went wrong. Suffice to say, I used wx instead.
16:45  papna: ssbr: In the past couple weeks, I've had several people--not super-savvy ones--install them without a problem.
16:45  verte: :)
16:45  papna: several = 2
16:45  eoss: go into ##java and they will laugh at you for saying swing is good
16:45  eoss: and probably ban you
16:45  ssbr: papna: Yeah, I'm not gonna pretend my isses happen to everyone. Just that they do happen.
16:45  verte: our flagship big enterprise java app that we spend millions maintaining is swing all over the place
16:45  ssbr: papna: PyGTK is not exactly super-famous for being easy to install.
16:45  pr3d4t0r: verte: I've seen worse, I've seen better.  For nice GUI I to straight to Cocoa.
16:45  ssbr: (once, I tried to install wx from source, though. That's *way* worse)
16:46  ssbr: (wxPython, that is)
16:46  verte: pr3d4t0r: have you had opportunity to use a functional reactive gui framework?
16:46  teratorn: there are all-in-one bundles of gtk for windows
16:46  pr3d4t0r: verte: But for portable apps I rather see a Swing app over a recompiled/readapted app.  The latter tend to suck more.
16:46  kvarley: verte I have done "open(configfile[mode=w, [1]])" and now I get this error: "TypeError: coercing to Unicode: need string or buffer, tuple found"
16:46  pr3d4t0r: verte: No, I haven't.  M for me to RTFM that you'd recommend?
16:46  papna: ssbr: Right, I acknowledged that people have problems, and but that I haven't seen them personally so I don't know what it is.
16:46  verte: kvarley: not sure what that syntax is doing
16:46  pr3d4t0r: verte: I think JavaFX scripting was based on that.
16:46  verte: kvarley: it should look like this: configfile = ('/usr/share/ftpsuite/ftpservers.list', 'a')
16:47  verte: er
16:47  papna: kvarley: You passed open a tuple, rather than a string representing a filepath.
16:47  verte: kvarley: it should look like this: configfile = open('/usr/share/ftpsuite/ftpservers.list', 'a')
16:47  Juhaz: the two most common stumbling blocks I've seen for pygtk on windows are probably installing the wrong gtk+ runtime (the one without glib, cairo, etc.) and having another, older gtk that has been bundled by some app in PATH.
16:47  ssbr: papna: I think one of them is, "we do not have an all-in-one installer like every other package on the planet. Because we are soooo special".
16:47  pr3d4t0r: Ugh.  Haskell.
16:47  verte: kvarley: the open function expects a path to a file and optionally a mode
16:47  ssbr: That's a pretty big problem. D:<
16:48  papna: ssbr: "A developer on one platform has to install a package and its two dependencies" is dumb, but not ridonk.
16:48  ssbr: teratorn: I googled, found several, none of them worked. This was months ago, so I'm afraid I can't give specifics. :(
16:48  verte: pr3d4t0r: there is a really nice javascript one, and a nice haskell one, but the latter uses arrows and so is very ugly
16:48  pr3d4t0r: verte: :)
16:48  pr3d4t0r: verte: I'm reading now about it, thanks.
16:48  kvarley: verte & papna thanks
16:48  ssbr: I think one of them simply couldn't find my python installation (too high a version...?), and the other installed stuff that didn't work.
16:49  verte: flapjax, that's the one.
16:49  ssbr: I don't know if there were any other installers that failed in more interesting ways
16:49  teratorn: ssbr: well you said there weren't any, so I was just pointing out there there is one on gtk.org
16:49  pr3d4t0r: verte: Oddly, the programming model looks a lot like what I normally do:  event-based programming and message routing.
16:49  papna: teratorn: For pygtk, pygobject, and pycairo?
16:49  ssbr: teratorn: Oh, there's an all-in-one installer for GTK, yeah.
16:49  ssbr: PyGTK is different.
16:49  verte: it's not really much new, nothing really is
16:49  verte: I just think that guis should be fairly declarative
16:50  ssbr: the PyGTK website does link to an unofficial all-in-one installer, but that one didn't work.
16:50  ssbr: verte: I don't think anyone disagrees with you, these days.
16:50  papna: I'm not even sure exactly what that means.
16:50  ssbr: papna: it means XUL.
16:50  papna: Oh.
16:50  verte: I guess I'm not out-there enough.
16:50  teratorn: papna: I didn't say anything about the python side :)
16:51  verte: well, XUL but not.
16:51  ssbr: papna: actually it probably doesn't, but XUL is certainly one interpretation of "declarative GUI"
16:51  pr3d4t0r: verte: Thanks for the suggestions; this is good stuff.  Are there any functional reactive GUIs you know about?  No Haskell, no JavaScript ;)
16:51 * pr3d4t0r continues to Google.
16:51  ssbr: I'd like XUL better if PyDOM worked when I tried it, and if it was sexps instead of XML.
16:51  papna: teratorn: Right, but that was the topic.
16:51  verte: pr3d4t0r: there is one in racket that wraps wx
16:51  Brend: pr3d4t0r, Erlang's wx integration, maybe
16:52  pr3d4t0r: verte, Brend: Thanks.
16:52  ssbr: verte: got a name?
16:52  pr3d4t0r: Brend, verte: It troubles me that what I'm finding is hardly mainstream.
16:52  pr3d4t0r: Brend, verte: It'll be an interesting learning exercise, though.
16:52  verte: lets see.
16:53  pr3d4t0r: Brend, verte: Ocaml, Haskell, etc.
16:53  verte: ssbr: frtime
16:53  lvh: dash: Have you seen Andrew's reply to the Twisted mailing list
16:53  pr3d4t0r: OKi, I'll go read instead and see what I come up with.  Thanks to all for your time.
16:53  lvh: dash: I'm looking for a nice way of saying "sorry man but I really don't know anything nor care about stackless"
16:54  verte: does anyone even maintain the stackless patches?
16:55  Brend: pr3d4t0r, it troubles you that functional programming isn't mainstream?
16:55  verte: christian moved onto psycho and then had a stroke and is only starting to get back into programming
16:55  ssbr: FP is pretty mainstream at this point, I think. Isn't it?
16:55  ssbr: It sure gets *talked about* a lot in the mainstream.
16:55  pr3d4t0r: Brend: No, it troubles me that writing this in a functional language would make it more interesting but perhaps less easy to accept when I distribute the code.
16:56  verte: indeed
16:56  lvh: verte: yeah the problem is though I dont know any of this stuff
16:57  verte: part of the trouble is that you live in your own little world, which may be python or java or .NOT or common lisp and you don't really know how big the world is or your part in it
16:57  pr3d4t0r: Brend: I don't particularly like functional programming (a friend named Fowler once told me, "there are two kinds of programmers:  Lisp bigots, and Smalltalk bigots; everyone sooner or later falls into either camp.") being an OO bigot that I am.
16:57  lvh: verte: plus it's supposed to be a twisted introduction
16:57  lvh: verte: not a twisted + stackless.py introduction
16:57  verte: yeah
16:58  lvh: also, I still think it is completely insane that I can't use google docs with chrome
16:58  bsdbandit: good morning all
16:58  verte: awesome.
16:58  lvh: this is many things but 'reasonable' is not one of them
16:58  ssbr: lvh: you can't?
16:58  lvh: verte: serves me right for running nightlies though
16:58  pr3d4t0r: bsdbandit: Good morning.
16:58  lvh: ssbr: I get an infinite redirection loop
16:58  ssbr: Oh, nightly.
16:58  ssbr: ha ha!
16:58  lvh: ssbr: ff4 works fine
16:59  ssbr: but would fx minefield work fine?
16:59  verte: lvh: tried conkeror?
16:59  lvh: ssbr: I am using minefield
16:59  bsdbandit: im trying to using python to read a text file line by line instead of having to use the unix tail command
16:59  lvh: ssbr: that's 4.0b8pre
17:00  ssbr: Oh. Well, then!
17:00  lvh: bsdbandit: itertools.islice
17:00  ssbr: that is pretty funny then.
17:00  bsdbandit: cool
17:00  hesco: Can anyone here please advise me why this code would not be generating my shape files in the working directory?
17:00  hesco: ogr = "ogr2ogr -f 'ESRI Shapefile' %(directory)s %(vrt_file)s" % { 'directory': directory, 'vrt_file': vrt_file }
17:00  hesco:         os.system( "cd %(working_directory)s ; %(ogr)s " % { 'working_directory': base_dir + '/dc_voting_data', 'ogr': ogr } )
17:00  verte: hesco: ESRI, oh boy
17:01  verte: don't use os.system, use subprocess
17:01  lvh: My lord! Nightlies of Jaegermonkey + Tracemonkey are now beating V8 on sunspider!
17:01  FrEaKmAn_: could somebody help me use lxml.. I want to merge multiple xml files into one
17:01  lvh: (Not on V8bench though.)
17:01  ssbr: lvh: :D!
17:01  hesco: is that also a part of the os class?
17:01  papna: freenode["#python-offtopic"].append(copy.deepcopy(lvh))
17:01  bsdbandit: subprocess is the best thing since sliced bread :)
17:01  verte: hesco: subprocess is a module
17:01  ssbr: Now if only Python's spidermonkey bindings weren't complete shit.
17:02  ssbr: (PyV8 looks properly decent)
17:02  lvh: ssbr: well yes, google cares about it
17:02  ssbr: About PyV8?
17:02  verte: hesco: also, can't you do that with ESRI's python API?
17:02  lvh: ssbr: yes
17:02  verte: hesco: or maybe not, the raster stuff is (more) insane
17:03  ssbr: lvh: Ohhh. The developer for pyv8 is a googler.
17:03  ssbr: I never noticed. There was only one, I figured it was an independent thing.
17:03  hesco: I've been able to do this manually, now I need to automate the process to generate 100 precinct maps by yesterday
17:03  ssbr: But he's worked on the... google version of getopt?
17:03  ssbr: wtf would google do such an awful thing? :(
17:04  verte: NIH
17:04  ssbr: Well it's for C++
17:04  ssbr: so I dunno. Maybe it makes sense in C++.
17:04  Brend: Anything makes sense in C++
17:04  teratorn: lvh: isn't that Andrew just talking about (on your thread, for some reason) the talk *he* is going to give?
17:04  lvh: teratorn: yes
17:04  verte: the easy answer is, don't parse arguments in C++
17:05  ssbr: verte: what's the difficult answer?
17:05  lvh: teratorn: but I keep getting the impression he wants me to do something and I don't know what it is
17:05  lvh: teratorn: (and I probably don't want to)
17:05  lvh: teratorn: I'm going to go with "That sounds very interesting!"
17:05  teratorn: lvh: hehe
17:05  ssbr: I'd attend that talk!
17:05  verte: ssbr: lets examine your motivation for using C++.
17:05  lvh: ssbr: Which one
17:06  lvh: sbok: Stackless + Twisted?
17:06  ssbr: It'd let me shut people up that insist that Stackless isn't Python and is way faster for network programming.
17:06  lvh: err, ssbr*
17:06  ssbr: "Oh yeah I can do that too."
17:06  lvh: ssbr: The one Allen and I are planning probably isn't too interesting.
17:06  lvh: ssbr: Well, for you, anyway
17:06  verte: stackless is nothing.
17:06  ssbr: lvh: I'd attend that too.
17:06  verte: it's a glorified driver loop.
17:06  ssbr: but, I'm not gonna be at PyCon, because I'm poor.
17:06  lvh: ssbr: The idea right now is to build a simple service, and then tack on features. Because Twisted is all about bloat.
17:06  ssbr: But if I was !
17:07  verte: lvh: exocet?
17:07  verte: oh.
17:07  ssbr: verte: problem is that I don't have motivation for using C++.
17:07  lvh: verte: I don't really know anything about exocet I'm just its marketing team
17:07  ssbr: Personally I'm all about Lua+C or Python+C or CoolLanguage+C.
17:07  erifax: C+C. :)
17:07  ssbr: erifax: I said CoolLanguage
17:07  teratorn: E+Python+Twisted
17:07  verte: lvh: well, neither do I. I read a 273 line source file and went, "what, that's it?"
17:08  teratorn: I don't know what that would be, but it would be _damn cool_
17:08  ssbr: teratorn: that would be an implementation of E on top of Twisted. Or something.
17:08  ssbr: (on top of Python+Twisted that is)
17:08  ssbr: I think Ecru was supposed to do something along those lines...?
17:08  lvh: ssbr: I'm seriously considering doing embedded lua because the embedded python things just aren't up to snuff yet
17:08  ssbr: lvh: :(
17:08  verte: lvh: for what?
17:08  lvh: ssbr: I can do an FPGA Lua interpreter but I really can't do another FPGA Python interpreter for recent Python
17:09  lvh: s
17:09  hesco: verte: tried that with: ogr = "ogr2ogr -f 'ESRI Shapefile' %(directory)s %(vrt_file)s" % { 'directory': directory, 'vrt_file': vrt_file }
17:09  hesco:         args = shlex.split(ogr)
17:09  ssbr: lvh: I'm considering Lua because it's just so goddamned fast.
17:09  hesco:         p = subprocess.Popen(args)
17:09  hesco: but still no love
17:09  ssbr: if it means I get to write less C, I'm all for it.
17:09  lvh: ssbr: boring
17:09  lvh: ssbr: luajit is good at benchmarks
17:09  ssbr: (if it doesn't, I guess there'd be no benefit to it being so fast... :< )
17:09  ssbr: lvh: ten times as good!
17:09  teratorn: ssbr: mmmh, not sure.. ecru uses some python, but the long term goal was to be a C-based runtime... but anyway it's "on hold" unless someone gets interested in it again
17:09  verte: hesco: don't do string formatting to build things you're just going to pass as arguments. just pass them.
17:10  ssbr: teratorn: Long-term goal, yes.
17:10  lvh: ssbr: there's always an incredibly frustratingly small amount of that that carries over to Real Programs
17:10  verte: hesco: anyway, how does it fail?
17:10  ssbr: lvh: Ouchie.
17:10  thyko: hello code baboons extraordineir!!
17:10  ssbr: OK, Python+C it is, then.
17:10  Brend: ssbr: Wimp
17:11  hesco: verte: it quietly fails to create the new directory and the shape files which are expected
17:11  lvh: ssbr: To be honest I just run Cython over things
17:11  ssbr: Brend: the only alternative is to jump headfirst into crazy C++ and use Boost's Python stuff
17:11  Brend: ssbr: \o/
17:11  lvh: ssbr: There's a huge amount of stuff that Cython can do awesome magic with even without type hints
17:11  amogorkon: i just found http://www.speech.kth.se/snack/ but it seems very out of date; are there packages that do the same or more with current versions of python?
17:11  ssbr: lvh: oh, I haven't investigated that option
17:11  Brend: ssbr: B::P is really pretty good
17:11  ssbr: Brend: yeah, but Boost scares me.
17:12  lvh: Brend: Yes, it's unfortunate you have to write C++ and Boost to use it
17:12  Brend: ssbr: You don't have to use most of it
17:12  ssbr: Brend: Mostly.
17:12 * ssbr does his best Newt impression
17:12  verte: hesco: subprocess.call(["ogr2ogr", "-f", "ESRI Shapefile", directory, vrt_file], cwd=working_directory)
17:12  Brend: (Now that I know some more C++, I like Boost more than I used to)
17:12  kvarley: Could somebody please tell me why it doesn't think ftpserverfield is defined? http://paste.ubuntu.com/518768/
17:12  Brend: (Especially the bits of it that are going into tr1)
17:12  b52: hey
17:12  b52: how can i get the first x items of a generator?
17:13  teratorn: if you're forced to do C++, as I was a while ago, boost is pretty much a life-saver
17:13  lvh: b52: islice
17:13  b52: islice?
17:13  kerio: islice.
17:13  ssbr: b52: itertools.islice
17:13  lvh: b52: Or takewhile + enumerate
17:13  Brend: teratorn, I bet most of what saved your life is available in the stdlib now, on recent gcc's and VS2010
17:13  lvh: But islice is better :-)
17:13  verte: hesco: without better error output from the process it's hard to say where to look next
17:14  teratorn: Brend: some, perhaps
17:14  kvarley: verte - why it doesn't think ftpserverfield is defined? http://paste.ubuntu.com/518768/
17:15  verte: kvarley: where?
17:15  Kylarr: kvarley, it's looking for a local or global var and not finding one. You probably want something along the lines of self.ftpserverfield.get_text()
17:15  verte: kvarley: oh, in saveall
17:15  Kylarr: (I've never used GTK but if there's a set_text I'd guess there's a get_text too)
17:15  kvarley: In saveall it can't find it
17:15  verte: kvarley: "SERVER=" + self.ftpserverfield
17:16  verte: kvarley: the self is important
17:16  kvarley: Ah ok thanks verte =) again! :P
17:16  hesco: verte: how can I get subprocess to generate that needed feedback?  Any ideas?
17:16  verte: hesco: it passes on all the output it gets from the process
17:17  hesco: This also fails to generate anticipated files and dies silently:
17:17  hesco: working_directory = base_dir + '/dc_voting_data'
17:17  hesco:         subprocess.call(["ogr2ogr", "-f", "ESRI Shapefile", directory, vrt_file], cwd=working_directory)
17:17  b52: lvh: ssbr thanks
17:17  kvarley: verte - Now it gives another error :( "TypeError: cannot concatenate 'str' and 'gtk.Entry' objects"
17:17  verte: hesco: since these things just call an esri process, you're probably going to be better of asking esri people rather than us
17:17  Kylarr: kvarley, did you try my suggestion?
17:18  verte: hesco: because all you're doing is calling another process
17:18  thyko: hesco: str(subpricess.Popen(['blah' 'bulaaa'], stderr=subprocess.STDOUT, stdout=subprocess.PIPE).communicate()[0])
17:18  thyko: str() incase there's a None in there
17:18  verte: thyko: subprocesses inherit your stdout.
17:19  kvarley: Kylarr: Ooops sorry, will try now :)
17:19  nvictor: ok python lang ref says __dict__ of a module is a special read only attribute
17:19  nvictor: is it?
17:19  verte: nvictor: try assigning to it.
17:19  thyko: verte: yes, hence i pipe it
17:19  Gentle: specs always lie, didn't you learn that during your MCSE training? ;)
17:20  TheCommieDuck: I can't think of what to write in python.
17:20  verte: infobob: codepad nvictor import subprocess; subprocess.__dict__ = 7
17:20  nvictor: verte: ok. now before that paragraph it says: e.g. m.x = 1 is equivalent to m.__dict__['x'] = 1
17:20  infobob: nvictor, http://codepad.org/NnZtCujU
17:20  nvictor: verte: yes, but why does it give that example i wrote above?
17:21  verte: nvictor: it said the attribute is read only, not the object
17:21  nvictor: dang!
17:21  thyko: i see infobob is becomming sophisticated some
17:21  papna: nvictor: You can mutate the attribute, but not rebind it.
17:21  papna: You can mutate the dict, but not rebind the attribute to a different object.
17:22  verte: thyko: it's actually just a feature where you can specify the pastebin
17:22  kvarley: Kylarr thanks so much :) works now
17:22  kvarley: Thanks for all you help verte =)
17:22  thyko: I loove the language lawyers around here
17:22  verte: nvictor: also, which irc client are you using on your phone?
17:23  bsdbandit: :)
17:26  nvictor: verte: andchat :)
17:26  nvictor: love it
17:26  nvictor: verte: but not on the phone right now
17:26  nvictor: papna: i believe it shouldn't be called "read only"
17:27  nvictor: papna: it's confusing, when you have the term "mutable" that can be associated with it :D
17:27  papna: nvictor: I see where you're coming from.
17:28  papna: But you should never read or mutate __dict__ directly.
17:28  papna: So it's all good.
17:28  nvictor: ok
17:29  hesco: verte: this is not yet a gdal issue.  I rewrote my subprocess.call to read:
17:29  hesco: subprocess.check_call(["touch", "leroy_was_here"], cwd=working_directory, stderr=subprocess.STDOUT, stdout=subprocess.PIPE.communicate()[0])
17:29  hesco: then ran updatedb, and locate leroy_was_here and turned up nothing new that would have been created by this line of code.
17:29  verte: hesco: PIPE).communicate
17:30  verte: hesco: so this line isn't being hit!
17:30  verte: hesco: call pwd
17:30  thyko: hesco: use my example man
17:31  hesco: I tried your example, but it threw a SyntaxError: invalid syntax
17:31  hesco: will next try pwd
17:31  verte: I wonder what leroy is doing these days
17:33  hesco: he shows up in my server's file systems from time to time as I test permissions and such
17:33  hesco: pwd gave me nothing
17:34  Thermoelectric: Hey, can anyone tell me what commands and stuff I should look into, to check if all the PDF files linked to in a HTML file, are downloaded into a certain directory?
17:34  thyko: hesco: paste the exact line you used
17:34  MrElendig: Thermoelectric: lxml and os.walk?
17:34  hesco: thyko: http://paste.pocoo.org/show/279200/
17:34  hesco: just did
17:35  Thermoelectric: MrElendig: Anything a little less indepth? I'm a bit new to python...
17:35  thyko: hesco: that ire *really* not what i have you
17:35  thyko: *gave
17:35  thyko: let me reply
17:36  damd: hey, i'm trying to figure out how to install packages using setup.py to a custom directory which i specify myself
17:36  MrElendig: Thermoelectric: lxml is probably the easiest way to get all those links out of the html file
17:36  papna: hesco: What paren is that last ) supposed to be closing?
17:36  damd: i've found that --install-dir is the way to go, but i can't figure out how to pass it as an argument
17:36  damd: any ideas?
17:36  hesco: I see you advised Popen, instead
17:36  MrElendig: damd: -root and -prefix
17:37  thyko: hesco: http://paste.pocoo.org/show/279201/
17:37  papna: damd: Usually you'd use --home=~ or --home=wherevs
17:37  MrElendig: maybe
17:37  papna: damd: Or use virtualenv.
17:37  thyko: hesco: http://paste.pocoo.org/show/279204/
17:37  thyko: that one
17:38  papna: What are we calling str for?
17:38  papna: That doesn't make sense.
17:39  verte: what doesn't make sense is the stdout/stderr/communicate business when you already inherit stdio
17:39  damagednoob: what's a good cross-platform (windows, linux) way of dealing with the terminal window
17:39  damagednoob: i'm looking to set cursor positions, etc.
17:40  papna: damd: urwid
17:40  TheSheep: damagednoob: urwid
17:40  papna: damagednoob even
17:40  Thermoelectric: MrElendig: Thanks, I'll see if I can figure out how to do something with that.
17:40  hesco: thyko: ok, tried that and it still fails quietly
17:40  papna: hesco: What are you trying to DO?
17:40  damagednoob: ta TheSheep
17:41  thyko: hesco: was the file created? thats what touch does, its very quiet
17:41  thyko: try this next one
17:41  hesco: run a system call from inside a python script passing it computed values in its arguments
17:41  papna: thyko: That's not exactly what it does.
17:41  papna: hesco: That is underdefined.
17:42  hesco: by fail I mean it failed to create the anticipated file, either in the cwd, or the directory I'm interested in affecting, locate shows no new files by that name
17:42  verte: hesco: http://paste.pocoo.org/show/279205/
17:43  thyko: papna: i didnt say *exactly*, but it certainly does that
17:43  thyko: hesco: http://paste.pocoo.org/show/279206/
17:44  kenneth_reitz: http://www.linuxjournal.com/article/3882/#
17:44  hesco: verte: that also failed to create any output when tickled from my test script.
17:45  thyko: hesco: run that one
17:45  verte: hesco: but pwd in the shell works? and a print right above the line that calls this works?
17:49  thyko: that ping one shouldnt ... really work without shell=True though, i think ...
17:49  hesco: My apologies folks.  Now I have to go back and retest all that valuable advice you have shared with me this last twenty minutes or so.  I just reinspected my test file and it was not doing what I thought it was doing.
17:50  hesco: These all-nighters are not good for my efficiency.  (I did get a two hour nap).
17:50  verte: it happens :)
17:52  HypnoGenX: Is there any way to run a Python script in Windows without it launching a command shell box for a script that has no text output but which instead launches a GUI?
17:52  hesco: sweet, that was a simple change and puts me back in the comfortable territory of dealing with familiar error messages: Unable to open datasource `prec_12.vrt' with the following drivers.
17:53  hesco: now to get it into the right directory and I think we're golden
17:53  thyko: hesco: eh? you're wrestling with the snake without enough sleep? :D!!
17:53  teratorn: HypnoGenX: change the extension on your program from .py to .pyw
17:53  hesco: My housemate literally has a pet python.
17:53  papna: HypnoGenX: pythonw.exe
17:53  papna: hesco: The language is named after the comedy troupe.
17:54  hesco: It got out of its terranium a few months ago and we did not see her for a couple of days
17:54  HypnoGenX: teratorn, papna: Thanks. :-)
17:54  hesco: she crawled up the wiring hanging off my monitor and router here on the desk and found a warm place to sleep under the old CRT (before it was finally replaced with this flatscreen).
17:55  hesco: She was peeking through the papers on my desk, notice my pinkey hanging out as I worked the keyboard and struck and bit me.
17:55  hesco: My roommate got woken up over that one
17:56  amogorkon: what is the most basic way to output 440 Hz for 1 sec using python on any platform?
17:56  teratorn: hesco: were you writing Python code at the time?
17:56  amogorkon: audio
17:56  hesco: She crawled up under the desk after that, sleeping on the power brick until Mark recovered her the next morning
17:56  thyko: hahaha
17:56  hesco: no, probably perl, actually
17:57  thyko: mybe thats why
17:57  hesco: probably
17:57  teratorn: hesco: most unwise!
17:58  hesco: Well, if perl had mapnik and cairo I likely would have already been in bed, but you folks have been great helping a newbie learn the snake
17:58  hesco: or comedy troupe as it were
17:59  thyko: never see john cleese on a python book cover ..
17:59  damagednoob: i can't see an easy way in urwid to output the text to a specific location in the terminal window. I'm looking for something along the lines of printText(text, x, y). I can do it easily enough on linux using 'tput'
17:59  damagednoob: just need a method on windows
18:00  thyko: *seen
18:00  hesco: happy, happy, joy, joy !!!
18:01  hesco: shape files in an appropriate directory.  At this hour it takes so little to make one happy
18:01  verte: damagednoob: if you want to put text somewhere, you need to put a widget there
18:01  hesco: 10 successful tests and counting.  Perhaps 3-7 more and I can put this one to bed
18:02  ssbr: Urwid doesn't work on windows...
18:02  yuwang: ssbr: hi
18:03  ssbr: yuwang: hello
18:03  yuwang: ssbr: unping. sorry for disturb
18:03  yuwang: :)
18:03  Timtitibu: Hi. Is there any advantages to use pip against setuptools?
18:03  ssbr: :P
18:04  ssbr: Timtitibu: pip is an alternative to easy_install, not setuptools
18:04  ssbr: and the advantage is that it's supposedly less broken.
18:04  ssbr: In my experience they both suck, though.
18:04  ssbr: (is a --prefix option too much to bloody ask for?)
18:04  xro: hi, i would like to do a xor between 2 string... is there a simple way? a lib?
18:05  ssbr: xro: xor only works with integers. you can convert characters to integers with ord(). You can convert integers back to characters with chr()
18:06  ssbr: (the struct module also works)
18:06  verte: ''.join(chr(ord(x) ^ ord(y)) for x, y in itertools.izip(X, Y))
18:06  verte: wooo ugly questions
18:06  ssbr: it's prettier in C.
18:07  nvictor: ssbr: indeedy
18:07  xro: <ssbr>, and no lib where the function is already done?
18:08  Timtitibu: thanks :\
18:08  papna: xro: Doing it on a string doesn't necessarily make sense. Perhaps you want a long?
18:09  xro: in fact i get --> yAcML0dfKX1BV0JlAx13JUFXQnpKVTMVRVRCa and a key AWBhJU3w.... and i would like to decode it...
18:16 --- mukul_afk is now known as mukul
18:25  papna: "if (None != filename):"
18:26  andywww: Hi, i'm struggling cutting up a list of dictionaries, I wonder if anyone can help
18:27  andywww: I'm trying to achieve this:
18:27  andywww: http://gist.github.com/642393
18:27  papna: andywww: Cutting up?
18:27  papna: andywww: It sounds like you might really want a database.
18:28  andywww: hmm, theres no need for permanent storage though
18:28  papna: andywww: You can for example do [d for d in dictList if d["owner"] == "userA"]
18:28  papna: andywww: Then don't store it permanently.
18:28  papna: It looks like you might want to query based on multiple things.
18:31  andywww: what i need to do essentially is, when the script is run on a daily basis, take each value, and email the subset of values to the user in "owner"
18:31  andywww: "owner" is actually a email address
18:31  andywww: i suppose i could fire off an email for every value
18:32  andywww: i just hoped that, without too much work, i could bunch them all together and send out just the one email to each distinct user
18:33  andywww: papna: thing is, I don't know prior to the script running, what email addresses will be included
18:33  andywww: it pulls them out a spreadsheet which i don't control
18:33  papna: andywww: You would use a for loop.
18:33  papna: andywww: And do whatever you actually need to.
18:34  papna: andywww: For example, I might make a dict where the keys are the email addresses and put stuff in it based on what I need.
18:34  papna: I don't know what you need.
18:34  papna: So I showed you an example of looping and checking somethig.
18:34  mukul: Can anyone tell me where to ask a pygtk question? IRC Channel?
18:35  papna: mukul: Here or #pygtk on irc.gnome.org
18:36  yawniek: hi, is there a way that i can enter unicode character von osx terminal app into the python2.x repl?
18:36  andywww: papna: is there a way of doing like a 'select distinct owners from dictionary list' ?
18:36  papna: andywww: A for loop.
18:36  papna: A trivial for loop;
18:36  andywww: lol
18:36  damagednoob: andjew, what about putting the values into a set?
18:37  andywww: without wanting to sound dense, can you show me how?
18:37  papna: damagednoob: What would that help?
18:37  damagednoob: wouldn't that make all the owners unique?
18:37  papna: andywww: I showed you how to select based on one thing.
18:37  andywww: it would but i need to keep all the values
18:37  xro: papna>, ssbr,    so do you thought about --> http://dpaste.com/262499/
18:37  papna: andywww: Then devize a structure which can do this, such as a dict of dicts or a dict of lists.
18:38  papna: andywww: I don't actually know what data you need where and when,.
18:38  papna: xro: I think you want a long, not a str.
18:38  papna: xro: x.__len__() is a bad way of writing len(x)
18:39  damagednoob: andywww, do you have some example data that you want to transform?
18:39  mukul: papna: I want to calculate maximum text length so that it fits into the screen. We are using pango. We want to find out the width of the screen. Wish if you could give some pointers.
18:40  andywww: i'll make the example a little more readable, bare with me 5 mins
18:40  xro: papna, the code is a crypted PNG file... do you think about long or string?
18:40  papna: mukul: I'm not pygtk expert.
18:40  papna: mukul: What decision are you basing off this information?
18:40  papna: xro: Why are you ^ing it.
18:40  damagednoob: oh sorry andywww , didn't see your previous link
18:41  papna: xro: Never build strings with +=. It can be unnecesarily quadratic.
18:41  andywww: well let me just fix it up properly, its a bit generic atm
18:41  papna: xro: Is the point to implement an encryption algorithm yourself?
18:41  xro: papna, because the PNG was crypted with a xor....
18:41  xro: papna, why never built a string with +=?
18:42  papna: Why didn't you use a REAL encryption algorithm.
18:42  papna: xro: < papna> xro: Never build strings with +=. It can be unnecesarily
18:42  papna:                quadratic.
18:42  xro: papna, it's for a challenge... i have to solve it
18:43  xro: papna, not english... so what mean quadratic? O(n^4)
18:44  mukul: papna: Actually, I was trying to solve a bug wherein text appears out of screen as maximum text length was not logically defined. We are trying to give it a mathematical touch by using screen width,etc.
18:44  Tze: andywww: https://gist.github.com/1238e2a9964916803139
18:45  papna: xro: It can take time that scales with the length of the string squared, instead of with the length of the string.
18:45  andywww: ah brilliant, thanks Tze
18:45  papna: mukul: What will you do if the screen isn't wide enough?
18:45  xro: papna, yes... and what is the solution?
18:45  papna: xro: Build a list then join it when you're done.
18:46  xro: papna, a for with a join....
18:46  damagednoob: andywww, what about this: set([value for key, value in mydict.iteritems() if key == 'owner'])
18:47  andywww: well, i'll finish my examples...
18:47  papna: Tze: andywww, http://paste.pocoo.org/show/279240/
18:49  dropdrive: What's the Python equivalent of "test -d" ?
18:49  ikanobori: What does test -d do?
18:50  kerio: path exists and is a directory
18:50  mukul: papna: I will set max text length to be smaller. In that case, if the text is more than the max length it is appended by "..." to signify more text is present. Now what is happening is that the text goes out of bound...
18:50  merijn: damagednoob: No need to include the [] around the comprehension
18:50  bcj: Tests for a directory
18:50  ikanobori: What does it test for a directory?
18:50  ikanobori: Do you want to know if something is a directory?
18:50  merijn: damagednoob: Without the [] it is a generator which is also accepted by set()
18:50  damagednoob: aah cool, didn't know that
18:50  bcj: test -d <filename>
18:50  ikanobori: bcj: os.path.isdir
18:50  bcj: ikanobori: I didn't ask the question]
18:50  bcj: :)
18:51  ikanobori: bcj: Sorry.
18:51  bcj: dropdrive did
18:51  papna: mukul: For user entry or for display?
18:51  ikanobori: dropdrive: See above.
18:51  dropdrive: ikanobori: Thanks!
18:51  mukul: papna: display
18:51  papna: mukul: For display, I see text just running out of the Entry as being typical.
18:52  mukul: papna: This is what I mean. http://bugs.sugarlabs.org/attachment/ticket/2201/Screenshotclipboard.png
18:52  papna: mukul: ellipsize property
18:53  mukul: papna: exactly. I'm not aware of this feature. Can you elaborate a bit?
18:53  papna: foo.set_elipsize(pango.ELLIPSIZE_END)
18:55 --- Walt_ is now known as Walt
18:55  andywww: what I'm trying to do is exactly this, papna, I'm hoping this might spread a bit more light
18:55  andywww: http://gist.github.com/642393
18:55  andywww: third revision
18:56  MatToufoutu: hi, is there a way to change the python version used by a virtualenv without re-creating it?
18:56  ikanobori: andywww: Create a second dictionary which is indexed by owner.
18:57  andywww: indexed?
18:57  ikanobori: andywww: The keys are the owners.
18:57  ikanobori: So, do a D2 = {}
18:57  ikanobori: Let me code it down.
18:58  andywww: thanks
18:59  xro: i receive that --> http://dpaste.com/262510/, is there a way to transform it in a PNG image???
19:00  damagednoob: andywww, print set(v for l in dictList for k,v in l.iteritems() if k == 'owner')
19:00  andywww: lol
19:00  andywww: okay..
19:01  ikanobori: One moment, food is hjere.
19:01  andywww: sorry i don't understand that at all
19:01  damagednoob: it iterates through the list, putting each dictionary into 'l'
19:01  damagednoob: it then iterates through each value in the dictionary ('l')
19:02  damagednoob: check if the key is 'owner' and if it is, returns the value
19:02  andywww: ah so i end up with a list of unique owner values?
19:02  damagednoob: you should end up with a set of unique emails
19:02  damagednoob: yes
19:03  ikanobori: damagednoob: Yes, I was not writing a listcomp for easyness of comprehension
19:03  andywww: let me try
19:03  damagednoob: ikanobori,  upliftment :)
19:04  damagednoob: andywww, set 'uniquifies' all the values
19:05  andywww: yeah i was just scared of wiping out the values by turning it into a set
19:05  andywww: but i suppose just building a set of unique users allows me to know beforehand what the emails are going to be and do a for loop through it
19:05  andywww: thanks damagednoob
19:06  andywww: i'm going to code it up, are you around for the next 10 mins?
19:06  damagednoob: sure :)
19:06  andywww: great, gimmie 5 mins
19:13  detly: is there a way to tell pylint to target a specific python version, if I have multiple versions of python installed?
19:17  kenboo: hello.  I am writing setup.py using setuptools.  I need to include pure python module, C extension, and 3rd party shared object.
19:18  kenboo: I successfully made setup.py to include C extension, but not the 3rd party shared object.
19:18  kenboo: how to do that?
19:18  MrElendig: kenboo: you should be using distribute instead of setuptools
19:19  dash: or just distutils
19:20  Yhg1s: kenboo: are you looking to compile this shared object, or just distribute it?
19:21  kenboo: the 3rd party shared object is binary.  I don' have sources.
19:21  Yhg1s: so, just distribute it?
19:21  kenboo: yes.
19:21  Yhg1s: then it's a datafile.
19:21  kenboo: ah.
19:21  andywww: damagednoob: I can't work out why this isn't working: http://gist.github.com/642459
19:21  Yhg1s: http://docs.python.org/distutils/setupscript.html#installing-package-data
19:21  andywww: only userX has a value, and its only thier last value
19:21  Yhg1s: (don't use setuptools.)
19:22  andywww: ah shit sorry
19:22  andywww: created the list in the wrong loop
19:22  kenboo: ok, I will read about distribute and distutils
19:22  andywww: done it now, many thanks for that damagednoob
19:23  Yhg1s: andywww: you realize line 12 is easier and more efficiently written as 'set(d['owner'] for d in dictList)', yes?
19:23 --- Walt is now known as thepro4never
19:24  andywww: no, but i do now
19:24  andywww: thanks
19:32  mukul: papna: how to get size of a character in pixels?
19:35  papna: mukul: That doesn't sound applicable. gtk already has a thing to ellipsize.
20:03  lvh: Hi
20:03  lvh: has anyone used both pycukes and lettuce? I'm trying to figure out which one is better, they appear to both try to do what cucumber does
20:03  ibansal: hi all
20:03  ibansal: can anyone help with code http://www.fpaste.org/GOE7/
20:03  ibansal: what is the mistake in this
20:04  dassouki: it doesn't matter what people say about python, at least you don't have to worry about pointers for a simple app
20:05  lvh: here's lettuce: http://lettuce.it/
20:05  Yhg1s: ibansal: what makes you say there's a mistake?
20:06  ibansal: Yhg1s, because i have got undesired results
20:06  Yhg1s: which are?
20:06  Yhg1s: it's a little hard to guess what you did wrong by looking at a snippet of code with no context and no description of what you expect it to do and what it does instead.
20:07  Yhg1s: although I can recommend that you use the attributes of the statvfs object returned by os.statvfs(), instead of indexing with constants from the statvfs module, I don't think that would be the source of any problems.
20:09  ibansal: Yhg1s, check http://www.fpaste.org/Fcfi/
20:09  ibansal: hope this would help
20:10  Yhg1s: not without a description of what you expect it to do, and what it does instead. What is *wrong*?
20:10  ibansal: Yhg1s, presently when i click the Journal icon it displays the memory bar without the memory status
20:11  ibansal: i want it to display the status as well
20:11  Yhg1s: I have no idea what the 'memory bar' and the 'memory status' are supposed to be
20:12  ibansal: Yhg1s, it is like the memory status of any drive
20:12  Yhg1s: no.
20:12  Yhg1s: I don't konw what they are supposed to be *in your program*.
20:12  Yhg1s: I don't know which part of your program you are referring to when you say 'memory bar' and 'memory status'.
20:12  ibansal: Yhg1s, thanks for help
20:12  Yhg1s: So, I don't know which part of your program doesn't work the way you expect it to.
20:12  ibansal: can you just help me with Button-click-event
20:13  Yhg1s: if you describe the actual problem, I can help you debug it.
20:13  ibansal: Yhg1s, it would be long and difficult to describe
20:13  Yhg1s: then I'm not sure what you expect me to do.
20:13  ibansal: can you give me a instance how the buttn-click-event works?
20:14  Yhg1s: I don't even know what this Palette class is you're deriving from. I can see you use what looks like PyGTK, but beyond that, I have no idea.
20:14  Yhg1s: In GTK, the button click event works by GTK calling it when the button is clicked.
20:15  ibansal: Yhg1s, okay
20:15  Yhg1s: IIRC, 'button' is 'any mouse button', but I may be mistaken.
20:16  Yhg1s: if you want to know more about what button was pressed or where, the event should describe that.
20:31 --- perlsyntax is now known as packet
20:38  Juhaz: FWIW, he was missing self.add_events(gtk.gdk.BUTTON_PRESS_MASK), button presses aren't included in the default event mask
20:41  deftunix: hi all, i've a question about python and runtime ld_library_path. I need to set custom ld_library_path in my cgi script before to import psycopg2. I've try to do it with os.environ and os.putenv but it doesn't work.
20:41  deftunix: How can i do it?
20:42  dash: deftunix: it has to be set in the environment that python is started in
20:42  _habnabit: deftunix, your libpq isn't in a standard place?
20:42  ivazquez|laptop: The loader that loads Python needs to know it.
20:43  dash: man, i hate these Java jerks with their fancy IDEs and crap
20:43  deftunix: no, i wish to do it without export LD_LIBRARY_PATH or set it to ld.so.conf
20:44  ivazquez|laptop: Really? I feel pity for then.
20:44  ivazquez|laptop: *them
20:44  dash: ivazquez|laptop: it's causing problems for me right now
20:44  ivazquez|laptop: I almost feel bad at them needing a big, complex IDE to get real work done.
20:44  ivazquez|laptop: Almost.
20:44  dash: because apparently somebody thought it was ok to write overloaded versions of a method
20:44  dash: and not put them next to each other
20:44  _habnabit: deftunix, why do you need either one?
20:44  teratorn: dash: hee hee
20:45  dash: there's like 120 ines of code in between
20:45  teratorn: isn't there some ridiculous right-click -> find overloads thing
20:45  deftunix: _habnabit: libpq is not in standard place
20:45  _habnabit: deftunix, okay, why.
20:45  dash: teratorn: PROBABLY
20:45  _habnabit: dash, pyflakes finds that
20:45  deftunix: _habnabit: is possible set it in python script or not?
20:45  _habnabit: deftunix, anything is possible
20:45  deftunix: _habnabit: how?
20:46  dash: _habnabit: no it doesn't
20:46  _habnabit: deftunix, hard work, elbow grease, etc
20:46  dash: _habnabit: because python doesn't do overloads on arglist length
20:46  _habnabit: dash, coulda sworn I saw pyflakes find that in my code
20:46  dash: _habnabit: pyflakes will tell you when you define an attribute in a class twice, sure
20:47  _habnabit: deftunix, now, a more interesting question is "why is your libpq in a nonstandard place" ?
20:47  _habnabit: ?"
20:48  deftunix: _habnabit: i made a custom compilation and i put it in a custom location
20:49  _habnabit: deftunix, /usr/local isn't good enough for you?
20:50  deftunix: _habnabit: no, is on my notebook and for test i've installed 4 different version of postgresql in a custom location and compile psycopg2 only for one. /usr/local is not good for me
20:51  _habnabit: (Well, if it's your notebook, why not ld.so.conf ?)
20:51  deftunix: _habnabit: i want to understand how to do it in python, not with linux :D
20:51  dash: deftunix: this isn't a python problem
20:52  deftunix: dash: i can't not set it in python, directly?
20:52  dash: deftunix: sure you can
20:53  dash: but it only affects subprocesses, not the current process.
20:53  deftunix: dash: oh... thanks
20:53  dash: this isn't specific to python.
20:54  deftunix: dash: yes
20:58  morphic: http://effbot.org/pyfaq/why-doesnt-python-release-the-memory-when-i-delete-a-large-object.htm
20:58  morphic: it doesn't release the mem to the OS?
20:59  morphic: i'm hanging on 3Mb GTK objects, and even when I destroy the window the memory is allocated... do I need to finish the process? because it consumes all the RAM even when I close the gtk notebook tab
21:00  cgroza: hello , I have a question. I am a beginner programmer and i see  many "%s"  in codes. What is the meaning of it?
21:01  _habnabit: cgroza, docs.python.org/tut
21:01  dash: cgroza: in particular - http://docs.python.org/library/stdtypes.html#string-formatting
21:01  cgroza: THANKS!
21:01  dash: cgroza: this is used for formatting output
21:02  dash: cgroza: but importantly, never for sql
21:02  _habnabit: Or building a shell command.
21:04  cgroza: so, i want to convert int to string i do  %(int)?
21:04  cgroza: so, i want to convert int to string i do  %s(int)?
21:04  dash: no, just %s
21:04  dash: or %d
21:04  dash: %s provides the default string representation for any object
21:04  cgroza: ohh, ok
21:04  SpiderFred: stupid question. What is this exactly for? if __name__ == "__main__":  main()
21:04  dash: other formatting types give you more control over representation
21:05  dash: SpiderFred: makes it so that main() is only called if the file is run as a script, instead of imported.
21:05  SpiderFred: dash, ok thx
21:07  cgroza: can some one explain me the syntax?
21:08  mcantor: How can I get the value of the nth bit in a given variable?
21:09  KirkMcDonald: mcantor: Mask it.
21:09  mcantor: Ah... wow.  Sometimes I completely forget that Python has bitwise operators.
21:12  LockeLaton: hi
21:13  LockeLaton: how do u do flush() in python socket?
21:14  _habnabit: You don't flush sockets.
21:15  LockeLaton: but when i type in a python shell
21:15  LockeLaton: it wont send my data immediately
21:15  _habnabit: Pretty close to immediately.
21:15  LockeLaton: how to make it send immediate?
21:15  LockeLaton: ly
21:16  _habnabit: Why do you want immediately?
21:16  LockeLaton: ...
21:16  LockeLaton: im testing some piece of code
21:16  papna: LockeLaton: What you're imagining as "immediately", _habnabit is calling "close to immediately"
21:16  LockeLaton: so i need the result as fast as I can
21:16  papna: LockeLaton: Perhaps you should explain the unexpected behaviour.
21:17  LockeLaton: i just want something like flush() :)
21:17  LockeLaton: in TCP socket
21:17  _habnabit: There isn't one. Move on.
--- Log closed Sat Oct 23 21:24:34 2010
--- Log opened Sat Oct 23 21:35:33 2010
21:35 --- Users 741 nicks [0 ops, 0 halfops, 0 voices, 741 normal]
21:35  dash: kerio: don't be silly
21:37 --- Channel #python was synced in 98 seconds
21:37 --- zer0c00l` is now known as zer0c00l|zZz
21:52  Diverdude: Which is the preferred python editor?
21:52  Diverdude: for linux
21:53  pr3d4t0r: Diverdude: http://www.vim.org
21:53  virhilo: Diverdude: vim, komodo edit, wing, eclipse pydev
21:53  Diverdude: not emacs?
21:53  LockeLaton: wing
21:53  pr3d4t0r: Diverdude: Do you already know emacs?
21:53  LockeLaton: :)
21:54  papna: Diverdude: People prefer different editors.
21:54  papna: Diverdude: There isn't a consensus (nor one needed)
21:54  DigitalKiwi: whatever you like best
21:54  cnf: Diverdude: TextMate
21:55  pr3d4t0r: DigitalKiwi: Look at Cream.
21:55  Diverdude: ok...and would it be a good idea to use bpython ?
21:55  pr3d4t0r: DigitalKiwi: It's a Vim "GUI shell" that makes it act very similar to TextMate.
21:55  pr3d4t0r: cnf: Isn't TextMate Mac-only?  Or did they port it?
21:55  cnf: no, it's mac only
21:56  cnf: but my mac is my linux of choice :P
21:56  DigitalKiwi: i like my terminals though
21:56 --- mukul is now known as mukul_afk
21:56  pr3d4t0r: cnf: Hah!  Great comment.
21:56  cnf: pr3d4t0r: :P
21:56  pr3d4t0r: cnf: Reminds me of James Gosling:  "OS X is what Linux could have become had it had a decent UI and a quality assurance team."
21:56  DigitalKiwi: komodo in vim mode is nice too, i used that for a while
21:57  cnf: pr3d4t0r: hehe
21:57  pr3d4t0r: Which reminds me....
21:57  DigitalKiwi: then again so is wing
21:58  pr3d4t0r: cnf: http://lifehacker.com/5665765/macbuntu-makes-your-linux-desktop-look-like-mac-os-x - check this out.
21:58  DigitalKiwi: http://testnet.har-ikkje.net/gfx/curves.jpg
21:58  cnf: pr3d4t0r: you know i tried that?
21:58  cnf: pr3d4t0r: it pisses me off no end
--- Log closed Sat Oct 23 22:04:10 2010
--- Log opened Sat Oct 23 22:04:39 2010
22:04 --- Users 737 nicks [0 ops, 0 halfops, 0 voices, 737 normal]
22:06 --- Channel #python was synced in 95 seconds
22:06  dropdrive: Does bpython work well with matplotlib?
22:06  Juhaz: also, it's written by (ex-)member of the channel, and we all know everyone here is a guru.
22:07  pr3d4t0r: cnf: I'm going to install Macbuntu and see how much pain it inflicts.
22:07  cnf:  pr3d4t0r good luck! and my condolences in advance :P
22:07  pr3d4t0r: cnf: Why, thank you :)
22:07  cnf: hehe
22:08 * DigitalKiwi is not a guru
22:08 * DigitalKiwi is a nub!
22:08  DigitalKiwi: that's my story and I'm sticking to it
22:09  DigitalKiwi: mhr, why does this traceback say it is a GraphAPIError, but when I try to catch GraphAPIError it does not...
22:10  cnf: DigitalKiwi: a gurnub?
22:11  DigitalKiwi: it catches Exception but that feels dirty...
22:12  gregglind: I have been told that in py3: b'something' is equivalent to:  bytes("blah".encode(CURRENT_FILE_ENCODING))
22:13  gregglind: how can I get that?  I ask, because I am maintaing a dual 2/3 codebase, where 'b' is verboten (in 2, obviously)
22:13  papna: gregglind: Don't try to make one file that's valid Python 2 and 3.
22:13  papna: gregglind: Write valid Python 2 and test it with 2to3.
22:13  papna: gregglind: Or write Cython.
22:14 * cnf is using 2 for his new project
22:14  gregglind: see, there are some issues with 2to3... in particular, this thing does lots of bytes comparison work.
22:15  gregglind: I will ask a more general question:  where can one get the CURRENT_FILE_ENCODING
22:15  gregglind: in py3
22:15  papna: gregglind: Doing that sanely in one file isn't reasonable.
22:16  gregglind: I appreciate your advise on it.
22:16  gregglind: and it's still an interesting question, whether or not you agree with the purpose I want to use it for
22:17  dash: gregglind: not to us, sorry
22:19  gregglind: all right, thanks for the help.
22:26  pr3d4k4t: crs: Hola.
22:28  pr3d4k4t: cnf: Hola.
22:28  cnf: ola
22:29  pr3d4k4t: cnf: You were right - the UI is a bit disconcerting.  I can see myself installing this on someone's computer as a practical joke.  "What happened to my MacBook?"
22:29  cnf: yeah :P
22:36  liel: Hello
22:37  liel: I have this code: http://paste.pocoo.org/show/279324/ . When I try to run it, it returns "exceptions.TypeError: unbound method cmd_quit() must be called with CommandParser instance as first argument (got str instance instead)". How can I fix it?
22:40  KirkMcDonald: liel: Why are you using __new__ instead of __init__?
22:40  liel: KirkMcDonald: Because __init__ doesn't allow me to return something
22:41  KirkMcDonald: Maybe you want a function.
22:41  merijn: liel: That looks awful for a command parser
22:42  merijn: Especially with the getattr string hack
22:42  merijn: Why not just use a dictionary for storing commands?
22:43  merijn: Something like: commandParser = {"name": func}; commandParser["name"()
22:44  liel: merijn: Because It's a little easier to add a cmd_<command> function instead of adding the name of it into a dict object
22:45  merijn: I don't see how its easier? Especially if you end up with code like this because of it
22:48  Diverdude: Is it possible to interface to a usb-webcam from python?
22:49  ivazquez|laptop: gst
22:55  sartan: what would be wrong if I have to run python /usr/lib/python2.6/site-packages/easy_install.py [package] instead of just easy_install [package] on the command line?
22:56  damd: sartan: your PATH environment variable doesn't contain a path that contains easy_install.py
22:58  sartan: well easy_install.py in site packages doesn't have #!/usr/bin/python on anyway. I think it's something with .pth files?
--- Log closed Sat Oct 23 23:04:18 2010
--- Log opened Sat Oct 23 23:04:40 2010
23:04 --- Users 740 nicks [0 ops, 0 halfops, 0 voices, 740 normal]
23:04  Yhg1s: are you sure it actually installed the 'easy_install' command?
23:04  sartan: i'm trying to find the problem so i can suggest patches to our developers
23:05  Yhg1s: ok, well, distribute and setuptools come with a script, 'easy_install', which pretty much just imports the distribute or setuptools package and executes the entrypoint of the script.
23:05  Yhg1s: it sounds like you have the module but not the script.
23:06  sartan: i know for a fact it doesn't install the command, i just don't know what it is and where it would belong, what it should do. i could install something in /usr/bin [easy_install #!/usr/bin/python2.6 /usr/bin/python2.6/site-packages/easy_install.py] but would that be a hack, or the right thing to do?
23:06 --- Channel #python was synced in 92 seconds
23:06  Yhg1s: it would be a hack. If you want to find the command, get the source for distribute (preferably) or setuptools (if that's what you currently have installed.)
23:07  sartan: yah the package just doesn't have the script
23:07  sartan: i suppose we need to make one
23:07  Yhg1s: no.
23:07  Yhg1s: you need to use the one that comes with the source, instead :)
23:07  Yhg1s: apparently it's not being packaged up.
23:07  sartan: doh =) you  mean the setuptools source not the source package on openwrt
23:07  sartan: gotcha
23:08  sartan: yeah, it's possible it's there just not being added to our package. thanks Yhg1s i'll go that route
23:08  Yhg1s: well, usually source packages contain unmodified source and patches and build scripts, so the source package should do.
23:11  Minty: I just wanted to confirm: each package has it's own namespace right?
23:12  dropdrive: Does Python 3 support function definitions like f(*args, verbose=False) ?
23:13  habnabit: Yep.
23:13  habnabit: Minty: Sure.
23:13  dropdrive: habnabit: That "Yep." was to me?
23:14  habnabit: Yep.
23:14  Minty: thanks habnabit
23:14  dropdrive: Thanks.  Now I need a decorator that lets f(verbose=False, *args) in py2 work like f(*args, verbose=False) in py3.
23:15  dropdrive: Anyone have one handy? :)
23:15  habnabit: You have to use **kwargs for that.
23:16  dropdrive: habnabit: Yep.
23:17  dropdrive: habnabit: Was there a PEP that described the motivation for this new feature?  I'm not finding one...
23:17  habnabit: Look for keyword-only arguments.
23:17  habnabit: It's a very useful thing.
23:17  dropdrive: Thanks!
23:20  Vanaeph: Hi I'm having trouble importing _sqlite3.  I tried using the command line and the interpreter  with no luck.  I also purged and reinstalled sqlite and it did not solve the problem either. I'm running Ubuntu 10.04 LTS and Python 2.6.6 any ideas?
23:20  dropdrive: Is "def sortwords(*wordlist, case_sensitive):" valid in Py3?
23:20  dash: Vanaeph: what kind of trouble?
23:20  dash: dropdrive: what would it do?
23:20  habnabit: dropdrive: Yes.
23:20  Minty: Because a module's namespace is only executed the first time it is imported (unless explicitally removed from sys.modules), does that mean that effectively these 2 statements are basically the same thing: import package; from package import module ###### the second one: import package; my_var = package.module ?
23:21  Vanaeph: gives me a long error list
23:21  dash: huh. really? that's kinda nuts
23:21  dropdrive: habnabit: Very cool.  I guess you could fake it with a token in Py2.
23:21  habnabit: Vanaeph: Why aren't you using the system python?
23:21  Vanaeph: saying it can't find it
23:21  dash: Minty: no, importing packages doesn't import modules
23:21  total_slavery: what do >>  mean?
23:21  Vanaeph: but when i do the locate command it points right to it
23:21  MrElendig: append
23:21  Vanaeph: its weird
23:21  dropdrive: dash: It would allow a variable number of positional arguments while "case_sensitive" is a required keyword arg.
23:22  Minty: dash: Huh? I don't think you read / understood my question properly.
23:22  MrElendig: er.. nm, tought I was in a different channel :p
23:22  dropdrive: Right, habnabit?
23:22  dash: Minty: try it!
23:22  habnabit: Yes.
23:22  total_slavery: how it works
23:22  MrElendig: total_slavery: in python it's shift
23:22  Minty: dash: trying it won't help with the theory behind what i'm asking, gah :|
23:23  total_slavery: ?! i don't really get it
23:23  dash: Minty: they're not the same thing.
23:23  Minty: i said "effectively" deliberately, ok what i mean is, they both do the same thing and 1 way is not preferable over the other?
23:23  MrElendig: total_slavery: http://docs.python.org/reference/expressions.html#shifting-operations
23:24  Vanaeph: hababit: I was trying to learn python and I downloaded an e-book that used python 2.5 so I downgraded and reupgraded so I'm pretty shure I could have screwed something up in the process
23:24  habnabit: They don't do effectively the same thing.
23:24  habnabit: Did you try it?
23:24  total_slavery: thanks
23:24  Minty: i know what it does
23:24  Minty: import package; from package import module ##### second one: import package; my_var = package.module
23:24  Minty: both examples import the package
23:24  Minty: the first tries to re-import module
23:24  Minty: and so all that is happened is module is brought into the namespace
23:24  Minty: oh fail, i forgot to tell you that
23:24  habnabit: There is no such thing as "re-importing".
23:24  Minty: the package explicitally imports all modules
23:24  Minty: in the package
23:25  habnabit: Gross.
23:25  MrElendig: total_slavery: are you seeing it used with print?
23:25  Minty: hence why i said "tries to re-import" - i know it's only loaded into ram once - when it's put into sys.modules
23:25  Minty: which is the whole point of why i was saying they do the same thing basically
23:25  total_slavery: no
23:25  Minty: habnabit, i agree it's not amazingly pythonic, but it's useful because then i can do package.module for each module
23:26  MrElendig: total_slavery: good ;)
23:26  Minty: which is what i need in this instance
23:26  Minty: ok, never mind i've answered my own question anyway - cheers
23:28  total_slavery: i was looking for an algorithm to get all subsets from a set
23:29  total_slavery: and i find it
23:29  total_slavery: do you have any idea about it
23:30  MrElendig: mh, >> sounds strange to use with sets
23:32  papna: total_slavery: itertools.combinations
23:35  total_slavery:   if (i >> j & 1)
23:36  total_slavery: this is a part from the code
23:36  infinity25: integer block cipher encryption. any pointers?
23:36  infinity25: or any somewhat secure int to int symetric encryption algorithm
23:38  habnabit: infinity25: What does the int you're encrypting represent?
23:39  infinity25: a database ID for something that should've been UUID's instead
23:39  infinity25: but I can't change that in the db now
23:39  infinity25: so I want to encrypt the IDs before sending to the client
23:41  habnabit: What's wrong with SSL?
23:42  infinity25: that won't help in hiding the IDs from someone that wnats to view source on the page for example
23:42  infinity25: the ID's are serial (1,2,3,4) which makes it easy to exploit a certain attack vector
23:42  infinity25: so I want instead to send to the client something like 1972361 and then in the server that gets mapped back to 1, for example
23:43  habnabit: So, if a user shouldn't be able to view something, why are they able to?
23:43  WXZ: what's the default location when you print >> file, "a string"
23:43  habnabit: Security through obscurity doesn't work.
23:43  WXZ: file = open('out.txt','w')
23:43  infinity25: they should be able to see them, but they shouldnt be serial
23:43  WXZ: in ubuntu
23:43  infinity25: I know, i know
23:43  habnabit: Deny them access.
23:43  infinity25: but this is the ebst I can do
23:43  hopthrisC: habnabit: that's not security through obscurity
23:43  infinity25: the problem is not in a user seeing them
23:44  habnabit: hopthrisC: It's not?
23:44  hopthrisC: habnabit: nope
23:44  infinity25: the problem is that right now the IDs are serial (1,2,3,4….) thus making it very easy to exploit something else
23:44  habnabit: hopthrisC: Go on.
23:44  habnabit: infinity25: "something else"?
23:44  d_m: hopthrisC: it is. basically what infinity25 wants is one-to-one/onto transformation to make the ids seem like they aren't serial (since presumably you can steal someone else's ID and do stuff)
23:44  infinity25: d_m: yes, exactly
23:45  infinity25: well, not someone elses IDs
23:45  habnabit: You're still solving the wrong issue.
23:45  infinity25: but its would be easy to scrape our whole catalog in one script
23:45  habnabit: ...
23:45  infinity25: with no serial IDs, it would be brute force and slow
23:46  infinity25: I'm just dealing with someone elses mistakes here. I cant change the whole system at this point
23:46  infinity25: I can just secure a few things
23:46  hesco: I'm seeing a No such file error when invoking an open() pn a file that very clearly exists, if ls and cat are to be believed.  Details at: http://paste.pocoo.org/show/279348/ Any ideas or pointers would be appreciated.  Thanks.
23:46  hopthrisC: habnabit: what would be the right issue?
23:46  habnabit: Why are you worried about scraping your site?
23:46  habnabit: Google does it all the time.
23:47  infinity25: it's not the site, it's specific content
23:48  d_m: infinity25: worst case couldn't you just make a new table mapping primary keys (or whatever) to an arbitrary value and just use those for the client?
23:48  d_m: that seems pretty straightforward to me
23:49  infinity25: d_m: yeah thats one option, but I'm looking for a two way function so that we dont' need to keep a map
23:49  hopthrisC: how is using an "arbitrary value" different from using "an arbitrary value that is cryptographically derived from a non-arbitrary value?"
23:49  infinity25: there's over 20 million IDs
23:49  d_m: hopthrisC: if it's a two-way function an attacker can figure it out and then you're still screwed
23:49  d_m: if you generated them with /dev/random or something then that isn't possible
23:49  habnabit: So, like, what exactly are you trying to prevent here? It seems like you're making extra work for no reason.
23:50  d_m: habnabit: i kind of assume that this is one of those giant databases of info that can't be copyrighted, so they're worried about someone scraping it all from them
23:50  habnabit: If someone wants to scrape the site, they'll scrape the site.
23:50  infinity25: habnabit: I'm trying to prevent a casual hacker/script kiddie from being able to serially download each of these content items from our database
23:50  habnabit: And you can't stop them.
23:50  hopthrisC: d_m: if the attacker can figure out your admin password, which has probably about as many bits of entropy as the password used to derive the ids, you are srewed as well
23:50  infinity25: there's no admin password in this system
23:50  d_m: hopthrisC: the argument was about security through obscurity right? not if things are insecure.
23:51  hopthrisC: protecting something with a password is not security through obscurity
23:51  hopthrisC: infinity25: so you tell me, nobody can log into the server?
23:52  hopthrisC: infinity25: like, not even with ssh or something?
23:52  hopthrisC: infinity25: very likely
23:52  infinity25: hopthrisC: sure, nothing is secure
23:52  landstatic: !
23:52  d_m: hopthrisC: oh i see what you mean. the argument is that content on the web is scrapable, and anything to prevent that is obscurity, sorry. shouldn't discuss two things at once.
23:52  infinity25: you can also jsut brute force session IDs at amazon.com until you can signin to donald trumps' account
23:53  infinity25: this doesn't mean that session id shared secret is not real security
23:54  infinity25: I can't reveal too many details that's why you might not understand what I'm trying to do
23:55  dash: infinity25: then do not ask for help here.
23:55  hopthrisC: habnabit: if scraping the site means actually brute forcing a 64 bit url space, how is it less secure than anything else?
23:55  infinity25: I just asked for pointers to a symmetric int -> int encryption function
23:55  dash: infinity25: I know.
23:56  hesco: dash: might you havce a moment to advise me on this?  I'm seeing a No such file error when invoking an open() pn a file that very clearly exists, if ls and cat are to be believed.  Details at: http://paste.pocoo.org/show/279348/ Thanks.
23:56  infinity25: I will probably end up using something like b64(AES(int))
23:57  infinity25: hopthrisC: exactly. It wont be perfect, but it helps
23:58  htoothrot: infinity25, ask this guy: http://thedailywtf.com/Comments/Internal-Standards.aspx?pg=3#323788
23:58  dash: hesco: that doesn't make any sense
23:58  infinity25: haha
23:59  hesco: did not to me either
23:59  hesco: so its not me, I'm not crazy
--- Log closed Sun Oct 24 00:00:02 2010
