--- Log opened Thu Jan 20 14:41:22 2011
14:41 --- Users 783 nicks [0 ops, 0 halfops, 0 voices, 783 normal]
14:41  AgentZ86: I was hoping as much it's for only a mini server app that I can use to create html descriptions of items I may sell for my ebay business, and the only thing I need is really a stock number and ability to create the html, and ability to upload the images to the server. There will not be any traffic on the server and only a couple users managing maybe only 100 pages per month, so that is great news since this is my first
14:41  caution: Anyone know of a python web interface for sqlite?
14:41  Alberth: lvh: depends on what 'html editor' is, I think of something graphical, or vim-like.
14:43 --- Channel #python was synced in 117 seconds
14:43  ebel: Alberth: hehehe. "profiling on the process", what do you mean? like the profile/cProfile module?
14:43  Alberth: ebel: yes, that way you can find out what part takes processing time
14:44  sejo: no-one with httplib knowledge?
14:44  lvh: Alberth: Yes, we've got bindings for gtk and qt
14:44  ebel: Alberth:  but I can't attach a python profile module to an existing running wsgi process, right?
14:45  Alberth: ebel: not that I am aware of, no
14:45  ebel: Alberth: So I'd need to be able to reproduce this problem on my local machine. Something that's hard. :(
14:48  Alberth: lvh: it depends how you interpret "can I build this with python alone?" of the OP
14:50  lvh: yeah, I'm pretty sure you can't without at some point invoking libc, and the underlying kernel probably isn't written in Python either :p
14:51  lvh: However, if he meant "do I only have to write python" then yes
14:55  sector119: caution: django?
14:55  Alberth: ebel: alternatively, do measurements inside the python process, and dump them to some log?
14:55  caution: I mean a remote sqlite management tool
14:56  Taos: Morning lvh
14:56  sector119: caution: it's not remote?
14:57  caution: does it have an sqlite management tool?
14:58  neumaennl: caution: wild guess: are you searching for something like PhpMyAdmin for sqlite?
14:58  caution: yes
14:58  lvh: Taos: Hi
14:58  Taos: lvh: going well?
14:58  lvh: My Pycon lightning talk slides are accidentally 50 slides
14:58  lvh: I have five minutes, that's six seconds per slide
14:58  lvh: Maybe I need to cut a few
14:59  neumaennl: caution: then you should probably ask in #sqlite as I don't see how this is related to python...
14:59  Taos: lvh: speed talking
14:59  Alberth: lvh: display several at the same time :p
15:03  ebel: Alberth: I'm trying to debug a live system, not really able to change the python code much/at all
15:08  Zart: caution, it doesnt make any sense to search for "web interface for sqlite", since sqlite is _local_ database. perhaps you need https://addons.mozilla.org/en-US/firefox/addon/sqlite-manager/
15:09  ccxCZ: there is also some qt-based admin for sqlite
15:09  lvh: there's this sqlite admin tool I use
15:09  lvh: it's based on Adobe AIR
15:09  lvh: it's pretty good, it's called lita, you could check it out
15:09  caution: if you only have command line access a web gui is useful Zart
15:10  veasel: Is there a way of creating a directory "bar" where "foo" doesnt exist yet? i.e. /home/foo/bar?
15:10  Zart: not really...
15:10  lvh: caution: ssh -X
15:10  Hun: os.system("mkdir -p %s" % "/home/foo/bar")
15:10  Hun: :P
15:10  Juhaz: Hun, die
15:10  lvh: Hun: don't give bad advice
15:10  Zart: copying database to web, editing there, then downloading it back is pretty cumbersome
15:10  caution: why would you do that?
15:11  Habbie: veasel, perhaps you are looking for os.makedirs
15:11  veasel: Hun, I was hoping for a stdlib function, but thanks
15:11  Zart: because sqlite doesnt have network?
15:11  Juhaz: Zart, copying? who's saying the database isn't on the same machine as the webserver?
15:11  lvh: veasel: Hun either is trolling or doesn't know os.makedirs exists
15:12  veasel: Habbie, lvh, thanks guys
15:12  Hun: note the :P.
15:14  xterminate: Hi there. I would like to write a script to enter text into a web form and submit it. Has anyone got any tips on what to read up on to do this?
15:14  Habbie: xterminate, mechanize
15:14  c3l: what is the recommended way to take command line arguments, the 'unixy' way?
15:15  Taos: c3l: argparse
15:15  xterminate: Habbie: thanks :)
15:17  c3l: Taos: is it not ready for 3.x? and its only in 2.7+. and how annoying, ubuntu doesnt have 2.7 in the repositories
15:18  Taos: c3l: It can be installed on 2.6
15:18  Taos: c3l: pip install argparse
15:19  Juhaz: c3l, what are you talking about? Ubuntu does have 2.7 in repositories, it also has argparse as a standalone package in repositories
15:19  lvh: c3l: optparse works too, and is in the stdlib
15:19  lvh: c3l: also, what Juhaz said
15:20  c3l: Juhaz: really? ill check again then
15:21  Reite: What would be the best way to store/manipulate data that is in the format of a date and 5-10 items that are linked to the date?
15:22  Reite: Should I use a dictionary with the date as the key and a tuple with the other data as numbers?
15:22  Reite: Or is there some way Im missing?
15:22  Reite: Im very new to python and programing :)
15:23  Juhaz: Reite, dict with the date as a key sounds reasonable, but the value should be a list if you want to manipulate specific items in it
15:23  Reite: Well I do
15:24  Reite: But I need to items to be connected to the date
15:24  Reite: they dont need to be connected to eachother
15:24  Reite: And I want to be able to manipulate the items individually
15:24  lvh: Reite: A database!
15:24  Taos: sqlite3!
15:25  marienz: how many are there, and do you need to store them to disk?
15:25  lvh: Reite: If you want something in Python, yeah, datetime mapping to a list of things is good
15:25  Reite: Yes I need to store them to the disk
15:25  lvh: Reite: possibly a datetime mapping to a dict of things depending on what the connection between those things is
15:25  lvh: Reite: Okay, so you want sqlite.
15:26  marienz: a db like sqlite might make sense then, yes
15:26  Kronuz: hello
15:26 * ssbr 's first thought was BSON
15:26  lvh: the world needs more sqlite
15:26  Taos: sqlalchemy with sqlite3 for the win
15:26  marienz: a dict mapping datetimes to a list (or set) of values is sane if there's very few items and/or they'll never hit the disk.
15:26  Taos: lvh: +1 for that
15:27  Reite: Ok thanks a lot guys, il read up on sqlite :))
15:27  ssbr: oh wait, no, wouldn't work
15:27  ssbr: sqlite time yay
15:28  lvh: I wouldn't even bother with an ORM
15:28  lvh: but I like relational databases
15:28  Taos: relational is good
15:29  Chocobo_: given bus='/etc/logger/instruments/'  is this a good way to extract 'instruments':  name = os.path.basename(os.path.dirname(bus))
15:30  Chocobo_: it seems to work, but I am just wondering if there is a cleaner way.
15:30  lvh: Chocobo_: Yes
15:30  Chocobo_: ok, thanks lvh.
15:30  SirScott: i'm trying to monitor when a file has been created on a remote system, is there a utility like pyinotify that supports inotify type behavior over ssh?
15:30  ivazquez|laptop: No.
15:31  lvh: SirScott: Nah. Run inotify remotely, talk to the remote process
15:31  ivazquez|laptop: The best you can do is start a daemon on the remote system, have that monitor the file, and communicate with it somehow.
15:31  lvh: ^
15:32  ivazquez|laptop: Doesn't have to be a daemon though, I suppose.
15:32  SirScott: hmm
15:32  ivazquez|laptop: Could go the rsync route and have the program invoke a copy of itself on the remote machine via ssh.
15:33  SirScott: basically i'm sending a unit test to my target, then waiting for it to have dumped its results and retrieving them
15:33  SirScott: perhaps i'm going the wrong route by thinking inotify?
15:33  lvh: It sounds like you are reimplementing buildbot or jenkins
15:33  ivazquez|laptop: Not necessarily. But you can't do it over ssh.
15:33  nosklo: SirScott: why the results must be on a file? can't you send the results back on the ssh pipe directly?
15:34  SirScott: nosklo: using py.test to create a junitxml output file.  but yeah, maybe I could somehow pipe that back
15:35  SirScott: lvh: cool, i'll read up on buildbot / jenkins, thanks
15:39  SirScott: oh hey, there's a pytest-xdist plugin to allow for remote execution!
15:41  nosklo: I don't remember which unit testing library for python is the terrible one
15:42  SirScott: i'm using unittest2 with py.test as my test runner
15:42  arrmp: Anyone here familiar with lxml?
15:44  Alberth: unless you are looking for a boolean answer, you better ask the real question
15:44  nosklo: arrmp: do you have a question?
15:44  lvh: nosklo: nose
15:44  lvh: nosklo: py.test is questionable
15:45  lvh: nosklo: It's a bit like twisted, some people love it, some people hate it ;)
15:45  nosklo: lvh: do you use it in any project?
15:46  Taos: lvh: if you use it its a good indication its reasonbly good
15:46  arrmp: nosklo: Yeah. I do. I'm trying to iterate through a lxml-generated nodetree, and I have to drop subtrees while I iterate - but while iterating (with element.iter), it still points me to the children of dropped subtrees; which is problematic, to say the least.
15:48  crono-: Hi, how can i format numbers with separators for each 1000? Such as 10.000.000 (normally 10000000)
15:48  arrmp: AFAIK I've tried every iterator in the lxml module, from el.iter() to etree.iterwalk() but they all seem to have the same issue.
15:48  crono-: or rather, display them as such
15:48  nosklo: arrmp: yeah, you'll get all elements that are in the tree when the iterator is generated. I wouldn't expect anything else
15:49  nosklo: crono-: locale module includes some functions to do that in a way compatible with your OS international number settings
15:50  crono-: nosklo: ty
15:50  arrmp: nosklo: Ok; yeah sure it makes sort of sense I guess, although I've used other libraries that don't do that. Any suggestions how I would go about it then?
15:51  nosklo: switch the logic and refactor your code in a way that you don't have to remove while iterating
15:52  lvh: nosklo: no
15:52  lvh: nosklo: but I don't think it's shit
15:52  lvh: nosklo: it just does things I don't like but I can't prove they're bad
15:53  lvh: nosklo: it uses ast manipulation to turn things like assert a == b into assertEqual(a, b)
15:53  nosklo: ooh, fancy
15:53  lvh: nosklo: yeah until that thing has side effects
15:53  lvh: nosklo: read from a file and it's not empty... read from it again ooh end of file so you get an empty string
15:53  lvh: (recent versions of py.test are immune to this problem though)
15:56  henk_maaier: hi guys. is it possible to run python-oauth on python 2.5?
15:58  crono-: why not? I'm pretty sure I have
16:05  xterminate: Habbie: hey.. I'm trying out mechanize - it's definitely the right tool for the job, but I'm having difficulty submitting login/password information into a form using it
16:05  Habbie: xterminate, i have never used it
16:05  xterminate: ah ok
16:05  Taos: xterminate: I have
16:05  Habbie: xterminate, but plenty of people in the channel have, i'm sure
16:05  xterminate: Taos: I'd like to make a script to automatically renew my library books
16:06  xterminate: weekly cron job or something
16:06  Taos: xterminate: lets see what you have sofar
16:06  xterminate: ok, I'll just do a pastebin
16:08  henk_maaier: crono-: hmm i'm getting this error: KeyError Exception Location: 	/srv/xxx/lib/python2.5/site-packages/oauth/oauth.py in from_string, line 142
16:08  xterminate: Taos: http://paste.pocoo.org/show/323848/
16:08  xterminate: it returns a <response_seek_wrapper at 0xb6c155ecL whose wrapped object = <closeable_response at 0xb6c1dfccL whose fp = <socket._fileobject object at 0xb6b9daec>>>
16:08  efphe: which is the best way to memory-profiling a py-app?
16:09  Taos: whasts your random liberies url?
16:10  crono-: henk_maaier: hmm well i haven't seen that one but i think i used easy_install to grab the module, its possible an older version was used because I had python2.5... i'll have to leave this to someone with more insight
16:10  henk_maaier: ah okay, well, thanks anyways
16:14  Kzim: hi
16:15  Kzim: i 'm new to python and i need to send data from a c++ cleitn to a python server. someone told me about XML RPC but i don't know if it's the best choice and if it's simple in c++
16:16  ivazquez|laptop: We don't know the C++ side either.
16:17  Kzim: perhaps someone know a better way to make a client/server from c++ to python :/
16:18  cnfer: Mr Propper
16:18  NelleV: Kzim: why do you want a C++ client ?
16:18  cnfer: maybe he isn't doing the client?
16:19  NelleV: cnfer: maybe. I'd like confirmation of that
16:19  lvh: Kzim: they're different things, one is a protocol the other is a programming language
16:19  lvh: Kzim: Python certainly has high-quality performant tools for doing XMLRPC and JSONRPC and friends.
16:20  Kzim: cnfer:  is right i dont make the client :)
16:20  lvh: Personally, I prefer JSON over REST but it might not be a good fit for what you want to do
16:20  lvh: Kzim: Yaay no C++
16:20  Taos: C++ = world of hurt
16:20  Kzim: so for my side (the python side) RPC is better than just an TCP server ?
16:21  Alberth: Taos: depends on your application domain
16:21  nosklo: Kzim: yeah, you'll want some sort of protocol
16:21  Taos: Alberth: not really ;)
16:21  Kzim: nosklo: kt hx !
16:22  veasel: To move a file from one directory to another should I be using os.rename() or shutil.move() ?
16:22  Kronuz: hey, anyone around has used python-oauth2 and understands how to use OAuth 1.0 and OAuth 2.0 with it?
16:22  nosklo: veasel: shutil.move tries os.rename first
16:22  nosklo: veasel: if that fails it uses copy-and-delete approach
16:23  lvh: Kzim: XMLRPC and "just TCP" is not mutually exclusive
16:23  lvh: Kzim: XMLRPC is often spoken over HTTP, but it doesn't have to be
16:23  cnfer: yeah
16:23  Kzim: ho
16:23  cnfer: try XMLRPC over email
16:23  veasel: nosklo, I tried os.rename() first off, to no affect.. Its on the same file system, why would rename() not be successful?
16:23  Kzim: Oo
16:23  nosklo: over IRC!
16:23  cnfer: .oO( that was not meant to be taken serious...)
16:24  cnfer: nosklo: hmm, not a bad idea
16:24  nosklo: veasel: dunno - have you tried checking the error message?
16:24  veasel: nosklo, there was none, OSError anyway
16:24  nosklo: veasel: OSError includes a error message
16:25  nosklo: veasel: it's never "just OSError"
16:25  cnfer: nosklo: it's a great delivery for something distributed
16:25  veasel: nosklo, rename() did not throw an exception
16:25  cnfer: don't they run botnets that way? ^^;
16:25  nosklo: veasel: what do you mean? It silently failed?
16:25  queria: hi, how can i get all(!) request (get/post) params/variables if i don't know they names ... i'm now using cgi.FieldStorage.getvalue/list but i have to know the names of params
16:27  nosklo: veasel: by the way, what I meant before is that using shutil.move() is better, because shutil.move() itself already tries os.rename() for you, before falling back to copying the file and removing
16:27  nosklo: so you don't have to try os.rename yourself, since shutil.move already does it
16:27  veasel: nosklo, hmmm worked second time using rename(), take on board what you said about shutil. Cheers
16:28  kenneth_reitz: lvh: i think i'm going to change all my libs to ISC
16:28  Kzim: so make a simple xml-rpc server i have to use SimpleXMLRPCServer right ?
16:28  kerio: oh god no
16:28  cnfer: kenneth_reitz: \o/
16:28  kerio: use twisted
16:28  kenneth_reitz: "The ISC copyright is functionally equivalent to a two-term BSD copyright with language removed that is made unnecessary by the Berne convention."
16:28  kerio: kenneth_reitz: :D
16:28  kenneth_reitz: badass
16:28  kerio: i thought isc was mit with less language
16:29  Kzim: kerio: twisted ? but someone told me that python have a native good wayt to handle this
16:29  kenneth_reitz: seems to be no reason not to use it
16:29  kenneth_reitz: if you're using mit or bsd
16:29  kerio: Kzim: nope
16:30  kerio: socketserver is anything but "good" really
16:30  Alberth: Kzim: twisted is pythons good way of handling network communication
16:30  Alberth: Kzim: and it is entirely Python :p
16:30  kerio: Alberth: -ish
16:30  kerio: some reactors are written in C afaik
16:31 * Alberth proposes to remove those bad areas from twisted
16:31  kerio: Alberth: why? it works awesomely
16:31  lvh: Alberth: It's mostly for backwards compat
16:31  Kzim: okay :) i'll do that so :)
16:31  Kzim: thx
16:31  lvh: the select module exposes epoll and kqueue/kevent but only on very recent pythons
16:31  lvh: if you want epoll in 2.4, which twisted supports due to RHEL, you need c
16:32  kerio: fucking redhat, how do they update
16:32  lvh: they're working that out as they go along
16:32  kerio: (centos too, right?)
16:32  Alberth: kerio: mostly, they don't :)
16:32  lvh: yeah
16:32  Bonaparte: kerio, RHEL 6 has Python 2.6
16:32  kerio: (also ICP - "Miracles" quote)
16:32  SirScott: im seeing some interesting behavior with a .so i built with py++.  if I import mymodule in the same directory as mymodule.so, everything works as expected
16:33  kerio: Bonaparte: we get plenty of people with centos and python 2.4
16:33  SirScott: if however i dump mymodule.so into /lib and setup PYTHONPATH=/lib, then import mymodule from /home/me ... then the import works, but all of my methods, etc are not available
16:34  kerio: SirScott: mymodule.__file__
16:34  SirScott: kerio: says 'module/__init__.pyc'
16:34  SirScott: so it's looking for that to exist?
16:34  kerio: then... it's not your module
16:35  Alberth: no that's what it believes to be 'mymodule'
16:35  SirScott: ah
16:35  kerio: :)
16:35  SirScott: right, when i import it while i'm in lib, it shows "mymodule.so"
16:35  Skola: After I make dictionary, how do I put key:value pairs in it?
16:35  Alberth: Skola: d = {}  ;  d[1]  = 2
16:35  Bonaparte: Skola, my_dict['mykey'] = 'myvalue'
16:36  Skola: rgr, thank you!
16:36  SirScott: kerio: so is pythonpath not the right env var to setup so that it imports mymodule.so from /lib?
16:36  Kzim: another question please. i need to convert that (http://pastie.org/1481069) to xml i mean the ident any direction please ? :/
16:36  kerio: SirScott: it is, but there's something else that comes before
16:36  henk_maaier: is there anything wrong with using cgi.parse_qs() in python 2.5?
16:37  SirScott: kerio: ah, you know, I had my package in the same dir, and it had the .pyc
16:37  Yhg1s: SirScott: you have a 'module' package in the current directory (or the directory the script you are running is in), and that's what Python finds when you import 'module'
16:37  SirScott: kerio: i removed the package and all is well
16:37  kerio: SirScott: yay
16:37  DaleMox: Hi, I'm learning Python, anyone feel like reviewing my python script?
16:37  SirScott: Yhg1s: yah, order of precedence > me
16:37  SirScott: thanks you two
16:37  kerio: DaleMox: probably
16:38  kerio: wait
16:38  kerio: are you using threads?
16:38  Alberth: DaleMox: just pastebin the code
16:38  DaleMox: kerio: Thanks, it's at https://bitbucket.org/dwijnand/wzs-fw-login/src/tip/wzs-fw-login.py
16:46  Kzim: i had much problem install a mysql lib pr python what is the good one to use on Mac please ?
16:47  Habbie: Kzim, oursql
16:48  Chocobo_: While looping through a list is legal to remove items in said list?
16:48  Kzim: Habbie: i think i didn't manage to install this one but i ll try again
16:49  xterminate: hi there - I'm using python-mechanize to log in to a site and manipulate some forms. I am experiencing an unusual problem that mechanize does not fetch all the data in a response. Any ideas on what's going wrong?
16:50  xterminate: it can fetch about 147 lines of html, then dies
--- Log opened Thu Jan 20 17:07:19 2011
17:07 --- Users 786 nicks [0 ops, 0 halfops, 0 voices, 786 normal]
17:07  illsci: ok so range can work
17:07  illsci: thanks
17:08 --- Channel #python was synced in 95 seconds
17:09  cad: I don't know SQL but I need to handle some data that resides in a MySql db. What should I Use?
17:10  nosklo: cad: sqlalchemy + oursql
17:10  Kzim: damn anyone managed to install oursql on a mac ? :/
17:10  nosklo: cad: oursql is the mysql driver bindings, and sqlalchemy writes the SQL queries for you
17:10  cad: nosklo: Thanks :)
17:14  xterminate: hi there - I'm using python-mechanize to log in to a site and manipulate some forms. I am experiencing an unusual problem that mechanize does not fetch all the data in a response. Any ideas on what's going wrong?
17:14  xterminate: I have determined in my browsers resource inspector that the full page is sent
17:15  xterminate: and that the response I get from mechanize is the first 147 lines of the response I get from my browser
17:15  xterminate: I just need mechanize to keep on fetching the whole page
17:15  xterminate: instead of giving up after 147 lines
17:16  xterminate: it works in my browser without JavaScript, so that's not the issue
17:17  LPhas: hello, i've a problem using PIL, i get this error message "ImportError: The _imaging C module is not installed", doing "import _imaging" i get instead "ImportError: dlopen(/Users/phas/Documents/projects/mondi/lib/python2.7/site-packages/PIL/_imaging.so, 2): Library not loaded: /opt/local/lib/libjpeg.62.dylib
17:17  LPhas:   Referenced from: /Users/phas/Documents/projects/mondi/lib/python2.7/site-packages/PIL/_imaging.so
17:17  LPhas:   Reason: image not found" and... i got no clue
17:18  xterminate: LPhas: what generated the first error?
17:18  nosklo: LPhas: which OS, how did you install PIL
17:18  LPhas: nosklo: sorry, macosx
17:18  nosklo: xterminate: I've never seen this problem. Are you sure you aren't partially reading?
17:19  LPhas: xterminate: thumb=image.resize((width, height), pil_Image.ANTIALIAS) <-this
17:19  xterminate: nosklo: how do I check that?
17:19  xterminate: nosklo: I do:    response = br.submit(); br.set_response(response); print response.get_data();
17:20  Kzim: oursql give me a Library not loaded: libmysqlclient.16.dylib on import oursql any idea ?
17:20  xterminate: br.submit() just returns only part of the response page :(
17:21  nosklo: Kzim: you need to install mysql client libraries
17:22  nosklo: Kzim: http://dev.mysql.com/downloads/connector/c/
17:22  Kzim: i installed the binaries :/
17:22  Kzim: arf oki thx
17:22  LPhas: well, pip install --upgrade PIL fixed
17:22  LPhas: weird
17:23  elpargo: hello, say I have "/command foo bar bas" and I want to split that string based on "/command" that is if msg.startswith('/commands') matches give me two strings "/command" and "foo bar bas" which will be the best way to do this?
17:23  xterminate: nosklo: am I able to enable full reading then, if partial reading is possible?
17:24  nosklo: xterminate: how are you reading?
17:25  elpargo: umm str.partition seem to do the job.
17:25  xterminate: nosklo: I do:    response = br.submit(); br.set_response(response); print response.get_data();
17:26  kerio: 	⁃	/detach #
17:26  xterminate: here's my full paste: http://paste.pocoo.org/show/323895/
17:26  Kzim: nosklo: :/ how the hell do i install that on my mac :)
17:26  kerio: whoops
17:26  nosklo: Kzim: isn't there a Mac OS option on that site?
17:26  nosklo: Kzim: I'm not sure, I don't own a mac
17:26  Skola: when I print/loop through a dict where the keys are unicode strings, I want it to actually print the char instead of the encoding. Is this possible?
17:27  nosklo: xterminate: try this: response = br.submit() ; print response.read()
17:27  Kzim: nosklo: i get a .zip :/ with files but ... i'll google a bit more :) thx
17:27  nosklo: Kzim: perhaps folks at #mysql can help
17:28  xterminate: nosklo: hey I got the whole page!
17:28  xterminate: awesome
17:28  Kzim: nosklo: i'll try that thx
17:28  nosklo: xterminate: I've never seen this set_response patter
17:28  nosklo: n
17:29  xterminate: ok
17:31  pen: Kzim, what's your problem?
17:31  xterminate: nosklo:  hmm.. now how do I feed the response back into the Browser object though?
17:32  xterminate: set_response allowed me to do this
17:32  DaleMox: Anyone mind helping me rewrite this into something python 2.5 will accept, please? http://paste.pocoo.org/show/323897/
17:32  DaleMox: Line 28
17:32  nosklo: xterminate: why do you want to feed the response back
17:32  nosklo: xterminate: I see no need for doing that
17:32  xterminate: nosklo: so that I can then access forms within the response
17:33  nosklo: xterminate: you can already do that without feeding back
17:33  xterminate: oh, how?
17:33  nosklo: xterminate: normally
17:33  nosklo: xterminate: in the usual way
17:33  xterminate: ok :)
17:33  xterminate: thanks for your help
17:33  nuxil: how can i trun a sting like mystr = "abc" into unicode? i mean i need a new string having the unicode values so it looks like mystr = "\xa1\xa2\xa3" so on,. basicly what i need is to stor the unicode values as a normal ascii string.  is it possible ?
17:34  pen: nuxil, there is a page of unicode in python doc
17:34  pen: for
17:34  nosklo: nuxil: er, you seem confused about what unicode is
17:35  nuxil: nosklo, maybe i am.
17:35  nosklo: nuxil: if you do mystr = 'abc' then you already have those bytes encoded as ascii.
17:35  nuxil: as i uderstan  unicode is use for diffrent encodings . if i got that right,
17:35  nosklo: nuxil: no...
17:35  nuxil: oh,
17:35  cfedde: can an over riding method call it's superclass method without knowing the superclass name?
17:35  nosklo: nuxil: unicode is the *abscence* of encodings
17:36  cfedde: its
17:36  nosklo: nuxil: when you *decode* a bytestring, you get unicode
17:36  Eevee: cfedde: yes, super() only needs to know the *current* class's name
17:36  nosklo: nuxil: unicode is not in any particular encoding. It is an object that can represent any existing char
17:36  cfedde: Eevee: thanks!
17:37  nosklo: nuxil: when you want to turn the unicode representation back into some "bytes" (so you can store it or send it over the network or something), then you *encode* the unicode, using a particular "encoding" (ascii, utf-8, latin1, cp1252....)
17:37  nosklo: nuxil: that gives you a bytestring
17:37  nuxil: hmm. so if i have s = "abc" i would have to do it llike u = unicode(s, "utf-8")   ?
17:37  nosklo: nuxil: no.
17:38  nuxil: man,.
17:38 * nuxil hits himself in the head
17:38  nosklo: nuxil: if you have s = 'abc' ; you'd do myunicode = s.decode('ascii')
17:38  nuxil: oh i see
17:38  nosklo: nuxil: or better, you could have myunicode = u'abc' directly
17:38  nuxil: thank you
17:38  nosklo: nuxil: since u'...' literal syntax already produces unicode
17:39  xterminate: nosklo: no I have the problem of not being able to find the form in the response.read() output
17:39  xterminate: now*
17:39  nosklo: xterminate: response.read() output is a string
17:40  xterminate: yes, I am using:  for i in Browser().forms(): print i
17:40  Skola: how do I print a unicode character? Right now when I do print(unicode_string), I get \xe2\ blabla
17:40  nosklo: xterminate: you're creating another Browser instance?
17:40  xterminate: no, using the original
17:40  nosklo: xterminate: so br.forms()
17:40  xterminate: yes
17:40  nosklo: xterminate: that should work
17:41  SeanInSeattle: Hey all.  Can someone advise me on how to setup svn hooks for python projects?  My employer would like to enforce things like a pylint code convention adherence, unit test existence and that they pass, and automatic doc generation.  Should these be a pre or post commit hook?
17:41  xterminate: nosklo: generating error: http://paste.pocoo.org/show/323902/
17:42  nosklo: xterminate: weird. Seems like it is choking on some malformed html (ParseError)
17:42  xterminate: damn
17:42  nosklo: nuxil: http://www.joelonsoftware.com/articles/Unicode.html
17:43  flyingmayo: I'm working with psycopg2, and I'm finding that when I mogrify or execute sql, the cursor is injecting capital E's in front of each parameter.  I have confirmed that the parameters I'm passing are correct.  http://paste.pound-python.org/show/1786/
17:43  xterminate: how do I stop it from choking, or manually find the bit I want ?
17:43  flyingmayo: anyone seen that  before?
17:43  nosklo: flyingmayo: that's correct, I think
17:44  flyingmayo: nosklo: it's correct for the E's to be there?
17:45  flyingmayo: either psycopg2 or the db is choking on that input.  specifically the E's
17:45  nuxil: nosklo, thank you for the link :)
17:47  xterminate: nosklo: unusually, br.links() works
17:47  xterminate: but when I try and inspect the forms in the html, it chokes
17:48  Taos: could I make a pygame window that takes stdin and stdout like a super wide console?
17:48  xterminate: Taos: I'm still struggling with Mechanize :S
17:49  Taos: xterminate: unlucky as I said js wont work.
17:49  xterminate: Taos: the site works with JS disabled
17:49  Taos: ah well... Idk then
17:49  xterminate: so that's not the issue
17:49  xterminate: malformed html seems to be the culprit
17:56  Kzim: can i def a methode without knowing the number of arguements ?
17:56  xterminate: yes
17:57  Kzim: what is the syntax please :/
17:57  nosklo: Kzim: section 4.7.4 of the basic python tutorial
17:57  Kzim: thx
17:57  xterminate: Kzim: def method(*args):
17:58  xterminate: for arg in args: print arg
17:58  tr3x_: see **kwargs too
17:58  xterminate: nosklo: any ideas on how to make mechanize not choke on malformed html?
17:58  xterminate: (if that is even the case)
17:59  xterminate: my browser can interpret it
17:59  diofeher: what is the best library to do a crawler?
17:59  nosklo: diofeher: http://scrapy.org
17:59  nosklo: xterminate: do you have a link to the html?
17:59  xterminate: nosklo: yeah sure
18:02  xterminate: nosklo: http://paste.pocoo.org/show/323910/
18:02  xterminate: nosklo: quite a lot unfortunately :(
18:02  shuaib: Hi guys, I am getting a UnicodeEncodeError trying to urllib.urlencode some data that is not ascii. Any way to get around this problem?
18:03  xterminate: thanks for your help
18:03  diofeher: nosklo, thanks man, nice lib :D
18:07  cfedde: is there a simpler syntax for calling a superclass method than super(MyClass, self).method(args)?
18:07  Eevee: cfedde: no
18:09  KirkMcDonald: cfedde: In Python 3, it is spelled: super().method(args)
18:10  cfedde: ah. So the 2.x syntax is considered a bit of a wart.
18:10  xterminate: nosklo: any ideas? It works in my browser without JS
18:10  xterminate: (Firefox & Chromium)
18:10  KirkMcDonald: cfedde: Possibly. It is also true that 3.x had to add some significant hackery to allow that syntax.
18:11  cfedde: KirkMcDonald: that's too bad.  I suppose we have to strike a balance betwween making things easy for the computer and making things easy for the programmer.
18:12  Skola: how do I get type of dict key?
18:12  Skola: I know how to get type of dict value, but..
18:13  KirkMcDonald: cfedde: The hackery it added, incidentally, was to make every method a closure, with a reference to the class the method was defined inside.
18:13  KirkMcDonald: cfedde: Then it also inspects the call stack to determine self.
18:13  ryan_languagelab: what would max() return if all the objects had the same value? i.e. what would the index of the result of max?
18:13  xterminate: Skola: [type(k) for k,v in dict]
18:13  Skola: thank you!
18:13  xterminate: that will get you all the types of the keys in dict
18:14  KirkMcDonald: ryan_languagelab: The first one, I expect.
18:15  KirkMcDonald: ryan_languagelab: http://paste.pocoo.org/show/323917/
18:15  Taos: Is there a re for splitting a string like this Taos!~Taos@92.24.128.219 so I get only user
18:16  ryan_languagelab: KirkMcDonald: okay brilliant thanks!
18:16  nosklo: xterminate: it seems the html parts at the javascript code is being interpreted somehow.
18:17  Skola: sterminate how would I do it for only 1 key?
18:17  xterminate: nosklo: by br.forms()?
18:19 --- jhoepken_ is now known as jhoepken
18:20  xterminate: nosklo: there is the line (line 234):  for (i<0; i<form.srchfield1.length; i++)...
18:20  xterminate: <form might be interpreted as the beginning of a html form tag
18:22  xterminate: and later (line 973): docCal.writeln("</head><body background='"+ThemeBg+"' link="+FontColor+" vlink="+FontColor+"><form name='Calendar'>");
18:23  nosklo: Skola: why do you want the type?
18:24  xterminate: ideally there would be some way of filtering the JS in the page (stuff between <script> tags)
18:24  Skola: well apparantly my keys are unicode, which I'm clieless about. If I print the dict with a loop, the keys (which are unicode) won't print in human readable format
18:24  nosklo: xterminate: unfortunately your script has </script> inside it
18:25  xterminate: oh dear
18:25  xterminate: I see
18:26  xterminate: this really is a horrible page
18:26  c3l: why is None<0 True?
18:26  KirkMcDonald: c3l: None is the smallest object.
18:27  nosklo: c3l: because python is broken. It should raise TypeError instead
18:27  KirkMcDonald: c3l: And Python 2 permits comparisons between dislike objects. Python 3 does not.
18:27  nosklo: c3l: it was fixed in later python versions though
18:27  c3l: hmm, thanks
18:31  bahamas: does anyone know how to select an input field in a dialog and type some text with pywinauto? for example, for notepad, after selecting Edit->Replace, how do insert text in the Replace with field?
18:42  Spira: Anyone know where I can find an uncorrupt version of the multiprocess benchmark archive in PEP 371?
--- Log closed Thu Jan 20 19:27:59 2011
--- Log opened Thu Jan 20 19:28:54 2011
19:28 --- Users 798 nicks [0 ops, 0 halfops, 0 voices, 798 normal]
19:29  ssbr_: alarm clocks? who needs alarm clocks anymore?!
19:30  ssbr_: import os; import time; time.sleep(8*60*60); os.startfile(r"C:\Users\devin\Downloads\Arguru.mp3")
19:30 --- Channel #python was synced in 118 seconds
19:43  vizzord: hello guys. does anybody know what the (u'string',) means ??
19:44  _habnabit: It's a tuple containing a unicode string.
19:44  purch: unicode string
19:44  vizzord: how can i make it a simple string ?
19:44  joelklabo: I am having trouble doing this super simple regex, anyone mind taking a look? http://pastebin.com/Lb5vMwAB
19:44  vizzord: without (u'') ?
19:44  _habnabit: vizzord, the part that's confusing you is that it's a tuple.
19:44  _habnabit: vizzord, just index the tuple.
19:45  infobob: http://paste.pound-python.org/show/1791/ (repasted for joelklabo)
19:45  vizzord: _habnabit: thank you, will try it
19:45  mahmul: joelklabo: you didn't specify any capture groups
19:45  _habnabit: That's not the issue.
19:46  mahmul: hm, right
19:46  joelklabo: really? I thought this was it: '\"[0-9]{1,4}\"'
19:46  mahmul: it's just not matching anything
19:46  _habnabit: joelklabo, so... it doesn't match. What do you want us to do about that?
19:46  joelklabo: i am trying to match, "345" with anywhere from 1 to 4 numbers
19:46  TFKyle: joelklabo: I could be misremembering, but I think csv parses quoted fields and removes the quotes
19:47  _habnabit: joelklabo, what's with the quoets around it?
19:47  TFKyle: (oh wait, I suck, nevermind)
19:47  joelklabo: its a csv, I have printed out the rows are the quotes are there
19:47  _habnabit: joelklabo, how did you print out the rows
19:48  joelklabo: just print row
19:48  _habnabit: joelklabo, that would print a tuple, which would show quotes on the strings.
19:49  joelklabo: hmm, I am doing str(row) which I thought would convert to a strint
19:49  TFKyle: is the number at the start of the row? re.match only matches at the start of a string (also, if you know what field it is I'd suggest just indexing row rather than str()ing the whole thing)
19:50  _habnabit: ... hahaha, so you're using the csv module as a parser and then completely discarding what it gives you. Awesome!
19:50  vizzord: _habnabit: can u help me with solution of this problem ? i have the (u'aaa',) string, i can decode it like str(list((u'aaa',))[0]) but it looks ugly, maybe is another solution ?
19:50  mahmul: whoa
19:50  gigamonkey: I often find myself writing list comprehensions like [x for x in somelist if some_pred(x)]. Is there a more concise way to write that? (I always wish I could write [x in somelist if some_pred(x)])
19:50  _habnabit: vizzord, I don't know why you added any of that other junk
19:50  _habnabit: vizzord, (u'aaa',)[0]
19:51  _habnabit: gigamonkey, no.
--- Log closed Thu Jan 20 19:55:25 2011
