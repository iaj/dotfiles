--- Log opened Sun Jan 09 17:48:12 2011
17:48 --- Users 812 nicks [0 ops, 0 halfops, 0 voices, 812 normal]
17:48  Minty: i'm using the ID3 library, mutagen to add attributes to mp3 tracks, i'm adding the data succesfully, but when i go to the physical file and view details, (i'm on windows), the information is not there, how can i fix this?
17:48  Laurenceb_: ok, thanks for the help
17:48  lvh: Laurenceb_: How much do you already know about async IO?
17:48  Laurenceb_: not a lot, i usually work on embedded c stuff
17:48  lvh: Laurenceb_: The documentation you want is here: http://twistedmatrix.com/documents/current/core/howto/process.html
17:49  Laurenceb_: thanks
17:49  lvh: Laurenceb_: But that assumes you already know what a reactor and a transport is
17:49  Minty: when i look at the tracks' info in idle, the tag properties appear the exact same as a correctly formatted track on my pc already :|
17:49  ixiay: will asynch io allow for a global timer to tick while running other processes?
17:49  Laurenceb_: sounds like star trek
17:49 --- Channel #python was synced in 90 seconds
17:49  lvh: Laurenceb_: But that thing has a practical example, so you can probably fudge it.
17:50  Laurenceb_: yeah, my application is pretty simple
17:50  lvh: ixiay: Yes. Well, sort of.
17:50  lvh: ixiay: *event loops* are the important step in getting to sane timers.
17:50  lvh: ixiay: Event loops and async IO commonly go hand in hand.
17:50  jjnye: Sorry to interrupt, but are any of you folks versed in PyOpenGL?
17:50  Tyrope: Is there a way to not have the python prompt close (when running from a file) when that file returns an error?
17:51  Tyrope: I'd like to read the error message it shouts.
17:51  merwok: Tyrope: python -i
17:51  lvh: jjnye: You're not interrupting. It's a public channel, you don't have to ask for permission ;-)
17:51  Tyrope: thx merwok.
17:51  lvh: jjnye: Don't ask to ask, just ask :)
17:51  merwok: Tyrope, oh, you’re talking about the brain-dead windows prompt, aren’t you?
17:51  ixiay: im having a hell of a time trying to figure out which framework to use to write a single player mud-like game
17:51  Minty: Am i being ignored? :P
17:51  jjnye: lvh: thanks :)
17:51  Tyrope: merwok: ya.
17:52  kerio: ixiay: single player... but in realtime?
17:52  ixiay: yep
17:52  kerio: that's a weird concept
17:52  kerio: cool
17:52  merwok: Tyrope: Can you start cmd, then go to the dir and then run python.exe script.py?
17:52  lvh: Minty: Yeah, you're using IDLE, I'm really not going to get into that one, sorry
17:52  Tyrope: merwok: That i could, hold on
17:52  ixiay: it is strange i know but i figure it might be the next step in my game developing ventures
17:52  lvh: ixiay: Twisted was originally created for such a game :-)
17:52  Minty: lvh: why not?
17:53  lvh: ixiay: Well, not quite a MUD.
17:53  Tyrope: merwok: dir of the .py or dir of python.exe?
17:53  kerio: a SUD
17:53  Minty: lvh: not really got much to do with idle tho, just writing attributes through mutagen isn't writing them to the file's details
17:53  kerio: well, twisted would work i think
17:53  ixiay: can you suggest a few widgets i should focus on?
17:53  ixiay: to get started
17:53  Minty: it's written somewhere - i just can't see it in the details of the file through windows
17:53  kerio: but i doubt it's going to be simpler than writing a MUD and then only allowing one person to play
17:53  merwok: Tyrope: Obviously of the script
17:53  lvh: Minty: I take it you're calling f.save().
17:54  Minty: yea
17:54  Minty: lvh, it is saving
17:54  Minty: i can go into idle and have alook at the file's data and the tags are written correctly
17:54  Minty: but they don't show on the file if i go into properties > details
17:54  Tyrope: merwok: 'python.exe' is not recognized as an internal or external command, operable program or batch file.
17:54  Minty: yet a track that DOES have stuff already in details, when i read it, the tags look exactly the same as my one...
17:55  merwok: Tyrope: Run python as you run it usually
17:55  Tyrope: merwok: usually i run it through the .py
17:55  lvh: Minty: That last bit didn't make sense. Could you reword it?
17:56  merwok: Tyrope: Try running “assoc script.py”
17:56  Tyrope: merwok: but typing python in the start menu worked, if that's what you mean (the console window starting with "Python 2.7.1.")
17:56  merwok: Tyrope: Or if you already know it, use /full/path/to/python.exe script.py
17:56  Tyrope: oh, can do
17:57  Minty: lvh: ok so i have 2 files. 1 that was already on my pc and the other that i've downloaded from youtube. the 1 that is already on my pc is complete in details (can be viewed through right clicking the file, properties, details, etc, title, artist, album etc all info is there). I can view this file's data in python's idle by using mutagen. It shows the tags here as you'd expect. Now, the file i
17:57  Minty: downloaded is obviously without details, so i've used mutagen to add tags, title, album, artist etc, these are added correctly and i can view them through using mutagen and the tags looks the same as the file i already own. Whilst the details are obviously written to the file, i cannot view them through properties > details
17:57  merwok: Tyrope: I’m afraid I don’t know the antics of that horrible OS, so I suggest a web search engine may tell you how to have the cmd console not close immediately after running
17:57  Tyrope: there we go
17:58  merwok: Tyrope: I don’t remember if there is a setting to make the cmd window not close
17:58  lvh: Minty: If you save them using mutagen, and reopen the new file in mutagen, does *mutagen* see the new tags?
17:59  Tyrope: merwok: thx, got it now.
17:59  ixiay: for a single player game with twisted will i need to create only a client app?
18:00  lvh: Minty: The obvious culprit is probably file locking: is anyone else touching the file?
18:00  Minty: lvh: yes
18:00  lvh: Minty: Okay, get an independent thing that can read MP3s.
18:00  Minty: lvh: are you sure it's not just that windows won't update the details unless you assign them through properties
18:00  lvh: Minty: I'm not sure which details you're referring to, so "maybe"
18:00  Minty: track details!
18:00  Minty: title
18:00  lvh: Minty: I haven't used Windows in years
18:00  Minty: artist, album, year, genre etc etc etc
18:01  Minty: these details ARE saved by mutagen and are VIEWABLE by mutagen and look EXACTLY the same as a file who's details can be viewed through both mutagen and properties > details
18:01  Knut-HB|home: hi, i need a python module to get the time of a mp3 file in miliseconds that works with python for windows. i first tried pymad, but that does not work with python on windows
18:01  Minty: Knut-HB|home: haha :) mutagen
18:01  lvh: Minty: Perhaps it's using ID3v2 and ignoring ID3v1 information. I don't know. Hence my advice to get a third party thing that gives you more information.
18:02  Minty: lvh: what do you mean? what sort of software, like a media player?
18:02  lvh: Minty: I'd use something like id3tool, but I don't know which ones work on Windows.
18:02  lvh: I suppose a decent media player would suffice, yes.
18:03  merwok: In Python there is hachoir-metadat
18:03  merwok: a*
18:03  lvh: I'd reccomend VLC, but be wary of its license.
18:03  ixiay: will the "twisted network programming essentials" book be helpful in designing a single player game?
18:04  Knut-HB|home: Minty, i give it a try
18:04 --- Super_Meat_Boy is now known as Meat_Boy
18:04  merwok: lvh: How so?
18:05  lvh: merwok: You've heard of Remi pulling VLC from the App Store?
18:05  Minty: Ok - a much easier question. http://paste.pocoo.org/show/317705/ - how can i do that better? that seems like a dire way of doing it...
18:06  lvh: Minty: Define __hash__ and __eq__ on those objects.
18:06  lvh: Minty: Create a set instead of a list.
18:06  lvh: Minty: well, that might not be good enough depending on what you actually want to acchieve.
18:06  Minty: oh :O, never touched the __hash__ and __eq__ properties
18:06  Minty: i just wanna compare a load of instances and see if they all share the same name
18:06  merwok: lvh: No.
18:06  Minty: if not, i wanna do something
18:07  lvh: Minty: So only if there are duplicates?
18:07  Minty: no, not duplicates.
18:07  Minty: i want to compare a load of instances and see if they share the same name PROPERTY.
18:07  Minty: i.e, instance.name
18:08  Minty: my way just seems bad - a for loop, 2 variables - seems unnecessary/
18:08  puddy: bit of a tangent, what's with the __[name]__ functions in python? what is that supposed to designate?
18:08  lvh: merwok: One developer decided the App Store wasn't free enough despite a) the guys who ported it giving it away for free b) the source being available on the website, which was clearly advertised c) a lot of work having went into porting
18:08  lvh: merwok: So despite all of that, one developer got it pulled from the App store.
18:09  lvh: merwok: And, technically, legally, he appears to be right. (Because section 6, and possibly other sections, can't be mixed with the way Apple distributes the binary to phones.)
18:09  merwok: puddy, they are are reserved to implement special things
18:10  merwok: puddy, their common name is magic methods
18:10  utdmr: hi. i'm a python and pyqt newbie. i have a list of qpushbuttons. and i want to assing them enterEvent() and leaveEvent(). they should show its names in a lineedit. but when i do it, all of them shows the same name. what am i doing wrong? http://paste.kde.org/2089/
18:10  puddy: merwok: this might be implementation dependent i suppose, but when are they called?
18:11  lvh: merwok: The primary problem is that many (from the looks of it, most) VLC developers completely disagree with it being pulled.
18:11  merwok: puddy, nope, it’s defined by the language.  http://docs.python.org/dev/reference/datamodel#special-method-names
18:11  lvh: merwok: Especially since, like I said, the ported source is freely available.
18:11  Minty: you know when you break a loop, does it drop out the loop in the exact same way that the loop is dropped out of when all the iterations are finished?
18:11  lvh: merwok: http://www.zdnet.com/blog/open-source/no-gpl-apps-for-apples-app-store/8046
18:11  puddy: Ahhhhhhhhh, thank you merwok
18:11  merwok: lvh: Interesting
18:11  lvh: merwok: But one developer decided he knows best for everyone, so it got pulled, and now nobody can get VLC without jailbreaking their iOS device.
18:11  lvh: merwok: Enjoy your freedom!
18:11  Minty: seems a bit silly because breaking a loop doesn't allow you to execute different code than from finishing the loop without performing some sort of check - surely?
18:12  kerio: Minty: for/else
18:12  Minty: oh?
18:12  lvh: Minty: No. finally: clauses aren't executed.
18:12  Minty: i never knew that, that's awesome
18:12  merwok: lvh: However, your warning about licensing for someone just wanting to use the software for themselves seems to border on trollish for me :)
18:12  ixiay: will i have to use some other framework to build a gui for my text game to run in along with twisted?
18:12  merwok: puddy: Some libraries define their own __magic__ names, but they really should not.
18:13  kerio: lvh: btw i told you that there was something in the app store ToS that was against the gpl
18:13  Minty: kerio: if i understand correctly: when you break a loop, it will ignore all code until the else: ?
18:13  kerio: it will break out of the loop
18:13  lvh: merwok: I don't know what he's going to do with the code.
18:13  kerio: and will *skip* the else
18:13  Minty: oh? it'll skip the else?
18:13  cnfer: lvh: can't have your cake and eat it
18:13  Minty: so when is the else executed.
18:14  lvh: cnfer: I'm not.
18:14  cnfer: lvh: i do understand whassis name
18:14  kerio: when the loop ends normally
18:14  lvh: cnfer: I uninstalled VLC. I hope the good guys eventually win, fork and relicense.
18:14  cnfer: lvh: if you truely stand by the GPL, you must actually stand by it, not only when it suits you
18:14  cnfer: oh yeah
18:14  merwok: lvh: Relicensing in a fork sounds impossible.
18:14  cnfer: i'm not a GPL fan, myself, so much
18:14  Minty: what? how is that logical? else is executed when the for loop finishes? wth
18:14  kerio: >implying anyone sane likes the GPL
18:14  cnfer: there are far better open licenses
18:15  merwok: cnfer: You can’t use “better” in such topics.
18:15  lvh: merwok: It would definitely be damaging.
18:15  seen_: lvh: finally is always executed (unless you block or turn off power)
18:15  cnfer: merwok:  i just did
18:15  merwok: lvh: I was more thinking about illegal.
18:15  derdon: cnfer: +1
18:15  Knut-HB|home: Minty, thanks, that works :)
18:15  Minty: wait, if i understand correctly: breaking from a loop ignores else and else is only executed if the loop finishes normally?
18:15  merwok: cnfer: In that case, can’t meant shouldn’t.
18:16  Tafadzwa: Hi, How do you define a main script in python when you have many files?
18:16  cnfer: merwok: in that case, i say it should. the GPL is bugger, and not all that free
18:16  Tafadzwa: python project*
18:16  lvh: seen_: Sorry, "for" should have been "else".
18:16  lvh: seen_: Err, finally should have been else, even
18:16  merwok: Meh.
18:16  lvh: merwok: The copyright holders can relicense whichever way they please.
18:16  RandIter: Tafadzwa: are you asking what name to use for it?
18:16  merwok: Tafadzwa, maybe using a __main__ module in a Python package
18:17  cnfer: i like open licenses a lot. telling people to walk in line is not open
18:17  merwok: lvh: They do.  I thought that the people doing the fork were not the copyright holders, you see.
18:17  RandIter: Tafadzwa: you could also use __main__.py
18:17  Tafadzwa: Thanx
18:17  Tafadzwa: I will try it
18:18  merwok: cnfer: Meh.  We’re walking in troll territory.  BSD is a free licence without copyleft, GPL is a free licence with copyleft.  Can’t we choose what we prefer and let other people do the same?
18:18  merwok: Additionally, GPL does not care about open source.
18:18  lvh: merwok: AFAICT, Remi is alone in the desert at the moment.
18:19  ixiay: is there a gui framework that would be ideal for creating a real time text game?
18:19  lvh: merwok: Most developers (especially weighted by contribution) thought this thing running on the iPad was pretty damn nifty.
18:19  cnfer: merwok: sure, people have a right to prefer the GPL
18:19  TheSheep: ixiay: yes
18:19  TheSheep: ixiay: tocd
18:19  cnfer: merwok: but then be consistent
18:19  Minty: Can i use the os module to create shortcut directories, i.e: .lnk
18:19  Tafadzwa: I am using eric4, I already have the code in c++, I am trying to rewrite to python bu the "main stript is not defined" should I define it in __init__.py
18:19  lvh: merwok: And, if nothing else, an open source player is better than a closed source player.
18:19  cnfer: merwok: GPL and app store ToS are not compatible. so be honest
18:20  lvh: cnfer: wrt having your cake and eating it: I don't like the GPL.
18:20  lvh: cnfer: I used to, and then I studied law.
18:20  TheSheep: ixiay: sorry, that's libtcod
18:20  cnfer: lvh: :P
18:20  merwok: Minty: Try os.symlink.  It may work only in 3.2 for windows though.
18:20  ixiay: thank you thesheep
18:21  cnfer: lvh: i used to like the GPL, then i found out telling people they must agree with you isn't so nice
18:21  merwok: cnfer: Okay, I thought you were dissing the GPL and its users, not the specific case of whatever happened with VLC.
18:21  Minty: 3.2? python 3.2?
18:21  merwok: cnfer: I don’t understand the last part.  People are not forced to use GPL software.
18:21  cnfer: merwok: a little bit of both :P
18:21  lvh: cnfer: But yes, I'm being consistent. I'm dumping emacs as soon as is convenient (again), and switching to *BSD.
18:21  merwok: cnfer: If they want to, they have to comply with licensing terms.
18:21  cnfer: merwok:  GPL is kinda viral
18:21  merwok: cnfer: No.
18:21  lvh: You're both wrong
18:22  lvh: until someone defines what "viral" means.
18:22  merwok: Yes.
18:22  cnfer: lvh: wasn't saying you where not consistent
18:22  lvh: Additionally, not even the FSF and the OSI manage to agree on what it actually means
18:22  Minty: merwok: 3.2 what? python?
18:22  merwok: Minty: what else?
18:22  cnfer: yeah :P
18:22  lvh: Personally, I find Rosen's argument far more cogent than the FSF's "yes okay let's just not take any chances"
18:22  Minty: merwok: since when does 3.2 exist? thought 3.1.3 is the latest?
18:23  cnfer: lvh: i mean that proximity to GPL code is tricky business
18:23  merwok: Minty: When 3.1 was released, Python dev did not stop developping.
18:23  Minty: i know, but where can i dl this incredibly invisible version? :P
18:23  merwok: Minty: Thus, 3.2 started.  It is currently in beta stage.
18:23  lvh: cnfer: Certainly. That's okay, you can just avoid it. The only really annoying library is libreadline.
18:23  cnfer: oh, i mostly do
18:23  Minty: found it :)
18:23  Minty: ty
18:23  merwok: Minty: Links are hard to get right cross-platform.  I’m not sure at all windows .lnk things are supported.
18:24  cnfer: what i dislike is the stallmanism
18:24  TheSheep: lvh: isn't mercurial gpl too? :P
18:24  lvh: cnfer: In the mean time, I'm going to continue my advice to people that they shouldn't agree to legal documents they don't understand.
18:24  merwok: Minty: windows gained os.symlink in 3.2, but maybe it’s a new NTFS thing, not the .lnk old things.
18:24  cnfer: lvh: rant about freedom and open ness, yet try to force it down people's throats
18:24  cnfer: lvh: haha, good advice
18:24  lvh: TheSheep: Yes? I don't like hg either.
18:24  lvh: TheSheep: Thankfully, fossil is permissively licensed.
18:24  Minty: merwok: know any other modules in which i can create a shortcut with 2.7 py
18:24  cnfer: lvh: and "don't say a word to authorities without your lawyer present" ?
18:24  merwok: cnfer: I still don’t understand the forcing part.
18:25  merwok: Minty: I don’t do Windows.
18:25  TheSheep: lvh: does it have python bindings?
18:25  cnfer: merwok: it is about intent
18:25  lvh: TheSheep: No. That's okay, hg doesn't really either
18:25  lvh: TheSheep: Unless mpm thinks it's okay to use internals now.
18:26  merwok: cnfer: Say I write a lib that I want to be free, including its modified versions, so I choose GPL.  Where am I forcing anyone?
18:26  lvh: TheSheep: It's SQLite though, so it's fairly easy to interact with.
18:27  lvh: merwok: I believe he's talking about relicensing code that uses it under either the GPLv3 if you distribute binaries, congruent with section six, or under the AGPLv3, congruent under the Affero exception.
18:27  lvh: So yes: if you want your code to only be used in other GPL projects, please license it under the GPL.
18:27  cnfer: yeah
18:28  cnfer: my BSD code can't use your gpl lib
18:28  merwok: Yes.
18:28  cnfer: whereas my bsd code can use any mit or apache, etc etc lib all i want
18:28  lvh: Sorry, instead of binaries I should say "object code".
18:28  merwok: (I meant I agree, I’m not sure how English works with agreement to a negative :)
18:29  merwok: cnfer: My GPL code can too <wink>
18:29  cnfer: yeah, like i said
18:29  cnfer: intent
18:29  lvh: merwok: Yes: the library can be relicensed under the GPL.
18:29  lvh: Well, maybe.
18:29  cnfer: GPL has the intent to propagate GPL, and as such limit freedom
18:29  lvh: ISC isn't GPLv3-compatibility.
18:29  lvh: err, compatible*
18:30  merwok: cnfer: Do we agree?  If I choose GPLv3, your BSD code can’t use it.  I’m releasing a lib with conditions.  I’m not forcing anyone though, I’m just setting conditions for reuse.
18:30  cnfer: it's like a country saying they support freedom, but once you enter their borders only their government sanctioned form of freedom
18:30  merwok: cnfer: Meh.  Freedom has a precise meaning for software IMO.  GPL is free, it just disallows making non-free out of free.
18:30  cnfer: that's not freedom at all
18:30  TheSheep: It's the author right to use whatever license he wants
18:31  lvh: TheSheep: Yes. Nobody is arguing that.
18:31  cnfer: TheSheep: it absolutely is
18:31  cnfer: indeed lvh
18:31  TheSheep: so what are you complaining about?
18:31  TheSheep: just use the license that you want and be done with it
18:31  cnfer: pay attention and follow the debate
18:31  seen_: cnfer: the difference: BSD - do whatever you want; GPL - keep it free
18:31  lvh: TheSheep: The original complaint was that a single, insignificant developer, used the GPL to pull VLC from the App Store, despite the source code being readily available.
18:32  lvh: seen_: keep it GPL.
18:32  TheSheep: lvh: that's how the license works, no?
18:32  TheSheep: lvh: all the contributors agreed to it
18:32  lvh: TheSheep: Yes, that was my original point: a lot of the contributors agreed with it without fully realizing the consequences of their actions.
18:32  cnfer: that's what i said, the GPL is restrictive, you chose it, now stand by it, with full ramifications
18:33  TheSheep: lvh: they can always change the license of their work if they change their mind
18:33  nosklo: Let's just use GPL for everything, then everybody can use anything anywhere :P
18:33  lvh: nosklo: No, let's remove copyright instead!
18:33  cnfer: nosklo: lets avoid GPL like the plague
18:33  cnfer: lvh: better :P
18:33  lvh: TheSheep: Yes, this point was also made during the previous debate.
18:33  lvh: TheSheep: Specifically, that this was being talked about.
18:34  TheSheep: lvh: well, isn't one of the goal of gpl to actually make people aware of the consequences of stupid laws?
18:34  cnfer: TheSheep: you are reiterating the bits we have already covered
18:34  smw: nosklo, lets use BSD everywhere so everyone can use anything
18:34  lvh: TheSheep: Unfortunately, not all copyright owners are still active: contacting them is not always trivial.
18:34  lvh: smw: ISC! It's like BSD with even less text.
18:34  nosklo: smw: not really - BSD can be closed, so I can't use some stuff
18:34  lvh: (Lawyers can't abuse stuff that isn't there)
18:34  TheSheep: cnfer: yes, I'm just trying to find out why this discussion still continues despite everything having been said already
18:34  cnfer: lvh: http://www.isc.ro/ ?
18:34  ixiay: i looked at libtcod but im looking for something based in python, is there something similar for that?
18:35  cnfer: :P
18:35  smw: lvh, same thing :-P.
18:35  smw: lvh, the "New BSD License" is about as small
18:35  lvh: nosklo: Except of course to the people selling GPL exceptions, which you still couldn't use
18:35  cnfer: lvh: can one use cc on code?
18:35  TheSheep: ixiay: doesn't libtcod have python bindings?
18:35  TheSheep: ixiay: I'm sure quite a few python roguelikes use it
18:35  askhl_: TheSheep, I think it's because someone keeps saying stuff like `one license is more free than the other'.  Which doesn't make sense, hence the discussion can go on forever
18:35  lvh: cnfer: You might, yes. It's a road less traveled. In law, like in crypto, that's generally not a good idea unless you REALLY know what you're doing.
18:36  cnfer: hehe
18:36  smw: nosklo, if it is under the BSD, anyone can use it anywhere
18:36  lvh: cnfer: By which I mean you can defend yourself in court against people like Moglen
18:36  cnfer: askhl_: no, i'm saying GPL is less free then most other "free" ones
18:36  smw: nosklo, BSD == more freedom
18:36  nosklo: smw: yeah, but someone can get it and release it as any other comercial license instead
18:36  nosklo: smw: BSD == I can't see the changes in the source
18:37  lvh: cnfer: Maybe we should stop calling things more and less free. Nobody has defined "freedom".
18:37  smw: nosklo, so? How does that affect you
18:37  ixiay: thesheep you are right but i cant figure out how to get started with it in python @_@
18:37  smw: nosklo, chances are most companies will release their code
18:37  nosklo: smw: there's software I'd like to study and change, but I can't because it was released in BSD
18:37  cnfer: lvh: ok, s/less free/more restrictive/g
18:37  askhl_: cnfer, don't use imprecise wordings.  If you know what BSD and GPL do, then that's fine, but "less free" is not a sensible description.
18:37  lvh: cnfer: Considering the term "free software" is effectively owned by the FSF, I would suggest we stop using it.
18:37  TheSheep: ixiay: I would download the source of one of those games and look at it
18:37  cnfer: lvh haha
18:37  lvh: cnfer: I'm serious.
18:38  TheSheep: ixiay: also, try this: http://roguebasin.roguelikedevelopment.org/index.php?title=Complete_Roguelike_Tutorial,_using_python%2Blibtcod
18:38  smw: nosklo, no, you can't because someone decided to make it commercial and make money off of it.
18:38  nosklo: smw: exactly, and they did it because it was BSD
18:38  nosklo: smw: if it was GPL, they wouldn't
18:38  smw: nosklo, if it had been GPL, that code you want to study may not have been created
18:38  ixiay: do you know if it also can do a purely text based game? not roguelike but simple io but in realtime
18:38  cnfer: nosklo: BSD is as unrestrictive as it gets. if it is BSD lisenced you can use it
18:38  JimmyTheKid: if I have a list like this: x = [(u'es', u'Spain'), (u'au', u'Australia'), (u'za', u'South Africa'), (u'nz', u'New Zealand'), (u'it', u'Italy'), (u'pt', u'Portugal'), (u'de', u'Germany'), (u'fr', u'France')], how do I sort it by the Name of the Country, not the Prefix?
18:38  nosklo: smw: yeah, but maybe it could have been created
18:38  cnfer: if someone added code and didn't relicense, then it isn't BSD
18:39  lvh: smw: Yeah, horses taken to water and all that
18:39  nosklo: cnfer: that's the point exactly - people just get BSD code and relicense it as closed, so you don't get back the changes - that sucks
18:39  lvh: smw: You keep hearing the RIAA argument. 20 million downloaded == 20 million lost sales amirite?
18:39  papna: JimmyTheKid: sorted(x, key=operator.itemgetter(1))
18:39  lvh: smw: It's not like Google pumps loads of cash into developing Python or anything
18:39  ixiay: thesheep: ill take your advice and look at some sourcode, thanks
18:39  smw: lvh, what? No, I don't believe that in the slightest
18:39  lvh: smw: Corporations are evil! This is why we need them to give us patent licenses despite nonexposure.
18:39  JimmyTheKid: papna? what?
18:39  smw: lvh, what?
18:40  papna: JimmyTheKid: sorted(x, key=operator.itemgetter(1))
18:40  seemant: smw: chromium is really great, thanks for that
18:40  lvh: smw: I'm being sarcastic. Hence "amirite".
18:40  cnfer: nosklo: and that is why there is so much BSD code about then?
18:40  seemant: smw: <td align="left"><input value="Send" class="Send" onclick="TA_CheckMessage(this.form)" onmouseover="self.status='Send this message';return(true);" onmouseout="self.status='';return(true);" type="button"></td>
18:40  smw: seemant, np
18:40  seemant: er
18:40  lvh: smw: Sarcasm.
18:40  seemant: smw: was trying to paste you the button
18:40  nosklo: cnfer: because a small group of people likes to make a lot of money
18:41  papna: JimmyTheKid: operator.itemgetter(n)(y) == y[n]
18:41  cnfer: nosklo: so let them
18:41  lvh: smw: Section 11 gives explicit patent licenses.
18:41  nosklo: cnfer: no
18:41  KipMacy: has anyone in recorded history successfully sued over the GPL ?
18:41  cnfer: yes
18:41  nosklo: cnfer: I want my share
18:41  cnfer: sure
18:41  cnfer: so do i
18:41  papna: KipMacy: Sure.
18:41  nosklo: cnfer: it's wrong for people to get money without working
18:41  cnfer: but i am not about to force others to agree with me
18:41  smw: lvh, section 11 in GPL 3, right?
18:41  lvh: smw: Yes. The GPLv2 has no such clauses.
18:41  JimmyTheKid: papna: gobal name 'operator' is not defined
18:41  nosklo: cnfer: I don't think they developed a software worth the money they get
18:41  papna: KipMacy: The interesting parts of the GPL haven't been declared on in US coursrs though.
18:41  JimmyTheKid: must I import operator from somewhere?
18:41  papna: JimmyTheKid: import operator
18:41  cnfer: because that is exactly opposed to the basic idea of it all
18:41  nosklo: cnfer: something is wrong
18:42  papna: KipMacy: And the fine lines haven't been drawn by precident.
18:42  lvh: KipMacy: Here's what happens. (Or happened with BT.)
18:42  smw: lvh, I am a very free software person. But I believe in different definitions of "free". Software I release is under BSD unless it was GPL infected
18:42  lvh: KipMacy: They draw it long enough so that the product stops being profitable.
18:42  lvh: smw: Yes. I license stuff under ISC.
18:42  lvh: KipMacy: Then, they release the source code and the suit goes away.
18:43  nosklo: cnfer: some people work a lot and get almost nothing. Other people just grab stuff and make lots of money selling a piece of paper saying "license". Something is wrong - That's not helping software development and computer world evolution, at all
18:43  smw: lvh, it is pretty much the same thing as the "New BSD License" on google code
18:43  papna: smw: Well that's stupid. You should use the well-established definition of "free" when you use the technical term.
18:43  lvh: smw: Yes, it is.
18:43  JimmyTheKid: papna that worked perfectly shot
18:43  smw: papna, what is the technical definition of free?
18:44  gremmachook: smw, free as in Freedom.
18:44  TheSheep: personally I like Crockford's license a lot
18:44  papna: smw: http://www.gnu.org/philosophy/free-sw.html
18:44  lvh: One core difference of opinion is the idea that proprietary software companies wouldn't contribute without a gun held to their heads, and that the only meaningful contribution is code.
18:44  smw: gremmachook, ISC/BSD is "free"
18:44  lvh: smw, cnfer: Now do you see my argument against using that term?
18:44  smw: gremmachook, it is more free.
18:45  cnfer: papna: yeah, i don't agree with stallman on a lot of points
18:45  papna: cnfer: I'm not asking you to agree with Stallman on points of opinion.
18:45  smw: lvh, you hate the term free because it is linked to stallman? Makes sense
18:45  cnfer: lvh: yeah, well, part of the problem is them hijacking thee word "free"
18:45  lvh: cnfer: He's actually a pretty smart guy. He pointed out that MySQL wasn't strong enough to survive under Oracle.
18:45  cnfer: oh, i'm not saying he isn't smart
18:45  papna: cnfer: I'm saying that his movement made up the term "free software" and the reasonable definition for the term is the one promoted by the FSF.
18:45  gremmachook: smw, I meant to emphasize on the thinking.
18:45  cnfer: i'm saying i think he's a dick :P
18:45  lvh: smw: No, because people don't agree on what it means, so "more free" is silly
18:45  askhl_: Why do you disagree with that definition of free in the context of software?
18:46 --- ideasman_42 is now known as afk
18:46  cuga: Question on argument handling, let's say I have 2 arguments, one that is used to be say 'start' or 'stop' and then the other argument is for what to start/stop (a defined list of possible values), is a bunch of nested if/elif/else the only real way to handle all the possible combinations for passing those arguments to specific methods?  I've looked at using dictionary but that won't work when I have 2 or more combination 
18:46  smw: askhl_, I don't disagree, they disagree!
18:46  papna: cnfer: Well, you should also distinguish between disagreeing with someone and their being a dick.
18:46  lvh: smw: As a result, we could get to a more useful discussion more quickly if everyone at least agreed on the terminology.
18:46  cnfer: papna: they didn't invent the word free
18:46  cnfer: papna: i do, very much so
18:46  smw: lvh, very true
18:46  cnfer: papna: i think he's a dick because he isn't consistent
18:47  lvh: cuga: Please pastebin working code.
18:47  smw: cnfer, who is being inconsistent?
18:48  cnfer: oh ffs!
18:48  papna: cnfer: They did, however, invent the term "free software"
18:48  cnfer: papna: i haven't used that term yet
18:48  lvh: Seeing how many proprietary software companies fund Pycon, Python, Twisted, and so many other projects I like, I have a hard time believing all of them are evil and ostracizing them is a net win.
18:48  cuga: lvh: sure, here is my sample, http://paste.pound-python.org/show/1414/
18:48  cnfer: lvh: agreed
18:49  nosklo: they're not evil. They do evil stuff to survive on a evil-rule world
18:49  smw: papna, my definition of free comes from the dictionary. "exempt from external authority, interference, restriction"
18:49  papna: smw: That's silly.
18:49  nine_: Hi! Trying to learn python (and wxpython) by making a simple calculator-app. My problem right now is that I have binded a event on the button labeled '1' with a function by "self.Bind(wx.EVT_BUTTON, self.numbutton, self.btn_1)" but I don't want to write one function for every num-button, I rather pass an variable to the funktion. But how do i do that? Anything putting me in the right direction would be appreciated.
18:49  cuga: lvh, process_control_helper() is the function i'm questioning if there is a much better way of handling
18:49  cnfer: step one: stop thinking in concepts as good and evil
18:49  papna: smw: "Free software" means something. You should use a different term.
18:50  cnfer: papna: free <> free software
18:50  cnfer: there is prior art on the word "free" i think...
18:50  lvh: cnfer: Seriously, it's not worth arguing over
18:50  cnfer: lvh: no, indeed
18:50  merwok: TheSheep, meh.  That person released code under a licence telling people not to use the code for “evil”, without defining it.
18:50  lvh: cnfer: If we can just use a term *everyone* agrees on, maybe we could stop bitching about a word and start discussing about content.
18:50  cnfer: word!
18:51  lvh: cuga: Okay, so, operator.methodcaller
18:51  smw: lvh, got a new term for me to use
18:51  lvh: cuga: You create the methodcaller once based on the operation you want to do
18:51  TheSheep: merwok: that's why it's so beautiful
18:51  smw: ?
18:51  merwok: TheSheep: Oh, sorry, didn’t get you used irony.
18:51  TheSheep: merwok: I didn't, I really like the idea.
18:52  lvh: smw: Permissively licensed versus GPLed, perhaps?
18:52  merwok: TheSheep: Pretending that there are such things as universally defined absolute moral values in a licence text is the epitome of dumb.
18:52  merwok: Or navel-centrism.
18:52  merwok: I mean, we’ve had social sciences for only a century, so nobody is aware that values aren’t absolute, amirite?
18:52  TheSheep: merwok: who said they are universally defined and absolute?
18:52  lvh: SQLite has it, but not as part of the license.
18:53  cnfer: lvh: i think i'll add the http://en.wikipedia.org/wiki/ISC_license text in my editor as the default "disclaimer" code
18:53  merwok: TheSheep: He implied it, when he did not define the term.
18:53  lvh: cnfer: Good man!
18:53  TheSheep: merwok: not really
18:53  merwok: lvh: That blessing is a different thing, with which I have no problem.
18:53  merwok: TheSheep: Please elaborate
18:53  TheSheep: merwok: I think it's a great asshole filter
18:53  merwok: What does that have to do with licensing terms?
18:54  TheSheep: merwok: Prevents the use of your code by nitpicking law people
18:54  lvh: But yeah sqlite is basically a good example of the sky not falling
18:54  TheSheep: merwok: while in reality that point has no legal effect
18:54  merwok: TheSheep: Meh.  I’m not a law people, but I don’t know if I can use that code.
18:54  lvh: lots of proprietary code uses sqlite
18:54  TheSheep: merwok: that's your problem :P
18:54  lvh: that doesn't prevent it being developed
18:55  lvh: in fact, it helps: hwaci hired drh full time to work on it, based on licenses they sell
18:55  cnfer: yeah
18:55  hydester: i'm using pycurl, setting WRITEFUNCTION to a stringio value.   it if i do multiple curl.perform() calls in a loop, stringio.getvalue() contains the old values with the new response appended.  the only away around this that i found was to always create a new StringIO for each loop iteration.  any other ideas why this is happening?
18:55  lvh: those licenses are entirely voluntary
18:55  cnfer: CoreData is sqlite
18:56  merwok: hydester, that does not sound buggy
18:56  merwok: hydester, if curl.perform issues multiple queries, then your stringio will contain all responses
18:57  nine_: don't bother. Googled some more and found the answer...
18:58  cuga: lvh, ok i'll look into that, thanks
19:02  Sub_Zero: Greetings! How can I grant everyome permissions to a folder? I've realised that if the OS is Vista then we will be needing to.
19:05  hydester: hi, i think my client locked up.  any idea why in this pycurl example appends the second request to the first in the StringIO object, as seen in file2.txt?
19:05  hydester: https://gist.github.com/771859
19:08  sontek: hydester: you just throw an import pdb;pdb.set_trace() in there and step through the code so you can understand what its doing
19:10  merwok: Sub_Zero, maybe os.chmod
19:11  hydester: sontek: i think i know what it is doing.  i just don't know why.  if i stringio.getvalue(), should i be able to reuse it without pycurl appending?
19:11  sontek: hydester: also, urllib is probably better than pycurl
19:12  sontek: hydester: stringio needs to be closed as well
19:13  hydester: sontek: so if i close it then the next getvalue() will fail.  so the only way is to create a new StringIO and rebind the WRITEFUNCTION?
19:14  comsc1: Hi guys, lookin for a bit of help on a program that is designed to simulate a queue for a bank teller, generating average waiting time and queue length etc, here is my code which is causing IDLE to crash upon running it, can someone have a look and point me in the right direction? Thanks a lot, im a beginner with python and programming in general, thanks again
19:14  comsc1: http://paste.pound-python.org/show/1416/
19:15  sontek: hydester: you just want to write the same content to 2 different files?
19:16  Sub_Zero: merwok I don't have access to a Vista OS would this work? os.chmod('C:\\folder',777)
19:16  sontek: hydester: I'd just copy stringio and write it twice rather than going out to the web and downloading it twice
19:16  sontek: hydester: since its the exact same content
19:16  hydester: sontek: no, i just tried to make a simple example.  i have been creating new StringIOs/rebinding writefunction.  just was thinking it was a hack and that there is a cleaner way
19:17 --- kanor is now known as tyrus
19:18  sontek: hydester: http://paste2.org/p/1184808  something like that wouldn't work?
19:19  merwok: Sub_Zero, I have no idea.  That’s why I go to docs.python.org/library/os :)
19:20  hydester: sontek: it would.  i just was trying to do some of it in a for loop, and i figured creating a function wasn't worth the overhead since it keeps creating new Curl/StringIO objects.  i guess that is the best way.  thanks
19:22  sontek: hydester: Don't try to optimize before you need to, it'll always overcomplicate a simple issue
19:35 --- simonrvn_ is now known as simonrvn
19:38  vokoda: anyone know of a package that can map a list of ip ranges into an in-memory tree structure for fast lookup?
19:41  babilen: vokoda: http://code.google.com/p/ipaddr-py/ something like that?
19:46  cnfer: vokoda: sqlite?
19:50  comsc1: Hi guys, lookin for a bit of help on a program that is designed to simulate a queue for a bank teller, generating average waiting time and queue length etc, here is my code which is causing IDLE to crash upon running it, can someone have a look and point me in the right direction? Thanks a lot, im a beginner with python and programming in general, thanks again =  http://paste.pound-python.org
19:50  comsc1: /show/1416/
19:51  vokoda: babilen: that doesn't do what I asked. cnfer: sqlite rtree might work out, thanks for reminding me of that
19:51  babilen: ok
19:52  cnfer: vokoda: and you know about "You can also supply the special name :memory: to create a database in RAM." right?
19:54  vokoda: cnfer: yes :)
20:01  cnfer: \o/
20:04  FP83: hi guys! I'm reading Python tutorial now, and had a question about methods and functions
20:04  FP83: so. from http://docs.python.org/tutorial/classes.html
20:05  FP83: "By definition, all attributes of a class that are function objects define corresponding methods of its instances. So in our example, x.f is a valid method reference, since MyClass.f is a function, but x.i is not, since MyClass.i is not. But x.f is not the same thing as MyClass.f — it is a method object, not a function object."
20:05  FP83: it seems to me that he functions and methods are something different
20:06  FP83: but earlier it is said that "A method is a function that “belongs to” an object."
20:06  pax-: methods are functions tied to a cleass
20:06  pax-: class*
20:06  FP83: can I say that method is an instantiation of a function?
20:07  FP83: I.e. method to function is what instance is to a class - is that correct?
20:08  pax-: erm, no
20:08  pax-: a method is a function
20:08  klawd: better use isinstance or zope.interfaces and a check for the interface?
20:08  pax-: but it's tied to a class ( object )
20:08  ixiay: hello world
20:09  glittle: Hey, could anyone help me with a simply Python question?
20:09  ixiay: is there a way to create a custom sized terminal window? i need bigger than 80X40
20:09  FP83: but in the quote they distinguish between a mathod and a function
20:09  FP83: *method
20:09  moreati: glittle: ask away. (in general it's better to just ask, not ask if youcan ask)
20:10  FP83: oh, wait, I guess I'm getting it
20:10  glittle: Why does Python not use exact float numbers?  When I type "6.1" into IDLE it returns 6.099999999999996.  Why is that?
20:10  tappi: FP83 indeed, a method is a function, but a function is not always a method
20:10  moreati: ixiay: not to my knowledge
20:10  FP83: function becomes a method when it is a part of some instance, of a specific object
20:10  Tyrope: how does one open .egg files? i just got zope.interface for twisted, but no clue how to use the file.
20:11  ixiay: what is the easiest way to simulate a terminal with basic io
20:11  FP83: so if I just write def something in a command line without connecting it to a class - it would be a function, but not a method, right?
20:11  pax-: lot's of low hangin' fruit today
20:11  moreati: glittle: there's no such thing as an _exact_ float. it's impossible to store 6.1 in floating point format, the number python returned is the closest the computer can get. Note this is true no matter ehat lnguage one uses
20:12  glittle: Whoah, what?  6.1 doesn't exist in the computer?
20:12  ixiay: programming is conquering me right now -_-
20:12  Tyrope: if one wants to store a true float, use 2 variables... 1 for the [before the seperator] and one for decimals
20:12  pax-: glittle: a computer speaks binary.
20:12  preaction: glittle: not in float, but in other formats yes
20:13  glittle: hokay... thanks
20:13  moreati: glittle: 6.2 doesn't exist in _floating point_ there are other formats. look at the deceimal module and http://docs.python.org/tutorial/floatingpoint.html
20:13  ixiay: is there a way to create a custom terminal? or a pseudo terminal not a real terminal
20:13  ixiay: but one that acts in the same way that can take input and do whatever with it
20:14  comsc1: can anyone please help me with the following program, the simulation crashes when I tell it to run for more than 1 (virtual) day, I cant see why and really need help, thanks http://paste.pound-python.org/show/1419/, its probably something simple as usual!
20:14  tappi: fp83 correct
20:14  FP83: tappi: thanks :)
20:14  ahmed-tux: how can compare between  "firebird-classic-2.1.3.18185.0-25.1.x86_64.rpm" and  "firebird-2.1.3.18185.0-25.1.x86_64.rpm "  i want to get only firebird and firebird-classic  without version ?
20:15 --- samferry is now known as sferry
20:15  Tyrope: search in the string for "classic"?
20:15  woozly: i'm sorry about super nuwbie question, but: how to make FOR like for (i=0; i<=10; i++) ?
20:15  seen_: comsc1: 1. `sys.setrecursionlimit(999999999)` is a red flag; your program should not need it
20:15  seen_: 2. don't pass dozen parameters to a function (more so if it  doesn't use them directly) create approaprite objects (class ..)
20:15  seen_: 3. run the script in the console; paste the traceback (if the error is not meaningfull try to remove all code that is non-essential to reproduce the error to create minimal example
20:15  woozly: in python
20:15  moreati: Tyrope: an egg is a zip file with the extension changed, place it somewhere in your $PATH and you can import the contained .py modules
20:15  ixiay: python y u no make code!!!
20:16  Tyrope: moreati: so i need to drop it on my desktop (where the .py file is aswell) and tadaa?
20:16  moreati: woozly: for i in xrange(11): # or maybe xrange(10) I forget when ++ happens in $OTHER_LANGUAGE
20:16  lvh: Hello.
20:16  comsc1: thanks seen, will have a go
20:16  moreati: Tyrope: that should work
20:16  ixiay: herro lvh
20:16  mcsquiggedy: Is there a way to import a module whose name is represented by a variable? Besides slurping and using exec on the file, which I'm not sure would actually work.
20:16  woozly: moreati, thanks
20:16  Tyrope: moreati: it doesn't. :P
20:17  lvh: mcsquiggedy: __import__
20:17  mcsquiggedy: Gorgeous. Thanks.
20:17  mcsquiggedy: I suspected it might exist.
20:17  moreati: Tyrope: run it from a command window and pastebin the traceback
20:18  Tyrope: moreati: had a pic prepared already... if you don't mind. http://test.tyrope.nl/fail.png
20:18  moreati: ahmed-tux: not sure I understand your question. How is that related to python?
20:18  ixiay: i want to create a custom console app that i can resize bigger than 80x40 can someone recommend a framework?
20:19  lvh: ixiay: Urwid.
20:19  moreati: Tyrope: what was the name of that egg file?
20:19  ixiay: fanks!
20:19  kerio: mcsquiggedy: why do you need that? :|
20:19  lvh: ixiay: If this is related to your game, it also plays nicely with Twisted.
20:19  Tyrope: moreati: zope.interface-3.6.1-py2.7-win32.egg
20:19  ixiay: sure is related but twisted is twising me!!
20:19  Tyrope: still is, btw.
20:20  lvh: ixiay: Have you done async IO before?
20:20  ixiay: nope i am a very new to programming
20:20  mcsquiggedy: I'm building a game whose rooms are all subclasses. The main thread take a string indicating the room's name, and then imports it.
20:20  mcsquiggedy: I don't want to actually import all of them, because that would fill the RAM up a lot faster.
20:21  moreati: Tyrope: do a dir to confirm the egg is in that directory and hasn't ben renamed as .zip, just for my sanity
20:21  lvh: ixiay: Yeah, it does take a while to grok async IO. Once you do, it's a lot easier, actually
20:21  lvh: moreati: Um, that's now how it works
20:21  lvh: moreati: Sorry, mistell
20:21  lvh: mcsquiggedy: That's not how it works: a module is imported
20:21  ixiay: ill keep at it though, one day at a time, inbetween brain spasms
20:21  lvh: mcsquiggedy: Importing only a few names doesn't import memory use
20:21  ahmed-tux: moreati: i writing python app for managing pkgs but i get some prob, when i run 'myapp.py --get firebird' in results i have all pkgs which have firebird
20:21  ahmed-tux: i'm*
20:21  lvh: mcsquiggedy: Why are they subclasses and not instances? Are there multiple such rooms?
20:22  Tyrope: moreati: 09-01-2011	20:07	224.335	zope.interface-3.6.1-py2.7-win23.egg
20:22  Tyrope: on my desktop.
20:22  moreati: lvh: I didn't quite catch 'mistell'. Am I talking nonsense again?
20:22  lvh: moreati: I did m<TAB> and highlighted you. I meant to highlight mcsquiggedy
20:22  lvh: moreati: You probably are, but I'm not monitoring your discussion ;-p
20:22  mcsquiggedy: lvh: because there's going to be a lot of method overwriting.
20:23  mcsquiggedy: lvh: Though I'm not sure what you meant about importing memory use.
20:23  lvh: mcsquiggedy: But all of the concrete room classes are singletons?
20:23  mcsquiggedy: lvh: Doesn't the import statement create all of the functions, etc.?
20:24  mcsquiggedy: lvh: Some will be. Others will be instances of a more generic type.
20:24  FP83: quit()
20:24  FP83: quit
20:24  moreati: Tyrope: try doing that import from the interactive interpreter, keeping the desktop as your working directory. I can't see why it's not working
20:25  Rhamphoryncus: mcsquiggedy: imports are cached.  Importing the same module multiple times, even from different places, gives you the same module object
20:25  lvh: mcsquiggedy: Yes, it does: that's my point. If you do from a import A, and a also contains B, C, D, E, those will sitll be put in memory when you import A from a
20:25  Tyrope: moreati: i hope you do realize i'm not importing myself, but twisted is?
20:25  lvh: mcsquiggedy: So only using some of the classes from a particular module won't influence memory use.
20:26  lvh: Tyrope: Why isn't this just being installed with pip
20:26  moreati: Tyrope: well if it works from the interactive session then we can start poking twisted
20:26  lvh: if you want the egg to work, it should be on a directory in sys.path
20:26  Tyrope: moreati: copy that
20:26  lvh: I don't know what stuff is on sys.path on your machine
20:26  Tyrope: lvh: wut?
20:26  mcsquiggedy: Sorry, I don't think I was clear... the rooms are going to be separate modules.
20:26  lvh: Tyrope: What platform are you on
20:26  moreati: lvh: he's on WIndows
20:26  Tyrope: Win7 64-bit, but installed the 32 bit one
20:26  lvh: Tyrope: Doesn't matter, z.i is pure python
20:27  mcsquiggedy: (lvh): I could import them all as a package, but there might end up being an awful lot of them.
20:27  lvh: Okay, so, on Windows, the Python27\ dir is part of the sys.path, right?
20:27  lvh: Tyrope: Can you do import sys; sys.path in an interpreter for me and give me the output? Thanks
20:27  lvh: mcsquiggedy: This sounds like premature optimization
20:28  Tyrope: lvh: ImportError: No module named path
20:28  lvh: mcsquiggedy: I'm having a hard time imagining a bunch of *code* for rooms in a game is that much memory.
20:28  papna_: Tyrope: Re-read what he asked for.
20:28  Rhamphoryncus: mcsquiggedy: so what happens when someone plays through all the rooms?  Now they're all cached, no better than loading them all in the first place
20:28  mcsquiggedy: lvh: It may well be excessive.
20:28  kerio: lvh: maybe he has the rooms as code
20:28  lvh: Tyrope: I think you mistyped/miscopied.
20:28  kerio: which makes sense
20:28  Tyrope: oh wait, not import sys.path, fail.
20:28  mcsquiggedy: Rhamphoryncus: when the last person leaves a room, it'll be stored in a file.
20:29  mcsquiggedy: Rhamphoryncus: ...and then the object itself will be deleted, naturally.
20:29  Rhamphoryncus: mcsquiggedy: the module or the instance created from it?
20:29  Tyrope: lvh: ['', ,C:\Windows\\system32\\python27.zip', 'D:\\Python27\\DLLs\
20:29  Tyrope: oops.
20:29  Tyrope: hit enter too soon
20:29  kerio: mcsquiggedy: how are you doing this?
20:29  moreati: Tyrope: Don't paste, use http://paste.pound-python.org/
20:29  kerio: and what happens if someone reenters the room?
20:29  mcsquiggedy: Rhamphoryncus: That... is something that I really should have thought of sooner. Thanks.
20:29  Tyrope: even single lines?
20:30  Rhamphoryncus: mcsquiggedy: you can't unload a module.  (Not easily and reliably.)
20:30  moreati: Tyrope: I was assuming it's oging to wrap/be over several lines
20:30  Tyrope: moreati: alright, fair warning, will use that URL.
20:30  mcsquiggedy: Rhamphoryncus: If I removed it from __dict__, wouldn't the whole namespace get garbage collected?
20:31  __monty__: Hi, I want to distribute a program with a wxpython interface to some people using microsoft windows. Can I use py2exe for this? Is this the best way to do this?
20:31  Rhamphoryncus: mcsquiggedy: modules are cached.  You could delete the local reference but the module would remain
20:31  lvh: Tyrope: Is that the entire list?
20:31  Tyrope: no
20:31  Tyrope: like i said, hit enter too soon
20:31  mcsquiggedy: Rhamphoryncus: Well. That sort of obviates my initial question. But thanks.
20:31  papna_: __monty__: Yes.
20:31  mcsquiggedy: kerio: if someone reenters the room, it'll get loaded back from the file.
20:31  Tyrope: lvh: this is: http://paste.pound-python.org/show/1420/
20:31  lvh: Tyrope: Yeah, hence the confusion. Could you psatebin it?
20:31  lvh: Thanks
20:32  __monty__: papna_: Yes, yes. Or just one yes?
20:32  Rhamphoryncus: mcsquiggedy: hopefully you can let the modules be loaded up front and only flush the instance created from them to disk
20:32  lvh: Tyrope: Put the egg in D:\\Python27\\lib\\site-packages
20:32  lvh: That should do it
20:32  mcsquiggedy: Rhamphoryncus: That's plan B, as of a few seconds ago.
20:32  papna_: __monty__: Yes, yes, though I really meant just the first yes at the time.
20:33  Tyrope: lvh: alright, running main.py again.. same error.
20:33 * kerio really wonders why ABCs in collections don't have docstrings for the methods
20:33  __monty__: papna_: Thanks for the reply.
20:33  moreati: Tyrope: and doing a manual import from the interpreter?
20:33  Rhamphoryncus: mcsquiggedy: If you really do need to unload the modules themselves (check your memory usage first!) then you'd have to undermine or work around the normal module importing system
20:33  mcsquiggedy: Rhamphoryncus: That, or find a way to store overridden methods as attributes. Which I suppose could be accomplished in a few ways.
20:34  eut: hello
20:34  Tyrope: moreati: import zope.interface -> ImportError: No module blahblah.
20:34  Rhamphoryncus: mcsquiggedy: yup
20:34  eut: how are lists accessed from c? doing things the ctypes way?
20:34  mcsquiggedy: Rhamphoryncus: I miss closures already.
20:34  moreati: (going dumb(er) or nuts(er)) do .egg imports need setuptools/pip to be present?
20:35  Tyrope: I assume that question was not directed to me, and will ignore it...
20:35  Tyrope: if it wasn't, no idea.
20:35  moreati: Tyrope: thinking out loud, semi directed at you
20:35  Tyrope: ok
20:35  Tyrope: in that case, no idea. :P
20:35  lvh: moreati: I thought they didn't, but empirical evidence appears to suggest otherwise
20:36  lvh: You could just rename the egg to zip and unpack in site packages
20:36  lvh: That's *supposed* to work.
20:36  magicblaze007: I want to host a page in python and let users write comments on my page...any code that already is setup to do this using sqlite3 perhaps?
20:36  Rhamphoryncus: mcsquiggedy: python has closures, but that may not be exactly what you mean
20:36  Tyrope: lvh: sounds like a viable option.. shall i test that?
20:36  kerio: mcsquiggedy: but closures are a poor man's objects!
20:36  moreati: Tyrope: yes
20:36  lvh: Tyrope: You could. I don't actually use windows, I'm not qualified to give you good advice on how to install packages
20:37  mcsquiggedy: Rhamphoryncus: Well, lambda is a little weak, what with the whole expression-only thing.
20:37  Rhamphoryncus: mcsquiggedy: function expressions are irrelevant to closures.  Closures are about nesting functions
20:37  lvh: mcsquiggedy: That's completely unrelated, you could just use a def there and not have that limitation.
20:37  Tyrope: lvh: I don't care about qualifications, i care about results... (moreati: working on it.)
20:37  lvh: Rhamphoryncus: namespaces ;-)
20:37  kerio: there's absolutely nothing that you can do with a lambda that you can't do with a function
20:37  mcsquiggedy: lvh: true
20:37  lvh: kerio: And the other way around!
20:37  Rhamphoryncus: kerio: lambda IS a function
20:38  Rhamphoryncus: Just a specialized form
20:38  Laurenceb_: if i try to readline from a non blocking file, and its at EOF, what do i get?
20:38  Tyrope: BOOM, thanks people.
20:38  lvh: Tyrope: That worked?
20:38  Tyrope: yup
20:38  lvh: Best part about this: no setuptools!
20:38  lvh: Woop woop.
20:38  mcsquiggedy: kerio: except use it as an expression where one can't use a statement
20:38  mcsquiggedy: But that's rarely that relevant.
20:38  kerio: mcsquiggedy: huh?
20:38  kerio: define it outside and use it
20:38  mcsquiggedy: kerio: def is a statement, not an expression; lambda is an expression, not a statement.
20:39  kerio: mcsquiggedy: except that the name of the function *is* a valid expression
20:39  kerio: so you define the function, using the "def" statement, *outside* of where you need the expression
20:39  mcsquiggedy: kerio: Right. After either a def or a lambda, the end result is the same.
20:39  mcsquiggedy: kerio: I know. Like I said, it's rarely relevant.
20:39  Rhamphoryncus: mcsquiggedy: I fail to see how closures are relevant to your problem
20:39  lvh: Laurenceb_: An empty string.
20:40  mcsquiggedy: Rhamphoryncus: I may have spoken too soon. I'm sort of rethinking the whole structure in my head at the moment.
20:40  Rhamphoryncus: mcsquiggedy: ah
20:40  Rhamphoryncus: mcsquiggedy: question, are the functions you're defining totally room-dependant?
20:40  Rhamphoryncus: or are they reused?
20:40  mcsquiggedy: Rhamphoryncus: Sort of a mixture of the two.
20:41  tahnok: does anyone have recommendations for rss libraries?
20:42  mcsquiggedy: Rhamphoryncus: like, a room in a city might have a chance of getting the PC mugged; a specific one might have a piano fall on a player's head
20:42  Rhamphoryncus: mcsquiggedy: it's quite easy to assign a function to an attribute on an object (although you might want a dict directly)
20:42  mcsquiggedy: Rhamphoryncus: Very true.
20:43  glittle: What does the "return" command do?
20:43  lvh: glittle: It's a statement.
20:43  glittle:  as opposed to print?
20:43  lvh: glittle: It returns a particular value (None if not supplied) to the caller.
20:43  lvh: glittle: Perhaps you should read the tutorial, or Think Python.
20:44  mcsquiggedy: Rhamphoryncus: However, I want the room with the piano in it to also carry a chance of a mugging.
20:44  TheSheep: glittle: make sure you read the python tutorial on python.org
20:44  mcsquiggedy: To use the earlier example.
20:44  lvh: glittle: print prints the thing you feed it (usually to stdout) -- it doesn't return anything to the caller.
20:44  Rhamphoryncus: mcsquiggedy: you can compile strings into code objects on the fly, which is the underlying component of loading a module, but it's not a free operation.  It's better to have your functions preloaded, if the memory footprint isn't too large
20:45  glittle: what does this mean, "return to the caller"?
20:45 --- Nisstyre65 is now known as raist
20:45  magicblaze007: anyone has a way to serve and let comments be available on a webpage?
20:45  mcsquiggedy: glittle, if you say print foo(bar),
20:45 --- raist is now known as umad980
20:45  moreati: glittle: you really should read the tutorial.
20:45  Rhamphoryncus: If it is too large then it may be simpler to just eval/exec them on the fly, which is just a compile/run/discard.  Avoids trying to build a cache or whatever
20:45  TheSheep: magicblaze007: like, a blog?
20:46  mcsquiggedy: glittle: it'll call the function foo on the variable bar, and then the 'foo(bar)' will be replaced by the returned value.
20:46  mcsquiggedy: glittle: that value is what will be printed.
20:46  magicblaze007: TheSheep: let users write comments on a page...
20:46  glittle: I understand that
20:46  TheSheep: magicblaze007: use a blog engine of some sort
20:46  glittle: how does that differ from return?
20:46  mcsquiggedy: glittle: the return statement is found in the definition of foo. It terminates the function, and passes a value back to whatever called the function.
20:47  magicblaze007: TheSheep: any good ones in python?
20:47  TheSheep: magicblaze007: no idea
20:47  mcsquiggedy: glittle: the return statement doesn't necessarily print anything. It just looks like it does in the interpreter.
20:47  glittle: If I don't have the statement return in my definition of a function, does it never end?  I thought indentation took care of that.
20:47  kerio: of course it does
20:47  namnatulco: hey guys, can I use conditions on the values of generator expressions saying whether I want to include the result or not (ie. [x for x in range(0,13) if x %2 =0])?
20:47  mcsquiggedy: glittle: the function will end, but it won't pass a value back to whatever claled it.
20:47  mcsquiggedy: *called
20:47  TheSheep: glittle: 'return None' is implied at the end
20:47  kerio: namnatulco: yup
20:48  mcsquiggedy: namnatulco: yes, and that's the exact syntax.
20:48  namnatulco: kerio: is that the syntax, too?
20:48  namnatulco: heh, wow.
20:48  kerio: yeah, but "x % 2 = 0" is a syntax error
20:48 --- Out`Of`Control is now known as Viper
20:48  mcsquiggedy: namnatulco: use == for the test
20:48  namnatulco: yeah, I just noticed, it was just an example anyway
20:48  mcsquiggedy: namnatulco: then you're good.
20:49  glittle: Wait!  I think I understand.  If I have a function that takes an input and gives an output, if I don't "return" the output, the output will only exist in the environment of the function, and not outside of it, is that what you mean?
20:49  mcsquiggedy: glittle: precisely.
20:49  moreati: lvh: from what I can tell it's just setuptools that allows import directly from a .egg, vanilla python and pip don't provide
20:49  namnatulco: magicblaze007: I didn't catch the whole story, but maybe you want to ask in #django
20:49  namnatulco: (assuming you use it)
20:49  glittle: Nice.  So, return allows me to use variable "output" outside of the function, otherwise I'm using some other value that happens to also be called "output"
20:50  mcsquiggedy: glittle: when you call a function foo on a value bar, then the code 'foo(bar)' will be replaced by the returned value.
20:50  mcsquiggedy: glittle: So you could say, for example, 'baz = foo(bar)'
20:50  traceto: Is it possible to do a "star wars" effect with text in python?
20:50  kerio: a what now
20:50  mcsquiggedy: traceto: you mean the scrolling-into-the-distance thing?
20:50  traceto: yep
20:50  mcsquiggedy: There's probably a library somewhere.
20:51  moreati: traceto:  animated, or a static image?
20:51  glittle: mcsquiddedy: If I didn't have a return in defining foo(bar), in the statement baz=foo(bar), baz would equal nothing, right?
20:51  kerio: oh, i thought you were talking about ruining your reputation by making dull and boring movies
20:51  mcsquiggedy: glittle: I'm not sure. You might get a syntax error.
20:51  glittle: or something, but it wouldn't be what you want
20:51  traceto: moreati: static I think...
20:51  moreati: glittle: baz would equal None
20:52  kerio: glittle: if a function doesn't return, it implicitly returns None
20:52  glittle: go it, thanks a lot
20:52  traceto: kerio: hehe ok
20:54  moreati: traceto: you could probably do that with Python Imaging Library or the GIMP's scripting interface. You'd need to do the right stretch/distort maths on whatever text the library had rendered for you
20:54  glittle: If I can't store elements one by one in an iterative function into a tuple, how do I make a tuple iteratively?
20:55  mcsquiggedy: glittle: tuple += (element, )
20:55  magicblaze007: namnatulco: I dont want to use django...just want an easy way to host a webpage and let people write comments on that page...
20:55  traceto: moreati: okey, will check it out :)
20:55  glittle: does that append to the end of the tuple?
20:55  mcsquiggedy: glittle: the addition operator, essentially, is overloaded to work with tuples.
20:55  glittle: and add another element
20:55  magicblaze007: something very simple, perhaps using sqlite+html+forms+python
20:55  glittle: cool, thanks
20:55  mcsquiggedy: glittle: precisely. You could add any tuple, though, including () or a single-element tuple.
20:55  papna_: glittle: Using += on tuples doesn't scale well.
20:56  mcsquiggedy: glittle: You're probably better off doing list(mytuple), then messing around with it.
20:57  moreati: magicblaze007: are you doing it because you want to learn how, or do you just want the result in the simplest way? If the latter I'd suggest wordpress, and risk offending the channel
20:58  magicblaze007: moreati: why wordpress? I need to be able to write those html pages using python...and read the results from python..is that something thats easy to do using wordpress?
20:59  papna_: magicblaze007: If you aren't writing something custom, why not use normal blog/CMS software/
20:59  namnatulco: magicblaze007: maybe this is a stupid question, but why do you want/need to use python?
20:59  moreati: magicblaze007: ah, I didn't see that bit of your requirement, just 'host web page, let people write comments'
21:00  magicblaze007: papna_: I want something simple...? is there any that can do this using one python program? (preferably using 50 lines or less)
21:00  namnatulco: i'd say django is definitely the easiest way in terms of coding
21:00  glittle: wait, hold on, just read what you guys said, what does, "Using += on tuples doesn't scale well." mean?
21:00  magicblaze007: all i need is to serve an html page with a form...if someone writes a comment, it needs to be added to the database + the html template.
21:01  magicblaze007: namnatulco: its not...I would like to do this using python, because thats what i understand to some extent...I dont want a 1000-100000 line piece of code that i dont understand...
21:01  moreati: magicblaze007: you just described any of a thousend CMS/blogs
21:01  magicblaze007: moreati: any that were written in python in less than 100 lines?
21:01 --- simonrvn_ is now known as simonrvn
21:01  namnatulco: magicblaze007: I'm pretty sure you can do this in django in about.. 25 lines?
21:01  __monty__: Can I use py2exe from a mac?
21:02  moreati: magicblaze007: god knows, I don't care if I'm the user
21:02  namnatulco: of course, you have a point that django is also code
21:02  magicblaze007: namnatulco: apart from making django work on the system and ....
21:02  magicblaze007: I think this can be done using the standard library in 100 lines of code...
21:03  disappearedng: Hey if I want to make this in the url, aka open this with urllib, how should I pass in this argument? http://api.facebook.com/method/api.query?query=SELECT name FROM user WHERE uid = me()
21:03  glittle: mcsquiggedy: wait, hold on, just read what you guys said, what does, "Using += on tuples doesn't scale well." mean?
21:04  moreati: glittle: because tuples are immutable a_tuple += (something,) actually destroys and rebuilds the entire tuple
21:04  ixiay: can i package a program written in unix using curses and have it open on a win32 os?
21:04  kerio: ixiay: short answer - no
21:05  glittle: moreati: not true, just did it in python shell, works fine
21:05  ixiay: curses!
21:05  moreati: glittle: a_list += [something,] modifies the object in place
21:05  papna_: moreati: (That's also an awful awful awful way to write a_list.append(something))
21:05  kimelto: hello! any easy_install guru? especially when the targetted site-packages dir is not at the default place
21:05  mcsquiggedy: glittle: it's not that it won't happen. It's just annoyingly expensive.
21:05  glittle: Oh, I see
21:05  papna_: glittle: Building a tuple using += is quadratic.
21:05  papna_: glittle: It takes n**2 time instead of n time for n items.
21:06  glittle: I haven't learned about writing efficiently yet—just writing simple code
21:06  __monty__: Does py2exe run on a mac?
21:07 --- RichGuk_ is now known as RichGuk
21:07  papna_: glittle: Well, more to the point, the expense of this operation is because it's not something that happens much in quality code.
21:07  moreati: __monty__: according to google no. Try asking the big G about py2app
21:08  __monty__: moreati: I don't want an app, I want to distribute a wxpython application as an exe but I'm on a mac.
21:08  SeanInSeattle: Hey all.  I'm trying to create a class with static methods.  Do I need to inherit from "object"?
21:08  kimelto: I am trying hard to delete the site.py(o|c) via easy_install. I managed to remove the easy_install.pth by setting the PYTHONPATH env var when calling easy_install.
21:09  kimelto: but I dont know what to do for these files.
21:09  lfaraone: Is there a way to get setup.py's "scripts" stanza to install in /usr/games instead of /usr/bin?
21:09  Rhamphoryncus: glittle: you don't want to worry about petty optimizations, but scalability is not petty.  Doing it wrong is simply Wrong.  It just makes you think it's right because if you're guaranteed to have a very small size it's okay
21:10  moreati: __monty__: then pass, why not try it and see what happens
21:10  kerio: it's less "scalability" and more "order of infinities"
21:10  Rhamphoryncus: kerio: you explain big-O notation, I don't feel like it
21:11  kerio: n good, n**2 baaaad
21:11  Rhamphoryncus: O(1) better
21:12  kerio: Rhamphoryncus: O(1) inexistent for any vaguely complex purpose
21:12  kerio: and of course chuck norris' programs all run in O(1/n)
21:13  ixiay: is there a console framework for windows available?
21:13  kerio: see, that was so stupid that lvh retroactively dropped his connection :D
21:13  Rhamphoryncus: kerio: congratulations, you hurt my head
21:14  lanjelot: hey i have a list, and i would like to extract only elements 4,5, 7 and 10
21:14  lanjelot: isn't there an elegant way
21:14  lanjelot: such as mylist[4,5,7,10]
21:14  kerio: lanjelot: [v for i, v in enumerate(mylist) if i in {4, 5, 7, 10}]
21:14  kerio: but... no
21:14  tos9: lanjelot: [mylist[i] for i in (4, 5, 7, 10)]
21:14  glittle: Rhamphoryncus: I've been assigned to write it so that it puts it into tuples, though
21:14  kerio: dammit, tos9 wins
21:15  lanjelot: ok not bad :) thx
21:15  tos9: kerio: you almost had me do a double take there
21:15  Rhamphoryncus: glittle: create a list, convert to a tuple when you're done
21:15  kerio: Rhamphoryncus: don't
21:15  kerio: tuple(mylist[i] for i in (4, 5, 7, 10))
21:15  papna_: lanjelot: Incidentally, numpy arrays support this operation more directly.
21:15  papna_: kerio: Are you confusing lanjelot and glittle?
21:16  kerio: i am
21:16  kerio: but still
21:16  kerio: no need to create a list and then turn it into a tuple
21:16  tos9: lanjelot: (you also might not need to do that at all depending on what you're doing)
21:16  seemant: smw: still about?
21:16  tos9: kerio: where's the tuple, the list comp is a list
21:16  kerio: that's not a list comp
21:17  kerio: that's a genexpr
21:17  tos9: kerio: yours is. Mine isn't.
21:17  glittle: I need to turn it into a tuple because my teacher told me to input a tuple and output a tuple
21:17  Torn_: hey guys :)
21:17  smw: seemant, yep
21:18  Torn_: is this also the channel for asking question about TKinter?
21:18  Torn_: or is there a channel for that?
21:18  tos9: Torn_: you can try. A lot of us don't have the warmest feelings for tk though.
21:18  __monty__: Is there a way to distribute a wxpython program to windows users with something like an exe, from a mac?
21:18  seemant: smw: so I've done some reverse engineering on that web form
21:18  bahamas: Torn_: yes, but the answer will be that you shouldn't use tkinter, but pygtk or pyqt or pyside or wxpython
21:18  Torn_: tos9: ah, I am mostly using it because it is quite simple as I am newbie
21:18  kelonye: need a scrappy script that queries 'http://library.jkuat.ac.ke/cgi-bin/koha/opac-search.pl'
21:19  seemant: smw: I feel as though I'm almost there (having to set two of readonly/hidden fields as well as the regular form elements)
21:19  Torn_: I just thought in my learning process I could use Tkinter
21:19  lanjelot: kerio: yes tuple() is also working for me
21:19  tos9: Torn_: eh, except it isn't really. Use GTK it'll make you happier, even if you don't know it.
21:19  bahamas: kelonye: and you want to hire someone?
21:19  Torn_: tos9: simple syntrax?
21:19  seemant: smw: but the visual browser experience causes a javascript (?)  box to pop up, asking for confirmation on submit -- I can't seem to do anything with that
21:19  Torn_: idiot proff :P
21:20  seemant: smw: (been unable to get the url)
21:20  tos9: Torn_: You'll manage :).
21:20  seemant: (if there is one) :(
21:20  kelonye: bahamas:nope,but trying to add a library feature to my app,
21:20  tos9: Torn_: plus you get to use Glade if you'd like.
21:20  Torn_: glade?
21:20  kelonye: bahamas:a gae app,
21:20  bahamas: kelonye: what's your question then? or did you ask it earlier and i missed it?
21:20 --- Viper is now known as Out`Of`Control
21:20  tos9: Torn_: yeah, it's a UID http://glade.gnome.org/
21:21  smw: seemant, I don't know what to tell you. At some point it needs to send out something that the server accepts.
21:21  bahamas: kelonye: you can't use scrapy on gae
21:21  Torn_: sorry for being stupid, tos9, but UID? ;)
21:21  bahamas: kelonye: because you can't use twisted
21:21 --- bustedup277 is now known as snooze277
21:21  Psycho_Mario: does anybody have any resources for python bluetooth HID programming?
21:21 --- simonrvn_ is now known as simonrvn
21:21  smw: seemant, chrome catches all requests.
21:21  snooze277: brb
21:21  tos9: Torn_: eh no sorry. I was debating typing it out. A user interface designer. Basically you can mostly graphically layout your GUI.
21:22  Torn_: oh
21:22  tos9: (And have it generate a lot of the code for you)
21:22  Torn_: tos9: kinda like delphi, VB?
21:22  smw: seemant, a js "are you sure" should not affect anything
21:22  Torn_: what about typing the actually code in
21:22  Torn_: for some time ago I was trying to learn pyQT
21:22  tos9: Haven't used either of those, but from what little I know about VB, yeah sure probably.
21:22  Torn_: but it was simply too much of a bite for me
21:22  tos9: Well it'll generate some code for you which you're free to edit as you'd like.
21:23  kelonye: bahamas: urllib 'fails',
21:23  Torn_: tos9: I just thought it was stupid getting advance before I know my way around python
21:23  bahamas: kelonye: what's the error? it's possible that you can't use urllib on gae. i don't remember
21:23  Torn_: I have been toying around pygame too
21:23  smw: bahamas, urllib does not work on GAE
21:24  smw: bahamas, kelonye, python can't open sockets on GAE
21:24  tos9: Torn_: don't worry about that. Just use the best tools around, the learning process comes from practicing with the things you'll ultimately use, not the things that are most within reach.
21:24  kelonye: bahamas:well, u can +  urlfetch.fetch()
21:24  magicblaze007: anyone has any pycon 2011 coupons here?
21:24  smw: seemant, still having problems?
21:24  Torn_: tos9: well, my problem with tkinter was that I couldn't figure how to take stuff I type in directly from the entry field
21:24  bahamas: smw: i remembered something but i wasn't sure
21:24  smw: where is pycon?
21:25  Torn_: tos9: instead of having to press a button to have it processing
21:25  bob2: smw: atlanta
21:25  Torn_: I am making a converter program basicly
21:25  Torn_: eg: celsius to fahrenheit, etc...
21:25 --- simonrvn_ is now known as simonrvn
21:25  tos9: Torn_: yeah, I'm sure there's some event hook somewhere that you can use that gets called when your field changes, but I haven't used Tkinter in a nice while. Perhaps someone else knows.
21:26  smw: bob2, yep, there is no way I am getting out there :-(
21:26  Torn_: tos9: you know gtk then :P
21:26  smw: bob2, I can't even afford the ticket :-\
21:26  magicblaze007: smw: where are you at?
21:26  smw: NY
21:26  Torn_: weird, glade seems familiar
21:26  tos9: Torn_: no actually, I don't do GUI programming that often, but when I do I keep the GTK docs open next to me and I get by.
21:26  Torn_: maybe I was testing it out some time ago
21:26  bob2: smw: heh, 30000km return trip for me
21:27  Torn_: tos9: ah okay, :)
21:27  tos9: Hm, I thought I should end that sentence with Dos Equis.
21:27  Torn_: tos9: what do you do then? console programs?
21:27  seemant: smw: chrome has a record of all the urls sent back and forth?
21:27  tos9: Torn_: mostly. That and web interfaces.
21:27  smw: seemant, isn't that why I told you to use chrome?
21:27  kelonye: bahamas,smw,smth like http://paste.pound-python.org/show/1423/
21:28  magicblaze007: smw: NY-Atlanta flights are cheap...why not come?
21:28  tos9: Are they? I was looking at them as well.
21:28  Torn_: tos9: ah okay :) I really try googling stuff before asking
21:28  Torn_: but sometimes it is so much better asking real people about stuff
21:28  tos9: Torn_: Sure. Good. Your well on your way then mate :)
21:29  smw: magicblaze007, not even sure I can afford the ticket, let alone travel and room. I am a high school student :-).
21:29  tos9: Eh I see ~$300 ish flights. That might be doable...
21:29  Torn_: tos9: another question if you want to answer, but tell me if I bug you too much
21:29  smw: seemant, ctrl+shift+c for chrome dev tools and then turn on resource tracking
21:30  smw: seemant, "resources" is a complete list of urls sent. With form data, headers, etc
21:30  magicblaze007: tos9: are you coming?
21:30  magicblaze007: smw: perhaps ask your employer to pay? :)
21:31  tos9: magicblaze007: I'd like to. I haven't specifically made any arrangements, but I guess I'm gonna try to pull it off depending on my schedule, yeah.
21:31  smw: magicblaze007, heh, funny :-P.
21:31  smw: magicblaze007, I guess I will ask... but I don't have high hopes
21:31  Torn_: tos: do you know anything about parsers for python?
21:31  smw: Torn_, what type of parser?
21:32  Luyt: I wrote my own, recently: http://www.michielovertoom.com/python/simple-template-engine/
21:32  Torn_: smw: oh a parser for a scripting language basicly, it is for a old game's port
21:33  Torn_: it is in a c/c++ style basicly
21:33  tos9: As in you want to port an old game?
21:34  Torn_: no, it is a port for an old game that has a scripting language for adding new stuff to the game
21:34  smw: bob2, what is EXTREME PyCon and Invited on http://us.pycon.org/2011/schedule/lists/talks/?
21:34  Torn_: so basicly I want to make an editor instead of writing everything down everytime I want to add something new
21:35  bob2: smw: extreme = attendees are assumed to know python and/or the topic well so the speaker just dives in without covering basics, invited = organisers asked speaker to come
21:36  Torn_: am I illogical?
21:36  Luyt: Torn_: minimizing redious work is never illogical ;-)
21:36  Luyt: tedious*
21:36  smw: bob2, got it
21:36  neataroni: anyone know why easy_install is not getting all the dependencies for scipy? im on windows 7
21:36  Luyt: Hell, I even factor out subroutines when I see only one duplication
21:37  smw: bob2, I am trying to calculate costs to present to my boss. Not going to happen, but I can dream, right? lol
21:37  bob2: smw: worth a shot!
21:37  Torn_: Luyt: yeah I just have problems with getting a good parser
21:37  bob2: somehow failed to get my boss to approve a $10k trip to pycon last year
21:38  smw: bob2, what is the difference between a tutorial and a talk?
21:38  Luyt: Torn_: There exist pyparsing (http://pyparsing.wikispaces.com/) but it has a small learning curve.
21:38  bob2: smw: not sure
21:38  bob2: I've only been to pycon-au
21:39  Torn_: Luyt: actually I think I was using pyparsing
21:39  Torn_: back when I tried to make my program
21:39  Torn_: but I guess I can give it shot again
21:41  bahamas: smw: tutorials are walk-througs while talks usually have a presentational kind of style
21:41  seemant: smw: i wonder if chromium is different from chrome
21:42  smw: seemant, I use chromium
21:43  smw: what does python use for documentation?
21:44  seemant: smw: I think I got it!
21:44  Torn_: but tos9, thanks for your help
21:45  tos9: sure
21:45  smw: seemant, you found what I was talking about?
21:45  tos9: smw: sphinx
21:45  smw: tos9, thanks
21:46  bob2: sphinx for docs.python.org
21:46  bob2: and the libref is not built from docstrings, surprisingly
21:46  smw: bob2, what?
21:47  Luyt: The documentation is not build entirely from the docstrings (that come from the source code)
21:48  smw: ok
21:48  bob2: http://svn.python.org/view/python/trunk/Doc/library/inspect.rst?revision=79500&view=markup e.g.
21:48  smw: bob2, then what is is built fro? why?
21:49  smw: ok
21:49  seemant: smw: yes, but the only resource I seem to be able to track is the page source
21:49  seemant: smw: http://dpaste.org/5XGJ/
21:50  seemant: smw: but I think that intermediate page may have the answer for me
21:50  smw: seemant, take a screenshot of what you are looking at in chrome
21:54  seemant: smw: http://imgur.com/hCt4f
21:55  seemant: smw: that's that intermediate screen
21:55  smw: seemant, a screenshot of the desktop, mostly the developer tools
21:56  smw: seemant, I want to make sure you clicked on the resources tab and have resource tracking setup
21:57  lvh: hi
21:57  Luyt: Hello
21:58  seemant: smw: oh right sorry
21:58  antoine[maison]: hi
21:58  antoine[maison]: are there some people that know pytables well here ? I wonder wheter there is a way to use the ix_ function when addressing CArrays in pytables
21:59  sir_lewk: what is the best way to run the contents of a string in python through a unix filter, and store the results back into the string?
21:59  antoine[maison]: sir_lewk, regular expressions ?
22:00  sir_lewk: no, I mean unix filter like an awk program, or similar
22:00  MostAwesomeDude: sir_lewk: This isn't Perl.
22:00  sir_lewk: I'm aware.
22:00  antoine[maison]: dunno sorry =)
22:00  MostAwesomeDude: sir_lewk: Which program, specifically, were you hoping for?
22:00  Laurenceb_: http://code.activestate.com/recipes/440554/
22:00  Laurenceb_: ^how would i use that?
22:00  sir_lewk: user specified.
22:01  MostAwesomeDude: Go use subprocess.
--- Log closed Sun Jan 09 22:02:02 2011
--- Log opened Sun Jan 09 22:02:26 2011
22:02 --- Users 810 nicks [0 ops, 0 halfops, 0 voices, 810 normal]
22:02  nine_:  /quit
22:02  sir_lewk: MostAwesomeDude: something simpler looking >_>
22:03  MostAwesomeDude: sir_lewk: Write a function that wraps subprocess. :3
22:03  sir_lewk: yeah yeah :P
22:03  picachu: how do I tell mod_python stop compiling my python script?
22:03 --- Channel #python was synced in 90 seconds
22:03  picachu: and just reload the .py i'm chaning
22:04  smw: seemant, that looks nothing like mine. Did you click "Resources" at the top?
22:05  seemant: smw: yes
22:05  smw: seemant, maybe you have a different version
22:06  neataroni: does anyone know why this is happending with easy_install of scipy? http://paste.pound-python.org/show/1424/
22:06  Luyt: picachu: 3 things come to mind: 1) use mod_wsgi not mod_python, 2) compiled python bytecode is stored in .pyc files, maybe the useraccount under which your webserver runs doesn't have adequate access rights so it can't store the compiled python
22:06  smw: seemant, making a screenshot
22:07  smw: seemant, http://i.imgur.com/I1XH6.png
22:07  Luyt: picachu: reloading changed python code in a web framework usually takes some effort from the framework; I doubt mod_python does it.
22:07  smw: seemant, there are also firefox extensions that do this. I just don't know of any or how they work
22:07  picachu: Luyt: i'm trying to get rid of that .pyc , it's loaded before .py
22:07  SpComb: werkzeug's wsgi-dev server does
22:07  SpComb: and it's even worked quite fine so far
22:07  Luyt: SpComb: CherryPy.org does too ;-)
22:08  picachu: how do I disable python compile?
22:08  smw: seemant, I am using chromium 8
22:08  picachu: pyc, pyo
22:08  Luyt: I heard Werkzeug is one of these light python web frameworks. Are the rumours correct?
22:08  seemant: smw: 9.0.597.45
22:08  smw: seemant, ours look different for some reason :-\
22:08  SpComb: Luyt: it's grown some extra features around the edges, but it still isn't really even a framework, just a toolbox
22:09  SpComb: although the tutorial does make you think otherwise
22:09  picachu: is there auto-completion in python console?
22:09  papna_: picachu: -B
22:09  papna_: picachu: I think there might also be an environment variable you can set.
22:09  smw: seemant, network?
22:09  smw: seemant, maybe they renamed it on us in chrome 9
22:10  smw: seemant, timeline looks promising
22:10  smw: seemant, try those
22:10  seemant: smw: trying now
22:10  papna_: picachu: bpython has okay completion.
22:13  seemant: smw: timeline I think is what we've been looking for
22:13  smw: seemant, I think it is network
22:14  smw: seemant, resources seems to be the new name for storage
22:14  smw: seemant, and timeline exists in my version too
22:14  glittle: Why does str.find(bar) return −1 if bar isn't found as opposed to False?
22:14  smw: seemant, but network does not
22:15  browncustard: i have a kind of architecual question ... could someone take a look at what i'm doing here: http://paste.pound-python.org/show/1425/ , and tell me if ReturnValueTunnel(foo) is equivilent to turning foo into a functor like i kind of think it is? also ... and this is completly without context ... is that incredibly ugly?
22:16  smw: glittle, very good question... I guess it is because that is how every other language does it.
22:16  glittle: is there a function that will return False if it doesn't find what I'm looking for in a string?
22:16  glittle: or only −1?
22:16  offbyone: glittle: if 'substring' in 'string without your string':
22:17  glittle: aha
22:17  kielanmatt: excuse me how do I do overloaded functions with CPython (extending python with C modules)
22:17  steakunderscore: Hi, I'm writing a program/script that takes in a text file that is encoded in utf16 from stdin. Is there any way to decode stdin at utf16? I'm using python 2.6, on ubuntu
22:17  kielanmatt: i.e. f(int x) and f(const char* x)
22:17  offbyone: glittle: as to the 'returns -1' it's probably because you can use that as an offset for other searches, that'd be my expectation.
22:18  seemant: smw: ok, let me try that
22:19  bahamas: kielanmatt: Cython
22:19  kielanmatt: bahamas: how does that answer my question?
22:21  smw: seemant, network working?
22:21  smw: seemant, I need to go, sorry
22:21  bahamas: kielanmatt: i misread your question.
22:21  papna_: kielanmatt: C doesn't have overloaded functions.
22:22  seemant: smw: thanks! I think this is working
22:22  kielanmatt: papna_: osrry C++
22:22  papna_: kielanmatt: You mean that you're trying to expose a C++ function with the same API in Python?
22:22  smw: seemant, was it network?
22:22  kielanmatt: papna_: yeh
22:22  seemant: smw: ya -- I foudn the POST document
22:22  smw: ok
22:22  papna_: kielanmatt: Are you duplicating an API as exactly as you can? It's almost always better not to have something like this.
22:22  papna_: kielanmatt: Anyhow, you can manually typecheck and lengthcheck the arguments.
22:23  papna_: kielanmatt: This is a lot less flexible than the normal Python way.
22:23  kielanmatt: papna_: I am just looking for a PyArg_ParseTuple
22:23  kielanmatt: that doesnt complain if it fails with
22:23  smw: seemant, have fun, bye :-)
22:23  kielanmatt: "I"
22:23  seemant: smw: thanks :)
22:23  kielanmatt: and then tries to parse the arg with "u"
22:24  glittle: Is there a way to change a specific character in a string?  so in the word "beer" change character #2 to 'a' to read "bear"?
22:24  papna_: klono: You'd do this manually in your code.
22:24  papna_: kielanmatt: ^^
22:24  papna_: klono: Sorry.
22:25  kielanmatt: papna_: how do I do it, I tried the simple way
22:25  glittle: papna_: are you talking to me?
22:25  kielanmatt: if (!PyArg_ParseTuple(args,"I")
22:25  papna_: kielanmatt: It doesn't really make sense to have something automagically happen, since the following C code has to know the type.
22:25  kielanmatt: fallthrough to try if (!PyArg_ParseTuple(args,"u")
22:26  kielanmatt: I have two values to write into (uint idx; Py_UNICODE* name;)
22:26  papna_: kielanmatt: You need to give them to PyArg_ParseTuple.
22:27  papna_: kielanmatt: And do some work on the Py_UNICODE.
22:27  kielanmatt: ouch, isnt there a PyArg_ParseTuple which doesnt complain if it fails?
22:28  papna_: kielanmatt: What do you mean "complain"?
22:28  kielanmatt: stop the python script
22:30  papna_: kielanmatt: "Stop the Python script"?
22:30  papna_: You mean "raise TypeError"?\
22:31  kielanmatt: yh
22:31  picachu: mod_pthon is such a crap
22:31  papna_: kielanmatt: Not that I know of. The TypeError isn't a big deal to squash.
22:31  picachu: i've specified don't compile optoin, it stopped reloading script on change
--- Log opened Sun Jan 09 22:34:11 2011
22:34 --- Users 813 nicks [0 ops, 0 halfops, 0 voices, 813 normal]
22:34  papna_: picachu: That's a different kind of reloading than I thought you meant.
22:34  papna_: picachu: Why are you using mod_python?
22:34  picachu: I just want to debug damn script, it's the basic function of any softrware developing process
22:34  mtx_init: heyjoe: try except
22:34  picachu: why is it so crappy
22:34  papna_: heyjoe: Warnings are for ignoring.
22:34  picachu: i thought python is used in enterprise not in 7 class scholar project
22:34  papna_: heyjoe: If they mattered, they wouldn't be warnings.
22:35  picachu: i have to use mod_python because cobbler is using it
22:35  picachu: and I have to learn damn language becaue cobbler forces me
22:35 --- Channel #python was synced in 90 seconds
22:35  papna_: heyjoe: You can use the warnings module to upgrade them to exceptions.
22:36  heyjoe: papna_: the warning is "divide by zero encountered in double_scalars" i'm trying to figure out if that's being caused by a mistake in my code. should i ignore it or try figure out why its' happening?
22:36  picachu: okay, thanks anyways
22:37  papna_: heyjoe: Oh, in that case use numpy.seterr if you want to upgrade that to exceptions.
22:37  heyjoe: papna_: is it likely that that is something internal i don't need to worry about?
22:37  heyjoe: papna_: the warning i mean.
22:38  papna_: heyjoe: That's not the case in general.
22:38  papna_: heyjoe: Somewhere something's dividing by 0. It's letting you know it put Inf in some array.
22:38  papna_: heyjoe: That may or may not be a problem.
22:38  glittle: Is there a way to change a specific character in a string?  so in the word "beer" change character 2 to 'a' to read "bear"?
22:39  papna_: glittle: s[:2] + "a" + s[3:]
22:39  heyjoe: papna_: so in other words i could use a conditional to test for Inf instead of upgrading warning to exception. would x == Inf be valid if x was the numpy.array in question
22:40  heyjoe: papna_: sorry, that was a question. append "?"
22:40  papna_: heyjoe: Not exactly.
22:41  papna_: heyjoe: But conceptually, sure.
22:41  papna_: heyjoe: But that won't help you *trace*
22:42  browncustard: i believe you can print a stacktrace manually? i vaguely remember that
22:43  kielanmatt: papna_: how would I return my own type? in a function... say, how do I create an instace of it and return from a module method with all the ref counting
22:43  kielanmatt: http://docs.python.org/extending/newtypes.html
22:44  browncustard: traceback.print_stack()?
22:44  papna_: kielanmatt: You'd write a Cython module and use the normal syntax and not worry about manual refcounting.
22:44  papna_: browncustard: In this situation, there is no traceback.
22:44  browncustard: ah
22:45  Torn_: tos9: ugh, glade makes me go nuts :S
22:45  Torn_: it feels way too advanced for me
22:45  Torn_: at least in this stage
22:45  kielanmatt: papna_: I cant exactly PyBuild_arg() can I?
22:45  papna_: kielanmatt: You would, using the "o" specifier.
22:46  papna_: kielanmatt: Why are you using the raw C API?
22:46  kielanmatt: papna_: okay
22:46  heyjoe: apologies, i'm having connection troubles this evening. what would the syntax be to assert that the numpy.array is not Inf
22:46  heyjoe: ?
22:48  papna_: heyjoe: An array can't BE Inf. You are probably interested in whether it has any Inf elements.
22:48  papna_: heyjoe: For that you can do "numpy.inf in a"
22:48  papna_: heyjoe: But using numpy.seterr will let you find WHERE and WHEN this is happening.
22:48  heyjoe: papna_: great thanks. am i correct in saying that that evaluates to boolean?
22:48  papna_: heyjoe: Yes.
22:48  heyjoe: papna_: alright so how would i use numpy.seterr?
22:49  papna_: heyjoe: help(numpy.seterr)
22:50  antoine[maison]: is slice indexing myarray[start:stop]  faster than myarray[range(start,stop)] ?
22:52  antoine[maison]: yeah, ça y est j'ai TOUS les disneys <= 2000 en vo
22:52  antoine[maison]: 47go
22:52  antoine[maison]: erf, wrong chan sorry
22:54  elliott: Is there an event that can be used in Tkinter for "an extra character was added to the Entry"? Like <Key>, but only for keypresses that actually add to the string.
22:55  heyjoe: papna_: excellent, thank you. numpy.seterr worked for me.
22:56  mcsquiggedy: If I import a module, what parts of that code are cached, and which parts can I later get rid of in conventional ways (e.g. with del(foo))?
22:56  bob2: antoine[maison]: are you asking about numpy?
22:56  bob2: mcsquiggedy: all of it, all of it
22:56  bob2: mcsquiggedy: note that altering instances etc is quite hard
22:57  Sub_Zero: Greetings! I've recently been using PyQt for my interfaces. However for an undisclosed reason I want to change. What's a good UI for Python (is it the default TKinter)?
22:57  bob2: no, it is not
22:57  bob2: pyqt, wx and pygtk are all quite popular
22:57  Sub_Zero: I'll have a loot at pyGTK then
22:57  antoine[maison]: bob2 : yeah
22:58  mcsquiggedy: bob2: So, if I have a module that defines a class, can I just "del __dict__[classname]" and make it disappear?
22:58  bob2: mcsquiggedy: ha ha ha
22:58  SeanInSeattle: Hey all.  Does anyone know how to print logging errors to the screen?
22:58  bob2: mcsquiggedy: is this a "I want a reloadable plugin system" question?
22:59  Sub_Zero: Lastly. If the OS was Vista or 7 I'd need to grant everyone permission to a folder. Which by default doesn't allow everyone to faf around in it. How could I do that? chmod?
22:59  mcsquiggedy: bob2: Not sure I'm tracking, really. It's more a question of "I'm making about a bajillion subclasses, and I don't want them all in RAM, all the time."
23:00  antoine[maison]: bob2 : sorry, the "no it is not" answer was to me ?
23:00  mcsquiggedy: bob2: So it'd be lovely if I could delete either classes or functions.
23:00  bob2: antoine[maison]: no
23:00  antoine[maison]: k
23:00  bob2: mcsquiggedy: well, you can just try it, but yes, del does do a thing in thsi case
23:00  bob2: mcsquiggedy: but remember 'del' just deletes a name, not an object
23:00  bob2: mcsquiggedy: so if you have other references, thigns persist forever
23:01  mcsquiggedy: bob2: Assuming no other references exist, the object will be garbage collected?
23:01  bob2: believe so
23:01  bob2: I'd almost certainly suggest not bothering, though
23:02  mcsquiggedy: bob2: Alright. I'm really not sure what the RAM footprint for a class looks like.
23:03  cnfer: who cares about what is left in ram
23:03  cnfer: as long as it's not an issue, don't worry about it
23:03  bob2: measure then cut
23:04  cnfer: yeah
23:04  bob2: possibly you don't need so many subclasses, either
23:04  mcsquiggedy: Go players always cut first.
23:04  mcsquiggedy: </terrible_joke>
23:04  elliott: No Tk-savvy people here then? :)
23:04  mcsquiggedy: Yeah, I've been keeping some headspace open for alternate implementations.
23:06  bob2: elliott: tk's pretty obscure in 2010
23:06  bob2: elliott: but they have a list, and historically questions about it on the main python list seem to get answered
23:06  mcsquiggedy: Mind if I ask why? About tk, that is.
23:06  mcsquiggedy: I don't know as much as I should about different GUI libraries.
23:06  elliott: mcsquiggedy: because it looks awful on X11 without the Tile stuff and just plain weird on OS X :)
23:06  bob2: ugly, doesn't match any platform
23:06  elliott: bob2: it's pretty native on windows
23:07  elliott: it's kinda ghetto, but it is really convenient.
23:07  maher: is there some sort of print """ syntax for printing out big chunks of text?
23:07  cnfer: if you want nice looking UI's
23:08  tos9: maher: just like that?
23:08  cnfer: code it natively for every platform
23:08  elliott: cnfer: there is no native gui toolkit for x11.
23:08  davetoo: Lines of Cow?
23:09  elliott: as such tk, gtk, swing, qt, motif, ... all qualify.
23:09  cnfer: well, on X11 nothing ever looks quite right :P
23:09  Burgundy: Hello! What's the best way to replace a class method with my own function and be as little intrusive as possible (keep all attributes the same if possible) ?
23:09  elliott: cnfer: them's fighting words!
23:09  cnfer: ROAR!
23:09  mcsquiggedy: Burgundy: subclass.
23:09  maher: tos9: i am an idiot - i put the """ on the next line....
23:09  elliott: cnfer: i'm going to destroy you with my network transparency
23:09  cnfer: oh noes!
23:09  cnfer: not network transparency!
23:09  elliott: but it might be a bit sluggish.
23:10  mcsquiggedy: Burgundy: Override only the method you want to replace.
23:10  bob2: Burgundy: do you mean 'instance method'?
23:10  Burgundy: mcsquiggedy: that's what I want to
23:10  mcsquiggedy: Burgundy: Are you looking for subclassing syntax?
23:10  cnfer: elliott: cocoa on OSX, though
23:11  bob2: Burgundy: if so, just replace it on the class
23:11  cnfer: elliott: the rest i don't care about ^^;
23:11  Burgundy: I got a class instance in a running program, and would like to replace one of its methods with my own function and make my function look as much as possible as the original.
23:11  bob2: Burgundy: but what's it for?
23:11  davetoo: heh, this guy Sean Kelly says that PHP is the BASIC of the 21st century
23:11  mcsquiggedy: def func(foo): bar
23:11  davetoo: monkey patch
23:11  mcsquiggedy: and then yourinstance.func = func
23:11  mcsquiggedy: Unless I'm mistaken.
23:11  bob2: you are :)
23:12  mcsquiggedy: Heroic.
23:12  Burgundy: mcsquiggedy: I don't think that fixes everything inside the instance.
23:12  bob2: davetoo: that's optimistic
23:12  bob2: Burgundy: what specifically do you want this for?
23:12  davetoo: hah
23:13  Burgundy: bob2: it's a for logging some things that get executed in an application that embeds python
23:13  tos9: mcsquiggedy: you won't get instance binding that way
23:13  bob2: mcsquiggedy: simplest way is to do it on the class - then it handles passing self in correctly
23:13  Burgundy: i've done t.f1.__func__.func_code=f1_replacer.func_code , but I don't think that fixes all the needed attributes, does it?
23:13  bob2: mcsquiggedy: doing it on an existing instance gets a bit fiddlier
23:13  bob2: zomg
23:14  tos9: Burgundy: Oy.
23:14  bob2: Burgundy: you really can't alter the class?
23:14  smw: anyone know when they decide what day pycon tutorials are?
23:14  Burgundy: bob2: I probably could, but I would have to start on a whole new path to do that.
23:15  Burgundy: It's not a really important issue, was just wondering if there's an easy way to do so.
23:15  papna_: smw: They already did.
23:15  smw: pycon tutorials are spread out over 2 days, is there a list of what day each one is?
23:15  papna_: Oh.
23:15  papna_: What day.
23:15  smw: papna, yeah
23:15  papna_: smw: No idea, but presumably this is easy at this point.
23:15 --- tyrus is now known as kanor
23:16  smw: papna_, I need to know if it is possible for me to go to a tutorial. I can only go if it is on the second tutorial day.
23:16  smw: papna_, may be able to go*
23:18  papna_: smw: I understand your motivation.
23:18  papna_: smw: If you have a specific tutorial or couple of interest, I'd email Jesse.
23:19  smw: ok
23:20  zamba: how can i manipulate .strftime() into giving me the day of week as monday = 1 and sunday = 7?
23:20 --- poseid_ is now known as poseid
23:21  smw: papna_, who would pay to be tortured by  "Learn Python The Hard Way"?!
23:22  davetoo: heh
23:22  davetoo: ok, embarassing question here: 0L is a long integer?  Where is that syntax documented?
23:23  smw: davetoo, it is a long int. Not sure where it is documented...
23:23  papna_: davetoo: Yes, and in the langref, but it's not interesting to know much about it.
23:23  davetoo: I need to file a bug report with a vendor about their python parser
23:23  nosklo: davetoo: oh, they have their own python parser? sounds like a bad idea
23:23  papna_: davetoo: (Well, the syntax is in the langref. Most of the semantics are in the library reference)
23:24  davetoo: yeah, not sure why; it's a UML tool that can reverse-engineer code into UML
23:24  davetoo: that notation breaks it, and also import statements which specify imports from submodules
23:24  papna_: davetoo: Sounds like it sucks.
23:24  davetoo: from Foo.Bar imprort baz also breaks it
23:25  davetoo: overall it's been pretty useful
23:25  davetoo: but of course since it doesn't use an interpreter, it has no idea about runtime path generation from .pth files, etc
23:25  CmndrKeen: question - could you get 8bit game like graphics with libtcod?
23:32  Tyrope: Hello, this might be a really silly question, but in my IRC bot i try to split whether a message is private (channel is the same as bot's nick) or public... but the else statement is never triggered when recieving public posts. http://paste.pound-python.org/show/1426/
23:32  MostAwesomeDude: This is probably a sillier question. How should/can I go about adding new formats to strptime/strftime?
23:35  verte: Tyrope: do you have other logic that gets executed on public message? maybe even a different handler?
23:36  Tyrope: nope, lemme paste the whole def.
23:36  Tyrope: http://paste.pound-python.org/show/1427/
23:36  Tyrope: (using the twisted framework, btw)
23:37  mcsquiggedy: Tyrope: And the conditions under which privmsg is called...?
23:37  verte: *priv*msg
23:37  Tyrope: http://twistedmatrix.com/documents/current/api/twisted.words.protocols.irc.IRCClient.html#privmsg
23:37  Tyrope: yes, privmsg can also be send to a channel
23:38  Tyrope: just like you can /msg #python this message is for all #python chatters
23:38  mcsquiggedy: I'm familiar with the IRC protocol.
23:39  mcsquiggedy: But you're saying that that method is called indiscriminately after an incoming privmsg message?
23:39  Tyrope: well, it handles when the twisted framework gets any PRIVMSG data
23:39  Tyrope: if i use an elif channel == [channel name]: it does trigger
23:39  Tyrope: So i'm wondering why it would ignore an else:
23:39  mcsquiggedy: I can't imagine what would make that distinction. In the meantime, you may as well harness the voodoo.
23:40  Tyrope: voodoo?
23:40  Tyrope: you lost me. :P
23:40  mcsquiggedy: The magic. The miracle. The difference between else and elif.
23:40  smw: papna_, who did you say I should email about pycon dates? what is the address?
23:41  magicblaze007: is anyone here in #disqus room or is using disqus?
23:41  Tyrope: right, so you're saying "just stick with elif"?
23:41  mcsquiggedy: Pretty much. If it works, it works.
23:42  Tyrope: great
23:42  kerio: wait, what?
23:42  kerio: no
23:42  kerio: pastebin your code
23:42  Tyrope: i have
23:42  papna_: smw: Jesse Noller is heading up most of that I think.
23:42  Tyrope: http://paste.pound-python.org/show/1427/
23:42  Tyrope: want the whole file?
23:42  papna_: smw: Can you not find contact info on the website?
23:42  smw: papna_, I will look :-
23:42  smw: :-)
23:43  papna_: http://us.pycon.org/2011/about/help/ sort of suggests pycon-organizers@python.org
23:44  Thorn: hello
23:44  Tyrope: hi Thorn.
23:45  Tyrope: kerio: in case you missed it: http://paste.pound-python.org/show/1427/
23:45  kerio: Tyrope: and... it doesn't work?
23:45  Thorn: I have a daemon written in python and I need to control it from the unix command line. what's the best way to do that?
23:45  Tyrope: it... doesn't.
23:45  nvictor: smw: super mario wars?
23:46  kerio: it makes no sense
23:46  smw: nvictor, what?
23:46  Tyrope: EXACTLY! :)
23:46  kerio: add some prints
23:46  Tyrope: ok
23:46  smw: nvictor, you are the second person to say that to me. I just realized it is the same initials as my name...
23:47  smw: nvictor, Stephen M Weinberg
23:47  nvictor: smw: haha sorry
23:47  nvictor: smw: gamers instinct :)
23:47  kerio: super mario... wars?
23:47  nvictor: orw world
23:47  nvictor: wars is the free open source one
23:47  nvictor: world is nintendo
23:47  kerio: ...yeah, i know
23:48  Tyrope: kerio: one after the "self.logger.log" and one after the "#channel message" one should suffice, right?
23:48  kerio: no, add them everywhere
23:48  kerio: before and after every statement
23:48  Tyrope: alright.
23:48  verte: standard meta-W: algol 58 fighting back
23:49  browncustard: ooooo .... functions lose all state between calls; functions with static variables can save state for ever; and functors can save state between specific sets of calls, those that use the same functor instance
23:49  aristidesfl: http://pastie.org/1443785
23:49  laurus: I have a data structure, a, that looks like this: [{'path': u'2010/11/P000003.JPG', 'description': u'My desc'}, {'path': u'2010/11/P000005.JPG', 'description': u'Hello'}] . My goal is to take a multi-line string with {{img}} placed throughout it and replace those {{img}} with strings representing HTML divs that utilize the data in each dict in a. How can I accomplish this?
23:49  seen_: Thorn: "best" is context-dependent What are you trying to do?
23:49  papna_: browncustard: That's not the language we use in Python.
23:49  aristidesfl: given the following code, what is making it call constantly from time to time? http://pastie.org/1443785
23:50  bob2: laurus: http://paste.pocoo.org/ sample input
23:50  bob2: browncustard: not in python
23:50  laurus: bob2, what input do you mean?
23:50  bob2: laurus: the whatever has {{img}} in it
23:50  laurus: bob2, ah ok
23:51  bob2: aristidesfl: supybot presumably is calling it?
23:51  Thorn: seen_: I have a jabber bot and I need to be able to do bot-send "message" from the command line
23:51  laurus: bob2, it's at http://paste.lisp.org/display/118466
23:51  bob2: laurus: are they always on a line by themselves
23:52  aristidesfl: bob2: yes, but it is calling the rss feed periodically..
23:52  laurus: bob2, they will be, yes.
23:52  bob2: laurus: the string isn't coming from a file?
23:53  laurus: bob2, well it will be coming from a database./
23:53  bob2: laurus: will the list always have enough items for the template?
23:54  laurus: bob2, yes :) It will always line up perfectly.
23:57  aristidesfl: bob2: and I can't understand how it is being called…is it calling itself?
23:58  Tyrope: kerio: http://paste.pound-python.org/show/1428/
23:58  bob2: laurus: http://paste.pocoo.org/show/317926/
23:59  browncustard: papna_, bob2: wandered away from the screen temporarily; yeah, i realize their aren't static variables in python, i was referring to them more in general, but is the description of functors and functions accurate for python terminology?
23:59  bob2: aristidesfl: don't know what you mean, sorry
23:59  papna_: browncustard: Not at all.
23:59  laurus: bob2, hey, thanks a lot! That will work nicely
--- Log closed Mon Jan 10 00:00:08 2011
