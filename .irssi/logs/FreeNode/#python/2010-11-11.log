--- Log opened Thu Nov 11 09:11:20 2010
09:11 --- Users 730 nicks [0 ops, 0 halfops, 0 voices, 730 normal]
09:11 --- Server: [holmes.freenode.net] [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
09:12 --- Channel #python was synced in 89 seconds
09:18  lahwran: how's the windows compatibility of the subprocess module?
09:18  verte: it has lots of windows specific code
09:19  verte: so you would imagine, pretty good.
09:19  verte: there are two different engines you can choose for running windows processes, though.
09:19  lahwran: I'm preparing to use a script written for posix-os python for use for windows, it uses subprocess and specifically .communicate
09:19  verte: I'm not sure what they are
09:19  sqwishy: You know those windows installers for python modules? Is it possible to automate them from the command line?
09:19  lahwran: I'd love to not have to rewrite anything but file paths
09:19  verte: lahwran: I don't see why you'd have a problem
09:20  verte: sqwishy: why use the exe installer?
09:20  sqwishy: verte: Because otherwise I'd have to compile stuff from source and that can be tricky and ugly sometimes?
09:20  lahwran: I was unsure because I had previously believed that the functionality of interprocess piping under windows was functionally impaired
09:21  verte: it's performancely impared
09:22  lahwran: ah.
09:22  lahwran: so I'll tell you what I'm doing
09:23  lahwran: I need to call the file command
09:23  verte: is that available on windows?
09:23  lahwran: it is if you have installed cygwin
09:23  lahwran: in which case, you just need to call the binary
09:24  verte: ok
09:24  verte: python compiled for cygwin is different to windows python
09:24  lahwran: which is fine
09:24  lahwran: I will be using the windows python
09:24  lahwran: I'll call the file binary that was compiled under cygwin
09:25  lahwran: I'd much prefer if there was a file-command-type module for python instead of calling the command
09:26  sqwishy: halp?
09:26  ssbr: sqwishy: it should be possible to build a non-exe bdist, I guess
09:26  lahwran: ahh
09:26  lahwran: python-magic
09:26  lahwran: sexy and awesome
09:27  verte: sqwishy: who only provides exe modules?
09:27  verte: sqwishy: that's pretty unusual
09:27  ssbr: verte: it's either exe or source, usually
09:28  verte: oh right, and you don't want to compile
09:28  verte: what module is it? is it something ugly like numpy?
09:28  sqwishy: It's pywin32
09:28  sqwishy: I'd need visual studio express or something to build it I think
09:28  lahwran: ah wow. python-magic is such a hack on windows that I think I'll stick with calling the cygwin file binary.
09:31  verte: wow, he really does only provide bdist_exe and source download
09:32  sqwishy: verte: As far as I can tell ...
09:34  bob2: lahwran: hmm, looks just like a really boring ctypes wrapper?
09:34  bob2: verte: did the jit really crash?
09:34  lahwran: bob2: I don't know what ctypes is.
09:35  bob2: lahwran: lets you twiddle C libraries from python code
09:35  verte: no, that's been my irssi quit message for yonks
09:38 --- zemanel_ is now known as zemanel
09:39  bob2: ah
09:42  verte: using a jit in active development is dogfooding a bit too hard
09:47  chipster1: hello ladies and guys. i want to learn python and i want to know which i learn first 2.6 or 3.1
09:47  lahwran: chipster1: depends. why are you learning it?
09:47  sqwishy: The installer looks like an archive dumps a bunch of stuff into the site-packages dir and then maybe byte compiles everything :?
09:48  bob2: chipster1: 2 is a safer choice for now - much better library and documentation support
09:48  sqwishy: If that's all there it seems kind of annoying there's a big handicapped GUI confusing everything.
09:48  bob2: what installer?
09:48  lahwran: bob2: not so fast. there is a reason I asked him what he wants to do
09:48  chipster1: thx bob2
09:49  bob2: lahwran: ok!
09:49  lahwran: chipster1: again ... why are you learning python?
09:49  chipster1: lahwran sys admin
09:50  lahwran: chipster1: I'd go with 2 then.
09:50  chipster1: how will be the learning curve between 2 and 3 ?
09:50  lahwran: chipster1: not much. mainly just print -> print()
09:51  chipster1: lahwran ok
09:51  bob2: chipster1: 3 mainly tidies up some things, so no worries picking it up later
09:51  sqwishy: Python 2 had input, python 3's input does what python 2's raw_input did. So python3 is a little less evil.
09:51  lahwran: bob2: other than the print -> print()
09:52  lahwran: I hate dealing with print() in 3
09:52  bob2: lahwran: that is a tidy up, print was a silly thing to have as a statement
09:52  chipster1: thank you very much bob2
09:52  lahwran: no it wasn't
09:52  bob2: boohoo, two more chars per print ;0
09:54  lahwran: they're so hard to type for some reason
09:54  lahwran: I instinctively type it as a statement
09:54  bob2: having to wrap sys.stdout.write is annoying
09:54  bob2: f/win25
09:54  bob2: bah
09:54  Alberth: I use print very little, I tend to first compute the whole output, then do one loop printing everything
09:54  Alberth: (usually by writing to sys.stdout stream)
09:57  chipster1: have a nice day ;) bye all
09:58  klawd: http://paste.enzotools.org/show/1373/
09:58  klawd: anyone know what to do here?
10:00  verte: klawd: json strings are unicode
10:00  bob2: hexdigest
10:00  verte: klawd: what does the consumer expect?
10:00  bob2: digest is a bytestring == not directly putable in json
10:01  klawd: so.. what now?
10:01  verte: what does the consumer expect?
10:02  klawd: ah. .hexdigest.
10:02  klawd: verte: the md5'd string
10:02  ssbr: klawd: md5 returns a bytestring, which can't be encoded in json.
10:03  ssbr: so the consumer can't expect that.
10:03  _habnabit: klawd, the question is which *representation* of md5.
10:03  verte: the ordinal? a representation in some encoding?
10:03  bob2: klawd: right, but the natural form of a hash is a string of bits, which in python is represented as a bytestring with lots of high bits
10:03  klawd: just the string representation
10:03  ssbr: You could say "the hex representation of the md5 output", and that would be different
10:03  bob2: klawd: hexdigest is a hex encoding of that
10:03  ssbr: or maybe you want base64! who knows
10:03  _habnabit: klawd, give us an example.
10:04  klawd: _habnabit: foo -> acbd18db4cc2f85cedef654fccc4a4d8
10:05  Dieterbe: Hey guys, how can i "nest" queries? i tried this http://fpaste.org/iwyB/ but it doesn't work (the outer loop only goes once)
10:05  MostAwesomeDude: Dieterbe: You will need two cursors.
10:06  Dieterbe: okay thanks
10:07 --- vokoda is now known as jconrad
10:08  pen: how do I get the name of the class in the class itself? i'm using it for super
10:08  _habnabit: pen, you can't.
10:08  pen: __class__?
10:08  _habnabit: pen, just write it out.
10:08  _habnabit: pen, if super could use __class__, it would.
10:08  pen: _habnabit: because everytime I copied that line to other subclasses and later found out the bug caused by the wrong name
10:09  _habnabit: pen, the lesson here is "don't copy and paste code".
--- Log closed Thu Nov 11 10:15:57 2010
--- Log opened Thu Nov 11 10:16:22 2010
10:16 --- Users 747 nicks [0 ops, 0 halfops, 0 voices, 747 normal]
10:16  bob2: i dunno why that was unbackportable
10:17  bob2: maybe because it makes super a 'special form' instead of a class
10:17  voidzero: if i have some output spanning more than one line
10:17  voidzero: how do i put each line into a tuple or list?
10:17  _habnabit: bob2, upgrade incentive?
10:17  bob2: you mean it is in a string?
10:17  bob2: _habnabit: heh
10:17  voidzero: bob2, yes
10:17  bob2: voidzero: .splitlines()
10:18  bob2: voidzero: or is it from a file?
10:18  voidzero: lol
10:18  voidzero: no, it's not from a file, this seems to be what i need
10:18  voidzero: thanks :)
10:18  bob2: ok
10:18  bob2: file like objects are iterable, so you don't even need to do that
10:18 --- Channel #python was synced in 141 seconds
10:19  voidzero: yeah with a file you can do readline()
10:19  bob2: no need for that
10:19  bob2: list(fileobject) # time for a beer
10:19  voidzero: ah :)
10:19  bob2: readline should probably be on Jerub's list
10:21  _habnabit: bob2, list?
10:21  bob2: _habnabit: list of obvious signs the code you're reading is buggy
10:21  _habnabit: bob2, ah, yes.
10:22  _habnabit: bob2, though to be fair there are legitimate uses.
10:22  bob2: true
10:23  _habnabit: bob2, most of the obvoius antipatterns don't have real uses, as far as I know.
10:23  _habnabit: Or, that I can think of.
10:25  pen: freenode keeps disconnect
10:26  voidzero: also i am wondering about an efficient way to do 'if "foo" is in bar'
10:26  _habnabit: voidzero, `if 'foo' in bar:`
10:26  _habnabit: pen, did you see what we said?
10:27  voidzero: so if i have bar = abcde, `if 'e' in bar:` works?
10:27  bob2: voidzero: what _habnabit said, and it depends what bar is
10:27  bob2: yes
10:27  voidzero: cool!
10:27  bob2: voidzero: if you're doing lots of containment checks, you might want to make bar a set (which is O(1) for 'in')
10:27  bob2: voidzero: if you don't care about order or dupes, you can often just use a set to begin with
10:27  bob2: (less relevent since bar is a string for you)
10:28  voidzero: that's new to me, where can i read about it?
10:29  pen: _habnabit: yea, only in python 3
10:37  cm9: Hi, I am trying to read a dictionary from a string into a dict object, any ideas? pickle doesn't seem to store dictionaries as plain text and eval doesn't seem to work.
10:37  bob2: how did it get there?
10:37  cm9: I'd like something like this: foo = dict(from_string='{"a": 1, "b": 2}')
10:37  TheSheep: cm9: json
10:38  cm9: Yes - I'm using python 2.5 though
10:38  TheSheep: cm9: simplejson
10:38  bob2: if it's json, grab simplejson
10:38  _habnabit: cm9, is it json, or is it the repr of a python dict?
10:38  TheSheep: cm9: it's just a single file you add to your project
10:38  _habnabit: cm9, they're *very* different.
10:38  cm9: very different?
10:38  _habnabit: Yes. They're only superficially similar.
10:39  cm9: Well - this is a subset of json then, because it's dictionary syntax too.
10:39  TheSheep: cm9: well, make sure that it's written out with json too
10:39  _habnabit: ...
10:39  bob2: saves time if you just tell us what it is
10:39  bob2: instead of everyone having to guess
10:39  _habnabit: cm9, that's what I mean. It only superficially similar to 'dictionary syntax'.
10:39  _habnabit: cm9, is it json or isn't it?
10:39  cm9: It is json, I said yes earlier
10:39  cm9: Give me a chance to answer!
10:39  cm9: :)
10:40  bob2: ah, sorry
10:40  _habnabit: cm9, {"\u0100": true} <- valid json, invalid python.
10:40  bob2: {"<randomcharwith8thbitset>": 3} <- valid python not json
10:41  cm9: Yes - I'm sure there are lots of cases that won't work.
10:41  _habnabit: bob2, {'\b': 3}
10:41  yak^: cm9: ast.literal_eval(your_dict_in_string)
10:41  _habnabit: yak^, no, no, no.
10:41  _habnabit: yak^, it's json. not python.
10:42  yak^: _habnabit: oh, sorry, I only read his first two msgs
10:42  cm9: Okay - simplejson it is, thanks for that.
10:42  hungnv: are someone using multiprocessing backport for python 2.4?
10:42  cm9: thanks though yak^, that's the answer I was after in the first place.
10:42  cm9: I will use simplejson though.
10:42  braoru: hello, is there any API comparable to http://search.cpan.org/~athomason/Log-Syslog-Fast-0.45/lib/Log/Syslog/Fast.pm in python ? (A efficient way create and send Syslog udp/tcp message)
10:42  braoru: ?
10:43  _habnabit: bob2, syslog module, probably.
10:43 * _habnabit kicks irssi.
10:43  _habnabit: braoru, ^
10:43  sig^: are dict.keys() guaranteed to be in some order (of insertion, e.g.)?
10:43  bob2: hungnv: best to just ask ya question
10:43  bob2: sig^: no
10:44  _habnabit: sig^, dicts are unordered.
10:44  TheSheep: ugh, doing gettext inside templates gets a little elaborate
10:44  braoru: _habnabit, the syslog module is just for sending message to the local syslog api :(
10:44  hungnv: bob2, my question is: is it stable on your system?
10:44  bob2: but i believe it is constant between calls if the dict isn't modified
10:44  sig^: oki. I'm wondering about deletion of duplicates and I want to preserve order. I've read http://code.activestate.com/recipes/52560/
10:44  _habnabit: bob2, I wouldn't count on it.
10:44  _habnabit: TheSheep, 'templates' ?
10:44  braoru: _habnabit, the local unix syslog syscall
10:45  TheSheep: _habnabit: jinja2
10:45  sig^: I guess del'ing from a list works
10:45  yak^: sig^: the only guaranteed thing is that calling dict.keys() and keys.items() without intermitent changes to the dict will yield the same order
10:45  yak^: sig^: on cpython at least
10:45  sig^: mm, ok
10:45  _habnabit: braoru, hmm, I thought there was something for remote calls in there. I guess not.
10:45  sig^: is a list internally a linked list or contiguous array, by the way?
10:45  bob2: sig^: whatcha doing?
10:46  _habnabit: sig^, iterate with a list and a set.
10:46  bob2: array
10:46  _habnabit: sig^, put elements you haven't seen in the list, keeping track with the set.
10:46  bob2: i don't think it is guaranteed to be contiguous tho
10:46  braoru: _habnabit, sad :(
10:46  yak^: sig^: array in cpython
10:46  sig^: mm, then it might not be the most effective solution to del things from between; tmplist is faster
10:46  Azra-el: hello ... i have a list of files in the format file_%04d.png which means that it has 4 digits after the underscore (0001,0002...) and i know the first frame (ex 1) and the last frame (200) ummm how should i approach the copying of the files to another location?
10:46  sig^: like, taking only the first ones to a tmplist
10:46  sig^: with a linked list, deleting from middle is fast.
10:46  _habnabit: sig^, avoiding mutation is a good idea anyway.
10:46  _habnabit: sig^, do what I said.
10:47  sig^: thanks!
10:47  bob2: Azra-el: you mean you have blah_0001.png - blah_0200.png ?
10:49  Azra-el: yes but the only thing i know is that there are 4 digits in the name of each file (or 3 ... the format is %0n) and only know that it starts from a number 1 for example and it ends at 200 for example ... but i have to fill the numbers with 0 paddings in order to hit the files
10:49  bob2: is that a yes or a no? :)
10:49  Azra-el: yes .. the files are in that format i guess :)
10:50  bob2: for n in xrange(1, 201): open("blah_%4d.png" % n)
10:50  yak^: Azra-el: your format %04d will pad it with 0 for you
10:51  Azra-el: no u dont understand .. or maybe i didnt do a good job of telling u what i need to do :)
10:51  yak^: Azra-el: iterate over the numbers (using xrange), create the filename using %04d format and use shutil module to copy the files, one by one
10:51  Azra-el: so i can create it with %04d?
10:52  yak^: Azra-el: 'file_%04d.png' % number
10:53  yak^: Azra-el: open the interactive console and play with formatting
10:54 * m0no wonders if its time to migrate from python 2.6 to pytohn 2.7
10:55  Affix: m0no, was there alot of changes 2.6-2.7?
10:57  m0no: Affix: a few things - ordered dict iirc
10:57  yak^: http://docs.python.org/dev/whatsnew/2.7.html
10:58  Affix: ahh nice
11:00  Azra-el: yak^ thanks .. ill try that
11:02  lvh: Hi
11:15  Kaspi: hello
11:16  Kaspi: Apache2 says:
11:16  Kaspi: (13)Permission denied: exec of '/var/www/index.cgi' failed
11:16  Kaspi: Premature end of script headers: index.cgi
11:16  Kaspi: What does it mean?
11:16  TheSheep: Kaspi: try asking on #apache maybe?
11:17  TheSheep: Kaspi: usually it means that the server expected your cgi program to output some headers, but it didn't output any
11:17  TheSheep: Kaspi: maybe try running it from the command line to see why
11:18  Kaspi: It's python inside the index.cgi and it's supposed to output html I guess
11:18  TheSheep: Kaspi: then see what it outputs by running it
11:18  bob2: i'd just doing that withtout providing an intepreter
11:19  bob2: it may be enlightening
11:20  wmader: Hi all. Can I do somthing like: for i in iList, j in jList : print(i); print(j)
11:21  wmader: iList and jList are of the same size
11:21  Alberth: wmader: use zip()
11:21  wmader: thanks
11:21  wmader: Alberth: cool
11:24  Kaspi: TheSheep: looks like encoding of the index.cgi is wrong, it says there's some "Non-ASCII character '\xc3'" (SyntaxError)
11:24  Kaspi: actually "no encoding declared"
11:24  TheSheep: Kaspi: it should also give you an url, no?
11:24  bob2: zip blew my mind in first year haskell
11:25  TheSheep: Kaspi: or a pep number, google that
11:25  Kaspi: TheSheep: yeah, I'm gonna try "http://www.python.org/dev/peps/pep-0263/"
11:25  Kaspi: i mean "# coding=<encoding name>"
11:25  Kaspi: :)
11:26  lvh: try # -*- coding: utf-8 -*-
11:26  lvh: more editors understand it
11:26  TheSheep: more == emacs
11:26  larhat: it's eniugh
11:26  larhat: *enough
11:26  lvh: TheSheep: No, both emacs and vim understand both
11:26  lvh: TheSheep: I'm thinking of scite-based editors and notepad++
11:27  ssbr: agh
11:27  monkeyblack: how can i fixed mixed tabs and spaces in notepad++?
11:27  ssbr: why would someone start a thread that just waits on a subprocess.Popen ?!
11:27  monkeyblack: fix*
11:28  ssbr: monkeyblack: search-and-replace
11:28  Kaspi: hmm still the same error though
11:28  _habnabit: ssbr, people are dumb.
11:28  lvh: ssbr: maybe they want to do stuff and get notified when the process ends
11:29  Kaspi: the script now outputs html but apache says the same
11:29  monkeyblack: search and replace?
11:29  _habnabit: Kaspi, how do you know it outputs html?
11:29  ssbr: Maybe. but threads and Popen don't work together well at all. :(
11:29  TheSheep: Kaspi: it should also output http headers a the beginning, followed by an empty line
11:29  Kaspi: _habnabit: by running it it command line
11:29  ssbr: monkeyblack: I don't know the shortcut in notepad++. Look in the "edit" menu or equivalent.
11:29  _habnabit: Kaspi, okay, how?
11:30  Kaspi: _habnabit: $ python index.cgi
11:30  _habnabit: Kaspi, you have to be able to invoke it as `./index.cgi`
11:31  TheSheep: add a hashbang
11:31  Kaspi: TheSheep: there's "<!--: spam
11:31  Kaspi: Content-Type: text/html" and an empty line
11:31  lvh: ssbr: "threading breaks crap in vague ways, news at 11"?
11:31  bob2: Kaspi: spoiler the perms are wrong
11:31  _habnabit: ... uh? Your first line is an open comment?
11:31  TheSheep: Kaspi: that <!-- thing looks suspicious
11:32  Kaspi: It does, I wonder why's that
11:32  _habnabit: Did you write this code?
11:32  Kaspi: bob2: what permissions should it have?
11:32  Kaspi: _habnabit: nope
11:33  bob2: ones that let apache execute it
11:33  _habnabit: Kaspi, then you should be talking to the person who gave you this code.
11:33  bob2: a+x
11:34  Kaspi: aha!
11:34  Kaspi: setting perms worked
11:34  Kaspi: thanks TheSheep _habnabit & bob2
11:35  toadd: Hi. I m reading the twisted doc but i dont understand why "state machine" is...
11:36  TheSheep: toadd: wikipedia to the rescue!
11:36  toadd: it s really important when you write a network based app?
11:36  lvh: toadd: Maybe. Not really critical.
11:36  TheSheep: toadd: it's important in any stateful programs: network apps, games
11:36  lvh: toadd: It'll undoubtably help for understanding *that* document undoubtably.
11:36  lvh: toadd: Still, a state machine is not a twisted invention: it's a very general CS/EE construct.
11:36  TheSheep: lvh: have you tried "doubtless"? :D
11:37  lvh: TheSheep: indubitably
11:37  bob2: ++
11:37  lvh: TheSheep: also I need an adverb in that phrase, so it'd have to be doubtlessly
11:37  TheSheep: dubitabelitelingly
11:37  toadd: lvh, yeah i ll take a look on wikipedia
11:37  lvh: TheSheep: Um, indubitably is a legit word
11:37  lvh: TheSheep: srsly! http://www.answers.com/topic/indubitably
11:37  TheSheep: lvh: I hear you
11:38  bob2: doubley so when followed by 'good sir'
11:38  bob2: toadd: it's just the idea that your system/protocol has a bunch of different states and each input moves it to another state
11:39  bob2: toadd: e.g. in SMTP the "waitingForHelo" state transitions to the "waitingForReceiveFrom" state once you send a HELO
11:39  lvh: bob2: forsooth!
11:39  TheSheep: like a robot in 'kill' and 'bury' modes
11:39  toadd: bob2, yeah but what "state" mean, i don't understand what s a state in an app
11:39  bob2: TheSheep: that is a far better example
11:40  TheSheep: toadd: mode
11:40  bob2: toadd: that is a deep question!
11:40  toadd: hum... ok i ll read wikipedia about that
11:41  TheSheep: so a robot in 'bury' mode will only accept dead bunnies as input
11:41  TheSheep: whereas it will accepts living bunnies in the 'kill' mode, and swith to the 'bury' mode immediately after that
11:41  nrik: Please, someone help me write short script-fu in The GIMP to create copy of current layer, move it horisontaly and change opacity?
11:41  _habnabit: Not bunnies. :(
11:41 * lvh summons kosh
11:41  TheSheep: _habnabit: ponies?
11:42  bob2: nrik: #gimp on irc.gimp.org might be a better place to ask
11:42  lvh: TheSheep: hoomans
11:42  bob2: missannethrope
11:43  TheSheep: lvh: chikins
11:43  TheSheep: lvh: tastes like chicken
11:43  TheSheep: now I have to make a comic strip explaining state machines
11:49  toadd: another question, what mean "persistent configuration"
11:50  ronny: sup
11:50  TheSheep: configuration that persists
11:50  TheSheep: (between requests, presumably)
11:51  toadd: TheSheep, ok
11:55  lvh: toadd: A good example is mongrel putting everything in sqlite
11:55  lvh: toadd: So when it crashes, you can get everything back!
11:56  TheSheep: including the thing that crashed it, so it can crash again :D
11:56  lvh: (which is pretty much the opposite of gpsd, which says "no config file ever", for different but also valid reasons)
11:56  lvh: TheSheep: YES!
11:57  TheSheep: persistend crashinguration
11:57  toadd: so if i m not wrong, a factory class can be created to keep current configuration
11:57  lvh: toadd: A factory has the shared state for a bunch of protocols, yes
11:58  lvh: toadd: and usually it makes more sense to persist a factory than a bunch of protocol instances
11:58  rsavu: hi all. could you please take a look at this: http://pastebin.com/Azr8dVuz and see what i'm missing when using pycurl?
11:58  infobob: http://paste.habnabit.org/show/23/ (repasted for rsavu)
11:58  lvh: toadd: since the protocol instances are generally fairly tied to an existing connection
11:58  lvh: rsavu: 1) why are you using pycurl at all 2) what doesn't work about it
11:59  toadd: lvh, ok so all instance protocols can change current persistent configuration, i think i m starting to understand...
12:00  rsavu: ivh, i'm using pycurl to post something to a webservice. 2) the command form of curl works (the service responds). with my pycurl script it says that the xml received is not well-formatted
12:00  lvh: rsavu: my nick is "LVH".lower() not "IVH".title()
12:00  lvh: toadd: they *can*, but only because they invariably have a reference to the factory
12:00  lvh: toadd: typically factory.buildProtocol makes sure the protocol has a factory instanceattr
12:01  rsavu: sorry lvh
12:02  lvh: rsavu: I understand you are posting something to a webservice, I don't understand why you'd use *pycurl*
12:02  lvh: rsavu: It has a pretty nasty API, urllib(2) can probably do most of what you want, otherwise twisted.web.client
12:02 * lvh & lunch
12:02  rsavu: because i thought it was the simplest way to send blind xml to a webservice
12:02  lvh: rsavu: FWIW we get a lot of vague [py]curl problems here
12:02  lvh: rsavu: it isn't
12:03  lvh: rsavu: try urllib first, then twc if it doesn't do what you want
12:03  rsavu: ok
12:03  rsavu: 10x
12:08  Arkns: hi all... I have a hexdigest (from a sha) code. How can I see the original string?
12:08  filip: Arkns: the one that got hashed?
12:09  filip: hi, is there a way I could do an equivalent of PyImport_ImportModule, but giving it a filename, not a module name? Or do I have to alter PYTHONPATH first?
12:09  VladDrac: yourhexdigest.decode('hex') will probably give the raw binary digest
12:09  VladDrac: you can't (of course) get the original digested data back
12:10  bob2: filip: believe it has the same rules as 'import'
12:10  filip: bob2: so, I can't?
12:10  filip: bob2: like: PyImport_ImportFile('/usr/share/some/file.py')?
12:11  bob2: I don't know
12:11  Arkns: filip: something like that: http://pastebin.com/fT53PGG6
12:11  infobob: http://paste.habnabit.org/show/24/ (repasted for Arkns)
12:11  filip: Arkns: the whole point of hashing is that you can't do it
12:11  filip: Arkns: unless you get a computer from the future
12:13  Arkns: filip: I understand that. but I really wanna know if it's possible
12:13  Arkns: filip: to do reverse
12:13  Arkns: filip: or, a link or tutorial who could teach something like that...
12:14  Arkns: filip: hmmm sorry, I get it now... it's a dumb question...
12:15  VladDrac: Arkns, you could, by brute force, compute any number of strings that results in the same hash
12:15  Arkns: filip: but how could I generate a encripty password, save in a file and get this password from this encripty code to pass directly to an application? or solutions could be do that...
12:15  VladDrac: Arkns, when hashing passwords, you will hash the password a user enters and match it against the stored hash
12:30  neataroni: anyone know why im not able to access the rowid of my sqlite rows using sqlalchemy?
12:32  amitz: nice... programmer can make gold now...
12:32  lvh: neataroni: rowid is a sqlite-specific construct
12:32  lvh: neataroni: sqlalchemy tries to asbtract it away
12:32  toadd: Ok. So i m always reading the TCP server part of twisted doc and i don't understand the factory part. http://pastebin.mozilla.org/847505 What the purpose of makeQOTDFactory function?
12:32  bob2: that souns a bit low level
12:32  lvh: neataroni: if you want it, execute SQL
12:32  neataroni: lvh: alright
12:32  lvh: neataroni: Although in all honesty I doubt you actually need it
12:33  bob2: toadd: a factory is a thing that returns a protocol
12:33  bob2: toadd: so you call the factory on every connection e.g.
12:33  bob2: toadd: so it can do 'global' things like keep track of clients
12:33  lvh: toadd: Have you considered reading the krondoblog posts
12:33  lvh: toadd: If you're new to netwokring concepts, they start explaining without assuming prior knowledge
12:34  lvh: toadd: They're more verbose, but they answer questions like these in detail
12:34  toadd: bob2, i know what s the factory purpose but i don't understand how to use em
12:34  lvh: toadd: (Specifically, they first do the complicated annoying thing, and then they introudce factories, explaining why you want one)
12:34  lvh: toadd: you don't use them in that example yet
12:34  lvh: toadd: Typcailly you don't use them at all and instead pass them to reactor.listen*/reactor.connect*
12:34 --- vin is now known as retard
12:35 --- retard is now known as mongol
12:36  toadd: lvh, thanks. I ll take a look at that
12:38  ledil: has anyone experiences with eventlet ?
12:39  ledil: to my main problem: I need to do an asynchronous HTTP HEAD request (it should be non-blocking) Im not interesting in the result ... how to do that ?
12:40 --- Affix is now known as Affix-AFK
12:41  neataroni: how can i deal with entering %'s in fields in sqlite?
12:41  ssbr: neataroni: what's the problem?
12:42  neataroni: ssbr: here is the error: http://bpaste.net/show/10876/
12:42  neataroni: the % is in the variable replacement
12:42  lvh: neataroni: http://bobby-tables.com/
12:43  lvh: neataroni: Never write SQL code like that
12:43  neataroni: lvh: loving the comic
12:44  ivan`: I have a file on windows with a λ in it, but os.listdir returns a filename with '?' instead of 'λ'
12:45  ivan`: this doesn't happen for characters like double brackets
12:45  Juhaz: ivan`, use os.listdir(u'path')
12:45  ivan`: Juhaz: thanks a lot
12:46  neataroni: ok so your going to love this...the problem is i have %'s in my column names
12:46  lvh: neataroni: Sure, that's a prefectly valid SQL identifier.
12:47 --- zemanel_ is now known as zemanel
12:47  lvh: neataroni: It's a dumb idea, for obvious reasons, but it'll work if you escape it. Or, you know, if you're creating the statement dynamically: *don't* escape, just use a prepared statement.
12:47  neataroni: lvh: interesting
12:50  neataroni: lvh: how do i escape the column names? is there a method?
12:51  lvh: neataroni: Did you mis the part where I said "*don't* escape"
12:51  neataroni: I thought it was an 'Or'
12:52  lvh: neataroni: Okay, but don't ignore the conditional part of the sentence
12:52  neataroni: noted
12:52  neataroni: thanks for the adbice
12:52  neataroni: advice*
12:53  lvh: basically you're already sort-of doing it okay
12:53  lvh: d.execute('UPDATE '+table+' SET '+rowkeys[i]+' = ? WHERE rowid = ?',(replacement,r))
12:53  lvh: Except for the + str +  parts in the middle.
12:53  lvh: Don't do that and you should be okay.
12:53  lvh: (I forget if that's actually supported in the sqlite module -- it should)
12:54  Juhaz: pretty sure table name is not supported, probably because it's crazy. I guess rowkeys part should be okay
12:55  ssbr: table names are trivial to sanitize, though
12:55  lvh: Juhaz: Why? It's just a SQL identifier
12:55  lvh: Juhaz: Like ssbr said: trivial to sanitize
12:56 --- Affix-AFK is now known as Affix
12:56  Jonny0stars: Hello, very simple question because i'm a bit of a newbie. How can i pass a function return as paramerter to another function, so for example function2(function1(simplevar))
12:57  Jonny0stars: I can post a code example if needed
12:58  VladDrac: yes you can. it's also trivial to try/find out
12:58  lvh: Jonny0stars: Exactly like that.
12:59  Jonny0stars: lvh: Oh, must be an error on another line then. Thanks :-)
12:59  Juhaz: lvh, dunno. It may be trivial to sanitize, but sqlite3 doesn't do it, and neither does almost any other db api layer
13:00  VladDrac: Jonny0stars, perhaps your indenting is wrong, or you forgot to close a ( on a previous line
13:02  lvh: Juhaz: Are you sure? I haven't done it recently, but I could've sworn psycopg2 did.
13:03  lvh: Juhaz: (oursql doesn't but only because mysql is bad.)
13:06  Juhaz: sqlite3.OperationalError: near "?": syntax error
13:06  TheHaven: Hi Folks, is there any CPAN like interface for Pypi in use amongst linux distributions ?
13:06  Juhaz: and looks like I was wrong about the rowkeys part too, it doesn't work either
13:07  bob2: TheHaven: be more specific about which thing you're after
13:07  bob2: pip is the thing to install things with
13:07  TheHaven: I'm after a way of installing modules from pypi via the command line in a cpan like fashion as I would for perl modules
13:07  bob2: pip
13:07  TheHaven: ok thanks
13:13  TheHaven: having some issues installing cobbler using pip - it shows up as a package using Search but installation fails with "  Could not find any downloads that satisfy the requirement Cobbler
13:13  TheHaven: " - does this mean cobbler is distribution specific ?
13:16  LordError: hi. im currently trying to use a python module, called netinfo. it uses imp.load_dynamic to get functions from a compiled .so. There seems to be an error with it. If I call a function severeal times, it throws an exception ('Too many open files'). I suspect the file discriptor used in imp.load_dynamic is not closed properly. I want to fix the module, can anyone point me to any documentation/examples on how to use imp properly.
13:21  Yhg1s: LordError: a saner fix would be to just *import* the .so. The problem is that the .so *stays loaded*, so another call to imp.load_dynamic loads the same file again
13:21  Yhg1s: LordError: the normal import mechanism solves that by caching imports (in sys.modules.) It's much saner.
13:22  Yhg1s: LordError: but if you really want to know about the imp module docs, well, docs.python.org/library is where it's at.
13:24  Alberth: TheHaven: linuces typically use the system package manager for the common python packages
13:24  TheHaven: yeah I've taken a look cobbler is only built for rpm unfortunately
13:25  TheHaven: looks like I'll have to roll my own from source
13:26  LordError: Yhg1s: thanks, i havent got much experience with using importing .so's. its a third party module, the code used in the module to import the .so is here: http://bpaste.net/show/10877/
13:27  Yhg1s: oh, yay, setuptools insanity.
13:28  LordError: Yhg1s: oh.. what do you mean?
13:28  Yhg1s: LordError: I mean this code is batshit-insane. What file is it in? What else does it contain?
13:28  Yhg1s: is this code in a function, or at the module level, or the whole of a module?
13:29  LordError: Yhg1s: the whole module.
13:30  Yhg1s: LordError: this module is a little bootstrap module to extract a .so file from an egg (in case it's a zipfile) and then import that .so file.
13:30  Yhg1s: LordError: it is only executed once, so it's not the cause of any lingering open files.
13:30  Yhg1s: However, a fix for this crap would be to not use setuptools and not install as an egg.
13:30  Yhg1s: that may or may not fix your issue, depending on what the cause actually is.
13:33  LordError: Yhg1s: it only contains the netinfo.py with this code and a so file. when i call the function on it repeatedly, it throws an exception. i can count them but i guess that makes no difference. why would not using it as an egg help?
13:35  Yhg1s: LordError: I said it *might* help. Eggs are part of setuptools. They're really retarded things. They mess up lots of stuff.
13:36  LordError: Yhg1s: ok. could it be the case that the module .so is badly written and has unclosed file descriptors in it ?
13:36  Yhg1s: LordError: if you had just the 'netinfo' module *without* the egg insanity, you would just have netinfo.so somewhere in site-packages (or dist-packages, depending on where it was installed.) It would omit a whole bunch of sys.path mangling and importer meta-magic.
13:36  Yhg1s: sure, that's entirely possib.e
13:39  LordError: Yhg1s: sorry about the whole newbie question thing. how would i go about using it as a module without the egg thing? im not that experinced with modules yet.
13:39  Alberth: LordError: if you are on linux, you could verify unclosed files with the 'lsof' command
13:40  LordError: Alberth: indeed. thanks. I didnt think of that.
13:43  LordError: Alberth: python will close open file descriptors when it dies right?
13:44  ssbr: The OS would!
13:44  ssbr: but Python also should.
13:44 --- cna_ is now known as cna
13:44  LordError: thanks
13:45  arkanes: there's some not-too-hard-to-contrive places where python won't
13:45  arkanes: but the OS always will so it's not a problem
13:48  LordError: Yhg1s and Alberth: problem identified. i get a lot of python    30872      lasse   43u     sock                0,6      0t0 32548520 can't identify protocol
13:49  LordError: so i guess it uses a socket to get the ip and does not close it properly
13:49  arkanes: python doesn't open sockets unless you tell it to
13:49  arkanes: and sockets lingering is common on linux and not neccesarily an issue
13:50 --- piken_afk is now known as piken
13:50  LordError: arkanes: the problem is a third party compiled module(netinfo). it would seem that the .so opens a socket to get the ip.
13:51  arkanes: are you on os x?
13:51  LordError: linux
13:51  arkanes: differnet netinfo, then
13:51  arkanes: if it's trying to tell you your public IP, the only way you can do that is by actually opening a connection to an external site
13:52  arkanes: and in that case you have a real socket that needs to really work, and therefore is likely to linger after you close the process, thats normal socket behavior
13:52  LordError: arkanes: no i just want the current ip on a interface.
13:52  arkanes: LordError: it's not a 1-1 mapping
13:54  arkanes: LordError: but anyway, there's nothing *we* can do about it
13:55  LordError: arkanes: i know. do you have any other suggestions for getting the current ip of an interface. parsing ifconfig/ipconfig is unwanted.
13:55  HadiM: hi
13:55  arkanes: theres probably something in /proc
13:55  arkanes: or you can talk to network manager
13:56  HadiM: im doing multi thread processing with Pool.map and everything works fine except my last thread which spend a lot of time compared to other to stop
13:56  HadiM: do you know why ?
13:56  LordError: arkanes: guess i will need to check /proc. i want it to be network manager/wicd agnostic.
13:57  Yhg1s: HadiM: if you use Pool.map, it sounds like you're using processes, not threads.
13:57  HadiM: euh
13:57  HadiM: yeah
13:57  HadiM: your right
13:57  HadiM: what the best ?
13:57  HadiM: process or thread?
13:57  arkanes: LordError: well using the socket is a reasonable way then
13:57  Yhg1s: depends on what you want to do. Threads are rarely the best.
13:57  arkanes: LordError: what is the actual problem with doing that?
13:57  LordError: arkanes: to me, using proc seems like a dirty fix. is there no cleaner way of doing this ?
13:57  HadiM: and do you know why my last process take so long to stop
13:57  HadiM: ?
13:57  Yhg1s: arkanes: he's using netinfo, and it's apparently leaking filedescriptors.
13:58  Yhg1s: HadiM: no idea without knowing what you're actually doing.
13:58  Yhg1s: HadiM: I would say "it's busy".
13:58  arkanes: Yhg1s: from what I've seen, it's just a lingering socket
13:58  arkanes: Yhg1s: that shouldn't be an actual problem
13:58  Yhg1s: arkanes: many ones, apparently.
13:58  arkanes: he only mentioned one :(
13:58  HadiM: Yhg1s: yeah I guess :-)
13:58  arkanes: I guess if the socket is lingering, netinfo is probably not closing it, so it might leak over time
13:58  arkanes: LordError: anyway, the only thing to do is to re-implement or fix netinfo
13:59  Yhg1s: (and make sure that's the actual problem, first.)
13:59  LordError: arkanes: there is a lot of them. i guessed i didnt need to paste them all.
13:59  HadiM: Yhg1s: is it possible that this process was mishandle by the processor beside other?
13:59  arkanes: LordError: that strongly suggests that netinfo is doing something wierd and/or bad
13:59  Yhg1s: HadiM: I don't understand what you are asking. Are you asking "could there be a bug"? Then sure, there could be. It's more likely to be in your code than in multiprocessing's code, though.
14:00  arkanes: LordError: so if this were my problem, I'd start by reading what it does and looking for problems
14:01  HadiM: Yhg1s: no im asking if is it possible than my last process is "unliked" by the processor
14:01  HadiM: so it takes more time to do is work
14:01  Yhg1s: anything's possible.
14:01  LordError: arkanes: indeed. that is my concusion as well. as it seems to open sockets, i guess it would be better to solve it with the same method myself in a python function. thanks for alle the help
14:01  HadiM: ok
14:02  HadiM: Yhg1s: do you have time too look my code ?
14:02  Yhg1s: HadiM: it all depends on what you're actually doing.
14:02  Yhg1s: not me, no. Ask questions of the channel, instead.
14:02  Yhg1s: I don't use multiprocessing myself, anyway.
14:02  HadiM: ok thank you for helping me Yhg1s
14:03  HadiM: my code is here for everyone who know about multi processing http://pastebin.com/J2Chx93x
14:03  infobob: http://paste.habnabit.org/show/25/ (repasted for HadiM)
14:03  HadiM: lol
14:03  HadiM: ok
14:03  HadiM: ...
14:03  arkanes: pdb is a surprisingly overloaded TLA/file extension
14:04  arkanes: HadiM: are you using arch?
14:05  HadiM: ubuntu
14:05  HadiM: pdb -> protein data bank
14:05  arkanes: yeah
14:05  arkanes: it means a lot of stuff in other contexts, too
14:05  HadiM: oh ok
14:05  arkanes: you might look at the glob module so as to make youre list_pdbs method not be a lie
14:06  HadiM: "not be a lie" ?
14:06  HadiM: I dont understand, sorry
14:06  arkanes: HadiM: you say it returns a list of pbd files
14:06  arkanes: but it doesn't, it returns all the files in the directory
14:06  HadiM: yeap
14:06  HadiM: yeap its same
14:07  HadiM: my directory is clear
14:07  arkanes: well maybe it is and maybe it isn't
14:07  arkanes: if you know its always going to be, you don't need the method - just use os.listdir
14:07  arkanes: if you're doing to document it as doing something specific, it should actually do that thing instead of relying on implicit context
14:08  HadiM: ok
14:08  HadiM: thank you
14:08  nullkuhl: i am looking for a smart IDE for python, that features nice debugging, auto completion, package management, etc.. any ideas ?
14:08  arkanes: I have a bunch of other suggestions about how you can generally improve the code quality and few where you can improve the performance, but nothing jumps out at me as blocking a process
14:09  arkanes: theres a lot of environmental things that can cause problems
14:11  HadiM: ok thank you arkanes
14:11  HadiM: arkanes: if you have time to explain me what kind of improvment I could make, its cool :-)
14:12  arkanes: HadiM: sorry I'm already late for work have to run ;)
14:12  arkanes: HadiM: it's nothing terrible, you're just clearly new to python and not fully taking advantage of a number of features
14:12  HadiM: arkanes: ok ty anyway
14:22 --- zemanel_ is now known as zemanel
14:52 --- ChanServ sets modes [#python +o infobob]
14:52 --- infobob sets modes [#python -b $a:NoobFukaire]
14:57 --- infobob sets modes [#python -o infobob]
15:03  svip: Where is there a guide to handle two monitors with fullscreen in pygame?
15:06  plwert: is it safe to pop items from a dict when iterating over its iteritems, assuming that I have already iterated over whatever entries I pop?
15:09  plwert: my guess is that it's unsafe unless I do it over items() instead of iteritems
15:14  slestak: hey guys.  i am trying to determine is I can use a var in a format specifier?  it is workign with not using the var, but I would liek to store the value in a config
15:15  slestak: the example is '{0:0>6}'.format(len(message))
15:15  slestak: i just want teh length of the string zero padded right justified in a field thats width is a var
15:16  slestak: well, i got something ugly that works
15:17  slestak: ('{0:0>'+str(HEADERSZ)+'}'.format(len(message))
15:17  slestak: oops, forgot right paren
15:18  slestak: nested format calls is what i need to do
15:24  slestak: ooh, zfill is much nicer
15:24  adfdf-lap: hi guys, what's the python equivalent to break; ?
15:25  baionbaion: break
15:25  baionbaion: :)
15:25  adfdf-lap: thanks
15:28  ivazquez|laptop: Makes you wonder why anyone bothers writing documentation...
15:29  baionbaion: we are anyway here to help are we not?
15:29  slestak: ivazquez|laptop does have a point though.
15:29  slestak: my answer was in teh docs.
15:30  slestak: or an alt solution
15:30  baionbaion: well of course he has a point, after all pretty much everything is in the docs
15:30  Yhg1s: unfortunately not.
15:30  slestak: we have a side discussion in my lug channel abt the state of docs
15:31  Yhg1s: only part of the questions we get are questions documentation could answer, anyway.
15:31  slestak: usually its one guy bemoaning the state of man pages and how bad ubuntus docs are
15:31  Yhg1s: frequently questions are about the best way to approach problems.
15:31  slestak: i think that is how SO is so popular
15:32  baionbaion: Yhgis: for basic information such as break and while clauses the docs are fine as far as I am concerned
15:33  slestak: one thing that has gotten me more than once is the syntax changes over time.  reading old docs can be good and bad
15:34  slestak: or reading too new docs, if your interpreter doesnt support that feature yet
15:35  ssbr: reading old docs doesn't hurt very much. There are a few minor backward-incompatible syntax changes, but that's not much to fret over... what are you thinking of? reading 2.x docs in 3.x?
15:36  slestak: no, just when you hit google and you find examples and howtwos written in 07 or 08, they may not be the best soln today
15:36  Yhg1s: and most new features and syntax are marked as 'new in 2.x'
15:36  Yhg1s: oh, so 'random webpages' more than 'the documentation'.
15:36  slestak: +1
15:37  slestak: your correct
15:37  Yhg1s: unfortunately 'random webpages' have many more issues. like the incredible amount of stupid ideas out there :)
15:38  LordError: hi guys. im having problems with getting my current ip in a good way. i want to regulary check my ip, like every 1 or 2 secs. this is for network detection daemon, get current ip, check if there is a match for a profile then do stuff. At this time i've tested using ifconfig and a socket to check the ip, but i always run out of fd or sockets. is there any way/or lib that can get my current ip in a sane way ?
15:39  slestak: LordError: psi maybe
15:40  slestak: not sure if it has nics
15:40  LordError: slestak: whats psi ?
15:41  slestak: sec, im looking to see if it has nic interfaces
15:41  slestak: it doesnt
15:42 --- Aufwind_ is now known as Aufwind
15:42  LordError: slestak: indeed, it seems so. just googled it myself.
15:43  slestak: mike d has some good stuff for win32  http://www.blog.pythonlibrary.org/2010/06/05/python-running-ping-traceroute-and-more/
15:44  JeffJohnson: howdy
15:45  baionbaion: hello
15:45  JeffJohnson: how did I need to configure cherrypy to receive POST requests correctly? atm cherrypy returns on any POST 404, GET works
15:46  imgrey_: good evening #python
15:46  imgrey_: could someone tell how to open file by inode ?
15:46  LordError: slestak: it is for linux.
15:47  Yhg1s: imgrey_: does your platform offer any way to open a file by inode?
15:47  Yhg1s: (most platforms do not.)
15:47  jakllsch: imgrey_: there's always find -inum
15:53  lvh: HI
16:03  awaad: Is there any good IDE for python which supports autocompletion ?
16:05  babilen: awaad: Plenty
16:05  pr3d4t0r: awaad: bpython is very nice.
16:05  pr3d4t0r: awaad: PyDev for Eclipse if you want a full IDE.
16:06  babilen: awaad: I like vim (+omnicomplete) together with bpython, but you might look for something like Boa constructor, Komodo or Wingware's IDE. See http://wiki.python.org/moin/IntegratedDevelopmentEnvironments for a list.
16:06  pr3d4t0r: babilen: Nice.
16:07  pr3d4t0r: babilen: I haven't used omnicomplete in a while.  Did it take a lot of customization for you?
16:07  pr3d4t0r: babilen: Especially when it comes to your own modules.
16:07  awaad: what about eric ?
16:08  babilen: pr3d4t0r: I have "autocmd FileType python set omnifunc=pythoncomplete#Complete" in my vimrc
16:09  Oipo: Hey guys, can anyone help me with finding out why I get the following problem? https://pastee.org/f3w9e
16:09  pr3d4t0r: babilen: OKi - also, it used to be that you needed a full version of Python made available in the Vim build.
16:10  slestak: awaad: you didnt specify what os you use, but for win32, pyscripter is nice
16:10  slestak: http://code.google.com/p/pyscripter/wiki/Features
16:10  pr3d4t0r: Oipo: Is CONNECTION_FAILED a global?
16:10  awaad: I am using Linux
16:10  Oipo: Yeah, it is.
16:11  pr3d4t0r: Oipo: Is it in the same module as the event dispatcher?
16:11  Oipo: Uhm. It's in a different file, so, I guess not?
16:11  pr3d4t0r: Oipo: That might be an issue.
16:11  awaad: pr3d4t0r: I installed bpython and it is very nice
16:12  Oipo: pr3d4t0r, hmm. What do you suggest to replace it with then??
16:12  awaad: pr3d4t0r: But how can I integrate it with vim ?
16:12  pr3d4t0r: Oipo: from whatever import CONNECTION_FAILED
16:12  pr3d4t0r: awaad: I run them separately.
16:12  pr3d4t0r: awaad: MacVim for main development, then I run snippets from bpython.
16:12  Oipo: pr3d4t0r, that's pretty much what I'm doing right now. "from defines import *", which includes the CONNECTION_FAILED
16:13  pr3d4t0r: awaad: So MacVim + NERDTree on one side, bpython on a separate window.  bpython shares the path/environment with MacVim.  When done, I save the bpython output to the correct directory, then reload from Vim.
16:13  lyrae: is it possible to send firefox and/or chrome a signal to reload the page?
16:14  pr3d4t0r: Oipo: Check defines.CONNECTION_FAILED and ensure that CONNECTION_FAILED = 1
16:14  awaad: pr3d4t0r: It is a very long way
16:14  pr3d4t0r: awaad: You only have to set it up once.
16:15  babilen: pr3d4t0r: http://www.vim.org/scripts/script.php?script_id=1542
16:15  Oipo: pr3d4t0r, yeah, it's 1. int, too.
16:17  pr3d4t0r: babilen: "Requires Vim7 compiled with +python support" - let me check if MacVim is compiled that way.
16:17  pr3d4t0r: babilen: Thanks.
16:17  pr3d4t0r: Oipo: Is the error message exactly the same in all cases?
16:18  Absolute0: I am trying to import a module somewhere up the package hierachy, and import fails: http://pastie.org/1289997
16:18  Absolute0: I pasted the package tree and the import line
16:19  Oipo: pr3d4t0r, I just...fixed it by type casting to str. O_o
16:19  Oipo: Thanks anyways.
16:19  Absolute0: what am I doing wrong?
16:19 --- zer0c00l is now known as zer0c00l|Away
16:19  Yhg1s: Absolute0: don't run things that live inside packages directly. Python won't know it's meant to be part of a package.
16:19  Yhg1s: Absolute0: have a testrunner live alongside the 'converter' package, and have it import converter.tests.processor_config_test instead.
16:19  DexterLB: hello
16:19  Absolute0: Yhg1s: you mean I can't do python foo from the dir of foo?
16:20  LordError: Im throwing this out again in case someone has any idea. im having problems with getting my current ip in a good way. i want to regulary check my ip, like every 1 or 2 secs. this is for network detection daemon, get current ip, check if there is a match for a profile then do stuff. At this time i've tested using ifconfig and a socket to check the ip, but i always run out of fd or sockets. is there any way/or lib that can get my current ip in
16:20  DexterLB: how do I fork some object in the background completely detached?
16:20  Yhg1s: Absolute0: you're not importing 'foo' from the dir that contains 'foo'. You're doing 'import foo' from *inside* 'foo'.
16:21  Yhg1s: Absolute0: and  Python doesn't know you mean for 'converter' to be a package when you run something inside the package as a script.
16:21  Absolute0: Yhg1s: if the tests are run in a main, would that fix things?
16:21  Yhg1s: DexterLB: I'm not sure what 'forking an object' means. You can fork the current process, if that's what you want. It won't be completely detached until you completely detatch it, though. How to do that depends on what you actually want.
16:22  pr3d4t0r: Oipo: http://eugeneciurana.com/pastebin/pastebin.php?show=43538 - try this.
16:22  Yhg1s: Absolute0: as I said, putting a testrunner alongside the toplevel package, then having that import stuff inside the package is the way to do it.
16:22  pr3d4t0r: Oipo: Heh - I was about to say.  Your types were crisscrossed.
16:23  pr3d4t0r: Oipo: If you have bpython, you can check the types interactively; otherwise add a quick debugging statement like that and just check if what you're passing is what the function/method expects.
16:23  Aufwind: I want to parse a page through a the tor network. Do I have to tell my python-script in urllib respective httplib which proxy it has to use or do I have to do it for the entire terminal... Never did something like that, so I am asking which would be more senseful and which is possible...
16:23  DexterLB: Yhg1s: for a start, I want to create a forkbomb.
16:23  Aufwind: Not "at" but "through"
16:24  DexterLB: Yhg1s: then I'll make my app control the amount of processes
16:24  ggergely: hello.
16:24  DexterLB: Yhg1s: but first I need to figure out the basics, and for now I can only for a child process from __main__
16:24  ggergely: what is the basq "quick introduction" book to get started with python reasonably quick?
16:25  ggergely: *best
16:25  saml: yo, is 001 different from 1?
16:25  pr3d4t0r: babilen: Testing that with MacVim - it looks like we're golden.  Thanks for the tip.
16:25  Yhg1s: DexterLB: well, what you're asking for is 'os.fork()'. It works from any module.
16:25  TheSheep: ggergely: topic has some suggestions
16:26  Yhg1s: ggergely: docs.python.org/tut is quick.
16:26  ggergely: ah. oit was too long to fit on my screen
16:26  ggergely: checking
16:26  TheSheep: ggergely: you may have to click the link
16:31  Aufwind: How do I configure httplib to connect through a certain proxy?
16:31  Aufwind: Could someone give me an example?
16:33  Caribou|: how can i use something like the %sys% windows environment variable, i want to reach windows\system32\drivers\etc\hosts file without knowing the system drive letter
16:33  Yhg1s: Aufwind: set the HTTP_PROXY environment variable.
16:36  Aufwind: Yhg1s: You mean I leave my "working" python code alone and configure the terminal? Like export HTTP_PROXY = PROXYSERVER_IP:PORT?
16:36  Yhg1s: Aufwind: oh, sorry, that's urllib. httplib doesn't do proxies for you.
16:36  Yhg1s: Aufwind: yes, if it uses urllib. If you really want to use httplib, see how urllib handles proxies for you.
16:36  Yhg1s: (it's annoying and tedious.)
16:38  Aufwind: Yhg1s: May I ask you: Is this http://fpaste.org/TpQe/ also doable with urllib?
16:38  Yhg1s: Aufwind: you mean, requesting a page? Sure.
16:44  flopchi: hi.  I use M2Crypto to compute a message signature.    Then I want  to append the signature to the message itself and encode the result in base64.  When I base64 the message only, everything works fine.  When I base64 the signature only, everything works fine.  But when I try to concatenate the message and the signature, I get nasty "'ascii' codec can't decode" errors that I can't get rid of!!
16:45  dash: flopchi: you're mixing unicode and byte strings
16:45  flopchi: The line on which I get the  error is this:    together=message+signature
16:45  dash: right. message is probably unicode
16:46  flopchi: omg
16:46  DexterLB: Yhg1s: I tried os.fork()
16:46  flopchi: dash: shouldda asked u earlier....  Spent 2 freakin hours fighting with this.
16:46  flopchi: dash: Thank you.
16:47  dash: flopchi: 2 hours ago i was asleep ;D
16:47  Yhg1s: DexterLB: ok, and?
16:47  flopchi: dash: oh okay then.  perfect timing.  lol
16:47  Yhg1s: flopchi: no worries, someone else would have given you the answer.
16:47  flopchi: yea, next time I'll know.
16:47  flopchi: thanks, guys.
16:47  dash: yeah i was joking. :)
16:49  DexterLB: Yhg1s: here's my code: http://dexterlb.pastebin.com/UFNBajbB
16:49  DexterLB: I expected it to forkbomb my VM, but it forked nothing.
16:49  infobob: http://paste.habnabit.org/show/26/ (repasted for DexterLB)
16:49  Yhg1s: DexterLB: well, you fork exactly once.
16:49  Yhg1s: DexterLB: and then the parent and the child both exit. Not much of a bomb.
16:49  DexterLB: yes.
16:49  Yhg1s: DexterLB: a forkbomb is a process that *keeps forking*, in both children and parents. So, do that.
16:50  hungnv: deximer, while True: bomb()
16:50  DexterLB: Yhg1s: but why did the child fork nothing
16:50  Yhg1s: DexterLB: because that's what fork does.
16:50  Caribou|: i'm insisting but is there any way to know the windows path through python ?
16:50  DexterLB: it creates a child that cannot do fork()'s?
16:50  Yhg1s: it creates two *identical* processes. Both processes just returned from the os.fork() call.
16:50  fission6: whats a reasonable way to convert/serialize a dict to a string to print to a file? json?
16:50  Yhg1s: DexterLB: it creates a process that *doesn't* do os.fork(), because *your program* doesn't do anything after the fork.
16:50  nosklo: DexterLB: there, fixed it for you: http://paste.habnabit.org/show/28/
16:51  Yhg1s: fission6: sure.
16:51  fission6: tight
16:51  DexterLB: nosklo: doesn't that mean that only the parent will fork lots of children that will do nothing?
16:52  DexterLB: aaaaah
16:52  Yhg1s: DexterLB: the child process will be a *copy* of the parent process. It will execute *the same code*.
16:52 * DexterLB got it
16:52  nosklo: DexterLB: after a os.fork() the program continues, twice
16:52  Yhg1s: not from the start, but from the point of os.fork() returning.
16:52  DexterLB: got it got it
16:52  DexterLB: :)
16:53  DexterLB: python's genious.
16:53  nosklo: that's not a python-only behavior
16:53  DexterLB: oh and btw what's wrong with pastebin.com?
16:53  Yhg1s: DexterLB: ads, slowness, unreachable, annoying.
16:53  spirat: fork is a feature of you operating system, that's not really python (os.fork() remember)
16:54  DexterLB: oh there's my other problem
16:54  DexterLB: in the end I will have to port the app to windoze too
16:54  fission6: Yhg1s: what if i want to print the dict to a file, where the file is a generatored python script so i want the dict to be printed in a way it can be interpreted, meaning _somevar = 'the seriaized dict'
16:55  fission6: so that when i run the file _somevar = a dict, not a string
16:55  sharperguy: Hey. I have a function in a python that's wrapped around a c++ library. The function wants a pointer to an area of memory of a certain size which it can write to. Is there a way I can do this in python?
16:55  dash: sharperguy: what's it do after that?
16:56  fission6: any ideas how i can serialize a dict and print it to a python file so that when it runs the dict is interpreted as a dict and not a string
16:56  sharperguy: dash, Well basically the function puts raw wave data into the memory area. Then I need to pass this somehow into a pyaudio stream
16:56  nosklo: fission6: json.dump(yourfile, dictionary)
16:56  dash: sharperguy: sounds like your wrapper needs to do both of those things
16:56  nosklo: fission6: then, dictionary = json.load(yourfile)
16:57  fission6: hmm ok
16:57  DexterLB: Yhg1s: when I do os.fork(), will it also maintain my previous variables etc?
16:57  nosklo: DexterLB: yes.
16:57  J_P: Hi all
16:57  nosklo: DexterLB: the program *continues*
16:57  nosklo: DexterLB: it doesn't restart at all
16:58  sharperguy: dask, So I can't just create a variable or something that's X bytes long?
16:58  DexterLB: right, but in two copies
16:58  DexterLB: so that's not what I need. What I need is something that starts a clean copy of the program from the beginning
16:58  papna-work: sharperguy: Try typing da<TAB>
16:59  DexterLB: and, preferably, also works on windoze
16:59  nosklo: DexterLB: then it's not fork. try the subprocess module
16:59  sharperguy: papna-work, ah sorry my client doesn't seem to support that for some reason
16:59  sharperguy: dash, sorry see message above &
16:59  dash: sharperguy: right. that's not how python works
16:59  dash: sharperguy: variables are names for objects, not buckets you put bytes into
17:00  sharperguy: dash, yeah thats what I thought but can't I just specify a variable that refers to an area of memory?
17:00  dash: sharperguy: you might be able to write _something_
17:00  dash: sharperguy: but it'd be nicer for the wrapper to handle that.
17:01  sharperguy: dash, hmm ok
17:02  damd: hi.  does python release memory as soon as possible?
17:03  dash: damd: Sure.
17:03  dash: damd: why do you ask?
17:03  fission6: file.write() does not print a new line?
17:03  babilen: fission6: No
17:03  fission6: is there a writeln
17:03  dash: fission6: it writes what you ask it to, no more.
17:04  Yhg1s: fission6: just add a '\n'.
17:04  dash: fission6: just stick a newline in there.
17:04  damd: dash: because my python program keeps eating more and more memory and i cannot by my life figure out why
17:04  fission6: i hate file.write(somevar+'\n')
17:04  Yhg1s: fission6: so write a function for it. Or, call file.write('\n'). Or use string formatting. Or use something else, depending on what you *don't* hate.
17:05  fission6: ah yes
17:05  fission6: nice view point
17:05  fission6: ill consider
17:05  dash: damd: meliae is a tool i've had nice success with in diagnosing that
17:05  dash: damd: what does your program do?
17:05  nosklo: what's the best way of inserting a huge ammount of data in posgresql using python?
17:05  nosklo: About 10million rows a day, from a text file
17:05  dash: nosklo: mmm, best is arguable
17:06  papna-work: What the heck client was he on?
17:06  damd: dash: it starts out with a list of TV show objects and uses that information to update the episode information for each of those shows.
17:06  dash: nosklo: maybe COPY FROM if the data is formatted simply
17:07  babilen: nosklo: + psycopg2 should do the job
17:08  Absolute0: Is there a recursive version of {}.has_key() ?
17:08  Yhg1s: Absolute0: no. (And don't use 'has_key', just use containment tests on the dict.)
17:08  Absolute0: or some sort of abstract flattening method?
17:08  nosklo: Absolute0: don't use has_key()  - it's deprecated
17:08  babilen: nosklo: But it is very hard to answer that as a lot of other things come into the equation (index updates, frequency of insertions, consistency checking, ...)
17:08  nosklo: Absolute0: better use flat structures from start, can't you?
17:08  Yhg1s: Absolute0: nothing comes to mind. Why do you have nested dicts if you don't want to have a nested dict?
17:08  lvh: Absolute0: are they arbitrarily nested?
17:09  lvh: Absolute0: If it's just a dict of dicts then any(key in subdict for subdict in bigdict)
17:09  Absolute0: I need to check if a key is anywhere in a dict tree
17:09  nosklo: babilen: index updates: yes. frequency of insertions: once a day, 10million rows. consistency checking, no.
17:09  Yhg1s: then you'll have to walk this 'dict tree', or use a different data structure.
17:09  lvh: Absolute0: Yeah, no, it doesn't exist, you can write BFS/DFS yourself though
17:09  awaad: pr3d4t0r: I explored NERDTree and bpython, I ran "print("welcome") in bpython and save it to a file which had the command and the output
17:09  dash: Absolute0: why do you have nested dicts?
17:09  nosklo: looks like COPY FROM is what I was looking for, thanks dash, babilen
17:09  Absolute0: dash: why not? :)
17:09  dash: nosklo: <3
17:10  dash: Absolute0: because now you have an extra problem
17:10  babilen: nosklo: You might want to consider rebuilding the index *after* the update and disable it beforehand
17:10  dash: Absolute0: why do you have nested dicts?
17:10  awaad: pr3d4t0r: Now, What do I have to do ?
17:10  Absolute0: dash: i representing a class hierachy through dicts
17:10  babilen: nosklo: That assumes that it is OK for the index to be unavailable during the update.
17:10  damd: does anyone have any idea how meliae works?
17:10  dash: Absolute0: Why?
17:10  dash: damd: sure
17:10  Kuba: Hey guys I have a problem with setuptools and package data: If I put the data files insisde my package, ie. MyProject/myprojec directory and set MANIFEST.in the files get included into egg (setup.py bdist_egg). However if they are in the MyProject directory they don't get included in the egg, hoverver they get included in the tar.gz from `setup.py sdist`... Why?
17:11  dash: damd: it looks at all the objects in your process and writes info about them to disk.
17:11  Absolute0: dash: its output from a yaml load
17:11  nosklo: babilen: that's a good idea, I'll consider it, thanks
17:11  Absolute0: it's
17:11  damd: dash: yeah, but how do i even start using it? there doesn't seem like there's any official documentation
17:11  dash: damd: there's a README and a couple blog posts
17:11  damd: the readme tells me nothing, but i did find a blog post just now
17:12  nosklo: can I use COPY FROM STDIN on psycopg2?
17:12  babilen: nosklo: It makes a *huge* difference as every INSERT results in an index update -- unfortunately psql does not allow to postpone index updates AFAIK (you might want to check in #postgresql) so you have to DELETE the index and INDEX CREATE a new one.
17:13  nosklo: "COPY FROM STDIN: Specifies that input comes from the client application. " -- how can I provide the data using psycopg2 to that statement?
17:13  dash: nosklo: Tricky!
17:14  dash: http://initd.org/psycopg/docs/usage.html#using-copy-to-and-copy-from
17:14  babilen: nosklo: Whats wrong with COPY FROM 'filename' ?
17:15  Kuba: Ohh, sorry, my problem happens when I use py_modules...
17:16  babilen: nosklo: Another idea would be to pipe the statements directly into psql (you could for example use th subprocess module to spawn it) -- no idea if that really is a good idea though.
17:17  babilen: nosklo: You basically want to insert all statements in FILE into your database? Why is this related to Python?
17:18  DexterLB: nosklo: subprocess only executes an external command, I can't set it to execute a python object. And doing subprocess.Popen(['python3', sys.argv[0]]) isn't convenient.
17:18  lvh: dash: http://pypi.python.org/pypi/lupa/0.18
17:18  Yhg1s: DexterLB: and yet those are the tools you have to work with.
17:19  Yhg1s: DexterLB: what is it you're *actually* trying to do?
17:19  babilen: nosklo: I mean: What is stopping you from using a simple cron job that pipes the statements into psql directly?
17:19  DexterLB: Yhg1s: I'm trying to spawn a detached copy of myself.
17:20  gregglind: nosklo, not direct the same, but related, pqsql copy to/from via sqlalchemy... https://gist.github.com/672712
17:20  Yhg1s: DexterLB: then you have to either use os.fork(), and detach accordingly, or use subprocess (with specific creation flags) on Windows.
17:21  Yhg1s: DexterLB: there's various recipes available for properly detatching, depending on what kind of detacing you want
17:21  Yhg1s: except spelled right.
17:22  nosklo: babilen: COPY FROM 'filename' means I have to copy the file to the server first
17:22  gregglind: nosklo, a technique I have used for large batch loads there is 'truncate daily table; COPY FROM; index, reinherit (using postgres partitions)'
17:22  nosklo: babilen: there are no statements in FILE
17:22  magicblaze0071: how do i debug this error -- cant find out what is causing it in my code... http://paste.pocoo.org/show/289944/ -- any ideas?
17:22  nosklo: babilen: the file has only the data
17:22  gregglind: nosklo, I beleive you can give a file buffer, and it will work fine using copy_expert (iirc)
17:22  nosklo: DexterLB: what's unconvenient abou tit?
17:23  nosklo: DexterLB: suprocess.Popen([sys.executable, sys.argv[0]])
17:23  gregglind: nosklo, copy_expert might help you... see my gist... http://initd.org/psycopg/docs/usage.html#using-copy-to-and-copy-from
17:24  DexterLB: nosklo: oh, that makes it a lot more convenient
17:24  nosklo: DexterLB: what makes it more convenient??
17:24  nosklo: DexterLB: it's about the same thing you did?
17:24  Yhg1s: that won't "detatch" it in the usual meanings of the word, though.
17:24  babilen: nosklo: The data has to be copied to the server anyway -- You might want to consider using a network file system
17:24  Yhg1s: eh, detach, sheesh.
17:24  DexterLB: nosklo: getting the python executable with sys.executable
17:24  nosklo: gregglind: thanks.
17:24  mourn: hi
17:25  nosklo: babilen: I'd like my client to not have access to the server's filesystem directly
17:25  guidevita: hi guys i have a question
17:25  ssbr: Man, what do you do when two different modules need to use etree? is it OK to just require lxml? :(
17:25 --- zer0c00l|Away is now known as zer0c00l
17:25  nosklo: gregglind: I think that's the solution
17:25  guidevita: i've read http://python-commandments.org/python3.html i want to start programming from a scratch
17:25  Yhg1s: ssbr: why would it matter if it's two different modules?
17:26  gregglind: copy_expert just needs a file buffer, which a cStringIO is fine for.  10 million rows shouldn't be *that big*.   I do this routinely at work :)
17:26  guidevita: i've used C, java, perl, sql. would you recommend me to start with python 2 or 3?
17:26  nosklo: guidevita: python 2
17:26  Yhg1s: guidevita: Python 2, then Python 3 after that.
17:26  Yhg1s: the differences aren't big.
17:26  nosklo: guidevita: it is more useful right now, and the difference is not so big
17:26  mourn: How can I decode a CP1252 string so that it ends in UTF-8 ? >>> """\xe9""".decode("cp1252") gives u'\xe9' instead of é
17:26  guidevita: ok python 2 it is then, thank you
17:26  Yhg1s: mourn: because you're printing the repr() of it.
17:26  nosklo: guidevita: start here http://docs.python.org/tut
17:26  ssbr: Yhg1s: the import is 13 lines long, is all.
17:27  babilen: nosklo: It doesn't make much sense to continue this stabbing-in-the-dark™ as I clearly don't know enough about your setup and needs to give reasonable advice. I know from personal experience that "COPY FROM" is the fastest method (if you disabled indexing) -- but you've seen a couple of ways to handle this within Python. I still don't know how Python enters the ring in your setup though. :)
17:27  Yhg1s: mourn: u'\xe9' is u'é'.
17:27  mourn: yes, thatÃ's what I want
17:27  Yhg1s: ssbr: that seems a little excessive?
17:27  ssbr: Yhg1s: but if I skip all the compatibility stuff with xml.etree/ElementTree/cElementTree, it's 1 line
17:27  Yhg1s: ssbr: ach so.
17:27  nosklo: babilen: yeah, it seems to be the solution I was looking for
17:27  gregglind: it would be nice to able to point people to a standard 'this answers all unicode questions' link, since people ask about it every day.
17:27  Kuba: Could someone please explain me this behaviour: http://pastebin.com/gvjQJDXJ#L82 exactly lines 82-84 ? Please help me with this setuptools related problem... :)
17:27  infobob: http://paste.habnabit.org/show/29/ (repasted for Kuba)
17:28  nosklo: gregglind: thing is, that answer would be too big and people wouldn't read it
17:28  Yhg1s: mourn: well, if it's what you want, why isn't it what you want? I'm not sure what you're asking.
17:28  nosklo: gregglind: we have a few candidate links though
17:28  ssbr: I guess I should just stuff it in some third module and import from that module.
17:28  mourn: well, I have mixed cp1252 strings and utf8 strings
17:28  mourn: i want everything in utf8
17:28  Yhg1s: mourn: u'' is unicode, not utf-8.
17:28  gregglind: nosklo, holler if you have more COPY q's... I use that technique all day long :)
17:28  mourn: so I do .decode("cp1252").encode("utf_8")
17:28  nosklo: mourn: decode everything to unicode first, then you can encode to utf-8
17:29  Yhg1s: mourn: s.decode('cp1252') gives you unicode. If you want a UTF-8 bytestring, encode it into UTF-8.
17:29  mourn: but I still get the same CP1252B string at the end
17:29  Yhg1s: but a better approach is to use unicode everywhere.
17:29  nosklo: mourn: no, you don't :)
17:29  Yhg1s: mourn: according to what? u'\xe9' is not cp1252. it's unicode.
17:29  mourn: E9 is CP1252
17:29  Yhg1s: yes.
17:29  Yhg1s: '\xe9' is cp1252. u'\xe9' is unicode.
17:29  mourn: >>> """\xe9""".decode("cp1252")
17:29  mourn: u'\xe9'
17:29  nosklo: mourn: but when you put a "u" first, it's not a byte anymore, it's a code point.
17:29  Yhg1s: notice the u''. it's an important difference.
17:29  Kuba: Anyone please?
17:30  mourn: well, but I want an u'é' at the end
17:30  Juhaz: IT IS!
17:30  Yhg1s: It just so happens that the *byte* '\xe9', in the cp1252 encoding (and a few other encodings), represents the unicode codepoint u'\xe9'.
17:30  nosklo: mourn: that is u'\xe9'
17:30  nosklo: mourn: it's the same thing
17:30  Juhaz: U+00E9 LATIN SMALL LETTER E WITH ACUTE
17:30  nosklo: mourn: u'\xe9' == u'é' -> True
17:31  DexterLB: Yhg1s, nosklo: thanks. Forkbomb success.'
17:31  mourn: oh ok, but it is UTF16 then
17:31  Yhg1s: mourn: no.
17:31  mourn: not UTF8
17:31  gregglind: kuba, what is the problem with 82-84?
17:31  Yhg1s: mourn: it's *unicode*. In no specific encodingn.
17:31  nosklo: mourn: no. It's unicode.
17:31  mourn: yep ok
17:31  Yhg1s: mourn: if you want UTF-8, you have to *encode* it into UTF-8.
17:31  Kuba: gregglind: in dir a, those thre files (1,2,3) don't get included
17:31  Yhg1s: mourn: as I said from the start, u'' is a unicode string, *not* UTF-8.
17:31  Yhg1s: UTF-8 is not unicode.
17:31  gregglind: Kuba, whas the behaviour you *want*
17:32  Kuba: gregglind: in version b, they do
17:32  mourn: Yhg1s: well, yes, utf8 is the translation format
17:32  Kuba: gregglind: I want to include packages data that is outside main package
17:32  Yhg1s: mourn: utf-8 is an encoding, just like cp1252.
17:32 --- zemanel_ is now known as zemanel
17:33  Kuba: gregglind: so that catalouge "c" is included to egg in file tree version a
17:33  Kuba: :P
17:33  mourn: actually my problem is that I get an exception when printing the string
17:33  Kuba: gregglind: Is my question clear enough now?
17:34  gregglind: Kuba, so your goal is to have them included in both, and you are wondering why the recursive-include in 'a' isn't working?
17:34  nosklo: mourn: to print strings, you have to encode them to the output terminal's encoding
17:34  jorn: can a staticmethod be disguised as property?
17:34  nosklo: mourn: so it will be correctly interpreted by the terminal
17:34  Kuba: gregglind: yeah, more or less...
17:34  nosklo: mourn: so if you have a utf-8 terminal: print myunicode.encode('utf-8')
17:35  mourn: yep ok
17:35  Kuba: gregglind: what is funny it is included if I invoke `python setup.py sdist`
17:36  Kuba: gregglind: That behaviour is quite strange for me
17:36  jorn: e.g. i have a static var inside the class, which I want to set on first call and use the cached result in the following calls.
17:36  mourn: ok my bad, I just thought it was CP1252 when it was actually unicode, now it works, thanks :)
17:37  lvh: mourn: cp1252 is an encoding, unicode isn't
17:37  rullie: hey folks, is there anyway to default a dict to some value when the key doesn't exist?
17:37  vpetro: from collections import defaultdict
17:37  vpetro: d = defaultdict(int)
17:38  rullie: vpetro: it behave exactly like dict right?
17:38  vpetro: will give you a dict that returns 0 when the value doesn't exist
17:38  vpetro: yes
17:38  rullie: perfect, thank you :)
17:38  vpetro: np
17:38  LuciusMare: Hi, I want to create a windows executable from python script, but from linux - how do I do that?
17:38  jorn: can i combine @property and @staticmethod?
17:38  gregglind: Kuba, looking it over.. in the meantime, setup.py sdist --manifest-only might be revealing
17:38  vpetro: LuciusMare: i think people still use py2exe for that
17:39  LuciusMare: vpetro: I read that using wine produces invalid executables, but I'll try that, then
17:39  Eevee: jorn: that doesn't make any sense
17:39  damd: how do i find out what version of a module i have?
17:39  Kuba: gregglind: error: option --manifest-only not recognized
17:39  jorn: Eevee: why not?
17:39  Eevee: jorn: or do you mean a property of the class
17:39  jorn: yes
17:40  Eevee: try it and see
17:40  jorn: i.e., i have a static field i want to initialize on first call, but use the cached result in the next calls.
17:40  greenland: #python, i've a dilemma. my code works, but it seems profoundly wrong and i've no idea why its working this well. im twiddling with socketserver, trying to find the best way to keep the socket connection open, and concluded that i need to keep the handle method running, and i've done so with a brutishly stupid while(True)
17:40  gregglind: Kuba, this errors?  $ python setup.py sdist --manifest-only   # confirm
17:40  Eevee: jorn: though really there's no reason to use staticmethod at all; you might as well just have a function
17:40  subsume: how do I get rid of those weird characters that appear in vim as ~S?
17:41  Kuba: gregglind: yes, tried that and it returned "not recognized"
17:41  greenland: EEvee __function?
17:41  jorn: Eevee: in the class?
17:41  Eevee: jorn: outside it
17:41  jorn: well, that gets ugly
17:41  gregglind: kuba, answer here is not obvious to me, so all I suggest is more debugging... http://docs.python.org/distutils/setupscript.html#debugging-the-setup-script  $ DISTUTILS_DEBUG=1
17:42  gregglind: sorry not to be of more help!
17:42  greenland: Kuba: try putting a function inside the method that uses it?
17:42  jorn: it belongs to the class, so i want to have it inside of it
17:43  Kuba: gregglind: I'm not sure what You meant by the last sentence
17:43  greenland: is there something wrong with using while(True), or is the python vm smart enough to tell that it's running in place and do something more intelligent than my actual code?
17:43  gregglind: Kuba, in bash, you can turn on the verbose distutils debugger by setting the env variable DISUTILS_DEBUG (described in that link).  Then when you run setup.py it gives a lot more debug info
17:44  Yhg1s: greenland: I'm not sure what you had in mind.
17:44  Yhg1s: greenland: 'while True:' tells the VM to do a specific thing. What would it do that's 'smarter'?
17:45  Yhg1s: jorn: how does it belong to the class if it never references the class or any instance of it?
17:46  greenland: Yhg1s: I've the handle method of a socketserver instance. I want this method to remain open and not drop the connection, but the best thing i can think to do is have it run in place and poll the socket stream. I don't want that. What i'd actually like is the connection to remain open until i tell it to close, and have a callback for 'data just arrived'.
17:46  jorn: it's only used internally
17:46  guidevita: guys
17:46  Yhg1s: also, properties only work on instances of the class, and they always get 'self' passed. you can just ignore 'self' if that's what you want.
17:46  guidevita: is there any book you would recommend me for python 2
17:46  guidevita: i know c perl java and sql
17:46  jorn: Yhg1s: well, but that defeats my caching, doesn't it?
17:46  Yhg1s: greenland: sounds like you're asking for an event framework to do I/O for you, like Twisted.
17:46  Yhg1s: guidevita: docs.python.org/tut
17:46  guidevita: i want a book
17:46  Yhg1s: jorn: I don't know why it would
17:46  greenland: guidevita: yes, get Programming in Python 3. It's the best python2 manual i've seen.
17:47  guidevita: it really helps me to have stuff printed
17:47  Yhg1s: guidevita: so print it.
17:48  greenland: Yhg1s: i don't want it 'to do it for me'... I'd perfer to use only standard libs for no good reason. I'll look at Twisted though....
17:48  Yhg1s: greenland: well, if you want to *reinvent* Twisted, see the select module. It's a complicated job, though (which is why we have Twisted.)
17:48  greenland: Yhg1s: do you know if I can get the functionality described by using something less abstracted than socketserver?
17:48  jorn: Yhg1s: well, I cache by seeing if there's an attribute "cache" on the function, if not i initialize it, then return the value of function.cache
17:49  Yhg1s: jorn: yikes.
17:49  guidevita: Yhg1s: i'm not printing that, are you mental?
17:49  Yhg1s: jorn: I suggest getattr(self.__class_, 'cache') instead.
17:49  guidevita: Yhg1s: i won't go page by page clicking print
17:49  Kuba: Ohhh, anyone else could take a look at my setuptools problem? http://paste.habnabit.org/show/29/
17:49  Yhg1s: guidevita: I don't believe I suggested that.
17:49  Yhg1s: guidevita: you can download the docs in all kinds of formats.
17:49  ssbr: guidevita: it's something like 2 cents per page if you get it printed and bound at a print shop.
17:49  jorn: Yhg1s: ok, will do, thanks
17:49  greenland: Yhg1s: I've looked at select before and I could not figure out how it was not just poll.... I should probably look harder.
17:49  Yhg1s: jorn: eh, self.__class__, two underscores on each side.
17:49  ssbr: guidevita: this is comparable in price, or cheaper than, a high quality book from stores.
17:50  Yhg1s: greenland: no, it is just polling. that's what it does. You have to do the rest yourself.
17:50  jorn: yah, got the idea, not the syntax ;)
17:50  guidevita: greenland : that book is for python 3 -.-
17:50  Yhg1s: Kuba: well, I would first recommend ditching setuptools. it's a piece of crap. As are eggs.
17:50  gregglind: greenland, depending what you want to do with that socket, eventlet / greenlet might also meet your needs.
17:50  greenland: guidevita: just tear out the pages about division and binary strings and it's the best python2 book
17:51  Kuba: Yhg1s: Then what is a good replacement?
17:51  Yhg1s: Kuba: but manifests and sdist have some issues in distutils as well. It's entirely likely that distutils won't do waht you want it to do.
17:51  jorn: Yhg1s: well, actually i could go with @property and @classmethod in this case, can't i?
17:51  Yhg1s: Kuba: distutils.
17:51  guidevita: ok  guys
17:51  greenland: gregglind: anything that starts with 'event' sounds like it might be what i'm looking for
17:51  ssbr: guidevita: 3 cents a page at http://www.cafepress.ca/cp/info/sell/books.aspx
17:51  guidevita: so that tutorial printed is better than any book in pfd printed?
17:51  Kuba: Yhg1s: distutils is superior to setuptools?
17:51  Kuba: ;O
17:51  guidevita: i'm not buying anything
17:51  Yhg1s: jorn: you can't combine them, no. properties and classmethods are both descriptors, and you can't have them be both.
17:51  Yhg1s: jorn: you can make your *own* descriptor that acts like both at the same time, if you wanted, but there wouldn't be much point to it.
17:51  ssbr: guidevita: if you're not buying anything, how will you get something in print?
17:51  Yhg1s: Kuba: entirely.
17:51  teratorn: Kuba: Yes.
17:52  ssbr: I'm confused. Didn't you want a paper book?
17:52  guidevita: ssbr: at work
17:52  gregglind: greenland, eventlet and greenlet (correct me people!) replace some of the standard urllib (and other stuff) with asyncronous calls by patching (?) the python network IO bits.
17:52  guidevita: ssbr: printing is free here
17:52  guidevita: hehe
17:52  teratorn: Kuba: and theres 'distribute', which is supposed to be less crap
17:52  Yhg1s: but it's still a work in progress.
17:52  ssbr: guidevita: I thought you said you didn't want to print it.
17:52  gregglind: greenland, so that they look the same as the standard calls.  this is simpler (opinion!) than twisted.
17:52  Kuba: yeah, I knew bout distribute
17:52  guidevita: ssbr: i thought i had to print every webpage
17:52  Yhg1s: (it takes over the crap of setuptools and tries to fix it, which is tricky and slow going and can't fix everything.)
17:52  greenland: polling annoys me for some reason..... seems like callbacks are strictly better; but i have this pesky suspicion that when i use a callback, it's actually just using a poll on some lower level
17:52  Kuba: but I though setuptools is distribute++
17:52  Kuba: ;)
17:52  guidevita: ssbr: i didn't see any download link
17:52  ssbr: guidevita: Oh, I see. Yeah, there's a PDF.
17:53  ssbr: guidevita: the tutorial is pretty good if you already know how to program.
17:53  gregglind: kuba, wrong order there :)
17:53  Yhg1s: greenland: yes, callbacks will be called by something that polls. That's how Twisted does it, as do eventlet and greenlet and other such, although they sometimes use different things to represent the callbacks.
17:54 * gregglind defers(ha!) to Yng1s on the mechanisms of twisted, greenlet, etc.)
17:54  Yhg1s: Kuba: no, setuptools is this insane package that messes up every package it installs but was somehow attractive to people. setuptools is dead; no more development is happening, the author went to a better place (better for the rest of us, anyway.) distribute tries to fix the insanity of setuptools.
17:54  Yhg1s: and distutils2 is the attempt to offer what people want from setuptools without the insanity of setuptools.
17:54  Yhg1s: (but it's not usable yet, I think.)
17:55  awaad: Heeeey, I want an IDE for python that have good features such as autocompletion
17:55  greenland: Yhg1s: how low does this wonkyness go? Are NIC devices fundimentally incapable of sending a signal when they get data or something stupid?
17:56  guidevita: how cna i download the tutorial?
17:56  ssbr: guidevita: http://docs.python.org/download.html
17:56  greenland: this is like some sort of philosophical quest now to somehow prove that "its done, dont ask." is strictly better than, "is it done yet?" spam.
17:56  ssbr: (for 2.7)
17:56  Yhg1s: greenland: there's a lot of processing inbetween NICs and processes receiving the data. Most NICs *can* send a signal, but you don't want that to happen on a busy interface. Besides, there's truly nothing wrong with this polling. It's efficient, it's the way everything does it, it's optimized.
17:56  Yhg1s: why do you feel offended by select.select() blocking until there's something to do?
17:57  guidevita: thank you ssbr
17:57  Yhg1s: greenland: oh, you think you call select.select() in a tight loop? It doesn't work that way. The process is put to sleep until there's something to do (either one of the sockets changes status, or the timeout is hit.)
17:58  greenland: Yhg1s: I'm offended that data is just loitering in buffers for microseconds while it could be getting it's lazy-ass routed to some process.... I should probably just get over it.
17:58  awaad: I love VIM when I am coding python but I need some IDE that provides me autocompletion as I don't want to memorize all of the modules, classes and methods out there
17:58  Yhg1s: awaad: wiki.python.org/moin/IntegratedDevelopmentEnvironments
17:58  Yhg1s: greenland: yes, it doesn't work that way.
17:58  devcamcar: awaad: can get code complete in vim
17:58  Yhg1s: greenland: the process that's waiting using select.select() (or select.poll, or kqueue, or WaitForMultipleObjects, or whatever the platform offers) is woken by the kernel when data comes in.
17:58  greenland: Yhg1s: I was thinking that..... What you just said sounds much nicer.
17:59  awaad: Yhg1s: I tried some of them but I didn't find them comfortable and I didn't find autocompletion as I found it in visual studio and mono projects
17:59  awaad: devcamcar: How ??
17:59  Yhg1s: awaad: yes, you won't find autocompletion to that level, because Python is too dynamic to figure those things out without executing code.
17:59  awaad: devcamcar: I tried bpython but I don't think it can help me while coding medium or large programs
17:59  devcamcar: awaad: here's a good random link  -- there are actually several options
17:59  devcamcar: awaad: http://vasudevkamath.blogspot.com/2010/02/python-auto-complete-for-vim.html
18:00  greenland: awaad: Did you try icky closed-source KomodoEdit yet?
18:00  devcamcar: awaad: bpython is great for hacking on random bits but its no ide.  bpython makes me sad because it doesn't respect virtualenv
18:00  gregglind: awaad, fwiw, some of us are coding substantial projects without much more autocompletion than what is provide by IPython.   KomodoEdit works okay as well.
18:00  greenland: Yhg1s: thanks
18:01  Kuba: So you say, that I should use distutils...
18:01  Yhg1s: gregglind: a great many more don't even use ipython, just python with tab completion.
18:01  Yhg1s: Or without.
18:01  Yhg1s: (ipython is way too unreliable anyway.)
18:02  gregglind: Yhg1s, fair enough :) tab and readline binding might be enough.  and IPython has both good and bad features, and warts that aren't always obvious.
18:03  Yhg1s: too many warts that aren't obvious, unfortunately.
18:03  greenland: not as unreliable as pyIronPython_mono
18:03  awaad: gregglind, devcamcar, Yhg1s: I am going to be greedy and as for and IDE which gives me small hints or description of functions or classes I am working on.
18:03  gregglind: I have found it to be very useful, but YMMV.
18:03  gregglind: try KomodoEdit then.
18:03  mateobur: hello
18:04  mateobur: what's the best / more common library for using public key encryption in python ?
18:04  awaad: gregglind: Is it for free ?
18:04  awaad: I didn't find them in the repositories of Ubuntu
18:04  gregglind: (unless you alrady like emacs or vim or eclipse)  awaad, KomodoEdit is free (gratis) on Mac at least.
18:04  Yhg1s: mateobur: PyCrypto.
18:05  mateobur: python-pycryptopp
18:05  Yhg1s: mateobur: no.
18:05  devcamcar: awaad: you can make vim do everything you've asked for, if you're willing to eat some up front pain configuring it:
18:05  devcamcar: awaad: http://blog.dispatched.ch/wp-content/uploads/2009/05/vim-as-python-ide.png
18:05  greenland: using eclipse for anything other than java development for me has been about as useful as notepad.exe minus twenty hours of overhead configuration
18:06  devcamcar: awaad: source of image: http://stackoverflow.com/questions/978643/vim-python-and-django-autocompletion-pysmell
18:06  Yhg1s: mateobur: the debian package is 'python-crypto'
18:06  synx`: maybe you just suck at eclipse
18:06  greenland: also true
18:07  awaad: devcamcar: I am very happy to find all of these features in vim
18:07 * gregglind wonders if 'fighting over best editor' verges toward #python-offtopic?
18:07  awaad: devcamcar: I have already NERDTree configured
18:07  devcamcar: awaad: it can be a real pain to configure, but its worth the learning curve
18:08  awaad: devcamcar: What do you mean with the learning curve ?
18:09  jamesgecko: awaad: It's vim. It has one of the highest learning curves possible with a text editor. ;-)
18:09  awaad: jamesgecko: Yes, I know that, but I am pretty familiar with it. I love it soooo much
18:09  lvh: Hey. Guys. Editors: #python-offtopic
18:10  ssbr: Oh I do love wx. If something goes wrong, you have no bloody idea what it is. All the error return codes are booleans -- False is an error, True isn't.
18:10 --- presto_ is now known as presto
18:10  ssbr: It's such an elegant API! I wonder why nobody else uses it?
18:10  Yhg1s: ssbr: the world is insane.
18:11  jamesgecko: ssbr: Is it as great as PySide, where certain crashes in threads lock up the debugger?
18:11  nosklo: ssbr: If you're looking for pain, there's worst options
18:11  ssbr: jamesgecko: Thankfully not, I think. Hopefully. Maybe.
18:11  nosklo: ssbr: so why would I use wx? Let's go the full pain road
18:11  ssbr: jamesgecko: PySide uses threads internally?
18:11  ssbr: nosklo: do tell
18:12  jamesgecko: ssbr: There are several situations where you have to use QThreads if you want to have a nonblocking UI.
18:13  ssbr: jamesgecko: because of Qt, or because of what you were doing?
18:13  ssbr: I understood Qt and GTK to have very developed callback stuff.
18:14  jamesgecko: ssbr: No idea. I'm just getting "Exception KeyError: KeyError(5320,) in <module 'threading' from 'C:\Users\james\Applications\Python27\lib\threading.pyc'> ignored" :-p
18:14  reesefrancis: hi.. what's the best way to find two or more equal values in a list?
18:14  Yhg1s: reesefrancis: depends.
18:15  ssbr: and through trial and error, I discovered that wx wanted me to set the font family when I changed the weight of a font. Bleh.
18:15  Yhg1s: reesefrancis: is the list sorted? if multiple values are equal, do you care which you get? do you actually want to use a set instead of a list?
18:15  ssbr: jamesgecko: eargh
18:15  jamesgecko: ssbr: This is while I'm trying to recover gracefully from an exception and display an error message to the user. So maybe I'm doing something wrong with the catching.
18:16  reesefrancis: Yhg1s, it isn't sorted, they're strings. I have a list of IP addresses and trying to filter the list and have only the equal values
18:16  reesefrancis: Yhg1s, i'm trying to find how many times a value occurres in a list, with a for on each value. but I don't know a function to find the occurrences in a list
18:16  Yhg1s: reesefrancis: I don't understand what 'only the equal values' means
18:16  ssbr: jamesgecko: I wonder if it'd be easier to switch to GTK or wx than fix that. Threading bugs are so nasty.
18:16  Yhg1s: reesefrancis: do you mean you want unique values, or count how many times each item is present in the list?
18:17  jamesgecko: ssbr: Behold, I am a moron. Having an "exit()" in an exception in a thread is bad. :-)
18:17  ssbr: Oh. Maybe.
18:17  Yhg1s: jamesgecko: doesn't sound too bad.
18:17  Yhg1s: certainly doesn't sound like it would produce KeyError(5320,) ;P
18:17  reesefrancis: Yhg1s, l=[1, 2, 3, 4, 2]. here there are two '2' and I want to have only l=[1, 3, 4]
18:17  Yhg1s: reesefrancis: so you want to build a list of values that only occur once in the original list?
18:18  jamesgecko: Yhg1s: Well, I just took out the exit and it vanished. Might be Qt being funky.
18:18  reesefrancis: yea
18:19  reesefrancis: Yhg1s, something like for i in list: if list.count(i)>1 then exclude i ?
18:19  Yhg1s: reesefrancis: http://paste.pocoo.org/show/290012/
18:20  jminuscula: hi there!
18:20  jminuscula: I'm getting a weird result when printing rounded integers :S
18:20  kerio: reesefrancis: sure
18:20  reesefrancis: Yhg1s, well thank you!
18:20  Yhg1s: jminuscula: as in, floats returned by round()?
18:21  reesefrancis: kerio, what would you use to exclude a certain value? a filter()?
18:21  magicblaze0071: anyone knows how i can find out which file/line number my bug is sitting at:  http://paste.pocoo.org/show/289944/ (I tried pdb and winpdb, still cant find it)
18:21  Yhg1s: reesefrancis: calling list.count() in a loop like that is a bad idea because it's inefficient.
18:21  jminuscula: Yhg1s: yeah
18:21  reesefrancis: oh ok Yhg1s
18:21  kerio: Yhg1s: you can iterate over a set built from the list
18:21  jminuscula: v = [getrounded() for i in xrange(1000)]; print v is printing the list but some values are not correctly rounded
18:22  Yhg1s: jminuscula: round() just rounds the float value. floats remain imprecise. See chapter 14 of the tutorial at docs.python.org/tut for an explanation. Instead of using round(), use string formatting to only format to a certain precision.
18:22  gregglind: jminuscula, remember that floating point rounding is different than human rounding.  they are correctly rounded given how floats work under the hood :)
18:22  magicblaze0071: nosklo: Its a huge piece of code...10000 lines...and i get this mysterious error...How can one find out in python what file/line number an exception is being thrown from and the complete trace?
18:22  Yhg1s: kerio: you could, sure. it would still be less efficient than just building a counts dict.
18:23  jminuscula: yup, I read that about the round(), but I was expecting coherent printing. Why "print v" does not print the same values as "for i in v: print i" ?
18:25  Yhg1s: jminuscula: because printing a list prints the repr() of each item.
18:25  Yhg1s: jminuscula: and just printing the item prints the str() of the item.
18:26  bahamas: i don't know much about lua, but this looks cool http://pypi.python.org/pypi/lupa/0.18
18:28  magicblaze0071: Anyone debugs large pieces of python code here?
18:28  Yhg1s: magicblaze0071: lots of people, lots of times.
18:29  cheater99: anyone conducting a census?
18:30  magicblaze0071: Yhg1s: I've a exception thrown, the traceback doesnt tell me what line/file of mine is creating the problem
18:30  magicblaze0071: I tried winpdb/pdb -- perhaps I dont know how to use them correctly.
18:30  BigMao: Hello there, I built Python 2.6.6 from source and installed into my home directory; now I'm installing several modules.  When I build and install the module, it doesn't put anything into the default directory ($HOME/opt/python-2.6.6/lib/python2.6/site-packages).  Instead, it puts fiels into $HOME/opt/python-2.6.6/lib/python/numpy.  Would it suffice to link the numpy directory into the site-packages directory?  Is this good practice?  Thanks!
18:30  magicblaze0071: Any ideas how you would go about finding the problematic line number for such a problem?
18:31  Yhg1s: magicblaze0071: find out why the traceback is mangled, disable the mangling. Or, set a breakpoint at that point in the code.
18:31  Yhg1s: BigMao: how are you building and installing the module?
18:32  BigMao: Yhg1s, python setup.py install --home=$HOME/opt/python-2.6.6
18:32  Yhg1s: BigMao: remove the --home argument.
18:32  BigMao: Yhg1s, I'll do that :) let me check
18:32  Yhg1s: BigMao: and make sure 'python' is the right python binary.
18:32  Yhg1s: (the one you installed in $HOME/opt/python-2.6.6)
18:32  magicblaze0071: Yhg1s: When do tracebacks get mangled? why so? Sorry I'm new and dont know.
18:32  Yhg1s: magicblaze0071: because of try/except and custom printing using the traceback module.
18:33  Yhg1s: magicblaze0071: twisted does a bit of this as well. I forget if you can tell it not to. (#twisted would know.)
18:33  BigMao: Yhg1s, thanks - I did have some struggles with that, because I'm trying to build a new version in my home directory, and the old version was confounding things
18:33  Yhg1s: BigMao: well, don't use the old version :)
18:33  BigMao: Yhg1s, yes .. :P It was in my path so I called it by accident, silly mistake
18:34  Yhg1s: BigMao: is this old version also 2.6?
18:34  BigMao: Yhg1s, no, the old version is 2.4
18:34  Yhg1s: BigMao: then delete $HOME/opt/python-2.6.6/bin/python and just execute python2.6
18:34  Yhg1s: no more confusion.
18:36  BigMao: Yhg1s, I linked python2.6 to my $HOME/bin/python.  This will be better for me, as I would like all of my existing scripts (which contain #!/usr/bin/env python on the first line) to migrate to the new version
18:37  Yhg1s: BigMao: yes, that would create that confusion you were complaining about.
18:37  Yhg1s: (distutils will rewrite shebang lines to use a specific version, which is a better approach.)
18:37  BigMao: Yhg1s, that sounds helpful - I'll either run distutils or edit the shebang lines myself. Thanks
18:37  znh: Howdy. I've been googling this subject, perhaps without correct keywords, but if one would want to render HTML what would be the best approach?
18:38  dash: znh: an html renderer :)
18:38  Yhg1s: znh: depends on what one wants to render to.
18:38  Aufwind: Is it possible to put a delay on httplib, so it does connect every 10 Seconds ore so?
18:38  dash: znh: webkit, for example
18:38  Yhg1s: Aufwind: sure: put time.sleep() between your calls to httplib.
18:38  znh: there's a way to use webkit with Python?
18:38 --- SukhE_ is now known as SukhE
18:38  Aufwind: Yhg1s: Thanks
18:38  znh: oh wait, that's an excellent google search query
18:39  dash: znh: what are you writing?
18:39  magicblaze0071: Yhg1s: could it be a problem with the stdlib logging module?
18:39  znh: a little widget that takes place on the screen showing realtime data
18:39  magicblaze0071: Why would it not print the complete trace of where I'm not using it correctly? Why is python eating up the source of the error?
18:39  Yhg1s: magicblaze0071: anything's possible. logging does contain some stacktrace mangling, as well as potential uses of threads.
18:40  znh: target is the windows platform
18:40  magicblaze0071: Yhg1s: any ideas on how i can debug my code then? Somewhere in the 10k lines...which consists of 600 lines of logging code...there is an exception being fired...I cant tell which line...
18:41  BigMao: Yhg1s, thanks for the help, the packages are installing in the proper place now :) now to install scipy
18:45  magicblaze0071: Anyone can tell me how to debug the logging module -- http://paste.pocoo.org/show/290031/ -- I just get this error, and not the line number of my source code that creates the error?
18:46  znh: dash, thanks. webkit explained my pathway through the google maze :)
18:47  magicblaze0071: It is indeed a problem with the logging module of python!
18:50  Ulfalizer: is there some way to get syntax highlighting in the pydoc html output for code examples within docstrings?
18:51  Ulfalizer: if not, know of any nice alternative documentation generation systems?
18:51  Caribou|: how do you set your script version as you can see in the properties window (right click on the file) under windows !?
18:51  papna-work: Ulfalizer: sphinx uses reST to display arbitrarily formatted stuff, such as correctly formatted code snippets.
18:52  dash: Caribou|: "script version"?
18:52  dash: Caribou|: why do you want to?
18:52  Caribou|: dash, the exe version i guess, maybe that's a py2exe property
18:52  Ulfalizer: papna-work: i'll take a look, thanks
18:52  dash: Caribou|: oh.
18:53  Caribou|: dash http://dl.dropbox.com/u/8211966/screengrab_20101111185245.png
18:53  papna-work: Ulfalizer: Ulfalizer It's for a slightly different problem domain than pydoc.
18:54  dash: Ulfalizer: pydoctor is quite nice.
18:54  dash: Ulfalizer: twisted and bzr use it, for example.
18:54  Ulfalizer: papna-work: does it have a pydoc mode where it parses docstrings and outputs module documentation?
18:54  papna-work: Ulfalizer: Sure.
18:54  papna-work: Ulfalizer: It's called autodoc.
18:54  Ulfalizer: ok
18:55  Ulfalizer: i'll look at pydoctor as well :)
19:02  papna-work: Ulfalizer: sphinx is a really good piece of software.
19:09  eyeris: Can this be convertted to a single list comprehension? map(lambda (a,b): (a,int(b)), map(lambda ln: re.split('\s+', ln, 1), ['one 1', 'two 2', 'three 3']))
19:10  J_P: I would like do a replace of ; by \x, is not possible?
19:10  J_P: >>> a.replace(';','\x'); ValueError: invalid \x escape
19:10  lvh: eyeris: yes, it can
19:11  lvh: eyeris: however, don't: it's already illegible
19:11  J_P: lvh: see the error..?
19:11  lvh: J_P: \\x
19:12  lvh: J_P: \x is the start of an escaped-byte
19:12  J_P: ok
19:13  eyeris: lvh: What I pasted isn't the real code. It was a simplified version that fit on one line for IRC. The real code is perfectly legible. I'm just trying to learn list comprehensions.
19:13  dash: eyeris: that's a very odd way to learn list comprehensions
19:13  dash: eyeris: by, you know, not using them
19:13  dash: :)
19:14  eyeris: eyeris: this is code that I wrote a long time ago.
19:14  eyeris: I'm trying to rewrite it to use list comprehensions
19:14  eyeris: erm
19:15  eyeris: dash :)
19:15  lvh: eyeris: Okay, then pastebin the real code
19:15  agolsme: how do I pattern match a question mark with regex?
19:15  lvh: eyeris: (I find it hard to believe the map is more legible when it grows)
19:15  lvh: agolsme: One way is putting the question mark in a character class
19:15  lvh: agolsme: ie [?]
19:16  eyeris: I'm not looking for you to rewrite my code for me. I'm trying to learn.
19:17  eyeris: What I don't understand is how I can access the result of the re.split call without naming it because naming it flattens the list
19:17  lvh: eyeris: It's quite hard to know what to rewrite and what not to rewrite without seeing the code
19:17  lvh: eyeris: map isn't necessarily evil
19:18  dash: putting stuff on multiple lines isn't either though :)
19:20  voidzero: can I sort characters of a string into AaBbCcDd?
19:20  bl4ckcomb: is there a way to split a string like this: ( x, y ) = x.somemethod( 5 ) so that x = x[5:] and y = x[:5]
19:20  voidzero: (just letters)
19:20  papna-work: bl4ckcomb: No.
19:21  bsod1: gtk.Entry.get_text() method always returns me an empty string, do you have any idea?
19:21  dash: voidzero: Anything's possible.
19:21  bl4ckcomb: ok thx papna-work
19:21  papna-work: voidzero: sorted(s, key=lambda c: (c.lower(), c)) or something.
19:23  voidzero: papna-work, thanks :)
19:23  minskmaz: I have a wsgi app that's accepting post form parameters - I need to validate the parameters which will become url elements - urlparse doesnt' seem to give me what I'm looking for which is to basically blow away any characters that aren't url valid - any suggestions ?
19:24  dash: minskmaz: i'd consider use of str.translate, actually.
19:25  eyeris: lvh, dash: http://pastebin.ca/1988337
19:25  infobob: http://paste.habnabit.org/show/30/ (repasted for eyeris)
19:25  agolsme: lvh: ah ok thanks
19:25  minskmaz: dash will look it up
19:25  minskmaz: dash is that in 2.6 as well ?
19:26  dash: minskmaz: yes
19:26  eyeris: lvh, dash: The map version looks way better to me. I like map. I'm just trying to learn how to use comprehensions. Perhaps I just chose a bad code snippet to try to convert?
19:26  minskmaz: thanks dash
19:28  lvh: eyeris: it's reasonable
19:29  lvh: eyeris: the reason this is better than your irc example is because the irc example used lambdas
19:29  lvh: eyeris: rule of thumb: never use a map and a lambda together.
19:29  eyeris: Yes, yes, I understand why the IRC example was hard to read
19:30  naxa: hi! if I'd like to write a program UI such as rainmeter's (e.g. titlebarless custom "gadgets" etc http://rainmeter.net/RainCMS/sites/default/files/CMSAdmin/gnometerpreview_jpg_26412.jpg), but i don't know the tecnique, what is the terminology for this kind of thing / is there any corresponding module for python to aid this work?
19:37  rupul: Hello All! I am planning to learn python. So, I have this simple question.
19:37  rupul: Can we create GUI applications in python just as we can create in Visual Basic?
19:37  dash: rupul: you can write gui applications in python.
19:38  Juhaz: rupul, nope. Unlike visual basic, making gui applications in python doesn't necessarily cause any sanity loss, so it's not the same
19:38  rupul: dash: Thank you very much. I once created an application in VB which will launch some programs by just clicking buttons in a window, so same is possible in python?
19:38  voidzero: heh
19:38  naxa: rupul, python comes with Tkinter gui module included and many other such as QT or wxWidgets available separately
19:38  voidzero: that's the only thing i ever made in Delphi
19:39  rupul: Juhaz: Thank you very much.
19:39  papna-work: rupul: You can develop GUIs in Python, but the process is different than doing it in DB
19:39  nosklo: rupul: I use gtk.
19:39  rupul: naxa: I see. i dont know anything about python. I am planning to learn it, so want to clear this doubt before starting to learn it.
19:40  rupul: papna-work: Well, is it hard ?
19:40  papna-work: rupul: The packages for doing so are pygtk, wxPython, PyQt, Tkinter, and pyside in that order from best to meh.
19:40  rupul: nosklo: Thank you but as of now I don't have any idea of python. :-(
19:40  naxa: rupul, i've learnt python using the http://docs.python.org/tutorial/ python tutorial, and it's a great resource for beginners.
19:40  nosklo: rupul: gtk has a graphical GUI designer tool, glade; It allows you to draw the gui graphically much like what you would do in VB.
19:40  papna-work: rupul: The learning curve is slightly steeper than Visual Studio + VB
19:41  rupul: papna-work: do, i have to download it or is it pre installed in the python package?
19:41  rupul: naxa: Thank you for the doc.
19:41  papna-work: rupul: You have to install your GUI toolkit (except Tkinter, which is pre-installed on some Python installations)
19:41  rupul: nosklo: okay, i see. Thank you.
19:41  naxa: rupul, also note that those graphical gui-designers are not included with the language and you need to hunt down a good designer/ide (such as qt designer) if you would like to use such a thing
19:41  dash: "hunt down" is an exaggeration
19:42  dash: glade and qtdesigner are easy to install.:)
19:42  naxa: :)
19:42  bahamas: PyQT < wxPython? how so?
19:42  papna-work: bahamas: GPL
19:42  rupul: naxa: Okay, i use mandriva linux where i am preparing to learn python. So, I guess I have to install these extra packages. I already have python installed in my system.
19:42  papna-work: bahamas: And I don't like how Qt looks out of the box.
19:43  bahamas: i see
19:43  papna-work: rupul: Yes, you'll have to instasll whichever of those you want to use.
19:43  bahamas: but i remember reading today some examples of wx's insanity as ssbr experienced them
19:44  Juhaz: all things considering, I'd say things like what ssbr mentioned before are a whole lot worse than how it looks out of the box, but the license thing can be a showstopper
19:44  papna-work: bahamas: Right. I use PyGTK
19:44  rupul: dash: naxa: papna-work: nosklo: Juhaz: Thank you very much guys for all the words of advice that you have rendered me. I am very grateful to you. Hope to come back to you again after I start learning python. Now, I am going to have some dinner. See you. :-)
19:44  papna-work: I don't know what ssbr was saying, or why he had occasion to say it.
19:45  papna-work: rupul: Good luck.
19:45  rupul: papna-work: Thanks again :-)
19:45  naxa: rupul, see you!
19:45  rupul: naxa: Yes, see you soon.
19:45  Juhaz: papna-work, he was saying the api is horrifying
19:45  bahamas: "Oh I do love wx. If something goes wrong, you have no bloody idea what it is. All the error return codes are booleans -- False is an error, True isn't."
19:46  bahamas: "and through trial and error, I discovered that wx wanted me to set the font family when I changed the weight of a font. Bleh."
19:46  bahamas: are some examples
19:47  papna-work: The C++ API has int return codes.
19:47  papna-work: Don't know why the Python API wouldn't do it right.
19:47  papna-work: There are two levels of Python wx APIs, and I thought the Pythonier one used exceptions.
19:48  papna-work: I havne't seriously used wxPython (obviously)
19:49  carpi: Hello. Good Evening. Could someone please tell me the corresponding replacement for the keyword "nonlocal" for python 2.7?
19:49  dash: carpi: there is none
19:49  dash: it's new in 3.x
19:50  KirkMcDonald: carpi: The typical thing is a single-element list, if you really need it.
19:50  carpi: dash: in that case, while writing a closure how may I access a variable that is defined in the outer function?
19:51  carpi: KirkMcDonald: why might that work, while a single variable does not?
19:51  naxa: do you know any way to put a [transparent] png|image on the screen and be able to get events for it *without* a window border / title bar / etc on win32? i never was able to find the corresponding functions neither in wxwidgets nor in qt due that i don't know the terminology for this thing... but it seems basic since winamp/xmms is doing this from the earliest days, even if not transparently
19:51  KirkMcDonald: carpi: You can mutate the list.
19:51  KirkMcDonald: carpi: You can't rebind the variable in the outer scope.
19:51  lvh: KirkMcDonald: except suddenly nonlocal
19:52  KirkMcDonald: lvh: The question was how to do it without nonlocal.
19:52  lvh: KirkMcDonald: Pfscht, as if I have time to read up
19:53  dash: carpi: you can access it but you can't rebind it
19:53  carpi: dash: could you please tell me, what you mean by "rebind"?
19:53  KirkMcDonald: carpi: x = y # this rebinds x
19:54  KirkMcDonald: carpi: (Assuming x was already bound to something.)
19:54  KirkMcDonald: carpi: "Rebind" is basically a synonym for "reassign."
19:54  carpi: KirkMcDonald: ah okay. so you're saying i can access 'x' in the inner function but i can't modify it?
19:54  KirkMcDonald: carpi: You can mutate the object it refers to.
19:54  dash: "modify" can be a little confusing :)
19:54  KirkMcDonald: carpi: But you can't cause it to refer to a different object.
19:55  dash: carpi: the key thing is recognizing that "x.foo =", "x[0] = ", "x['bob'] =" are all the same kind of thing, and 'x =' is different from them
19:56  lvh: dash: give me immutability or give me death
19:56  dash: lvh: *bang*
19:56 * KirkMcDonald kills, freezes lvh. Now you have both!
19:57  dash: carpi: do you understand the difference?
19:57  dukebody: hi, can I specify a command to be run as the "tag_build" egg_info part in my egg setup.cfg?
19:57  dukebody: I want to tag the sdists with the unix time
19:58  carpi: dash: I think i do. im trying to work out yrou example on the interactive shell
19:58  dukebody: tag_date = true is not enough for me if I roll more than once a day
19:59 --- jbc22_ is now known as jbc22
20:02  kerio: KirkMcDonald: even frozen, his body will slowly decay
20:02  carpi: dash: i think now i understand. so it seems like i can modify the variable in the inner function but i can't bind it to a variable from the outer func..yea?
20:02  KirkMcDonald: kerio: Then clearly it is not sufficiently frozen.
20:03  kerio: you need absolute 0
20:03  kerio: :|
20:03  kerio: and you can't reach absolute 0
20:04  dash: carpi: right. this is because python doesn't distinguish between 'create a variable' and 'set an existing variable to a different value'
20:05  KirkMcDonald: To put it another way, Python's declaration semantics are backwards compared to most other languages.
20:05  danols: what does python evalute if 0: to ?
20:05  danols: 0 is a int
20:05  KirkMcDonald: danols: It is also false.
20:05  KirkMcDonald: danols: 0 is false, empty containers are false, None is false, False is false...
20:05  danols: k
20:05  KirkMcDonald: Empty strings are false...
20:06  kerio: danols: if checks the boolean value of things
20:06  danols: so what's safer to do in ifs statements if foo:
20:06  KirkMcDonald: "Safer"?
20:06  danols: foo is an int than I want to check that it is defined
20:06  danols: and it can be a 0
20:06  kerio: yeah, that will still cause an error
20:06  KirkMcDonald: danols: You should never be unclear as to which variables are defined.
20:06  kerio: also what KirkMcDonald said
20:07  danols: it's for form processing
20:07  KirkMcDonald: danols: Okay?
20:07  danols: it either returns a interger or ''
20:07  kerio: so it's still always defined
20:07  danols: so I if I do foo != '' than it should work ?
20:08  KirkMcDonald: That sounds reasonable, sure.
--- Log closed Fri Nov 12 00:50:48 2010
