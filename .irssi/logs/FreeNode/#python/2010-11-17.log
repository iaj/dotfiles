--- Log opened Wed Nov 17 11:21:13 2010
--- Log closed Wed Nov 17 11:21:13 2010
--- Log opened Wed Nov 17 11:53:50 2010
11:53 --- Users 797 nicks [0 ops, 0 halfops, 0 voices, 797 normal]
11:54  magcius: fluter, oh, you'd have to fill in the first parameter of Proxy to be the URL for your XMLRPC
11:54  Dhiaeldeen: nosklo: aha, so GTK and Python, the whole package, what is there size?
11:54  Dhiaeldeen: again, i don't want a .py, want an EXE
11:54  magcius: Dhiaeldeen, there isn't a recent one
11:54  Dhiaeldeen: to not let anyone see the source easily
11:54  fluter: magcius, I see, it is a framework, I will fill it up and test
11:54  Habbie: Dhiaeldeen, you can't really hide source
11:54  magcius: Dhiaeldeen, anyone who is determined to see the source of your application can, easily
11:55  fluter: magcius, thanks very much for your help
11:55 --- Channel #python was synced in 92 seconds
11:55  Dhiaeldeen: so in this case i think i will switch to C++
11:55  nosklo: Dhiaeldeen: Anyone determined to see the source of your C++ app will, too
11:56  Dhiaeldeen: i will still use python for another stuff for sure like blender game engine
11:56  nosklo: Dhiaeldeen: switching to C++ won't help much
11:56  fluter: magcius, have a nice day, :)
11:56  Dhiaeldeen: nosklo: i mean i don't have to use a lot of librarys
11:56  nosklo: Dhiaeldeen: too bad, use a lot of libraries is a good thing
11:56  Dhiaeldeen: and GTK and stuff
11:56  Dhiaeldeen: nosklo: emm, but i want to make the program very portable
11:57  nosklo: Dhiaeldeen: it means stuff already works and is bug-free... Code maintained by someone else! It's a dream!
11:57  Dhiaeldeen: 700 kilo max
11:57  Dhiaeldeen: this isn't easy with python
11:57  nosklo: why? are you running out of space? Disk space is so cheap these days
11:58  Dhiaeldeen: nosklo: this isn't pro
11:58  Dhiaeldeen: people will not download it
11:58  Dhiaeldeen: as much as it is 0.7
11:58  Habbie: so don't tell them the size beforehand
11:59  Dhiaeldeen: Habbie: i don't understand you
11:59  Habbie: users will only worry about the size of your project if you tell them 'you are about to download 10 megabytes, is that okay?'
11:59  Habbie: but users don't actually care
11:59  Habbie: so just don't tell them
11:59  Dhiaeldeen: C++ programs can be cross-platform and they are small in size.
11:59  magcius: Dhiaeldeen, first make your application
12:00  magcius: Dhiaeldeen, C++ applications can also be very big and not cross-platform
12:00  Dhiaeldeen: magcius: do the aplication? before deciding which language?
12:00  Dhiaeldeen: ok
12:00  magcius: Dhiaeldeen, you said you wanted to make an image format
12:00  Dhiaeldeen: let's say it is only for windows now
12:00  Dhiaeldeen: yes
12:01  magcius: Dhiaeldeen, I'd advise against it, because I doubt that you will get good quality
12:01  Dhiaeldeen: aha
12:01  Dhiaeldeen: i'm confused now
12:01  magcius: Dhiaeldeen, remember that most image formats are designed by people with 30+ years with image compression experience and techniques
12:01  magcius: GIF, PNG and JPEG are no exceptions
12:01  Dhiaeldeen: magcius: i want to try my way and see the result
12:01  Dhiaeldeen: i'm still curious
12:01  magcius: Dhiaeldeen, feel free. May I ask what your way is
12:02  Dhiaeldeen: magcius: no... :(
12:02  Dhiaeldeen: it is a bit smart i think
12:02  magcius: ok...
12:02  magcius: Dhiaeldeen, what is it?
12:02  Dhiaeldeen: what do you mean?
12:02  magcius: Dhiaeldeen, what is your method? I won't steal it, I promise.
12:02  Imk0tter: can I get someone's offtopic opinion?
12:02  magcius: Imk0tter, about what
12:03  bob2: Imk0tter: if it's not about python, #python-offtopic
12:04  magcius: Dhiaeldeen, but if you want something do display it, you need to load it fast into memory and then blip the memory to the display. Any recent graphics library can do this cross-platform: GTK+, Qt and wx withstanding
12:04  Dhiaeldeen: magcius: no, i have been plagiarised before, i'm an artist, ok, let's make it a short story, do you see this 3D character? http://qemum.org/download/file.php?id=36 , someone in the university claimed thaat it is his
12:04  magcius: Dhiaeldeen, do you have any proof it is yours?
12:04  Dhiaeldeen: magcius: yes
12:04 --- Afteris is now known as aft_away
12:04  magcius: Dhiaeldeen, ok
12:05  Dhiaeldeen: magcius: the proof is what we call a wireframe
12:05  magcius: Dhiaeldeen, you have it and he doesn't?
12:05  Dhiaeldeen: yes
12:05  Dhiaeldeen: magcius: yes
12:05  bob2: this seems ot as well
12:05  magcius: Dhiaeldeen, as in, you can show a wireframe render for the specific 3D model?
12:05  mercutio22: how do I access help documentation on list.sort() method?
12:05  magcius: bob2, yes, I know
12:05  bob2: mercutio22: help(somelist.sort)
12:05  Dhiaeldeen: i showed them in the university studio
12:06  gandalfcome: I want to store a pickled and zipped string in a sqlite database. sqlite complains that it wants unicode. How do I make this string unicode?
12:06  Dhiaeldeen: the .blend file it self , which no one in the world have it but me
12:06  Dhiaeldeen: anyways
12:06  Aondo: is there a fairly ok way of detecting the encoding of files? i have several files with different codecs, i'd rather not use external tools
12:06  bob2: gandalfcome: what problem are you trying to solve
12:06  mercutio22: bob2: thanks. I keep forgeting
12:06  bob2: Aondo: chardet
12:06  magcius: mercutio22, http://docs.python.org/library/stdtypes#mutable-sequence-types might help
12:06  Aondo: in python 3.1, forgot to mention. still chardet?
12:06  gandalfcome: bob2: i'm not 100% sure what you mean. I'm storing data for a model in a database.
12:06  bob2: Aondo: you may be boned
12:07  Aondo: good to know :P
12:07  bob2: Aondo: 3.x has poorer library and doc support than 2.x, so take that in to account
12:07  Dhiaeldeen: magcius: using an open-source program called blender, the .blend is the project file where i can move the camera, change everything
12:07  Dhiaeldeen: ok
12:07  magcius: Dhiaeldeen, yes, I've worked on Blender before
12:07  nosklo: Aondo: there's no way to reliably detect the encoding.
12:07  nosklo: Aondo: chardet does a guessing job that fails often
12:08  Dhiaeldeen: back to the .??? image format
12:08  Gentle: oh that's a good idea
12:08  Dhiaeldeen: magcius: nosklo did too
12:08  bob2: this isn't a great place to discuss some image format you're inventing
12:08  Dhiaeldeen: bob2: ok
12:08  _ikke_: Dhiaeldeen: Why do you want to define your own image format?
12:08  Gentle: now that unicode is standard everywhere, someone should make a file format with chinese extension :D
12:08  bob2: unicode isn't an encoding either
12:09  nosklo: Dhiaeldeen: invent your own image format doesn't sound like a good idea, at all -- what will your format offer that the current ones won't?
12:09  Dhiaeldeen: _ikke_:
12:09  bob2: gandalfcome: have you read about the doewnsides of pickle?
12:09  Dhiaeldeen: _ikke_: uses my way of compression
12:09  Dhiaeldeen: ok, what to use?
12:09  nosklo: Dhiaeldeen: why? What's wrong with the existing compression?
12:09  nosklo: Dhiaeldeen: what's wrong with, say, png?
12:09  _ikke_: Dhiaeldeen: And you think your way of compression is better than other compressions?
12:09  migmir: Hello #python
12:10  nosklo: migmir: hi
12:10  Dhiaeldeen: nosklo: it is good, but there must be a better way no one thinked of before
12:10  Dhiaeldeen: _ikke_: maybe yes and maybe not
12:10  Belxjander: Dhiaeldeen: compression is not so easy... encryption seems to be a byproduct of thoughts in that direction to me...
12:10  magcius: nosklo, hello?
12:10  gandalfcome: bob2: I have worked with them before and I have noticed about downsides. It's a very simple 2d numpy array
12:11  Belxjander: Dhiaeldeen: Ive got to re-write a project of my own in that direction as well
12:11  magcius: gandalfcome, numpy has its own serialization format. Use that
12:11  _ikke_: Dhiaeldeen: Is it a lossy or lossless compression?
12:11  Dhiaeldeen: _ikke_: loseless
12:12  gandalfcome: magcius: I tried. but it doesnt seem to serialize to strings
12:12  magcius: gandalfcome, it serializes to bytes
12:12  _ikke_: Dhiaeldeen: I think you could first try to test the compression algorithm
12:12  gandalfcome: magcius: it wants a file. thats what I mean
12:12  magcius: gandalfcome, it doesn't need a file
12:12  _ikke_: Try to implement it, and look how much compression you get
12:12  gandalfcome: magcius: i guess you're talking about savez?
12:13  Dhiaeldeen: _ikke_: it is not a way to compress any file, it is a way to compress image files only
12:13  nosklo: Dhiaeldeen: I highly and respectfully doubt your hability to produce a new better compression algorithm, without first exaustively studying existing ones.
12:13  bob2: gandalfcome: declare the column as a blob
12:13  nosklo: ability even
12:13  gandalfcome: bob2: I did.
12:13  _ikke_: Dhiaeldeen: try it with image data then
12:13  bob2: gandalfcome: pastebin the schema
12:13  _ikke_: you won't have to define an image format to compress the image
12:13  Dhiaeldeen: _ikke_: image data = library ?
12:14  Dhiaeldeen: aha
12:14  Dhiaeldeen: ok
12:14  bob2: -> #elsewhere
12:14  _ikke_: Dhiaeldeen: No, imagedata is an uncompressed image
12:14  magcius: _ikke_, it certainly could be an image-specific compression algorithm
12:15  gandalfcome: bob2: http://paste.pocoo.org/show/292516/
12:15  bob2: no need to /msg me
12:15  bob2: but arguing about some format no one has disclosed seems pointless
12:15  gandalfcome: bob2:  I didnt' msg you
12:15  magcius: _ikke_, just like there are video and audio and image and text specific formats already
12:15  _ikke_: magcius: I don't say it isn't possible
12:16  Dhiaeldeen: it was me who /msg bob2 about if i was bothering him with my Question.
12:17  sly007: Hello, I would like to assign some value to variable VAR and do a if VAR=...: on the same line, is that possible ? that would allow me to use il/elif on the same indentation level
12:17  Dhiaeldeen: _ikke_: give me a chance people, as i think, it makes the size smaller but need more time to render
12:17  VladDrac: sly007, assignments are statemens, not expressions
12:17  VladDrac: so you can't use them in an if, while, and so on
12:18  sly007: VAR=myregexp.match(string) if VAR is not None: ....     # else VAR=otherregexp.match(string) ...
12:18  VladDrac: but don't worry, indentation is cheap, if you're running out of spaces I can msg you some ;)
12:19  sly007: i will have to indent on many levels to test against each regex
12:19  Dhiaeldeen: ok
12:19  Dhiaeldeen: so what library to use?
12:19  _ikke_: Dhiaeldeen: I do give you a chance, I just provide some steps you could take
12:20  Dhiaeldeen: ok, why would python be a better language to do this small utility
12:20  Dhiaeldeen: cross platform
12:20  Dhiaeldeen: i heared that C++ is faster than python
12:21  _ikke_: c++ is faster in that regard
12:21  Dhiaeldeen: but the problem is that i know python [Byte of python, some basics you know]
12:21  amitz: 12:26 < dash> i've gotten all my jobs since college from irc. <- Impressive...
12:21  Alberth: sly007: make a list of regexp-sen intead of much code
12:21  _ikke_: Dhiaeldeen: Don't know if this supports what you a re looking for: http://www.pythonware.com/products/pil/
12:22  sly007: Alberth what do you mean my -sen?
12:22  gandalfcome: bob2:  did you have a chance to look at the schema?
12:22  Alberth: sly007: sorry for the confusion, just meaning put all your compiled regular expressions in a list, and iterate over it
12:23  Dhiaeldeen: i think i will clearify things a bit
12:26  Alberth: sly007: http://paste.pocoo.org/show/292519/
12:26  andjew: I've made a package, and if i want to create a directory (~/.mypackagename), and put a couple of config files in there when the package is installed (or before use), is it more appropriate to do so in the setup.py after i've called setup() or put code in my __init__.py to check if the files/directory are in ~/.mypackagename, and if not put them in then?
12:26  Dhiaeldeen: [png image] > [ my program ] > [.ioi] , [Compression]
12:27  Dhiaeldeen: again
12:27  Alberth: andjew: did you consider the case of 1 install, used by several different users?
12:27  andjew: Alberth: i didn't, but I did think that if they deleted ~/.mypackagename then the package would be useless - i guess the end result is the same
12:27  andjew: put it in __init__
12:27  Dhiaeldeen: [png image] > [ my program ] > [.ioi image] , [Compression] ,, [.ioi] > [ my program ] > [.png] , [Decompression]
12:27  andjew: thanks Alberth
12:28  Alberth: andjew: I'd do it as the first function call rather than in an import, but yeah
12:28  Dhiaeldeen: the same png without changing the quality, have a smaller size
12:29  andjew: Alberth: sorry I'm not sure I understand what you mean by having it as the first function call instead of the import
12:29  Dhiaeldeen: another Question, in order to make a test of the program, what language is easier? python isn't it
12:29  Dhiaeldeen: so ok
12:30  _ikke_: Dhiaeldeen: Pythin indeed is quite easy for prototyping
12:30  _ikke_: Python*
12:30  Dhiaeldeen: i think i need to understand some .png format then do my ioi file
12:31  Alberth: andjew: if you put it in __init__.py, that code is executed when you do 'import package'. I'd rather execute code that changes data as a package.ensure_setup() like function call, ie just "import x" does not do magic things.
12:31  Dhiaeldeen: _ikke_: can pil do draw a rectangle in a png file
12:31  Dhiaeldeen: using code
12:32  Alberth: Dhiaeldeen: read the PIL documentation, that is easier and faster to find answers to such questions
12:32  Dhiaeldeen: like a py is written and from many parameters, it exports a .png format with the rectangle
12:32  Dhiaeldeen: Alberth: i asked him to see if he already knew
12:32  Dhiaeldeen: reading
12:33  Alberth: Dhiaeldeen: even if he does, it is still no point in asking that, as you will have to read the docs anyway to write your code.
12:33  _ikke_: Dhiaeldeen: It seems it can: http://www.pythonware.com/library/pil/handbook/index.htm
12:34  Dhiaeldeen: Alberth: _ikke_ yes it can
12:35  Dhiaeldeen: _ikke_: here it is mentioned
12:35  Dhiaeldeen: http://www.pythonware.com/library/pil/handbook/imagedraw.htm
12:37  lyrae: is it faster to insert an element at the beginning or end of a list? my educated guess is end
12:37  Dhiaeldeen: Alberth _ikke_ nosklo bob2 /other readers, if you want to follow the news of this project, this is the newsletter that people can subscribe into > http://3dkernel.com/?page_id=419
12:38  Habbie: lyrae, end
12:38  Alberth: lyrae: yes,  .append() is the recommended way
12:38  lyrae: thanks
12:38  Dhiaeldeen: will update the site as soon as i can
12:38  Dhiaeldeen: so
12:38  Dhiaeldeen: now
12:38  Dhiaeldeen: i will be playing with python a bit
12:38  Dhiaeldeen: thanks all
12:38  Alberth: Dhiaeldeen: stop spamming the channel with commercials about (until now) vaporware
12:38  nelson-: hi guys, if I do an urllib2.urlopen(Url)
12:39  nelson-: is there anyway I can access the contentsize
12:39  nelson-: and the content itself?
12:39  _ikke_: Dhiaeldeen: I'm adding it to my google reader feed
12:39  nelson-: or am I using the wrong library
12:40  screen-x: nelson-: you can call readLines() on the file-like that is returned.
12:41  gandalfcome: Is there any way to put a pickled object into unicode?
12:41  nelson-: perhaps im not making myself clear, what I want is to separate the headers from the real content
12:41  Dhiaeldeen: Alberth: sorry
12:41  Dhiaeldeen: anyways
12:41  Dhiaeldeen: thanks all!
12:41  nelson-: the URL I enter is a image url
12:41  nelson-: and I want to get the content to store the image in my disc
12:44  Dhiaeldeen: i'm teaching python course [covers byte of python+ different stuff] in 60 hours, how much each student should be charged?
12:45  Alberth: gandalfcome: doesn't sound like a useful idea, interpreting random bytes as a string encoded in some font.
12:45  Dhiaeldeen: i think 250$ USD is fine, what price do they charge in USA/Europe
12:45  Dhiaeldeen: ?
12:45  Alberth: gandalfcome: a *much* better alternative for pickle is json btw
12:46  screen-x: nelson-: http://docs.python.org/library/urllib.html#urllib.urlretrieve possibly?
12:46  screen-x: doesn't seem to be in urllib2
12:47  nelson-: screen-x: perhaps this could do it
12:47  nelson-: let me try it
12:48  Dhiaeldeen: ok, which is better to use for the image format Py 2.7 or 3 ??
12:51  nelson-: screen-x: This is exactly what I wanted
12:51  screen-x: :)
12:51  nelson-: :)
12:51  Habbie: Dhiaeldeen, it really really doesn't matter
12:51  nelson-: is there any special reason it isn't in urllib2?
12:51  _ikke_: Dhiaeldeen: You'd better use 2.7
12:51  _ikke_: it has better support
12:51  screen-x: don't know..
12:51  nosklo: nelson-: because it's on urllib
12:52  nelson-: I don't know if they are supposed to complement each other
12:52  Dhiaeldeen: 2.7? is it better supported
12:52  nelson-: so urllib2 exists to complement urllib and not to replace it right?
12:52  Habbie: Dhiaeldeen, it is
12:52  Dhiaeldeen: I see
12:52  nosklo: Dhiaeldeen: it is also the newest version, and has more libraries
13:02  cnf: is there a way to find out the path of a package from within the package?
13:03  TheSheep: cnf: __file__
13:04  cnf: hmm
13:04  cnf: i guess i mis understood __file__
13:04  cnf: i'll go look at the docs
13:04  mintsauce: How do i test for NoneType (as opposed to == None)?
13:04  cnf: TheSheep: is there a similar way to find the path of the calling code from within a package?
13:05  cnf: the original python file where your main() is?
13:05  cbjadwani: cnf: sys.argv[0]
13:06  cnf: cbjadwani: oh, that is availale even in imported modules?
13:06  TheSheep: yes, it's global
13:06  cnf: ahh, interesting
13:06  Habbie: this error looks buggy: ValueError: unsupported format character ''' (0x27) at index 1
13:06  TheSheep: mintsauce: if foo is None: ...
13:06  J_P: Hey, How I do the inverse this: >>> a = -20 & 0xFF; hex(a) => '0xec'. I have '0xec' and would like back to -20.
13:07  Habbie: shouldn't it be using repr to print the offending char ;)
13:07  cnf: cool, so today i remove all my hard coded paths ^^;
13:07  cnf: i'll also have to look at / vs \  on unix vs windows
13:07  cnf: o,O
13:07  Alberth: cnf os.path.join()  :)
13:07  TheSheep: I think I just found a bug, re.split(...) behaves differently than re.compile(...).split(...)
13:08  mintsauce: TheSheep: *forehead+palm* - thanks :)
13:08  margh: is it possible to get a list of all key from a dictonary? so that have an overview of them?
13:08  margh: keys
13:08  cnf: Alberth: oh, does that translate to the current os version on the fly?
13:08  TheSheep: mintsauce: d.keys()
13:08  TheSheep: margh: ^
13:08  Alberth: cnf: yes, it constructs the right(tm) string for every platform
13:08  cnf: oh, that is cool
13:09  margh: TheSheep: Thx very much!
13:09  cnf: and here I was thinking this was going to be hard ^^;
13:09  Alberth: cnf: python never is :p
13:09  TheSheep: cnf: you can also just iterate over d
13:12  cnf: Alberth: indeed ^^;
13:12  cnf: well, mostly :P
13:13  J_P: a = -20; a = a & 0xFF => 236. How is possible back 236 to -20?
13:14  Alberth: no experience, but possibly the struct module
13:14  marcchr: 236 - 256
13:14  marcchr: but the struct module should also work ;)
13:15  punkoff: Is there already a way to quickly convert numeric access mode to RWX-string?
13:15 --- borgenk_ is now known as borgenk
13:15  Alberth: punkoff: you can code it in python, yeah
13:16  punkoff: Alberth, just thought there's some function already
13:16  Alberth: punkoff: a simple one-liner, I think
13:16  J_P: marcchr: why 256 is the 'magical' number?
13:16 --- McGo is now known as McGo|afk
13:16  punkoff: I've f#cked up like that already writing fstab manipulation library myself
13:17  ivan`: J_P: 2^8
13:17  marcchr: J_P: what ivan`said
13:18  J_P: ivan`: 2 bytes ^ 8 bits?
13:18  ivan`: no
13:18  jorrit: J_P, 1 byte is 8 bits and in 8 bits you can fit 256 numbers.
13:18  ivan`: there's only 1 byte and it has 8 bits
13:19  marcchr: J_P: you used 0xff as mask => 8 bits
13:19  J_P: ok, thanks !!
13:20  Alberth: J_P: they meant 2**8 (2 to the power of 8)
13:33  jo-erlend: I download a html file which contains some none-ascii characters. Later, when I try to use that data, I get errors like this one: UnicodeEncodeError: 'ascii' codec can't encode character u'\xa0' in position 6: ordinal not in range(128)
13:34  jo-erlend: what do I have to do to fix this?
13:35  jo-erlend: I've tried to use "open("filename").read().decode("utf-8"), but then I get UnicodeDecodeError: 'utf8' codec can't decode bytes in position 151-155: unsupported Unicode code range
13:36  jhl: jo-erlend: Try using 'latin-1'
13:36  jhl: Instead of 'utf-8'
13:37  jo-erlend: the same errors.
13:38  jhl: jo-erlend: Does the file include any encoding information?
13:39  jo-erlend: like this?     <meta http-equiv='Content-Type' content='text/html; charset=iso-8859-1'>
13:39  jo-erlend: I've tried using "iso-8859-1", but that doesn't work either.
13:40  marcchr: jo-erlend: the decode('iso-8859-1') fails with '...can't decode bytes in position 151-155: unsupported Unicode code range'?
13:40  jhl: jo-erlend: Well, that's latin-1.
13:40  jo-erlend: marcchr, right.
13:41  ivan`: latin-1 decodes anything
13:43  marcchr: ok, I'm not the only one thinking so...
13:43  jhl: jo-erlend: Perhaps the file you downloaded is corrupted, or just lying.
13:43  jo-erlend: hmm. This is strange.... if I do print(list[5]), then it works nicely. If I use print("{0}".format(list[5])), then I get those errors.
13:43  jhl: jo-erlend: Does the page render as expected in a web browser?
13:44  ivan`: jo-erlend: I think you got a different error
13:44  ivan`: one with 'ascii' in it
13:44  jo-erlend: ivan`, yes, as I said before.
13:44  jo-erlend: but why does print(variable) work, but not print("{0}".format(variable)) ?
13:46  marcchr: because print knows the encoding of stdout, but format does not.
13:46  ivan`: because the latter tries to encode to ascii
13:46  ivan`: what marcchr said
13:47  jo-erlend: then how do I use .format in this case?
13:47  ivan`: encode the unicode utf-8 first, or use u"{0}"
13:47  marcchr: u"{0}".format(variable) if variable is a unicode object
13:50  jo-erlend: I don't understand. :(
13:51  ivan`: Python tries to encode your unicode to ascii behind the scenes
13:51  ivan`: print "{0}".format(variable) is basically print "{0}".format(variable.encode('ascii'))
13:51  ivan`: your unicode cannot be encoded to ascii hence the error
13:53  ivan`: http://boodebr.org/main/python/all-about-python-and-unicode
13:55  jo-erlend: thanks :)
13:57  marekw2143: hi, does urllib2.urlopen work with https?
13:57  silv3r_m00n: hi there
13:58  silv3r_m00n: can someone help me with this , I am making a klondike solitaire game , I don't know how to generate the initial layout of cards , I mean which card where ,so that it's a winnable game ...
13:58  marcchr: marekw2143: according to my short test: yes
13:58  Alberth: silv3r_m00n: start with the end situation, then randomly reverse a step
13:59  silv3r_m00n: Alberth: is that how its done in most solitaire softwares ?
13:59  Kulik: I need windows/python 2.6 volunteer(s) to test CEGUI python bindings in a form of a MSI installer (I am a packager noob but it works on this PC)
13:59  Alberth: silv3r_m00n: no idea, never looked at source code of any of them
13:59  silv3r_m00n: I mean the logic , I thought of this , but also thought that I can have presets
14:00  Alberth: silv3r_m00n: but going back from the solution will ensure there is at least one path to the finish.
14:00  marcchr: silv3r_m00n: I think I've had unsolvable klondikes in pysol
14:00  Kulik: I can even supply a test app if you have OpenGL and glut bindings already installed :)
14:02  silv3r_m00n: Alberth: actually if I randomly reverse steps , then if its  a 3 card deal from wastage set , then I think there might occur an un solvable situation
14:05  Alberth: silv3r_m00n: I am sure you have thought about it much longer than I have
14:06  Alberth: silv3r_m00n: maybe you should reconsider your idea of only providing solvable games, assuming you don't stop a user from messing up, he will never know the difference whether it was unsolvable from the start or whether he made a mess :)
14:06  silv3r_m00n: hmm , not a bad idea
14:07  Alberth: and if you simulate 'real-world' solitaire games, I can get unsolvable games by laying out cards too
14:08  jY: I upgraded to python 2.7 but my version of beautifulsoup is the same.. but when i run print type(block.find('span', attrs={"class": "date"})) I get <type 'instance'>  in 2.6 it was a baeutifulsoup class which i could call getText() on to strip the html
14:12  bahamas: jY: so you tried calling getText() and it didn't work?
14:12  jY: bahamas, if i do i get TypeError: 'NoneType' object is not callable
14:13  bahamas: jY: show some code
14:13  jY: if i do print block.find('span', attrs={"class": "date"})  it prints out the html
14:13  jY: sure
14:15  jY: http://www.pastie.org/1305422
14:15  bahamas: jY:  btw, any reason for using beautifulsoup? lxml is faster and actively developed
14:16  jY: ohh didn't know that.. maybe i'll switch
14:18  jY: can lxml get a dom block via a class?
--- Log closed Wed Nov 17 20:28:19 2010
--- Log opened Wed Nov 17 20:28:41 2010
20:28 --- Users 852 nicks [0 ops, 0 halfops, 0 voices, 852 normal]
20:28  regius: Thanks!
20:28  dash: regius: the idea is that you put all your tests in their own subpackage, and use a test runner to run them
20:29  bob2: sqwishy: (I don't know what your real code does, but pointless setters/getters are frowned upon in python)
20:29  dash: regius: like nose or trial
20:30 --- Channel #python was synced in 90 seconds
20:30  sqwishy: bob2: Well I think I needed it to actually do something at some point but the setter isn't even being called so I haven't gotten around to making it meaningful.
20:31  bob2: sqwishy: properties only work on new style classes, so it depends what GameObject inherits from
20:31  papna-work: sqwishy: bob2: properties work on old-style classes.
20:31  bob2: eally?
20:31  dash: papna-work: almost.
20:31  dash: setters don't, IIRC.
20:32  papna-work: bob2: Old-style classes themselves cannot be used to implement the descriptor protocol usefully.
20:32  sqwishy: bob2: I think my problem was just that init wasn't initing the attribute correctly
20:32  regius: Maybe I did not understand everything :-). I just created a file called Tests.py and put all my tastecases in that class (called Test) is that correct?
20:33  bob2: sqwishy: nope
20:33  bob2: setters don't seem to
20:33  bob2: but getters do
20:33  bob2: you learn something knew every day
20:33  bob2: regius: tests.py
20:33  bob2: regius: and you'll probably have lots of classes in that filee
20:33  dash: but starting with one is OK :)
20:33  bob2: true!
20:33  regius:  How do I run the testcases from my main file?
20:33  sherl0ck: dash: can you explain a lil more why it is there? like why is it needed to import correctly? here is the file its trying to import locally http://json-template.googlecode.com/files/jsontemplate.py
20:34  regius: Or do I run my testfile as my mainfile?
20:34  vyrus001: what is the corrent syntax for [if connection = telnetlib.Telnet(arg,PORT): ...]
20:34  vyrus001: ?
20:35  bob2: vyrus001: there is none
20:35  bob2: vyrus001: there's a ternary-like operator though, but you have to provide an else
20:35  vyrus001: thats fine
20:35  bob2: regius: you use a test runner like trial or nose
20:36  bob2: regius: 'nose yourpackage.tests'
20:36  vyrus001: bob2: i just want it to move on the next arg if that one fails
20:36  vyrus001: rather than break down 100%
20:36  bob2: vyrus001: I'd be surprised if that is how Telnet works
20:36  bob2: rather than raising an exception
20:36  LeoAtWork: if i print(long) i should get the configured locale string, right?
20:36  vyrus001: bob2: if i try to connect to a host that does not repond, (i.e. port not open) i get an err and the app stops
20:37  vyrus001: i just want it to skip that host
20:37  bob2: LeoAtWork: no
20:37  KirkMcDonald: LeoAtWork: You will get a string of digits.
20:37  regius: I'm using AptanaStudio, so I guess it is not built in there
20:37  bob2: vyrus001: right, it presumably raises an exception
20:37  bob2: vyrus001: so you probably want a loop and a try/except
20:37  bob2: vyrus001: htpp://bpaste.net/ your code + the traceback
20:38  LeoAtWork: ok im dumb, the right question is: if i print(float) i should get the configured locale string, right?
20:38  bob2: no
20:38  bob2: if you want locale-sensitive formatting you need to use the locale module
20:38 --- arvind_k is now known as arvind_khadri
20:38  cederman_: hello, Ig
20:38  cederman_: oops
20:39  LeoAtWork: that hurts
20:39  vyrus001: bob2: http://bpaste.net/show/11212/
20:39  LeoAtWork: but thanks bob2
20:39  bob2: it is the sensible thing to do, really
20:39  NateW: is there a way to do something like this:
20:40  NateW: variable called testCase and the ability to do something like print(test + Case) ???
20:40  ardian: Hi I have an exercise to get a url from a picture in picasa I have to write a python script to do that any ideas that I can start ?
20:40  sorressean: urllib!
20:40  TheSheep: NateW: use a dict instead
20:40  dash: ardian: sounds good
20:41  regius: Is it common to have the filename in lowercase?
20:41  vyrus001: ardian: look at the image magic libs
20:41  LeoAtWork: bob2: i dont feel that way. if i had a big system i will have to write transformation to everything using locale.
20:41  dash: regius: module names are all lowercase.
20:41  dash: vyrus001: why?
20:41  NateW: TheSheep: how would i use it in a case like that?
20:41  KirkMcDonald: dash: Mostly.
20:41  LeoAtWork: bob2: now i have to track every float i have to transform it to right locale
20:41  vyrus001: dash: why image magic libs?
20:41  dash: vyrus001: yes
20:41  KirkMcDonald: dash: StringIO, Queue...
20:41  KirkMcDonald: Er, no, queue is the module.
20:41  TheSheep: ardian: http://pypi.python.org/pypi?:action=search&term=ocr
20:41  dash: KirkMcDonald: i reject your nuanced, inconsistent reality
20:41  vyrus001: dash: well he said url form a picture in picasa, i assumed he was doing comp vision
20:42  ardian: ok thanks TheSheep
20:42  dash: vyrus001: don't assume :)
20:42  KirkMcDonald: Oh, no, Queue is the module.
20:42  KirkMcDonald: 3.x changed it.
20:42  ardian: It is my first real exercise
20:42  bob2: vyrus001: http://bpaste.net/show/11213/
20:42  cederman_: I'm wondering...how do I only allow digits 0-9, spaces and dash signs in an entry? I guess with regex, but not how =/
20:42  papna-work: Same with StringIO
20:42  papna-work: KirkMcDonald:
20:42  vyrus001: dash: he said "url from a picture" not "url OF a picture"
20:42  bob2: vyrus001: but urllib or httplib is probably what you want
20:42  regius: Do someone know of a good python program that can be a reference how to name and build the program
20:42  KirkMcDonald: papna-work: StringIO was moved to io in 3.x, wasn't it?
20:42  regius: ?
20:42  dash: vyrus001: don't listen to what people say either :)
20:42  sorressean: cederman_:  [0-9 ]
20:42  papna-work: KirkMcDonald: Right, fixing several things wrong with it.
20:43  echoprinter: Anyone know why someone would put eval in front of input? Like this: eval(input("This is a question? "))
20:43  bob2: regius: http://jcalderone.livejournal.com/39794.html
20:43  dash: echoprinter: spite
20:43  KirkMcDonald: echoprinter: Is this Python 3?
20:43  bob2: echoprinter: people are hateful creatures and/or it is a newbie using python 3
20:43  TheSheep: echoprinter: this is doubly wrong
20:43  KirkMcDonald: echoprinter: Because that smells like Python 3.
20:43  cederman_: sorressean: that only means 0 to 9, not dashes, or am I wrong?
20:43  echoprinter: I don't know...I'm just starting out...let me see.
20:43  regius: bob2: Thanks again!
20:43  vyrus001: bob2: lol server error on bpaste
20:43  Juhaz: even url from a picture could mean a comment, or exif metadata or something, therefore, the answer is "what do you mean?"
20:43  bob2: vyrus001: keep trying (and mind the rules)
20:43  sorressean: cederman_:  o, I lied. [0-9 -]
20:44  NateW: TheSheep: how would i use dict in a case like that?
20:44 --- Natch is now known as Natch|
20:44  cederman_: sorressean: Ok, thanks I'm gonna try it out =)
20:44  teratorn: dash: can we have E quasi-string parsers in Python?
20:44  TheSheep: NateW: put your values in a dict instead of variables, and access them by strings
20:44  bob2: LeoAtWork: well you need to forat it anyway
20:44  teratorn: dash: _please_
20:44  bob2: LeoAtWork: so it doesn't seem like a huge burden
20:44  dash: teratorn: sure
20:44  vyrus001: bob2: which rule did i fudge?
20:44  bob2: vyrus001: the first one in the topic!
20:44  teratorn: dash: sweeeet
20:45  dash: teratorn: add 'em to py3ast
20:45  teratorn: that would be fun
20:45  dash: teratorn: just needs parser rules and ast nodes for value/pattern holes
20:45  vyrus001: bob2: oh i see
20:45  vyrus001: heh oops
20:45  vyrus001: dude bpaste is like 100% poof
20:46  cederman_: sorressean: re.search('[0-9 -]', text) doesn't work, I tried using exclamationmarks and it didn't trigger.
20:46  dash: teratorn: i guess a py2ast project would be indicated for that, as well. :)
20:46  bob2: vyrus001: well whatever http://paste.pocoo.org/show/292731/
20:47  bob2: vyrus001: httplib or urllib is probably what you want anyway
20:47  bob2: or to send a Host header
20:47  NateW: TheSheep: cool, found some info on it, thanks
20:48  teratorn: dash: maybe I'll do it at pycon, if I can go
20:48  LeoAtWork: bob2: actually i dont need to format it because im reading it right from database. I just need to write it in a file.  But my regular separator is "," and python always prints "." even with the right locale. now i have to do an ugly  if type(float) str(var).replace() or something like that
20:48  KirkMcDonald: LeoAtWork: locale.format()
20:49  bob2: LeoAtWork: like I said an hour ago, the locale module
20:49  dash: teratorn: yessss
20:49  vyrus001: bob2: few more tweeks and it worked, thank you very much
20:49  bob2: vyrus001: use slicing instead of enumerate + if statements
20:49  echoprinter: all: It was a textbook I was looking at, mainly to pick up some more beginner programming problems...looks like 2nd edition is python 3, but I didn't realize that, sorry...btw, I can't run any of that code, that's f'ed up.
20:49  regius: shy should __init__.py be empty?
20:49  regius: why
20:49  bob2: regius: usually
20:50  vyrus001: bob2: yes httplib would have been better but i need this info supper fast and i made this code from something else that i morphed
20:50  bob2: echoprinter: do you mean "I am using python2 and the code they have produces errors"?
20:51  regius: I used it as my main file. Where do people put there startupfile?
20:52  bob2: like exarkun sugests, your scripts should not be in your package
20:52  bob2: but should just import a function from it and run it
20:54  regius: So I create a mainfile in project/bin that imports from project/package/files.py ?
20:55  bob2: 'from yourpackage.commands import whatever ; whatever()'
20:55  bob2: sort of thing
20:56  Xeross: Hmm I need a bit of program design advice
20:56  TheSheep: Xeross: tentacles!
20:56  Xeross: As I currently keep tending towards using a Singleton to avoid having certain things in every class over and over again
20:57  bob2: false dichotomy yo
20:57  TheSheep: Xeross: why not a mixin?
20:57  bahamas: cederman_: be more specific. what exactly are you trying to do? maybe show some code
20:57  Xeross: TheSheep: as in ?
20:57  bob2: http://glyf.livejournal.com/70684.html
20:57  TheSheep: Xeross: a class containing the common things from which all your classes inherit
20:58  bob2: a mixin with class-state is no better than any other global mutabel state
20:58  bob2: except maybe it'll hide it from people better
20:58  dash: Xeross: what certain things?
20:58  TheSheep: bob2: I didn't say class state
20:58  Xeross: dash: Database, object storage classes, that kind of thing
20:59  bob2: TheSheep: then how does a mixin help?
20:59  dash: Xeross: pass them as arguments to constructors.
20:59  TheSheep: bob2: I assumed that 'certain things' don't have to me shared, just repeated
20:59  TheSheep: to be
21:00  RootLUG: Hi, if I run my code in Eclipse everything is working perfectly but if I launch the code from command line (eg. python synchronize.py) it will give me UnicodeEncodeError: 'ascii' codec can't encode character ... blabla What's wrong? I got # -*- coding: utf-8 -*- in the first line of my source code.
21:00  echoprinter: bob2: Yes, I am using Python 2.6.6 and when I run that line of code it gives me "TypeError: eval() arg 1 must be a string or code object". I take the eval out and it runs.
21:00  bob2: echoprinter: sure, python 2 and 3 are incompatible
21:00  bob2: echoprinter: that's why there is a python 3 instead of a python 2.8
21:00  Xeross: dash: Feels so tedious, and than I end up passing 4-5 things to classes by default :/
21:00  Xeross: dash:  s/feels so/feels a bit
21:01  bob2: RootLUG: http://paste.pocoo.org/ your code
21:01  dash: Xeross: if it's the same 4 or 5 things every time, maybe they should all be attributes of an object that you're passing to things? :)
21:02  Xeross: dash: Hmm than I would end up with self.GlobalStuffThing.UserStore.GetUser() as a function call
21:02  bob2: heh
21:02  bob2: java ftw
21:02  RootLUG: bob2: Here is my code: http://paste.pocoo.org/show/292736/  , XML file is in UTF-8 encoding.
21:02  bob2: RootLUG: and the full exception
21:03  dash: Xeross: neither of these things are bad, compared to using globals
21:03  bob2: RootLUG: (classes should inherit from object rather than nothing btw)
21:03  RootLUG: bob2: here http://paste.pocoo.org/show/292737/
21:03  bob2: RootLUG: and don't use string interpolation to build sql queries :|
21:04  Xeross: dash: iirc the motivation behind not using singletons is so you can instantiate something multiple times, but what if that isn't needed ?
21:04  bob2: RootLUG: which is in fact your problem in this case!
21:04  RootLUG: If I don't use it it will give me an error and prestashop will not display Slovak characters correctly.
21:04  kerio: Xeross: so don't instantiate something multiple times
21:04  TheSheep: Xeross: it is needed sooner or later
21:04  teratorn: sql`SELECT * FROM $db`
21:04  dash: Xeross: It's always needed.
21:04  teratorn: oh wait I forgot python sucks
21:04  dash: teratorn: http://code.google.com/p/python-sqlparse/
21:05  Xeross: I guess it would also fix some of my memory issues that I had to use a hackfix for
21:05  RootLUG: bob2: So the solution is to remove str() ?
21:05  teratorn: dash: nifty
21:05  dash: RootLUG: don't use % on sql strings
21:05  Xeross: It just feels a lot cleaner and easier to use the singletons, so a graceful way to avoid them would be nice, just using them as a member hmm
21:05  bob2: RootLUG: http://paste.pocoo.org/show/292739/
21:05  dash: Xeross: don't trust your feelings
21:06  RootLUG: Why not?
21:06  bob2: RootLUG: change all your queries to look like the ones I changed in sync_manufacturers
21:06  bob2: RootLUG: because it is a terrible habit that lets attackers inject sql in to your db
21:06  dash: bob2: oursql uses ? instead of %s
21:06  bob2: RootLUG: and in this case it is also a bug
21:06  dash: RootLUG: have you heard of 'sql injection'?
21:06  dash: or little Bobby Tables?
21:06  Xeross: dash: Guess I'll use a storage for everything than that I pass around, just figured that Database. seems cleared than something.something.database.something
21:07  dash: Xeross: well i wouldn't write that either
21:07  bob2: RootLUG: since str(i) on a uniocde object tries to convert it using the 'ascii' codec, which fails if the string ever contains a non-ascii character
21:07  dash: Xeross: got some code you can show us?
21:07  RootLUG: dash, Yes, but this only testing code.
21:07  Xeross: dash: Currently using some simple singleton pattern, and project that's now using the singletons is quite big
21:07  bob2: RootLUG: sorry, sync_manufacturers in this http://paste.pocoo.org/show/292741/ paste
21:08  bob2: RootLUG: doing it correctly in python is so simple you might as well always do it right
21:08  dash: Xeross: url?
21:08  dash: RootLUG: testing what?
21:08  Xeross: dash: To the pattern ?
21:08  dash: Xeross: to your code
21:08  NateW: say I had a variable testCase, is it possible to do something like this: print(test+case) ??? it was suggested to me to use a dict object, but is it possible to do this without?
21:08  bob2: RootLUG: and in thsi case your method is actually broken even if you're not being attacked for the reason I mentioned above
21:08  dash: NateW: what would that do?
21:08  bob2: NateW: not really
21:08  Xeross: dash: It's in a non-public repository currently, but I can upload it if you want
21:08  dash: Xeross: aah.
21:08  RootLUG: dash: My friend give me a challenge, if I do the challenge I will have a job :D
21:09  RootLUG: Thanks for help. :)
21:09  dash: RootLUG: if you write code with sql injection problems you will not get the job i hope :)
21:09  bob2: RootLUG: including sql injection vulnerabilities will hopefully mean you fail :)
21:09  Scala: NateW: Are you asking if python has variable variable names?
21:09  Xeross: dash: I probably need to do some refactoring as the code is getting quite messy, I'll put up the main file as that has most of the code in it
21:09  NateW: the ability to use a variable by adding the parts of the name together
21:10  bob2: RootLUG: so the key thing is that execute takes two arguments: one is the sql with placeholders, the second is the args to replace those placeholders with
21:10  Scala: NateW: No, definitely not.  Why would you want/need to do that anyways
21:10  RootLUG: I know, but this is only about Python, he don't believe that I can do more thinks in Python (on server side like mod_python, Zope, Django...) than he can do in PHP.
21:10  locojay: hi is there a better way to fix indentation probs than with expand
21:10  Xeross: dash: http://paste.pocoo.org/show/292742/ that's most of the code
21:10  NateW: it'd be easier to do that, then to recode a program written in python
21:10  locojay: mixed indentations
21:10  NateW: =P
21:11  dash: NateW: why? what are you trying to do?
21:11 --- MrElendig is now known as RedRobot
21:11  dash: locojay: yes
21:11  RootLUG: bob2:Yes, I understand, thanks for help.
21:11  dash: locojay: 1) use your version control tool to tell you who put tabs in your code
21:11  Xeross: dash: 1100 lines in one file, I should start doing some splitting
21:11  dash: locojay: 2) punch, repeatedly
21:11  dash: Xeross: that's not many lines.
21:12  Xeross: dash: Biggest python thing I've wrote so far
21:12  locojay: lol
21:12  Xeross: dash: Still the program design needs improvement
21:12  NateW: dash, probably better to code this properly anyways
21:12  dash: Xeross: wuh oh
21:12  dash: Xeross: 'Foo = Foo()' is a good way to have confusing code
21:13  ssbr_: 1100 lines is enough to get important stuff done.
21:13  bob2: RootLUG: right, but in php it is hard to do coreectly, but in python it is trivial
21:13  bob2: RootLUG: so please just always do it correctly :)
21:13  bob2: plus you have to or your program is fucked
21:13  dash: Xeross: if you need a global instance it's conventional to do 'theFoo = Foo()'
21:13  ssbr_: I have learned recently that both xmonad and pylons have a number of lines of code of about that magnitude :O
21:13  dash: which i am having to do in some code now =/
21:13  Xeross: dash: To make them singletonish I also made singletons.py http://paste.pocoo.org/show/292744/
21:13  bob2: dash: exocet it
21:13  Xeross: dash: But yeah giving them a different name would've been smarter :P
21:13  RootLUG: Heh :)
21:14  dash: bob2: exocet helps but not that much
21:14  Xeross: dash: I really got confused there with singletons and globals, didn't even need it to be singleton, global is enough
21:14  dash: bob2: if you're reassigning the class name to an instance
21:14  dash: Xeross: yeah 'singleton' is a fake idea
21:14  Xeross: dash: Especially in python
21:16  halfie: I am embedding python interpreter in my C code. How do I force it to load a python module from current folder. Currently I do  PyRun_SimpleString("sys.path.append(os.getcwd())"); but this will obviously fail if I change my cwd
21:16  dash: halfie: your program really should not care about cwd.
21:17  halfie: dash: without that code, the program doesn't even load the python modules present in the current folder
21:17  dash: halfie: sure
21:18  dash: halfie: that's not bad.
21:18  dash: halfie: for sanity's sake you should define some specific places to load python code from.
21:18  halfie: http://docs.python.org/extending/embedding.html Example 5.3 fails horribly
21:18  halfie: I see.
21:18  dash: halfie: this is one of the problems of embedding.
21:19  halfie: dash: hmmm ... hard to believe that but it seems to be the case :(
21:19  mordy: i'm using paramiko for ssh.. what's the best way if i want to launch a remote python instance and feed it some code?
21:19  halfie: dash: so I should place my modules in specific folder and then add that path
21:20  dash: halfie: right, this should be defined at compile time probably.
21:20  halfie: dash: sure
21:20  mordy: i'd just be opening some files, basic text processing etc. etc.
21:20  ironfroggy_: can anyone explain why a module might be importable except for when run via mod_wsgi?
21:20  ironfroggy_: I have confirmed that its path is in sys.path just before the point of import, and that i can import it without going through mod_wsgi
21:21  halfie: dash: do you still recommend to spawn python process instead of trying to embed .. (if the problem is simple enough, it is)
21:21  dash: halfie: well, it's way less work :)
21:21  mordy: ironfroggy_: i'm not quite sure, but maybe different python versions?
21:21  mordy: are you getting a specific error?
21:21  halfie: dash: and as long as I keep my API the same, I can use any implementation mechanism ;)
21:22  mordy: don't know anything about mod_wsgi, but i know that mod_perl will croak sometimes if there's a version mismatch
21:22  ironfroggy_: mordy: i have confirmed the same python versions. mod_wsgi is pointed to it, the only python version on the box.
21:22  RootLUG: It's wokring now, thanks.
21:22  plwert: is there a way to tell the difference between receiving input that was piped (echo "foo"|python bar.py) vs input that was input manually by the user (python bar.py; foo)?
21:22  RootLUG: *working
21:22  ironfroggy_: the only error is a vanilla "cannot import name component"
21:23  mordy: plwert: not getting your question at all
21:23  bob2: plwert: istty
21:23  bob2: ironfroggy_: perms?
21:23  mordy: what's the second ";foo" there?
21:24  ironfroggy_: bob2: i just checked those, everything is readable by everyone
21:24  plwert: mordy: user input
21:24  bob2: ironfroggy_: nuclear option is strace'ing httpd -X I guess
21:25  plwert: mordy: bob2's answer seems to be the right way
21:25  mordy: k
21:25  plwert: (http://blog.yjl.im/2010/04/handling-standard-input-in-python.html)
21:25  ironfroggy_: well before that, is there any way to additional debug data from python about why an import failed?
21:25  ssbr_: ironfroggy_: you could run it in verbose mode.
21:25  ssbr_: I don't know how to do that from WSGI though.
21:25  locojay: reindent is great
21:27  dash: ironfroggy_: 'python -vv'? :)
21:28  ironfroggy_: dash: yeah now how do i tell mod_wsgi that?
21:31  mordy: so.. best way to control a python instance over ssh?
21:31  mordy: would be cool if i could just pipe a code object or maybe a pickle object
21:33  papna-work: mordy: Control?
21:34  ironfroggy_: mordy: you can use multiprocess over ssh
21:34  mordy: i just want to run some small command and such on a remote python instance (e.g. i'm logged in to a remote machine using ssh, i want to run a remote python on that machine, maybe to do some simple text processing or maintenance or whatever, and optionally have it return some output)
21:34  dash: mordy: why would that be more cool than just, like, some actual python code
21:35  qwebber: mordy, fabric is a good tool for that kind of stuff
21:36  ironfroggy_: qwebber: not for running python code ON the other machine
21:36  qwebber: ironfroggy_ "Fabric is a simple, Pythonic tool for remote execution and deployment."
21:36  ironfroggy_: have you used fabric?
21:36  qwebber: yes
21:36  mordy: i'm using paramiko already
21:36  gloryfish: Hi all. Can anyone offer any tips for python package management on a Mac? I'm having a terrible time with ImportErrors after installing various modules.
21:36  bob2: i thought fabric was an elaborate ssh for loop thing
21:37  ironfroggy_: because i spend a significant amount of my time with it. everything runs locally, except for remote shell commands.
21:37  ironfroggy_: the actual python is never sent over.
21:37  bob2: gloryfish: possibly you installed them with a different python interpreter to the run you're trying to run them under
21:37  arkanes: I have a pretty great tool for remote execution
21:37  arkanes: his name is ken and he will put any python code I want on any machine
21:37 * bob2 needs a minion
21:37  KirkMcDonald: arkanes: I thought you were going to say "rsync",.
21:37  KirkMcDonald: But a minion is good, too.
21:38  dash: gloryfish: i've only ever used macports
21:38  arkanes: ken is really just a wrapper around rsync
21:38  qwebber: ironfroggy_, theres a bunch of ways to do it, one being sending the code over, and executing the command to run the file
21:38  _julian: how can I count how many different values are in a list? ie for [1, 1, 1, 2, 3] I'd like to get 3
21:38  mordy: i'm using paramiko already and it's quite cool
21:38  arkanes: with an email-based interface and a natural language parser
21:38  mordy: i'm connecting to machines with horrible bandwidth and latency issues
21:38  arkanes: gloryfish: pip works pretty good
21:38  ironfroggy_: _julian: put it in a set and check the length of that
21:38  MiratCanBayrak: i need to clean up some text from characters for example \n \t characters inside it
21:38  dash: _julian: len(set(yourlist)) comes ti mind
--- Log closed Wed Nov 17 21:41:41 2010
--- Log opened Wed Nov 17 21:42:00 2010
21:42 --- Users 854 nicks [0 ops, 0 halfops, 0 voices, 854 normal]
21:42  arkanes: well, sane people
21:42  dash: arkanes: if you have sanity why would you need osx
21:42  arkanes: some people use macports and pretend that Apples python doens't exist
21:42  mordy: qwebber: there's a difference between ssh foo "cat file" | grep foo; and ssh foo "grep foo file"
21:42  arkanes: anything between those 2 poles is pretty much untenable, though
21:42  bob2: wfm
21:42  qwebber: arkanes, probably better off that way
21:42  qwebber: mordy, not in the case of data/bandwidth
21:42  mordy: of course there is
21:43  qwebber: the data youre going to be processing against is still using server bandwidth to get there.
21:43  dash: qwebber: not if it's there already :)
21:43 --- Channel #python was synced in 102 seconds
21:43  mordy: qwebber: in the first case, the entire contents of "file" is being sent to my local side, and then i filter for 'foo' locally
21:43  ironfroggy_: qwebber: not if it comes from the server in the first place
21:43  qwebber: dash ^^ he isnt doing that ;)
21:43  mordy: in the second case, i only get the result of the grep run on the *remote* machine
21:45  mordy: also, in the first one, i would be doing more data processing on the local machine, and just obtain data from the remote host; in the second the remote host does the data processing and returns the result
21:45  qwebber: mordy, ok but how does the data get to the remote host
21:45  mordy: it's *on* it already?
21:45  qwebber: mordy thats what i was looking for :)
21:46  mordy: i'm not clustering or anything
21:51  bsod1: can I use asyncore to listen a socket and update the gui at the same time?
21:51  bsod1: or is it just about listening multiple sockets at the same time
21:51  _habnabit: bsod1, asyncore is terrible. Don't use it.
21:51  _habnabit: bsod1, it also doesn't integrate with GUI event loops, so it's useless for you.
21:52  bsod1: _habnabit: I need a simple solution
21:52  dash: bsod1: twisted is the simplest solution
21:52  dash: asyncore is more complicated.
21:52  _habnabit: bsod1, what dash said.
21:53  bsod1: dash, _habnabit: ok I don't use asyncore but I'm just wondering if I can use asyncore to update my gui and listen a socket at the same time
21:53  _habnabit: 12:51:42 < _habnabit> bsod1, asyncore is terrible. Don't use it.
21:53  _habnabit: 12:51:55 < _habnabit> bsod1, it also doesn't integrate with GUI event loops, so it's useless for you.
21:53  bsod1: :)
21:53  bsod1: ok
21:53  bsod1: so twisted is the simplest solution, right?
21:54  _habnabit: Yep.
21:54  psykidellic: bsod1: Didnt they tell you yet?
21:55  qwebber: ironfroggy_, two ways i could think of it *could* be done, is changing PYTHONVERBOSE or attempting to write to sys.flags.verbose somehow
21:58 --- OpenVMS is now known as \0
21:58 --- \0 is now known as OpenVMS
21:59  qwebber: ironfroggy_, no not possible to change it while its running
22:00  ironfroggy_: yeah i didnt think so. had tried that.
22:00  qwebber: "there's no way to change it while running. it's currently only set while parsing the command line options in main.c, or checking environment variables in Py_InitializeEx (pythonrun.c)"
22:04  bfrog: is it wrong to put tests in the module?
22:04  bfrog: or package I should say
22:04  _habnabit: Nope, that's where should go.
22:04  _habnabit: +they
22:04  ssbr_: bfrog: in what package?
22:04  bfrog: like mypackge/__init__.py mypackage/test/test_somepackagemodule.py for example
22:04  ssbr_: they should be in a separate subpackage
22:05  ssbr_: bfrog: yeah that's decent.
22:05  bfrog: ok but then how do imports work out
22:05  photofroggy: wait, no
22:05  bfrog: do I use absolute or relative imports?
22:05  photofroggy: you'd need
22:05  _habnabit: bfrog, you should be using absolute imports always everywhere.
22:05  photofroggy: oh, for tests
22:05  dash: absolute imports, all the time.
22:05  photofroggy: nvm
22:05  ssbr_: bfrog: expect your package to be installed on the import path
22:05  bfrog: yeah relative imports seem to suck
22:05  bfrog: alot
22:05  ssbr_: bfrog: if you're doing development, just add the project directory to PYTHONPATH
22:05  photofroggy: surely you'd still need another __init__.py inside mypackage/test/?
22:06  mordy: so.. my initial question.. did anyone have any ideas?
22:06  _habnabit: photofroggy, duh
22:06  eggy_: What's up with this? http://paste.pocoo.org/show/292765/
22:06  ssbr_: photofroggy: you don't, actually. But it's probably a good idea.
22:06  bfrog: clearly
22:06  ssbr_: It depends on your test runner.
22:06  photofroggy: _habnabit: yeah but they didn't mention it
22:06  ssbr_: nose doesn't need it, because node works on files, not package hierarchies.
22:06  bfrog: I was more questioning where tests should be parallel to my package or in my package
22:06  photofroggy: ssbr_: so it's different for tests?
22:06  ssbr_: (because node is dumb)
22:06  ssbr_: photofroggy: Yes.
22:06  bfrog: and clearly its supposed to be in the package
22:06  _habnabit: photofroggy, bfrog said 'package'. Packages require __init__.py.
22:06  mordy: a hacky way would be to write some python in a string, make a temporary file, and have it executed
22:06  ssbr_: um
22:06  ssbr_: s/node/nose/
22:06  dash: eggy_: what's "cli"? =/
22:06  mordy: but i don't want that
22:06  KirkMcDonald: eggy_: What does "print obj" say?
22:06  eggy_: dash: a Cython extension module
22:06  eggy_: KirkMcDonald: it prints the object
22:07  eggy_: KirkMcDonald: i.e., "<cli.CreateClosure object at 0x31911d0>"
22:07  KirkMcDonald: eggy_: Does "print obj" say the same thing as just "obj"?
22:07  eggy_: KirkMcDonald: yeah, I could pastebin the class, too
22:07  photofroggy: repr(obj)
22:07  dash: eggy_: what if C is an oldstyle class? :)
22:07  KirkMcDonald: eggy_: Then it implements the descriptor protocol.
22:07  eggy_: (I updated the paste)
22:08  eggy_: KirkMcDonald: oooh
22:08  eggy_: god
22:08  Azul-P: Hi, I'm trying to do a challenge that asks me to create a program that prints a list of words in random order and not repeat any. Here's my code: http://bpaste.net/show/11217/
22:08  eggy_: Why am I so stupid? :(
22:08  Azul-P: But the thing is it doesn't output anything at all D:
22:08  eggy_: dash: KirkMcDonald thanks guys
22:08  Azul-P: Sorry its another painfully newb question D:
22:08  ssbr_: Azul-P: because wordList == last
22:08  ssbr_: Azul-P: is this a homework assignment?
22:08  photofroggy: Azul-P: that's wrong in so many ways
22:08  photofroggy: :P
22:08  Azul-P: ssbr_: No its not.
22:09  ssbr_: Azul-P: then can I give away the "good" answer?
22:09  Azul-P: ssbr_: I bought this book that I'm working through.
22:09  Azul-P: ssbr_: Yes but I'd like to figure out why it works by myself (if I can).
22:09  Buttons840: Azul-P: have you considered random.shuffle?
22:09  Azul-P: photofroggy: I'm aware of that. :[
22:09  bfrog: I've been using nosetest but I'm sort of tired of its antics, I just want to do things myself with unittest I think
22:09  photofroggy: Azul-P: chin up :P
22:09  ssbr_: Buttons840: stop giving it away
22:10  Azul-P: Buttons840: Nope. Hasn't been introduced in the book.
22:10  ssbr_: Azul-P: random.shuffle is what I was going to suggest. It makes the solution a one-liner
22:10  Azul-P: ssbr_: Oh okay. Let me try it.
22:10  resc: hi, In Sphinx, is there a way to exclude some content depending on the builder?  Like have no index if using singlehtml
22:10  Buttons840: what book is this?  i question any book which contains code similar to what your working on?
22:10  dash: here's what you get if you don't use random.shuffle: http://www.codinghorror.com/blog/2007/12/the-danger-of-naivete.html
22:10  Azul-P: Cool it works! Thanks guys.
22:11  Azul-P: Michael Dawson's Python Programing for the Absolute Beginner
22:11  Azul-P: 2nd Edition.
22:11  megabraker: hello and good morning
22:11  megabraker: guys how to remove some pages from an existing pdf file?
22:13  megabraker: pleeeeeeeeeeeeeeese help
22:13  Buttons840: it usually takes at least 65 e's to get any good help around here
22:14  photofroggy: megabraker: you might be in the wrong place
22:14  megabraker: i think i need to read only the pages i want then write it in onother new pdf file
22:14  photofroggy: uh...
22:14  photofroggy: if you store the pages in a list
22:14  resc: megabraker, do you have lots of files or only one
22:15  photofroggy: you can do pages.pop(index)
22:15  megabraker: nn this is the right place i am eve helping myself lol
22:15  photofroggy: but that would be awkward to keep track of
22:16  photofroggy: unless you sorted the page numbers you want to get rid of in descending order
22:16  trampel: megabraker: don't know where you should be, but:  pdftk
22:16  megabraker: ok thx
22:17  photofroggy: rem = [9, 5, 1]; for i in rem: pages.pop(i)
22:17  photofroggy: or something
22:17  photofroggy: idk
22:17  photofroggy: pdftk might be a better idea
22:19  qwebber: how can you make optparse.OptionParser return -h if sys.argv[1] is empty?
22:20  dash: probably you don't
22:20  qwebber: dash, hmn if you pass in no options, then nothing happens
22:20  resc: qwebber, the usual way is to run parser.usage() then sys.exit
22:20  KirkMcDonald: qwebber: You can call parser.error()
22:20  KirkMcDonald: resc: error() is basically that.
22:20  dash: qwebber: so change it to do something if no options are passed in.
22:20  resc: KirkMcDonald, yeah, that's better
22:20  KirkMcDonald: But you pass an error message to it.
22:20  qwebber: KirkMcDonald, perfect - thank you :)
22:20  KirkMcDonald: parser.error("blah option is required")
22:21  qwebber: KirkMcDonald, yeah that works quite well. ty
22:23  sako: hey guys, anyone know how to get Text in <a href="#">Text</a> using BeautifulSoup?
22:23  bfrog: I asked this before but I think most people were sleeping, how can I lazily import subpackages of a package?
22:24  KirkMcDonald: bfrog: How lazy?
22:24  dash: bfrog: "lazily"? just import 'em when you need 'em
22:24  qwebber: bfrog, not advised, but from x import *
22:24  VladDrac: bfrog, import foo; foo.bar, foo.blah, foo.this?
22:24  dash: qwebber: No.
22:24  qwebber: dash, which part
22:24  dash: qwebber: don't recommend things that are a bad idea.
22:24  dash: qwebber: Also, it doesn't work.
22:24  bfrog: well, lazily and by string
22:24  dash: bfrog: why?
22:24  dash: sako: hmm, i only remember how to do it for lxml.html
22:25  bfrog: I guess actually, it doesn't matter
22:25  bfrog: but it would be nice in my instance
22:26  dash: why?
22:27  kosh: sometimes I wish that from foo import * generated some huge warning message in python
22:27  bfrog: yeah * is evil
22:27  bfrog: I can agree to that one
22:28  dash: kosh: i think there's still time
22:28  dash: it can be deprecated in 2.8
22:28  papna-work: kosh: If we're wishing, you're aiming a bit low.
22:29  grindhold: does anyone know how i can accomplish a gtk.gdk.Pixbuf and text in one column of a gtk.TreeView?
22:29  Juhaz: you just pack more than one cellrenderer into the column
--- Log closed Wed Nov 17 22:35:34 2010
--- Log opened Wed Nov 17 22:35:43 2010
22:35 --- Users 851 nicks [0 ops, 0 halfops, 0 voices, 851 normal]
22:35  infobob: http://paste.pound-python.org/show/81/ (repasted for istinspring)
22:36  Yhg1s: istinspring: 'if y == None: y = 1'
22:36  KirkMcDonald: istinspring: Are you running out of lines?
22:36  resc: mordy, have you seen python fabric?  it's a nice abstraction layer for doing python things over ssh
22:36  istinspring: no but if function is simple it will be better to write that in one line
22:36  KirkMcDonald: istinspring: Why?
22:36  Yhg1s: nope, it won't.
22:36  mordy: resc: again.. i'm wanting to execute python on the *remote* machine. and i'm already using paramiko to make the ssh connection and handle things on the client/controlling end
22:36  papna-work: istinspring: http://paste.pound-python.org/show/82/
22:37  resc: mordy, ok
22:37  Yhg1s: it'll be much more obvious to have it on two lines.
22:37 --- Channel #python was synced in 90 seconds
22:37  Yhg1s: papna-work: the last one doesn't do the same thing, though.
22:37  psykidellic: Isnt: if y is None: more suggested?
22:37  papna-work: Yhg1s: Indeed.
22:37  Yhg1s: psykidellic: yes, it's what papna-work suggested as well.
22:37  Yhg1s: that also doesn't quite do the same thing, but is usually what the author intends.
22:37 * psykidellic did not see that paste
22:38  papna-work: istinspring: I have a file with a few million lines I can send you if you're running out.
22:38  istinspring: haha =) i found solution lambda x, y: x * (y if y is not None else 1)
22:38  dash: mordy: so, yes
22:38  dash: mordy: just send some python code over the wire
22:39  Yhg1s: istinspring: yes, do that if you want people to puke when they see your code.
22:39  psykidellic: I hope istinspring was sarcastic.
22:39  hanstech: Hi, can i dynamically import a module using import ?
22:39  papna-work: hanstech: that's the only thing it does.
22:39  dash: hanstech: sure.
22:39  istinspring: yea they will think - "What the smart guy. he's pro"
22:39  KirkMcDonald: hanstech: "Dynamic" in what sense?
22:39  dash: istinspring: no
22:39  Jax: evening. i'm looking for a way to get the number of bits that are 1 for an integer. so for the number 11 which is binary 1011 i want a list [0,1,3]
22:39  papna-work: hanstech: If you mean "import from a string name", no, you can't do that with import
22:39  dash: istinspring: they will think "why did he write that awful hack"
22:39  istinspring: hello dash
22:40  KirkMcDonald: Jax: That sounds like an interview question.
22:40  papna-work: hanstech: What do you need to do exactly?
22:40  hanstech: Ok,. i tried it but it is not working for me. I will post the code
22:40  dash: istinspring: i am already thinking that.
22:40  dash: Jax: why?
22:40  Jax: KirkMcDonald happy it sounds like i thought about it before asking it :D
22:40  KirkMcDonald: Jax: Well, Python has bitwise operators.
22:40  Jax: dash, i'm remapping some graph nodes which are labelled with integers, back to the single elements which are represented as the bits (1,2,4,8,...)
22:41  Jax: so 3 should map to 1 and 2
22:41  dash: Jax: umm
22:41  papna-work: Jax: Learn about << and &
22:41  dash: what's this for? this sounds like trickery best not done in python :)
22:42  mordy: so how? just embed a string? :(
22:42  mordy: i suppose..
22:42 --- luist_ is now known as luist
22:42  Jax: generating huge lattices (Hasse Diagrams)
22:42  dash: mordy: or have a separate file
22:42  dash: mordy: either way.
22:43  hanstech: papna-work: I want to load a module depending upon the value of a variable
22:43  hanstech: my code is here
22:43  hanstech: http://bpaste.net/show/11219/
22:43  mordy: hrrm..
22:43  dash: Jax: you always do the weirdest stuff
22:43  dash: hanstech: why not import both?
22:43  mordy: i'm trying to avoid either.. is there something that might be able to print out the definition of a function as a string, maybe?
22:44  mordy: it's nasty, especially wiht all the indentation too
22:44  Jax: dash, it's not really weird.. it's just that generating powersets can eat your RAM ;)
22:44  dash: mordy: no, that's not something that makes sense
22:44  dash: mordy: why are you trying to avoid them?
22:44  papna-work: hanstech: Why don't you http://bpaste.net/show/11220/
22:45  papna-work: hanstech: Also, inherit object rather than nothing so you're using new-style classes
22:45  mordy: it's nasty and makes things unreadable and difficult to follow
22:45  mordy: and difficult to maintain
22:46  Jax: papna-work i know how those work.. i just did something like this: value = 11; bits = []; while value != 0: bits += [i & 1]; i = i >> 1; bits.reverse()
22:46  Jax: which gives me [1, 0, 1, 1]
22:46  Jax: but i would rather just get [1, 2, 4] back so i can fetch those indices from my original mapping dict again
22:47  papna-work: Jax: += for lists should be shot. Never ever use it.
22:47  papna-work: Jax: Lists have an append method.
22:47  papna-work: Jax: Also, the use of lists isn't advised to deal with bits like this.
22:47  Jax: well, that's why I'm here.
22:48  Jax: sorry, replace the i's with value of courrse
22:48  KirkMcDonald: i = 1; bits = []; while i < value: bits.append(i & value); i *= 2
22:48  KirkMcDonald: Or something like that.
22:48  KirkMcDonald: Oh, I think that should be i <= value
22:49  KirkMcDonald: Then you'll want to reverse it.
22:50  Yhg1s: KirkMcDonald: well, he wants the number of the bit, not the value of it.
22:50  KirkMcDonald: Ah so.
22:50  papna-work: Jax: http://codepad.org/P6byxkol
22:51  papna-work: Also, you'd usually *use* this information without needing this as numbers by using bitwise operations.
22:51  KirkMcDonald: i = 1; bits = []; while 1 << i <= value: bits.append((1 << i) & value); i += 1
22:52  Jax: papna-work well i stored my initial values like map_dict = {}; for element in elements: map_dict[pow(2,i)] = element; i += 1
22:53  Wild_Cat: why are you guys reimplementing [int(i) for i in bin(value)]?
22:54  papna-work: Wild_Cat: Your thing does something different. (Including raising ValueError)
--- Log closed Wed Nov 17 22:55:49 2010
--- Log opened Wed Nov 17 22:56:16 2010
22:56 --- Users 839 nicks [0 ops, 0 halfops, 0 voices, 839 normal]
22:56  Wild_Cat: papna-work: well, yeah, bin() remains the easiest way to get the binary representation of an integer.
22:56  papna-work: Wild_Cat: Our methods are more subtley error prone and has l33t roz0rz power.
22:57  KirkMcDonald: Wild_Cat: Except that an integer is already in base 2.
22:57  papna-work: Wild_Cat: Not really.
22:57  ssbr_: Wild_Cat: {!b} is easier
22:57  qwebber: easiest to type
22:57  ssbr_: no nasty slicing
22:57  Jax: ah yeah, something was weird papna-work... shouldn't that return 1,2,4 though? insteadof 0,1,3 ?
22:57  KirkMcDonald: (Well, not really. An integer isn't in any base.)
22:57  hanstech: papna-work: so in the functions what i should import ?
22:57  papna-work: Jax: Indices go 0, 1, 2, 3.... not 1, 2, 3, 4.....
22:57 --- Channel #python was synced in 96 seconds
22:57  papna-work: hanstech: Your imports should all be at the top of the file.
22:57  Jax: i got dict keys with pow(2,i) though ;)
22:58  Jax: but guess i could transform them to what you have, might be easier
22:58  papna-work: Jax: Then do itertools.count(1)
22:58  ssbr_: I did the format string wrong :(
22:58  ssbr_: man how do format strings work again...
22:59  KirkMcDonald: ssbr_: s/!/:/
22:59  ardian: Can somone give me a urllib2 example ?
22:59  ssbr_: Ah, that does it.
23:00  qwebber: ardian, import urllib2; urllib2.urlopen('http://yahoo.com').read()
23:00  ardian: thanks qwebber
23:02  Jax: thanks guys
23:07  qwebber: what can i use to go up a directory from cwd?
23:08  KirkMcDonald: qwebber: ..
23:08  hanstech: papna-work: yes. But in that case how can call the respective classes
23:08  KirkMcDonald: qwebber: Assuming you're talking about a file path.
23:08  jpvoip: Hello, im trying to user py2exe, but when i executed the generated .exe file i receive this error: www.bpaste.net/show/11216   how can i fix this?
23:08  qwebber: KirkMcDonald, eh shouldve been more specific. im attempting to read a config file from 2 directories behind me
23:09  hanstech: I want to create an object like listener=WheelConnector()
23:09  KirkMcDonald: qwebber: Okay.
23:09  qwebber: KirkMcDonald, still .. ?
23:09  papna-work: hanstech: Give them names or store them in a dict or list.
23:09  KirkMcDonald: qwebber: ../..
23:09  qwebber: KirkMcDonald, heh thank you
23:09  istinspring: oh mighty spirit of #python give me advice and save me on my path. what libs should i use to work with twitter? what is good?
23:09  KirkMcDonald: qwebber: It's also important to be clear as to what you're being relative to.
23:09  papna-work: hanstech: For example, you can do "from foo import bar as x" and "from baz import bar as y", then talk about "x" or "y" with no importing in the methods at all.
23:09  istinspring: because there is tons of it
23:09  KirkMcDonald: istinspring: I've used python-twitter, and it works.
23:10  qwebber: KirkMcDonald, right - thats one of the problems im trying to wrap my head around
23:10  KirkMcDonald: qwebber: Are you being relative to the cwd? Or are you being relative to your Python script?
23:10  qwebber: KirkMcDonald, i have /data and /tests   inside of /tests are subfolders organized by component
23:10  qwebber: KirkMcDonald, so im attempting so import a config from /data/ for use in /tests/Component_1/test_foo.py
23:10  KirkMcDonald: Hint: Config files are basically never relative to the cwd.
23:11  KirkMcDonald: qwebber: So that's relative to the Python file.
23:12  KirkMcDonald: qwebber: You can use __file__ inside of any Python file to find its location, then os.path.dirname() to get that directory, then e.g.: os.path.normpath(os.path.join(dir, '../../data'))
23:13  istinspring: KirkMcDonald : thanks
23:13  qwebber: KirkMcDonald, genius. thanks
23:13  bob2: qwebber: the code I gave you should work for that too
--- Log closed Thu Nov 18 08:46:38 2010
