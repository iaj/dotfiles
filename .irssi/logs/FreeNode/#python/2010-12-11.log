--- Log opened Sat Dec 11 00:52:09 2010
00:52 --- Users 748 nicks [0 ops, 0 halfops, 0 voices, 748 normal]
00:52  dash: ajmilazzo: why do you need to "go through" anything?
00:52  ajmilazzo: as in the irc room because u had a question on c
00:52  dash: ajmilazzo: just create a dict
00:52  dash: ajmilazzo: he doesn't have a question about C.
00:52  piotr: ajmilazzo: maybe locals()['cmd_%s()' % a]() ?
00:52  dash: piotr: No, never ever.
00:52  dash: locals is not a thing to call.
00:52  piotr: why?
00:53  dash: piotr: because there's always better ways to do stuff.
00:53 --- elpargo_ is now known as elpargo
00:53 --- Channel #python was synced in 90 seconds
00:53  ajmilazzo: dash: http://paste.pocoo.org/show/303353/
00:53  engla: that's amazing code in one line hehe bad Python, piotr
00:54  piotr: it works
00:54  engla: it's not robust
00:54  dash: piotr: 'works' is not enough.
00:54  piotr: how would you do it? why is not robust?
00:54  engla: the convulsions in your body tells you something is wrong about it
00:54  dash: piotr: because it leads to hard to read code
00:55  dash: engla: whatever, totally a learned reaction
00:55  piotr: then, propose something better
00:55  dash: piotr: i did.
00:55  ajmilazzo: piotr: there is a threading module
00:55  dash: ajmilazzo: what's that got to do with it
00:55  ssbr: mnerf. Is there a way in SQLA to have integers with constraints on their values, enforced by SQLA?
00:56  ssbr: e.g. if I want an int between 1 and 50 inclusive
00:56  ajmilazzo: dash: wow i am reading things wrong. maybe i should get more sleep
00:57  ajmilazzo: dash: but first i want to solve this problem with the string -> function
00:57  dash: ajmilazzo: yes! create a dict mapping strings to functions
00:57  andre_pl: is there a module/function that will automatically replace smart-quotes and other common unicode characters with their plain ascii equivalents?
00:57  dash: ajmilazzo: {"cmd_print": yourprintfunction}, etc
00:57  ajmilazzo: dash: *facepalm*
00:57  ajmilazzo: dash: it needs to be dynamic
00:58  dash: ajmilazzo: what does "dynamic" mean?
00:58  ajmilazzo: dash: like it needs to get 'yourprintfunction' from os.listdir
00:58  dash: ajmilazzo: what?
00:58  ajmilazzo: dash: http://paste.pocoo.org/show/303353/
00:58  dash: os.listdir doesn't print anything
00:59  dash: ajmilazzo: why do you keep pasting that url?
00:59  ajmilazzo: dash: thats the pastebin
00:59  dash: ajmilazzo: i know it's a pastebin
00:59  ij: http://sprunge.us/fZGb <-- I can't understand.
00:59  dash: i'm quite familiar with that pastebin.
00:59  ajmilazzo: line 17 is the problem
01:00  dash: ij: well first, never use 'import *'
01:00  dash: ij: second, you have a syntax error, probably on the previous line
01:00  Kzim: i don't understand why i have a symtaxe eror line 14 :( http://pastie.org/1366851 i'm noob :(
01:00  ij: Tell me what's wrong with import *.
01:00  dash: ij: makes your code unreadable
01:01  jeshyr: Kzim: Your fclose needs a closing bracket ()
01:01  ajmilazzo: ij: sometimes the functions in modules clash with existing ones
01:01  dash: ij: you can't tell by reading a module what names have been imported into it
01:01  jeshyr: Kzim: on line 12
01:02  Kzim: jeshyr: damn why does he ot tell me line 12 :(
01:02  Kzim: thx sory
01:02  ajmilazzo: dash: did you see how on line 17 is commands.b.main? b is a variable that needs to go there
01:02  htoothrot: ij, the syntax error is probably just above that def.. similar to kzim's problem
01:02  ij: htoothrot, I found it.
01:02  ij: Very silly. :]
01:02  dash: ajmilazzo: i think you want http://launchpad.net/modules
01:03  dash: aka twisted.python.modules
01:06  ChrisMorgan: With "old" string formatting, I can do '%(foo bar)s' % {'foo bar': 'baz'}, but with str.format I can't think of any way to do that - it's become impossible to have a key with spaces (or dashes, or numbers without using *args, etc.), I presume? Or is there some way of giving it a dict which I don't know about?
01:07  dash: ChrisMorgan: why use str.format, then? :)
01:08  Withoutaname: what about a parent directory?
01:08  ChrisMorgan: I dunno.  I don't really understand why str.format has been put forwards as what "should" be used, I don't have any problems with %s myself... I was just thinking it might in this one instance be neater to have {foo bar} than %(foo bar)s.
01:08  dash: Withoutaname: Hmm?
01:09  Withoutaname: dash, I finally was able to import files from subdirectories, but now I can't import from parent directories
01:10  Withoutaname: like importing X into Y files
01:10  dash: Withoutaname: exactly the same
01:10  dash: 'from X import stuff'
01:10  Withoutaname: ok
01:10  pedro3005: I'm trying several python modules to play WAV and I can't get any of them to work
01:10  pedro3005: well, tksnack worked but I want something non-blocking
01:11  pedro3005: anyone know a good one?
01:12  ChrisMorgan: pedro3005: you could need an audio thread.
01:12  ChrisMorgan: pygame has some sound support.  No idea how good it is, but it's probably worth having a look at.
01:13  pedro3005: I tried pygame
01:13  jeshyr: Kzim:  Any time you get an error message you should look back several lines, because compilers often don't realize until some lines too late that something is wrong.
01:13  MostAwesomeDude: pedro3005: What are you working on?
01:13  pedro3005: not sure if I'm doing it right, but what I tried didn't work
01:13  pedro3005: MostAwesomeDude, I want to make a program that plays certain files according to input (a string)
01:13  Kzim: jeshyr: thanks
01:14  MostAwesomeDude: pedro3005: Ah, a music player. Thread your sound using a C library (pygame's a good call) and then call into it to control it.
01:14  MostAwesomeDude: pedro3005: Pygame should work; you may be Doin' It Wrong.
01:14  Withoutaname: dash, it doesn't seem to work
01:14  pedro3005: MostAwesomeDude, I'll check the docs; thanks
01:15  PKKid: Hey, Im kind of a noob when it comes to building things from source.  Is anyone around that I can ping install questions off?  Im basically trying to install Python2.7 to Ubuntu 9.10 & 10.04.  It's not in apt.
01:15  Withoutaname: I tried from X import X-module, but it says X does not exist as a module
01:15  PKKid: I guess my basic question is, do I just run "./configure" then "make".  Then move the output to where I want?
01:15  dash: PKKid: why do you need 2.7?
01:15  _habnabit: alex_buie, sup bro
01:15  dash: Withoutaname: is X a python package?
01:15  Withoutaname: It's a folder
01:15  alex_buie: _habnabit: hey there
01:16  Withoutaname: C:\X
01:16  PKKid: dash, There are minor library changes here and there that I just want. :)
01:16  dash: Withoutaname: yes but is it a python package
01:16  dash: PKKid: configure, make, make install
01:16  alex_buie: Also, there are a lot of initial underscore people here
01:16  dash: PKKid: remember that configure takes a --prefix arg
01:16  _habnabit: PKKid, you should probably do --prefix=$HOME/.local
01:16  Withoutaname: sorry, I don't know what a python package is
01:16  ij: Where's the python 3 socket reference?
01:16  Withoutaname: if you mean it is full of python files, yes
01:16  dash: Withoutaname: ok, go read the part about modules and packages in the python tutorial
01:17  dash: ij: it's pretty much the same as in python 2
01:17  dash: ij: which is pretty much the same as this: http://www.amazon.com/dp/0131411551/
01:17  PKKid: dash, Would I want it to be "/usr/lib/python2.7" to sit right next to the other installations?
01:18  dash: ij: if you want to use the socket module directly, that is the book to read
01:18  dash: PKKid: I don't know what you want.
01:18  _habnabit: PKKid, no; you don't really want to touch /usr without using a package manager.
01:18  _habnabit: PKKid, either install to ~/.local, use epkg, or hell, both.
01:18  ij: dash, I know how to network. It's just that my script is whining.
01:18  ij: Old script.
01:18  dash: ij: how old? :)
01:18  PKKid: I want this to be available to other users besides me
01:18  _habnabit: ij, 2.x and 3.x aren't the same.
01:18  _habnabit: PKKid, then use epkg.
01:19  PKKid: I'll go read up on that, thanks
01:19  _habnabit: PKKid, and use /opt/local or something.
01:19  ij: dash, 2.7-old.
01:19  _habnabit: ij, you have to use 2to3 and/or manually fix 2.x programs before they can run on 3.x.
01:19  ajmilazzo: dash: ended up using eval()
01:20  dash: ij: yeah, don't expect it to work
01:20  dash: ajmilazzo: Don't use eval.
01:20  _habnabit: ajmilazzo, ew.
01:20  dash: ajmilazzo: That's never the right answer.
01:20  ajmilazzo: there was nothing else i could do
01:20  dash: eval is for when you want to run code a user typed in.
01:20  dash: ajmilazzo: Sure there was.
01:20  bz: is there a parser that does rst to html? i find docutils.core.publish_parts kinda slow..
01:20  _habnabit: ajmilazzo, there's exactly one time that eval is used: when someone doesn't know enough about python to understand the alternatives.
01:20  ajmilazzo: _habnabit: :(
01:21  licensed: i would like to know how i can to save image from http link on my hard disk?
01:21  _habnabit: licensed, urllib.urlretreive
01:21  PKKid: _habnabit, thanks
01:21  licensed: _habnabit, thank you, i will to try
01:22  PKKid: Some day I need to understand what is the difference between /lib /local /etc/
01:22  ij: dash, Well that was helpful.
01:22  ij: So I'll guess I'll write it in ruby.
01:23  _habnabit: ij, why bother? Just ignore 3.x.
01:23  shurane: are there simple time classes, like if I just want year, month,day,hour, and minute?
01:23  _habnabit: shurane, datetime module
01:23  dash: ij: did somebody delete your 2.7 install?
01:23  ij: It's still there.
01:23  ij: It's going to break eventually.
01:23  shurane: well i mean, can I just remove some of the fields?
01:23  dash: ij: when?
01:23  shurane: Er, I only want some of the information, that is.
01:23 --- elpargo_ is now known as elpargo
01:24  dash: shurane: you can ignore the others, sure.
01:24  _habnabit: shurane, 'remove' them now?
01:24  dash: ij: 2.7 isn't going away
01:24  _habnabit: ij, what, as in "it will someday become deprecated" ?
01:24  bz: to clarify: i'm writing a small inventory application that stores item documentation in the database. wanted the documents to be searchable, so i'm leaning on storing it in rst. each page retrieves the rst text, converts it to html, and whacks it out to the client. ignoring caching for now, i'm getting 200-ish ms load times, 150 of which is spent inside the publish_parts call. any thoughts, suggestions? should ieven be using rst for this?
01:24  _habnabit: ij, so will 3.x.
01:25  _habnabit: (3.x maybe even sooner than 2.7!)
01:25  shurane: Nevermind.
01:27  ij: So I should assume there will never be 3.x. Okay.
01:27  dash: ij: well, there is a 3.x.
01:28  dash: ij: but it's not compatible with 2.x
01:28  dash: ij: and 2.7 isn't going away in the forseeable future
01:28  pedro3005: MostAwesomeDude, http://paste.pocoo.org/show/303362/
01:28  dash: ij: neither is 3.x, they're going to coexist side by side
01:28  ij: Well I'm not going to make it stay, that's why I'd like to write everything I've got in 3.x.
01:29  dash: ij: some people want one or the other to go away. right now those are just wishes, unrelated to reality.
01:29  dash: ij: Okay.
01:30  ij: So. Where's py3 socket reference?
01:30  ij: .send doesn't take string anymore.
01:30  MostAwesomeDude: ij: Write it for Python 2, and make sure that 2to3 works.
01:30  _habnabit: .send always took bytes.
01:30  dash: ij: in the python 3 library docs
01:30  _habnabit: But you likely don't want .send anyway.
01:30  _habnabit: Unless you're writing a full event loop.
01:31  MostAwesomeDude: pedro3005: I haven't done Pygame for a while, sorry. Maybe #pygame?
01:31  pedro3005: MostAwesomeDude, I'll try
01:31  pedro3005: thank you
01:36  ij: dash, And where exactly is it?
01:38  dash: ij: somewhere on docs.python.org
01:39  dash: i don't remember the url.
01:46  ryanprior: I'm doing some heavy number crunching with Python and I've got a quad-core machine. I've heard that there are some major pitfalls to Python multi-processing -- what should I read so that I can approach this the smart way?
01:46  dash: ryanprior: python's great at multiprocessing
01:46  dash: there is even a module named that in the stdlib. :)
01:47  ryanprior: dash: sure, but I've read repeatedly that there are pitfalls, and I'm not a multiprocessing expert, so I thought I'd just shout out for any pro tips. =D
01:48  ajmilazzo: i have a weird tuple thing. if i do myfunction(None) and myfunction takes (*args) i can do print args[0][0][0] and it will still print something like ('foo', )
01:48  ajmilazzo: how can i check if None was entered into (*args)
01:49  ajmilazzo: ?
01:49  _habnabit: ajmilazzo, yeah uh that's not what happens when you pass None.
01:49  _habnabit: ajmilazzo, pastebin your code.
01:50  dash: ryanprior: There aren't
01:50  dash: ryanprior: i mean, other than that multiprocessing uses pickle
01:50  dash: ryanprior: but there's systems like ampoule if that proves to be difficult
01:50  _habnabit: dash, that's a pretty big thing
01:50  ajmilazzo: _habnabit: its kind of complicated to paste, the output is from about 3 different files, one of them being over 100 lines
01:50  _habnabit: ajmilazzo, so make a test case.
01:50  ajmilazzo: _habnabit: ok brb
01:52  ryanprior: dash: well, forging onwards then.
01:52  ajmilazzo: i did a test case and None is true
01:52  _habnabit: what
01:52  ajmilazzo: when i pass None to *args
01:53  ajmilazzo: but in mine it doesn't print None even when thats what i pass to *args
01:53  _habnabit: Then args is (None,) and a non-empty tuple is logically true.
01:53  ajmilazzo: but mine is like something from another peice of the code
01:53  ajmilazzo: REALLY hard to explain
01:54  ssbr: pyramid is really pissing me off. :/
01:54  ssbr: It has no eye to security at all.
01:54  dash: ryanprior: there's an extra wrinkle wrt using _threads_ in python
01:54  dash: ryanprior: but multiprocess stuff works fine
01:54  ssbr: Doesn't come with password hashing stuff, and the example code stores passwords in plaintext. *does* come with session handling code, but even they admit that the session handling code is insecure
01:55  ssbr: what do people do to write secure code in pyramid? reinvent the wheel everywhere? :(
01:55  ajmilazzo: _habnabit: http://paste.pocoo.org/show/303368/
01:56  barnaby_b: I'm not sure where I'm missing something in my pythonpath to cause import errors in Eclipse. If anyone could take a quick look: I posted pictures here:  http://ubuntuforums.org/showthread.php?p=10224469
02:02  shurane: Hm, I'm sure I'm doing this wrong. I have a class variable that I want to check from a function. Currently, I'm doing Flight.__hasattribute__(Flight,'fields'), but I'm guessing there's a better way to do it. Any ideas?
02:02  _habnabit: aaaaaa
02:02  _habnabit: shurane, the better way is to not be unsure.
02:03  shurane: I thought classes had dictionaries, so I could go Flight['fields']
02:03  _habnabit: shurane, why don't you know if the attribute is set?
02:03  shurane: Haha, well different classes will have a different number of attributes, and I'll be using it for more than one.
02:03  _habnabit: That doesn't answer my question.
02:04  shurane: Hm, well if I'm sent a class that doesn't have this particular field, I want to throw an Exception, so I can enforce this rule.
02:04  shurane: I'm hoping that makes sense; I'm pretty bad with descriptions.
02:05  edbian: is there a gtk signal for "the content of the clipboard has changed" ?
02:05  _habnabit: Then why check at all? When you try to access the attribute, python will raise an exception for you.
02:06  shurane: So I should go and use Flight.fields, and if python throws an exception, then that's the way it was meant to be? Haha.
02:06  _habnabit: Yep.
02:08  shurane: But I don't access it until I call a specific method -- so it passes through the constructor fine. Wouldn't that be an issue?
02:08  _habnabit: It's not your problem; you (presumably) documented what you want.
02:13  PKKid: is "pip install psycopg2" broken?
02:15  pedro3005: well
02:15  pedro3005: does _anyone_ know how to play wavs in python?
02:19  edbian: I need some help with a python gui.  I'd like to display the contents of the clipboard in a text view.  How do I know the contents of the clipboard have changed?  Is there a signal for that? Do I have to make some loop spin on nothing just continually checking for updates to the clipboard?
02:19  edbian: (gtk)
02:20  magcius: ssbr, keep in mind that pyramid was released like two weeks ago
02:20  ssbr: magcius: pyramid is just a renaming of repoze.bfg
02:20  ssbr: these are important features
02:20  magcius: ssbr, no, actually )
02:20  magcius: ssbr, repoze.bfg and pylons is pyramid, and a lot of bfg had to be reworked
02:21  shurane: Next question: What is the difference between super.(Class,self).__init__() and SuperClass.__init__(self)?
02:21  magcius: shurane, there is a big difference
02:21  ssbr: magcius: Then they should have reworked sessions, too.
02:21  magcius: shurane, http://fuhm.net/super-harmful/
02:21  shurane: Mind giving me a resource?
02:21  shurane: Cool.
02:21  ssbr: With pyramid as it is, it's basically useless for the very things it is designed for.
02:22  ivan`: avoid subclassing
02:22  ssbr: Needs more features before a legitimate release.
02:22 --- kanor is now known as tyrus
02:22  MostAwesomeDude: Hm. Is there a quick way to format a float to a certain number of sigfigs, *including* the left-hand digits?
02:22  admiralshlorky: what's the deal with hating pastebin lately?
02:22  MostAwesomeDude: So, for example, 12.34, 123.4, 1234, 12340?
02:23 --- tyrus is now known as kanor
02:23  ivan`: MostAwesomeDude: log10 the number first, then do math
02:24  ivan`: admiralshlorky: copying from pastebin.com paste doesn't work, you have to hit some 'raw' link first
02:24  magcius: ssbr, keep in mind what pyramid is in relation to pylons
02:24  ssbr: magcius: A successor?
02:24  magcius: ssbr, nope!
02:25  magcius: ssbr, do you know what pylons is or was?
02:25  ssbr: magcius: a simple glue framework.
02:25  ssbr: as in, it was the thing you used when you used a bunch of other things (SQLA, Mako, etc.)
02:25  magcius: ssbr, right. It glued together Paste/WebOb, SQLA, templating
02:25  magcius: ssbr, Routes
02:25  ssbr: it filled in the gaps in the existing tools, and provided the infrastructure
02:25  ssbr: magcius: Right.
02:25  ssbr: magcius: but there is no SQLA for sessions.
02:25  magcius: ssbr, why would there be?
02:26  ssbr: That's something that has to be provided by the framework itself -- i.e. Pylons or Pyramid.
02:26  ssbr: So the fact that Pylons and Pyramid are merely glue doesn't excuse them
02:26  ssbr: At least, until an actual session library comes along.
02:26  ssbr: (the same goes for auth / password hashing)
02:27  magcius: ssbr, Beaker was Pylons' generic session library
02:27  magcius: ssbr, and repoze.who and repoze.what were authentication and authorization libraries
02:27  ssbr: magcius: does beaker work with the Pyramid session infrastructure?
02:27  magcius: ssbr, yes: http://docs.pylonshq.com/pyramid_beaker/dev/
02:27  ssbr: Then that entire line of complaint was moot
02:28  ssbr: and you should have said so instead of saying "it's new" :(
02:28  magcius: ssbr, no, it is extremely new. There has only been an alpha release of Pyramid
02:29  ssbr: magcius: Yes, but that isn't a valid defense
02:29  ssbr: Considering that Pyramid was begun from things that already did this, and that "this" is something absolutely essential to almost all web dev, it should also do this.
02:30  _habnabit: ssbr, anything decent has used beaker for years
02:30  ssbr: _habnabit: your definitions of "decent" differ from mine
02:31  ssbr: alternatively, your definition of "anything"
02:31  _habnabit: ssbr, werkzeug, pylons
02:31  _habnabit: (Flask too, I think.)
02:31  ryanprior: I've got a multiprocessing question, or maybe a pickle question. I'm passing a number of objects to another process for computation, then it's passing one of the objects back, modified. Can I tell which of the original objects was operated on to produce the result of the computation? == and is don't work, presumably because the data has been pickled and un-pickled.
02:32  _habnabit: ryanprior, what objects are you passing?
02:32  ryanprior: _habnabit: just a bundle of strings and integers, no bound methods or anything. I think it should be picklable.
02:32  _habnabit: ryanprior, neither strings nor integers can be 'modified'.
02:33  ryanprior: _habnabit: yes, but the object can be "modified" by replacing one integer by another.
02:33  _habnabit: ryanprior, no. That's not the same as modification at all.
02:33  _habnabit: ryanprior, that's reassignment.
02:34  ryanprior: if myfunc(obj_a, obj_b, obj_c) sets obj_c.foo=5 and returns obj_c, then obj_c is myfunc(obj_a, obj_b, obj_c) == true
02:34  ryanprior: right?
02:34  echoprinter: Will having mod_python and mod_wsgi on the same system interfere with each other in any way? I really don't use mod_python but I'll keep it on here if it's *not* going to get in the way.
02:34  _habnabit: ryanprior, what's obj_c? Also, you more than likely don't want is here.
02:36  pylix: hey guys
02:36  ryanprior: _habnabit: obj_c is just a state tracker for the number crunching I'm doing -- in this case, a game state.
02:36  ryanprior: _habnabit: I'm not attached to is, but == doesn't work any better in this case
02:36  pylix: whar's this error about range() integer end argument expected got float is it cause there's a decimal?
02:37  dash: pylix: range() expects an integer, not a float
02:37  dash: (nor a decimal)
02:38  pylix: alrighty then
02:39  ryanprior: _habnabit: so when I call myfunc on a number of gamestates, it will modify (reassign?) and return one of them, discarding the others. I want to know then which of the original gamestates is the one returned by myfunc. Any idea how I should do that?
02:40  magcius: _habnabit, technically, Flask is an alternate API for Werkzeug
02:43  ccd: Anyone know of a python lib to bendecode a torrent and put it's values in a dict?
02:48  ccd: does python 2.5.4 have builtins for bencoding and bendecoding?
02:49  ssbr: ccd: definitely not
02:49  ssbr: you'd have to use a library or code snippet that does it already
02:49  ccd: I found a bendecode snippit... looking for the other 1/2
03:07  SenoraRaton: If a variable type is unicode, is that equivalent to int, or do I need to convert it to int?
03:08  talented: it's unicode string
03:08  SenoraRaton: So convert it... >.<
03:09  SenoraRaton: When I do int(x_val) -> invalid literal for int() with base 10
03:09  talented: what's the value of it?
03:10  SenoraRaton: That is odd... It was grabbing the data from the text box, now its saying x_val is empty string
03:15  magcius: App Engine is based on CPython, right?
03:16 --- Viper is now known as Out`Of`Control
03:16  ssbr: magcius: yerp
03:21  ccd: What's the python equivilent to PHP's urlencode()?
03:21  _habnabit: urlencode()
03:21  _habnabit: Assuming that there's no real_urlencode that does the same thing in a non-broken way or something.
03:21  ccd: base64.urlencode?
03:21  _habnabit: (That is to say, does urlencode() do something other than the obvious?)
--- Log closed Sat Dec 11 03:25:25 2010
