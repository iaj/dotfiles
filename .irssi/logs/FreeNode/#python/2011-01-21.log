--- Log opened Fri Jan 21 19:14:09 2011
19:14 --- Users 816 nicks [0 ops, 0 halfops, 0 voices, 816 normal]
19:14  tos9: lrvick: http://paste.pound-python.org/show/1829/
19:15 --- Channel #python was synced in 105 seconds
19:16  Repgahr: hey guys... how do i "freeze" a window in pyqt4? (so that it doesn't receive signals)
19:23  lrvick: tos9: but it is working for "likes"... i am getting either null or a number back
19:23  lrvick: hmm
19:23  lrvick: tos9: but that mkaes sens if there is no possibly way to do it in-line
19:24  pluma: If I chain decorators like "@foo('bar')\n@spam('ham')\ndef qux(): pass" ... will they be applied in reverse order (bottom to top)? i.e. will the call sequence be "tmp = spam('ham'); qux = tmp(qux); tmp = foo('bar'); qux = tmp(qux)"?
19:24  SeanInSeattle: Hey all.  Can someone tell me how to retrieve a reference to a process by giving it an id?
19:25  sproingie: pluma: yes it's bottom to top
19:25  exalt: whats going wrong at 13 17 and 19 ?
19:25  exalt: http://codepad.org/HFnMp6VA
19:25  papna: pluma: Just file @foo\ndef baz(... is like baz = foo(baz),   @foo(bar)\ndef baz(...  is like  baz = foo(bar)(baz)
19:25  KirkMcDonald: pluma: qux = foo('bar')(span('ham')(qux))
19:25  pluma: sproingie: Good. So I can rely on the above to only apply @foo('bar') after all the others?
19:25  papna: pluma: Oh, I misread.
19:25  papna: Yeah, buttom to top.
19:25  KirkMcDonald: s/span/spam/
19:25  pluma: papna: Yay.
19:25  ritztech: is python hard if you already know Some bash
19:26  papna: Sure.
19:26  Unode|Work: exalt, weird indentation would be one part of the problem
19:26  smw: ritztech, no hardeer than other languages
19:26  sproingie: bash is untyped so python might require a little more discipline
19:26  KirkMcDonald: pluma: This is documented: http://docs.python.org/reference/compound_stmts.html#function-definitions
19:26  pluma: ritztech: easier than some other languages, harder than some other languages, I guess.
19:26  sproingie: then again you don't need discipline like "no spaces between var=val" like you do in bash
19:26  exalt: Unode|Work, without the wier identation i got the same output
19:27  Unode|Work: exalt, the other would be the -1 -1 stuff that doesn't seem to do anything there
19:27  pluma: KirkMcDonald: Thanks
19:28  Unode|Work: exalt, oh wait that's part of the range
19:28  smw: ritztech, I am curious. Why do you want to learn python? What do you plan to use it for?
19:28  sproingie: what is the purpose of the goggles?
19:28  KirkMcDonald: sproingie: The googles do nothing.
19:28  Unode|Work: exalt, replace list() by [] see if it works
19:28  KirkMcDonald: Er.
19:28  KirkMcDonald: Goggles.
19:28  KirkMcDonald: An amusing typo.
19:29  sproingie: what's fun is the "Google Goggles" app for android :)
19:29  KirkMcDonald: Yes! I have it.
19:29  exalt: Unode|Work, no change
19:29  KirkMcDonald: It will indeed solve Sudoku.
19:29  Unode|Work: exalt, what is the problem exactly?
19:29  smw: I tested it too
19:30  ritztech: im into network monitoring and doing scripts to ease repititon work .  and use Bash for alot of my stuff but wanting to learn other stuff.... and maybe i can do more with it.
19:30  sproingie: now they just need a crossword solver for goggles
19:30  smw: KirkMcDonald, it is as great as my book. "Completed Crossword Puzzles"
19:30  sproingie: given the bizarre words they stick into crosswords tho i dont suppose it'd help much
19:30  KirkMcDonald: sproingie: They can get together with those IBM guys making the Jeopardy-playing computer.
19:31  sproingie: i stopped doing crosswords when they started needing words in Bantu and such
19:31  ritztech: i heard its a good lingo to learn :)
19:31  exalt: Unode|Work, check the output and see the primes 13 , 17, and 19. they are empty. look at 2,3,5,7, and 11 they aint empty
19:31  smw: ritztech, what do you need it for?
19:31  exalt: why are 13 and above empty
19:31  KirkMcDonald: smw: He just said, didn't he?
19:31  smw: when?
19:31  smw: oh, didn't see it
19:32  smw: ritztech, I use python to replace bash for complex sysadmin scripts stuff :-)
19:33  KirkMcDonald: ritztech: The key difference between bash and Python is that, in bash, you do most interesting operations by calling command line tools, but in Python, you use Python code and libraries.
19:33  KirkMcDonald: ritztech: Where in bash you might use sort, in Python you'd use sorted() or the sort method of a list.
19:33  KirkMcDonald: ritztech: In bash you use grep, in Python you use various string methods or the re module.
19:33  sproingie: arguably there's a lot in bash these days that doesn't need command line tools, but people still use them because they're familiar
19:34  sproingie: and the bash syntax is often eye-clawingly ugly
19:34  KirkMcDonald: In bash you have find, in Python you have os.walk.
19:34  KirkMcDonald: And so on.
19:34  smw: sproingie, command line tools are better than GUIs in my opinion. And any type of advance bash is awful to look at :-).
19:35  kerio: in python you have twisted, in bash you have...
19:35  kerio: huh
19:35  smw: kerio, what?
19:35  sproingie: that's it i'm going to port twisted to bash
19:35  kerio: i don't know
19:35  sproingie: cat /dev/poll baby
19:35  KirkMcDonald: sproingie: Noooo.
19:35  ritztech: hmmm i liked bash cause i can mix alot of stuff like curl / awk Etc.... but not sure if python can or the languange itself has its own versions lol
19:35  smw: sproingie,  kerio, why would you need twisted in bash?!
19:35  kerio: you mean of string manipulation? sure
19:36  sproingie: smw: it's a joke son, you're supposed to laugh
19:36  KirkMcDonald: ritztech: String manipulation will work entirely differently in Python from how you'd do it in bash.
19:36  KirkMcDonald: ritztech: But on balance I think it is easier.
19:36  smw: ritztech, string manipulation is python is clean and makes sense :-P.
19:36  smw: ritztech, there is also urllib for replacing curl
19:37  smw: ritztech, but there are other things where you need to call external programs. It takes more code to call external programs in python.
19:37  kerio: s/urllib/twisted.web.client/
19:37  smw: ritztech, and piping is not as easy.
19:38  kerio: smw: wait, what?
19:38  ritztech: haha dam piping is a lazything i do
19:38  sproingie: subprocess ought to have a wrapper that makes composing pipelines easier
19:38  KirkMcDonald: As a rule you don't really need to pipe processes into each other in Python like you do in bash.
19:38  kerio: p1, p2 = subprocess.Popen(..., output=PIPE), subprocess.Popen(..., input=PIPE); p1.output = p2.input
19:38  smw: ritztech, exactly. Of course, in python you don't need piping as much.
19:38  exalt: kerio, can you stell my why my code skips the primes aboce 13 in my factorisation script: http://codepad.org/YrEa2AuG ?
19:38  KirkMcDonald: kerio: input=p1.stdout
19:39  kerio: er, yeah
19:39  sproingie: it's straightforward, yes
19:39  sproingie: still cumbersome
19:39  smw: ritztech, it is harder to do, but is rarely needed.
19:39  kerio: exalt: i don't know what the fuck is that
19:39  KirkMcDonald: kerio: You have to do it when defining the Popen object.
19:39  sproingie: not that there's usually much call to write pipelines
19:40  KirkMcDonald: Most of the things you use pipes for in bash are things you should just be doing in Python code.
19:40  sproingie: one nice thing about pipes is they parallelize
19:40  KirkMcDonald: Like calls to sort, uniq, awk, diff...
19:40 --- Arsanerit is now known as Gerrit
19:40  sproingie: i used to write some bitching pipelines on a 24-processor box
19:40 * Nikolai89 Is someone maybe knows how to create a simulation of Active Desktop in application ? :) My friend needs to make some widget that will be always on desktop ( and that doesnt affect Show Desktop ). Any help will be appreciated. Thanks !
19:40 --- Gerrit is now known as Arsanerit
19:41  exalt: kerio, try to devide a number in prime factors
19:41  sproingie: if you're going to recreate Active Desktop, you'd have to put it back into Windows first
19:41  sproingie: seeing's how they havent supported it for ages
19:42  reg3x: people i need help to show a progress bar while using subprocess.Popen()
19:42  KirkMcDonald: Windows 7 does have the notion of a desktop widget, or whatever they call it.
19:42  sproingie: anyway the equivalent is called a widget, and there's lots of widget doodads for unix desktops
19:42  sproingie: and yah vista and win7 have the same deal
19:42  sproingie: tho windows 7 hides them out of the box
19:42  kerio: exalt: it's not a very interesting problem
19:42  reg3x: should i check subprocess.Popen.id() periodically ? and each time  execute a progressbar.pulse()   ?
19:42  sproingie: KDE has plasmids which are *really* integrated
19:44  sproingie: Nikolai89: i suspect any such app you write would be specific to the desktop environment, i.e. gnome or kde for unix machines
19:44  sproingie: mac and windows have their own thing, i know nothing about programming for either
19:44  Nikolai89: sproingie nah. i did it for linux, but win is kind a bitch :)
19:45  KirkMcDonald: I don't think the Windows API has significantly changed since 1985. :-)
19:45  sproingie: been added to
19:45  sproingie: i'd call NT pretty significant
19:45  KirkMcDonald: I exaggerate, but writing a Windows event loop in C hasn't particularly changed.
19:45  sproingie: i'd say it has from 3.1 to 95, but that's about it
19:46  sproingie: win16 vs win32 basically
19:46  KirkMcDonald: Yeah.
19:46  sproingie: it's message-based, not a bad design really
19:47  KirkMcDonald: It's basically just yet another object-oriented C API.
19:47  sproingie: would be nice if you were able to more easily create your own event queues tho
19:47  sproingie: i mean you can create hidden windows but that's a lot of extra baggage
19:47  KirkMcDonald: Not unlike CPython, in that sense.
19:47  KirkMcDonald: Though the particulars are quite different.
19:48  sproingie: eh i don't see win32 messages as particularly OO
19:48  reg3x: can anyone help me running a periodical callback while a subprocess.Popen()  is running?  (the periodical callback would be a progressbar.pulse())
19:48  sproingie: kind of data-driven so i guess there's some similarities
19:49  reg3x: how do you detect when a subprocess.Popen() is running ?
19:49  sproingie: i believe there's a property.  check the suprocess docs
19:49  smw: reg3x, returncode is None or something?
19:50  reg3x: smw i dont need to return anything
19:50  sproingie: interesting, i thought there was a separate property.   i must be thinking of java
19:50  sproingie: looks like '.returncode is None' is the way
19:50  smw: reg3x, the popen has a property "returncode"
19:50  reg3x: smw i need to get the stdout of a subprocess.Popen()  i know how to do it with communicate()
19:50  KirkMcDonald: reg3x: Popen objects have a poll() method.
19:51  smw: reg3x, communicate blocks, you don't want that
19:51  KirkMcDonald: reg3x: But that's not really what you need, is it? You just want to know when the subprocess's stdout has data to read.
19:51  nosk1o: reg3x: don't use subprocess.
19:52 * KirkMcDonald sighs.
19:52  reg3x: why not ?
19:52  sproingie: KirkMcDonald: hm, does .poll() get called internally or does that or .wait() have to be called for .returncode to get set?
19:52  nosk1o: reg3x: you're already running a GUI mainloop, so use whatever is compatible with your mainloop
19:52  nosk1o: reg3x: in that case use gobject.spawn_async
19:52  nosk1o: and friends
19:52  reg3x: i was using glib.spawn_async()  nosk1o
19:52  reg3x: but i cant get the stdout nosk1o
19:52  nosk1o: reg3x: yeah that's even better
19:53  nosk1o: reg3x: you can...
19:53  reg3x: nosk1o,     pid, stdin, stdout, stderr = glib.spawn_async(comando , flags=glib.SPAWN_DO_NOT_REAP_CHILD)
19:53  nosk1o: reg3x: pass a flag indicating that you want stdout to spawn_async, that you give you stdout's fd. Then you use glib.io_add_watch() to get a callback when there's data to read
19:54  sproingie: glib rocks
19:54  nosk1o: reg3x: http://library.gnome.org/devel/pygobject/stable/glib-functions.html#function-glib--spawn-async check it out - there's a standard_output parameter you must pass True to
19:55  nosk1o: also, since you passed glib.SPAWN_DO_NOT_REAP_CHILD you must use glib.child_watch_add to get a notification when the child exits so you can properly reap it yourself
19:55  reg3x: http://python.pastebin.com/Pnedc4k7 [+]  line 26  is not printing stdout..
19:55  infobob: http://paste.pound-python.org/show/1830/ (repasted for reg3x)
19:55  reg3x: ok nosk1o
19:55  lieuwe: PIL doesn't seem to like big images, trying to make an 35894x34944 image fails, but i do need images this size, any ideas on fixes?
19:56  nosk1o: reg3x: yeah, in that paste of yours, self.stdout should be a number, the FD associated with stdout
19:56  nosk1o: reg3x: you must use glib.io_add_watch on it to get a callback where you read the actually output data
19:56  reg3x: exactly nosk1o !!! it is a number!! why is a number ?
19:57  reg3x: nosk1o,  instead of the number i need the data
19:57  nosk1o: reg3x: huh, are you reading what I write?
19:57  nosk1o: reg3x: I must be very lagged, I keep getting questions I just answered
19:58  reg3x: ok ill add the glib.io_add_watch
19:58  reg3x: sorry nosk1o
19:58  KirkMcDonald: lieuwe: I estimate that this would require about 5GB.
19:58  lieuwe: KirkMcDonald: so?
19:58  lieuwe: KirkMcDonald: they invented swapspace for a reason
19:58  KirkMcDonald: lieuwe: Well, do you have that much RAM? And is it a 64-bit Python?
19:59  KirkMcDonald: Aye, there is swap.
19:59  lieuwe: KirkMcDonald: not the point tho, i only manipulate 128x128 pieces of the image, so it wouldn't all need to be loaded into ram at once
20:00  KirkMcDonald: I know that PIL has no explicit support for manipulating images piecemeal like that.
20:00  Kzim: hey
20:00  lieuwe: KirkMcDonald: well, crud
20:00  KirkMcDonald: lieuwe: But is it a 64-bit Python?
20:00  lieuwe: KirkMcDonald: nopezorz
20:01  Kzim: i have a list of non-unique values and i want to remove all the duplicate to have a list a unique value is there something that do that easy or i have to make it myself ? please thx
20:01  KirkMcDonald: Kzim: You'd have to do it yourself, but it is fairly easy.
20:01  reg3x: nosk1o, what would be the condition mask on http://library.gnome.org/devel/pygobject/stable/glib-functions.html#function-glib--io-add-watch  ?
20:01  KirkMcDonald: Kzim: Use a list and a set.
20:01  psykidellic: Kzim: set ?
20:01  Kzim: set
20:01  KirkMcDonald: Kzim: Or, I guess, does the order of the elements matter?
20:02  Kzim: i go see the doc ;)
20:02  nosk1o: reg3x: you want read, right?
20:02  KirkMcDonald: Kzim: If it does not, then just use a set.
20:02  lieuwe: KirkMcDonald: this aint mission critical stuff tho, i guess i have to do without 16x downsampling
20:02  Kzim: KirkMcDonald: NO
20:02  Kzim: sorry for the cap
20:02  KirkMcDonald: Kzim: set(foo)
20:02  reg3x: yes nosklo i want to read the stdout of popen
20:02  nosk1o: exalt: use the 'ready to read' flag then
20:02  nosk1o: argh
20:02  nosk1o: reg3x: ^
20:02  reg3x: i dont undestand yet the need of glib.io_add_watch . seems like i need to create a callback and a condition mask to read the popen object
20:03  nosk1o: reg3x: you need that to be notified when there's data to read
20:03  nosk1o: reg3x: because it may not be immediatelly available and you want the gui to keep working and the progress bar to keep pulsing while you wait
20:03  nosk1o: reg3x: so you schedule a callback
20:04  reg3x: i undestand the file descriptor is the self.stdout on my code.. still i need a condition mask and a callback for arguments to io_add_watch()
20:04  nosk1o: reg3x: that way, when the process you're running outputs stuff, your function is called and you can read it
20:04  nosk1o: reg3x: yes, what part of that you don't understand?
20:04  reg3x: i dont undestand which would be the condition mask ?
20:04  nosk1o: reg3x: the mask is one of the constants just below in the documentation
20:05  nosk1o: reg3x: under "The value of condition is a combination of:"
20:05  nosk1o: reg3x: please read the entire docs for glib.io_add_watch
20:05  reg3x: oh..
20:06  lieuwe: why can't a python process use more than 2.2 gigs of ram?
20:06  nosk1o: lieuwe: I never heard of that limitation
20:06  lieuwe: nosklo: http://www.python-forum.org/pythonforum/viewtopic.php?f=15&t=18660&p=84186
20:07  vr6: Hello.  Here is a a short piece of code: http://paste.pound-python.org/show/1831/.  Essentially I'm asking about its "pythonicity",  please take a look and comment if you care to, further explanation is in the post.
20:09  psykidellic: vr6: The only thing I can think of is that you dont need to create another list. Just convert it inplace.
20:09  nosk1o: vr6: why don't your query return integers already in first place? Why is the data stored as strings?
20:10  rahulkmr: Anyone knows of a humaize date package/module? A comprehensive one would be great but one which can just do a yesterday, tomorrow and n hours ago would be all I need. I can code it up easily but there should be something preexisting
20:10  psykidellic: Seems CSV data.
20:10  vr6: nosklo: it is a csv input file.  That is the only way I have seen csv reader intake data... as strings.
20:11  Juhaz: lieuwe, not sure who this "python guru" is, but it's pretty obvious he doesn't have a faintest clue about what he's talking.
20:11  lieuwe: Juhaz: okay,
20:11  lieuwe: is there some kind of commandline option to make python use less ram?
20:12  lmar: ok everyone, is this a terrible idea? http://pastebin.com/3GcXqM8J
20:12  infobob: http://paste.pound-python.org/show/1832/ (repasted for lmar)
20:12  vr6: psykidellic: in-place conversion always bugs me out?  one of those silly programmer superstitions... guess I will it with this for loop to get over such silliness.
20:13  Juhaz: lieuwe, there is one part about the post that is correct, and it's the image size calculation. It doesn't have anything to do with language, so no, there's no command line flag that will allow you to magically have huge pictures that don't take any memory.
20:13  reg3x: nosk1o,  i put it a callback.. but it says "third argument is not callable"   ->  http://python.pastebin.com/bibentLt
20:13  infobob: http://paste.pound-python.org/show/1833/ (repasted for reg3x)
20:14  reg3x: line 42 and 28 nosk1o
20:14  lieuwe: Juhaz: wasn't asking that tho, i was asking if python has a ram-optimized mode to squeeze some extra bytes
20:14  reg3x: nosk1o,  TypeError: third argument not callable
20:16  vr6: nosklo: this is the way the csv file looks... 2,"Alaska",38106,19,14,11,0,6,10,2,1,1,1,1,...0,0,0,0,0,0,0,2,-1.  As you can see Alaska is quoted but nothing else.  Yet each item in the row is a string after being processed by csv reader.  So I am thinking it is just the way csv reader handles input info.
20:16  vr6: if there is something an option on csv reader I am totally missing out on, please let me know.
20:18  danols: hi all - i'm having a hard time figuring this out:
20:18  smw: vr6, there is a csv library
20:19  vr6: smw: import csv?
20:19  smw: vr6, it was made to deal with csv files generated by excel
20:19  smw: yep
20:19  psykidellic: Hmm, I thought he is using that by seeing: csvReader.next()
20:19  danols: I have dict((x[0], list(x[1])) for x in itertools.groupby(blah, operator.methodcaller('foo').iteritems()
20:19  psykidellic: vr6: But yeah, csv module. I should have told that first than.
20:19  danols: the problem is methodcaller('foo') can return an exception
20:19  danols: i would like to somehow define a helper method to catch that
20:19  vr6: Well, I am using the csv module.  it is a csv reader that is intaking the data?  taking a look at csv on python.org now.
20:20  reg3x: nosk1o, am i calling it bad? im sorry if i bother too much
20:20  danols: and do something like itertools.groupby(blah, myHelperMethod().iteritems()
20:20  smw: vr6, yep, it has a reader and writer
20:20  psykidellic: vr6: I think thats the same.
20:20  lmar: i have a unique (as far as i can search) caching idiom here, and i'm trying to decide if its a good idea: http://paste.pound-python.org/show/1834/
20:20  danols: any suggestions how to code that ?
20:20  smw: vr6, it is made to be compatible with excel
20:21  vr6: This is what I am doing to intake the file, see: http://paste.pound-python.org/show/1835/
20:21  smw: danols, you spread your question over too many lines and I can't understand it. Rephrase and pastebin it :-)
20:22  vr6: :perhaps add the dialect as 'excel?
20:22  psykidellic: vr6: Seems you are already using the correct module. I believe you have done: import csv at top.
20:22  smw: vr6, excel is the only dialect
20:22  mokazon: do you guys know anything about python webhosting?
20:22  mokazon: how does it work?
20:22  psykidellic: mokazon: Magic.
20:22  vr6: pskidellic: yes, my import statement is at the top.
20:22  cnfer: it's a lie!!!!!!!
20:22  cheater99: danols: first off, drop the extra parens in the dict().
20:22  smw: vr6, it is made so you can add more dialects... but excel is the only one.
20:22  mokazon: psykidellic: haha
20:22  reg3x: i dont undestand why ----->  TypeError: third argument not callable  --> on line 42 and 28 of ->> http://python.pastebin.com/bibentLt
20:22  infobob: http://paste.pound-python.org/show/1833/ (repasted for reg3x)
20:23  mokazon: my question is, could I have a socket server on it?
20:23  psykidellic: mokazon: Twisted.
20:23  psykidellic: mokazon: Socket server and web hosting would be two different issues I believe.
20:23  danols: smw will do sorry :)
20:24  mokazon: psykidellic: I have a web host with python capabilities aparently, and I want it to host my python server, because I can't host it on my computer
20:24  psykidellic: *python server"?
20:24  mokazon: yeah...
20:24  mokazon: a server made in python
20:24  sproingie: sounds like you've got the python webhosting angle done.  virtualenv is a good way to deploy it.
20:25  smw: danols, np. I tend to write up questions in a word processor before asking for big questions. You want as much initial info on one line.
20:25  psykidellic: mokazon: If you can run it on your computer, you can it on your webhost given the right permissions.
20:25  cnfer: i don't think your web hosting will like you running a socket server
20:25  smw: danols, but it also needs to read like a paragraph... not perl :-P
20:25  mokazon: psykidellic: would I need to use port 80 or something?
20:25  cnfer: you'll probably need either a VPS or maybe a shell service
20:26  psykidellic: mokazon: What does your socket server do?
20:26  mokazon: psykidellic: it relays information between clients
20:26  psykidellic: Eh. That does not give any information.
20:26  sproingie: mokazon: ask your webhost what their deployment solutions are for python apps
20:26  mokazon: psykidellic: it takes the message from the client and forwards to other clients
20:26  danols: smw LOL
20:26  psykidellic: mokazon: 80 is mostly for HTTP. Maybe you would need your own port to run your service.
20:26  sproingie: if they don't know what that means, ask if they have mod_wsgi or fastcgi or what
20:26  mokazon: I could try with java or something
20:27  danols: ok question is simple I believe here it is http://dpaste.com/340338/
20:27  sproingie: if they don't know what those are, find another host
20:27  danols: I just can't figure out how
20:27  cnfer: why even RUN a socket server
20:27  cnfer: run it as http
20:27  danols: s/lol/:)
20:27  psykidellic: mokazon: I am still confused what exactly your socket server does. Is it some specialized protocol?
20:27  mokazon: ?
20:27  cnfer: and you can use it on your web provider
20:27  cnfer: psykidellic: indeed
20:27  vr6: smw, psydellic: I just added the dialect option as excel (it is an excel csv) and it doesn't seem to do anything different and the data row comes in as shown here: http://paste.pound-python.org/show/1836/
20:27  mokazon: psykidellic: I use UDP if that's what you're wondering
20:28  smw: danols, pastebin it like a forum post maybe.
20:28  cnfer: mokazon: why?
20:28  psykidellic: vr6: AFAIK, it will not convert to int.
20:28  mokazon: cnfer: why what? it's a server for my game
20:28  sproingie: mokazon: does it use udp for internal communication or does it open a udp port to the internet?
20:28  sproingie: mokazon: you're going to need a full blown VPS host if you want the latter
20:28  mokazon: sproingie: not sure what you mean...
20:28  sproingie: and probably even the former
20:28  psykidellic: vr6: So you are correct on your path. Doing inplace replacement is just optimization.
20:28  cnfer: mokazon: why run your own "socket server"?
20:28  cnfer: mokazon: why not run it as an http service
20:29  mokazon: cnfer: what's an http service? :P
20:29  sproingie: mokazon: as in you'll need something on rackspace cloud or linode or something
20:29  smw: vr6, I fail to see the problem
20:29  mokazon: hmm.. ok
20:29  psykidellic: cnfer: Seems he needs UDP.
20:29  cnfer: oh, ffs
20:29  cnfer: psykidellic: i doubt it
20:29  psykidellic: smw: His integer data is coming as string. So he wanted to automatically convert it to int.
20:29  sproingie: web hosts will only let you serve web apps, not arbitrary ports speaking udp
20:29  danols: smw?
20:29  cnfer: psykidellic: so far, he doesn't seem to understand either what he needs nor what he does
20:29  smw: danols, yes?
20:29  psykidellic: cnfer: Indeed.
20:29  sproingie: a vps host the likes you get on linode is your own computer that you can do whatever you want with
20:30  vr6: psykidellic: yup..hence, the conversion needs to be explicitly handled.... ok and will check into the inplace conversion...becoming better at anything generally means pushing beyond comfort zones.  thanks!
20:30  sproingie: i use rackspace cloud myself
20:30  smw: I like ec2 :-)
20:30  danols: smw what do you mean by "pastebin it like a forum post maybe" ?
20:30  sproingie: ec2 is nice too, they sort of target different niches
20:31  cnfer: contextshift
20:31  psykidellic: danols: /topic
20:31  smw: you can get a free "micro" server for a year on ec2
20:31  cnfer: contextshift .eu
20:31  cnfer: oh, rats
20:31  cnfer: contextshift.eu
20:31  psykidellic: danols: paste.pound-python.org - its a pastebin.
20:31  reg3x: can anyone help me to determinate why a function is not callable on my code ? it says:   TypeError: third argument not callable
20:31  sproingie: smw: what do you get with a micro server?
20:31  Kzim: damn i really don't get it : print ','.join(map(str,row)) give me "1,2,3,4" and now  i have another ... tuple, i think and can't have my coma separeted string :)
20:31  psykidellic: reg3x: Because your argument is not callable?
20:31  smw: danols, if you pastebin the entire question, you can use spacing as you see fit to make the question less perl like
20:31  sproingie: pondering ditching my vps and just tunneling from home now that i have decent dsl
20:32 --- prepreg is now known as prepreg|AFK
20:32  reg3x: psykidellic,  why could an argument be not callable?? what defines an argument as callable ?
20:32  psykidellic: reg3x: Do you understand what "callable" means?
20:32  smw: danols, I am using perl like to mean inscrutable ;-).
20:32  Kzim: how can i have a coma separated string from a set :/ i really dont get it sorry
20:32  reg3x: psykidellic,  the code is  ->> http://python.pastebin.com/bibentLt   ->>  on line 42 i call the function  and 28 i define the function ..
20:32  infobob: http://paste.pound-python.org/show/1833/ (repasted for reg3x)
20:33  smw: sproingie, with a microserver you get a very low end server.
20:33  reg3x: psykidellic,  callable means than u can call it ? like when u call a method ?
20:33  sproingie: smw: just curious what the specs are
20:33  psykidellic: reg3x: In line 42, you have to pass: self.read_data
20:33  smw: sproingie, "http://aws.amazon.com/ec2/instance-types/"
20:33  danols: k
20:33  psykidellic: which is a callable - so the io_watch method call that.
20:34  sproingie: ah i see it now.  613 megs is pretty freaking nice for a VPS actually.
20:34  smw: sproingie, it is not impressive, but it works.
20:34  psykidellic: reg3x: But if you do () on your method, its already called.
20:34  reg3x: psykidellic,  so what u mean is to erase the ()
20:34  sproingie: EBS storage only i don't really know what that is
20:34  smw: sproingie, we use micro instances as dev boxes where I work
20:34  reg3x: oh.. it was that psykidellic .. now it says   TypeError: read_data() takes exactly 1 argument (3 given)
20:34  reg3x: but it is a progress thank you psykidellic
20:35  sproingie: smw: i use my VPS box to run irssi from 99.999% of the time
20:35  psykidellic: Kzim: ','.join(yourTuple)
20:35  smw: sproingie, they are 2 cents per hr or something like that. If you run it 24/7, it costs $15/month
20:35  reg3x: psykidellic,  i need to now find out which are those 2 arguments. cause the first one is 'self'
20:35  psykidellic: Kzim: Oh set.....
20:35  smw: sproingie, perfect use ;-)
20:35  sproingie: smw: hm, that's about what i'm paying for my rackspace box
20:35  sproingie: smw: but i'd get more RAM
20:35  psykidellic: smw: Read into the docs, it will tell you the signature of method it needs.
20:35  smw: sproingie, cool.
20:35  psykidellic: Eh...wrong person. That was for reg3x
20:36  reg3x: psykidellic, thanks.. ill read the docs
20:36  Repgahr: i have a global list, and inside a function i have another list that has the same initial value as the global one, however, the modifications that i make on the local list alters the global one too (it's a pointer) how can i make a "copy" of that global list in a new local list instead?
20:36  Kzim: psykidellic: thx i find out to ''.join(value) to remove the u'value' :)
20:36  psykidellic: Repgahr: localList = [x for x in globalList]
20:37  psykidellic: Repgahr: But why are you keeping global data?
20:37  smw: sproingie, we use the elastic map reduce alot in one of the companies I work for.
20:37  sproingie: smw: i wish we could use EC2 for dev boxen but we have vast amounts of data that would cost us an arm and a leg and security would never want it going into the cloud anyway
20:37  Repgahr: psykidellic: because i need it for reference... thank you :D
20:38  smw: sproingie, you don't trust amazon?
20:38  psykidellic: Repgahr: Show us your code and I bet somebody will have better way.
20:38  Repgahr: psykidellic: i don't think it's necessary... believe me, i know what i'm doing :) thank you
20:38  sproingie: smw: i do, but IT is a little more paranoid.  anyway the added latency of transferring all that data would kill us.
20:39  smw: sproingie, it is like any datacenter...
20:41  smw: sproingie, and boto is not bad at controlling ec2 from python :-)
20:41  gharz: guys, i have a json file and i want to convert it into csv using python... any idea how? been trying to search google but they are giving me info about django. i'm currently using ubuntu. please help.
20:42  psykidellic: gharz: json/simplejson and csv module.
20:42  smw: gharz, load it with the json library, flatten it, save it with the csv lib
20:42  cnfer: "the cloud" is such a magic word these days ^^;
20:42  psykidellic: gharz: Which Python version?
20:43  smw: cnfer, yes it is. I mostly use it to refer to AWS stuff or its competitors.
20:43 --- Silex is now known as silex
20:43  gharz: psykidellic: i have 2.6 which is the default in ubuntu 10.10 and 3.1 at the same time
20:43  psykidellic: cnfer: People have been in clouds starting 1940s
20:43  sproingie: we run our own cloud anyway, got about a dozen datacenters
20:43  psykidellic: gharz: With 2.6, import json ;;
20:43  cnfer: little fluffy clouds ^^;
20:43  cnfer: damnit, i need moor alcihole!
20:44  sproingie: "what were the skies like when you were young?"
20:44  smw: sproingie, how would a geek know?
20:44  jetsaredim: if i have a list of dicts and i want to create a list from a single field from each dict [{a:1, b:2}, {a:3, b:4}] -> [1,3] what would be the best way to do that?
20:45  cnfer: uhu :P
20:45  sproingie: heh, zing.  saw Alex Paterson recently at Supper Club in SF
20:45  sproingie: sadly he didn't play Little Fluffy Clouds
20:45  KirkMcDonald: jetsaredim: [x[a] for x in L]
20:45  jetsaredim: KirkMcDonald: thanks
20:46  Repgahr: why this piece of code doesn't work? :http://pastebin.com/ki7Dra5i It should return a null list...
20:46  infobob: http://paste.pound-python.org/show/1837/ (repasted for Repgahr)
20:46  gharz: psykidellic: i got something from the net and tried it... but i got the error... http://paste.ubuntu.com/556638/
20:47  KirkMcDonald: Repgahr: You are altering the list while you are iterating over it.
20:47  Repgahr: KirkMcDonald: hã? sorry... i really didn't understand
20:47  KirkMcDonald: Repgahr: Specifically, you are removing items from it. Either you should iterate over a copy of the list, or build a new list instead of mutating the original.
20:48  psykidellic: Repgahr: Eh, and you said you understand what you are trying to do?
20:48  Repgahr: =/ never did anything similar before :)
20:48  psykidellic: gharz: Yeah. Thats JSON object you have to format it to data that CSV understands.
20:48  psykidellic: gharz: So the JSON data?
20:49  gharz: psykidellic: whew!!! this is an alien job to me. first time to do it. :(
20:49  psykidellic: gharz: Step by step.
20:49  Repgahr: Thanks KirkMcDonald
20:49  enerccio: hello!
20:49  smw: gharz, csv can not hold the same data structures.
20:49  enerccio: I have a problem with my thread, it wont close
20:50  enerccio: http://paste.pound-python.org/show/1838/
20:50  smw: gharz, that is why I said you need to "flatten" it
20:50  psykidellic: gharz: Okay, seems data.json does not have any JSON data :)
20:51  psykidellic: Hmm, I thought it was threading.Thread - but then I have not used threads in quite some time.
20:51  gharz: smw & psykidellic: i tried opening the json file using geany... it looks like a json file to me. actually, i just got it from my colleague
20:51 --- Varraway is now known as Varriount
20:51  enerccio: oh forgot import
20:51  smw: enerccio, I do not understand where __killed comes from
20:52  enerccio: import threading as Thread
20:52  enerccio: its in the init
20:52  smw: enerccio, that is not a good import
20:52  psykidellic: Probably, being set from main thread.
20:52  smw: enerccio, there is no reason to name the module Thread
20:52  psykidellic: enerccio: Also, you are doing a loop in def run(). Just do one get_log() and the method will return when the flag is set.
20:53  enerccio: yes, it is not finished class, it will do more, but with testing it as it is, its not closing when called .kill()
20:53  psykidellic: enerccio: Also, there is Thread in threading.
20:53  enerccio: yeah, I have Thread.Thread
20:54  enerccio: and smw, I suppose yeah, it was in some tutorial I followed and then I got used to calling it Thread instead of threading
20:54  psykidellic: enerccio: You need: while self.__killed:
20:55  psykidellic: Eh, no.
20:55  enerccio: oh I see
20:55  enerccio: yeah, got nots wrong
20:56  psykidellic: I am confused.
20:58  enerccio: fixed, thanks psykidellic
20:58 --- robbles is now known as robtmr
20:58  enerccio: anyways, I wonder, if I have blocking sockets
20:58  enerccio: if I wait with socket on recv
20:58  enerccio: can I send with the same socket?
20:58  enerccio: (in another thread)
20:59  psykidellic: enerccio: Also, what are you doing really? That code snippet seemed wrong logt of ways.
20:59  kerio: ..eeeew
20:59  psykidellic: enerccio: What are you really trying to do?
20:59  psykidellic: enerccio: I am guessing that I will answer up saying Twisted but I will still wait for your question....
20:59  enerccio: no, the socket question is for another problem
20:59  psykidellic: s/question/answer/
20:59  enerccio: this will read the file and then do the actions which are the file
20:59  psykidellic: enerccio: Why would you have blocking socket?
21:00  enerccio: but since other threads will access that file at the same time
21:00  psykidellic: ooooh...multiple threads!
21:00  enerccio: I need to be able to access the file when other threads stop using it
21:00  psykidellic: enerccio: Thats why you dont *use* threads.
21:00  enerccio: but?
21:01  psykidellic: enerccio: Seriously, what exactly are you trying to do.
21:01  Repgahr: gotta gol... thanks everyone :)
21:01  enerccio: a special server application
21:01  robtmr: enerccio: you should be able to, it's a two-way stream
21:01  psykidellic: enerccio: Okay. That does not answer my question :)
21:01  enerccio: robtmr: thanks, now I dont need to have timeout and nonblocking sockets for server
21:01  bio-tty: i wonder why swig wrappers like used for ncurses and scapy have a proxy object.  it makes the interface seem so ugly.
21:02  psykidellic: enerccio: Eh, non-blocking sockets are good.
21:02  enerccio: for client, sure
21:02  psykidellic: enerccio: Eh? Have you done socket programming before?
21:02  enerccio: not really
21:02  enerccio: I am learning as I go along
21:02  bio-tty: i dont see why pcap.PyObject must be done when using pcap in python
21:03  bio-tty: why is such a proxy / wrapper used when stuff like pcap was swigged?
21:03  psykidellic: enerccio: You dont need blocking sockets anywhere. I would suggested reading up on beej.us tutorial and look into www.twistedmatrix.com
21:03  psykidellic: s/suggested/suggest
21:03  enerccio: sure I don't, but its easier to work with in server app
21:04  Repgahr: what's the command to "unjoin" (to quit this chat letting other channels open)?
21:04  psykidellic: enerccio: If you use the right tool, even non blocking is easy.
21:04  enerccio: but since client is gui app, not so good to use blocking ones
21:04  enerccio: I am only using import socket
21:04  cnfer: Repgahr: it is /part
21:04  psykidellic: enerccio: Again, you dont need BLOCKING calls anywhere.
21:04  psykidellic: enerccio: Okay? So?
21:05 < Luyang> hi all, I'm following the Programming Collective Intelligence book and try to install the pydelicious library. I'm using Python 3.1. Should I use Python 2.x instead to solve these syntax errors? Why are these libraries so incompatible?
21:05 < enerccio> well I need like try: except: in many parts of code for non blocking sockets
21:05 < Repgahr> cnfer: thanks
21:06  enerccio: like when server is waiting for connection
21:06  enerccio: or trying to send something
21:06  enerccio: or waits for the client to send something
21:07  sproingie: Luyang: pydelicious is almost certainly for some version of python 2.x.  try it with 2.7
21:07  sproingie: keeping in mind that del.icio.us may not be around much longer
21:08  sproingie: Luyang: pydelicious doesn't use oauth either, so it's unlikely to even *work* except for legacy accounts
21:08  psykidellic: enerccio: Wrong. Just use twisted already.
21:08  psykidellic: enerccio: Or atleast read upon a book on Network Programming.
21:09  enerccio: well if you have nonblocking sockets and timeout, it will raise an exception when it does not get data/connection, right?
21:09  reg3x: hey guys which  GChildWatch  do u recommend me to use if im running  glib.io_add_watch()   ??
21:10  psykidellic: enerccio: Yes thats why you use a libraryu like Twisted which takes care of all of this.
21:10  Luyang: sproingie: thanks I will. Can I install them side by side in Windows?
21:10  enerccio: so do I, in my code, I suppose
21:10  reg3x: i need a waitpid() kind method
21:10  psykidellic: enerccio: http://krondo.com/blog/?page_id=1327
21:11  enerccio: but is twisted part of the basic python install?
21:11  psykidellic: enerccio: No but can be easily installed anywhere.
21:11  sproingie: Luyang: that will work, yes.  keep in mind double-clicking .py files will only open with one or the other, so you may have to use "open with" to change it
21:11  enerccio: yeah, like three another items I will already need.... I am trying to minimize additional installs, specially if its going to be installed on windows
21:12  sproingie: "pip install twisted" should work nowadays
21:12  psykidellic: enerccio: Twisted works on Windows. I dont think writing incorrect code is better then not using correct libraries.
21:12  sproingie: use virtualenv and you can have a portable install of twisted
21:12  psykidellic: Seriously, why use Python then? Why not Win32 API?
21:13  sproingie: python itself is a pretty big dependency.  just ship a virtualenv with twisted and you're set
21:13  enerccio: I need also pygtk, gtk itself, pycrypto
21:13  sproingie: pygtk is a much nastier dependency on windows
21:13  psykidellic: Twisted is probably smaller than all those.
21:13  psykidellic: enerccio: You are already doing more work than Twisted requires.
21:14  bio-tty: like, why isnt it enough to do import pcap;pcap.open_offline -- why do i have to instantiate some wrapper proxy object, and _on that_ use the swig-generated api ?
21:14  enerccio: well my socket work is done, technically
21:15  enerccio: http://paste.pound-python.org/show/1839/
21:15  reg3x: guys how do i know if a  glib.spawn_async  is still running ?
21:15 --- forrestv is now known as mapbot2
21:17 --- jelly12gen is now known as jelly2
21:17 --- mapbot2 is now known as forrestv
21:17  psykidellic: Oh, its exams - so probably HW.
21:17  enerccio: nope
21:17  enerccio: it's exams server
21:18  enerccio: exams is my lib
21:18  bio-tty: why are swig wrapped libraries so corny?  like, what should have been simply import pcap;pcap.open_offline -- is instead wrapper = pcap.pyObject();wrapper.open_offline
21:18  bio-tty: why?
21:19  psykidellic: Eh, then that whole thing can probably be written in 5 lines of Twisted code.
21:19  enerccio: (I am only hobby programmer, studying linguistics rl)
21:19  sproingie: because swig is really hairy, and sometimes when it does the job the developer just dusts off his hands and says "all done" and makes you deal with a raw swig-wrapped API
21:19  enerccio: probably, maybe, but it's another framework
21:20  psykidellic: enerccio: Fair enough.
21:21  enerccio: but maybe I will do that later though
21:21  bio-tty: sproingie: i have worked a little with swig.  but i dont understand why they make such an ugly wrapper all the time?
21:24  SpookyET: Hi? What's the an efficient way to compress a tree which balloon into using hundreds of MB of RAM? I'm thinking of compressing paths that have not been travelled in a while back into a string.
21:27  gharz: anyone who's using IDLE? i installed python 3.1 and everytime i press ctrl+space the IDLE crashes and closes. i googled but they do not have any answer on this "bug" if it is.
21:27  sproingie: bio-tty: it'd be nice to see swig generate cython or ctypes wrappers.  from what i've seen it generates pretty readable bindings for other languages, it's just the python ones that are ugly
21:29  sproingie: gharz: IDLE is buggier than an outhouse in the jungle in the summer.  one of many reasons i don't use it.
21:29  gharz: sproingie: ok. thanks for the info.
21:30  tBunnyMan: I use it when playing around and testing things. I wouldn't do hardcore work in it
21:31  tBunnyMan: You can try installing a newer version if TCL from active state, which is how I fixed my hang on paste problem
21:32  qwebber: hello, can you use the value of sys.argv[1] to run a function with the same name?
21:33  sproingie: you *can*.  but use a dict.
21:33  unclecameron: where is my insanity: http://codepad.org/Ys8NSWR3 , just trying to pass a variable to etree.parse, the variable is valid
21:33  sproingie: my funcs = dict(foo=do_foo, bar=do_bar, ...etc...)
21:34  nosk1o: unclecameron: what's the error you're getting?
21:34  unclecameron: not getting an error, the rest of the script (which I know worked with static file) doesn't parse the file
21:34  unclecameron: (I think) because it doesn't see it
21:35  qwebber: sproingie, nice thanks
21:35  unclecameron: whole code: http://codepad.org/yOk4sfAM
21:35  sproingie: man i typed "my" before a var again didn't i
21:36  sproingie: (editing perl at work and chatting in #python don't mix)
21:36  nosk1o: what's a good math expression parser I could customize?
21:36  nvictor: hey python, foundations of python network programming gets a second edition!!
21:36  nosk1o: I'm struggling a bit with pymeta
21:37  nvictor: nosk1o: i gave up on pymeta
21:37  nvictor: dash wouldn't update it
21:38  nosk1o: nvictor: what's to update?
21:39  nvictor: there was no docs and it was buggy last time i checked
21:39  nvictor: since there was no docs i used the examples of the javascript impl
21:39  nvictor: they weren't working
21:39  sproingie: pymeta was a nice experiment but it was never positioned to replace a serious parser generator
21:39  nvictor: but well it was some months ago...
21:39  sproingie: for one thing it's glacially slow
21:40  nosk1o: sproingie: what would you recommend
21:41  sproingie: pyparsing
21:41  sproingie: which is also not extremely fast but it runs circles around pymeta
21:41  nosk1o: sproingie: I want to parse a math logical expression: ¬(x ∧ y) ⇒ z
21:42  sproingie: pyparsing will definitely do the trick
21:42  sproingie: in fact there's almost certainly sample expression parsers people have contributed
21:42  MostAwesomeDude: sproingie: You have numbers to back that up? I've got quite a bit of pymeta stuff that I'm not transitioning without good reason.
21:42  sproingie: you'd just have to replace the symbols
21:42  jdsmith2816_: i have a util.py file;  in another file in same directory i'm doing import * from util  nothing contained in util seems to be available..  even if I just do import util and then reference it by doing util.HEIGHT for instance python still complains that module util has no attribute that matches
21:42  jdsmith2816_: any idea what I am doing wrong?
21:42  MostAwesomeDude: jdsmith2816_: Just "import util" instead.
21:43  sproingie: MostAwesomeDude: just from when i was playing with pymeta myself.  i don't think dash ever claimed it was fast either.
21:43  sproingie: MostAwesomeDude: this was early releases of it though, perhaps he sped it up
21:43  jdsmith2816_: i was originally doing import util, and then util.whatever and it complained that util has no attribute whatever
21:43  nosk1o: MostAwesomeDude: can you help me use pymeta?
21:43  nosk1o: I don't care about speed
21:43  MostAwesomeDude: nosk1o: I might be able to answer questions.
21:44  jdsmith2816_: so i tried to import * and see if it would be available that way... but nothing was found.  pyCharm is recognizing the import as valid since it's making the stuff inside util available via code sense once it's imported
21:44  nosk1o: MostAwesomeDude: ok. Let me get a hold of my code, in a few minutes. If you're still here I have a couple questions
21:45  sproingie: i wrote a couple simple grammars for pymeta to test against pyparsing, i think it was literally 20 times slower.  but again this was early versions, i think he rewrote the code generation a couple times since
21:46  sproingie: unfortunately i did need speed for that one particular app, so i've stuck with my ad-hoc parser that's much sloppier but faster.
21:47  dualbus: jdsmith2816, open a python shell in the directory and import util, dir (util)
21:47  jdsmith2816_: k
21:47  dualbus: make sure HEIGHT is available
21:47  jdsmith2816_: one sec :)
21:47  nicky0288: pyrhon in android
21:47  nicky0288: how to use
21:48  Luyang: pyrhon?
21:48  jdsmith2816_: oooh... i know what's happening i think... util imports other things.. that also use some constants from util.. and those imports are happening before the constants are actually dfeined inside of util
21:50  sproingie: easier to use jython through ASE
21:50  jdsmith2816_: indeed that is what's happeing, thank you dualbus :)
21:51  dualbus: no
21:51  dualbus: np
21:51  sproingie: given the state of editors on android, that's where i go in for the two-space indent.
21:53  tos9: sproingie: jython isn't even available for ASE. It's CPython or bust.
21:53  sproingie: huh i thought the ASE dialect was jython
21:54  sproingie: all i ever did was write some hello world type stuff so i didn't even know
21:54  c3l: whats the best way to call a function based on if a command line argument is passed. for instance "--foo bar", where --foo corresponds to the function to run, and bar is its argument.
21:54  c3l: ..using argparser.
21:56  vr6: How do I prevent nested lists  [[17, 10, 16, 20, 16, 3]] when going through datarows of an existing list and "doing something" to it, appending modified dataRow to newlist.  What I want is [17, 10, 16, 20, 16, 3].  Will pastebin if necessary.
21:56  sproingie: oh right jython on dalvik never took off
21:56  nosk1o: vr6: use .extend() instead of .append()
21:57  vr6: nosklo: will do, thanks!
21:57  KirkMcDonald: c3l: You can define a custom action: http://docs.python.org/library/argparse#action
21:57  andihit: does BZ2Decompressor use the GIL?
21:58  MostAwesomeDude: andihit: That's a strange question and probably not what you actually wanted to ask.
21:58  sproingie: everything uses the GIL unless it releases it
21:58  tarpsocks: can someone explain to me why there are a set of parentheses before the square brackets in globals()["foo"].__call__(5)
21:58  nosk1o: and then, it is using the GIL (by releasing it)
21:58  MostAwesomeDude: andihit: I would imagine that only the actual I/O releases the GIL.
21:59  KirkMcDonald: tarpsocks: globals is a function.
21:59  reg3x: guys i need help.. my progressbar is finally working -> http://python.pastebin.com/KRzSFtVu <-   .. but if i add  standard_output=True  to the function  glib.spawn_async . it stop working.. why'??? seems like a bug??
21:59  infobob: http://paste.pound-python.org/show/1840/ (repasted for reg3x)
21:59  sproingie: well-behaved C modules should release the GIL when possible.  if it doesn't, then you could submit a bug
21:59  tarpsocks: KirkMcDonald: and it returns a dict?
21:59  KirkMcDonald: tarpsocks: Yes.
21:59  c3l: KirkMcDonald: Ill look into that, thanks
21:59  andihit: I'm trying to speed up my bz2 decompressing, and with benchmark I've discovered BZ2Decompress.decompress() is the bottleneck -> so I'm asking if it makes sense to split it up in threads
21:59  reg3x: probably a bug on glib ??
21:59  sproingie: threads are not going to make it magically faster
21:59 --- prepreg|AFK is now known as prepreg
22:00  nosk1o: reg3x: let me check...
22:00  sproingie: bzip2 compression is simply CPU intensive
22:00  sproingie: it's one reason i stick with gzip for my big archives
22:00  andihit: why not? now I'm using 1 core of 4 (with hyperthreading, 8..)
22:00  sproingie: if you're decompressing more files then perhaps it'll help
22:01  nosk1o: reg3x: if you add standard_output=True you must use glib.io_add_watch to monitor the resulting fd
22:01  sproingie: why not try it and see if that's the case?
22:01  reg3x: thank you nosklo... it works fine. the progress bar pulse and then stop when the spawns ends.. but if u just add ::  standard_output=True   .  the progress bar pulses to infinite
22:01  andihit: no, it's one big pbzip2 file
22:01  reg3x: ok nosklo
22:01  sproingie: andihit: then what would these extra threads do?
22:01  nosk1o: reg3x: if you don't read the output, the process will never end
22:01  nosk1o: reg3x: it will wait forever for you to read
22:01  MostAwesomeDude: andihit: If you are looking for concurrency, use multiprocessing, not threading.
22:02  andihit: sproingie: seek in the file and decompress 800KB blocks parallel
22:02  sproingie: andihit: give it a try then
22:02  reg3x: oh ic nosk1o thanks a lot ill focus in understand how to use glib.io_add_watch  thank you
22:02  andihit: MostAwesomeDude: multiprocessing? 2 processes which communicate? but that's only needed because the GIL, right?
22:02  sproingie: i suspect it keeps the GIL released for the whole read, which includes the decompression, so threads might do the trick
22:03  sproingie: only one way to find out
22:03  MostAwesomeDude: andihit: It's needed because threading sucks.
22:03  MostAwesomeDude: andihit: (This isn't Python-specific.)
22:03  sproingie: it's needed because refcounting really sucks when combined with threading
22:03  andihit: but isn't threading much easier with the locks and so on?
22:03  nosk1o: andihit: heh
22:03  MostAwesomeDude: andihit: You would think so, but no.
22:04  reg3x: nosk1o,  the mask for that case would be    glib.IO_IN  ? -> there is data to read    or  glib.IO_HUP  ?  -> hung up    .. is that condition to end the process or to continue the process?? is kinda not clear
22:04  MostAwesomeDude: andihit: Go and try it yourself! There's lots of tools built into the multiprocessing module which make this kind of task *really* easy.
22:04  sproingie: only cpython does pure refcounting, and thus only cpython has a GIL
22:04  reg3x: nosklo, the mask on  -> http://library.gnome.org/devel/pygobject/stable/glib-functions.html#function-glib--io-add-watch [+]
22:04  andihit: MostAwesomeDude: can you give me some keywords? modules to use for IPC (hopefully it works on linux and windows ;))
22:04  nosk1o: reg3x: ok, glib.IO_IN means your callback function will be called when there's data available to read. You probably DO want this.
22:05  MostAwesomeDude: andihit: http://docs.python.org/library/multiprocessing.html
22:05  sproingie: anyway it's *definitely* going to release the GIL for I/O and i suspect it doesn't go out of its way to grab it again to decompress so just *try it and see*
22:05  reg3x: ok nosk1o  thank you for helping
22:05  nosk1o: reg3x: OTOH glib.IO_HUP is called when the other process closed the pipe. It is not necessarily when it terminated
22:05  MostAwesomeDude: andihit: The multiprocessing module is, magically, called "multiprocessing".
22:06  nosk1o: reg3x: the other process could close the pipe by doing stdout.close() and keep running doing something else. That would call a callback registered with glib.IO_HUP but the process would still be running
22:06  andihit: oh, thanks. I didn't know it - I thought I have to spawn the other processes by myself and open some pipe (which doesn't exist on windows I think)
22:06  sproingie: windows has pipes
22:06  nosk1o: reg3x: usually you could register another callback on glib.IO_HUP to mean "data receiving finished"
22:06  sproingie: pipes are practically the only IPC primitive windows uses
22:07  andihit: oh, ok
22:07  reg3x: nosk1o,  how do you know all that? in the api is not well explained like you tell it
22:07  sproingie: multiprocessing works fine on windows
22:07  sproingie: (for some buggy definition of "fine")
22:07  nosk1o: reg3x: well, it comes mostly from experience. The terms used by the documentation are common with other process spawning apis of other libraries/languages
22:07  sproingie: they've probably hammered out the kinks now
22:14  rubberneck: I have a project of multiple modules. If I have a module that contains a variable: foo="bar" and I import that module to several other files one changing the value of foo to "hello", will all the other files that imported that mod have the updated value of foo? (basically trying to create a singleton)
22:16  nosk1o: rubberneck: no.
22:16  nosk1o: rubberneck: first of all - you can't change a string's value. Strings are immutable objects
22:17  nosk1o: rubberneck: so when you do `foo = 'bar'` and later do `foo = 'hello'` you're creating a *new* string object, and using the same name to refer to it
22:17  dropdrive: How do I decide what to set threads= to in WSGIDaemonProcess?
22:17  nosk1o: rubberneck: now, the solution usually is to create a class, and store the string in your class' instance
22:17  nosk1o: dropdrive: with lots of testing
22:18  dropdrive: If I use globals, does that mean I have to use threads=1?
22:18  nosk1o: dropdrive: no. if you use globals, that means you have to stop doing that
22:18  dropdrive: nosk1o: I guess my question is more like, "is it safe to set it to more than 1"?
22:18  nosk1o: dropdrive: the short answer is "no".
22:18  rubberneck: nosk1o: This is why I asked, http://stackoverflow.com/questions/31875/is-there-a-simple-elegant-way-to-define-singletons-in-python
22:18  dropdrive: nosk1o: Okay :)
22:19  nosk1o: rubberneck: now, the usual solution usually is to create a class, and store the string in your class' instance, instead.
22:19  nosk1o: rubberneck: then you can just pass the instance around between your files, and a reference to all the objects attached will go with it
22:20  nosk1o: rubberneck: that makes your code easier to understand, test and debug
22:20  nosk1o: rubberneck: it doesn't have to be a *enforced* singleton. You just instantiate it once if you don't need more than one
22:21  rubberneck: nosk1o: right on, thanks.
22:24  reg3x: nosk1o, if i use  glib.io_add_watch  as u recommend me.. do i have to eliminate  glib.child_watch_add() ?
22:26  vr6: nosklo that didn't seem to resolve it.  posting code here.
22:26  vr6: looking to build a list without it nesting itself.... http://paste.pound-python.org/show/1842/
22:27  nosk1o: reg3x: yes.
22:27  nosk1o: er
22:27  nosk1o: reg3x: no
22:28  nosk1o: reg3x: you don't have to eliminate it. You need it if you want to know when the process has *ended*
22:28  Nece228: hi
22:29 --- prepreg is now known as prepreg|AFK
22:29  Nece228: im currently reading byte of python
22:29  nosk1o: reg3x: we're talking about 3 events here 1) there's data to read (glib.IO_IN) 2) other side process closed output pipe (glib.IO_HUP) 3) other process finished execution (child_watch_add)
22:29  Nece228: but i dont understand
22:29  nosk1o: reg3x: you can add callbacks to the ones you care about
22:29  Nece228: what is function printMax?
22:29  reg3x: right nosklo.. i changed the glib.timeout_add  by  glib.io_add_watch  as shown in  ->>  http://python.pastebin.com/uBq99UWs    . but the GUI freezes ... u dont see the progressbar.pulse()
22:29  infobob: http://paste.pound-python.org/show/1843/ (repasted for reg3x)
22:29  Nece228: in other words
22:30  Nece228: where can i find additional tutorials on using function parameters?
22:30  reg3x: and also it stays in an infinite looop. running the pulse() method
22:30  nosk1o: reg3x: ok, on that code, pulse() callback is being called when there's data to read
22:30  nosk1o: reg3x: but you never read it so it keeps being called over and over
22:30  nosk1o: reg3x: since you never read it, the process never finishes
22:31  nosk1o: reg3x: so you have the equivalent of a infinite loop calling self.barra.pulse()
22:31  KirkMcDonald: Nece228: http://docs.python.org/tutorial/controlflow.html#defining-functions
22:31  Nece228: thanks
22:31  reg3x: i need now to understand  how to read that file descriptor.
22:32  nosk1o: reg3x: there are many ways to do that. os.read() is one
22:32  reg3x: oh! great. thanks nosk1o ill try it
22:34  nosk1o: reg3x: also, I don't think you should remove the timeout_add - bar pulsing should be time-based and independent from actual reading IMO
22:35  satvikc: can I create a list of function names which can be called from for loop..
22:35  reg3x: ok nosk1o but.. it does return an id   and also  glib.io_add_watch return an id ... so which should i use  ? that id is an argument to call  glib.child_watch_add
22:35  nosk1o: satvikc: create a list of functions instead
22:35  nosk1o: satvikc: mylist = [func1, func2, func3]
22:35  nosk1o: satvikc: then you can do for f in mylist: f()
22:36  satvikc: thanks
22:36  nosk1o: reg3x: which should you use to do that
22:37  nosk1o: reg3x: er
22:37  reg3x: im getting the error TypeError: pulse() takes exactly 2 arguments (3 given)   on  -->>  http://paste.pocoo.org/show/324600/
22:37  nosk1o: reg3x: which should you use to do what?
22:37  hoonteke: perhaps off-topic, but I'm not sure to which community to address it: does anyone know if there are *Mac* Python bindings for GLPK.
22:37  hoonteke: As in, I'm currently only able to find the python-glpk package on debian based systems, and I'd like to use it on a Mac.
22:37  nosk1o: reg3x: the callback gets more parameters than that. Again, please read the documentation at http://library.gnome.org/devel/pygobject/stable/glib-functions.html#function-glib--io-add-watch
22:38  reg3x: im sorry nosk1o. i will read it again
22:38  nosk1o: reg3x: at the end of the glib.io_add_watch section it describes how to define the callback
22:38  nosk1o: reg3x: under "The signature of the callback function is:"
22:38  reg3x: yes i have read it but i didnt understand what was that    cb_condition
22:38  reg3x: i know the  source  is the same file descriptor..
22:39  nosk1o: reg3x: cb_condition is the condition under which the callback is being called
22:39  reg3x: nosk1o,  also glib.IO_IN  ??
22:39  nosk1o: reg3x: suppose you register a callback to be called on glib.IO_IN and glib.IO_OUT - when your callback is called, it will receive cb_condition - that's which ones of those conditions triggered the event
22:40  nosk1o: reg3x: so you can know, inside the callback, the reason it was called for
22:40  nosk1o: reg3x: the documentation says "cb_condition is the condition that triggered the signal"
22:40  reg3x: ummm
22:41  nosk1o: reg3x: since you only registered your callback to be called in a single condition (glib.IO_IN) then cb_condition will be that, always
22:43  reg3x: im very confused nosk1o ...
22:43  reg3x: i did the following:  http://paste.pocoo.org/show/324606/
22:43  reg3x: but it says TypeError: pulse() takes exactly 2 arguments (5 given)
22:43  reg3x: i think i have issues passin args...
22:44  reg3x: the place to put them correctly..
22:44  nosk1o: well, you passed a lot of extra things to io_add_watch so all those things will be passed to your callback too
22:44  reg3x: ok
22:44  cbx33: hi all this is a tricky one - I am using a version of python that was compiled for an embedded type board, an AVR32 chip, it runs fine, I wanted to run django on there....however it is segfaulting...I traced it back to a particulat import of locale.....when i load python on it's own and import locale it loads no problem.....when i run the django-admin.py, it segfaults......if I remove that import it runs.....but I'm guessing it will run into problems late
22:44  cbx33: r - any reasons why it would import locale on it's own, but not in the middle of django?
22:45  cbx33: i realise I'm clutching at straws :)
22:46  cbx33: just thought it would be cool to get django working on it that's all
22:47  cbx33: hmm actually, looking at it.....I could remove the locale import
22:47  cbx33: as the ascii locale will be correct in all cases
22:47  nosk1o: cbx33: how do you know the problem is at import time?
22:47  cbx33: ok
22:47  cbx33: it may not be
22:47  cbx33: but i looked through the django code
22:47  cbx33: and there's only one line that uses locale
22:48  cbx33: this being an embedded type system, it's not beyond the realms of possibility that there is a problem with locale
22:48  cbx33: I'll try runnign the command in isolation in a pytho console
22:48  cbx33: i didn't say it was the import that was the problem...or i didn't mean that...i just meant that when i removed it it worked....
22:48  cbx33: looking at the code it does a "try" and except with locale
22:48  cbx33: so if it fails to find the module, because i commented it out...it defaults to ascii locale
22:49  cbx33: which is fine by me
22:49  cbx33: yup
22:49  cbx33: locale.getdefaultlocale()[1]
22:49  cbx33: that segfaults
22:50  sproingie: what OS?
22:50  nosk1o: cbx33: yeah, seems your libc implementation is buggy
22:51  pluma: How do I turn a list [a,b,c,d,e,f] into a list [[a,b],[c,d],[e,f]]?
22:51  cbx33: yup posibly
22:51  cbx33: no worries
22:51  cbx33: I can happily handle ascii :)
22:51  nosk1o: pluma: [L[pos:pos+2] for pos in xrange(0, len(L), 2)]
22:51  nosk1o: cbx33: ascii is an encoding. locale is more than that
22:51  pluma: nosklo: hm... thanks
22:52  cbx33: of course
22:52  nosk1o: cbx33: try locale.getpreferredencoding()
22:53  sproingie: won't help for things like collation and numbers and dates
22:53  cbx33: segfault
22:53  sproingie: wowsers
22:53  nosk1o: heh
22:53  cbx33: heh
22:53  cbx33: BUGGY!!
22:53  Kzim: Hey, i'm a bit confuse i start with python and a little django and, i have to do a script that process files and data so i made a script but i need to have a visual part for the guy that will use it. he prefer a web site so i've tried django. but is it the right thing to modify my script to adapt with django ? my simple script because a big factory attached with django... what is the best practice please ?
22:53  sproingie: cbx33: what does the 'locale' command return for you?
22:53  cbx33: not found
22:53  cbx33: :)
22:53  nosk1o: Kzim: try flask
22:53  sproingie: cbx33: what OS are you on?
22:53  nosk1o: Kzim: http://flask.pocoo.org/docs/
22:54  cbx33: it's kinda not - as I said I'm running on an NGW100 board
22:54  cbx33: it's an AVR32 chip with a very cut down linux on there
22:54  cbx33: I could probably compile locale
22:54  sproingie: ah.  that would asplain it.
22:54  cbx33: yup
22:54  cbx33: nice little board :)
22:54  Kzim: nosk1o: it's the same probleme i mean do i have to merge my script with a web framework ?
22:54  sproingie: just the libc needs some work i guess
22:55  cbx33: probably
22:55  cbx33: does locale use the locale command?
22:55  cbx33: or does it use C bindings to libc?
22:55  nosk1o: Kzim: you don't _have_ to merge your script with a web framework. You **want** to merge your script with a web framework.
22:55  sproingie: libc
22:55  reg3x: nosk1o,  it finally worked :D :D :D :D :D  ->>  http://paste.pocoo.org/show/324611/  !!!
22:55  fission6: how to i pass a new line in a get http request in a string variable?
22:55  nosk1o: Kzim: since it will make your job a lot easier and pleasant
22:56  reg3x: nosk1o,  but the progress bar takes a little bit time to start pulsing.. and doesnt last almost nothing
22:56  Repgahroll: hello guys... why cxfreeze on opensuse copies a lot more of library files to the release directory than on ubuntu (its a pyqt4 app)?
22:56  reg3x: nosk1o,  maybe the order of commands are not right  ??
22:56  Cam: What is nested function with free variables
22:56  Cam: *Is a
22:56  nosk1o: reg3x: 3 things
22:56  Kzim: nosk1o: i don't know it's easier to put an arc in CLi than make a form. but ... so you say that i want to merge my script and not keep them separated ?
22:57  nosk1o: Kzim: you say you want to call your script separately from the web framework part? that works too
22:57  Kzim: i don't know i ask what is the good way to do things :/
22:57  nosk1o: reg3x: 1) you should really use the timeout_add() to pulsate the bar instead of calling self.barra.pulse() inside your callback that reads data
22:58  Cam: Does nobody know?
22:58  nosk1o: reg3x: 2) you should reduce your reading size, since 10000 could be bigger than the OS buffers allocated for your pipe
22:59  pluma: nosk1o: How about a list [{'key': [a, b, 0], 'value': c}, {'key': [a, b, 1], 'value': d}, {'key': [a, e, 0], 'value': f}, {'key': [a, e, 1], 'value': g}] when I want [(c, d), (f, g)]?
23:00  reg3x: ok nosk1o excellent suggestions . and 3) ?
23:00  Kzim: nosk1o: can i ask why Flask and not Django ?
23:00  nosk1o: reg3x: 3) you should accumulate the data you're reading by appending it into "self.datos" or something, and print the results on done() callback or something. Since pulse() could be called more than once if there's too much data to read
23:01  nosk1o: Kzim: because django seemed a big stack for what you want - it includes database and stuff like that - so I suggested flask because it is simpler.
23:01  nosk1o: Kzim: also because django kind of sucks
23:01 * redduck666 wonders why django kind of sucks
23:02  nosk1o: pluma: [(L[pos]['value'], L[pos+1]['value']) for pos in xrange(0, len(L), 2)]
23:02  cbx33: hmm
23:02  Kzim: nosk1o: ind of suck ? really ? i mean i will have to acces the Database to make some graph later so ... dunno if Flask will be enough
23:02  cbx33: damn locale is used again :p
23:02  KirkMcDonald: Cam: Well, do you know what a nested function is?
23:02  cbx33: heheheh
23:02  cbx33: need to find a way to fudge
23:02  nosk1o: redduck666: many reasons
23:03  Fretboard: I am really struggling with OOP and Python, does anyone know of a good tutorial?
23:03  nosk1o: Kzim: you can use database with flask too, it's just not builtin into flask.
23:03  pluma: nosk1o: What if I don't know whether they'll be in that sequence, but I want to group them by their "key" attributes?
23:03  redduck666: nosk1o: now that is useful argumentation :)
23:03  reg3x: excellent advices nosk1o ...  and about the 2) , isnt there a way to asign that dinamycally? i mean instead of puttin 1000
23:03  Cam: KirkMcDonald, yes, I have a lambda func in my original func
23:03  nosk1o: redduck666: the main reason is the ORM
23:03  redduck666: dunno, i used django on many ocasions now, it is very pragmatic for most of the stuff that i needed to get done.
23:03  pluma: nosk1o: but thanks for the answer. I didn't expect one ;)
23:03  KirkMcDonald: Cam: A free variable is any name that is used in a block, but not defined there.
23:04  Cam: ok, thanks.
23:04  nosk1o: pluma: I don't understand your last request
23:04  KirkMcDonald: Cam: So if a nested function refers to a variable in an enclosing function, it is a free variable (from the point of view of the nested function).
23:04  lvh: KirkMcDonald: I am not a number! I am a free variable.
23:04  nosk1o: redduck666: yeah, it's certainly better than, say, php
23:05  lvh: Epigram is awesome.
23:05  Fretboard: Could someone please refer me to a good Python tutorial on OOP?
23:05  nosk1o: redduck666: but it loses when compared to other better written python software
23:05  lvh: You need to be a genius to understand a subset of natural numbers though.
23:05  pluma: nosk1o: Basically I want to do the same, but there might be [a,b,2] also, and I don't know in advance. Forget about the "not sorted" part. My mind was being useless.
23:05  KirkMcDonald: Fretboard: http://docs.python.org/tutorial/classes.html
23:05  lvh: redduck666: Importantly, what have you used that isn't Django.
23:05  reg3x: there must be a way to read file descriptors without reserving memory
23:06  nosk1o: pluma: it would work, no? I don't know what the problem is with having more values in the list
23:06  redduck666: nosk1o: depends what you want to do. for control freaks it most certainly sucks. we are doing heavy-ish .sql stuff and almost non using the ORM at all
23:06  Fretboard: KirkMcDonald: THank you
23:06  pluma: nosk1o: nm
23:06  redduck666: but for the previous job or random clients it rocks in my experience
23:06  lvh: I'm not sure I'd call it a control freak issue
23:06  redduck666: lvh: ?
23:06  lvh: Django is great for building the kind of sites Django wants you to build
23:07  nosk1o: pluma: ooh wait
23:07  Kzim: lvh: what you mean ?
23:07  nosk1o: pluma: you said that you'd want to group all by key
23:07  nosk1o: pluma: now I got it
23:07  redduck666: lvh: i disagree. for a consumer facing web product it is non trivial to get in serious issues with django
23:07  mikedoty: A pygame module I'm loading is dumping a lot of output to the console.  In the C source file, I see it's just doing printfs to display the messages.  I've tried setting sys.stdout and sys.stderr to a custom object with a do-nothing write() method.  This approach does suppress my own print "something" messages, but the C module's printf statements still make it to the command line.  How can I go about finding a way to point the printf pipe 
23:07  pluma: nosk1o: yes, but only the first part of the key, not the last bit
23:07  redduck666: like road blocks. at least in my experience.
23:10  cbx33: damn
23:10  c3l: why does math.ceil and floor return floats and not integers?
23:10  cbx33: seems like locale isn't the only place it is failing
23:10  cbx33: this is tough
23:10  nosk1o: infobob: redent pluma def mykey(item): return item['key'][:2];; def getvalues(items): return tuple(i['value'] for i in items);; print [getvalues(items) for k, items in itertools.groupby(yourlist, key=mykey)]
23:11  infobob: pluma, http://paste.pound-python.org/show/1844/
23:11  redduck666: uuu, sweet feature of the bot
23:11  pluma: nosk1o: You really like list comprehensions, don't you?
23:12  nosk1o: pluma: aren't they great? I mean, when they're both compact *and* readable
23:12  nosk1o: pluma: however that assumes your list is already sorted. If it's not sorted then there's a better solution
23:12  nosk1o: pluma: maybe it's better anwyay
23:13  nosk1o: anyway
23:13  Cam: pluma: it's even better when you can iterate through a list and print it on ONE line, no `for i in x: dothis(i), print list_that_i_appended_to'
23:13  nosk1o: it's not about the number of lines. It's about readability
23:14  Kzim: it's damn frustrating ! i mean i start python and i really don't where to go to do an application that will last. i mean if i want make a website now it's django later it's Flask for exemple. what is the good way to make an application :/
23:15  nosk1o: Kzim: there's no generic good way - it depends on the application
23:16  nosk1o: Kzim: each kind of application will have a tool that fits better
23:16  nosk1o: c3l: because they're just wrappers around the underlining C math.h functions with the same names
23:17  nosk1o: mikedoty: you got cut at "printf pipe..."
23:17  nosk1o: mikedoty: but you have to redirect the actual file descriptor to suppress that.]
23:17  redduck666: Kzim: if you suspect the web app will be trivial than the flesk is prolly better way to go, if however you plan to build & maintain full blow web app than django is prolly better choice
23:17  rioch: Anyone familiar with pygtk dialogs?
23:18  redduck666: but this is just gross generalization
23:18  novato_br: why can I make it work doctest rotine?
23:18  satvikc: I have a list of operators like ['+','-'] . how to apply it on opperands ,
23:18  nosk1o: rioch: do you have a real question?
23:18  nosk1o: satvikc: that's not a list of operators. It's a list of strings
23:18  c3l: nosk1o: hm okay, its just a bit unintuitive that a function that approximates to an integere doesnt return an integer
23:18  Kzim: hum
23:19  nosk1o: satvikc: make a list of operators instead:  mylist = [operator.add, operator.sub]
23:19  novato_br: why can I make it work doctest rotine? ==> http://pastebin.com/zd9fRMBC
23:19  infobob: http://paste.pound-python.org/show/1845/ (repasted for novato_br)
23:19  Kzim: i prefer a script in console and there in 10 year it will still work :)
23:19  satvikc: nosk1o: I am reading it as string . how to convert it to operators.
23:20  rioch: nosk1o: Yes. I want to prevent a dialog from sending a response when the data entered is incorrect. It seems to send a response automatically. How can I prevent that?
23:20  mikedoty: noskio:  Sorry, figured DI went long.  finished with "pipe to somewhere other than the command line"
23:20  nosk1o: satvikc: use a dict ... {'+': operator.add, '-': operator.sub} then run your list through the dict
23:20  novato_br: why doesn't doctest check my reverse routine?
23:21  binbrain: on the linux cmd line there is a really easy way to POST and GET, POST -s <url> will give back a return code and output, anything equiv in the python stdlib?
23:21  kerio: does math.sqrt use the carmack hack?
23:21  mikedoty: At the risk of sounding more amateur than I already am, can you elaborate on what you mean by "suppressisng the actual file descriptor?"
23:21  lvh: binbrain: Depend why you're doing that
23:21  disgrntld: is it smart to do something like `if char is '#'`? I'm worried I might end up with two memory locations that refer to '#'
23:21  lvh: binbrain: There's a stdlib tool called urllib
23:21  binbrain: lvh: test restful services
23:21  kerio: disgrntld: use ==
23:21  cbx33: nosklo, I got it working :)
23:21  lvh: binbrain: If you need non-trivial amounts of concurrency, you'd use twisted.web.client
23:21  Kzim: how can i exec a command and retrieve the stout please ?
23:21  kerio: using is is not smart
23:21  lvh: binbrain: urllib/urllib2
23:21  sproingie: kerio: it uses whatever the platform's math library uses.  carmack's trick is inverse roots
23:21  disgrntld: noted kerio
23:21  kerio: sproingie: yeah, but x * isqrt(x) is sqrt(x)
23:21  lvh: disgrntld: Let Python worry about it.
23:22  nosk1o: rioch: sending a response automatically to who?
23:22  cbx33: nosklo, hit another problem which i think is impassable, no sqlite3 support - which means I can't do anything VERY useful
23:22  lvh: disgrntld: For one, small ints and literals might be interned.
23:22  cbx33: but it's working
23:22  nosk1o: rioch: you can overwrite the response signal and do whatever you want
23:22  disgrntld: ..I remember something weird about doing that with ints (something about caching certain lower values), so I wanted to check for this
23:22  disgrntld: ahha lvh
23:22  lvh: disgrntld: Correct, but that's an implementation detail
23:22  nosk1o: mikedoty: python myfile.py > /dev/null
23:22  novato_br: http://paste.pound-python.org/show/1846/
23:22  lvh: disgrntld: It lowers memory use but it should not affect behavior
23:22  lvh: disgrntld: Just use ==, the first thing it does is check for identity
23:23  disgrntld: very interesting... thanks for the info guys
23:23  lvh: disgrntld: There's ways to get that string but not EXACTLY that same string object
23:23  mikedoty: Oh, I see.  so, there's no option to squelch the printf statement short of explicitly >'ing it to a file?
23:23  lvh: disgrntld: your code (with is) would break on it for no reason
23:23  cbx33: nosklo, now to try getting something else working :)
23:23  lvh: printf? you mean print, or are we talking C here
23:23  kerio: lvh: CLEARLY HE SHOULD CALL intern() THEN
23:23  kerio: right?
23:23  lvh: disgrntld: Do not listen to kerio
23:24  kerio: maybe i should start using sarcasm tags
23:24  kerio: although i used intern() in a meaningful way in my program
23:24  rioch: nosk1o: The dialog is built using glade. The dialog_action_area has an ok and cancel button. In glade I've not set a response id, but it seems to default to 0 (which according to the gtk is not a valid response). In the function connected to the Ok button, it fires a response without me calling the response() method.
23:24  lvh: kerio: Why didn't you just use a classmethod
23:24  rioch: nosklo: So in answer to your question, the caller does this: response = dialog.run()
23:25  kerio: ¿que?
23:25  kerio: you mean object()?
23:25  sproingie: kerio: SSE has a single square root instruction.  i suspect libm uses that.
23:25  kerio: that's the sign that CPU makers have way too much free time
23:26  lvh: kerio: No.
23:26  lvh: kerio: Class() typically gives you a new object.
23:26  sproingie: kerio: carmack's constant is for 32 bit single precision floats, which was fine for quake but doesnt help for higher precision
23:26  lvh: kerio: Class.fromSomething() makes no such promise.
23:26  nosk1o: mikedoty: you could do it from inside the process using os.dup2() but I don't think it is a good idea, because it could have side effects and hard-to-find bugs I'm not familiar with
23:27  kerio: lvh: no, for storing a bunch of strings that are always the same
23:27  pluma: nosk1o: with a slight tweak I was able to get exactly what I wanted. Thanks for your solution. I think I'll use list comprehensions and itertools more often from now on
23:27  kerio: "Arc", "Bar", "Cav", "Hea", "Kni"...
23:27  pluma: nosk1o: I wouldn't have thought of defining helper functions
23:28  nosk1o: rioch: yeah, that's how dialogs work. You click a button you get a response. The response callback will be called. To override you'd have to change the signal on the button, but it's more common to just connect to the "response" signal and do your checking there
23:28  lvh: kerio: So, create a list of them
23:28  mikedoty: noskio:  That's what I was looking for.  I'll tread carefully, but I'm getting copious amounts of spam from a Joystick library and I'm eager to find a way to block them
23:28  lvh: kerio: CPython interns those string literals
23:28  Repgahroll: hey guys... do you know how i can check if a pyqt window has been closed? I want to lock a window whilst another is open, but then i must unlock is as soon as the other is closed.
23:28  sproingie: oh looks like there's a constant for doubles too.  well at any rate the SSE instruction would still beat it.
23:29  rioch: nosk1o: the problem I have is that, if the input is wrong, I'd rather not close the dialog, otherwise the user loses all the information they've entered.
23:29  lvh: Also I'm not convinced that's "meaningful", it's a bunch of three-letter strings
23:30  tesseracter: so ive got 2 search sets, and i want to see how much each item has moved around. any good ideas or tools?
23:30  nosk1o: rioch: I don't think the dialog is already closed when the response signal is called. Is it?
23:30  rioch: nosk1o: you have call destroy(), but the dialog becomes totally unresponsive....because dialog.run() has returned.
23:30  nosk1o: rioch: dialog.run() returns after response is called
23:31  nosk1o: not before
23:31  kerio: lvh: it's read from xlogfiles
23:31  kerio: yeah, i should make that a bit better
23:31  kerio: but meh
23:32  rioch: nosk1o: 1) dialog.run() is called. 2) user presses ok; dialog.run() returns via some automatic response
23:32  kerio: lvh: by the way, we're organizing a june nethack tourney that encompasses spork and un too
23:32  meltingwax: if i have my own custom IRC server, what is the best way to administer code updates to the server? is there any industry practice better than upgrading and restarting (which disconnects all clients)?
23:33  rioch: nosk1o: at least that's what I'm experiencing
23:33  sproingie: "best practices" for an ircd.  *giggle*
23:33  nosk1o: rioch: 1) dialog.run() is called. 2) user presses ok; 3) "response" signal is emited 4) dialog.run() returns whatever
23:34  Ochikobore: hello.
23:34  rioch: nosk1o: AFAICT step 2 and 3 happen as one. I cannot prevent the signal being emitted if the user data is incorrect.
23:34  pyml: hi there, i would like to know how to modify text in a text file after i have used re()  would i use re.sub() and then just use myfile.write() ?
23:34  nosk1o: rioch: yeah, I'm not suggesting that you prevent it from being emited, since I'm suggesting that you check the data inside it
23:35  rioch: nosk1o: when the ok button is pressed?
23:35  nosk1o: rioch: inside your "response" signal handler
23:36  rioch: nosk1o: which is inside the parent dialog.
23:36  rioch: nosk1o: at which point, how can I reactivate the original dialog?
23:36  nosk1o: rioch: the dialog is still there at that point.
23:38  rioch: response = dialog.run(); if response == gtk.RESPONSE_OK: if invalid: //don't destroy the dialog, but how can I give it control again?
23:38  nosk1o: rioch: no.
23:39  nosk1o: rioch: I meant to check for the validity  *inside the "response" signal handler*
23:39  nosk1o: rioch: *before* dialog.run() returns, not after
23:40  mikedoty: Ha!  Take that, console spam!
23:40  mikedoty: Thanks for the tip, noskio.  Here's the code I'm using.  Would you mind elaborating on the potential risks you might know of, regarding using this technique?  http://paste2.org/p/1204750
23:42  rioch: nosk1o: Apologies. I misunderstood. It looks like exactly what I need. I'm reading the API for it now. This one was well hidden. Thanks.
23:43  alpha^: I've been searching a bit, but can't seem to find out why os.statvfs is deprecated and what is promoted in its stead. Can anybody clarify that?
23:43  RandIter: in py3.2, I'm using ArgumentParser.add_argument() and i see that one of its parameters is "choices" which can be a container supporting the "in" operator. i think a function returning True or False would've been better instead.
23:43  binbrain: urllib seems awkward for testing rest services, you have you pass data to get it to do a PUT, but there may be no args
23:43  nosk1o: rioch: http://bpaste.net/show/13084/
23:44  nosk1o: rioch: that's a dialog that won't close when you click OK.
23:45  rioch: nosk1o: Thanks. I'm trying it out now.
23:45  lvh: binbrain: Yeah, I'm writing a REST service
23:45  sproingie: alpha^: os.statvfs returns a named tuple that you can address by field names directly without needing a top level module to hold the constants
23:45  lvh: binbrain: Using twisted.web.server. I'm using twisted.web.client to test it
23:45  lvh: binbrain: there's some assembly required but yeah it's not bad
23:46  sproingie: alpha^: os.statvfs('/dev/sda1').f_frsize => 4096 (at least on my box)
23:46  lvh: binbrain: There's getPage which is "easy" but there's also Agent which is more powerful. Unfortunately it also delivers bodies as streams
23:46  lvh: binbrain: That's great if you're downloading files
23:47  alpha^: sproingie, What version of python is that from?
23:48  sproingie: alpha^: i have 2.6.6
23:48  pluma: If I define function in my functions, will CPython optimize for them or should I put them outside?
23:49  alpha^: sproingie, Ah, yes, I see you are right. I didn't know there was a top-level module named 'statvfs'. Good to know the module isn't going away in favor of os.stat
23:49  sproingie: pluma: cpython doesn't optimize anything
23:49  sproingie: pluma: but there's no difference in speed
23:49  sproingie: pluma: actually a locally defined function will be called faster
23:49  pluma: sproingie: I mean, is it okay to have the functions inside the functions they are used in?
23:49  pluma: sproingie: ah, okay.
23:49  sproingie: locals are statically assigned, so there's no lookup
23:49  kerio: yeah but it will be created multiple times
23:49  sproingie: pluma: define a function where it's relevant
23:50  sproingie: well yeah there's that.  make it a closure.
23:51  lvh: binbrain: I wrote something that basically just dumps input into a CStringIO. It's unfortunate it needs to be written, but it solves a problem.
23:51  binbrain: thanks lvh for the feedback
23:52  lvh: binbrain: No problem. If you're interested in my thing, I can put it up somewhere
23:53  sproingie: alpha^: os.stat is for doing stat on files, statvfs is for filesystems.  the stat module probably doesn't need to stick around either but it's used a whole lot more than statvfs
23:53  lvh: I've been too lazy to produce publicly available things
23:53  pluma: sproingie: thanks
23:53  sproingie: stat module also has some functions that are more useful than just constants
23:54  sproingie: tho i suppose those could be methods on a stat object
--- Log closed Sat Jan 22 00:00:47 2011
