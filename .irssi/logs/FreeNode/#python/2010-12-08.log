--- Log opened Wed Dec 08 10:03:37 2010
10:03 --- Users 740 nicks [0 ops, 0 halfops, 0 voices, 740 normal]
10:03  kerio: evt: using nested lists is evil
10:04  evt: kerio: :-/ Unfortunately I am very new, so it is the only way I know how to represent a table of data.
10:04 --- Channel #python was synced in 84 seconds
10:07  bobthemilkman: Okay. I want to speed up my python code.  I've already found the portion of my code that's slow (99% of my time is in one short algorithm.) What's the best way to optimize this code?  I'd like to use cython or completely replace it with c code, and then compile that with icc -fast.  However, currently the method uses the Image module, so I'm not sure how easy it will be to port.
10:07  jorrit: bobthemilkman, you are sure there are no algorithmic optimizations to make?
10:07  jorrit: Before switching to another language you should try that first if possible.
10:08  silverjam: bobthemilkman: cython can use python modules, the Image module is native code itself
10:08  silverjam: bobthemilkman: cython will work just fine, and abstract away all the complexity of a C module
10:08  bobthemilkman: http://paste.pound-python.org/show/333/
10:08  Tau: is there some way of getting the text which is selected upon a textarea from a gtk app ?
10:09  Tau: for ex, suppose i selected some text on a editor then i want my app to get that text.
10:09  Tau: how could i do that
10:09  kerio: bob2: wooah
10:09  kerio: er
10:09  jorrit: bobthemilkman, that algo is wrong.
10:09  kerio: bobthemilkman: ^
10:09  jorrit: bobthemilkman, diffr and so on can be negative.
10:10  jorrit: ah umm no sorry.
10:10  jorrit: That's fine because you square them.
10:11  Tau: can some one help
10:12  bobthemilkman: diffr can be negative, but diffr*diffr can't
10:12  jorrit: bobthemilkman, yes I know
10:12  kerio: iterating over single pixels is still EVIL
10:12  Tau: hi keitsi
10:13  Tau: do u know how i solve that
10:13  bobthemilkman: Oh sorry, the text highlighting changed your nick color and it threw me off.
10:13  jorrit: kerio, how to do that differently?
10:13  bobthemilkman: kerio: Do you have a better idea?
10:13  Tau: bobthemilkman, what do u want
10:13  hemanth: kerio, if there are nested place holder pairs partition fails
10:14  bobthemilkman: Taranis: I want to compare how similar two images are.
10:14 --- Xeross|AFK is now known as Xeross
10:14  bobthemilkman: (Also bonus points if there's a parallel solution)
10:14  Tau: bobthemilkman, hmm, geometrical images or images like pictures etc ?
10:14  bobthemilkman: Pictures
10:15  bobthemilkman: I decided to write a program that uses a evolutionary algorithm that approaches the Mona Lisa.
10:15  Tau: bobthemilkman, then it will return a number which will represent the % of similarity ?
10:15  bobthemilkman: Tau: That's fine. Currently it just returns a number in which a larger number is more different.
10:15  Tau: it would be something like ...identifying faces etc ?
10:15  jorrit: don't think so.
10:15  jorrit: This algo is VEEEEERY far from that :-)
10:16  Tau: well.
10:16  Tau: i want something simpler.
10:16  Tau: i just want to get the text which is selected upon a textarea from the xlib.
10:17  Tau: like when u select some text to copy then u copy it to the buffer to paste on other place.
10:17  Tau: does someone know ?
10:18  kerio: bobthemilkman: oh, you're diffing from the mona lisa repeatedly?
10:18  kerio: neat idea
10:18  bobthemilkman: kerio: Yeah!
10:19  Tau: i'm almost giving up.
10:19  jorrit: bobthemilkman, it is possible that there is some API to get all pixels at once instead of one pixel at a time.
10:19  silverjam: Tau: tried the gtk channels? seems more like an api q rather than a python question
10:19  jorrit: bobthemilkman, that may already be more efficient.
10:19  bobthemilkman: jorrit: Oh! That's a good point!
10:19  Tau: silverjam, the gtk channels are few frequented.
10:21  silverjam: Tau: Google says: http://stackoverflow.com/questions/1742264/how-do-i-get-the-selected-text-in-desktop-application-using-python-dbus
10:21  Tau: silverjam, oh my god.
10:21  Tau: silverjam, how did u get that
10:21  Tau: lol
10:21  Tau: silverjam, good job. thank you man.
10:21  Tau: silverjam, what did u use to look for ?
10:21  silverjam: you're welcome
10:22  silverjam: http://www.google.com/search?sourceid=chrome&ie=UTF-8&q=gtk+python+selected+text
10:23  Tau: k
10:28  Dynetrekk: I am trying to subprocess.Popen an external executable. the executable works great in the terminal, but with subprocess.Popen I get this error: ./omp_example: error while loading shared libraries: libiomp5.so: cannot open shared object file: No such file or directory
10:29  Dynetrekk: code: http://paste.pocoo.org/show/302144/
10:34  fluter: how, how can I use triple operator in python? e.g.  f?"z":"y" where f is a bool
10:35  perplexa: if statement then x() else y()
10:35  fluter: Dynetrekk: you need to set env, I guess
10:35  perplexa: maybe the other way round
10:36  perplexa: x if y else z
10:36  Dynetrekk: fluter: seems that if I update with os.environ I'm good
10:36  fluter: perplexa, yes, I know, but this cannot be inline,
10:36  confluency: The second one.
10:36  perplexa: fluter: it can
10:36  perplexa: iirc
10:36  perplexa: there's also a or b
10:36  bobthemilkman: Excellent! I've managed a speed increase of 3x just by treating using image.getdata() instead of iterating over image.getpixel(a,b)
10:36  confluency: fluter: yes, it can.  It's the new ternary operator. a = b if c else d
10:37  fluter: confluency, ah, thanks, got it
10:37  confluency: Don't use the and / or hacks when what you actually want is the ternary operator.
10:37 * perplexa always ends up confusing python when coding perl for 2 weeks :/
10:37  confluency: They have pitfalls.
10:38  fluter: confluency, what do you mean hakcs?
10:38  Peng: fluter: He means "f and 'z' or 'y'".
10:39  fluter: Peng, this is not same as  z if f else y, I think
10:40  Peng: fluter: You're correct. It's frequently equivalent and has been supported forever, though.
10:40  fluter: Peng, equivalent? I mean they give different result, no?
10:40  Peng: Do they?
10:40  confluency: He is not a he. ;) The problem is if your first value evaluates to False.  Try a = True and 0 or 1 and see what you get.
10:40  fluter: f and 'z' or 'y' is a bool value, no?
10:41  fluter: and  'z' if f else 'y' give str reslult, which is I want
10:41  Peng: confluency: Sorry. I dislike using "they".
10:41  Peng: fluter: Try it. Python's 'and' and 'or' operators return one of the objects involved, not just True and False.
10:42  Peng: Hmm, if you're an "it", does "they" still work?
10:43  fluter: hmmm, a=True/False always gives 1
10:44  Arafangion: Peng: "they" implies plurality, whereas "it" implies singularity.
10:45  Arafangion: Peng: So... Using both results in contradictory information.
10:45  Peng: Arafangion: Sure, but they is a common -- if I remember my Dinosaur Comics^W^W linguistic lessons correctly -- third-person personal pronoun. It applies to "he"s and "she"s, but does it apply to "it"s?
10:46  Peng: fluter: Perhaps I shouldn't be teaching you how to do this when the very first thing confluency said was not to do it. :P
10:46  confluency: I use singular 'they" verbally, but I don't like writing it.  In informal writing like this, I either say "he or she" or use the name explicitly.
10:46  confluency: It's an unfortunate inadequacy of the language. ;)
10:47  fluter: I am not getting it
10:47  Arafangion: Peng: Ahh, then no. "it" is used for those items that don't have a gender. It's not a gender-neutral term, it's a *no* gender term. (Although, it can be used for animals where you want to stress that they're not worthy of an identity)
10:47  confluency: Anyway.  Don't use a = b and c or d!  It works perfectly until it doesn't.
10:47  confluency: There are constructed genderless pronoun, but they've been adopted about as well as Esperanto.
10:47  fluter: confluency: why would one use  a = b and c or d instead of a=c if b else d ?
10:47  Peng: You mean like "s/he"? I was just gonna mention that!
10:48  Peng: fluter: Because you're using an old Python version, or are old-fashioned.
10:48  kerio: that's what s/he said!
10:48  confluency: fluter: because the ternary operator is a relatively recent addition.
10:48  Arafangion: s/he was popular for a time, thankfully that time has passed.
10:48  Ragzouken: Calling an animal it is pretty normal without trying to stress that it doesn't have an identity
10:48  talented: b is true c is false, you'll get d, not like ternary at all
10:48  Arafangion: I prefer the singular "their". Interestingly, "you" used to be used in the plural sense, then it became singular.
10:49  yawniek: is there a method to find the key of the first dict entry with a certain value/None without going over all items?
10:49  Peng: confluency: Back to and/or, it's safe enough if you *know* b will always be true. But it may be easier to use if than having to remember that.
10:49  Peng: yawniek: ...Use another dict? :D
10:49  Arafangion: If you know that b will always be true, then why test it?
10:50  Peng: Arafangion: The point is to test a.
10:50  fluter: talented, Peng , I am on 2.6, and I can do the  a=c if b else d  way
10:50  Peng: fluter: Yes, you can. Do it, then! :)
10:50  fluter: I am not using an old Python version, nor old-fashioned
10:50  Arafangion: Peng: Does that really test a? Doesn't a become the result of the following expression?
10:50  fluter: Peng, you are confusing me!
10:51 * Arafangion has to go return a movie!
10:51  fluter: Peng, which is good to use? you guyes said later form is good
10:51  confluency: fluter: use if/else.  It's more correct.
10:51  Peng: fluter: You should just use "a = c if b else d" and forget we brought up the old hacky workaround using the boolean operators.
10:51  Peng: fluter: The old hacky workaround only exists because "a = c if b else d" did not always exist.
10:51  fluter: Peng, exactly I got that, but ...
10:51  Peng: Arafangion: "a and b or c" does test a.
10:52  fluter: Peng, thanks
10:52  kerio: fluter: you don't swap variables with a ^= b ^= a ^= b
10:52  Arafangion: Peng: But not "a = b and c or d".
10:52  kerio: you do a, b = b, a
10:52  fluter: confluency, thanks,
10:52  fluter: kerio, wowh, what is that?
10:52  fluter: like a monster
10:52  Peng: fluter: It swaps the values of a and b.
10:52  tr3x_: im not a big fan of ternary operator, wish they used C style one. it's more concise and readable
10:52  Arafangion: kerio: Does that even work in Python?  I didn't think it worked in C, either. (except in specific situations)
10:53  kerio: Arafangion: nah, you'd need 3 separate statements
10:53  Peng: Arafangion: a, b = b, a works.
10:53  kerio: a ^= b; b ^= a; a ^= b
10:53  kerio: and yeah, tuple packing/unpacking <3
10:53  fluter: kerio, what if a == b?
10:53  rodfersou: in python it works
10:53  Peng: Arafangion: What do you think "a = b and c or d" does?
10:53  kerio: fluter: then THE UNIVERSE WILL EXPLODE
10:53  rodfersou: in C I'm not sure
10:54  kerio: or you lose both variables
10:54  Arafangion: Peng: I read that as "Evaluate the result of 'b and c or d', and store thatn in 'a'.
10:54  someb0dy: how to execute command and get returned buffer?
10:54  fluter: kerio, so that dont works always, it have defect!
10:54  someb0dy: (in windows)
10:55  Peng: Arafangion: Er. In that case, yes, it's testing b. I've been using the specific metasyntactic variables pretty interchangeably and relying on context.
10:56  fluter: and shouldnt it be (a,b)=(b,a) instead of a,b=b,a ??
10:56  Peng: fluter: Both work.
10:56  Peng: fluter: In Python, the comma defines the tuple, not the parens.
10:56  Arafangion: fluter: The parens is entirley optional.
10:56  fluter: Peng, which one is recommended?
10:56  Peng: fluter: I dunno.
10:56  talented: fluter, whichever one reads better for you
10:56  confluency: fluter: it makes no difference.
10:56  Arafangion: fluter: The parenthesis is recommended whenever the syntax is ambigous or hard to understand.
10:57  Arafangion: fluter: Also, required in function calls.
10:57  talented: fluter, use the parens, since it helps you know it's a tuple?
10:57  fluter:  Peng ,  it is not the parens defines a tuple, ?
10:58  Arafangion: Indeed. It's always the comma.
10:58  talented: no, but you identified it as a mistake because no parens were showing, but tuples can be created just by using the comma
10:58  nimred: which way to convert <!DOCTYPE NETSCAPE-Bookmark-file-1> files to XBEL ?
10:58  Arafangion: It's infact conventional /not/ to use the parenthesis when just doing assignment.
10:58  fluter: Arafangion, hmm, thanks guys, this the first time I know this
10:58  talented: a = "a", "b" may confuse you, but a = ("a", "b") might be easier to understand, they both are the same though
10:59  fluter: >>> type((3)) gives <type 'int'>
10:59  fluter: Peng ++
10:59  Arafangion: talented: Ahh, yes, assignment with one lvalue tends to use parens, but if there's more than one lvalue, people rarley use the parens.
10:59  fluter: talented, yes, the former one is very confusing
11:00  Arafangion: fluter: That is often regarded as a bug, especially by newcomers.
11:00  someb0dy: how to execute command and get returned buffer?
11:00  Peng: someb0dy: import subprocess
11:00  Arafangion: someb0dy: Use the subprocess module.
11:00  fluter: hmm, but ... a,b=3,4 will result 3 objects, but a=3 \n b=4 will just 2 object, no?
11:00  talented: fluter, you may even see people do a, = somevar
11:00  Arafangion: fluter: Not something you should care about.
11:01  Peng: someb0dy: There's frequently a better way to do what you want without resorting to external processes, though.
11:01  talented: somevar would probably be ("a", )
11:01  fluter: talented,  a, = somevar gives a Error :P
11:01  fluter: it is a syntax error
11:02  talented: somevar has to be ("a", )
11:02  jorrit: talented, still a syntax error in that case.
11:02  talented: nope
11:02  jorrit: ah no indeed
11:02  Arafangion: >>> a, = ('a',)
11:02  talented: a, = ("a", )
11:02  Arafangion: Works fine.
11:02  fluter: talented, so why people do this rather than just  a="a'
11:02  talented: lazy to do somevar[0]
11:03  fluter: it just looks overkilled
11:03  Arafangion: At least, in python 2.5.2
11:03  talented: fluter, the function may always return a tuple
11:03  fluter: talented, what? somevar will assign to a, not someval[0]
11:03  rodfersou: someb0dy: from subprocess import Popen, PIPE; p = Popen(['command', 'args'], stdout=PIPE, stderror=PIPE); print p.stdout.read(), p.stderr.read()
11:03  rodfersou: someb0dy: something like this
11:03  talented: and it could be a single element
11:03  verte: talented: the type doesn't matter
11:03  fluter: talented, why?
11:04  Arafangion: rodfersou: COngratulations, you possibly just hung your program.
11:04  verte: fluter: it's neater than somevar[0], and slightly more typesafe.
11:04  fluter: verte, why?
11:04  Arafangion: rodfersou: Consider that 'command' needs to write stderr, and will block until that's read. Meanwhile, you're trying to read stdout.
11:04  jorrit: verte, neater? I strongly disagree. I think a,=somevar is extremely ugly to read.
11:05  confluency: fluter, you don't do a, = (b,) instead of a = b; you do a, b = c, d instead of a = c / b = d.  Or a,b,c = somelist instead of a = somelist[0] ... etc..
11:05  kerio: fluter: a = next(b)
11:05  verte: fluter: because tuples are only incedentally sequences. they are structures, each position has a specific meaning. hence, unpacking is more idiomatic, and fails if you do have the wrong type, say, a tuple of the wrong length.
11:05  fluter: a,=("asdf",)   after that a="asdf" , not a="a" ...
11:06  rodfersou: Arafangion: it is just an example... anyway.. if you know how to answer, why didn't you answer someb0dy ?
11:06  shurane: is there a way to propogate changes using IPython.Shell.IPShellEmbed() or a similar class? I'd like to try out different things in a console and then resume the program. Or should I be looking at pdb for this?
11:06  Arafangion: rodfersou: I did, I said to use subprocess. :) It's well documented.
11:06  confluency: fluter: yes, because the first element of ("asdf",) is "asdf". a, = "asdf" would fail because there's nowhere to put the s, d and f.
11:06  rodfersou: ops
11:06  fluter: gosh! it is an error if rvalue is a list!!
11:07  rodfersou: sorry I missed this Arafangion
11:07  confluency: fluter: no, it isn't.
11:07  Arafangion: rodfersou: Just move on. :)
11:07  verte: fluter: it is an error if you have a different number of elements to the left and to the right.
11:07  talented: fluter... just know that it exists, but don't do it :P
11:07  fluter: confluency, l=[1,2,3]  \n   a,=l  gives a error!
11:07  jorrit: fluter, it is not because it is a list.
11:07  talented: fluter, because you have more than 1 item to assign
11:07  jorrit: fluter, with l=[1] it works.
11:07  verte: fluter: that's because a, is one element, and [1, 2, 3] is 3
11:08  confluency: fluter: you have one element on the left and three on the right.
11:08  verte: fluter: a, b, c = [1, 2, 3]
11:08  fluter: a,,=l  also gives a errro
11:08  talented: you could do l, _, _ = [1,2,3] but see, I'm making it worse on you
11:08  verte: fluter: a, _, _
11:08  talented: 2 and 3 will just be ignored
11:08  Yhg1s: no, they won't be ignored.
11:08  Yhg1s: they will be assigned to _.
11:08  talented: well, not really, 3 will be assigned to _
11:08  Arafangion: fluter: a, = {'a': 1}
11:09  confluency: ,,, is a syntax error.  You can't have invisible variables.
11:09  fluter: Arafangion, looks like dict is diffenrent :)
11:09  fluter: verte, so what is _?
11:09  verte: fluter: a variable called _
11:09  talented: fluter, do 1 + 2 then print _
11:09  verte: talented: don't confuse him
11:09  verte: talented: that's not the meaning of _ in a real python program
11:10  Arafangion: fluter: Dicts aren't different, it assigns the keys.
11:10  fluter: talented, _ remains unchanged
11:10  verte: talented: the interactive interpreter is different
11:10  confluency: fluter: calling variables _ during unpacking is a convention to indicate that you're not going to use them.  You can call them whatever you want; it will still work.
11:10  confluency: But you have to call them something.  You can't just leave an empty space.
11:10  fluter: >>> 1+2
11:10  fluter: 3
11:10  fluter: >>> _
11:11  fluter: gives None here
11:11  Peng: Using _ for that causes conflicts with gettext, of course.
11:11  kerio: Peng: and the interactive interpreter
11:11  Alberth: fluter: it is a variable like x, y, or z. It just has a weird name
11:11  Yhg1s: fluter: then you're not using the regular interactive interpreter.
11:11  Arafangion: fluter: Assign that 1 + 2 to something, then try printing _.
11:11  fluter: Alberth, yes, but what is it used for?
11:11  Yhg1s: fluter: the interactive interpreter uses _ to store the last expression you evaluated.
11:11  Arafangion: Yhg1s: Why does it do that?
11:12  fluter: Arafangion, no lucky, still None
11:12  Yhg1s: Arafangion: convenience.
11:12  Arafangion: Yhg1s: For the human?
11:12  fluter: >>> a=1+2
11:12  fluter: >>> _
11:12  fluter: >>>
11:12  Yhg1s: Arafangion: obviously.
11:12  verte: Peng: good think assignment is local by default!
11:12  Yhg1s: fluter: yes, that won't work.
11:12  Arafangion: Nice.
11:12  Yhg1s: fluter: but if '1+2' doesn't set _, you're not usig the regular interactive interpreter.
11:12  verte: fluter: del _
11:12  fluter: Yhg1s, what? I
11:12  fluter: I am using just python in bash
11:12  verte: Yhg1s: it doesn't clobber _ if you've set it
11:13  fluter: it is interactive
11:13  Yhg1s: ach so.
11:13  Yhg1s: fluter: did you assign to _ beforehand?
11:13  fluter: Yhg1s, yes, I think so
11:13  Yhg1s: fluter: well, that's why then.
11:13  Yhg1s: fluter: _ isn't special, except in the interactive interpreter. if you assign to it, it's not special in the interactive interpreter anymore either.
11:13  Yhg1s: (well, it still is, but you can't tell.)
11:14  fluter: Yhg1s, ok, so what is _ used for in python progrma?
11:14  fluter: a real program
11:14  Alberth: fluter:   for _, y in [(1, 2), (3, 4)]: print y     <-- think you have a list of coordinates, and you are only interested in y. you want to unpack them.  the _ means (by convention) "here I assign a value to a variable that I am not going to use".
11:14  fluter: what its purpose?
11:14  Yhg1s: fluter: it has no purpose. it's just a variable, just like any other variable.
11:14  verte: fluter: it's either a throwaway variable or a gettext function
11:14  verte: fluter: it has no special behaviour
11:14  fluter: ok, I understand it
11:14  talented: fluter, in the interpreter, it can be used like a calculator, remembering your last answer... but I don't think I've used it in actual programs yet
11:15  verte: talented: it doesn't get set in actual programs
11:15  fluter: me niether
11:15  talented: never tested it, so don't know heh
11:15  verte: infobob: codepad talented 1 + 2; print _
11:15  infobob: talented, http://codepad.org/gtSB6j6k
11:16  fluter: hmm, looks great
11:17  medecau: trying to loop over two  nested for loops that use csv.reader, the first loop only runs once
11:17  leotr: hi! does anybody use eric here? how to debug? i get errors while debugging unittests
11:17  primepie: is there an easy way to assign the output of traceback.print_exc to a variable?
11:17 --- balboah_ is now known as balboah
11:17  medecau: I know there are more lines, and when ran alone it print everything
11:18  verte: primepie: traceback.<tab><tab>
11:18  verte: primepie: look at the other functions available and you tell me
11:18  Alberth: medecau: random guess: you iterated over all values in the second loop, but without code no way to tell
11:18  talented: medecau, if the 1st list is shorter, it will only run to the shortest loop
11:19  talented: well, depending on how you're looping
11:19  primepie: verte: I saw the extract_tb methods.. but I want to do formatting afterwards
11:19  medecau: Alberth: is it possible to 'rewind' the ierator?
11:19  verte: primepie: format_exc looks good
11:19  Shambat: What is the best SNMP solution for Python/Twisted? I can see that TwistedSNMP and its cooperative package PySNMP-SE have not been updated since 2005/2006. Is there some better solution or has development stopped?
11:19  Alberth: medecau: no, but as I said, I am doing random guesses, you may have a different problem
11:19  sh: Python3.x: What's a good way to get the length of an arbitrary sequence object from the C interface? PySequence_Size() looks good, except it doesn't work on memorviews.
11:20  verte: primepie: er, format_tb
11:20  primepie: verte: thanks!
11:20  medecau: Alberth: it looks like that, it seems I have to reload the second reader for each pass...
11:20  medecau: thanks guys
11:21  Alberth: medecau: alternatively, you can store the data in a list first, and iterate over that
11:21  sh: I'm a bit mystified by this, since len(memorview(b'foo')) works fine in python.
11:21  medecau: Alberth: i was trying to avoid doing that, extra code and all
11:22  Alberth: medecau: one line is a problem?
11:23  Alberth: medecau: compared with repeatedly reading wherever you get your csv data from, and doing csv processing each loop?
11:23  medecau: Alberth: :) actually it's less then that
11:23  medecau: i just wrapped the call to csv.reader() in list() and it works
11:24  medecau: list(csv.reader())
11:24  medecau: thanks man
11:31  Alberth: medecau: hopefully you do that in an assignment :)
11:32  medecau: something like this: mp_reader=list(csv.reader(open('MP.csv')))
11:32  medecau: It works has advertised
11:32  Alberth: except it is no longer a reader, but a list of data :)
11:32  sh: Ah nm, I figured it out. PyObject_Size() works.
11:33  medecau: Alberth: I don't have a problem with that, the files are not that big anyway
11:38  Dynetrekk: how can I find the python version from within the interpreter?
11:38  Peng: Dynetrekk: THere are a few variables in sys.
11:39  Dynetrekk: Peng: anyone in particular for this purpose? If not, I can just see what I find..
11:39  verte: there is very extensive version information available in the platform module
11:40  sh: sys.version_info gives you the info as a tuple.
11:40  verte: sys.version or sys.version_info are good, though
11:40  Dynetrekk: ah, thanks guys
11:40  verte: and sys.subversion
11:42  Xeross: For some reason a friend of mine is getting an error when compiling oursql, Syntax error before "int8_t" on line 292 in oursql.c
11:43  Xeross: _habnabit: *poke*
11:43  Alberth: Xeross: no message before that (like "I cannot find some header file")?
11:44  gwork: Hi. Can anyone point me towards a maintained SOAP library compatible with most other soap implementations (especially java and ms biztalk) and capable to use https? I fail here... tia
11:45  verte: hehe, compatible soap
11:46  verte: I know our jaxb binder chokes on the 1.2 stuff the .net kids give us
11:46  Alberth: I found 'maintained soap' quite funny already :)
11:46  Xeross: Alberth:nope
11:46  Xeross: Alberth: just the gcc command and then that error
11:46  Xeross: and then a shitload of errors resulting from that
11:46  d0ugal: So, I'm feeling a little bit silly, but what is the best way to look for a £ and remove it from a string? i.e. "£5.00" > "5.00" etc.
11:47  verte: d0ugal: from a (unicode) text string, or from a bytestring?
11:47  d0ugal: Will this always work? .replace(u'\xA3', '')
11:48  gwork: Alberth: verte: i'm glad you like my question. It's not without humor i asked it like that
11:48  d0ugal: verte: ATM its a bytestring afik
11:48  verte: d0ugal: don't mix unicode and bytestrings
11:48  d0ugal: Right
11:48  balor: If I have a string "foo" can I turn that into a variable name programmatically?  i.e. pull "foo" from a db and then create self.foo="bar"?
11:49  verte: balor: setattr
11:49  balor: verte: thanks
11:50  gwork: verte: about the jaxb thing, is it worth investigating?
11:50  Dynetrekk: subprocess on 2.4: I can't seem to be able to read stdout from my process?
11:50  verte: gwork: jaxb = java
11:51  verte: gwork: I haven't done soap in python yet, not really sure what I'd choose if I did
11:51  Alberth: Xeross: int8_t is a relative new C standard type, perhaps you have an old compiler?    My standard says it should exist in <stdint.h>
11:52  Alberth: gwork: I'd look into Twisted, no idea whether it has soap, or how good it is
11:52  verte: if twisted has a soap implementation, it'd probably be the most sane
11:53  kerio: i should make a bot that says "try twisted" at random intervals
11:55  verte: kerio: a 1/10 chance of suggesting twisted to any sentence that ends with '?'
11:55  verte: should do it
11:55  verte: it should also balk at any mention of threads, os.system, or PHP
11:56  freezingmoon: mornin
11:56  kerio: if msg.endswith("?") and ("thread" in msg or not random.randrange(10)):
11:56  verte: precisely
11:57  freezingmoon: any1 can help me out plz?
11:57  freezingmoon: oursqlx/oursql.c:292: error: syntax error before "int8_t"
11:57  verte: oops
11:58  verte: freezingmoon: what gcc version are you using?
11:58  Xeross: Alberth: I compiled over my own mingw32 and on my pc it compiles fine
11:59  Xeross: verte: He's talking about the problem I was talking about he's the friend
11:59  verte: ah, ok
11:59  Xeross: I tought I've copied mine over but he has 3.4 instead of 4.5
12:00  Xeross: Well thats solved then'
12:02 --- r0bby_ is now known as robbyoconnor
12:03  kerio: how do i use threads for a web server?
12:03  kerio: hmm
12:03  verte: please don't bring it in here :)
12:03  Xeross: Hmm what do you need threads for
12:03  kerio: too late
12:03  kerio: Xeross: read more scrollback
12:03  verte: Xeross: it was a joke
12:04  Xeross: hmk
12:04  kerio: thread?
12:05  kerio: oh here it is
12:05  martijnm: i've got a question wrt multiprocessing, are there known memory issues?
12:05  kerio: "%: try Twisted" :|
12:05  kerio: i suck at python
12:05  martijnm: I'm executing this code: http://paste.pound-python.org/show/335/
12:05  verte: kerio: or at irc
12:05  martijnm: and the main program grows in memory size (over 1 GB)
12:05  kerio: verte: no, that's self.msg()
12:06  martijnm: so I suspect some references are kept somewhere so that objects stay alive and can't be garbage collected
12:06  martijnm: any ideas?
12:07  zykes-: what's faster of gevent, eventlet, stackless or twisted ? or better to use
12:08  verte: martijnm: have you tried moving the loop into a function?
12:08  martijnm: verte: no, but why would that solve the problem?
12:09  verte: not sure
12:09  nphilipp: martijnm: I'm not apt with multiprocessing, but are there some limits to how many of these it will run in parallel?
12:09  gridbug: nphilipp: try Twisted
12:09  kerio: hehe
12:09  verte: I suspect it's faster at creating the matricies than it is at calculating the det
12:09  nphilipp: gridbug: no
12:09  verte: kerio: kill it
12:09  nphilipp: :-)
12:10  kerio: :(
12:10  kerio: why?
12:10  kerio: dammit gridbug, that was the perfect time for you
12:10  martijnm: verte: don't care about the program... i'm just trying to figure out why the memory consumption of this snippet goes into infinity :)
12:10  verte: because I have a bigger stick than you
12:10  kerio: farewell gridbug, we'll always miss you
12:11  kerio: martijnm: because 3e6-1 matrices are a lot
12:11  kerio: and calculating the determinant of a 100x100 matrix is very long
12:11  nphilipp: martijnm: again, maybe it tries to do all of these at once, instead of limiting how many in parallel get run?
12:11  martijnm: kerio: but why is it keeping references to those?
12:11  kerio: because it has to know what to pass the functions
12:11  kerio: make a function that creates a random matrix and calculates the discriminant
12:11  verte: martijnm: till they get consumed, they live in the queue
12:12 --- Xeross is now known as Xeross|AFK
12:12  martijnm: verte: aha... understand
12:12  ilikepy: Can anyone point me to some docuementation or the source of the list object as it is implemented in c? We'd like to reuse this conecept in a c application.
12:13  martijnm: ilikepy: svn.python.org ?
12:13  verte: ilikepy: Objects/listobject.[c|h] in the cpython source distribution
12:13 --- Xeross|AFK is now known as Xeross
12:13  kerio: http://paste.pound-python.org/show/336/
12:13  kerio: not to mention that that code will work *badly* on windows
12:13  ilikepy: Thanks verte and martijnm
12:13  kerio: because it'll keep spawning new pools
12:14  kerio: like a forkbomb
12:14  martijnm: kero: 336 does not show up on paste.pound... ?
12:14  plundra: Sure it does?
12:15  kerio: http://paste.pound-python.org/show/337/
12:15  verte: forks make great shrapnel
12:15  kerio: better
12:15  d0ugal: So anyway, how do I remove a £ from a bytestring?
12:16  kerio: d0ugal: why do you want to
12:16  shylent: there cant be a ? in a bytestring, there can be only bytes </trolling>
12:16  verte: depends what encoding it is in. the one you pasted in is in utf-8.
12:16  d0ugal: kerio: Basically, I have user input of "£32000.00" and I want to remove the £ and use Decimal on it
12:17  kerio: d0ugal: [1:]?
12:17  verte: so you could '£500'.decode('utf-8').replace(u'£', u'')
12:17  d0ugal: Unfortunately it might not always be there, or it may not be at the start just to bug me
12:17  d0ugal: verte: ah
12:17  d0ugal: verte: that makes sense
12:17  verte: you probably need a source encoding for u'£' to work, though
12:18  bobthemilkman: re.sub('^[0-9\.]','',unicode)
12:18  verte: u'\xwhatever' works though
12:18  bobthemilkman: Would be how I would do it.
12:18  shylent: bobthemilkman: and that would've been a suboptimal way to do ti
12:18  shylent: or, in other words, wrong
12:18  Tordmor: .strip('£')
12:18  bobthemilkman: shylent: Only if you don't value your own programming time.
12:19  bobthemilkman: shylent: I believe the saying it, "premature optimization is the root of all evil," or something along those lines?
12:19  shylent: bobthemilkman: I value it very much (which is evident from me talking on IRC now) so I prefer to use the right way every time so that I dont need to fix it later
12:19  Peng: bobthemilkman: Yeah, that's the saying.
12:20  shylent: bobthemilkman: also, that 'premature optimization' saying is in 99% of cases used out of proper context. Sounds more like an excuse to me at the moment
12:20  verte: love of. love of premature optimisation.
12:22  Peng: Well, I'm pretty sure %(opposing_political_party)s is the root of all evil, but premature optimization can be pretty bad.
12:23  zykes-: does twisted have some kind of queueing mechanism ?
12:23  d0ugal: FWIW, for removing the £, this is working for me. .decode('utf-8').replace(u'\xA3', u'')
12:23  verte: zykes-: queueing mechanism?
12:23  d0ugal: thanks to those that provided inpt
12:23  shylent: like, a list of callables or something? :P
12:23  zykes-: verte: a queue
12:23  verte: Peng: why is it I associate you mentally with Peaker? were you a haskeller?
12:24  Peng: verte: Nope.
12:24  Peng: verte: I'm not the only Peng out there, though.
12:25  Peng: zykes-: The stdlib has a queue.
12:25  shylent: you dont usually need that kind of thing in twisted though
12:25  shylent: it would've helped if zykes- provided a concrete use case :)
12:27  verte: Peng: oh no, I'm definitely thinking of you. you've been dropping by here for years, and I don't know any other Peng. maybe it's the capital P.
12:27  Alberth: zykes-: a list would be sufficient, I think
12:28  zykes-: shylent: the backend that i'm using doesnt' support multiple commands at the same time :p
12:29  shylent: zykes-: what kind of backend? is it synchronous?
12:32  shylent: so if it is you do something like d = sendCommandToBackend(cmd) /returns Deferred/ d.addCallback(sendCommandToBackend, cmd) and so on - sequentially
12:32  shylent: that way only one command at a time is processed by the backend
12:32  zykes-: shylent: or i guess i setup 1 connection
12:32  zykes-: pr client
12:32  zykes-: to the backend
12:32  zykes-: or something
12:33  phix: is python a 20th centurary vole production?
12:33  shylent: phix: yes, why?
12:33  verte: vole?
12:34  phix: verte: yes vole
12:34 --- kanor is now known as tyrus
12:34  phix: shylent: awesome, just checking
12:34  verte: anagram of love
12:35  phix: yes, I am in watching Monty Python atm
12:44  nimred: is there any library i could use to convert netscape bookmarks files to xbel ?
12:52  jorrit: nimred, isn't the netscape bookmark file a simple html page?
12:52  jorrit: You can open it in a browser even.
12:52  jorrit: So any html parser should work.
13:00  nimred: jorrit: i am really new to programing and so to python. wouldn't you have some examples ?
13:00  jorrit: Well no idea. Never parsed html myself.
13:01  jorrit: I just know the bookmarks file is a html file.
13:03  m1chael: parsing html/xml makes me sick
13:03  zykes-: m1chael: isn't there parser for xml allready ?
13:04  verte: lxml.etree and lxml.html
13:04  m1chael: yes but i still find it difficult
13:05  verte: for anchor in lxml.etree.parse(...).xpath('//a'): print anchor.attribs['href'], anchor.text
13:06  m1chael: ooh nice
13:07  verte: er, although html rather than etree. you know the deal.
13:07  nimred: i am a programing beginner...
13:08  kcaze: hi, I just read the small faq on the python site and it referred me to Twister
13:08  kcaze: does that mean we shouldn't ask questions related to the socket module at all?
13:08  shylent: in a nutshell, yes
13:08  cheater99: kcaze: twisted
13:08  cheater99: kcaze: twister is a game you play with frat girls
13:08  Kuba: Always Twisted? :D
13:08  lvh: kcaze: no, you can
13:08  verte: kcaze: you can, but you need to be prepared to hear that you're doing it an the wrong level
13:08  shylent: no, not really, but be prepared, that you might be referred to twisted like in 99% of cases :)
13:08  lvh: kcaze: However, using sockets manually is fickle and annoying
13:09  lvh: kcaze: We often get questions that are best answered by just saying "use twisted"
13:09  kcaze: cheater99: woops, your right, my bad :P
13:09  lvh: kcaze: Or would've been fixed by using circuits or gevent or whatever
13:09  kcaze: lvh: I see, but I haven't done network programming before
13:09  lvh: kcaze: it's just that a lot of the regulars like twisted, so when you get pointed to a higher level of abstraction you hear "twisted"
13:09  cheater99: kcaze: having to use sockets directly for networking is like having to use direct writes to disk for file system manipulation
13:09 --- sav is now known as savio
13:10  lvh: kcaze: That sounds like a great reason to not use socket directly
13:10  cheater99: or let's have a car analogy
13:10  lvh: kcaze: It comes with a bunch of idiosyncracies developed over the years
13:10  nimred: verte is there any tutorial for beginners ?
13:10  kcaze: wouldn't it be helpful to learn from the ground up?
13:10  lvh: kcaze: Why?
13:10  lucian: kcaze: if you're learning, use socket, yes
13:10  cheater99: having to directly use sockets for networking is like having to run behind your car and push it, because you can't be bothered learning how to use the ignition
13:10  lvh: lucian: Why?
13:11  lucian: lvh: learning socket programming i meant
13:11 --- nphilipp_ is now known as nphilipp
13:11  verte: nimred: there's a 'New Programmer?' link in the /topic
13:11  lucian: uh, that sounds wrong
13:11  lvh: kcaze: If you use that argument you might as well say "why are you using Python? learn from the ground up, use mips asm"
13:11  lvh: kcaze: Also no operating systems for you!
13:11  lvh: kcaze: Here's the intel e1000 firmware, have fun
13:11 --- savio is now known as sav
13:11  kcaze: Okay, I get your point now. So basically, I'd be wasting my time starting from sockets?
13:11  cheater99: yes
13:12  lvh: kcaze: Well, if you want to learn how the BSD socket API works, socket is a great starting point
13:12  lucian: kcaze: for anything serious, very much so
13:12  cheater99: the chance you'll ever use this knowledge is nearly 0
13:12  lvh: kcaze: But I think learning how the BSD socket API works is a huge waste of time
13:12  lvh: kcaze: We already have a lot of libraries (twisted, libev, libevent...) that abstract all this crap away
13:12  lucian: kcaze: there are a bunch of libraries out there that help you out
13:12  lvh: kcaze: The problems occur when you want to write portable things for example
13:12  cheater99: and at the event that you will need it 10 years in the future when you've reached a level that means you have to do direct socket programming, having 10 years of experience with twisted will make learning sockets a breeze
13:12  kcaze: Okay, because I originally wanted to learn networking programming in C
13:13  kcaze: and the first result on google was a guide using sockets
13:13  lvh: kcaze: Do you know how FreeBSD-CURRENT and Linux2.6 differ when they return ENODATA?
13:13  lucian: kcaze: here's a pretty good list http://nichol.as/asynchronous-servers-in-python
13:13  lvh: kcaze: Do you know what it means when FreeBSD tells you there's a negative amount of bytes to be read from an fd?
13:13  kcaze: Nope
13:13  lvh: kcaze: Do you know what IOCPs are and when you use them over select on win32?
13:13  lucian: kcaze: ignore the performance bits though
13:13  lvh: kcaze: You see, all of this is useless crap
13:14  lvh: kcaze: It's idiosyncratic and has nothing to do with being a better programmer or writing better programs
13:14  lvh: kcaze: It's an unfortunate eyesore which we've fixed due to better abstraction layers
13:14  kcaze: lvh: Well, the original question I wanted to ask was actually
13:15  nimred: verte: i meant about parsing html/xml
13:15  kcaze: lvh: How would a pure P2P connection work if both ends are behind a NAT (I think that's what it's called)
13:15  lucian: kcaze: that's an entirely different issue
13:15  lucian: kcaze: and has nothing to do with the transport layer
13:15  lvh: kcaze: It typically doesn't, at least not very well
13:16  lvh: kcaze: Eventually you always get rid of the NAT in some way
13:16  lvh: kcaze: For example, UPnp
13:16  lucian: kcaze: it's called "NAT transversal" and there are several solutions out there
13:16  kcaze: lvh: So really, if I wanted to write something that allows two computers to transfer files directly, I would need a server intermediary?
13:16  verte: nimred: ah. well, there's an etree tutorial floating around, it's at least three years old now though. a good place to start might be the xpath tutorial on w3schools.
13:16  shylent: lucian: 'traversal' - it has nothing to do with sex change
13:17  lvh: kcaze: Depends how you do nat traversal
13:17  lucian: shylent: ah. sorry
13:17  lvh: kcaze: but let's say
13:17  lvh: kcaze: "yes"
13:17  nimred: verte: url ?
13:17  cheater99: kcaze: you can use upnp which means you don't need a new physical machine
13:17  kcaze: lvh: Okay, thanks
13:17  cheater99: kcaze: in this case one or both routers act as intermediaries
13:18  lvh: kcaze: What UPnP does is lie about there being NAT or not, essentially
13:18  burhan: kcaze: of course not
13:18  cheater99: many many routers support upnp now
13:18  lvh: kcaze: The bottom line is: NAT is a fucking disaster, stop perpetrating it, that is all, thanks ;-)
13:18  bobthemilkman: What's the difference between random.normalvariate(mu,sigma) and random.gauss(mu,sigma)?  It seems kind of strange that one is faster than the other, since I was under the impression that the normal distribution is by definition the gaussian distribution.
13:18  kcaze: Yeah, that pretty much answeres my question.
13:18  kcaze: I think I'll just go look into Twisted and other abstraction libraries and learn more first.
13:19  verte: nimred: you should be able to google either of 'etree tutorial' and 'w3schools xpath tutorial'. incidentally, w3schools seems to come up as the first response just for 'xpath'.
13:19  shylent: kcaze: yes, you can figure out socket-specific stuff later, I assure you
13:20  lvh: bobthemilkman: random.gauss is not thread safe
13:20  lvh: bobthemilkman: normvariate is
13:20  bobthemilkman: These methods use multithreading?
13:21  lvh: kcaze: Twisted has a thing called Divmod Vertex
13:21  lvh: kcaze: It's Q2Q which is P2P but one better ;-)
13:21  lvh: kcaze: It's unmaintained because it doesn't have a business model
13:21  lvh: kcaze: But I'm convinced it does some things entirely right including secure nat traversal
13:22  lvh: bobthemilkman: What? No. random.gauss is not thread safe, random.normvariate is, neither uses threading
13:22  hetii: hello
13:22  hetii: :)
13:22  lvh: bobthemilkman: As long as you're not running it from multiple threads (which you should never do anyway), gauss is better
13:23  bobthemilkman: Oh!
13:23  bobthemilkman: I see
13:23  lvh: normvariate is for crazies who think threads area good idea for doing anything
13:23  bobthemilkman: I was planning on doing some sort of multithreading, eventually, in this application.
13:23  shylent: better lose those plans :O
13:24  verte: what is better than both is creating your own instance of Random
13:24 --- tyrus is now known as kanor
13:24  verte: r = random.Random(); r.gauss(...)
13:24  lvh: bobthemilkman: Why?
13:24  lvh: verte: Yay no shared state!
13:24  bobthemilkman: lvh: Because I want to make my code faster, so I want to take advantage of both cores and the dualthreading.
13:24  lucian: bobthemilkman: that won't happen with CPython
13:25  bobthemilkman: I haven't fully profiled the program yet, so I'm not sure where it would be best to take advantage of threading.
13:25  bobthemilkman: Oh, I think CPython will probably be more important than threading!
13:25  bobthemilkman: multithreading, even
13:25  bobthemilkman: (But I don't know. I haven't begun optimizations yet)
13:25  lucian: bobthemilkman: if anything, your code will run much slower on CPython with multiple threads&cores
13:25  lvh: bobthemilkman: That would be a good example why you *wouldn't* use threading
13:25  shylent: bobthemilkman: well, as a rule of thumb, 'advantage' and 'threading' are very much incompatible
13:26  lvh: bobthemilkman: Use multiple processes if you want your thing to run on multiple CPUs
13:30  sybariten: those of you that use python a lot
13:30  sybariten: do you avoid using bash scripts for a lot of helper things, in favour of python?
13:30  confluency: No.
13:30  lvh: sybariten: Yes.
13:30  sybariten: uh well that didnt come out allrigfht i think ... do you use py for a lot of typical bash-situations?
13:30  verte: not universally
13:30  kerio: sybariten: can you do the things you want to do with a simple shell script?
13:31  lvh: sybariten: Depend swhat the script does
13:31  kerio: if you can, use a simple shell script
13:31  kerio: otherwise, python
13:31  kerio: keyword being *simple*
13:31  verte: though I haven't written more than five lines of shell at once in some time
13:31  bobthemilkman: (alternatively, use python as your shell. :P )
13:31  confluency: Bash is optimised for certain things.  if I want to run a bunch of shell commands, I use bash.  As soon as I need to do something more complicated, I consider python.
13:31  sybariten: kerio: all of it... its just that... sometimes i wanna do stuff that could maybe be solved with sexy imagemagick-connections or gnuplot-connections or cairo-things
13:31  sybariten: and thats when bash isnt too rpactical i guess
13:31  verte: bobthemilkman: subprocess.Popen is a lot more verbose than programname argument argument
13:32  kerio: sybariten: PIL, matplotlib
13:32  kerio: verte: os.system :P
13:32  bobthemilkman: verte: I agree. It was a bit of a satirical response.
13:32  confluency: The point at which I switch is when I'm trying to do something in Bash and think "urgh, this would be so much simpler in Python". ;)
13:33  matkor: Hi ! Is there any common convetion in numbering of days ? I need int representing day for days around today (plus few years ahead) ?
13:33  kerio: matkor: no, you don't need an int
13:33  sybariten: confluency: thats a sound attitude, ofcourse. I guess actually i'm just curious if short bash things would typically be longer and more complicated in Python, when it comes to typical small *nix admin tasks
13:33  kerio: you need a datetime.datetime or a datetime.delta
13:33  lvh: matkor: why do you need an int instead of a timedelta?
13:33  matkor: In time there was linux number of seconds since some midnight in 70s
13:33  kerio: er, timedelta
13:34  lvh: matkor: yes, the unix epoch
13:34  matkor: lvh: Memory issues of storage medium
13:34  verte: sybariten: having first-class functions and data structures quickly pays off
13:34  matkor: I need 2[B] to represent day and I wonder since which I should start ...
13:34  kerio: matkor: what?
13:34  lvh: matkor: What?
13:34  sybariten: verte: aha aha, i guess those are the things i dont know too much about
13:35  lvh: matkor: Okay, so *eventually* convert it to days or whatever and use struct.pack to store it
13:35  lvh: matkor: Serialization and in-memory representation are two different problems entirely
13:35  bobthemilkman: http://en.wikipedia.org/wiki/Year_2038_problem
13:35  matkor: kerio: I am storing such bin number of dates so it matters if I store them in 2[B] or let's say 8[B] of full date.
13:36  matkor: lvh: Sure, just wondering which I should pick as day-zero ;)
13:36  kerio: wtf is 2[B]
13:36  lvh: matkor: you mean big?
13:36  lvh: kerio: I think he means two bytes
13:36  matkor: 2 bytes
13:36  kerio: an int is far more than 2 bytes
13:36  lvh: matkor: How many dates are you storing and what extra information do you have about the dates
13:37  lvh: matkor: Simply using ints in Python does not fix your problem, they autopromote to longs and there are no guarantees about how many bits go into an int
13:38  kerio: lvh: int.bit_length() :P
13:38  kerio: (i know, i know)
13:38  matkor: lvh: thousends  or hundreds of millions,  they will be since now to up to few years ahead
13:38  kerio: haha why would you need that
13:39  lvh: matkor: Hang on, what are you storing exactly
13:39  kerio: lvh: every second from here to eternity!
13:39  lvh: we're gonna need a bigger boat
13:39  matkor: lvh: need to keep most im memory with some additional small data
13:39  kerio: matkor: *why*
13:39  lvh: matkor: You're not telling us what or why, just stating requirements
13:40  lvh: I'm thinking van emde boas with hash=lambda x: x or trie
13:40  lvh: matkor: what operations are you doing on that data
13:41  matkor: oh, I just asked if there is any convention that given day "around now" can be selected as day zero, to start count from it
13:41  lvh: well apparently it has to fit in 16b
13:41  kerio: matkor: #python is weird - it wants you to do the right thing, without caring about what you want
13:41  lvh: which is a far bigger problem than convention
13:42  cheater99: if you don't like being hand-held to do the right thing, try ##python-unfriendly
13:42  lvh: cheater99: ... be quiet
13:42  matkor: I think I stated my question wrong (due I am not native english speaker) :(
13:43  lvh: matkor: Yes, I understood the question: my question is; 1) what are you storing, 2) why are you using 2B to store each one
13:43  kerio: matkor: you stated your question right, but we don't care about what you think you want
13:43  lvh: As opposed to a smarter data structure
13:43  matkor: 1) I am storing (and processing) pairs    4byte value, 2byte representaion of day
13:44  shylent: kerio: does your nick have to do anything with kerio technologies inc ?
13:44  kerio: shylent: nope
13:44  kerio: i like to claim they stole my name
13:44  shylent: kerio: I guess I am not the first one to ask you
13:44  lvh: matkor: Judging by what you're telling me, you're not actually doing that yet
13:44  kerio: shylent: it helps a lot on googlefights
13:44  matkor: 2) to reduce memory used by 1e9 such pairs to be proccesssed in RAM of PC ...
13:44  kerio: matkor: what do those pairs represent
13:45  matkor: lvh: I am doing pretty similar thing but not efficient enough
13:45  lvh: matkor: well, yes, I'm trying to make it better, but it's hard without knowing what it represents and/or what "processing" means
13:48  matkor: OK, I will pick up just 2010/01/01 as starting "epoch" for my data ... sorry for wasting your time
13:49  lvh: matkor: ...
13:49  lvh: matkor: I'm trying to see if there's a better data structure for your data
13:49  shylent: might as well wait till new year and choose 2011/01/01
13:49  lvh: matkor: But okay, if you don't care about making your software better, that's unfortunate
13:51  kerio: why can't people just state their problem
13:52  lvh: kerio: My guess is "work"
13:53  shylent: lvh: what do you mean?
13:53  lvh: shylent: Don't want bosses figuring out they're paying people so other people can do it for them :-)
13:53  lvh: shylent: Wouldn't be the first time we were answering interview questions and the like.
13:53  jorrit: Or doing schoolwork
13:53  shylent: lvh: I can't say I haven't ever asked for information here, that would've later helped me at work
13:54  lvh: shylent: There's a pretty big quantitative difference there
13:54  shylent: I guess that the same people refuse to use google to find information on their problems :)
13:55  kerio: i mean, if he's storing some value for each day then eventually the data will have to stop
13:55  kerio: and using a db is probably better
13:56  shylent: lvh: well, one time I've had an interview over the phone and there was a question I honestly had no idea how to answer so I've tried to squirm my way out of it and I was straightforwardly asked: 'why aren't you googling?'. I can really respect that
13:56  shylent: I mean, whatever works
14:01  init: question... when using asyncore, is it safe to create more asyncore dispatcher instances while the loop is running?
14:01  filip: hi, is there an equivalent of rundll32.exe in pywin32?
14:01  shylent: asyncore :O
14:04 --- kerio92 is now known as kerio
14:04  kerio: shylent: eew
14:05  maxb: Can someone point out what I am doing wrong here?    python -c 'from socket import *; s=socket(SOCK_STREAM, AF_INET); s.connect(("www.google.com", 80))'    -->     TypeError: argument must be string or read-only character buffer, not tuple
14:05  gorakhargosh: How does one set self.maxDiff for nose tests?
14:07  maxb: oh!, I have the socket() args backwards
14:08  nvictor: hey python :)
14:08  nvictor: i have an issue
14:08  init: <shylent> asyncore :O
14:08  init: why the surprise?
14:09  init: in before, no, I'm not going to use twisted.
14:09  init: >.>
14:09  nvictor: i have a program launcher that launches a small timer app i wrote in pyqt, it executes the command pythonw myapp.pyw. but when the program is closed pythonw is still listed in running processes. any idea?
14:09  jY: maxb, it is s=socket(AF_INET, SOCK_STREAM)
14:12  shylent: init: you are *not* going to use twisted, but you *are* going to use asyncore, thats a weird way to do it, but sure, by all means go ahead
14:12  init: :P
14:12  init: no, I am saying, I'm not using twisted, because every time someone brings up something networking related, they suggest to use twisted
14:12  init: and I refuse to use it
14:12  init: :p
14:12  init: hope that clarifies things a bit
14:12  Alberth: just be aware that asyncore is not for production code
14:13  init: what's wrong with it?
14:13  lvh: init: where shall we begin
14:13  lvh: init: First of all, portability
14:13  lvh: init: Second of all, inability to use edge-triggered systems
14:13  lvh: (It's a copy of JNIO in that regard, and it shows)
14:13  lvh: init: Thirdly, performance concerns when using threaded handlers.
14:13  jorrit: init, not using twisted because everyone says you should use it doesn't sound like a good idea.
14:13  jorrit: init, seems like you're ignoring good advice on purpose then.
14:14  init: I don't need an entire framework for what I"m doing.
14:14  lvh: (On an unrelated note, simply refusing to use something is not an argument I take seriously -- do you have any technical problems with it?)
14:14  lvh: init: thankfully, twisted is modular, and you don't need the entire framework.
14:14  shylent: init: obviously you dont need to use an *entire* framework, just its relevant bits
14:14  init: yes, I have several problems: 1) it's overdone, 2) it takes over my entire application
14:14  lvh: init: I don't understand what 1) means
14:15  lvh: init: 2) Yes, but that's true of pretty much everything?
14:15  shylent: python takes over your applications
14:15  shylent: I think, it is time to run
14:15  cnfer: tbh 2) is one of my biggest problems with twisted as well
14:15  lvh: If you use PyQt's event loop, it's going to "take over your entire application"
14:15  lvh: cnfer: Do you have any proposed alternatives that do not have this supposed problem?
14:15  NelleV: I don't understand the problem in a framework taking over your entire application
14:16  cnfer: lvh: nope
14:16  cnfer: lvh: i do use twisted when i need anything paralel
14:16  lvh: If you use gevent, it does that. If you use circuits, it does that. if you use libev, it does that. if yu use libevent, it does that. if you use asyncore, it does that. if you use tornado, it does that
14:16  lvh: cnfer: I hope you mean concurrent
14:16  Alberth: init: so what else besides async stuff are you doing?
14:16  cnfer: yeah, yeah
14:16  init: no, I mean, twisted tends to engulf your code, it wants to do everything, which is the opposite of what I'm doing
14:16  lvh: init: I don't understand what that means
14:17  init: Alberth, can't really say, it has to do with web stuff
14:17  lvh: init: I can think of something that doesn't
14:17  Alberth: init: does that mean everything you do is async ?
14:17  lvh: init: Eventually any IO dominated app is going to be shaped by the thing that's feeding it IO
14:17  jorrit: init, I wrote an entire app using twisted once that didn't have any twisted import's at all anywhere except in a thin networking part of my app.
14:18  jorrit: init, so I disagree that it engulfs all your code. In my case it was about 5% of the coded.
14:18  jorrit: code
14:18  lvh: Unless you can think of an example where Twisted forces you to do something that *any other event loop* doesn't
14:18  cnfer: i did have an issue where i had a module needing twisted. that meant that any app calling it was now tied into twisted
14:18  init: Alberth, not everything is async, no.
14:18  jorrit: cnfer, that is true for any library that does something useful.
14:18  cnfer: then again, i'm not the best programmer, so that might have been me
14:18  cnfer: jorrit: is it?
14:19  NelleV: cnfer: yes...
14:19  jorrit: cnfer, well if I have a module that needs ktinker for example then my app needs it.
14:19  lvh: cnfer: Again, I can't think of examples that fit what you mean that have libraries that don't
14:19  NelleV: cnfer: indeed you create a dependency
14:19  cnfer: nono, not just a dependancy
14:19  lvh: init: What isn't async?
14:19  init: there's a few parts which aren't network bound
14:19  cnfer: the app itself needed to be wrapped in twisted
14:19  lvh: init: Such ass?
14:19  cnfer: or the modules wouldn't work
14:19  lvh: as* even
14:20  lvh: cnfer: I don't understand what that means
14:20  init: it has to communicate with a helper over a local IPC socket
14:20  lvh: init: Why is that synchronous?
14:20  jorrit: cnfer, that's true of UI toolkits as well and most other major frameworks.
14:20  init: it doesn't have to be asynchronous
14:20  init: it's one way
14:20  lvh: init: Okay. Is there anything in your app that isn't trivial to do asynchronously?
14:21  cnfer: lvh: i couldn't just do modules_instance.dostuff(with_data) and let it do that
14:21  lvh: cnfer: I don't see why it couldn't, but that depends way too much on what that thing actually does
14:21  lvh: cnfer: It's hard to say anything interesting about it without knowing what the code is and does
14:21  cnfer: it was a module to send sms messages
14:22  init: lvh, hm. I don't think so.
14:22  lvh: init: Okay
14:22  lvh: init: I'm not telling you to use twisted
14:22  lvh: init: I'm just saying your choice is arbitrary and not really technical
14:22  lvh: That's fine, people make lots of arbitrary choices
14:23  init: it comes down to taste
14:23  cnfer: i had to wrap the modules with twisted on the outside
14:23  Alberth: init: I understand what you are saying, I also have difficulties to accept Twisted. The difficulty however is, that if you don't use Twisted, in the end you are going to have to write your event loop yourself, except much less good than Twisted already has. So of all the alternatives, Twisted seems to be the lesser worse solution.
14:23  lvh: init: Yes
14:23  lvh: init: However please forget the "I don't need an entire framework" thing, it's bullshit
14:23  cnfer: Alberth: that i can agree with
14:23  lvh: init: It hasn't been true since pre2.0, which is pre-2006
14:23  init: Alberth, I thought about using eventlet but yeah, I changed my mind. gevent to me feels incomplete so I'd rather not use that either.
14:24  kerio: init: Y U NO LYKE TWISTED
14:24  init: brb I have a killer headache
14:24  lvh: It's a limitation of five year old releases, and not really relevant today
14:24  kerio: twisted is good
14:24  init: (cluster headaches ftl)
14:24  kerio: twisted is fun
14:24  kerio: twisted lets you sleep at night
14:24  lvh: init: Sorry, I'll tone down the twisted mind tricks
14:24  cnfer: init: painkillers + cafeine + hot shower, and focus on relaxing
14:24  kerio: Twisted - use it or you'll get cluster headaches
14:24 * lvh channels *SUFFER, INFIDEL*
14:25  cnfer: tbh, i do think twisted might not have been what i needed for said module
14:25  cnfer: but meh
14:26  Alberth: next time :)
14:29  kerio: does anyone know of any general-purpose authentication library for appengine?
14:29  kerio: except for the builtin one
14:30  lvh: "it was known as "Simple Object Access Protocol," but because it was neither simple nor for objects or access, the term stands now for itself"
14:30  kerio: i'm working on the main website for a nethack tourney, and i know for a fact that a lot of people would rather die than make a google account
14:31  shylent: lvh: motto from the SNMP standard: "Simple's not easy"
14:31  kerio: another question... how's django's template engine?
14:31  shylent: kerio: pretty bad, but usable
14:31  shylent: jinja2 is like tons better
14:32  shylent: but still, if I use django I can usually get by using django's templates. Especially since they are fairly trivially extended. For trivial cases :P
14:33  shylent: I havent ever written a block tag extension for django's template engine, so I wouldn't know
14:33  init: <lvh> init: Sorry, I'll tone down the twisted mind tricks
14:33  init: lvh, ha
14:33  shylent: init: don't you worry, that was also a mind trick
14:33  init: <cnfer> init: painkillers + cafeine + hot shower, and focus on relaxing # I have a nasal spray I use for them
14:34  kerio: shylent: it will be a very simple website anyway
14:34  shylent: kerio: in that case you can probaby do just fine using django's own template engine
14:34  shylent: its only bad in the sense of 'jinja2 is better'
14:34  kerio: i'm not going to use django, but its template engine is preinstalled on appengine
14:34  shylent: yea, ok
14:36  phix: And now, for something completely different
14:38  phix: Gentleman, we have two basic designs for this arcutectiual block
14:39  shylent: oh, come on
14:39  phix: :)
14:39  shylent: monty python were all about originality - it is no good at all to repeat their lines on the internet over and over
14:40  phix: shylent: this is just the first time :)
14:40  shylent: first time *for you* :P
14:40  phix: for that particular line
14:40  cnfer: init: they work for you?
14:40  phix: shylent: haha well name a language python after the monthy python series and you don't expect a few quotes in here?
14:41  phix: what was guadio thinking
14:41  cnfer: init: that's good ^^;
14:41  shylent: phix: nah, that was just a brainfart, do go on by all means
14:41  phix: fre mason!
14:41  phix: free!
14:41  phix: shylent: and now for something completely different
14:42  mason-l: Free mee!
14:42  phix: :)
14:42  phix: *SATIRE* *SATIRE*
14:43  phix: "lets have a look at that handshake again, in slow motion"
14:45  kerio: hey, what do you know
14:45  phix: "The BBC would like to appologise for the following anouncement"
14:45  kerio: the default auth system also supports openid
14:45  phix: kerio: :D
14:45  cnfer: uhu
14:45  phix: INSURANCE SKETCH!!!
14:47  phix: hoot: you're a hoot
14:49  phix: THE BISPHOP!
14:49  perplexa: you realize that this isn't an entertainment channel?
14:50  phix: agreed
14:50  jorrit: Isn't this the Monty Python channel? :-)
14:50  phix: it is
14:50  phix: the monty #python channel :)
14:50  perplexa: back to 4chan with you
14:50  phix: perplexa: do you have any cheese?
14:51  perplexa: no but one more faggot on my ignore list
14:51  phix: or enjoy the sight of a good larch tree?
14:51  phix: hehe
14:51  phix: gg
14:53  phix: The Larch!
14:54  subanomic: hi
14:54  phix: subanomic: hi
14:55  subanomic: i want to have more than four decimal places on floating point operations
14:55  subanomic: how can i do that?
14:56  phix: print "%f.05" % someFloat
14:56  spliffi: I have a problem using a mysql query: [...] WHERE src_ip LIKE 192.168.0.% [...] with the mysqldb module
14:56  lvh: subanomic: Python floats, by default, have somewhere between 17 and 18 decimal points worth of precision.
14:56  spliffi: tried escaping the % too, no success
14:56  phix: lvh: the larch!
14:56  shylent: spliffi: what is your problem
14:56  lvh: phix: Please stop that.
14:57  subanomic: thanks phix
14:57  spliffi: the substitution I recon
14:57  phix: lvh: no, I will wrap up useful information with monthy python quotes, just like Mr Guidio would have.  Sorry the doucmentation is full of python quotes so why shouldnt I use them in my answers?
14:57  spliffi: shylent: ValueError: unsupported format character 'A' (0x41) at index 221
14:57  subanomic: phix: actually the float only has four digits
14:57  subanomic: err - decimals
14:58  lvh: phix: You are not wrapping up useful information.
14:58  spliffi: with escaping the % I get the same error
14:58  phix: lvh: I certinaily helped out Mr subanomic
14:59  phix: lvh: ead
14:59  phix: lvh: oh and The Larch!
14:59  lvh: phix: Not really. He asked about precision on fp operations, you showed him how to format floats.
14:59  spliffi: invoking the SQL statement in phpmyadmin works like a charm but the mysqldb module does not like this query
14:59  shylent: spliffi: how are you 'escaping' the percent sign? I would think that the correct way to do it is '192.168.0.%%'
15:00  shylent: %%
15:00  shylent: holy crap
15:00  spliffi: oh I used \
15:00  figure002: how do you check if a generator instance has items? does len(iter) work?
15:00  lvh: figure002: Nope.
15:00  spliffi: let me try this
15:00  lvh: figure002: Consider: while True: yield 1
15:00  shylent: I  mean, you use a double percent sign if you just want to have a freestanding % in your query
15:01  getxsick: guys, what is wrong here http://paste.pocoo.org/show/302214/ ?
15:01  lvh: figure002: There's no way to know when and if a generator will end. The only way is destructive (asking for the next element, if it yields one, it has one, if it raises StopIteraton, it didn't)
15:01  spliffi: shylent: thx it works, my fault ;)
15:01  shylent: spliffi: you are welcome :) you might want to consider using oursql instead of MySQLdb though
15:02  lvh: also postgres or sqlite instead of mysql
15:02  Habbie: lvh, don't FUD
15:02  spliffi: shylent: didn't know that one, I will check it out, cheers
15:03  lvh: Habbie: What? I genuinely believe the tooling is better for both.
15:03  figure002: lvh: thanks for the explanation. if do next() to check if it has anything, can i loop through it again without missing the first item?
15:03  Habbie: lvh, it doesn't sound like the tooling is your reason :)
15:03  VAPA: anyone familiar with supybot..?
15:04  lvh: Habbie: So perhaps you shouldn't call opinions FUD without further investigation -- it's pretty offensive
15:04  Alberth: figure002: no, you cannot go back in the sequence
15:04  lvh: figure002: No.
15:04  lvh: figure002: You could itertools.tee
15:04  Habbie: lvh, perhaps you should try to sound like you're saying the postgres client is better than oursql, instead of trying to sound like you're telling people using the MySQL server is a bad idea
15:05  lvh: Habbie: Well, I think the latter is true too
15:05  figure002: Alberth: lvh: thanks. don't know what tee means, but i'll look it up.
15:05  lvh: figure002: it creates more iterators.
15:05  figure002: lvh: ok
15:05  lvh: figure002: That way, you can ask an element out of one, and use the other one, and still get the same result
15:05  phix: I use an aftershave called hallitosis, it makes my breath smell sweet
15:05  lvh: figure002: Basically it's a sort of "clone" for generators, but not quite
15:05  Habbie: lvh, but that's no reason to tell other people, without reasoning, to apply your opinion
15:05  lvh: Habbie: If they're interested I'm sure they'll ask me why
15:06  figure002: lvh: ah i understand, thanks!
15:07  vr6: Hi. Looking for a way to parse 2006-09-02 of <type 'datetime.date'> into YYYY, MM, DD.  to feed into  cal.weekday(YYYY, MM, DD).  Likely I am missing it, but not finding a way to parse out datetime.date object in datetime.datetime/time pkgs.  Anyone point to the package/builtin function that might help me do this?
15:08  bobthemilkman: If I have 4 objects which are not in an iterable, is there any easy way to set all of their values?  I wanna do something like for i in (a,b,c,d): i = 0, and then after that a,b,c,d are all equal to 0.
15:08  Habbie: vr6, there's the strptime method
15:08  bobthemilkman: currently I have to do a=0,b=0,c=0,d=0, which is a bit inconvenient, sometimes.
15:09  lvh: bobthemilkman: No. If you want that, you probably want (a,b,c,d) to be a list or tuple in the first place
15:10  lvh: (It can be done, using eval and possibly setattr or even globals(), but it's a bad idea.)
15:10  lvh: bobthemilkman: The problem is that a,b,c,d are names. They aren't objects.
15:10  bobthemilkman: I was hoping to do something not too difficult. I currently just have 4 similar objects, and then I want to check to make sure that each one isn't less than 0.
15:11  bobthemilkman: So the code becomes if a < 0: a = 0, if b < 0, b = 0, and so on.  You can see how this gets complicated as soon as I do anything beyond simple settings with these.
15:11  lvh: bobthemilkman: So, a list of them.
15:11  vr6: Habbie: strptime wants you to feed it a datestring, and I want to feed it a datetime.date.
15:11  bobthemilkman: I guess it might be easier to turn them into a list.
15:11  Habbie: vr6, i misread
15:11  veasel: It seems atexit() doesnt handle SIGTERM/SIGKILL is there a dedicated function that can handle this bar setting up full signalhandling?
15:12  bobthemilkman: I can name is abcd :P
15:12  lvh: bobthemilkman: That makes your code much simpler: [max(0, x) for x in l]
15:12  hetii: i use twisted.web.server.Site() to offer xmlrpc instance. On this way im able to run my methods. but what i need is some kind of session mechanizm so user will ba jail on his session and do what he need there untill logout
15:12  vr6: Habbie:  Although it does see to work if I cast  str(datetime.date)
15:12  bobthemilkman: max(0,x) for x in l....
15:13  bobthemilkman: I understand the max part, and the for x in i part, but I'm not familiar with that syntax.
15:13  lvh: hetii: http://jcalderone.livejournal.com/53465.html
15:13  gwork: bobthemilkman: a,b,c,d = [max(0,x) for x in (a,b,c,d)] ?
15:13  bobthemilkman: Oh!
15:13  lvh: bobthemilkman: the tutorial, see part 5.4.1
15:13  bobthemilkman: part 5.4.1, got it
15:14  lvh: oh, they changed it
15:14  lvh: bobthemilkman: http://docs.python.org/tutorial/datastructures.html#list-comprehensions
15:15  kerio: hmm... i just realized i don't know anything about web programming
15:15  kerio: fun
15:15  lvh: kerio: Feature, not a biug
15:15  lvh: bug*
15:15  bobthemilkman: Oh, 5.1.4!
15:16  bobthemilkman: You were very close. :)
15:16  kerio: lvh: huh?
15:17  lvh: kerio: Not knowing web programming
15:17  lvh: kerio: It makes you a happier person
15:17  lvh: kerio: Trust me.
15:17  kerio: yeah but i am making a website
15:18  shylent: at least you dont need to worry about rounded corners
15:18  kerio: it has to be ready for... june
15:18  lvh: I wish twisted had socket.io
15:19  lvh: well, it did
15:19  lvh: with athena, six years ago
15:19  Shambat: I'm a little confused by this code: oids = ['abcd','1234','xyzq']; oids = [OID(oid) for oid in oids ]; what does it do? take a list 'oids', place it in a tuple in another list?
15:20  Mion: Shambat: does the same as map() more or less
15:20  lvh: Shambat: No, that's a list comprehension. See section 5.1.4 of the tutorial
15:20  VladDrac: it's called a list comprehension, it's a compact way of writing: res = []; for oid in oids: res.append(OID(oid)); return res
15:20  lvh: Shambat: http://docs.python.org/tutorial/datastructures.html#list-comprehensions
15:20  phix: The royal society for putting things on top of other things!
15:21  VladDrac: or, indeed, map(OID, oids)
15:21  Mion: Shambat: builds a new list with the func OID() mapped over every item in the list
15:21  veasel: It seems atexit() doesnt handle SIGTERM/SIGKILL is there a dedicated function that can handle this bar setting up full signal handling?
15:22  Shambat: lvh, Mion: ok thanks! I will look at that
15:22  phix: veasel: do you put no less than 20 things on top of other things?
15:22  neumaennl: phix: do you realize that all you do is annoy people?
15:23  veasel: phix, whats are you on about?
15:23  veasel: phix, ^^what
15:23  phix: neumaennl: That is just a side effect, it will go away soon
15:23  phix: veasel: do you put things on top of other things?
15:23  veasel: phix, In what context?
15:24  phix: veasel: python  contenxt
15:24  Alberth: veasel: SIGKILL cannot be caught at all
15:24  phix: you have watched the series that mr Guidio was enspired by rights?
15:25  lvh: phix: Final warning. Stop it.
15:25  phix: lvh: ffs, go and put something on top of something else right now
15:25 --- ChanServ sets modes [#python +o lvh]
15:25  cheater99: bye phix
15:25  phix: bye
15:25 --- lvh sets modes [#python +b $a:phix]
15:26 --- lvh sets modes [#python -o lvh]
15:27  neumaennl: lvh++
15:27  Alberth: veasel: SIGTERM should be catchable, the signal module should be useful (although signals are not a very reliable means to communicate)
15:28  veasel: Alberth, Ok, makes sense.. SIGTERM can be caught though yes, basically what I want to do is is invoke cleanup when a script gets 'kill <pid>' , atexit() wont do it for me...
15:28  Shambat: Mion, so I found out that OID(value) is the same as str(value) ... so that means that for every item in the list oids, the item is cast to a string. right?
15:29  Alberth: veasel: I don't know the precise semantics of atexit(), but it sounds like that would happen only on sys.exit()
15:30  kerio: lvh += 1
15:30  Alberth: Shambat: no, python does not cast, a conversion function is called
15:30  veasel: Alberth, hmmm
15:30  sidh: Greetings
15:31  Shambat: Alberth: alright, thanks
15:32  Alberth: Shambat: hmm, maybe 'conversion' is not the right word either. It calls a function that returns a string representation of the object. Ie you get a piece of text, the object itself is not changed
15:32  sidh: I'm quite new to python language, and I would need to understand one thing about csv.DictReader, it seems we can not define a delimiter or am I wrong ?
15:32  Shambat: Alberth: so you get a copy of the object in string form?
15:32  sidh: http://docs.python.org/library/csv.html#csv.DictReader
15:33  Alberth: Shambat: that depends on how the object implemented self.__str__()
15:34  Shambat: Alberth: ah I see now
15:34  Shambat: Alberth: thanks
15:34  NelleV: sidh: I think you can, look down the documentation a bit
15:34  NelleV: section 13.1.2
15:34 --- ChanServ sets modes [#python +o lvh]
15:34 --- lvh sets modes [#python -b $a:phix]
15:34 --- lvh sets modes [#python +b $a:phix]
15:35 @lvh: (I have to reset the ban mode, otherwise infobob doesn't follow.)
15:35 <-- lvh has kicked phix from #python (phix)
15:35 --- lvh sets modes [#python -o lvh]
15:35  sidh: NelleV: to be honnest i'm noob in python and i have some difficulties to understand if one argument is optionnal or mandatory, in the reference guide, I apologize
15:36  NelleV: sidh: no problem. I've never used delimiters with csv myself to be honest. But I remembered there was something on that in the documentation :-)
15:36  Harpyon: Can anyone assist me in getting pip to work with python 3.1? I'm on a mac, and I've managed to install it to python3.1 using the setup.py thingy, but when I type pip into the console it's using the python2.6 version. How can I change it?
15:37  lvh: Argh. Pay no attention to the man behind the curtain...
15:37 --- ChanServ sets modes [#python +o lvh]
15:37 --- lvh sets modes [#python -b $a:phix]
15:38 --- lvh sets modes [#python +b $a:phix]
15:38 --- lvh sets modes [#python -o lvh]
15:38  greg_f: I have such unicode string http://dpaste.com/284381/ with bad symbol dumped by pickle, how i can loads it?
16:07  vr6: Hi.  Yesterday, I posted some code and got some unexpected (but much needed) critique on my python var names.  ...
16:07  vr6: Being 6 wks new to python, here (http://paste.pound-python.org/show/kO9DBUUp0XtzhEKgmZqs/)  is one of my recently coded function.  So, I was thinking if anyone is up for the challenge and if it is possible to do without knowing the entirety of the app, please feel free to comment and help me produce more pythonic code before further bad python habits take hold. private msg are fine.
16:07  vr6: if not, that is fine, too :)
16:09  papna-god: vr6: Never ever ever ever use string interpolation for SQL queries.
16:09  papna-god: vr6: http://bobby-tables.com/
16:10  papna-god: vr6: http://docs.python.org/library/sqlite3.html
16:12  papna-god: Also, rather than having globals, make a class and store your state on that.
16:12  papna-god: Also, never ever use `import *`
16:13  papna-god: vr6: Oh, I linked the sqlite documentation, thinking you were using that, not MySQLdb. The MySQLdb documentation will explain how not to use string interpolation with it.
16:14  papna-god: vr6: Also, oursql is supposed to be a much, much better MySQL driver.
16:14  vr6: papna-god: yep, was just going to let you know it is MySQL (not my choice)
16:15  datadude: Hello, all.
16:15  papna-god: vr6: Never modify sys.path in your program. It makes especially little sense in this case, in which you already imported the globals module so you must already have something on your sys.path you can import.
16:15  fluter: Hello datadude
16:15  papna-god: vr6: Modifying sys.path is simply not a thing you can do in a real program.
16:16  damascene: Hi, a friend helped me with this search and replace script http://fpaste.org/bg3T/
16:16  damascene: how ever it miss something like this
16:17  damascene: '\[FONT=(.*?)\](.*?)\[\/FONT\]': '**$2**'
16:18  damascene: I want the text between some tag to be extracted instead of deleted in this line     '\[.*?\]': '',
16:18  damascene: is that possible?
16:18  vr6: papna-god: OK, and huge thanks on all the above, am going to review comments and rewrite as necessary.  If not string interpolation for an SQL statement what is the name of the alternative method... paramaterized SQL calls?
16:18  papna-god: vr6: Sure.
16:23  hunterp: when I do  grid[back[0]][back[1]] = "x"   I get:   TypeError: 'str' object does not support item assignment
16:23  papna-god: hunterp: Strings are immutable. You can't reassign parts of them.
16:23  datadude: This is day seven of Python for me, and I'm having a little trouble reading the API page for oursql.  I'm trying to write a simple script that reads the MySQL tables from my laptop's local tables and writes to .CSV.  The script is here: http://datadude.pastebin.com/YbGBRD5j   Would someone mind helping me out?
16:23  infobob: http://paste.pound-python.org/show/339/ (repasted for datadude)
16:23  papna-god: "foo"[1] = "b"    <---- not valid
16:24  hunterp: I see....
16:24  hunterp: how can I split a string into a list?
16:24  Alberth: with str.split()
16:25  bfrog: is there some sane way of getting nose to not run things after doing os.fork()
16:25  papna-god: hunterp: A list of individual characters?
16:25  hunterp: papna-god: yes
16:25  papna-god: hunterp: A list of the things between spaces or some other seperators?
16:25  papna-god: hunterp: For that, list(s)
16:25  hunterp: no separator
16:25  NelleV: papna-god: I like your new nick :-)
16:25  hunterp: I have abcdef i want ['a','b','c','d','e','f']
16:25  papna-god: hunterp: This is very possible but seldom needed.
16:26  Alberth: damascene: you need to escape \   (line 12)  or use a raw string
16:27  papna-god: NelleV: Thanks. Someone was like, "God, this is so annoying", so I figured....
16:27 --- papna-god is now known as papna_
16:27  Alberth: damascene: text between ( and ) becomes a group automagically on matching, which you can pull from the match object afterwards.
16:28  Alberth: damascene: see also the docs on the re module
16:28  damascene: escape like this?    '\[.*?\]': '\.\*\?',
16:29  damascene: this does not work    '\[.*?\]': '.*?',
16:29  hunterp: I have "abcdef" i want ['a','b','c','d','e','f' ]
16:29  dash: hunterp: there's not much reason to do that, though.
16:29  dash: hunterp: why do you want this?
16:29  lvh: hunterp: Yes, we understand. Why?
16:30  hunterp: because I want to replace an arbitary index of the string, im using it as a solver for a car puzzle game
16:30  lvh: hunterp: They are both sequences of strings, so it's somewhat strange to want that.
16:30  lvh: hunterp: Okay: list(s)
16:30  papna_: hunterp: See ^^
16:30  dash: hunterp: what does the string represent?
16:30  hunterp: nodes in a 6x6 grid of cars that go up/down or left/right
16:31  hunterp: there is 1 goal-car  and 1 exit.   to win, you get the goal-car to the exit
16:31  hunterp: so Im making a recursive solver for fun
16:31  damascene: I tried    '\[.*?\]': '\1', and     '\[.*?\]': '$1', but did not work to
16:31  Alberth: damascene: '\[(.*)?\]'  is what  you want to feed RE, but the \ must be escaped for the string literal, either r'\[(.*)?\]' or '\\[(.*)?\\]'
16:32  rmrfslash: I need to install sqlite in a custom location (I don't have control over this Red Hat system and the Python packages are severely out of date). I've been hunting for how to tell the python ./configure script where to look for the sqlite dev headers but failed thus far. Does anyone know how to do this? Right now I just get an error after make that says, python has failed to find bits to install _sqlite3 (among others)
16:32  bfrog: is there a python unit testing framework akin to C check, in that each test is run in a forked process?
16:32  Alberth: damascene: so where do you replace the match?
16:32  dash: bfrog: yikes! why?
16:33  rmrfslash: ./configure --help was of no.... well, help.
16:33  dash: bfrog: segfaulting is not a normal way for python tests to fail
16:33  NelleV: nor anythng actually...
16:33  bfrog: well, unless they're testing C extensions :-P
16:33  fluter: datadude, receive_the_filename have problems
16:33  bfrog: dash: it seems like nose doesn't obey sys.exit()
16:34  fluter: at a first glance it is wrong recursive
16:34  papna_: bfrog: It has except:, of course.
16:34  Alberth: damascene:   for r in _replacements  only gets the keys
16:34  datadude: fluter: What is wrong with the recursion there?
16:34  damascene: Alberth: I don't know anything about coding I'm just trying to get things to work. I tried this     '\\[(.*)?\\]': '\1', and I got this http://fpaste.org/BRN9/
16:35  bfrog: papna_: so there's no way to get it to behave then
16:35  fluter: datadude, line 54, should be return receive_the_filename()
16:35  Alberth: damascene: so reading a few things about python and the RE module would be useful then
16:35  swarog: any suggestions regarding http crawler client lib i should use? httplib, urllib2 or some curl implementation?
16:35  damascene: I'll try to. I hope it does not take for ever
16:35  nosklo: swarog: scrapy.org
16:36  swarog: nosklo: nice, thanks
16:36  swarog: nosklo: is it widely used or?
16:36  Alberth: damascene: if you know another language already, the official tutorial is very good and compact. See also the /topic
16:36  bfrog: papna_: so I mean, how would I ever be able to test something that uses fork then
16:36  bfrog: papna_: does unittest not have this problem?
16:37  bfrog: honestly python unit testing seems crappier than C unit testing with check to me now that I've used check :-(
16:38  damascene: Alberth: I just know bbcode and some wiki syntax. that is as far as could get. I really would like to learn programming but it need time and brain. thanks for trying to help.
16:39  nosklo: damascene: this is a very good beginners book, by reading it you can learn to program from the ground up http://bit.ly/40CBHF
16:39  nosklo: damascene: if you have any questions regarding it, feel free to ask here
16:39  Alberth: damascene: well, to fix this one you'll need to know what the code does, and without knowing python, that is not going to happen. I recommend the beginner book for you
16:40  papna_: bfrog: Like any unit testing framework in Python's going to catch all exceptions.
16:40  nosklo: damascene: this one is very good, too http://learnpythonthehardway.org/
16:40  papna_: bfrog: Occasionally I've launched my apps as subprocesses.
16:40  papna_: bfrog: I don't see why I'd want to fork my actual test.
16:40  datadude: fluter: I'm not sure that I understand why.
16:40  datadude: Can you explain?
16:41  warz: hi all. is there a hosting service for python apps, similar to heroku?
16:41  damascene: Thank all
16:41  screen-x: nosklo: is diveintopython not loved?
16:41  fluter: datadude, if the first time user input N, then it goes 54, but it does not return the file name, so
16:41  nosklo: screen-x: no. It is hatd
16:41  nosklo: hated
16:41  fluter: to call at line 61 will nto receive the file name
16:42  nosklo: screen-x: it teaches bad techniques and has plain open lies about the language
16:42  nosklo: screen-x: also, not very new-programmer-beginner-oriented
16:42  fluter: nosklo, is that true? or you r making funny?
16:42  nosklo: fluter: no, that is the truth, unfortunately
16:42  screen-x: nosklo: ok, thanks.
16:42  fluter: nosklo, lots of peaple recommend that book, although I dont have one
16:43  nosklo: fluter: yeah, burn all copies you can get hold of
16:43  nosklo: fluter: and add a firewall rule so you never access the site
16:43  fluter: nosklo, ok, right, also I know they are several translation editions :)
16:43  NelleV: nosklo: just a question, have actually read it ? xD
16:43  fluter: nosklo, is python in a nut shell good?
16:43  NelleV: nosklo: I never had, but Im wondering :-p
16:43  nosklo: NelleV: sure - I even compiled a long list of problems
16:44  NelleV: nosklo: ok :-)
16:44  fluter: nosklo, ^^
16:45  nosklo: fluter: this one is not that bad...  but it's not what I usually recommend
16:45  fluter: nosklo, what would you recommend please?
16:45  aeldaly: All, I have a question regarding RotatingFileHandler. Here is the script and description of the problem: http://pastie.org/1359156
16:45  nosklo: I have two recomendations - absolute beginnher -> think python/learnpythonthehardway ;; coming from other language -> python official tutorial
16:46  fluter: nosklo, yeah, I read some of the tutorial, not completly, is think python/learnpythonthehardway a book name?
16:46  nosklo: fluter: those are two books
16:47  nosklo: fluter: http://learnpythonthehardway.org/ and http://bit.ly/40CBHF
16:47  fluter: nosklo, ok, I think you mean thinking in python
16:47  papna_: fluter: Not really.
16:48  fluter: ah, I got it, I heard the How to Think Like a Computer Scientist book, but dont know it is the Think python book :)
16:48  papna_: fluter: Same book.
16:48  fluter: thanks nosklo, papna_
16:52  aeldaly: anyone>
16:52  aeldaly: ?
16:53  pexi: do you know any pure-python (2.5) solutions for in-memory&disk dict/json databases (nosql style)?
16:54  pexi: simple dict (keyword) datastorage that enables querying/updating data?
16:55  pr3d4t0r: pexi: If you can live with mongoDB + PyMongo that's a great setup.  If you want even the DB to be implemented in Python, then no, I don't.
16:55  alkamid: anyone familiar with Gnuplot.py ?
16:55  Harpyon: Is it possible to create a long-lived http connection using python 3, for connecting with the twitter stream API?
16:55  ezzieyguywuf: in general, is there much difference between using single quotes and double quotes to describe a string literal?
16:55  papna_: pexi: If I wanted an in-memory key-value store, I'd use a dict.
16:55  pexi: preaction, yes, I would like to have mongo or couch but thats not an option :(
16:55  papna_: ezzieyguywuf: None.
16:55  ezzieyguywuf: papna_: thanks.
16:55  gwork: pexi: you mean shelve?
16:56  papna_: gwork: Ewwwwwwwwwwwwwwwww.
16:56  pexi: can you query/update shelve?
16:56  pr3d4t0r: pexi: We have production setups of mongoDB + PyMongo handling lots of data.  The PyMongo API can run entirely in Python too.  We deploy it under Python 2.5.x - 2.7 and under Jython 2.5.2, so we know it can all be made pythonic.
16:56  pexi: i mean that would be enough for me
16:56  pexi: client-side only
16:56  papna_: alkamid: No. I use matplotlib.
16:56  gwork: pexi: what exactly are the requirements?
16:57  pr3d4t0r: pexi: Can you please expand a bit on your requirement?
16:57  pexi: python 2.5 and maemo :)
16:57  pexi: client-side
16:57  NelleV: papna_: either I don't understand the question, either I don't agree with you on the single quote/double quote around strings
16:57  NelleV: the difference is minime, but there is one xD
16:57  gwork: pexi: what do you mean by querying?
16:57  NelleV: ok, it's bullshit, I'll shut up...
16:58  papna_: ezzieyguywuf: NelleV is presumably making the point that you have to escape single quotes in single-quote literals and double quotes in double quote literals.
16:58  pexi: you can hack couchdb into maemo (if you get lucky) but there are no python-api for that
16:58  pr3d4t0r: pexi: "client-side" what do you mean?  That you're embedding the database in the client?
16:58  pexi: yes, collecting data with phone
16:58  pr3d4t0r: pexi: Ah, gotcha.
16:58  papna_: ezzieyguywuf: This is a slight syntactic difference. The strings they actually make are indistinguishable.
16:59 * NelleV nods
16:59  blistov: I have str="0003d5k67e"  I need it split to str="00:03:d5:k6:7e" Whats the cleanest way to do this?
16:59  pexi: but not sql-like data, more of document type/nosql
16:59  gwork: pexi: check out anydbm, you may find it enough to work with
16:59  papna_: blistov: ":".join(grouper(2, s)) where grouper is something you can copy from the iterools documentation.
17:00  gwork: pexi: anydbm feel like persistent dictionaries. would that suffice?
17:01  pexi: gwork, yeah, if you can query/update it, it'll do the job.
17:01  pexi: gwork, i'll look into it, thanks :)
17:02  blistov: papna_, Not following entirely.
17:03  pexi: btw. why do you hate shelve?
17:03  blistov: Copy the grouper function from the iterools docs?
17:03  lvh: Right.
17:03  papna_: blistov: Yes.
17:03  lvh: pexi: It's pickle.
17:03  dash: pexi: it is not designed to not lose your data.
17:03  locojay: hi is uuid.uuid1() threadsafe
17:03  dash: pexi: sqlite is the thing to use.
17:04  dash: locojay: what does "threadsafe" mean?
17:04  locojay: multiple worker don't get the same id
17:04  locojay: using celeryd
17:04  dash: gwork: yeah, don't go there
17:05  bsod1: when I type xrandr --addmode VGA1 1920x1080 it says "cannot find mode 1920x1080", how can I pass this
17:06  locojay: using celeryd : each worker reads a file from gridfs and save it as a tempfilelame : temp+'_'+ str(uuid.uuid1()) and does some stuff with it and then deletes
17:06  papna_: pexi: sqlite is available, flexible, and performant.
17:06  papna_: pexi: SQL databases have a long history of being used to represent non-relational data, whether they're nice for it or not.
17:06  locojay: don 't want multiple workers to genarate the sameid
17:06  pexi: yeah, but i would really like to have key-value-database :)
17:07  papna_: locojay: uuid.uuid1() is supposed to be universe-safe
17:07  Harpyon: How can I access the buffer or whatever of a urllib.request.urlopen object before it finishes? For a http stream.
17:07  ezzieyguywuf: papna_: I am aware of the espcaping requirement
17:07  papna_: locojay: Why are you using threads?
17:07  papna_: locojay: Oh, celery.
17:07  locojay: none just workers ( processes or workers)
17:07  ezzieyguywuf: python has no case-like construct? i.e. a case block in FORTRAN?
17:07  locojay: yes celery
17:07  papna_: ezzieyguywuf: Correct.
17:08  papna_: ezzieyguywuf: Use a dict.
17:08  ezzieyguywuf: papna_: how can I use a dict in this situation?
17:08  ezzieyguywuf: if mydict['somekey'] == someval ?
17:08  Alberth: ezzieyguywuf: d = {1: f, 2:g} ; y = d[n](x)
17:08  papna_: ezzieyguywuf: The keys are the cases.
17:09  locojay: i need to create a temp file since i m saving some string to gridfs and gridfs needs a stream open(...)
17:09  papna_: ezzieyguywuf: d = {'a': f, 'b': g}; ...  d['b'](q, w)
17:09  papna_: locojay: Why aren't you using the tempfile module for that?
17:09  gwork: dash: ?
17:09  firecat53: hey guys, I'm struggling with extending a class such that you can call any of the methods of the parent class and have it's result evaluated by a separate method/function. some like http://paste.pocoo.org/show/302072/
17:09  gwork: pexi: np,yw
17:09  locojay: tempfile module?
17:09  papna_: locojay: Python has a module for created temporary files.
17:10  locojay: cool thnks you never stop learning
17:10  papna_: locojay: Also, it seems weird to me if GrifFS needs an actual filesystem file. Are you sure it doesn't need something it can get in your program?
17:10  papna_: locojay: I'd check in #mongodb
17:10  pexi: buzhug seems also nice pure-python
17:11  locojay: i could use stringIO
17:11  locojay: i ll check on mongodb
17:11  ezzieyguywuf: papna_: http://paste.pocoo.org/show/302274/ not so sure that would help in this situation, though I could just be misunderstanding your meaning.
17:12  ecolitan: hello
17:13  ecolitan: i have an object I dont understand
17:13  crazymykl: firecat53: you want to override get_data in the subclass with a version that calls the superclass' get_data, then returns it with sort_data applied
17:13  ecolitan: when do type() it lists three different types: str, list and int
17:14  papna_: ezzieyguywuf: To the basic effect of http://paste.pocoo.org/show/302278/
17:14  ecolitan: i want to just work with the list in there
17:14  papna_: ecolitan: Pastebin repr(x) and type(x) and the code you used to get them.
17:14  ecolitan: ok
17:14  firecat53: crazymykl: ok, thanks...but is there a way to code that so the subclass doesn't have to explicitly repeat each method of the superclass?
17:15  crazymykl: firecat53: explicit is better than implicit
17:15  papna_: ezzieyguywuf: An if chain is fine too. Doesn't matter much.
17:15  papna_: ezzieyguywuf: Use "elif", though, not just a bunch of "if"s.
17:15  firecat53: crazymykl: mmm, true, but I'm just trying to prevent having to add a new method in two places
17:15  papna_: ezzieyguywuf: And probably have an else: to handle the case of unexpected input.
17:16  firecat53: crazymykl: but it is probably simpler to just write it out...
17:17  adepti37: Hi. After creating a csv reader -- cf = csv.reader(open(filename, 'rb'), delimiter=',', quotechar='|') -- and iterating through -- for row in cf: -- is there some way to reset the position to the top of the reader?
17:17  ecolitan: http://pastebin.com/wV9YbP7s
17:17  infobob: http://paste.pound-python.org/show/340/ (repasted for ecolitan)
17:17  ezzieyguywuf: papna_: I was wondering if elif would be more resource-friendly.
17:18  papna_: ecolitan: Oh, that's different than I thought you meant.
17:18  papna_: ecolitan: It looks like Mailbox.retr(i + 1) isn't a reasonable thing to iterate over.
17:19  firecat53: crazymykl: ok, I tried a test case and I see how that can work. Thanks :) although intellectually speaking, I'd still be interested in how that could be done implicitly in the subclass :)
17:19  papna_: ecolitan: Perhaps you should unpack its various values and do with them what you want.
17:19  crazymykl: adepti37: csv.reader returns an iterator, which can't be run backwards
17:19  ecolitan: unpack the variables?
17:19  crazymykl: adepti37: csv.reader returns an iterator, which can't be run backwards
17:19  papna_: ecolitan: You iterate over stuff where each item has the same semantic meaning; that isn't the case here, the information in them are all so different.
17:20  crazymykl: you could dump the iterator into a list, if memory allows
17:20  ezzieyguywuf: papna_: actually, if you look at the code there can't be any unexpected input.
17:20  ecolitan: papna_: but each item should have the same stuff
17:20  ezzieyguywuf: at least not for the if-statements.
17:20  papna_: ezzieyguywuf: Okay.
17:20  papna_: ecolitan: That doesn't seem remotely to be the design of the thing returned.
17:21  aeldaly: Can anyone see this?
17:21  ecolitan: papna_: so in general, when I have an object, j, that has is made of multiple types, can I extract them seperatly?
17:22  crazymykl: aeldaly: nope. it's invisible.
17:23  papna_: ecolitan: Imagine you get a person, represented by their name, sex, and age. I might call a function that would return (u"Suzy", u"female", 25)
17:23  papna_: ecolitan: When I got that, I would iterate over it "for x in (u"Suzy", u"female", 25)"
17:23  papna_: ecolitan: Then all my x would be different.
17:23  papna_: ecolitan: I'd do "name, sex, age = (u"Suzy", u"female", 25)"
17:25  vr6: Re: oursql -> After simple success, need to extend query to 'SELECT * FROM thisTable WHERE id IN (?) and date = ?, ('1234, 5678, 9873', '2008-27-09').  Issue is the FIRST question mark for the IN (?) is only pulling records of first ID in the list, eg pulling ids of 1234.  If I make 5678 first, it only pulls 5648 records.
17:25  vr6: Tried to double quotes, ?*, etc., not seeing anything in docs that I found, any one know the oursql way to do this?
17:26  ecolitan: papna_: when I try it says too many variables to unpack
17:27  ecolitan: values sorry
17:27  papna_: ecolitan: Sounds like a really informative error message.
17:27  papna_: ecolitan: You have to unpack all the value in the iterable.
17:27  papna_: ecolitan: How many are they and what are their meanings?
17:28  ecolitan: the first is a string, which just says that the message is coming
17:28  ecolitan: then the message comes, with its parts all in a list
17:28  papna_: vr6: No idea.
17:29  ecolitan: then an int with the number of bytes which came out
17:29  papna_: vr6: I would have guessed execute('SELECT * FROM table WHERE id IN ?', (['1234, 5678, 9873'])
17:29  papna_: vr6: Erm, without those quotes.
17:30  vr6: papna_: error, can't bind type list
17:30  nore: hi everybody!
17:31  papna_: vr6: My hopes were clearly too high.
17:32  nore: newbie question: are there built-in indicators of first and last loops of for loop? thanx!
17:32  papna_: nore: No.
17:32  papna_: nore: indeed, there's no real way to know the latter.
17:32  papna_: nore: Perhaps you want to do something before or after your loop
17:32  rsyring: How would I go about publishing the availability of packages for easy_install and pip, without putting them on pypi?  Bonus points for being able to mirror packages from pypi.
17:32  nore: papna, it is a seq
17:33  papna_: nore: Python doesn't know that.
17:33  nore: i was thinking seq[len(seq)-1] :)
17:33  nore: that was for the last
17:33  bz: seq[-1]
17:33  papna_: nore: Python doesn't know about that when it iterates over something. You're welcome to do whatever you want at the application level.
17:34  nore: papna, bz thanks
17:34  Stalafin: hello! :-) i do not know any python and my regexps are a bit rusty: what does this line of code exactly do? " re.sub(' +', '_', re.sub(r'.*/(.*)$', r'\1', folder).lower()) " I understand that re.sub( ) takes a string and replaces a pattern with a replacement... but does the innermost re.sub do?
17:36  Stalafin: in particular: what does the pattern " r'.*/(.*)$ " and the replacement " r'\1' " mean ?
17:36  ecolitan: papna_: the documentation for the function says it returns (response, ['line', ...], octets)
17:36  vr6: papna_: yeah, running out of variations, prob need to go to oursql mailing list.  work around is that I could outer loop through ids and pull id based results sets
17:36  crazymykl: Stalafin: \1 is a backref, it matches what was in those parens
17:37  crazymykl: \1 is the first set, \2 is the second, &c.
17:37  bz: ecolitan: response, lines, num_octets = Mailbox.retr(i+1)
17:37  Stalafin: crazymykl: can you please give me an example?
17:38  Stalafin: crazymykl: and what do you mean by "in those parens"? which parenthesis?
17:38  crazymykl: Stalafin: the first set in the pattern
17:38  ecolitan: bz: for j, k, l in Mailbox.retr(i+1):    ValueError: too many values to unpack
17:38  bz: ecolitan: get rid of that for
17:39  ecolitan: bz: but there are many messages in teh mailbox? i would need to loop through them
17:39  Stalafin: crazymykl: so the second argument somehow works on the first?
17:39  mcantor: What is the most terse and readable way to express "x in some_list and y in some_list and z in some_list"?
17:39  Stalafin: crazymykl: what does that r in there do?
17:39  bz: ecolitan: http://pastebin.com/jza1kzBf
17:39  infobob: http://paste.pound-python.org/show/341/ (repasted for bz)
17:40  mcantor: (Or is that it?)
17:41  papna_: vr6: There's a chance that if the set size varies you'll have to implement it at an application level. Sorry, I only occasionally actually do database stuff.
17:41  crazymykl: Stalafin: r'string' makes the string raw: python escapes are not needed (this is common for regexes, else you'd need far too many \\\\)
17:41  crazymykl: compare '\n' to r'\n'
17:42  Stalafin: crazymykl: so \n is an escaped n, whereas the second one would be '\\n'
17:42  ecolitan: bz: ok thanks I see now
17:43  crazymykl: Stalafin: right, and since regexen use '\' to escape also, it's much easier to work with a raw string
17:46  Stalafin: crazymykl: and what is r'.*/(.*)$'? I would say, if i have the string foo/bar/bas/ it would match /bar/bas/, and then make it a raw string?
17:46  crazymykl: i think it would match all of it, and put "bas/" into group 1
17:47  Stalafin: hm, or that
17:47  Stalafin: and how is the replacement working on that then?
17:47  crazymykl: meaning that the replacement r"\1" would have "bas/"
17:47  Stalafin: so, foo/bar/bas/ is replaced by bas/ ?
17:47  crazymykl: yes
17:47  Stalafin: that does actually make sense!
17:47  Stalafin: crazymykl: thanks a lot!
17:47  Stalafin: :-)
17:48  crazymykl: in this example, 'string'.rsplit is much better, though
17:48  vr6: papna_: we'lls see.  I am posting a question on ourSQL, I'll pass back any info if only for curiosities sake
17:54  Stalafin: crazymykl: but doesn't re.sub return a string, too?
17:54  offbyone: Is there a reasonably simple way to get the benefits of PEP 3134 in Python 2.x?
17:54  offbyone: (Exception chaining)
17:54  crazymykl: Stalafin: yes
17:54  crazymykl: it does
17:55  Stalafin: crazymykl: but string.rsplit returns a list of strings
17:55  crazymykl: Stalafin: if you limit it to 1 split, then take the last string, it should work
17:56  crazymykl: 'foo/bar/bas/'.rsplit('/',1)[-1]
17:56  crazymykl: should do the same thing, faster, and more readable
17:57  Stalafin: well... since i am really not that proficient with python (and i am looking at something online): what does [-1] do?
17:57  crazymykl: Stalafin: the last element of  a sequence
17:57  Stalafin: haha, ok
17:59  crazymykl: note that both ways (regex or rsplit) will return '' if there is a trailing '/'
17:59  Harpyon: How do I make pip/easy_install work with python 3? I've installed them and everything, but they install to python 2.6, not 3.1
18:00  Stalafin: crazymykl: ok :-) Shouldn't be a problem though, because the argument is always a relative path (i.e. no trailing /)
18:00  crazymykl: Stalafin: in general, if you have a regex for a simple problem, you should find a better way
18:01  Stalafin: crazymykl: won
18:01  Stalafin: ups, sory
18:02  Stalafin: crazymykl: won't the regexp and the rsplit give different results? the regexp will have a problem with /foo/bar, the rsplit with foo/bar/
18:02  papna_: vr6: Are you sure that's the mailing list for the right project called "oursql"?
18:02  Stalafin: crazymykl: since the rsplit works to the right
18:02  papna_: _habnabit: You have a mailing list?
18:03  Stalafin: crazymykl: oh no, you are right
18:03  Stalafin: crazymykl: i am sorry
18:03  crazymykl: Stalafin: if you need to, you could use regular split, with no limit, but it's slightly slower
18:04  Stalafin: crazymykl: what about cutting off the end (if it is a /), and then running rsplit on it?
18:05  crazymykl: Stalafin: that would work
18:08  splashs: How do you get the class name for an object?
18:08  papna_: splashs: Why?
18:08  splashs: Why not?
18:08  papna_: splashs: printing repr(x) is good for debugging.
18:08  papna_: splashs: Because I've seen people try to do highly misguided things with it.
18:08  papna_: splashs: A name has no semantic value.
18:10  splashs: I don't understand why __name__ works on a class but not on an object, is there a substitute?
18:11  lvh: splashs: arbitrary objects dont necessarily have names.
18:11  lvh: Classes, otoh, always have names.
18:11  papna_: splashs: Things aren't in general names.
18:11  papna_: *named
18:12  splashs: so, I have to do __class__.__name__ if I wanted to get the class name for an object - should work everytime ?
18:12  papna_: splashs: What do you want this for?
18:12  splashs: debug mainly
18:12  papna_: splashs: What's wrong with repr(x)
18:12  papna_: ?
18:12  papna_: And what's the rest?
18:13  splashs: Don't really understand difference of types and classes yet
18:14  splashs: and I notice it outputs types
18:14  dash: they're mostly the same
18:15  splashs: dash: I figured that.. it's the mostly part that's hard to grasp :)
18:16  lvh: splashs: if you just use repr(anything) it should give you something useful
18:17  splashs: thanks
18:32 --- meadowman_ is now known as meadowman
18:40 --- kanor is now known as tyrus
18:47 --- tyrus is now known as kanor
18:54  alkamid: papna_, you said you were using matplotlib; do you know how to properly "delete" plots? I'm plotting something in a loop - the plot holds the loop, but when I close it no more plots are made
18:54  alkamid: I guess it's beacause I didn't clean up
18:59  hunterp: why does my solver give me solutions that take 8000 actions to arrive at: http://pastie.org/1359530
19:00  hunterp: i've seen the solution in less than 30 moves
19:01  thm: suprinsing that re.split(r'\b', '   foo bar') doesn't work
19:04  thm: so, how'd I split (and return) leading whitespace of a string?
19:05  dash: hunterp: how should we know? :)
19:06  deepy: Can you embed python in <application> and statically link it without any copyright/legal issues?
19:08  dash: deepy: python is permissively licensed, see this for details: http://docs.python.org/license.html
19:08  dash: deepy: short version is, you just have to include the python license when distributing it.
19:11  superdmp: is there a python library that I can use to determine the width/height of a video file?
19:13  blistov: How would I write a regex to convert 0000000000 into 00:00:00:00:00 ?
19:13  plundra: superdmp: If not, mpalyer is pretty easy to do that with. And has a very parseable output.
19:13  plundra: -e
19:14  plundra: blistov: Why regexp? Just .replace(':', '')
19:14  plundra: oh, my bad, but still: no regexps :-D
19:14  blistov: plundra, I don't follow how that would work.
19:14  blistov: Oh, haha.
19:14  blistov: Thats backwards.
19:14  plundra: Split by two, and ':'.join(it)
19:14  blistov: I need 0000000000 to turn into 00:00:...
19:14  superdmp: plundra:  I'm using HandBrakeCLI and ffmpeg2theora, but although they obviously know what the sizes are I can't make them tell me
19:15  superdmp: I will look at player
19:15  superdmp: mplayer
19:15  KirkMcDonald: >>> ':'.join(a+b for a, b in zip(*[iter(s)]*2))
19:15  KirkMcDonald: '00:00:00:00:00'
19:15  blistov: plundra, how do I split ever two characters?  (sorry, my first day with python)
19:16  lostpr: hello folks
19:16  lostpr: is it possible to convert string into a symbol ?? in python?
19:16  dash: KirkMcDonald: yum, operator soup
19:16  lostpr: like ruby's to_sym
19:16  plundra: blistov: What KirkMcDonald said, altough it might look daunting :-)
19:16  dash: lostpr: what's the difference between a string and a symbol?
19:16  KirkMcDonald: Alternatively: >>> ':'.join(a+b for a, b in zip(s[::2], s[1::2]))
19:16  KirkMcDonald: '00:00:00:00:00'
19:16  dash: KirkMcDonald: you're evil.
19:17  KirkMcDonald: dash: Pretty much.
19:17  lostpr: dash a string is a string, i can't use it to call a function. can i?
19:17  lostpr: like "a" = functionName
19:17  lostpr: "a"()?
19:17  dash: lostpr: strings are not callable, it is true
19:17  lostpr: I have to convert "a" to symbol a
19:17  dash: lostpr: Why?
19:17  lostpr: dash, something important :)
19:17  dash: lostpr: There's no such thing as 'symbols' in python, anyway
19:18  dash: lostpr: what's this for?
19:18  KirkMcDonald: dash: There are fast locals!
19:19  lostpr: well what i am doing is, I am storing things in a file. now as i read from the file, i have only a bunch of strings. I need to be able to convert it to a symbol
19:19  KirkMcDonald: lostpr: Sounds like you want a dispatch dictionary.
19:19  dash: lostpr: no such thing as symbols
19:19  dash: lostpr: have a dict.
19:19  dash: {"a": someFunction}, etc
19:19  rmrfslash: Anyone here use netbeans for python dev?
19:19  lostpr: "call" "repr()" then i i know "repr" and use you know..
19:20  dash: rmrfslash: i did, for about 3 minutes
19:20  rmrfslash: dash: any reason you stopped?
19:20  dash: rmrfslash: it had no texture, and it left me empty.
19:20  minijupe: can anyone recommend a reference for best practices when storing and doing calculations on currency? Specifically concerning rounding errors and db field type and precision.
19:20  dash: minijupe: "it depends"
19:21  SeanInSeattle: Hey all.  Does anyone know of a python library/module/pkg that would be useful in creating a long-running process (aka daemon) which will be managed via init.d scripts?
19:21  dash: minijupe: have you picked a database yet?
19:21  dash: SeanInSeattle: well, twisted has twistd
19:21  dash: SeanInSeattle: that's all i ever use
19:21  minijupe: dash: mysql
19:21  dash: SeanInSeattle: what's your program do?
19:21  KirkMcDonald: SeanInSeattle: http://www.python.org/dev/peps/pep-3143/
19:21  dash: minijupe: aw. are you stuck with it?
19:21  lostpr: dash, but i dont know if a function exists or not before hand :) I am assiging functions on the fly to various (ok one more time) symbols.
19:21  SeanInSeattle: dash:  monitors an ftp drop location, and processes files that are dropped.
19:21  rmrfslash: dash: left u feeling empty huh? I don't think it's too bad. having some issue debugging i.e. netbeans can't find the lxml module.
19:21  lostpr: And if there are no symbols then what is a = someFunction what is 'a'?
19:22  minijupe: dash: kind of stuck with it. It's an online store that process credit cards but also has a system of credit.
19:22  dash: lostpr: a function, of course.
19:22  lostpr: and a = 10
19:22  lostpr: now?
19:22  SeanInSeattle: KirkMcDonald:  Thx dude!
19:22  dash: lostpr: an integer.
19:22  rmrfslash: I'm about to just punch netbeans in the face
19:22  lostpr: yes, now help me convert a string to function
19:22  dash: SeanInSeattle: yeah, sounds like a job for twisted.
19:22  dash: lostpr: a dict
19:22  lostpr: i can't use a dict, i dont know the functiosn beforehand
19:23  dash: lostpr: before _what_?
19:23  lostpr: like i said i am creating on the fly and then assigning it to them.
19:23  dash: lostpr: creating _what_ on the fly and assigning _what_ to _what_?
19:23  blistov: KirkMcDonald, Thanks.  That did it.
19:23  dash: lostpr: you are leaving a lot of stuff out :)
19:23  lostpr: oh nevermind
19:23  SeanInSeattle: dash:  twistd sounds interesting.  Is there a howto or tutorial that you would recommend for twisted newbies?
19:23  matrix: hello
19:24  dash: SeanInSeattle: sure. http://krondo.com/?page_id=1327
19:24  matrix: hello
19:24  dash: lostpr: i'd love to help but you gotta tell us about the problem
19:24  SeanInSeattle: matrix:  yes?  Did you have a question to ask?
19:24  matrix: yes bro
19:24  matrix: i am newbie
19:24  matrix: and i have a web project like www.eksisozluk.com
19:25  matrix: can i write this project with python?
19:25  dash: sure
19:25  kerio: matrix: what is it
19:25  matrix: it s a good project
19:25  matrix: it s dictionary
19:26  kerio: with... frames
19:26  kerio: it's not good
19:26  kerio: but of course
19:26  matrix: can i do better that this project with python ?
19:26  dash: matrix: of course.
19:26  matrix: can you show me a project with python ?
19:26  kerio: you could do that with little more than static pages
19:26  matrix: web project
19:26  matrix: like that ?
19:27  dash: matrix: reddit.com
19:27  lostpr: matrix any web project or something only like eksisozluk.com?
19:28  lostpr: any project code.google.com
19:28  KirkMcDonald: The appearance of the web site has basically nothing to do with the language used to code its back-end.
19:28  matrix: this is very fasty
19:28  matrix: and good
19:29  kerio: matrix: google runs app engine on python
19:29  matrix: its very nice i have a question
19:29  nigelb: Right now, I'm really hating the writing options for ConfigParser.  I don't understand why its not getting the sections in the right order :/
19:29  matrix: google use a framework
19:29  matrix: ?
19:29  matrix: like django
19:29  lostpr: matrix you have to know, everything is converted to html,css,javascript before it reaches you.
19:29  papna_: alkamid: You want to generate completely seperate plots?
19:29  papna_: alkamid: do pyplot.figure()
19:29  dash: matrix: you can use django on app engine, i think. see #appengine for more details
19:29  alkamid: papna_, thanks
19:30  kerio: django is not that good
19:30  alkamid: that's what I want to do, separate plots
19:30  lostpr: and i am sure google uses something custom homegrown api
19:30  matrix: is it good pylons ?
19:30  matrix: or this project ?
19:31  matrix: do you know pylons ?
19:31  papna_: alkamid: That makes new ones, not disposes of old ones. You can do that with close, but I seldom do.
19:31  papna_: alkamid: It really depends what you actually want.
19:31  lvh: matrix: Pylons (well ,specifically Pyramid) used to be repoze.bfg
19:31  lvh: it's pretty reasonable
19:32  matrix: what s best framework
19:32  matrix: for web projects
19:32  deltaray: Hi, I'm learning python from the book Learning Python and they have this example and its returning something that is different than the book shows. Maybe someone could take a look at my code and the output http://www.pastebin.ca/2014038  and straighten me out?
19:32  infobob: http://paste.pound-python.org/show/343/ (repasted for deltaray)
19:33  TheCommieDuck: Um, I'm not sure if this is the best place to ask, so apologies if it isn't...but does anyone have experience with PySide for GUIs? I know it's a Qt wrapper, but I found PyQt to be...very C++ oriented.
19:33  papna_: deltaray: What version of Pythjon are you using?
19:33  deltaray: 2.6.6
19:33  thm: can someone explain this behavior: http://fpaste.org/9wr8/  looks like a bug to me
19:34  papna_: deltaray: In Python 2, which Learning Python targets, that prints a tuple ('dead', 'parrot', 'sketch')
19:34  papna_: deltaray: What output do you see and what output does the book show?
19:34  deltaray: I see the tuple, the book shows that the output would just be the string without any parens or quoting.
19:35  papna_: deltaray: Are you sure the book shows "print(a, b, c)" and not "print a, b, c"
19:35  KirkMcDonald: thm: The textwrap module is written in Python.
19:35  KirkMcDonald: thm: Less than 500 lines, even!
19:35  deltaray: papna, yep
19:35  deltaray: Its says print(a, b, c)
19:35  papna_: deltaray: Can you verify that the book still targets Python 2.x?
19:35  papna_: deltaray: Does the book show `from __future__ import print_function` somewhere?
19:35  thm: KirkMcDonald: and that tells me what? it has a right to have bugs? ;)
19:36  whyking: hi
19:36  deltaray: papna, Well, it talks about both 2.6 and 3.0
19:36  KirkMcDonald: thm: It would explain the behavior.
19:36  whyking: my subprocess ends often with: IOError: [Errno 4] Interrupted system call
19:36  whyking: which is quite annoying
19:36  whyking: any way I can stop that?
19:36  KirkMcDonald: whyking: What is the subprocess?
19:36  matrix:  /query lvh
19:36  deltaray: papna, its the 2009 version of Mark Lutz' Learning python. I'm reading it on Safari.
19:36  dash: thm: which part of that looks wrong?
19:36  thm: KirkMcDonald: short code normally isn't the main indicator of borken code.
19:37  dash: thm: he was saying you could go read it and know for sure.
19:37  whyking: KirkMcDonald: it's executing a command via ssh
19:37  whyking: KirkMcDonald: so Popen.call()
19:37  KirkMcDonald: thm: I was pointing out it was short as an inducement for you to read it.
19:37  papna_: deltaray: I've heard of it but am not familiar with it in any derail.
19:37  whyking: KirkMcDonald: I think
19:37  papna_: deltaray: What you're seeing is normal.
19:37  papna_: deltaray: The way to use print is like "print a, b, c"
19:37  deltaray: papna, so the mistake is in the book then?
19:37  thm: dash: the docu says it should drop whitespace if it happens to be at the beginning or end of the wrapped text
19:38  thm: dash: and it does, but only if the line is short enough beforehand
19:38  papna_: deltaray: I don't know the context. If it's speaking about 3.x or 2.6+ with "from __future__ import print_function", no.
19:38  whyking: hmm
19:38  whyking:     if not self._poll(block and (deadline-time.time()) or 0.0):
19:38  whyking: IOError: [Errno 4] Interrupted system call
19:38  whyking: that seems like the get() is actually not getting anything, no?
19:38  dash: whyking: sometimes system calls get interrupted.
19:38  KirkMcDonald: whyking: Are you using signals in your application?
19:38  whyking: dash: can I ignore those interrupts?
19:39  whyking: KirkMcDonald: what are signals?
19:39  KirkMcDonald: I'll take that as a no.
19:39  whyking: KirkMcDonald: sorry, no, I don't
19:39  dash: whyking: sure. i'd recommend it.
19:39  whyking: dash: how?
19:39  whyking: dash: signal handler?
19:39  whyking: I was hoping there to be an easier way
19:39  dash: whyking: eh?
19:40  dash: whyking: if you get EINTR, try again.
19:40  whyking: dash: ok, you mean a try/except construct?
19:40  dash: whyking: sure.
19:40  whyking: ahh
19:40  whyking: why didn't I think of that
19:40  whyking: I saw a retry decorator recently
19:41  whyking: maybe I'll use that
19:41  matrix: should i use pylons or django ?
19:41  KirkMcDonald: matrix: Maybe!
19:41  qwebber: can "%(foo)s"  be used with regular strings that aren't in dicts or such.
19:41  NelleV: matrix: I'd use pylons
19:41  matrix: is it security ?
19:41  filip: qwebber: how would you want it to work?
19:41  NelleV: matrix: (pyramids actually). I think it is a very nice, light framework, easy to learn.
19:42  KirkMcDonald: qwebber: Named format specifiers require using a dict containing the replacement values.
19:42  qwebber: i thought that if you did, foo = "bar"; print "%(foo)s"; the value of foo would be printed
19:42  filip: matrix: what do you want to create?
19:42  KirkMcDonald: qwebber: No.
19:42  filip: qwebber: do this:
19:42  papna_: deltaray: Again, this is a matter of *context*, which I don't have and you don't provide. There isn't anything interesting to learn from whether the book made a mistake unless you want to mail in an erratum.
19:42  matrix: i need this site www.eksisozluk.com
19:42  matrix: can i write this with pylons?
19:42  qwebber: KirkMcDonald, oh so its not shorthand for (%s) % foo
19:42  filip: qwebber: foo = "bar" ; print "%(foo)s" % locals()
19:42  KirkMcDonald: Ugggh.
19:42  papna_: deltaray: That would be true if it was talking about Python 2 with `from __future__ import division` or Python 3.
19:43  papna_: deltaray: For normal Python 2.6, the syntax is "print a, b, c"
19:43  papna_: deltaray: What you will normally use is "print a, b, c"
19:43  deltaray: papna_, Well its for the sake of my knowledge. I'm trying to learn it and was curious if it really should be showing it as a tuple like that.
19:43  qwebber: filip, yeah thats how i anticipated it would work. thanks.
19:43  matrix: pylons support python 3 ?
19:43  deltaray: papna, ok, thanks.
19:43  filip: qwebber: but I doubt there is a point to doing that
19:43  papna_: deltaray: What you are seeing is the expected behavior.
19:43  filip: deltaray: pylons is a lower level stuff than django
19:44  papna_: deltaray: Your screenshot is only correct in the contexts I've mentioned.
19:44  deltaray: ok
19:44  filip: ar, sorry
19:44  filip: matrix: pylons is a lower level stuff than django
19:45  dash: filip: is that really true? :)
19:45  papna_: deltaray: To learn what you want to learn, you should almost certainly correct it to "print a, b, c"
19:45  matrix: django is security ?
19:45  dash: matrix: what do you mean by 'security'?
19:45  matrix: web security no hack website
19:45  papna_: You have to ensure that yourself.
19:45  dash: matrix: we usually recommend not using django because it requires writing code in unusual ways that we find more difficult
19:46  deltaray: alright, and when I do that it does what is in the book.
19:46  dash: filip: never call locals()
19:46  lvh: filip: Can you provide examples of that?
19:46  qwebber: matrix, whats your primary language
19:46  matrix: turkish
19:46  deltaray: Speaking of out of context, imagebin has some weird stuff sometimes. http://imagebin.ca/view/WQ6KnjP.html  WTF?
19:46  qwebber: matrix, http://liste.linux.org.tr/mailman/listinfo/python
19:47  papna_: deltaray: hehehe
19:55  lvh: Does anyone know what the correct WWW-Authenticate header value is in a 401 response if the auth mechanism is "I checked your SSL cert and I didn't like it"
19:57  bartek: Assuming I have attr_dict and I want to add extra_dict to attr_dict, only on keys that are NOT in attr_dict, what's the best way? Currently looping through keys, update() doesn't quite do what I need.
19:58  qwebber: lvh, could be a few things. SSL_CONNECT_ERROR:35. SSL_PEER_CERTIFICATE:51
19:58  qwebber: lvh, if its a local cert rejection, SSL_CERTPROBLEM:58
19:59  lvh: qwebber: Wait wait
20:00  KirkMcDonald: bartek: Update extra_dict with attr_dict.
20:00  lvh: qwebber: Wait, wait, you put those values in the WWW-Authenticate header?
20:01  maik: i'm on an iMac running 10.6.5, Python 2.6.1.  if i try to do time.strptime i get "AttributeError: 'module' object has no attribute 'strptime'"
20:01  bartek: KirkMcDonald: Of course ..! Thank you :)
20:01  maik: the same code works fine on my MBP running 10.6.5 and Python 2.6.1
20:01 --- elpargo_ is now known as elpargo
20:01  KirkMcDonald: maik: is time.__file__ what you expect it to be?
20:01  maik: i'm a bit of a python noob, what should i expect it to be?
20:01  papna_: maik: Don't name your file time.py
20:01  maik: oh hah
20:01  KirkMcDonald: maik: In the same directory as the other standard library modules.
20:02  maik: papna_ is right, i never considered that
20:02  KirkMcDonald: maik: If it refers to a file you wrote, that would explain it.
20:03  qwebber: lvh, youre talking about what you send back to the user right
20:03  maik: shoot, i may have messed something up then
20:03  KirkMcDonald: maik: Be sure that you delete the .pyc file when you rename it.
20:03  lvh: qwebber: Yes, the 401 response.
20:03  teamnoir: Is there any way to refer to the current class or the current module other than by name?
20:03  maik: holy crap you guys are good.  i just discovered that file
20:03  lvh: teamnoir: Not typically, no
20:03  teamnoir: bummer.  Thanks.
20:03  maik: thanks guys!
20:04  lvh: teamnoir: Especially since "current class" isn't a thing: the current class doesn't exist yet when the functions that will be methods are defined.
20:04  lvh: teamnoir: You can type(self), of course, but it's rarely useful.
20:04  lvh: teamnoir: Why do you need the "current" class (and what does that mean)?
20:04  KirkMcDonald: There are ways to refer to the current module, though this isn't all that useful.
20:04  qwebber: lvh, oh. you can do 401.1
20:04  teamnoir: How do I refer to the current module?
20:05  KirkMcDonald: teamnoir: It depends on what exactly you need with it.
20:06  teamnoir: Lol.  In both cases, I want to find their names rather than listing them N times.  Something like "logger = logging.getLogger(__class__.__name__)"
20:06  lvh: teamnoir: That's surprisingly unterrible
20:07  lvh: teamnoir: __name__ is what you want
20:07  KirkMcDonald: A metaclass would let you specify that once.
20:07  teamnoir: Hm..  kk.  I'll go read up.  Thanks.
20:08  teamnoir: Same thing for module, really.  "logger = logging.getLogger(__module__.__name__)"
20:08  KirkMcDonald: teamnoir: Just __name__
20:08  lvh: qwebber: I thought that was IIS specific crapola
20:08  lvh: teamnoir: No, just __name__
20:08  teamnoir: Cool.  Thanks.
20:08  KirkMcDonald: Just as in: if __name__ == '__main__':
20:08  lvh: teamnoir: That's the current module :)
20:08  teamnoir: Doh!  Of course.  I'm silly.
20:08  lvh: teamnoir: For the current *class*, you want type(self).__name__
20:09  teamnoir: Ok, but there's no "self" at class definition time.
20:09  qwebber: lvh, not that i know of, but im not an authority. you can also do a 403 which doesnt redirect (might be useful)
20:09  KirkMcDonald: Except he appears to be making a class attribute, so there is no self.
20:09  teamnoir: Yes.
20:09  lvh: qwebber: Okay, thanks :)
20:09  KirkMcDonald: With a metaclass, you'd say: def __init__(cls, name, bases, attrs): cls.logger = blah_blah(cls.__name__)
20:09  lvh: Oh, sorry, I thought you were in an instancemethod
20:10  lvh: Okay, so you have two choices: a metaclass, or *don't do that*
20:10  KirkMcDonald: Then, woo, every subclass has it.
20:10  lvh: Personally, I'm a bigger fan of a classdec than a metaclass
20:10  KirkMcDonald: Class decorators are not inherited.
20:10  teamnoir: Perfect.  Thanks.
20:10  lvh: KirkMcDonald: Feature, not a bug
20:10  KirkMcDonald: lvh: Of course.
20:12  Ademan: dictionaries don't support sequence assignment right? (PySequence_SetItem I mean)
20:13  lvh: teamnoir: http://bpaste.net/show/12135/
20:14  papna_: Ademan: You mean setting slices?
20:14  papna_: Ademan: Oh.
20:14  papna_: Ademan: No, dicts aren't sequences.
20:14  papna_: Ademan: I'm almost certain that won't work, but I've never tried it
20:15  Ademan: papna_: as far as I can tell from the source, it won't, but I wanted someone to sanity check me :-)
20:15  Ademan: anything else that has a __setitem__ that isn't actually a sequence?...
20:15  dash: Ademan: most stuff probably
20:15  dash: Ademan: some sequences don't have __setitem__
20:15  lvh: Ademan: __setitem__ just means a[b] = c works
20:16  lvh: Ademan: That's distinct from being a sequence
20:16  Ademan: lvh: right, but they seem to often correlate, except in a few cases
20:17  lvh: Ademan: Not reaaalllyy
20:17  lvh: Ademan: tuples are sequences
20:17  lvh: Ademan: strings are sequences
20:17  lvh: collections.namedtuple
20:18  Ademan: lvh: eh, I guess I don't just mean sequence, I mean sequence assignment
20:18  lvh: Ademan: Like the ABC says: __getitem__ is the defining method
20:18  dash: Ademan: that's lists and numpy arrays and probably not a lot else :)
20:18  lvh: __contains__. __iter__, __reversed__. index, and count are the mixin methods
20:18  lvh: Which lead it to introduce old-style iteration which is sad
20:19  Ademan: lvh: well, again, to clarify I mean sequence assignment
20:19  lvh: Basically, it's a sized iterable container with __getitem__
20:19  lvh: Ademan: Sequence *assingment*? You mean slice assignment?
20:20  lvh: Like l[3:5] = aThing()
20:20  Ademan: sq_ass_item
20:20  dash: lvh: he means PySequence_SetItem
20:20  lvh: Oooh. Okay.
20:25  justinpeel: I have subclassed a python dict in a C module. How do I get the repr from the dict to be used as part of my subclass's repr?
20:26  Ademan: I think my connection just crapped out
20:27  dash: justinpeel: well first, why did you subclass dict? that's not a sensible thing to do in nearly all cases
20:28  justinpeel: I'm working on a C implementation of the Counter module
20:28  justinpeel: wait, I think I've found something..
20:28  kyl3: Can anyone help me out. What am I doing wrong here http://pastebin.com/1neR2ZUq
20:28  infobob: http://paste.pound-python.org/show/344/ (repasted for kyl3)
20:28  dash: justinpeel: ok, but still, why subclass dict?
20:29  justinpeel: hmm.. maybe I'm using the wrong terminology
20:29  justinpeel: the struct only has a dict in it.. isn't that subclassing in the C api?
20:29  dash: nope
20:29  dash: that's composition :)
20:29  justinpeel: ahh.. ok
20:29  dash: just call PyObject_Repr on the dict as usual if you want its repr
20:30  justinpeel: sry, still learning the lingo
20:30  justinpeel: thx
20:31  lvh: justinpeel: That's the first time in a *long* while I've seen someone do the correct thing by accident
20:31  lvh: Congratulations
20:31  biz: Hi, is there any built-in shortcut to express min(max(n, 1), 10)?
20:31  lvh: biz: Nope.
20:31  OwaisL: Hey frieds, is there a way to create a new File object in memory without opening an actual file from disk?
20:31  biz: :-(
20:31  lvh: biz: I'd say that's compact already
20:31  lvh: OwaisL: StringIO
20:32  justinpeel: well, I've been mostly trying to do things by copying other code to not screw things up too much
20:32  KirkMcDonald: OwaisL: Note that StringIO won't help if the thing you're passing it to literally wants an fd.
20:33  qwebber: i need to append a couple of entries to my local hosts file, i cant open the file as 'wb' though, i get a perm error. whats the way around this?
20:34  dash: qwebber: get some permissions
20:34  OwaisL: lvh, KirkMcDonald, actually I am working with Images. I've a File object (in memory) which I need to covert to PIL Image object, process it and convert back to File object and then save to disk.
20:34  qwebber: dash, getpass?
20:35  dash: qwebber: no soap, radio?
20:35  qwebber: dash, eh?
20:36  lvh: OwaisL: StringIO is probably good enough
20:36  dash: qwebber: sorry, what were you trying to say
20:36  OwaisL: lvh, KirkMcDonald, I need to pass a File object to another method and I can't find a way to convert a PIL Image object to file object.
20:36  qwebber: dash, what do i use to get/set permissions
20:37  kyl3: Can anyone help me out or even point me in a direction on how to use if statements and regex with python. On my own the only thing I have managed to come up with is http://paste.pound-python.org/show/344/  Thanks In Advance
20:37  qwebber: OwaisL, i used tostring to make it a string, then turned that in to what i needed.
20:38  dash: qwebber: well back up
20:39  dash: qwebber: why are you editing the hosts file?
20:39  SeanInSeattle: Hey all.  How to create a debian pkg from a python project?  I've been searching around, and I've found a few answers, but nothing that seems solid.
20:39  qwebber: dash, its the only way i figured out to mock responses when an outside process makes http connections.
20:39  SeanInSeattle: nevermind, I just got here: http://docs.python.org/distutils/builtdist.html
20:48  dash: qwebber: "outside process"?
20:48  dash: qwebber: outside of what?
20:49  dash: SeanInSeattle: it's about like making a debian package from anything else
20:49  qwebber: dash, outside of python. there is a jetty server that processes http connections.
20:49  dash: qwebber: ok. so 'mock' usually means you're writing unit tests
20:50  dash: qwebber: is that true? what are you testing?
20:50  qwebber: dash, im basically looking to redirect some url's to localhost, so when i hit a site, lets say theres some .js file i dont want to load, i add it to hosts and redirect to localhost.
20:53  bob2: you still don't need to edit the hosts file
20:54  qwebber: bob2, ok - so what do i do instead
20:54  bob2: I don't really understand wtf you're doing
20:54  bob2: but if this is still the "I want to send fake urls to a java server" thing, then use the proxy arg to urllib.urlopen
20:54  bob2: er fake Host: headers
20:55  qwebber: bob2, same issue, but thats not the problem or the solution
20:55  bob2: what thing are you trying to achieve?
20:58  qwebber: bob2, ok see this: http://d.pr/39Cl
20:58  bob2: that is not very enlightening
20:59  mrkuchbhi: hi...i have a basic question..if i dump say, a dictionary to a pickle and if i dump the dictionary to a text file such that each line in the file is in the form key:value..which one will take more time to read?..the text i hope
21:00  qwebber: bob2, when i hit google that image loads. i want to make it, so that when i hit google, that image is requested from localhost instead.
21:00  bob2: who cares?  is your file many megabytes in size?
21:00  mrkuchbhi: yes
21:00  bob2: qwebber: too vague still
21:00  qwebber: bob2, the point of this, is that localhost will return a 200 to the browser. and that specific connection to google wont be made for that asset.
21:00  mrkuchbhi: bob2: possibly gigabytes
21:00  bob2: do you mean "I would like urllib.urlopen to hit localhost for www.google.com requests"?
21:01  bob2: mrkuchbhi: doesn't sound like either of them would be a great solution then
21:01  bob2: mrkuchbhi: maybe you want a database like sqlite?
21:01  _habnabit: mrkuchbhi, yeah, use sqlite.
21:01  bob2: mrkuchbhi: what's in the dict?  how will you access it?
21:01  qwebber: bob2, no - because urllib is not a part of this process. i have to do this at a higher level than that, since the external java app is the only application aware of whats coming in / out
21:01  mrkuchbhi: ok.that is prob the best thing to do
21:02  bob2: qwebber: I don't know what any of that means
21:02  mrkuchbhi: but still among the two which would be better?
21:02  dash: qwebber: why are you doing this?
21:02  bob2: qwebber: maybe you're asking "how do I write a proxy server in python"?
21:02  bob2: or "how do I fake out java's urllib.urlopen equivalent"?
21:02  qwebber: dash, when im running functional tests with selenium, i need a way to stop third party assets from loading on certain pages.
21:02  mrkuchbhi: the dictionary is just key consisting of a tuple and value is a list of strings
21:03  bob2: haha
21:03  dash: qwebber: oh, selenium.
21:03  bob2: success
21:03  qwebber: dash, python sends a command to a java server, which then executes it. so the java server is the only app that knows what network io is happening.
21:06  dash: qwebber: right. so the nice answer is "tell the java server to do something different"
21:06  dash: qwebber: or maybe "replace it with a python server, which is easier to customize" :)
21:06  qwebber: dash, cant. the python bindings just send commands over, like ['clickAt', your_locator]
21:06  qwebber: so i need to intercept the requests on a higher level
21:07  dash: qwebber: sucky
21:07  dash: qwebber: something something LD_PRELOAD
21:07  qwebber: dash, yeah i thought about that but i heard it was quite unstable
21:08  nedrocks: Is there any way to time the calls and count frequency of GC? LIke maybe a callback that gets called whenever gc is invoked?
21:08  _habnabit: nedrocks, yep.
21:08  _habnabit: nedrocks, what are you trying to accomplish, though?
21:09  nedrocks: _habnabit - I found out a huge culprit of my problem I've been tracing (and asking questions about in here from time to time) is caused by the GC running so frequently
21:09  nedrocks: _habnabit - so I'm going to tune the thresholds to be more reasonbale numbers for my execution
21:09  _habnabit: nedrocks, hm, problems like what?
21:09  nedrocks: _habnabit - high 99th %ile of requests going into my server
21:10  nedrocks: _habnabit I had a huge breakthrough last night that GC runs on every thrift deserialization because my thrift objects contain so many objects
21:10  nedrocks: _habnabit and by default gc runs after 700 allocations
21:10  _habnabit: nedrocks, anyway, look at the gc module.
21:10  _habnabit: nedrocks, it has some tuning stuff.
21:10  nedrocks: _habnabit thus, every object was 2 ms slower to deserialize, every 10 objects was 7 ms slower and every 100 objects were 28 ms slower
21:11  nedrocks: _habnabit okay, I didn't see any way to have a callback to track calls to GC.. Were you thinking monkey patch gc.collect?
21:11  _habnabit: nedrocks, uh, no, that wouldn't do anything.
21:11  _habnabit: nedrocks, why do you need a callback?
21:11  nedrocks: so I can track every call - not have it print to stdout
21:12  nedrocks: _habnabit - err stderr
21:12  _habnabit: nedrocks, yes, but why?
21:12  tomlikestorock: in python 2.4 is there a way for the csv.DictWriter to write the header row containing the field names?
21:12  ojacobson: nedrocks: more elaborately: what are you doing with this information once you have it?
21:13  nedrocks: _habnabit - because I'm data driven and like to look at statistics around collected data rather than print stuff out and analyze logs.. Makes things more ironclad when I come to a conclusion
21:13  nedrocks: _habnabit in this case I want to tweak gc threshold params and see how many gcs/second and how long they take
21:13  nedrocks: _habnabit it will be a much faster iteration time
21:14  dash: nedrocks: python gc hardly ever gets called.
21:14  dash: oh, but you noticed.
21:14  tomlikestorock: is that just not a feature implemented in python 2.4, and if not - is there a way to write the header row for a csv file using csv.DictWriter?
21:14  nedrocks: dash - read my above message
21:14  _habnabit: nedrocks, no, there's no interface like you want.
21:14  dash: nedrocks: yea i'm slow
21:15  dash: nedrocks: there's debug junk you can turn on for the gc
21:15  nedrocks: _habnabit okay, thank you.. monkey patching it is :)
21:15  _habnabit: nedrocks, as I already said, that won't do anything.
21:15  _habnabit: nedrocks, the gc module is just a thin wrapper over some core parts of the interpreter.
21:15  _habnabit: nedrocks, it isn't itself the cyclical GC.
21:16  abiko: Hello everybody.
21:16  nedrocks: _habnabit oic. Okay then.. that sucks. Guess I need to think about this a bit longer then
21:16  nedrocks: _habnabit thanks for chatting about it with me though
21:17  dash: nedrocks: gc.set_debug may help
21:17  nedrocks: dash - Yeah, that may be the only solution, but it's a pain in the ass because I'd rather collect the data internally where all of my statistics modules are written
21:17  dash: nedrocks: life is hard
21:18  nedrocks: dash and python only makes it harder
21:18  dash: nedrocks: harder than what, though! that's the main question.
21:18  abiko: Can anybody help me with this - http://paste.pound-python.org/show/346/
21:18  abiko: Is there a way to make automatic keys in dictionaries ?
21:18  dash: abiko: no.
21:18  nedrocks: dash heh too many good answers to that question
21:19  dash: abiko: also, 'dict' isn't a dict.
21:19  dash: nedrocks: well, go use something better than python then. ;)
21:19  papna_: abiko: You're doing dict[count] when you want to make some dict and use that.
21:19  dash: nedrocks: (i've been trying to for a lot of years)
21:19  nedrocks: dash - I actually had a conversation in #python-dev last night trying to figure out why the threshold limits are A) super low, and B) not dynamic
21:20  nedrocks: that smiley face shoulda been B )
21:20  papna_: abiko: http://codepad.org/1SZmKrLe
21:20  dash: nedrocks: it is, in reasonable irc clients :)
21:20  papna_: abiko: docs.python.org/tut
21:20  soidexe: hello. I'm trying to get cpu usage of my prog using cProfile. it's an twisted app and I run it: python -m cProfile -o cpu.txt app.py. For reading cpu.txt I'm trying to use Gprof2Dot but it fails with the message "error: unexpected end of file". What do I do wrong?
21:21  sickn3ss: a little help how can I make a UDP connection in python ?
21:21  dash: soidexe: use runsnakerun or pyprof2calltree with kcachegrind
21:21  sickn3ss: socket.IPPROT_UDP does not sork
21:21  dash: sickn3ss: twisted is the handy library for that
21:21  dash: sickn3ss: what are you writing?
21:21  sickn3ss: dash, I'm actually playing with tcp/udp connections not writing anything in particular
21:21  dash: sickn3ss: ok cool
21:21  _habnabit: sickn3ss, there are no UDP connections.
21:21  _habnabit: sickn3ss, UDP is connectionless.
21:22  sickn3ss: _habnabit, well yea I mean how do you send some data through udp
21:22  sickn3ss: and not tcp
21:22  _habnabit: sickn3ss, twisted.
21:22  lazydancer: is there an escape key to make an enter key press? is \n the exact same char code as the enter key?
21:22  sickn3ss: _habnabit, thanks for the tip
21:22  abiko: papna_ is there a way to do this simmilar with any other data type or am I just dancing in the wrong place
21:24  papna_: abiko: I'm afraid I don't know what you're actually trying to do?
21:25  papna_: abiko: You want x[y] to evaluate to something for any y, even if you havne't defined x[y]?
21:25  fruitwerks: hey all.. error: Couldn't find a setup script in /tmp/easy_install-... any package
21:26  dash: fruitwerks: don't use easy_install
21:26  fruitwerks: ok.. what do I use then?
21:26  dash: fruitwerks: to do what?
21:26  soidexe: dash: runshake looks fine thanks
21:27  abiko: I want to do this  dict[0]['ipAddress'] - returnes 127.0.0.1  dict[1]['ipAddress] - returnes 192.168.1.230.. dict[0]['DocumentRoot'] returnes /home/user1/  dict[1]['DocumentRoot'] returnes /home/user2
21:27  fruitwerks: to install packages into a virtual environment?
21:27  abiko: home you catch the drift
21:27  lvh: fruitwerks: pip
21:27  dash: abiko: sounds like you want to make a list of dicts
21:27  jtbandes: Hi, I'm trying to run a program (on Mac OS X 10.6.5) which uses a separate thread to run the main loop of Tkinter, but it crashes with "Tk_MacOSXSetupTkNotifier: first [load] of TkAqua has to occur in the main thread!". Anyone know how to fix this?
21:28  dash: jtbandes: rewrite the program to not do that
21:28  papna_: abiko: It looks like a collections.defaultdict(dict) may suit you.
21:28  soidexe: dash: don't you know what <select.select> meants in that?
21:28  dash: soidexe: Hmm?
21:28  dash: soidexe: i know what select.select is
21:28  jtbandes: dash: I tried moving the tk() and mainloop() calls out into the top level of the main thread, but it doesn't work. I'm not sure how to restructure it.
21:28  abiko: to compare this situation to PHP (don't torch me for this) - but this way of building multi-dimensional arrays would work if assigning the numeric keys that keep growing each time the loop passes one round
21:28  codeslinger: when do we expect 5.6 beta to come out as a product?
21:29  codeslinger: oops sorry wrong channel :)
21:29  soidexe: dash: it spares most of the time in my prog
21:30  soidexe: dash: don't know what it is
21:30  dash: abiko: we won't torch you, just tell you to not expect anything in python to be like PHP :)
21:30  abiko: dash: I know, I was just trying to pass something, and you have helped me realize what is the issue and suggest a working alternative. Thank you! :)
21:31  dash: soidexe: it's the call asking the OS to notify the program when network/fd events occur
21:31  dash: soidexe: it will show up big in the profile because whenever your program is doing nothing, waiting for stuff to happen, it'll be stopped in that function
21:31  dash: abiko: <3
21:31  soidexe: dash: oh, then it's ok
21:36  lazydancer: is there an escape key to make an enter key press? is \n the exact same char code as the enter key?
21:37  KirkMcDonald: lazydancer: In what context?
21:41  kuatto: Hey, I'm looking for a programming pattern. When I subclass an object and override its __init__ adding a new parameter, I end up having to parse the new parameters out of the kwargs. is there a common patter for dealing with this?
21:41  kerio: kwargs? why?
21:41  abiko: dash: thank you,  defaultdict( set ) does exactly what I need. Thank you again
21:41  papna_: kuatto: Not a widely-followed one.
21:41  papna_: kuatto: It's sort of a mess.
21:41  kuatto: kerio, I'm added new parameters to the __init__ function..
21:42  kuatto: papna, ok so that makes me feel slightly better ;)
21:42  papna_: kuatto: The best advice is probably "don't subclass and override a method" and the second best advice may be "use only keyword arguments for __init__ always", but neither of these are followed much.
21:43  soidexe: so I use "python -m cProfile -o cpu.txt app.py" to run a twisted app. but cpu.txt only updates once and never again. why?
21:43  KirkMcDonald: soidexe: I'm not sure what you mean.
21:44  lazydancer: kirk like exactly the same, like would be read the same going into a pype
21:44  kuatto: papna_, these are all key word args, problem is that the parent class has about 10 different kwargs..I'd prefer not to copy them into the sublcass
21:44  kuatto: also this kind of thing is terrible: """if kwargs.has_key('height'):"""
21:45  kuatto: del kwargs['height'] ,,,  etc
21:45  KirkMcDonald: lazydancer: So far as the receiving end is concerned, a '\n' will be the same as the user pressing enter at stdin.
21:45  papna_: kuatto: Right. Further, you don't know what parent class you'll be calling in the case of multiple inheridance.
21:45  KirkMcDonald: lazydancer: ... maybe.
21:45  papna_: kuatto: has_key has been deprecated in favour of "key in d" for many many years.
21:45  KirkMcDonald: lazydancer: In the normal case.
21:46  soidexe: KirkMcDonald: cpu.txt writes on start but app is going run and new function calls isn't goint to cpu.txt
21:46  papna_: kuatto: The most usable design would be for all __init__s to take only keyword arguments and to passthrough **kwargs to all the other __init__s.
21:46  evt: Hey guys, quick question. Is there a product function that finds the product of all the elements of a list? Like sum, but with multiplication instead of addition.
21:46  papna_: kuatto: Without ever removing anything.
21:46  KirkMcDonald: soidexe: Does it write to the file when the process ends?
21:46  _habnabit: evt, no.
21:47  papna_: kuatto: Ignoring the inapplicable ones.
21:47  soidexe: KirkMcDonald: no
21:47  kuatto: papna, thanks for the tip 'key in d'
21:47  lazydancer: what does this symbol do in python: | i see it in some examples
21:47  soidexe: KirkMcDonald: when I break it with control+c
21:47  KirkMcDonald: lazydancer: Bitwise-OR
21:47  papna_: lazydancer: bitwise or. It's used to union sets and for a union-ish operation on bitflags.
21:47  papna_: kuatto: I don't do this and I don't know anyone who does, but it's the conclusion a lot of people have come to on the issue.
21:48  lazydancer: all way over my head
21:48  lazydancer: any suggested reading on that one?
21:48  superdmp: when I run subprocess.Popen(command) what is the easiest way to know when the command has completed?
21:48  KirkMcDonald: superdmp: Typically you block on it at some point.
21:49  papna_: lazydancer:Usually "a | b" means "all the stuff in a and all the stuff in b smooshed together"
21:49  KirkMcDonald: superdmp: Or you use some sort of event-driven mechanism.
21:49  superdmp: KirkMcDonald:  like Celery?
21:49  kuatto: papna_, you don't do that kwarg manipulation?
21:49  papna_: lazydancer: Look at the documentation for ints and sets and the wikipedia page on bitwise operations, I suppose.
21:49  KirkMcDonald: superdmp: I've never used that.
21:49  superdmp: KirkMcDonald:  what is a 'block'?
21:49  papna_: kuatto: I don't do the **kwargs passthrough with no removal thing, right
21:49  KirkMcDonald: superdmp: A verb.
21:49  superdmp: right
21:49  KirkMcDonald: superdmp: You call p.wait() and it blocks (waits) until the process finishes.
21:50  _habnabit: TWISTED OR ELSE. D:<
21:50  papna_: (Or, often, p.communicate())
21:50  _habnabit: Why can't you see that!
21:50  superdmp: OK, so I should look at the built in methods on Popen then
21:50  KirkMcDonald: superdmp: Yes.
21:50  GothAlice: _habnabit: Let me guess, you have a trigger set up to mention twisted every time I join the channel?
21:50  _habnabit: GothAlice, a what
21:50  superdmp: Thanks!
21:50  KirkMcDonald: superdmp: Note, too, subprocess.call().
21:50  kuatto: papna, too bad the library's class I am using does not take in kwargs :/
21:51  dash: GothAlice: he doesn't
21:51  GothAlice: dash: So he's literally raging about twisted every time I get in here?  Wow.
21:51  dash: GothAlice: well it comes up a lot.
21:51  papna_: kuatto: What library are you working with?
21:51  qwebber: is this the best way to make a dict in to a usable connection string in oursql.connect()?
21:51  qwebber: is this = what is
21:51  KirkMcDonald: GothAlice: Astonishingly, I had just said something about something being event-driven.
21:51  _habnabit: qwebber, oursql.connect doesn't take connection strings.
21:52  KirkMcDonald: GothAlice: Admittedly I was trolling the twisted folks a little when I said that.
21:52  davidlt: Question, how to unpack map retuned list (writing one-liner)
21:52  superdmp: so subprocess.call just stops dead until the command finishes?
21:52  _habnabit: davidlt, same as anything else?
21:52  papna_: superdmp: Correct.
21:52  _habnabit: superdmp, yes.
21:52  kuatto: papna_, geodjango. .. django.contrib.gis.maps.google.GoogleMap
21:52  KirkMcDonald: superdmp: Yes. It is basically equivalent to p = subprocess.Popen(...); p.wait()
21:52  qwebber: _habnabit, sorry im not sure of the technical term, but i need to make my dict usable in .connect(). my k,v's are like; passwd:'foo', 'host':'somehost', etc
21:52 * GothAlice thoroughly enjoys her async reactor.  >:P
21:52  davidlt: _habnabit: I can't write *map(...)
21:53  _habnabit: davidlt, you can't?
21:53  _habnabit: qwebber, oursql.connect(**D)
21:53  davidlt: _habnabit: You gonna get syntax error
21:53  _habnabit: davidlt, I don't understand what you're trying to do
21:53  davidlt: I have list and I have '.....'.format()
21:54  davidlt: I want pass that list as arguments to format()
21:54  _habnabit: davidlt, 'foo'.format(*L)
21:54  qwebber: _habnabit, youre a superstar
21:54  davidlt: _habnabit: I am writing one-liner, so I have '...'.format(map(...))
21:55  _habnabit: davidlt, why are you using map?
21:55  davidlt: Now I need to unpack that map, but I can't do that directly
21:55  superdmp: OK - I think it sounds like I need Popen.poll, to keep an eye on the process
21:55  _habnabit: davidlt, '...'.format(*map(...)) isn't a syntax error.
21:55  _habnabit: davidlt, but use a list comprehension anyway.
21:55  davidlt: it is
21:55  _habnabit: davidlt, nope, it's not.
21:55  davidlt: SyntaxError: invalid syntax
21:55  superdmp: what I can't work out is how I can start the process, then go back to what I was doing, and then in a bit come back to check on it
21:56  _habnabit: infobob, codepad davidlt '...'.format(*map(None, []))
21:56  infobob: davidlt, http://codepad.org/RCCZLFg7
21:56  _habnabit: davidlt, not a syntax error.
21:56  lazydancer: so:
21:56  lazydancer: file = os.popen('cat makefile | grep pyuic')
21:57  _habnabit: davidlt, anyway, use a list comprehension.
21:57  _habnabit: lazydancer, no. Don't use os.popen.
21:57  lazydancer: would do both of those commands and then save the output to file?
21:57  dash: or cat or grep, really
21:57  _habnabit: lazydancer, also, you can implement that in pure python easily.
21:57  davidlt: Hmm..
21:57  lazydancer: that's just an example im running off
21:57  _habnabit: lazydancer, lines = (line for line in open('makefile') if 'pyuic' in line)
21:57  GothAlice: fh = open("makefile") ; for line in fh: if "pyuic" in line: ...
21:58 --- TC01 is now known as TC01_
21:58  GothAlice: _habnabit: Don't those need to be square brackets for a list comprehention?
21:58  papna_: GothAlice: That's a generator expression.
21:58  _habnabit: That's not a list comprehension.
21:58 --- TC01_ is now known as TC01
21:58  davidlt: _habnabit: fixed, messy one-liner
21:58  superdmp: Actually - is there an equivalent to subprocess.popen that will spawn not some shell command, but another python function?
21:58  _habnabit: davidlt, sounds like it's aching to be refactored into something more sensible.
21:58  papna_: superdmp: Not really.
21:58  _habnabit: superdmp, what does that mean?
21:59  davidlt: _habnabit: try: '{:d}{:02d}{:02d}{:02d}'.format(*map(lambda x, y: y if x is None else int(x), '3.7.4'.split('.'), [0] * 4))
21:59  papna_: superdmp: Can you describe your use case?
21:59  GothAlice: superdmp: Check out the multiprocess module; it lets you run functions, etc. in separate processes.
21:59  _habnabit: davidlt, ew. Don't use map+lambda.
21:59  papna_: superdmp: Things you might want include Twisted, subprocess, multiprocess, or MPI.
21:59  KirkMcDonald: (... or fork().)
21:59  superdmp: What I am doing is getting something to re-encode a video
21:59  davidlt: _habnabit: why? That's the only solution I got so far
21:59  superdmp: but I don't want the user to wait
21:59  lazydancer: is there a good guide for the subprocess module?  Can you read output and give input with it?
22:00  dash: lazydancer: sure.
22:00  papna_: lazydancer: The official documentation is what you got.
22:00  papna_: lazydancer: You can.
22:00  KirkMcDonald: lazydancer: Non-interactively.
22:00  superdmp: and yet the system needs to be able to find out how the video re-encoding is getting on
22:00  KirkMcDonald: I suppose you *could* do interactive input, but it would be simpler to use pexpect in that case.
22:00  lazydancer: pexpect?
22:00  KirkMcDonald: pexpect is a third-party module.
22:01  superdmp: does that sound like a good candidate for fork or multiprocess?
22:01  KirkMcDonald: Not for fork().
22:01  papna_: superdmp: What are you using to encode a video?
22:01  papna_: superdmp: Some Python library? Some system command?
22:01  superdmp: Both HandBrakeCLI and ffmpeg2theora
22:02  papna_: superdmp: It sounds like you want the subprocess module or Twisted's subprocess stuff.
22:02  superdmp: but what I could do is spawn a python process that runs the command, then waits, then records in the database what video formats have been created
22:03  papna_: superdmp: Do the database stuff in the same process.
22:03  hydester: can PythonHandler manipulate req.user in mod_python so the location it handles (non-python) will see the new value instead of the one sent via the browser?
22:03  papna_: superdmp: Or make the subprocess you launch the Python program.
22:03  papna_: superdmp: The former sounds a lot better to me
22:03  lazydancer: kirkmcdonald it looks like pexpect is unix only?
22:03  KirkMcDonald: lazydancer: Yes, probably.
22:03  edbian: Where can I get help with gtk on python?
22:04  KirkMcDonald: hydester: Why on earth are you using mod_python?
22:04  hydester: KirkMcDonald: legacy app (trac-based)
22:04  KirkMcDonald: hydester: Oof.
22:04  bob2: trac runs under mod_wsgi
22:04  lazydancer: that's rough, it looks really good too, is theres something similar for windows?
22:05  papna_: edbian: You'd have to ask an actual question. Here or in #pygtk on irc.gnome.org
22:05  superdmp: papna:  I am using subprocess - but at the moment the command is executed, and I don't know when it has finished
22:05  papna_: superdmp: http://twistedmatrix.com/documents/10.1.0/core/howto/process.html
22:05  dash: edbian: here, or #pygtk on irc.gnome.org
22:05  qwebber: is there a sort() or sorted() key for aA-zZ
22:05  hydester: bob2: does mod_wsgi support Python(Access,Authen,Authz)Handler?
22:05  _habnabit: qwebber, operator.methodcaller('lower')
22:05  KirkMcDonald: qwebber: key=str.lower()
22:05  KirkMcDonald: Er.
22:05  natalie: hello how do you make that commmand prompt thing dissappear when running python on windows?
22:05  GothAlice: DON'T USE TWISTED!  D:<
22:05  bob2: almost certainly not
22:05  qwebber: ty
22:05  KirkMcDonald: str.lower (no parentheses)
22:06  bob2: GothAlice: helpful
22:06  KirkMcDonald: But _habnabit's is probably better.
22:06  papna_: qwebber: key=operator.methodcaller('lower')
22:06  _habnabit: natalie, run it with pythonw
22:06  natalie: wats that?
22:06  _habnabit: natalie, python without a console.
22:07  GothAlice: bob2: So that did come through?  Awesome.
22:07  hydester: i have a custom authentication via python module via mod_python.  can i manipulate the user passed in before it hits mod_svn?
22:07  KirkMcDonald: natalie: pythonw.exe, even. Give the script a .pyw extension.
22:07  natalie: thanks!
22:07  bob2: hydester: almost certainly not
22:07  natalie: you guyz are python geniuses, i owe so much
22:07  _habnabit: hydester, pretty sure no. It's just an authz handler.
22:08  edbian: Why does the quit button not work in this script? http://paste.pound-python.org/show/347/
22:08  Eevee: isn't it impossible to have the same binary be both cli and gui on windows?  you have to pick one or the other and compile it that way
22:09  Eevee: or, at least, cli and not-cli depending
22:09  hydester: so if a user can log in via DOMAIN1\joe or just joe, the svn log will have them presented in two different ways.  any way to get around this?  i read about aliases, but i would like something more automatic, like via regex or script
22:09  _habnabit: Eevee, that's why pythonw exists, AFAIK
22:09  Eevee: rgiht
22:09  _habnabit: hydester, it's an apache question.
22:10  ajmilazzo: when should i use 'is' and when should i use '=='
22:10  KirkMcDonald: ajmilazzo: is checks identity.
22:10  bob2: Eevee: well, also, all you can do is associate a file extension with a program
22:10  KirkMcDonald: ajmilazzo: == checks equality.
22:10  qwebber: how do you use sorted() on a tuple? im trying to sort the results from a sql query.
22:10  bob2: Eevee: so you have no chance to pass --no-console or whatever
22:10  KirkMcDonald: qwebber: Just like any other iterable.
22:10 --- MikhX_ is now known as MikhX
22:10  bob2: hydester: guess you're stuck with mod_python
22:10  Eevee: bob2: hrrrgh
22:10  papna_: ajmilazzo: You should use is when you write "is None", and you should use "==" for every equality comparison you do.
22:10  bob2: unless you want to do a lot of work
22:10  ajmilazzo: papna_: ok
22:11  hydester: bob2: why doesn't mod_wsgi support Python Handlers?
22:11  lazydancer: is thre an alternative to pexpect for windows?
22:12  shylent: I think there is a 'pexpect for windows'
22:12  papna_: You can use cygwin.
22:12  _habnabit: hydester, what's a ''python handler' ?
22:12  bob2: hydester: because it is for serving web apps, not all the other insane stuff people did with mod_python
22:12  qwebber: KirkMcDonald, really? i cant get it to work. i get no lower method on tuples, then when i got it to give me something, it was a list of each character in the whole set
22:12  KirkMcDonald: hydester: mod_wsgi, oddly enough, serves WSGI applications.
22:13  KirkMcDonald: qwebber: Show us.
22:13  _habnabit: bob2, to be fair, writing authentication handlers in python is pretty useful.
22:13  _habnabit: bob2, basically the only legitimate usage of mod_python.
22:13  bob2: qwebber: because you did sorted(whatever, key=str.lower) and whatever isn't an iterable of strings
22:13  lazydancer: what is cygwin?
22:13  KirkMcDonald: lazydancer: A Unix environment for Windows.
22:14  hydester: would there be an advantage to run mod_wsgi and mod_python, if that is possible?
22:14  qwebber: bob2, right its a tuple. when i did sorted(str(item), key=str.lower) i got this: http://d.pr/7mVf
22:14  papna_: hydester: The former is the thing you write web apps with.
22:14  bob2: qwebber: which is also wrong
22:14  _habnabit: hydester, it's possible, but a terrible idea.
22:14  qwebber: bob2, indeed
22:14  bob2: qwebber: what is the thing you are trying to sort
22:14  _habnabit: hydester, what are you trying to accomplish here?
22:14  papna_: hydester: The latter is only useful for running legacy applications, and probably not even that.
22:14  bob2: a list of tuples of strings?
22:14  qwebber: bob2, the response of a mysql query. its a tuple of strings, yes
22:14  _habnabit: qwebber, trying random things isn't an effective strategy for programming.
22:14  natalie: how do i restart explorer.exe in python?
22:15  ezzieyguywuf: so I'm using argparse, and I'm doing add_arguement with type = dict. This poses no problems if I let argparse use the default value, but anytime I pass anything at the command line to this arguement, it crashes and says 'invalid dict value'
22:15  _habnabit: qwebber, ... why don't you have an ORDER BY in your SQL?
22:15  bob2: qwebber: unclear
22:15  ezzieyguywuf: any idea why this is? is there a certain format for passing a dict at the commmand line?
22:15  bob2: qwebber: don't you want to iterate over the cursor?
22:15  qwebber: _habnabit, wasnt sure if it was better to do it in the query or after the fact, so i went with the latter
22:15  hydester: _habnabit: running trac, but using svn authentication handler.  didn't know if trac would benefit from mod_wsgi enough to try to run both, somehow.  even if it is with multiple apache instances
22:15  natalie: how do i restart explorer.exe in python?
22:15  _habnabit: qwebber, always, always, always do as much as you can in the query.
22:16  qwebber: bob2, i plan to iterate over the results, but i want them in aA-zZ order first
22:16  bob2: natalie: ##windows or something I guess
22:16  qwebber: _habnabit, ok this problem is probably solved for now. thank you
22:16  bob2: qwebber: order by in the query
22:16  natalie: ok
22:16  KirkMcDonald: ezzieyguywuf: "type= can take any callable that takes a single string argument and returns the type-converted value:"
22:16  KirkMcDonald: ezzieyguywuf: And what is a single string which may be passed to dict()?
22:16  ezzieyguywuf: KirkMcDonald: tha, good sir, is my question to you.
22:16  verte: converte'd
22:16  ezzieyguywuf: s/tha/that/
22:16  KirkMcDonald: ezzieyguywuf: It is a trick question.
22:16  KirkMcDonald: ezzieyguywuf: There is no such string.
22:16  ezzieyguywuf: ah: there is none.
22:17  ezzieyguywuf: so I'd have do define a custom func that took, say, "key:value" and returned the appropriate dictionary.
22:17  papna_: ezzieyguywuf: You probably don't want to take a dict directly at the command line; you probably want to define some higher-order representation.
22:17  KirkMcDonald: ezzieyguywuf: You could use json.loads, heh heh.
22:17  papna_: ezzieyguywuf: A simple, bad solution is to use type=ast.literal_eval or type=json.laods
22:18  papna_: KirkMcDonald: I was getting ready for my big reveal and you ruined it!!!!!
22:18  KirkMcDonald: ast.literal_eval is a pretty bad idea, worse than json.loads.
22:18  ezzieyguywuf: I'm unfamiliar with json....
22:18  papna_: I HATE YOU!
22:18  papna_: I DIDN'T ASK TO BE BORN.
22:18  natalie: how do i kill a process in memory using python?
22:18  natalie: i could never figure it out
22:18  papna_: KirkMcDonald: Not really.
22:18  papna_: natalie: What process?
22:18  dash: natalie: os.kill may help.
22:18  KirkMcDonald: natalie: Do you have a pid?
22:18  natalie: i want to make a program like rkill papna
22:19  lazydancer: i downloaded cygwin but I have no clue how to use it, there are some files like "cygwincompiler" do i need t ocompile code with it?
22:19  natalie: can i kill a process by name?
22:19  papna_: natalie: What process?
22:19  natalie: papna, example.exe
22:19  papna_: natalie: What platform?
22:20  natalie: windows 7
22:20  papna_: natalie: Use win32api
22:20  papna_: natalie: You didn't start example.exe?
22:22  KirkMcDonald: natalie: What if there is more than one example.exe process?
22:22  mnemonic: hi *
22:22  natalie: idk KirkMcDonald
22:22  natalie: how would i kill example.exe using win32api?
22:22  natalie: last question
22:22  natalie: i promise
22:23  KirkMcDonald: natalie: That seems like a rather important detail that you would have to decide on an answer to.
22:23  papna_: natalie: Can you revise this into your actual, meaningful, unobfuscated question?
22:23  mnemonic: anyone already used Google App Engine ?
22:24  gorakhargosh: i have a module `foobar.collections` that itself imports the `collections` module from python. will python properly import the built-in `collections` within `foobar.collections`?
22:24  papna_: natalie: Explain your ACTUAL problem.
22:24  bob2: mnemonic: lotsopeople
22:24  bob2: mnemonic: also there's #appengine
22:24  natalie: papna_ i don't have one
22:24  bob2: gorakhargosh: depends!  it'd be best to rename your module, unfortunately
22:24  papna_: natalie: Then you don't need a solution.
22:25  ajmilazzo: im making a command system for a game and i was wondering if it was safe to do exec('cmd_%s()' % command)
22:25  mnemonic: thx for that info bob2
22:25  bob2: ajmilazzo: no
22:25  bob2: ajmilazzo: and it is silly!
22:25  papna_: ajmilazzo: Not at all.
22:25  natalie: oh my problem, well it's that i don't know how to delete a process by name using pythong
22:25  KirkMcDonald: gorakhargosh: Which version of Python?
22:25  natalie: on windows 7
22:25  bob2: ajmilazzo: put your commands in a dict, then do yourcommanddict[command]()
22:25  gorakhargosh: python 2.5 or later, @ KirkMcDonald
22:25  bob2: gorakhargosh: (if you can insist on 2.5+ you can use a futre import to make that always work)
22:26  gorakhargosh: does python 2.5 come with the collections module?
22:26  KirkMcDonald: Yes.
22:26  ajmilazzo: papna_: what if i did commands = ['help', 'say']; if command in commands: exec(args_here)
22:26  natalie: oh gosh can someone please help? :s help me to explain better to so i can figure this out please
22:27  papna_: ajmilazzo: That would be safer but still messy and silly.
22:27  papna_: ajmilazzo: Keep a dict or use getattr; probably the former.
22:27  papna_: natalie: That question is underdefined, for one. The details of what you want to do depend on your actual problem. If you don't have one--if you don't ACTUALLY want to kill a process--then there isn't a real answer to give.
22:28  natalie: say i have a process running in my task manager(example.exe) and it's "image name" is also example.exe, how would i kill this process using python
22:28  papna_: natalie: I'm not a heavy windows developer, so I don't remember the right API calls off the top of my head, even if the problem was specified.
22:28  papna_: natalie: You keep repeating yourself. I will stop repeating myself now.
22:28  dukebody: Does anybody know how to get the python-profiler working with Python 2.4 on Debian Squeeze?
22:28  natalie: darn
22:28  natalie: i just can't figure this out :(
22:28  ajmilazzo: papna_: i dont understand, arent dicts for strings? dict{'command': def command(): print 'hi'} like that?
22:29  bob2: ajmilazzo: no, def doesn't return anything
22:29  papna_: ajmilazzo: You can store any object in a dict.  def command(): print "hi";  d = {'command': command}
22:29  papna_: ajmilazzo: docs.python.org/tut
22:29  gorakhargosh: natalie: you would look up the windows api documentation for examples (say, MSDN) or this result from google: http://www.physiology.wisc.edu/ravi/software/killproc/ and then translate the calls from C code to Python code that uses pywin32.
22:30  bob2: dukebody: with difficulty, probably
22:30  ajmilazzo: bob2: oh i didnt mean to put that def there... i see how this works now thnx
22:30  dukebody: bob2: :(
22:30  dukebody: I'm trying to symlink the 2.5 version...
22:32  lazydancer: how do I import a module that I downloaded?
22:32  KirkMcDonald: lazydancer: Install it.
22:32  natalie: papna_ for future reference i was looking for os.system("taskkill /im example.exe /f")
22:32  KirkMcDonald: lazydancer: Did you download it as a self-installer (a .exe or a .msi)?
22:33  papna_: natalie: Not based on your description.
22:33  natalie: well, it's wat i wanted
22:33  bob2: dukebody: well that won't work
22:33  bob2: dukebody: why do you need 2.4?
22:33  ajmilazzo: dict = {'cmd': print 'hi'} invalid syntax
22:33  bob2: again
22:33  bob2: define a function
22:33  dukebody: bob2: yes. Ok, it didn't work, but I got the pstats.py and profile.py files from the squeeze distro.
22:33  bob2: put it in the dict
22:33  lazydancer: http://sage.math.washington.edu/home/goreckc/sage/wexpect/
22:34  dukebody: It works now. :)
22:34  lazydancer: it's there :/
22:34 * dukebody wonders why isn't there any python2.4-profiler in Debian
22:35  bob2: ajmilazzo: http://paste.pocoo.org/show/302462/
22:35  bob2: dukebody: ???
22:35  bob2: dukebody: because python2.4 isn't in squeeze
22:35  bob2: so it's not surprising python2.4-profiler isn't either
22:35 --- SpitfireWP_ is now known as SpitfireWP
22:35  dukebody: bob2: yes it is, try aptitude search python2.4
22:36  bob2: dukebody: http://packages.debian.org/search?keywords=python2.4
22:36  bob2: dukebody: if you upgraded from lenny, you would still have python2.4 installed
22:36  KirkMcDonald: lazydancer: Oh, it's just a single .py file.
22:36  KirkMcDonald: lazydancer: Cram that in site-packages.
22:36  lazydancer: site-packages?
22:36  KirkMcDonald: lazydancer: e.g. C:\Python27\Lib\site-packages
22:36  dukebody: bob2: no, I installed squeeze directly
22:37  bob2: dukebody: or even have been tracking squeeze since before it was removed (I bet 'apt-cache policy python2.4' doesn't list it either)
22:37  dukebody: weird
22:37  bob2: if you installed a while ago, that'd be it
22:37  bob2: recently, I don't know
22:37  bob2: but it isn't there now, and the dependencies of modern python will make it hard to do this
22:37  bob2: why do you need 2.4 specifically?
22:38  dukebody: bob2: Plone 3
22:38  bob2: yowch :(
22:38  bob2: maybe just build your own python 2.4 to /opt or something
22:38  dukebody: Older Zopes needed Python 2.4.
22:39  lvh: dash: There is a problem!
22:39  lvh: dash: Apparently WebSockets are fundamentally broken
22:39  dash: lvh: woot
22:39  dukebody: bob2: yes, the Plone installer builds Python2.4 for you automatically if you want, but I preferred to use the system python. Anyway, I solved the issue using the .py files from lenny
22:39  dukebody: thanks for the pointers
22:39  lvh: dash: I'm not sure how good an idea it is to demonstrate fundamentally broken things
22:40  lvh: dash: Perhaps we should preemptively look out for something else?
22:40  dash: lvh: athena, yay
22:40  lvh: dash: http://hacks.mozilla.org/2010/12/websockets-disabled-in-firefox-4/
22:40  dash: lvh: or, you know, nothing
22:40  dash: lvh: i saw that
22:40  lazydancer: nah, wexpect just gives a gigantic error message
22:40  vr6: papna_: oursql IN(?) explained here with code (by _habnabit) http://paste.pound-python.org/show/348/
22:41  dash: lvh: good thing i didn't put in any websocket code.
22:41  edbian: I'm writing a gtk gui.  I can't seem to give relative path names for icons.  Am I missing something?  (e.g. image.set_from_file('./icon.png'))
22:41  bob2: edbian: is it really in ./ ?
22:41  papna_: vr6: Ah, yeah, that's what I meant by "at the application level".
22:41  lvh: dash: Yes
22:42  vr6: papna_: basically you have to interpolate the question marks, but it still remains parameterized!
22:42  lvh: dash: I do apologize for leading you into temptation
22:42  lvh: dash: Please forgive me :-(
22:42  dash: lvh: oh you never have to apologize for that.
22:42  bob2: someone shoulda patented athena
22:42  edbian: bob2, From the code file and the launch (that means the same directory right?)
22:42  lvh: It would've been cool if the web was a less bad thing
22:42  edbian: bob2, I do this with html all the time.  Am I doing something silly?
22:42  bob2: edbian: is it the dir you ran python from
22:43  lvh: dash: That's something node.js does well by the way: socket.io
22:43  lvh: dash: It's basically a more modern athena
22:43  vr6: papna_: now where was I in my code 5 hours ago :/
22:43  dash: lvh: sure
22:43  edbian: bob2, I can run the python terminal from this folder and the actual program.
22:44  edbian: bob2, Everything is in /scratch/IDE/     the icon the code the terminal running the code
22:45  leroybuckingham: hey guys, when compiling to pyc for redistribution is there a way to avoid pulling in debug information such as the fullpath of the filename being compiled?  It makes for a rather confusing traceback.
22:45  dash: leroybuckingham: simple, don't distribute pycs.
22:45  edbian: bob2, The only think I can think of is that when you run a python app the python term is actually somewhere else.  Is that happening perhaps?
22:45  papna_: leroybuckingham: I don't distribute pycs ever.
22:45  _habnabit: leroybuckingham, pyc files are transient caches. Never ever distribute them.
22:48  leroybuckingham: Now I'm curious, what are the risks distributing pyc?  In this particular case I know that they're being run on the exact same platform and environment.  I'm using py_compilefiles to build them.
22:48  papna_: leroybuckingham: It's silly and fragile.
22:48  edbian: bob2, How do I tell python to change to the dir I want it to be in?
22:48  dash: leroybuckingham: risks? well, you have the problem you're experiencing now :)
22:49  edbian: os.chdir?
22:49  ajmilazzo: say i have the module 'mod' in my root python dir. i also have main.py and a folder in root called 'mystuff'. if i want to import mod into somescript.py in mystuff and somescript will be imported into main.py can i just use import mod in somescript.py
22:50  dash: ajmilazzo: probably, but why do you have a module that isn't in a package?
22:50  leroybuckingham: So is there no practical means to distribute the bytecode without the source?
22:50  dash: leroybuckingham: it's possible
22:50  dash: leroybuckingham: but why bother?
22:50  ajmilazzo: dash: package...?
22:50  _habnabit: leroybuckingham, you know that it doesn't 'protect' the source, yes?
22:50  ajmilazzo: dash: there is an init.py in mystuff
22:50  dash: ajmilazzo: how about an __init__.py?
22:51  ajmilazzo: dash: thats what i meant
22:51  dash: ajmilazzo: right. so why do you have modules at the top level, outside of that package?
22:51  leroybuckingham: I was under the impression that it was faster to interpret
22:52  _habnabit: leroybuckingham, no, faster to /import/.
22:52  _habnabit: leroybuckingham, it's exactly the same once they've been imported.
22:52  ajmilazzo: dash: because mystuff is a plug-in folder.all the meat is in root
22:52  leroybuckingham: Is that not fair justification?
22:52  dash: ajmilazzo: so all that should be in a package too
22:52  dash: leroybuckingham: no, because everything gets compiled at install time anyway
22:52  ajmilazzo: dash: *begins re-writing*
22:52  _habnabit: leroybuckingham, .pyc files are also generated at import time if they weren't compiled at install time.
22:52  dash: ajmilazzo: just gotta move some files and change your import statements :)
22:53  edbian: I'm having trouble getting a relative path to an icon to work.  Any help is appreciated.   (e.g. image.set_image_from_file(./icon.png)) does not work
22:53  _habnabit: edbian, well, yeah, that's a syntax error.
22:54  edbian: _habnabit, What is the correct syntax?  Do you mean it's missing quotes?
22:54  KirkMcDonald: edbian: Yes, it is missing quotes.
22:55  edbian: I'm having trouble getting a relative path to an icon to work.  Any help is appreciated.   (e.g. image.set_image_from_file('./icon.png') does not work)
22:56  bob2: edbian: print os.getcwd()
22:57  edbian: bob2, This is only a problem if I double click the .py file (or run from a shortcut).  So I don't have a terminal to see print statements (if I run from a terminal it all works fine and the path is /sratch/IDE/   (which is correct)
22:57  edbian: )
22:57  bob2: so there you go
22:57  edbian: bob2, ?  How do I fix this?  Change the path in python?
22:57  bob2: edbian: no
22:58  dash: edbian: not use relative paths, probably
22:58  bob2: edbian: use os.path.join to add the filename to this path: os.path.abspath(__file__)
22:58 --- roxfan2 is now known as roxfan
22:58  edbian: bob2, gotcha
22:58  edbian: bob2, Thanks
22:59  ezzieyguywuf: how can I have a subclass overwrite a superclasses method?
22:59  papna_: ezzieyguywuf: What?
22:59  dash: ezzieyguywuf: that's how subclassing works.
23:00  ezzieyguywuf: ah, s/overwrite/extend/
23:00  edbian: bob2, This doesn't help.  I don't know the absolute path.  That's the problem.  I want to be able to give someone a folder and they can just execute my program (by double clicking it or whatever).
23:00  ezzieyguywuf: so classA has methodA which I want to extend in classB with extends classA
23:00  lazydancer: ok
23:00  lazydancer: can I in windows list the contents of a folder and have each individual file in the folder logged into a list?
23:01  papna_: ezzieyguywuf: def methodA(self....
23:01  ezzieyguywuf: lazydancer: see os.path
23:01  papna_: ezzieyguywuf: Probably at some poiny super(ClassB, self).methodA(...)
23:02  ezzieyguywuf: papna_: I lost you. so redefine the method in classB, and then call super?
23:02  bob2: edbian: yes, duh, that's the point
23:02  bob2: edbian: __file__ is a magic thing python has to tell you where a file is
23:02  bob2: edbian: a /python/ file, so you can use that to find the source tree and thus the icon
23:03  bob2: edbian: though I got it wrong, you want: def whatever(filename): return os.path.join(os.path.abspath(os.path.dirname(__file__)), filename)
23:03  edbian: I see
23:03  edbian: bob2, Thank you for your patience
23:03  bob2: sorry for being rude
23:03  lazydancer: i can't seem to find an os.path.* command that lists the contents of a dir?
23:03  bob2: lazydancer: os.listdir
23:03  papna_: ezzieyguywuf: Probably.
23:03  bob2: lazydancer: os.path.* is for fiddling paths
23:04  papna_: ezzieyguywuf: You'd have to explain your actual use case to get confident help.
23:04  papna_: ezzieyguywuf: What are you subclassing?
23:06  kamsky: hi, im having problems with qt4 + twisted, i have done the backend of my app, and now i wanna do the GUI, i have downloaded qt4reactor, and tried it with this test app: http://paste.pound-python.org/show/2b6dYYInNk45dqkjb5Ez/ , it works!, but when i follow the same logic in my app: http://paste.pound-python.org/show/REMTlsPdab3sWGBnybPX/ it fails! the error is this: http://paste.pound-python.org/show/yIK0Qq21bbmPTFk68hC5/ , if i comment the reactor.i
23:06  kamsky: nstall line it executes, but dont load the GUI correctly... some idea??? thanks
23:06  qwebber: is this terrible to do? http://d.pr/njzH
23:06  dash: qwebber: take screenshots of code when you can paste it? yes ;)
23:07  bob2: nested classes for tests are mostly pointless
23:07  bob2: I'm not even sure your test runner would find them
23:07  dash: also, yeah, there's no benefit to nesting classes.
23:07  qwebber: dash, haha - i meant to do that. im worried that nesting the test classes is stupid.
23:07  qwebber: bob2, it does but they all have to have the Test prefix
23:07  _julian: hi
23:07  qwebber: bob2, so its kind of stupid, but it does make it more organized
23:07  bob2: qwebber: you can use modules
23:07  _julian: how can a list be inserted into another list at position x? something like: list1.insert(-1, list2)
23:07  bob2: foo/tests/test_database.py
23:08  dash: kamsky: trickiness is necessary
23:08  dash: kamsky: the qt4reactor install bits have to be done before the default reactor gets imported by anything
23:08  bob2: _julian: does it need to be in place?
23:08  _julian: but not adding it as a list in the list, but just add the items of list2
23:08  _julian: bob2 not necessarily
23:08  qwebber: bob2, i had been. i condensed the sanity related stuff in to one place, to keep hudson simple for everyone else
23:09  bob2: _julian: http://paste.pocoo.org/show/302493/
23:09  kamsky: dash, i do it in the same order that the example, and the example work and my app doesnt :s
23:09  bob2: qwebber: this sounds like "my test runner sucks"
23:09  bob2: but ok
23:09  _julian: bob2: thanks
23:10  qwebber: bob2, there is much lacking with pytest. this is true.
23:10  kamsky: dash, or at leais i think i do it in the same way.... can you take a look at the code? just the last lines, where i import that things
23:11  dash: kamsky: so move lines 309-310 to the very top of the file
23:12  kamsky: dash, before importing other twisted modules?
23:12  dash: yes.
23:12  kamsky: ok, im gonan try it
23:13  kamsky: dash, no error, but it doesn't load the GUI correctly.. not load buttons, labels...only the screen :S
23:15  lazydancer: which module do i need for listdir?
23:16  kamsky: dash, more info (maybe you need it), GUI is done with Qt Designer, and imported in the App
23:17  KirkMcDonald: lazydancer: It is os.listdir()
23:18  lazydancer: yes, it is
23:18  SegFaultAX: Are there any good libraries for detecting user agents in HTTP requests?
23:22  papna: SegFaultAX: httpagentparser is supposed to be okay.
23:23  kamsky: dash, some suggestion??
23:26  magcius: uh
23:26  magcius: with MI, super *should* call method if they exist, right?
23:27  bob2: yes
23:27  bob2: but the mro may not be what you expect
23:27  bob2: I'm just going to say "Koenig lookup" because it is such an awesome term
23:27  tyebud: Hey python.  Is there a simple way to use range() to make a list of multiples?
23:27  bob2: tyebud: e.g.?
23:28  bob2: kamsky: probably pastebin your current code
23:28  tyebud: bob2: a list of multiples of 2 and 5?
23:28  magcius: bob2, http://bpaste.net/show/12137/
23:28  tyebud: Oh wait
23:28  ozzloy: [x*2 for x in rang(y)]
23:28  ozzloy: range*
23:28  bob2: tyebud: [(x*2, x*5) for x in xrange(whatever)]
23:29  magcius: uh, you're not going to use step?
23:29  Motorin: Or just range(0,100,X) for the multiples of X
23:29  ozzloy: tyebud, list comprehensions
23:29  bob2: 2 and 5 are coprime or whatever
23:29  bob2: so it'd be tedious
23:29  kamsky: bob2, http://paste.pound-python.org/show/m1ktAkFxAzIjOAqcMSv9/
23:29  lazydancer: how would one convert every character in a string to a spot on a list?
23:29  bob2: magcius: that looks right to me
23:30  bob2: magcius: A has a __init__, so no need to check B
23:30  bob2: lazydancer: what do you mean?
23:30  magcius: bob2, any way to make it call both A and B's __init__?
23:30  tyebud: Can you combine two lists?  What if you did a = range(0, 500, 2)  and b = range (0, 500, 5) and combined the output of those in to one list?
23:30  bob2: magcius: not with super
23:30  bob2: tyebud: +
23:30  tyebud: a + b?
23:30  magcius: bob2, so I don't understand the point of super then
23:30  bob2: yes
23:31  lazydancer: i have one giant string
23:31  tyebud: got it.  thanks bob
23:31  bob2: magcius: the point of super is "please find the next method called $foo in the mro"
23:31  magcius: tyebud, you probably want zip, not concat
23:31  lazydancer: and i want to make it so each value in the string is 1 part of a list
23:31  bob2: lazydancer: maybe explain what you're doing more broadly?  it kinda sounds like you want a list of characters, which is a bit weird in python
23:31  magcius: bob2, so why is everybody in here saying "use super"?
23:32  lazydancer: so i have word = "word" now i want to change that to word = ["w"]["o"]["r"] etc
23:32  Motorin: lazydancer: list("cat") gives ['c','a','t']    does that help?
23:32  bob2: lazydancer: that's pointless, strings are already iterable
23:32  lazydancer: oh really
23:32  bob2: which is why I wanted to know your broader problem
23:32  Motorin: (though you shouldn't need to do that, since you can blindly treat strings as if they were lists and have it just work)
23:33  bob2: because you've focused on a narrow dead end :)
23:33  lazydancer: so if i have cat = "Cat" then cat[1] = "C" ?
23:33  Motorin: well, zero instead of 1
23:33  lazydancer: right
23:33  lazydancer: thanks
23:33  Motorin: but yes
23:33  kamsky: bob2, have you seen the code? some idea?
23:33  moreati: lazydancer: yes, except in python equality is ==, not =
23:34  lazydancer: yes :) = is assignment
23:34  bob2: kamsky: I don't, sorry - is the only thing you changed the moving of 'install' to the top?
23:35  kamsky: bob2, yes, i move the import and install to the top, and now loads the first Screen of the GUI, but only tbe borders of it, not buttons, not labels... :s
23:36  lazydancer: python does pointers right?
23:36  bob2: no
23:36  lazydancer: actually there may be no need to
23:36  bob2: python has objects
23:36  bob2: names are labels stuck on objects
23:38  lazydancer: how to make a print command not start a new line?
23:38  lazydancer: something to do with a coma?
23:38  bob2: use sys.stdout.write instead
23:38  bob2: 'print foo,' surpresses the newline, too, but it's a fucking stupid syntax
23:39  Motorin: Yeah, it supresses newline, but sticks a space on the end instead
23:40  KirkMcDonald: Also, you may need to flush() the file yourself.
23:42  subsume: is the site packages folder outdated as of 2.6?
23:42  dash: subsume: no
23:42  subsume: what is the proper use of site-packages? what should I put there?
23:42  dash: subsume: ubuntu swozzled some things around, is that what you are thinking of?
23:43  subsume: I'm just wondering the best way to go about managing a fresh system
23:43  subsume: but yeah I happen to be using ubuntu
23:43  bob2: magcius: I can't seem to write a reasonable example of when hardcoding would not work and super() would
23:43  KirkMcDonald: subsume: Debian and Ubuntu call it dist-packages for some godforsaken reason.
23:43  daemonkeeper: What is the best framework for RCP in python, without to much overhead, simple message passing?
23:43  daemonkeeper: *RPC
23:43  subsume: so what should I put there? things I want globally and generally don't write myself?
23:43  bob2: what is 'RCP'
23:43  dash: daemonkeeper: amp!
23:44  dash: amp-protocol.net
23:44  KirkMcDonald: subsume: Personally I use a thing called epkg to install packages that aren't in my distribution's package manager.
23:44  bob2: hm, whadda you know, debian has a site-packages for 2.5 but not 2.6 or .27
23:44  daemonkeeper: It requires twisted around though, right?
23:44  subsume: KirkMcDonald hmm that's interesting. it manages removal and such? what about virtualenvs.... do you use them?
23:46  bob2: daemonkeeper: http://amp-protocol.net/Implementations <- no
23:46  KirkMcDonald: subsume: No, I don't really use virtualenv.
23:46  subichan: after much struggling this came out: http://paste.pound-python.org/show/354/ now I am trying to understand why running it with ./tagger.sh sentence where sentence is a string with unicode characters makes the error UnicodeDecodeError: 'ascii' codec can't decode byte 0xc5 in position 2: ordinal not in range(128) in line 10 where there is raw = u''+argv[1]
23:47  KirkMcDonald: subsume: But yes, epkg's main feature is the ability to remove things.
23:47  daemonkeeper: http://twistedmatrix.com/trac/browser/trunk/doc/core/examples/ampclient.py well, it may have other language bindings. The Python one is built into Twisted. I'll consider it though, thank you.
23:47  KirkMcDonald: subsume: And, by the same token, upgrade things.
23:47  subsume: epkg what unit? eggs?
23:47  KirkMcDonald: subsume: No.
23:47  bob2: daemonkeeper: false
23:47  KirkMcDonald: subsume: It's not a Python-specific thing at all, in fact.
23:47  bob2: daemonkeeper: hence why i gave you that url
23:47  subsume: heh
23:47  subsume: ok.
23:47  KirkMcDonald: subsume: It does trickery with symlinks to cram packages into a prefix.
23:48  subsume: interesting.
23:48  KirkMcDonald: subsume: It is very dumb, which is why I like it.
23:48  daemonkeeper: bob2: I'm a bit confused, look on http://amp-protocol.net/Implementations - clicking on example server/client you end up in Twisted.
23:48  bob2: subichan: argv is a list of strings
23:48  bob2: daemonkeeper: look again
23:48  daemonkeeper: Ah, Ampy you mean
23:48  bob2: yes
23:48  daemonkeeper: Got it
23:49  bob2: subichan: so trying to + it to a unicode string causes a decode exception
23:49  subichan: argv[1] isn't a single string out of the list?
23:50  subsume: KirkMcDonald so where does it put things you write? in site-packageS?
23:50  daemonkeeper: That looks promising, yes. Is there an IDL or some introspection?
23:50  KirkMcDonald: subsume: Generally I just use it for third-party modules that aren't in the package manager.
23:50  Motorin: What is the best way to run a non-distribution-provided Python in Linux (Debian)?  I have it built and installed in opt, but is there a way to get modules without tearing my hair out getting them one tarball at a time?
23:50  dash: daemonkeeper: introspection of what?
23:50  Motorin: (I'm stuck on Python 2.5, I have 2.7 installed in /opt)
23:51  dash: Motorin: why would you tear your hair out
23:51  Motorin: Because I'm spoiled by "apt-get install libnumpy-python"
23:51  subsume: KirkMcDonald my experience with package managed python libs is mostly bad news except the monolithic ones...
23:51  Motorin: I don't want to get tarballs and read guides and do steps. (I am lazy)
23:51  dash: Motorin: get a newer debian i guess :) or ubuntu
23:51  daemonkeeper: Well, do I really have to specify for each peer (client/server) the interface bindings, or is there the possibility to use an IDL/introspection interface, that builds automatically wrapper classes, e.g. similar to middleware like CORBA/ICE.
23:51  dash: Motorin: 'python setup.py install'
23:51  dash: Motorin: not much you need to know
23:52  subichan: bob2: besides, when the first argument is within the ascii charset i don't get any error
23:52  dash: daemonkeeper: why would you need to wrap anything? just write command classes
23:52  bob2: subichan: yes, of course, that's the exact problem
23:52  subsume: My site-packages quickly becomes a huge mess
23:52  bob2: subichan: argv[1] is a bytestring
23:52  Motorin: If I use my custom python 2.7 with that ("python2.7 setup.py install"), will it go correctly into my /opt tree?
23:52  KirkMcDonald: subsume: I use Gentoo. As long as you don't try to use a different version of Python than the normal system Python, Portage works brilliantly for Python packages.
23:52  dash: subsume: why even look at it?
23:52  dash: Motorin: yes.
23:52  subichan: bob2: is there anyway to convert it?
23:53  Motorin: I was getting frustrated at numpy specifically, because of its build dependencies.
23:53  bob2: subichan: sure, .decode (if you know the encoding)
23:53  Motorin: (a goddamn fortran compiler)
23:53  subsume: portage. ok.
23:53  dash: Motorin: 'apt-get build-dep python-numpy'
23:53  KirkMcDonald: subsume: Portage is Gentoo's package manager.
23:53  subsume: i see
23:54  subsume: but isn't it only as good as the maintainer of the package?
23:54  Motorin: oh, thats a good idea...i didnt think of using the package manager to help build something bypassing the package manager.
23:54  subsume: for PIL that's nice i guess
23:54  dash: Motorin: well you don't want to build _everything_
23:54  KirkMcDonald: subsume: Yes. But Portage is, itself, written in Python, so its Python support tends to be high.
23:54  dash: Motorin: just the python module parts
23:54  Motorin: right
23:55  KirkMcDonald: subsume: (Portage being written in Python is also the reason why upgrading the system Python can be something of an adventure.)
23:55  disappearedng_: hey which channel can I go to ask interview algorithm questions?
23:55  subsume: cool
23:55  bob2: what is an interview algorithm?
23:55  KirkMcDonald: 10 ASK QUESTION 20 GOTO 10
23:56  subichan: bob2: it should be utf-8, string.decode('utf-8') should work?
23:56  disappearedng_: Given a list of integers, return the maximum subset sum, subject to the constraint that the subset does not include any two adjacent elements. O(N)
23:56  bob2: subichan: argv[1].decode, yes
23:56  bob2: isn't that knapsack
23:56  bob2: with an extra constraint
23:56  disappearedng_: yeah
23:56  subichan: bob2, without the argument ?
23:56  bob2: wait, no
23:56  bob2: subichan: no
23:56  dash: disappearedng_: yeah i tend to answer those questions with "no, you"
23:57  bob2: I was just  making it clear that you don't use the string module
23:57  subichan: for string i meant the variable in which it is contained, sorry, i'm very new
23:57  disappearedng_: actually bob2: that would be more of a "subset sum problem with a constraint"
23:57  bob2: ok
23:57  bob2: i just work here man
23:58  tyebud: ello again.  So I've got my multiples.  How do I get rid of the duplicates?
23:58  bob2: subichan: sure, just didn't want to inadvertendly confuse you :)
23:58  subichan: stringvar.decode('UTF-8') is actually working. should I be done? :)
23:58  bob2: tyebud: simplest way is to make a set instead of a list
23:59  bob2: tyebud: set(itertools.chain(xrange(0, 100, 2), range(0, 100, 5)))
--- Log closed Thu Dec 09 00:00:18 2010
