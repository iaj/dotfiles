--- Log opened Sun Jan 16 00:00:12 2011
--- Day changed Sun Jan 16 2011
00:00  dullboy: figure002: what do you mean it doesn't work? if you print the path of a zip file, does it match the real one?
00:02  figure002: dullboy: when i run the .exe (created with py2exe), it returns the path "library.zip\setlyze\images/setl-logo.png", which of course doesn't work.
00:05  dullboy: figure002: yep... stupid me, I didn't think of that. well, maybe your images should be on the same level of library.zip
00:05  dullboy: and that why you usually install software before use
--- Log closed Sun Jan 16 00:10:19 2011
--- Log opened Sun Jan 16 00:10:40 2011
00:10 --- Users 743 nicks [0 ops, 0 halfops, 0 voices, 743 normal]
00:11  dullboy: figure002: I didn't make myself clear: my_program.zip { images, library.zip, program.exe }
00:11  dullboy: svip: maybe you should open a pipe to screen then?
00:12  svip: dullboy: I am trying to do.
00:12  svip: Via the stuff command.
00:12 --- Channel #python was synced in 103 seconds
00:12  dullboy: no, I mean a python pipe
00:12  dullboy: os.popen
00:12  gjvc: dullboy, if you need to open a pipe use subprocess
00:13  svip: Weird...
00:13  PsychoMario: why are there so many different projects for python clustering when you can use multiprocessing with multiple nodes?
00:13  svip: According to os.environ, I am using bash.
00:13  dullboy: gjvc: yes, I suggest svip reimplements that bash snippet in python
00:14  dullboy: svip: readlink /bin/sh ?
00:14  bobng: PsychoMario: You can use multiprocessing with multiple nodes?
00:14  bobng: really?
00:14  PsychoMario: bobng, yeah, i read it at the bottom of the docs
00:14  PsychoMario: bobng, i think so anyway, or im mistaken
00:14  gjvc: dullboy, ah ok
00:15 --- preference_ is now known as preference
00:16  PsychoMario: bobng; python multiprocessing docs 16.6.2.10, Examples
00:17  PsychoMario: bobng; scrap that, 16.6.2.7.3
00:17  PsychoMario: why would you not use that, and use parallel python instead?
00:18  TFKyle: figure002: http://www.py2exe.org/index.cgi/WhereAmI might be useful (probably using os.path.dirname rather than jpath), and either manually copying the data files or modifying setup.py to include them in data_files when running with py2exe (downside of that is it'd screw up slightly if you try installing it normally on a system with py2exe)
00:18  bobng: PsychoMario: Which docs? dev? 2.6? 3.1?
00:20  bobng: because 16.6 doesn't seem to be valid
00:21 --- unreal_ is now known as unreal
00:22  figure002: TFKyle: thanks for the tip, i'll look into it
00:22  theyranos: http://wiki.python.org/moin/GuiProgramming lists a bunch of different frameworks. Is there one in particular I should choose over the others?
00:23  figure002: dullboy: i manually put the image folder next to the zip like you said. but then i changed the paths in the script to relative paths, and that works
00:23  Wild_Cat: theyranos: GTK or Qt.
00:23  figure002: dullboy: but that's like a very very ugly fix, because now the script won't work in linux
00:23  Wild_Cat: theyranos: I have a slight preference for GTK because of various licensing concerns and the fact that I'm a Gnome user, but Qt is perfectly fine too.
00:25  theyranos: Wild_Cat:  do you know offhand whether GTK stuff still looks weird under OS X? Or should I just try it and see?
00:25  alshain: assuming I have multiple base classes, which base class' __new__ gets called, it can hardly call several, no?
00:25  Wild_Cat: theyranos: under OSX? Last time I checked, yeah, it still did.
00:25  qwerty1793: hi, is there a clever way to itterate over couples or tripples of letters in a string? for example "for letter in 'abcdxy': print letter" itterates through 1 letter at a time, i want to go through 2 at a time
00:26  lvh: alshain: Wait, __new__?
00:26  kerio: qwerty1793: not really
00:26  alshain: lvh: yes
00:26  lvh: alshain: Why don't these things define __init__
00:26  kerio: izip(*[iter("abcdxy")]*2)
00:26  kerio: but that's almost perl-like
00:26  lvh: alshain: (You're about to find out some of the *pragmatic* reasons why people say you shouldn't subclass anything most of the time)
00:26  alshain: lvh: I'm just wondering about what happens to __new__
00:27  alshain: lvh: :P
00:27  kanzure: i'm getting a segfault in a giant python app.. strace doesn't show anything helpful
00:27  kanzure: how can i track down why i'm getting a segfault?
00:27  qwerty1793: kerio: is the best way just do do "for i in xrange(0, len(strn), 2): itteration = [i,i+2] ... " ?
00:27  lvh: alshain: The class' __new__ is called. Full stop.
00:27  kerio: hmm, not really
00:27  Wild_Cat: kanzure: recompile all your C extensions, and maybe Python itself, with debugging symbols, and gdb the coredump.
00:27  lvh: alshain: Usually this means "nothing special", thanks to type being magical and preventing your vile machinations.
00:28  kerio: it = iter("abcdef"); for i in it: j = next(it, ""); print i+j
00:28  alshain: lvh: actually, if a base class implements __new__, it's called as well
00:28  alshain: lvh: not "as well", but if it does - it will be called, I don't know what happens if both do
00:29  lvh: alshain: Yes, if the class doesn't define it, it's the first thing up in the __mro__ that does.
00:29  dullboy: figure002: why won't it work on linux?
00:29  lvh: alshain: That's how attribute access works for classes, hence "nothing special"
00:29  alshain: lvh: ic
00:29  lvh: alshain: Also why the hell are you defining __new__
00:29  lvh: Let alone *twice*
00:29  alshain: lvh: what would happen if I was to use multiple inheritance, which class' __new__ would be called?
00:29  lvh: What does that even mean
00:29  alshain: it's an if question, not that I do :)
00:30  lvh: alshain: It's meaningless
00:30  kanzure: Wild_Cat: okay.
00:30  alshain: what does what mean? __new__?
00:30  lvh: alshain: __new__ creates an object of exactly one type
00:30  lvh: alshain: Yes: semantically, explain to me what you think having more than one __new__ means
00:30  lvh: Or what it would mean for several of them to be called
00:30  alshain: lvh: I realize that not both can be called
00:30  dullboy: figure002: you'll have your python code in say directory MyCode/package and the images in MyCode/images
00:30  alshain: several*
00:31  lvh: alshain: Yes, so, don't do that
00:31  alshain: lvh: what it means: I create what is instantiated
00:31  lvh: alshain: Pretend it's undefined behavior
00:31  alshain: I define*
00:31 --- squishy is now known as SquishyNotHere
00:31  dullboy: figure002: and on windows MyCode/library.zip, MyCode/program.exe, Mycode/images
00:31  lvh: alshain: (It is! In practice, it'll follow the rules for all other kinds of attribute access.)
00:31  alshain: lvh: yes, but say I have class Class1(Baselass1, Baseclass2)
00:32  alshain: and both cBaseclas1 and Baseclass2 had __new__, would Baseclass1 have priority?
00:32  lvh: alshain: Yes, it still follows the rules for attribute access.
00:32  alshain: lvh: then I just don't know how the rule works with multiple baseclasses :)
00:33  alshain: so my new question is: how does attribute access work, if I have multiple baseclasses?
00:33  lvh: alshain: Are they all new-style?
00:33  kerio: very confusely
00:33  alshain: baseclass, is that the correct term, or multiple superclasses?
00:33  lvh: alshain: Number one wins.
00:33  alshain: lvh: I suppse so, yes
00:33  alshain: lvh: ok, thanks
00:33  lvh: alshain: Note: you could have tried this very easily in a REPL
00:33  alshain: REPL?
00:34  lvh: alshain: "python" on a shell
00:34  lvh: preferably bpython
00:34  merijn: Read Evaluate Print Loop
00:34  TFKyle: or descintro goes into it as well iirc
00:34  lvh: >>> class A(...): #yay
00:34  alshain: lvh: hmm yeah... I guess you have a point here... thanks anyway
00:34  TFKyle: *descrintro
00:34  lvh: alshain: seriously you are trying wayyyyy too much magic for someone so inexperienced with python
00:34  alshain: as for the correct terms, how do you say, multiple superclasses? baseclasses?
00:34  lvh: alshain: This will not end well
00:34  lvh: alshain: base classes
00:35  alshain: ok
00:35  figure002: dullboy: on windows, one would use the setup.py to install the packages to python's lib folder, and the executable.py would be copied to the user's bin folder. so the image files would then be out of reach, because the relative path wouldn't work anymore.
00:35  alshain: lvh: well, you've got to learn somehow, no? :)
00:35  figure002: dullboy: i mean, "on linux"
00:35  alshain: I don't have the intention of using multiple base classes, but I just wondered, "what if"
00:36  lvh: alshain: If you're teaching a person Spanish, do you start with "to be", or all of the colorful curse words used in the Mexican drug cartel scene
00:36  merijn: alshain: I've never needed this stuff so far, and I doubt there ever will be a time I do need it
00:36  merijn: lvh: Curse words of course, bad example :p
00:36  alshain: :P
00:37  lvh: in all my time doing python I've certainly had less than five cases where I needed to know about __new__
00:37  lvh: let alone multiple base classes defining __new__
00:37  alshain: lvh: as I said... "what if"
00:37  kerio: __new__ is awesome
00:37  kerio: fucks up with objects and doesn't afraid of anything
00:38  merijn: alshain: The answer to "what if" is "run away screaming!"
00:38  OzoneNerd: Any suggestions on the easiest way to solve a system of linear equations in python, anyone?
00:38  alshain: merijn: :P
00:38  kerio: OzoneNerd: numpy.linalg.solve
00:38  lvh: OzoneNerd: numpy.linalg, or sage
00:38  kerio: lvh: too slow
00:38  lvh: sooort-of depending on context
00:38  merijn: OzoneNerd: I'm guessing NumPy/SciPy will have stuff for...dammit, I need to type faster
00:38  lvh: kerio: you didn't say sage
00:38  kerio: merijn: you didn't even qualify!
00:39  kerio: lvh: meh, sage is unnecessary
00:39  alshain: does anyone know whether there is some sort of graph-database for python already? I've found one that depends on Redis, but I'd like one that is pure-python
00:39  OzoneNerd: I was looking at that, but I couldn't find the API too readil... I was googling the wrong thing...
00:39  OzoneNerd: Thanks, #python!
00:39  dullboy: figure002: setup.py let's you install other files besides the sources, have a look at that
00:39  merijn: I'm actually coding instead of racing to answer IRC! ;p
00:40  kerio: #python - so helpful that people race to answer questions
00:40  alshain: kerio: that would be stackoverflow :P
00:40  merijn: The only channel I've encountered that is more helpful then #python is #haskell
00:40  figure002: dullboy: true, but that would mean i'd have to install the image files to the user's bin directory
00:41  merijn: They are so helpful they will even conjecture 12 possible interpretations of your vague question and answer all of them :>
00:41  lvh: alshain: StackOverflow is full of horribly bad answers
00:41  kerio: merijn: while #python asks "ok, what's your *real* problem?"
00:41  OzoneNerd: kerio: What's your problem?
00:41  figure002: dullboy: i think i'm giving up, i'm just gonna create two versions of the script, a separate one for windows, with the ugly relative paths
00:41  merijn: Of course half of the answers will involve abstract algebra and or monads, but you learn to live with that ;p
00:41  dullboy: figure002: ... dammit
00:41  kerio: OzoneNerd: i care too much ;_;
00:41  lvh: merijn: "who the fuck cares about your actual problem, we're having an interesting metaphysical discussion about the nature of discourse now, shoo"
00:42  figure002: dullboy: i know
00:42  OzoneNerd: It's like the whole world is a monad.
00:42  merijn: kerio: #python mostly calls me stupid and to come back when I stop being dumb :<
00:42  kerio: merijn: well, are you stupid?
00:42  merijn: OzoneNerd: It is! It is just an implementation detail of the IO monad :D
00:42  figure002: dullboy: many thanks for the help though
00:43  merijn: kerio: I like to think I'm the particular kind of smart which leads you to do extremely dumb things while coding (or in general, really)...
00:43  lvh: State monads: because keeping RNG states is a good idea
00:43  kerio: lvh: it sure makes it hard to TAS your program!
00:44  merijn: My search engine tells me TAS stands for Tactical Archery System, that's probably wrong :>
00:44  Wild_Cat: kerio: quite the contrary, it makes it easier to TAS if you know where to sniff the states of the RNG ;)
00:44  dullboy: figure002: welcome... You'll find a way after some coffee!
00:44  Wild_Cat: merijn: Tool-Assisted Speedrun
00:45  merijn: Tactical Archery System still makes more sense to me :p
00:45  lvh: I thought I was being fancy with my butterfly abuse in HL1 but these 5min mario speedruns really take the cake
00:46  Wild_Cat: lvh: clearly, you haven't seen the one that simultaneously beats Megaman 2 through 5 with the same controller inputs.
00:46  kerio: lvh: really makes you wonder what would happen in a modern game's tas
00:46  kerio: half-life speedruns are almost TASes, they don't qualify because you can't replicate the exact input
00:47  merijn: kerio: I wish someone would make a multiplayer game aimed at making bots compete for that reason
00:47  TFKyle: someone tried doing that non-TAS with SM3 and SMW, didn't turn out too well
00:47  Wild_Cat: TFKyle: tried doing what?
00:48  TFKyle: using the same controller inputs to play SM3 and SMW at the same time
00:48  alshain: lvh: you were wondering why I wanted __new__? remember the discussion about how to get something to listen to an event using decorators? You pointed me to Pangrel, which uses Descriptors and decorators, I used the __new__ approach. Now, for a plugin to use such a decorator, with Pangrel, you have to assign a Descriptor of course, with the __new__, you need to have the correct baseclass. basically, I was thinking: Do I need a Plugin ...
00:48  Wild_Cat: TFKyle: Oh.
00:48  alshain: ... baseclass? What functionality would I put in there? Previously, it was pretty monolithic, now I'm removing most of it, in fact, I don't have one at all, which feels more comfortable, also following various argumentations that it's better not to subclass - then I thought, I could make an EventEnabled-subclass, that would activate my by-the-descriptor-tagged-methods using __new__ - then the thought came, what if someone is using a ...
00:49  alshain: ... baseclass? And what if he is using __new__ as well? That's where my question originated. Now, both of these approaches have one major problem: They always listen to the events, but when unittesting, I may not want that. So what I will do now, is "tag" my methods that I want to listen, pass the instance then to an "activation" function instead. That way I don't have much magic, and it works well with testing.
00:49  lvh: Pangler*
00:50  lvh: No, you do not need a plugin baseclass. You need a plugin *interface*.
00:50  lvh: (see twisted.plugin)
00:50  alshain: I don't have one anymore
00:50 --- SquishyNotHere is now known as squishy
00:50  lvh: I don't see why you would want to turn it off during testing
00:50  lvh: Simply don't have any event listener instances
00:50  lvh: Done
00:51  timClicks: when a slice is called on a list, which method is called?
00:51  alshain: because that would require me to have an event system and everything, and I don't want to test that then
00:51  Wild_Cat: timClicks: __getitem__ with a slice argument.
00:51  alshain: lvh: but you're right, it's not "that" important
00:51  alshain: but more importantly, following the manual approach, I can pass a different event context very easily
00:52  lvh: I'm still not following it, but okay
00:52  lvh: Yes, the manual approach is awesome
00:52  lvh: (import this)
00:52  alshain: I know that import this is a joke, but what is the connection?
00:53  photofroggy: I'm using sphinx and python's docstrings to generate html documentation. I can get the generator to display things in a code block but I can't get it to use syntax highlighting, any ideas?
00:53  alshain: ah.. explicit is better than implicit
00:54  lvh: alshain: Right.
00:54  photofroggy: hmm...
00:54  lvh: alshain: It's not a joke, it's a very serious concise set of rules to produce better software.
00:54  alshain: a joke because you can read it if you do "import this"
00:55  lvh: photofroggy: Syntax highlighting depends on pygments. Can you import pygments?
00:55  dizital: I'm getting an error and not sure why it saids script, user_name = argv \n value error: need more than 1 value to unpack
00:55  dizital: here's the pastebin link for it:http://paste.pound-python.org/show/1622/
00:55  photofroggy: ah, nope
00:56  photofroggy: lvh: thing is I've managed to get sphinx to use syntax highlighing when writing stuff directly in the rst files
00:56  lvh: photofroggy: To quote the docs, Syntax highlighting is done with Pygments (if it’s installed) and handled in a smart way:
00:56  seen_: dizital: print len(argv)
00:56  photofroggy: using .. sourcecode:: python
00:56  lvh: photofroggy: Oh, you're talking about the autodoc things. I don't even know if they do syntax highlighting. I thought they did.
00:57  lvh: (I use pydoctor to generate API docs since it generates *useful* API docs, so I can't help you there.)
00:57  photofroggy: heh
00:57  dizital: seen_ on the same line?
00:57  photofroggy: I like the look of sphinx's docs
00:57  lvh: photofroggy: I use Sphinx too, just not for API documentation.
00:57  photofroggy: fair enough
00:58  seen_: dizital: anywhere in the script
00:58  seen_: dizital: before the error
00:58  photofroggy: I'm going to stick with sphinx for this though, I think
00:59 --- Nosnam-Freenode is now known as Nosnam
00:59  photofroggy: well, installing pygments didn't help
00:59  photofroggy: ah well
00:59  photofroggy: It's not too important for these bits
01:00  dizital: seen_: k i inserted the print len(argv) before the script and i get a syntax error pointing at the script now
01:00  lvh: dizital: Are you using Python 3.x?
01:00  dizital: lvh: nope
01:00  dizital: I'm using gedit to do everything
01:00  lvh: dizital: Pastebin failing code then, please
01:01  dizital: http://paste.pound-python.org/show/1623/
01:01  lvh: Yes, that's just completely wrong syntax
01:01  lvh: there's an assignment in there, for example
01:02  seen_: dizital: add newline before script
01:02  lvh: "len(argv) script" isn't valid either, there's a space in the middle
01:02  lvh: Why is (argv) in parens?
01:03 --- preference_ is now known as preference
01:03  dizital: so give the print len(argv) a line before the script line correct
01:03  lvh: dizital: Yes.
01:03  dizital: k did that and got error again, im going to pastebin the code and error real quick
01:04  dizital: http://paste.pound-python.org/show/1624/
01:05  lvh: You didn't give it an argument value.
01:05  theyranos: dizital:  that time you actually called it without a user_name. try python ex14.py gibson
01:06  dizital: theyranos: k that ran it and with no problems
01:06  dizital: i'm new to python and trying to learn it
01:06  dizital: why did i have to use my name for get the program to run?
01:07  dizital: is their anyway around that?
01:07  lvh: dizital: Because you did script, name = args
01:07  seen_: dizital: http://docs.python.org/library/sys.html?highlight=sys.argv#sys.argv
01:07  lvh: dizital: If args is only one thing, eg ["script.py"], what would that mean
01:07  lvh: you're trying to assign one thing to two things
01:07  lvh: well, no, you're trying to assign a thing with one thing in it to a thing with two things in it
01:08  lvh: this confuses python, so it complains
01:08  dizital: ah i was going by this book that saids type exactly as shown lol, learnpythonthehardway
01:09  lvh: dizital: Apparently one of you isn't doing a very good job ;-)
01:09  lvh: dizital: (Or, as the case may be, you copied it correctly but didn't run it correctly)
01:09  PythonNub: does anyone know of pywin32 binaries? I can't compile it.
01:09  dizital: the original pastebin of the code was the one i type from the book
01:09  lvh: dizital: AFAICTthere wasn't anything wrong with that one, no
01:09  dizital: it didn't tell me how i should run it
01:10  mdmkolbe: I'm looking for a templating system for my CGI script, but I need the template system to be able to (1) integrate the output of "system" commands and (2) print output incrementally so you can see the output as it is produced if one of the system commands happens to take a little while.  Does anyone familiar with templating systems know if any of them do that?  (The documentation I've read doesn't say either way.)
01:10  Burgundy: PythonNub: http://sourceforge.net/projects/pywin32/files/pywin32/Build%20214/
01:10  dizital: k ty for all the help
01:11  PythonNub: I downloaded that one; it needs to be compiled
01:11  disappearedng_: hey if I want to create a queue which only sends messages every 5 minutes I was wondering what would be the lightest solution ( I will incroporate this into django so i don't want anything heavy like twisted)
01:11  PythonNub: (It was a zip - the python setup.py install failed missing compiler or sumtin)
01:11  alshain: lvh: I just had a look at twisted's plugin system, or rather, I'm looking at it, now I see "implements" for the Zope interface, what exactly does that do in it's own?
01:11  PythonNub: oho
01:11  PythonNub: never mind
01:12  PythonNub: I downloaded the wrong one Thanks!
01:12  seen_: PythonNub: http://www.lfd.uci.edu/~gohlke/pythonlibs/
01:12  lvh: alshain: http://wiki.zope.org/zope3/WhatAreInterfaces
01:12  lvh: alshain: http://glyph.twistedmatrix.com/2009/02/explaining-why-interfaces-are-great.html
01:13  alshain: thanks
01:13  PythonNub: Thanks
01:13  ormaaj: What's up with {False:"hello", True:"lol"}[0] not being equivalent to {False:"hello", True:"lol"}['']
01:13  lvh: ormaaj: Python follows the Iverson convention.
01:13  lvh: ormaaj: 0 and False are equal -- ""/'' and False are not.
01:14  seen_: ormaaj: there is no '' key in the dictionary, try bool('')
01:14  lvh: ormaaj: (Note that "" is false (small letter: false in a boolean context, bool(it) == False), but it isn't False nor equal to False.)
01:15  dizital: k so on the next excerice i had to do was similar to the previous one so i added the print len(argv) to a line before the script and getting another error for it:  http://paste.pound-python.org/show/1626/
01:15  lvh: dizital: Have you tried reading the error message?
01:16  lvh: dizital: It's trying to open a file. That file does not exist.
01:16  lvh: You can't open files that don't exist.
01:16  dizital: think i just had a blonde moment now, forgot to insert the ex15_sample.py to it
01:16  lvh: dizital: I believe you might not be reading the instructions that come with the exercises completely.
01:17  blumenkohl: hi all
01:17  lvh: blumenkohl: Greetings!
01:18  blumenkohl: lvh: hey
01:18  blumenkohl: lvh: can you help me out, please...
01:19  seen_: dizital: the purpose of the `print len(argv)` is to show you how many command-line arguments is passed to python; notice 1 for `python ex15.py` and 2 for `python ex15.py gibson`;
01:19  blumenkohl: lvh: i want the same for python: http://pastebin.com/1LX0FzFJ
01:19  Vinky: if I have a list within which I have lists of [name, hash, size]  and I have another list with some of the hash'es in the previous list, what would be the easiest way to get those entries? see http://paste.pound-python.org/show/1627/
01:20  ivazquez|laptop: blumenkohl: ord() and chr().
01:20  ivazquez|laptop: Or just keep it as a number.
01:20  blumenkohl: ivazquez|laptop: can you show me equivalent of this .pl script, please?
01:20  ivazquez|laptop: No, because I can barely read it.
01:21  ivazquez|laptop: Wait, let me guess.
01:21  ormaaj: Ah you have to do a logical comparison instead of identity comparison
01:21  ormaaj: I was hoping to use that side effect but I guess that won't work
01:21  ivazquez|laptop: It goes a..z,aa..az,ba...
01:21  blumenkohl: ivazquez|laptop: at the end i want a list with 'a', 'aa', 'aaa', ... 'ab', 'aab', ...
01:21  ivazquez|laptop: Search Stack Overflow for your answer.
01:23  vecchp: Does anyone here have experience with the bullet wrapper for python-ogre?
01:24  seen_: Vinky: c = [ x for x in a if x[1] in b]
01:28  blumenkohl: ivazquez|laptop: there?
01:29  kactas: Is there another method to do: if "foo".find('bar'): print "yes" and NOT have the condition be satisfied.  I understand that find is returning the position and if not found -1 is returned.  -1  evaluates as TRUE, but it seems counter-intuitive to me.  Is there a different way to do this?
01:29  blumenkohl: ivazquez|laptop: i don't know how to continue here: http://pastebin.com/7R6aA5hc
01:29  ivazquez|laptop: Did you try Stack Overflow like I told you?
01:30  blumenkohl: ivazquez|laptop: i gave a try
01:30  ivazquez|laptop: kactas: Either detect -1 or use in.
01:30  blumenkohl: ivazquez|laptop: btw, i gave a try before i joined here
01:30  ormaaj: heh you can't evaluate hashables as an index either
01:31  ormaaj: (lambda x: {x:"hello", True:"lol"}[x.pop()])(deque("abcba")) vs (lambda y: (lambda x: {x:"hello", True:"lol"}[x])(y.pop()))(deque("abcba"))
01:31  ivazquez|laptop: http://stackoverflow.com/questions/604721/how-would-you-translate-this-from-perl-to-python
01:31  kactas:  ivazquez|laptop: Thanks.  Obviously, it's trivial to test for -1, but esthetically it bugs me (though I understand why find does what it does).  What do you mean by 'use in'?
01:32  ivazquez|laptop: in
01:32  ivazquez|laptop: Use it.
01:32  kactas: a list comprehension?
01:32  dullboy: kactas: if 'hell' in 'hello':
01:32  kactas: IN!
01:32  kactas: ah!  i feel like a rook!
01:34  ded: What's the best way to test from the command line whether an easy_install target package is already installed?
01:35 --- rodasc is now known as crodas
01:35  dizital: k i filled in the txt = open with the filename that was suppose to be in there but still getting an error http://paste.pound-python.org/show/1629/
01:36  dizital: I'm not liking this script argv thing
01:36 --- preference_ is now known as preference
01:37  theyranos: dizital: first of all, the filename needs to be in quotes if you're hardcoding it like that.
01:38  theyranos: dizital: second, the line python is complaining about is 3, where you're trying to to take a single-element list (argv, which is ['ex15.py'] because that's what you put after "python" in the command line) and assign it to two variables
01:38  theyranos: dizital:  the valueerror is because it has run out of stuff in argv before it has come up with something it could assign to the filename variable
01:38  dizital: theyranos: from what i'm reading from the book it saids "What we want to do is "open" that file in our script and print it out. However, we do not want to just "hard code" the name ex15_sample.txt into our script
01:39  theyranos: dizital:  so then line 5 should be open(filename)
01:39  theyranos: dizital:  or rather, txt = open(filename)
01:39  djustice: ello pplz. question: 'import pygtk' gives me a nice 404.. but it is installed.. and site-packages is in PYTHONPATH.. any ideas?
01:40  theyranos: dizital:  and you need to supply a filename on the command line after ex15.py so python has some clue what to stick in that variable
01:40  dizital: yea thats what is said in the book but i had an error with that too so i inputed the name of the txt thinking that would fix it
01:40  pythonirc1011: anyone has created a windows service here by any chance? (in python)
01:40  Juhaz: djustice, does 'import gtk' work?
01:40  djustice: Juhaz: nope
01:41  dizital: theyranos: u mean typing on the command python ex15.py ex15_example.txt?
01:41  theyranos: dizital: yes exactly
01:42  theyranos: might help if you make line 2 say this: print repr(argv)
01:42  Vinky: seen_, thanks, almost what I wanted,, I remade it based on that and ended up with http://paste.pound-python.org/show/1630/ , is there a better way to do it?
01:42  Juhaz: djustice, hm. What is the error, exactly?
01:42  dizital: k got a totally different error now, but light bulb started to flicker after u said that hehe
01:42  dizital: i already fix the code and inserted filename back into it on line 5
01:42  theyranos: well go ahead and paste again
01:42  kactas: ded: easy_install yolk; yolk -l
01:42  djustice: "No module named gtk"
01:42  djustice: or pygtk
01:43  djustice: import sys is good tho..
01:43  djustice: and sys.path lists site-packages..
01:43  dizital: http://paste.pound-python.org/show/1631/
01:43  theyranos: dizital: you have raw+input where you probably meant to type raw_input
01:43  djustice: and the site-packages dir contains a gtk-2.0 dir
01:43  Juhaz: djustice, does it contain pygtk.pth?
01:44  dizital: i just caught it as u already typed it
01:44  djustice: Juhaz: where?
01:44  djustice: i dont see that file..
01:44  Juhaz: djustice, site-packages
01:44  djustice: no.. :/
01:45  Juhaz: okay. That's probably it, then. It should be there. You could try creating it, it's just a text file that contains a single line: gtk-2.0
01:45  ded: kactas: thanks. How would I do it from within python? Say I want to test whether package foo has been installed, where foo is not the name of a module that can be imported (e.g. foo == 'ipython')
01:45  dizital: kool ty again lol, this book doesn't explain alot either but type errors i should've caught
01:45  svip: How do I end the script?
01:45  svip: exit?
01:46  Juhaz: djustice, it effectively adds site-packages/gtk-2.0 to sys.path too
01:46  Juhaz: any other way of doing that would suffice too
01:46  djustice: Juhaz: O.O awesome. thanks. ill try.
01:47  djustice: hm. no. i still get "No module named pygtk"..
01:47  Spira: What's the module to allow you to step through the code?
01:47  Spira: By pressing like R or something. I forget. =\
01:47  theyranos: djustice: are you sure on your shell easy_install points to the same python version as python? seems obvious but it's caught me in the ass a few times.
01:47  Spira: gdb maybe
01:48 --- normanrichards_ is now known as normanrichards
01:48  theyranos: Spira: python -m pdb yourprogram.py
01:48  pythonirc1011: is there a compilation of pywin32 for python 2.7?
01:48  djustice: "shell easy_install"? as in the #!?
01:48  pythonirc1011: seems last update was 2009
01:50  ivan`: uh, so?
01:50  ivan`: http://sourceforge.net/projects/pywin32/files/pywin32/Build%20214/
01:50  theyranos: djustice:  well on some systems (for reasons I may never understand) if you type "python<enter>" at a shell, you get python 2.7, but if you try to easy_install it'll get the python 2.6 version of your module
01:50  pythonirc1011: go tit
01:50  pythonirc1011: got it...trying to install now
01:50 --- preference_ is now known as preference
01:52  kactas: ded:  Hmm.  I see what you're saying.  I would use popen to run the yolk command and get the results back into your Python program.  Not pretty, but it would work.
01:52  seen_: Vinky: your alg seems fine; you could also try
01:52  seen_: c = [tuple(g) for k, g in groupby(sorted(a, key=itemgetter(1)), key=itemgetter(1)) if k in b],
01:52  seen_: where groupby = itertools.groupby; itemgetter = operator.itemgetter
01:52  ded: kactas: glad you say that because that's what I just did.
01:52  ded: thanks
01:52  djustice: theyranos: it's running the correct python..
01:52  djustice: :[
01:53  kactas: ded: Noice
01:53  Juhaz: djustice, is gtk-2.0 in sys.path now?
01:54  djustice: Juhaz: yep. still fails with ^ that msg tho..
01:55  Juhaz: that shouldn't be possible, at least assuming there is anything in that dir
01:56  djustice: some .so files and subdirs..
01:58  blahsphemer: I have a list a:[[1,2],[3,4],[5,6]]. What would be suggested method to copy just the '0'th elements of each row and store them in another list
01:59  blahsphemer: like b=[1,3,5]
01:59  theyranos: b = [ x[0] for x in a ]
01:59  djustice: Juhaz: thanks anyway
01:59  Juhaz: djustice, uhm. Well, final straw, maybe it added it wrong? /usr/ when it's actually in /usr/local/ or something.
01:59  blahsphemer: theyranos, cool, thanks/
01:59  djustice: nope.. seems to be all in /usr..
02:00  ormaaj: list(zip(*[[1,2],[3,4],[5,6]]))[0]
02:01  blahsphemer: ormaaj, What's the point of zipping the list and converting it into a list again
02:02  blahsphemer: ormaaj, wouldn't it be slower than what theyranos said
02:02  ormaaj: blahsphemer: depends on python2 or 3. In python3 you get a generator that has to be converted before subscripting.
02:02  blahsphemer: ormaaj, I'm using python 2
02:02  ormaaj: blahsphemer: depends on the implementation. Probably have to test to find out.
02:03  blahsphemer: ormaaj, k
02:03  ormaaj: blahsphemer: I believe in python 2 you can do it without the list
02:03  blahsphemer: k
02:04  pythonirc1011: has anyone written a windows service here in python?
02:06  smw: pythonirc1011, if you are asking if it is possible, I believe twisted can run as a windows service.
--- Log closed Sun Jan 16 02:10:38 2011
