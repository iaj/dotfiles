--- Log opened Wed Dec 22 10:09:28 2010
10:09 --- Users 668 nicks [0 ops, 0 halfops, 0 voices, 668 normal]
10:10  Phazorx: merwok: no idea, that's what i was trying to figure out because impoty trace worked but -m trace didnt
10:10  Phazorx: bob2: it turned out to be even crazier than i thought
10:10  Phazorx: http 200 is a sign of failed login where as http 302 is a successfull one
10:10  bob2: wireshark dump or it didn't happen
10:10  bob2: :(
10:10 --- Channel #python was synced in 91 seconds
10:11  Phazorx: i got tracing to work on my example by adding another opener with debugtrace
10:11  merwok: Phazorx: try python -m trace -h
10:11  Phazorx: /usr/lib/python2.6/trace.py: option -h not recognized
10:12  Phazorx: so it supposed towork but it just doesnt?
10:16  merwok: Well, the error message says to try --help
10:16  merwok: use*
10:16  Phazorx: bob2: http://dpaste.com/289355/
10:19  merwok: Strange that result does not trigger a NameError
10:19  bob2: it doesn't get called
10:19  gen0cide: ok im onto the time delta thing
10:19  bob2: maybe it needs to be the first thing to opener
10:19  gen0cide: i had to fix something
10:19  bob2: build_
10:20  merwok: So, first, fix the HTTPError name error
10:20  Phazorx: which, MyHandler?
10:20  bob2: yeah
10:20  Phazorx: does order matter?
10:21  Phazorx: merwok: fix how?
10:21  bob2: let's find out
10:21  merwok: Phazorx: Well, import the name!
10:21  gen0cide: with the time delta, what happens if its 24 o clock, and i subtract 40 minutes?
10:21  bob2: try and see
10:21  gen0cide: or 12 am
10:22  merwok: gen0cide: Time handling is a can of worms, made even worse if you’re using objects without timezone info.
10:22  _habnabit: gen0cide, take a guess.
10:23  gen0cide: local time is good enough for this application
10:24  Phazorx: merwok: didnt get that... which module do i need to import for that?
10:24  bob2: Phazorx: good luck
10:24  merwok: Phazorx: Probably httplib.  Look at the source of your code.
10:25  bob2: I'm sure I missed something stupid that I should have known given how much I've used urllib2 lately
10:25  Phazorx: merwok: i got httplib already
10:25  _habnabit: gen0cide, just because it doesn't have any tzinfo doesn't mean it's 'local time'.
10:25  _habnabit: gen0cide, in fact, frequently it's the opposite, considering how DST works.
10:25  merwok: Phazorx: Do you know how Python imports work? (Especially, not like Java’s)
10:26  Phazorx: merwok: nope i do not
10:26  gen0cide: so datetime.combine(date.today(), time()) + timedelta(minutes=-40)  ?
10:26  merwok: Phazorx: “import httplib” makes the httplib name available.  To get to HTTPErrror, either use httplib.HTTPError or use “from httplib import HTTPError”
10:26  _habnabit: what
10:27  _habnabit: gen0cide, 1) why aren't you just using datetime.datetime.now() ? 2) why not - timedelta(minutes=40) ?
10:27  gen0cide: this is just for torrents for a home computer/mediapc nothing official
10:27  gen0cide: I need to know the time 40 minutes in the pasdt
10:27  _habnabit: datetime.datetime.now() - datetime.timedelta(minutes=40)
10:28  _habnabit: Though this might not always be accurate.
10:28  Phazorx: merwok: aha... thanks
10:29  _habnabit: datetime.datetime.now(dateutil.tz.tzlocal()) - datetime.timedelta(minutes=40)
10:29  _habnabit: There we go.
10:29  Phazorx: so it is strictly scoped with no inheretance
10:29  _habnabit: Phazorx, 'it' ?
10:29  gen0cide: can i replace the 40 with monthdaysubmit[0] ?
10:30  _habnabit: gen0cide, TIAS
10:30  gen0cide: so  datetime.datetime.now() - datetime.timedelta(minutes=monthdaysubmit[0]
10:30  gen0cide: tias, is that a new rtfm?
10:30  _habnabit: gen0cide, you forgot the tzlocal
10:30  gen0cide: ok
10:30  gen0cide: ill try that
10:32  gen0cide: datetime.timedelta(minutes=40)
10:33  gen0cide: i meant "NameError: name 'dateutil' is not defined"
10:33  gen0cide: What library is dateutil in
10:33  _habnabit: dateutil
10:33  NelleV`: :-)
10:33  Phazorx: merwok: it = python in general as a language
10:34  gen0cide: ImportError: No module named dateutil
10:34  merwok: We use “scope” and “inheritance” for different things
10:34  _habnabit: Yes, it's third-party.
10:34  gen0cide: !
10:34  gen0cide: how do i do this with standard lib
10:35  NelleV`: gen0cide: you can install it
10:35  _habnabit: Well, you can rewrite it from scratch.
10:35  _habnabit: Orrrr just install it.
10:35  NelleV`: _habnabit: xD
10:35  NelleV`: I like the rewrite it form scratch solution
10:36  merwok: Or just copy the example from http://docs.python.org/library/datetime#tzinfo-objects
10:37  gen0cide: i took out the part that needed the extra lib
10:37  gen0cide: i have "timesubmit = datetime.datetime.now() - datetime.timedelta(minutes=int(monthdaysubmit[0]))"
10:38  gen0cide: which gives me this:  "2010, 12, 22, 0, 56, 25, 480000"
10:39  gen0cide: monthdaysubmit[0] is 40
10:40  gen0cide: hmmm
10:41  thm: why don't you use "time.localtime(time.time() - 40*60)"
10:41  _habnabit: thm, why would you do that?
10:42  thm: cause it works with the stdlib
10:42  _habnabit: thm, ... datetime is stdlib too.
10:42  thm: yes, but not dateutil
10:42  xavieran: Hi, I am using pygame and I want to find out when a group of sprites is colliding with another group. All my sprites are simple polygonal shapes and have a list of their points, and I have written a function to test for polygon collision. The pygame.sprite.groupcollide function does not allow callbacks, but pygame.sprite.spritecollide does. Is there a function like spritecollide that works on two groups like groupcollide
10:42  xavieran: ? Or should I just copy the groupcollide code and replace the collision detection?
10:43  filip: hi, how can I specify a listening address for multiprocessing.managers.BaseManager()?
10:43  _habnabit: thm, I'm not sure what your point is.
10:43  filip: it seems that it listens only if host part of the address is empty
10:43  filip: and I need it to be bound to 127.0.0.1
10:43  gen0cide: so time.localtime(time.time() - 40*60) will work if its 11:20 - 40 mins = 10:40 ?
10:43  thm: sure
10:43  mahmul: why not just use a time delta?
10:44  gen0cide: whats the advantage with a time delta
10:44  xavieran: I think I'll just copy groupcollide, it's less than twenty lines of code...
10:44  mahmul: it's clearer, more extensible, and you can be sure it's accurate
10:44  mahmul: plus you get a datetime object which is more useful than time.struct_time
10:45  thm: depends on what he wants to do with it. kiss.
10:45  mahmul: i mean, if he really likes the time.h time functions, sure
10:45  xavieran: Haha, okay, so the online documentation does not mention the fact that groupcollide _does_ take a callback...
10:48  lorenzosu: I keep getting a /usr/bin/python^M: bad interpreter: No such file or directory error although there are no \r in my script... Anyone have a clue?
10:48  _habnabit: lorenzosu, yes, there are.
10:48  Wild_Cat: lorenzosu: there probably is one -- look at the #! line of your script.
10:48  _habnabit: lorenzosu, just run dos2unix on it.
10:49  lorenzosu: _habnabit, uh.. vim doesn't find them
10:49  _habnabit: lorenzosu, maybe vim sucks.
10:49  filip: lorenzosu: vim can transparently handle them
10:49  lorenzosu: _habnabit, eh eh
10:49  filip: lorenzosu: maybe it doesn't show em to you
10:50  lorenzosu: filip, but it should if i do an explicit search no?
10:50  mahmul: lorenzosu: cat your_file.py | tr -d '\r' > maybe_fixed.py
10:50  mahmul: see if maybe_fixed.py runs
10:50  mahmul: if it does, then you had \r, regardless of what vim says
10:50  mahmul: also make sure vim isn't saying [dos] in whatever vim calls its modeline
10:50  lorenzosu: mahmul, ok thanks
10:51  gen0cide: how do i convert (2010, 12, 22, 1, 10, 5, 803000) into a formart so its 1:10 ?
10:52  mahmul: gen0cide: strftime
10:52  _habnabit: gen0cide, your_datetime.strftime('%H:%M')
10:53  lorenzosu: ok dos2unix worked
10:53  lorenzosu: I don't understand how it got in there as I was typing in idle :/
10:53  gen0cide: so i have "timesubmit = currentdate - datetime.timedelta(minutes=int(monthdaysubmit[0]))"
10:54  gen0cide: have timesubmit.strftime('%H:%M')  ?
10:54  gen0cide: can i *
10:54  _habnabit: TIAS
10:54  gen0cide: what
10:55  merwok: Try in a shell
10:55  merwok: It’s like IRC, but with immediate and accurate answer
10:55  hemanth: ha ha
10:55  NelleV`: and slightly more objective also
10:56  NelleV`: else, you have a very interesting shell, and I would like the name of it :-)
10:56  hemanth: less of intelligence even though its interactive
10:56  gen0cide: no wont work, says cant assign to function call
10:56  thm: gen0cide: the syntax is time.strftime('%H:%M', timesubmit)
10:56  _habnabit: thm, no, it isn't.
10:56  thm: yes it is
10:56  NelleV`: hemanth: mmh... Depends one what, and depends who's on IRC and on their mood at that time
10:57  gen0cide: i have about 20 more mins of awakeness in me
10:57  gen0cide: i need to get this working heh
10:57  hemanth: NelleV`, i was alluding to the shell, not the IRC :)
10:57  _habnabit: thm, did you try it?
10:57  thm: _habnabit: well, no it isn't because he falled back to datetime instead of time.
10:57  NelleV`: hemanth: well.. less intelligent compared to irc ?
10:57  mahmul: .strftime is a method on datetime objects
10:57  thm: _habnabit: and yes, I tried with time.
10:57  hemanth: NelleV`, indeed
10:58  NelleV`: hemanth: so it depends who is here, and answering, doesn't it ? :p
10:58  _habnabit: thm, is there a reason you're suggesting using the time module other than to be contrary?
10:58  hemanth: NelleV`, IRC normally wins, collective collaborative and exhaustive
10:58  NelleV`: hemanth: mmh. I don't agree with that.
10:58  NelleV`: hemanth: IRC wins on giving opinions
10:58  thm: _habnabit: I told you. timezone stuff works without external libs.
10:59  gen0cide: thm: your way doesnt work
10:59  hemanth: NelleV`, yes after which shell just follows what is been said
10:59  _habnabit: thm, nah, not really.
10:59  Kenshin13: Op
10:59  hemanth: oops
10:59  thm: _habnabit: no, that's a convincing argument ;)
10:59  thm: s/no/now
10:59  gen0cide: timesubmit = currentdate - datetime.timedelta(minutes=int(monthdaysubmit[0]))    < timesubmit needs to output it as %H:%M
11:00  _habnabit: gen0cide, timesubmit.strftime(...)
11:00  NelleV`: hemanth: isn't that better ? You have an objective answer from the shell. You never have an objective answer from a developper.
11:01  gen0cide: _habnabit: doesnt work
11:01  merwok: Depends on who
11:01  mahmul: thm: http://docs.python.org/library/datetime.html#tzinfo-objects
11:01  hemanth: NelleV`, opinions matters the most i feel
11:01  mahmul: gen0cide: you have to replace ... with your format string
11:01  _habnabit: gen0cide, what does "doesn't work" mean
11:01  gen0cide: i know
11:01  NelleV`: hemanth: I don't agree. But I'm initially a mathematician, so it makes sense that I don't agree with opinions
11:01  _habnabit: gen0cide, yes, and I don't.
11:01  _habnabit: gen0cide, please, elaborate.
11:01  NelleV`: hemanth: opinions matter. But you have here only a small portion of the community
11:02  NelleV`: hemanth: ie, if you have a look at another portion of the community, people will have different opinions :-)
11:02  hemanth: NelleV`, but the experience they have!
11:02  gen0cide: it says "*** cant assign to function call
11:02  thm: _habnabit: and that works without subclassing tzinfo?
11:02  NelleV`: hemanth: I'm talking of people with the same experience, or greater experience than most of the people here, if you count in years of development
11:02  NelleV`: hemanth: and years of helping people too...
11:02  _habnabit: gen0cide, sounds like you're doing something other than what I said.
11:03  mahmul: thm: what's so bad about subclassing tzinfo?
11:03  _habnabit: thm, tzinfo is an abstract class; you can't use it /without/ subclassing it.
11:03  NelleV`: hemanth: the opinions depend on a person, on their history (how they learnt python etc), and on what they do
11:03  thm: _habnabit: see, and that's *easy*? compared to time module?
11:03  NelleV`: hemanth: a scientist using python will not have the same point of view than most people here
11:03  thm: _habnabit: for the record, that's an ironical question
11:04  _habnabit: thm, sure; dateutil provides all the tzinfo implementations you need.
11:04  NelleV`: hemanth: and if you want to continue this discussion, we should probably move to another chan :-)
11:04  _habnabit: thm, for the record, ironical isn't a word.
11:04  hemanth: NelleV`, its about getting things done, there nothing called as the best way
11:04  gen0cide: _habnabit:  thisis what i have  http://paste.pocoo.org/show/308285/
11:04  NelleV`: hemanth: I agree on that !
11:04  thm: _habnabit: and dateutil isn't stdlib. we talk in circles.
11:04  _habnabit: thm, who cares?
11:04  thm: _habnabit: you asked me
11:04  _habnabit: gen0cide, uh
11:05  _habnabit: gen0cide, what do you think line 3 does?
11:05  aminpy: is python a compiling language?
11:05  gen0cide: line 3 subtracts minutes from the current time
11:05  gen0cide: such as 40 mins
11:05  _habnabit: aminpy, you can compile things with python, sure.
11:06  aminpy: def chap():
11:06  aminpy:     print "Hello world!"
11:06  aminpy: chap()
11:06  _habnabit: gen0cide, and what does it do with the result of that?
11:06  aminpy: _habnabit, ^
11:06  _habnabit: aminpy, please don't paste to the channel.
11:06  aminpy: _habnabit, when I call that function before the define it raise error
11:07  _habnabit: aminpy, yep.
11:07  aminpy: _habnabit, is this a defect?
11:07  preaction: no
11:07  _habnabit: aminpy, in your code, yes.
11:07  gen0cide: when i take out the strftime which makes it not work :  (2010, 12, 22, 1, 27, 19, 753000)
11:08  _habnabit: gen0cide, see, the thing I don't understand is why you put the strftime call on the *left* side of the equals.
11:08  aminpy: _habnabit, why
11:09  _habnabit: aminpy, what else could ever happen?
11:09  seyz: hi, anybody use mongoengine ?
11:10  gen0cide: _habnabit: where else would i put it
11:10  _habnabit: gen0cide, on the right-hand side.
11:10  gen0cide: on which object?
11:10  _habnabit: gen0cide, the result of the subtraction.
11:11  gen0cide: thats one the left
11:11  _habnabit: gen0cide, nope. It's on the right.
11:11  gen0cide: im extremely tired im about to pass out, just need to get this done....
11:12  aminpy: _habnabit, http://dpaste.com/289375/
11:12  _habnabit: aminpy, what does 'raise error against c/c++/java' mean
11:13  gen0cide: its not working whereever i put it
11:13  aminpy: _habnabit, sorry, my english is pure
11:13  NelleV`: what does a pure english means ?
11:14  aminpy: NelleV`, I don't speak with you!
11:14  merwok: aminpy: Python has rules.  One rule is: you can’t use a name before it’s defined or bound.
11:14  gen0cide: AttributeError: type object 'datetime.timedelta' has no attribute 'strftime'
11:14  thm: aminpy: you can't use a function before it is defined. the def... block is like chap = ..., so chap isn't known beforehand
11:14  nosklo: aminpy: java and c++ don't have a place for you to call the function in the module itself. all code are inside some other function.
11:15  NelleV`: aminpy: mmh... ok. That's a pretty good answer xD
11:15  jorrit: nosklo, actually that's not true for Java. You can have static initializer blocks which is code outside a function.
11:15  jorrit: nosklo, it is executed the first time the classloader loads a java class.
11:15  thm: aminpy: and no, python is not compiled in the sence java is.
11:16  _habnabit: thm, sure it is.
11:16  _habnabit: thm, CPython is compiled in exactly the sense java is. It just is done in one step instead of two.
11:16  preaction: aminpy: it would indeed cause an error with C or C++, that's why you have a .h file to declare the function. Java is different, as the whole class must be compiled before any bit of it can be run
11:16  _habnabit: aminpy, http://codepad.org/t1SVolmF
11:16  thm: _habnabit: no, because it is not statically typed. you don't get errors for methods not being existent
11:16  _habnabit: aminpy, looks like an error in C for me.
11:16  _habnabit: thm, 1) static typing has nothing to do with that. 2) why does that preclude python from being compiled?
11:17  thm: _habnabit: a compiler in the traditional sense does type checks.
11:17  jorrit: thm, no
11:17  _habnabit: thm, ... um, no.
11:17  thm: _habnabit: oh, well.
11:17  jorrit: thm, only a compiler for languages that have type checks.
11:18  merwok: Agreed.
11:18  thm: jorrit: that's why I said "in a java sense"
11:19  gen0cide: where do i put the .strftime('%H:%M')    @    timesubmit = currentdate - (datetime.timedelta(minutes=int(monthdaysubmit[0]))    ?
11:19  jorrit: But you also said: <thm> _habnabit: a compiler in the traditional sense does type checks.
11:19  _habnabit: gen0cide, (dt - td).strftime(...)
11:20  merwok: gen0cide: Or if you find that more readable, add a new line containing s = timesubmit.strftime(..)
11:21  gen0cide: _habnabit: im not subtracting datetime and timedelta
11:21  gen0cide: Could i please just have it im fighting to stay awake
11:21  _habnabit: gen0cide, what
11:21  _habnabit: gen0cide, what else would currentdate be
11:21  gen0cide: i dont know it just works
11:22  _habnabit: ...
11:22  jorrit: gen0cide, perhaps you should go to sleep and work on it again tomorrow.
11:22  jorrit: Most people don't write good code when they are half sleeping.
11:23  gen0cide: current date =  2010-12-22 02:22:43.259000
11:23  _habnabit: SyntaxError
11:23  merwok: Speaking about sleep, I’m going
11:23  merwok: Kudos for your patient helpfulness _habnabit and bob2
11:24 --- otep is now known as weak
11:24  gen0cide: yes im going to sleep also, i cant think staight
11:24  gen0cide: thanks for the helps guys
11:24  gen0cide: Ill be back tomorrow morning!
11:24  gen0cide: ha
11:24  gen0cide: just need a couple things changed
11:24  jorrit: Thanks for the warning.
11:24  jorrit: :-)
11:24  gen0cide: heh
11:25  gen0cide: kk gnight
11:32  Shapeshifter: Hello. How can I figure out the path of a file object? I looked at os, os.path and file but I can't find a method that gives me the path of a given file.
11:33  nosklo: Shapeshifter: there's not necessarly a way
11:33  nosklo: Shapeshifter: some file objects don't even have file names
11:33  seyz: it's possible with MongoEngine to retrieve data without create the class ?
11:33  Shapeshifter: nosklo: I know. Well then I'll do it differently. thanks
11:34  nosklo: seyz: mongo engine is a ORM.
11:34  nosklo: seyz: Object Relational Mapper, you map data to objects. That's why you need a class
11:34  seyz: nosklo yes I know ... and with pymongo it's possible to retrieve data ?
11:35  seyz: without classes
11:35  seyz: or maybe create the class automatically when a collection already exists ?
11:35 --- zobbo is now known as marko_ramius
11:36  nosklo: dunno, I never used it
11:36  nosklo: what's wrong with creating a class anyway
11:36  mgarces: hi guys
11:37  seyz: nosklo I already have a big collections ... with a lot of embedded documents etc :-(
11:38  ccxCZ: nosklo: not exactly ORM as it doesn't map onto relations
11:39  ccxCZ: Shapeshifter: fileobject.name
11:40  Shapeshifter: ccxCZ: oh, thanks.
11:40  ccxCZ: seyz: mongo handles equivalent of python dictionaries
11:40  phrearch: hi
11:40  ccxCZ: seyz: so yes, you can
11:41  seyz: ccxCZ and do you know how  ? :-)
11:41  phrearch: is there a splicing method for arrays in python?
11:41  jorrit: phrearch, yes, same as for strings.
11:41  jorrit: phrearch, i suppose you mean 'slicing' though?
11:42  _habnabit: phrearch, what's an array?
11:42  phrearch: jorrit: no, splicing. im trying to port some js lib, which uses js splice. inserting an element within some place in an...list
11:42  phrearch: :)
11:42  ccxCZ: seyz: http://api.mongodb.org/python/1.9%2B/tutorial.html
11:43  phrearch: http://www.w3schools.com/jsref/jsref_splice.asp
11:43  _habnabit: phrearch, docs.python.org/tut
11:43  seyz: ccxCZ thanks a lots !
11:45  ccxCZ: phrearch: list.insert
11:45  phrearch: ccxCZ: cool thanks
11:46  ccxCZ: can we have an irc bot that shows docstrings?
11:46  phrearch: ah it looks like splice indeed
11:46  _habnabit: Nah.
11:46  nosklo: ccxCZ: yeah, it is a Document Object Mapper (DOM, ugh)
11:47  nosklo: ccxCZ: it would spam the channel
11:47  NelleV`: nosklo: it could reply by private message
11:48  jorrit: It would still cause spam from all the users asking the bot.
11:48  nosklo: NelleV`: the channel would be spammed by the requests
11:48  NelleV`: they could ask by private messages too
11:48  jorrit: They could but they will not.
11:48  thm: phrearch: python slices also work on the LHS:  a = [1,2] ; b = [3,4] ; a[1:1] = b ; print a
11:48  jorrit: As that is not usually how such a bot works.
11:48  NelleV`: the only thing is I don't really see the point...
11:48  nosklo: NelleV`: then it's no better than your python interpreter
11:48  NelleV`: I'd just ask my interactive interpreter
11:49  NelleV`: i'm too slow :-)
11:49  phrearch: thm: aha, that also makes it possible to insert more than one element at a time then i guess
11:49  ccxCZ: I meant something like: !tell <newb> about list.insert
11:49  thm: phrearch: yep
11:50  phrearch: thm: thanks! :)
11:50  nosklo: ccxCZ: yeah, the channel would be spammed by annoying "!tell" sentences
11:50  phrearch: js and python look a lot the same, but some things are a bit different
11:50  bahamas: ccxCZ: the newb can do help(list.insert)
11:51  nosklo: ccxCZ: stay in #ubuntu for a while and you'll see what I mean
11:51  ccxCZ: ah no thanks
11:51  ccxCZ: i see
11:51  nosklo: ccxCZ: you can say "newb: help(list.insert)" instead
11:56  ccxCZ: well, it seemed it would be "cool", but it's true that bot interaction on irc is mostly annoying.
11:58  nosklo: ccxCZ: I like when it's really useful
11:59  NelleV`: I like it when it's really not useful xD
11:59  nosklo: ccxCZ: I have an alias on my irc client where I type the name of the module and it sends out the url
11:59  nosklo: ccxCZ: I don't think it would be better as a bot.
12:01 --- marko_ramius is now known as zobbo
12:17  Shapeshifter: If I have a path like "/foo/bar/baz/asdf" and another path "/foo/bar/", what would be the easiest way to substract the second from the first, ending up with "/baz/asdf/"?
12:19  GrIM147: Shapeshifter, is the path always that long ?
12:19  Shapeshifter: GrIM147: no, could be different lenghts
12:21  GrIM147: Shapeshifter, you could do a split on / , then a loop in a loop :P
12:21  Shapeshifter: yeah probably
12:22  balaa: how can i access a list by its index but not get an out of range exception
12:22  Gentle: choose indexes that are inside the boundaries ;)
12:22  balaa: i would like to get an empty string
12:23  nosklo: Shapeshifter: os.path.commonprefix can help
12:23  nosklo: Shapeshifter: in fact it is the solution
12:23  Shapeshifter: nosklo: thanks!
12:23  Gentle: nosklo: breaks on windows
12:24  nosklo: Gentle: as in?
12:24  bob2: balaa: what are you doing?
12:24  Gentle: nosklo: os.path uses "\" when it finds out python currently runs on windows
12:24  nosklo: yeah...
12:25  nosklo: and?
12:25  nosklo: Gentle: I guess that's what we expect from it
12:25  nosklo: I don't see that as breaking
12:25  bob2: why would commonprefix not use os.pathsep
12:25  Gentle: well he doesn't parse paths, he parses strings that use / as a separator
12:25  nosklo: hm
12:25  nosklo: that's a bug then
12:26  bob2: that's ridiculous
12:26  Shapeshifter: no, no, I'm parsing actual paths, sorry about the quotes.
12:26  Gentle: ok, if that's just an example of a unix path, then use os.path
12:26  Gentle: if it's an example of an url, use url.urlparse
12:26  nosklo: Gentle: I'm testing under windows and I don't see the problem. Mind to give me an example?
12:26  Gentle: if it's something custom, you're on your own
12:27  Gentle: urllib.urlparse it is I think
12:29  yacek19: Hi
12:29  Gentle: nosklo: what does os.path.split("/home/somebody/") return on windows?
12:31  cnf: can i join 2 tuples to create a new tuple?
12:32  yacek19: I have a problem with zipfike. Documentation states that if filenames to write() are in unicode I must convert them to byte strings. So I do zip.write(file, filename.encode("cp852")), but I get type error: expected an object with the buffer interface
12:32  mahmul: cnf: sure, (1, 2) + (3, 4)
12:32  cnf: oh, that's easy P
12:32  cnf: mahmul: sweet, thanks
12:33 * lvh roars ferociously!
12:34  yacek19: Any help?
12:37  verte: yacek19: what is file?
12:37  yacek19: Path to file
12:37  verte: so you're passing the filename twice?
12:39  yacek19: No, second is alternative name to file in arc
12:40 --- kanor is now known as tyrus
12:40  bob2: possibly it's a bug
12:40  bob2: also, cp852 wtf
12:40  verte: can you please pastebin a full traceback?
12:41 --- tyrus is now known as kanor
12:41  yacek19: Sorry, i am connected from a phone
12:41  bob2: I think 'file' is not what you think it is
12:42  bob2: also best to not shadow builtins
12:42  never2far: i need to get a py script that outputs: date(from monday - friday) some_text \\ another_text, and on Tuesday and Thursday another_text will change ...i searched on calendar module but i can't find something usefull
12:42  bob2: never2far: maybe pastebin some sample output, it's not quite clear to me what you're after
12:42  yacek19: File is from os.path
12:43  bob2: that's not really an answer
12:43  bob2: print repr(file)
12:43  never2far: ok bob2 in a moemnt
12:43  yacek19: Python3
12:44  verte: oooooooh python3, unicode, la-di-da
12:44  yacek19: Am i in dark ass?
12:45  bob2: i think i'm convinced that unicode as the default string type is not yet a workable thing
12:45  verte: it's a workable thing, it's backwards compatability that isn't
12:46  verte: and that includes standard library reuse
12:46  bob2: hah
12:46  lvh: verte: Maybe I'll believe that if we can go 6 months without something in the stdlib being fundamentally broken because of it
12:46  lvh: Also, bytes has upper, lower and title, but not split
12:46  lvh: wtf?
12:47  bob2: people got overly excited and took all the str methods away from bytes
12:47  lvh: (IIRC, I don't have a 3.x interpreter here to verify)
12:47  bob2: and now will spend the next 2 years readding them
12:47  lvh: Nosnam: But they never took away upper, lower and title
12:47  lvh: err, bob2*
12:47  lvh: at least not in a released version
12:47  lvh: Those *don't* make sense since upper only does what its contract says it does for ascii
12:47  lvh: split, however, makes perfect sense for pure-bytes
12:49  lokai: is there a nice pythonic way to remove the (possible) paths from the results of glob.glob(), yielding a list of just filenames?
12:49  bob2: a genexp and os.path.isfile, probably
12:50  bob2: or globbing + os.walk
12:50  lokai: was hoping for something more elegant. oh well
12:50  bob2: elegant how?
12:51  lokai: hm, perhaps something that didn't require a loop
12:51  cwillu_at_work: bob2, reimplemented in glob :p
12:51  cwillu_at_work: i.e., duplicated functionality with a varying interface
12:51  verte: fear of loops seems to be a common thing these days
12:51  cwillu_at_work: it's the php school of elegance
12:51  bob2: genexp ain't no loop yo
12:52  bob2: cwillu_at_work: glob_glob_but_only_regular_files("*")
12:52  lokai: you'd have to loop through the results of glob.glob() or the iterator iglob
12:52  never2far: bob2, http://paste.pound-python.org/show/0bs3xOdr7uWlByCWE77z/ here it is
12:52  verte: loops are about as fundamental as the function call, but they are so inelegant, I keep hearing
12:52  bob2: cwillu_at_work: actually, go away, I want 10 days without thinking about php!
12:53  xavieran: [list comprehensions are better than loops]
12:54  bob2: never2far: still have no idea what you're after, sorry
12:54  verte: weakref_create
12:54  verte: oops
12:56  cwillu_at_work: never2far, ah, so you're trying to implement fizzbuzz? :p
12:56  bob2: someone was actually here this week getting help with fizzbuzz
12:58  verte: no doubt we will end up hiring them in a management position
12:59  yacek19: To sum up, write in zipfile expects bytestring. I give bytestring, but it ends with error.
13:00  yacek19: So I need str object with string encoded in cp852
13:00  verte: and it gives an error that doesn't seem much related, and we don't know what line it comes from
13:01  cwillu_at_work: yacek19, what is file?
13:01  yacek19: path to file
13:01  cwillu_at_work: are you sure?
13:01  bob2: print repr(file)
13:01  bob2: and pastebin the traceback
13:02  bob2: and if you're on your phone, come back later ;)
13:02  verte: wasn't repr(file) == "Python3" ?
13:02  bob2: heh
13:03  verte: it is way past your bedtime, bob
13:03  Shapeshifter: mh. is there no function to split a path in all of its components? I only see split and splitdrive
13:03  verte: you'll be cranky in the morning
13:03  bob2: I'm cranky already
13:03  verte: awesome, me too
13:03  Shapeshifter: nvm
13:04  yacek19: Pastebin.com/amGaNmRr
13:05  cwillu_at_work: yacek19, where is file set?
13:05  Shapeshifter: nosklo: btw, I found that os.path.relpath is exactly what I wanted
13:06  Watergad: Hi. How to "deimport" module when the object ends execution?
13:06  verte: Watergad: in general, you can't.
13:06  verte: Watergad: why do you want to unimport a module?
13:07  Watergad: I import classes dynamically and I expected to load new version after the file is updated
13:08  Watergad: Is it impossible w/out restarting the whole app?
13:08  verte: but you understand that existing references to the class will not update
13:08  yacek19: File is str objec set manually
13:08  verte: eg if you already created an instance of the class, it will forever be of the old class
13:09  verte: Watergad: reloading is fraught with peril. if you are using python 2.x, there is a reload() function that takes a module and reloads it.
13:10  verte: Watergad: but it was with good reason that it disappeared in 3.x
13:10  yacek19: cwillu_at_work: it is str object set manually
13:11  Watergad: but if there's no any instances of this module left - it's still no good way to import module anew?
13:11  cwillu_at_work: http://pastebin.com/amGaNmRr
13:11  infobob: http://paste.pound-python.org/show/807/ (repasted for cwillu_at_work)
13:11  cwillu_at_work: me?  lazy?  never :p
13:12  verte: so nobody else imported it and has a reference to it, or objects it created? sure, just as long as you know what it really does.
13:12  lokai: aw, the logic "if (a or b) in L" or "if a or b in L" doesn't work like I want it to =P
13:13  lokai: ...if a in L or b in L: =/
13:13  verte: if any(x in L for x in [a, b]):
13:13  lvh: lokai: that parses as (a) or (b in l)
13:14  lokai: yep
13:14  lvh: use what verte said or if a in L or b in L
13:14  verte: if set([a, b]).intersection(L):
13:14  lvh: that works too yeah
13:17  cwillu_at_work: bob2, re: python3, it appears that, although zipfile requires the name in question to be ascii characters, it can't actually use a bytestring for that purpose.  Is there a better way for him to do this other than zipfile.write(foo, str(name.encode('cp851'))) ?
13:17  cwillu_at_work: (that works, while without the str does not)
13:17  bob2: that's insane
13:17  cwillu_at_work: (which I believe to be at least a documentation bug)
13:17  Watergad: thanks verte
13:19  yacek19: Huh bigger case
13:19  cwillu_at_work: yacek19, don't use that yet please
13:19  cwillu_at_work: bob2, zipfile ends up doing b'a'.find('a')
13:20  Phazorx: how can i silently supress application raised exceptions?
13:20  cwillu_at_work: Phazorx, define suppress
13:21  Phazorx: as in i need identical behavior regardless of wether something has raised an error or not in this particular case
13:21  cwillu_at_work: Phazorx, you can't prevent the exception from being raised, although you can catch it and silently drop it (which is generally considered a bad thing)
13:21  cwillu_at_work: Phazorx, can you pastebin the code in question?
13:21  jorrit: Phazorx, what kind of exception do you want to ignore?
13:21  Phazorx: TweepError in this particular case
13:22  jorrit: Phazorx, then just catch it.
13:27  yacek19: So this zipfile has a bug and I can't do anything right now
13:27  Phazorx: weird... but is there some noop() in python?
13:27  yacek19: is there any workaround?
13:28  Phazorx: i am catching the exception i wanted but since i dont want to do anything.., i really need not to do anything[3~
13:28  Phazorx: and a=a is kinda silly
13:28  jorrit: Phazorx, pass
13:28  cwillu_at_work: yacek19, looks like.  str(filename.encode('...')) seems to work, but you really _really_ shouldn't have to do that.
13:28  Phazorx: thanks
13:29  cwillu_at_work: yacek19, the problem seems to be that that, although it claims to want a byte string, it's working with it as regular strings (i.e., .find(chr(0)) will not work with a bytearray, which is apparently want they want.  That said, I'm not terribly familiar with py3k, so somebody else (/me nudges bob2) should comment
13:29  bob2: I'm even less familiar with py3k
13:29  cwillu_at_work: okay, then it's just insane :p
13:30  yacek19: Trick with str produces veeeery bad consequences
13:30  cwillu_at_work: goodie
13:30  cwillu_at_work: file a bug, and stop using py3k :p
13:31  yacek19: I don't know why you hate py3k
13:31  cwillu_at_work: yacek19, I don't.  I just don't use it.
13:32  cwillu_at_work: yacek19, your current troubles seem to stem from a broken library conversion;  there's not a lot I can say :p
13:33  Phazorx: hrm... i must be doing sometihng wrong
13:33 --- Vorpal_ is now known as Vorpal
13:33  Phazorx: http://dpaste.com/289416/ that's what i see, and i dont want to see that
13:33  Phazorx: so what i did is http://dpaste.com/289417/
13:33  cwillu_at_work: a library accepting unicode strings should not be demanding its users encode those strings as bytes, and then pass those bytes back as a (decoded) unicode string
13:34  Phazorx: and i get this now: http://dpaste.com/289418/
13:34  cwillu_at_work: Phazorx, you have to import it then;
13:35  Phazorx: or do tweepy.TweepError?
13:35  cwillu_at_work: probably something like "import tweep; \n\n\n;  except tweep.TweepError: pass"
13:35  cwillu_at_work: yep
13:35  cwillu_at_work: also, if you're not doing anything with e, you don't have to include it on the except: line
13:36  nosklo: in fact, your error is tweepy.error.TweepError
13:36  cwillu_at_work: Phazorx, http://dpaste.com/289422/
13:36  nosklo: maybe it was copied to tweepy.TweepError
13:36  cwillu_at_work: Phazorx, this should be in the documentation for that library
13:36  nosklo: but the traceback says tweepy.error.TweepError
13:38  Phazorx: i wouldnt say tweepy has enough documentation for all cases and they claim that to be as a tweeter issue not theirs for ~4 months now
13:38  cwillu_at_work: that's kinda irrelevant
13:38  cwillu_at_work: what I meant is "what exceptions are there" should be documented :p
13:38  Phazorx: yeah... your paste seems to work
13:39  Phazorx: that would have been nice of them to mention this, i agreee
13:51  thrall: I'm trying to run a WSGI "app" but when it does from soaplib.wsgi_soap import SimpleWSGISoapApp
13:51  thrall: it says: ImportError: No module named wsgi_soap
13:52  thrall: I've looked inside site-packages and can see that it indeed is not there. What should I do to install it
13:52  thrall: ?
13:53  thrall: I've tried searching for the problem and other people seems to have the problem but can't find a solution. Anyone here familiar with this problem?
13:54  cnf: is there a gui package that comes standard with python?
13:54  lvh: cnf: Yes, tkinter
13:54  lvh: it's pretty bad
13:54  cnf: hehe
13:54  cnf: i don't need much, tbh
13:54  lvh: Hm! I'm wondering if my new project should use ReST for docstrings or epytext
13:55  cnf: also, why is it standard if it's bad?
13:55  lvh: cnf: I don't agree with the sentiment that simple requirements should make you put up with medicore tools
13:55  jorrit: cnf, why can't something standard be bad?
13:55  lvh: cnf: Pretty much everything in the stdlib is bad
13:55  cnf: lvh: o,O
13:55  lvh: cnf: The stdlib is where code goes to die.
13:55  lvh: (Not my quote, but that of someone very important)
13:55  cnf: "someone very important" h?
13:56  cnf: eh*
13:56  lvh: cnf: Imagine if you're maintaining a *reasonable* $THING.
13:56  lvh: cnf: Suddenly your project has to sync with Python to release new things.
13:56  lvh: For any *reasonable* $THING, that's completely unreasonable.
13:56  lvh: "Oh hey we're not going to make 2.x releases anymore, so anyone that has your project at whatever version it is now is stuck with it *FOREVERRRRR*"
13:57  lvh: cnf: stuff moves to the stdlib when there's not a lot left to change
13:57  cnf: so you say things like datetime and zlib etc are pretty bad?
13:57  lvh: ie threading! It's always going to be bad and people have given up so we put it in the stdlib
13:58  lvh: or the socket module! that's just the BSD socket API which hasn't changed much since the eighties, so we put it in
13:58  lvh: cnf: You see: zlib and datetime are things that are known, they are not going to change significantly
13:58  lvh: There's not a hell of a lot of development left on how gregorian calendars work
13:58  lvh: you got it right or you didn't
13:58  cnf: ^^;
13:58  lvh: same with zlib
13:58  lvh: that *can't* change because other people require the bytes to look a particular way (to unzlib it)
13:59  lvh: cnf: Basically, there are no more reasons in 2010 to keep to stdlib-only packages
14:00  lvh: The portability argument is bullshit too, there's nothing magical about stdlib modules
14:00  lvh: they're just third party modules installed in a specific place
14:00  lvh: if it can be done in a stdlib package, it can be done somewhere else just as well
14:00  lvh: quite often it's just an excuse people use to not have to learn how packaging actually works
14:00  lvh: (and, given setuptools exists, I can't say I blame them a lot)
14:01  cnf: i don't mind packages
14:01  xarxer: I don't get this
14:01  cnf: but this stuff has to run on windows tomorrow
14:01  xarxer: in every tutorial I'm reading I frequently see class Someclass: pass
14:01  lvh: cnf: Great! So you'll be using py2exe anyway
14:01  cnf: and i can NOT be arsed to explain someone else how packages work on winodws
14:01  lvh: cnf: You don't have to
14:01  xarxer: why would you have an empty class like that?
14:01  cnf: because _i_ don't know how packages work on windows
14:01  lvh: cnf: You don't have to either
14:01  cnf: lvh: no, py2exe needs windows
14:01  cnf: i don't have windows
14:02  lvh: cnf: okay, so don't use py2exe, use one of the *freezes
14:02  cnf: sorry?
14:02  TheCommieDuck: xarxer: Errors or Exceptions or whatever they're called?
14:03  lvh: cnf: cx_freeze doesn't require windows
14:03  xarxer: TheCommieDuck: huh?
14:03  lvh: xarxer: Show me an example and I'll tell you why
14:03  lvh: It might just be that the tutorial is bogus
14:03  TheCommieDuck: xarxer: class SomeError : pass ?
14:03  cnf: lvh: oh, that's interesting
14:03  TheCommieDuck: AFAIK, you don't need a body to raise it.
14:04  xarxer: TheCommieDuck: as far as I understand "pass" just says "move along, don't do anything"
14:04  cnf: lvh: so that just makes a precompiled binary that only needs pythonw.exe on windows?
14:04  TheCommieDuck: xarxer: Yes, you can use it for 'empty' classes and functions.
14:04  xarxer: TheCommieDuck: but why would I need an empty class?
14:04  lvh: cnf: You should probably read the documentation, otherwise I can give you a completely correct answer that will later bite you in the ass because you didn't realise what it actually meant ;-)
14:04  cnf: oh, i'm looking
14:04  lvh: xarxer: Show me the example where you saw it and I'll tell you why
14:04  xarxer: TheCommieDuck: I'm sorry if I don't understand this but I'm used to c++
14:05  xarxer: lvh: http://diveintopython.org/object_oriented_framework/defining_classes.html
14:05  lvh: ah, yes
14:05  cnf: lvh: i think it might be exactly what i was looking for ^^;
14:05  lvh: dive into python
14:05  lvh: stop reading dive into python
14:05  cnf: well not for the GUI bit, obviously
14:05  xarxer: lvh: but it's not just there.. I see them everywhere
14:05  lvh: it's full of things that are wrong and terrible
14:05  xarxer: lvh: hmm okay
14:05  lvh: xarxer: Okay, show me an example that Pilgrim didn't write
14:05  TheCommieDuck: xarxer: The only reason I can think of is if you want to raise (or throw, in C++) an error of SomeCustomError, then raise SomeCustomError would not work. However, if you did class SomeCustomError: pass, then you can raise that..
14:05  TheCommieDuck: I think. And it's probably wrong. :P
14:05  xarxer: lvh: Pilgrim?
14:06  lvh: xarxer: mark, the guy who wrote DIP
14:06  xarxer: lvh: oh
14:06  xarxer: hmm well I'll try :p
14:06  TheCommieDuck: And you can use it for unit testing.
14:06  lvh: also, you don't need pass, you need any statement
14:06  lvh: a single expression counts as a statement
14:06  TheCommieDuck: class SomeClassToBeTested : pass #when you haven't implemented it yet -> do all the unit tests referencing it
14:06  lvh: a docstring is a single expression
14:06  lvh: :-)
14:07  xarxer: lvh: http://docs.python.org/tutorial/classes.html
14:07  xarxer: lvh: 9.7
14:07  xarxer: lvh: Emplyee is an empty class, but a few rows down he is assignin values to member data?
14:07  jorrit: xarxer, there it is used as an object where you can assign attributes.
14:08  xarxer: jorrit: just any I want?
14:08  jorrit: xarxer, of course.
14:08  TheCommieDuck: (Separate question) so wait, you can assign attributes to an object instance?
14:08  jorrit: TheCommieDuck, of course
14:08  cnf: lvh: apart from what, what would you reccomend then for very simple GUI's ?
14:08  papna: Oh, there's nothing good on that page.
14:08  xarxer: jorrit: I could create an empty class like that and the assign like john.holabalo = 7?
14:08  papna: God.
14:08  jorrit: xarxer, yes
14:08  papna: xarxer: Sure, you could.
14:08  lvh: xarxer: "Sometimes it is useful to have a data type similar to the Pascal “record” or C “struct”, bundling together a few named data items. An empty class definition will do nicely:"
14:08  xarxer: jorrit: Now that seems... odd :x
14:08  lvh: xarxer: They explain why they do it right there ;-)
14:09  jorrit: xarxer, well how else are you going to get attributes in an object?
14:09  jorrit: xarxer, in python you don't declare attributes.
14:09  jorrit: xarxer, attributes appear because something assigns them.
14:09  lvh: xarxer: Although you might want to look at namedtuple, it produces things that should remind you more of structs except that they're immutable
14:09  TheCommieDuck: jorrit: Is that *local* to the instance, or to all the instances? So if I did class Foo : pass \ john = Foo() \ john.bar = 5 \ #Now do all Foo objects have a bar attribute?
14:09  xarxer: lvh: Yeah but it would make more sense to have a keyword "Struct" or something so you'd have to declare the data it can hold
14:09  jorrit: TheCommieDuck, only that one instance.
14:09  lvh: xarxer: Only in languages that aren't python
14:09  jorrit: xarxer, in python you don't declare attributes.
14:09  lvh: xarxer: Python is a language for consenting adults
14:10  TheCommieDuck: Ah, ok. That's pretty interesting. Thanks. Though I don't see how it'd be of much use.
14:10  xarxer: lvh, jorrit: yeah it seems.. I'm just so used to c++
14:10  lvh: xarxer: Poor you.
14:10  papna: TheCommieDuck: It's not exactly.
14:10  xarxer: lvh: nah c++ is good, but I wanna learn python as well
14:10  lvh: xarxer: Do you get some kind of monetary compensation?
14:10  Raydiation: why does math.factorial not scale well on multicore systems?
14:10  papna: TheCommieDuck: You would consistently define attributes among instances.
14:10  xarxer: lvh: compensation for what?
14:10  Raydiation: would be easy to use threading
14:10  lvh: Oh dear. Advanced Stockholm syndrome in this one :-(
14:10  jorrit: Raydiation, why would it?
14:10  jorrit: Raydiation, threading in python does NOT help on multicore.
14:11  Raydiation: jorrit: :/
14:11  papna: TheCommieDuck: It's just this isn't formally enforced.
14:11  xarxer: lvh: lol I'm from sweden so that'd make sense ;)
14:11  jorrit: Raydiation, because the python interpreter can only run on one core at a time (there is a lock)
14:11  Raydiation: jorrit: ah ok
14:11  zxww: why doesnt this code execute git gui? http://paste.pound-python.org/show/808/
14:11  papna: jorrit: That's not accurrate at all.
14:11  jorrit: papna, no?
14:11  Raydiation: jorrit: does one interpreter run for all python programs?
14:11  jorrit: Raydiation, no of course not.
14:11  lvh: Multiple threads can run on multiple cores all the time, what he meant is "only one of them can touch python objects", though
14:11  magicblaze007: does anyone know where i can find gajim developers? Its written in python and #gajim doesnt have anyone...
14:12  nosklo: a factorial implementation could use multiple threads
14:12  TheCommieDuck: I'm not sure if it would be worth it or even possible, but some way to interpret python into assembly would be pretty nice. :P
14:12  papna: jorrit: math.factorial is written in C. It could do whatever parallelization it wants, but it doesn't because that's how Python do.
14:12  nosklo: and it could use multiple cores too
14:12  shadow^dancer: wich doesnt mean that multithread doesnt help
14:12  shadow^dancer: (?)
14:12  thm: Raydiation: the multiprocessing module might be helpful
14:12  jorrit: nosklo, what about the calculations that are done in python?
14:13  Raydiation: thm: ty
14:13  nosklo: jorrit: in Cpython, one can argue that nothing is "done in python", since Cpython is written in C... What needs the GIL is to touch python objects
14:13  papna: jorrit: Python threads have a global lock. This means that CPU-bound operations aren't sped up on them in CPython. This isn't important for more common uses of threads anyhow, as IO-bound operations are so much more common.
14:13  lvh: Raydiation: Do you have any evidence that it does actually help (in processes that *also* do other things! microbenches where context switches don't actually impact other things don't count) for the sizes you're computing?
14:13  papna: jorrit: What makes threads sucks applies in C and Java and whatever.
14:13  jorrit: papna, that I know. But I assumed factorial calculation doesn't need that much IO :-)
14:13  nosklo: jorrit: if the calculation you're doing doesn't touch python objects, it could release the GIL and allow other threads run
14:13  papna: jorrit: Right, but math.factorial wouldn't use Python threads.
14:14  papna: jorrit: The reason it isn't parallelized is because Python doesn't do that.
14:14  Raydiation: lvh: im just interested, i just ran factorial of 100000 and i saw only one core on 100%
14:14  jorrit: nosklo, what does 'touching' python objects mean exactly? If you call bla.func() then you touch 'bla' I assume?
14:14  papna: jorrit: I could easily make a pmath.factorial if I wanted.
14:14  nosklo: jorrit: about anything touches python objects
14:14  shadow^dancer: papna: and what makes them suck?
14:14  lvh: shadow^dancer: Threads in general?
14:14  nosklo: jorrit: anything you do with python code
14:14  papna: shadow^dancer: Uncontrolled sharing of memory.
14:14  cnf: hmz
14:15  nosklo: jorrit: but you can do stuff in C without touching python objects. That stuff can run in a separate core
14:15  lvh: shadow^dancer: Okay let's start. Shared mutable state. Undefined semantics in a whole lot of cases involving signal handling
14:15  cnf: ok, i'm already stumped with cx_Freeze
14:15  jorrit: nosklo, ok. So basically a cpu intensive calculation (like factorial) can't be properly made multi-core if you write it in pure python alone then?
14:15  jorrit: nosklo, at least not with the benefits you expect with multi-core.
14:15  lvh: shadow^dancer: The fact that every desktop/server CPU development in the past ten years has moved towards highly non-uniform memory access
14:15  nosklo: jorrit: not using Cpython, because it has the gil, so only one thread can touch python objects at a time
14:15  lvh: shadow^dancer: Locks.
14:15  Raydiation: isnt it possible to start multiple interpreters from python?
14:16  lvh: Raydiation: Sure! multiprocessing
14:16  papna: shadow^dancer: Locking issues.
14:16  shadow^dancer: ivh: if u want to write algorimts and papers to improve that u are wellcome i guess
14:16  shadow^dancer: :)
14:16  papna: Raydiation: Of course.
14:16  xarxer: lvh, jorrit: but if data attributes spring into existance when I first assign them a value, why would I need the class? I could just assign a value to some other variable outside of the class?
14:16  lvh: shadow^dancer: Already have, none of them involved threading.
14:16  Raydiation: lvh: papna: a great, so lets say factorial would be possible on multiple cores
14:16  jorrit: xarxer, well everything in python is an object.
14:17  papna: Raydiation: I doubt you have enough cores to make it faster than math.factorial.
14:17  jorrit: xarxer, and it is usually considered good practice to use classes for the purpose they are made for.
14:17  lvh: xarxer: c1 = C(); c2 = C(); c1.a = 1; c2.a = 2
14:17  jorrit: xarxer, so not to a random other object.
14:17  papna: Raydiation: Writing a pure Python, pallel implementation.
14:17  lvh: xarxer: FWIW I don't think this is a very good use of a class -- I'd typically use a namedtuple.
14:17  xarxer: This is confusing.. this will take a while for me ^^
14:17  lvh: Yes, C++ *is* quite damaging to the mind
14:18  xarxer: lvh: lol
14:18  xarxer: oh
14:18  xarxer: sorry
14:18  xarxer: I meant "haha"
14:18  TheCommieDuck: lvh: I agree there; I've been python'ing for 2 months, and C++ is almost painful to write now. :P
14:18  TheCommieDuck: s/2/4
14:18  papna: shadow^dancer: People use threads for two classes of problems: asynchronous programming and parallel programming. It turns out they aren't a very flexible, predictable thingfor the former, and they aren't as good a choice for the latter than separate processes 90% of the time.
14:18  lvh: TheCommieDuck: It doesn't get better.
14:19  TheCommieDuck: lvh: I have no reason to do any C++ really, so I don't think it's really affected. And python's more enjoyable (since I'm a student, it's all hobby dev)
14:19  lvh: shadow^dancer: The bottom line is that we can't reliably access a lot of memory uniformly.
14:19  lvh: Threads pretend we can.
14:20  lvh: (Okay, that's glossing over the details more than a little bit, but...)
14:21  lvh: shadow^dancer: This becomes more evident in the stuff I was doing a year ago, where your data is simply *far* too large to process on one machine.
14:23  lvh: shadow^dancer: (The relative latency difference between local and remote there is what I'm expecting the relative latency difference between this-CPU-memory and other-CPU-memory to be within a good few years)
14:27  xarxer: Now don't yell at me, but why does this output all the main numbers first, and then the threads numbers? http://paste.pound-python.org/show/NKoejcLePH90yQlAOFGM/
14:28  xarxer: hmm it seems to output it very randomly..
14:28  cnf: hmm, can't get cx_Freeze to work properly
14:28  cwillu_at_work: xarxer, because threads aren't running when you call start()
14:28  cwillu_at_work: xarxer, yes, that's pretty inherent to threading
14:29  cwillu_at_work: (avoid using them if possible, there's better ways to do concurrency in python)
14:29  xarxer: cwillu_at_work: so how would I start the thread?
14:29  shadow^dancer: hopefully nanotubes can change the way memory caches are used
14:29  cwillu_at_work: xarxer, exactly how you did.
14:29  shadow^dancer: (?)
14:29  xarxer: cwillu_at_work: well my goal here is to write a simple IRC-bot, and I need a thread that listens to the server while the rest of the program does other things
14:30  cwillu_at_work: xarxer, alternatively, you need a way to listen to the server, while still doing other things
14:30  cwillu_at_work: threads are one (bad) way to do that :)
14:30  thm: xarxer: use twisted
14:30  xarxer: cwillu_at_work: well.. yeah
14:31  xarxer: thm: I'll have a look at it
14:31  nosklo: xarxer: here's an example bot http://www.google.com/chromeos/demolab/
14:31  nosklo: argh
14:31  nosklo: xarxer: http://www.habnabit.org/twistedex.html
14:31  nosklo: xarxer: mispaste
14:32  cwillu_at_work: xarxer, have you done much work with javascript or gui's?
14:32  cwillu_at_work: (specifically, the use of events/callbacks)
14:32  xarxer: cwillu_at_work: gui's yes, javascript, no
14:33  xarxer: cwillu_at_work: yeah events and signals I learned a bit about while learning QT
14:33  cwillu_at_work: xarxer, twisted basically does concurrency using callbacks, vaguely similar to how you handle click events in many (most?) gui libraries
14:33  xarxer: hmm okay
14:35  burhan: is there any other way (other than jython + java app servers) to develop web applications in python that can be individually restarted without having to restart the web server itself?
14:35  nosklo: xarxer: what do you want the rest of the program to do, while your bot is out there waiting for commands?
14:35  nosklo: burhan: huh, sure
14:35  burhan: using what?
14:35  nosklo: burhan: I never have to restart the web server, I don't know why you do
14:35  xarxer: nosklo: handling the commands, keeping track of users, gathering statistics etc
14:35  nosklo: burhan: what are you using that needs restart?
14:36  Habbie: burhan, i am not aware of any common ways that -do- reuqire webserver restarts
14:36  varnie: hello buddies
14:36  burhan: the question is how do you stop/start a web application, independent of the web server process *remotely*
14:36  nosklo: burhan: what does "stop" a web application means?
14:37  Habbie: burhan, that question hardly makes sense
14:37  nosklo: burhan: block it from answering requests?
14:37  varnie: sn0tt, how are you doing? what's new?
14:37  burhan: no, literally "turn it off" or "undeploy" it.
14:37  nosklo: burhan: delete it from the filesystem
14:37  burhan: nosklo: yeah, other than that is there any other way.
14:38  nosklo: burhan: that's the most "generic way that works on all servers" I can think of
14:38  nosklo: burhan: move it somewhere else or something
14:38  burhan: Habbie: its a common paradigm in the java world, where applications can be individually deployed, stopped, restarted without affect other applications on the same server. I'm wondering other than using jython, is there a way of doing this in python.
14:38  cwillu_at_work: burhan, basically everybody is telling you that you can generally do that, but it depends on how you have things deployed in the first place
14:39  nosklo: burhan: I'm not sure how you would *not* do that.
14:39  Habbie: burhan, what cwillu_at_work said - this is basically, indeed, how it works.
14:40  cwillu_at_work: burhan, perhaps your confusion is that you're running a webserver from within a single python interpreter, without using something else on the frontend?
14:40  nosklo: burhan: removing one application won't affect the other, you can deploy without restarting server, applications run separately
14:40  burhan: I guess I'm not seeing how its done? I'm only used to Apache + mod_python or mod_wsgi, where to "stop" something you either comment out the appropriate lines in the config, or you kill the process.
14:40  cwillu_at_work: well, mod_python is evil :p
14:40  nosklo: burhan: ok, first of all, never use mod_python
14:41  htoothrot: mod_python != mod_wsgi
14:41  htoothrot: oops
14:41  htoothrot: i misread :(
14:41 * htoothrot shuts the hell up
14:41  burhan: I was looking at nginx + fscgi, but the main headache is that I need to provide some facility for remote management of the applications - for the people manning the operations desk at the data center.
14:42  nosklo: burhan: apache method of deploying/removing apps are symlinks you place in /etc/apache2/installed_sites or something like that
14:42  nosklo: burhan: you can make a frontend to that, I think one already exists
14:42  burhan: nosklo: doesn't that require restarting the server for the changes to take effect?
14:42  nosklo: burhan: no
14:42  nosklo: just a config reload is ok
14:43  nosklo: burhan: if you use the apache2 provided scripts like "a2ensite"
14:43  plundra: I think that's Debians doing though.
14:43  burhan: indeed
14:43  nosklo: anyway you can just copy it then, it is simple
14:43  nosklo: sends a signal to apache so it can reload config
14:43  burhan: the thing I'm not mentioning - is that the target deployment is (for now) on Windows :|
14:44  nosklo: oh, get a box
14:44  cwillu_at_work: burhan, use a sane server environment, and be relieved of your troubles :p
14:44  burhan: I'm trying with all my might to get it switched to any form of Linux, but this is proving difficult.
14:44  cwillu_at_work: burhan, that said, apache works mostly the same way on windows re: configuration
14:44  nosklo: amazon is giving away a box for free for 1 year
14:44  burhan: cwillu_at_work: have you ever had to convince someone on Linux? Someone who is responsible for a bank? Its not as easy as all the marketing fluff makes it sound :/
14:45  cwillu_at_work: linux has marketing?
14:45  bahamas: nosklo: what's the catch?
14:45  burhan: well redhat does.
14:45  nosklo: bahamas: I'm using it for two months and it works
14:45  Habbie: bahamas, i have found no catch; and for me, amazon is the competition, so you can believe i tried ;)
14:45  bahamas: nosklo: no, i mean are there any restrictions? do you need to buy something else, etc.
14:46  lvh: what are we talking about and how can I disparage amazon
14:46  nosklo: bahamas: no. you have to enter your credit card number, so it may be charged if you go beyond free levels
14:46  burhan: my current solution is to use jython, deploy on something like resin or websphere (they already use websphere) and rid myself of the management headache. I came in here hoping to find another way to get the same thing done.
14:46  nosklo: lvh: amazon offers a free box for 1 year.
14:46  nosklo: lvh: can you disparage that?
14:46  bahamas: nosklo: i see. interesting. i'll have a look
14:47  lvh: nosklo: Maybe
14:47  plundra: http://aws.amazon.com/free/ (For people to click on, I guess. :-P)
14:47  bahamas: plundra: thanks
14:47  cwillu_at_work: burhan, http://httpd.apache.org/docs/2.2/stopping.html#graceful is probably useful for you to read
14:47  jpic: hi all, i don't understand what to do of this exception: http://dpaste.com/289449/ is it a bug from me or the gdata lib?
14:47  cwillu_at_work: '''This code is designed to always respect the process control directive of the MPMs, so the number of processes and threads available to serve clients will be maintained at the appropriate values throughout the restart process'''
14:48  lvh: "that box doesn't really do anything interesting: be careful when doing microbenches, because continuous use of the same bench will most likely mean you don't get CPU cycles anymore"
14:48  lvh: but yes, the first one's always free
14:48  lvh: drug dealers figured this out a long time ago
14:48  nosklo: you can host a small site or a irc bot in there for a year, and then drop out
14:49  nosklo: you will pay zero
14:49  lvh: I fully support that behavior
14:49  lvh: It costs Amazon money
14:49  lvh: (Admittedly not enough)
14:51  nosklo: lvh: we should make a kindle-3g-router which allows amazon unlimited 3g kindle to serve free wifi
14:53  lvh: nosklo: maybe, depends if they turn a profit on kindles or not
14:53  nosklo: lvh: well, they have to pay the 3g bill
14:53  nosklo: in my country it is not cheap
14:53  lvh: Hm yeah fair enough
14:54  lvh: Does it even work in Brazil though? (The free 3g)
14:54  nosklo: yes
14:54  nosklo: that's the reason I'm planning into buying one
14:54  lvh: There's probably a clause in there somewhere that says you can't do that, but it's an interesting project nonetheless
14:55  nosklo: lvh: if only I didn't have to pay roughly 120% of the price as "Import Taxes" :(
14:56  GuySoft: hi all,l i was thinking about building a tool that will scan rss feeds, and when a new feed arrives the program will run something - might anyone of you know of a efficient python lib that will do that?
14:56  jpic: anybody please? :p
14:56  jpic: GuySoft: did you consider feedparser?
14:56  plundra: Please what?
14:56  nosklo: GuySoft: there's feedparser.
14:56  jpic: hi plundra, i don't understand what to do of this exception: http://dpaste.com/289449/ is it a bug from me or the gdata lib?
14:57  nosklo: jpic: I don't think you can use unicode with that lib
14:57  GuySoft: jpic, nosklo  - not sure yet, thinking of a design idea. and if there is something that might do what i want
14:57  nosklo: jpic: try encoding it with utf-8
14:57  cnf: hmz ffs
14:58  nosklo: GuySoft: you can't be easily notified when the feed is updated. You have toi periodically poll.
14:58  cnf: can't get cx_Freeze to work
14:59 --- weak is now known as otep
14:59  GuySoft: nosklo, yes, it seems so.. and isn't there some toolkit that does that already?
14:59  jpic: nosklo: works!!! thanks for your brillant support ;)
15:00  tsolox: html is always polling, eversince..
15:01  khertan: Hello
15:01  TheCommieDuck: Hello.
15:05  FrEaKmAn_: hi, would anybody recommend a xls reader?
15:05  FrEaKmAn_: Im testing pyXLReader  but it doesnt work...
15:06  lvh: FrEaKmAn_: Depends on the use case
15:06  lvh: In most of them I would say "just export to CSV, it's far less painful than trying to figure out what the hell XLS files mean"
15:06  FrEaKmAn_: export where?
15:07  FrEaKmAn_: there is no options for CSV, I must ise XLS
15:07  lvh: FrEaKmAn_: Why's that
15:08  FrEaKmAn_: because "they" only offer XLS
15:08  lvh: FrEaKmAn_: And you don't have accesss to Excel?
15:08  FrEaKmAn_: I do... but I want to make it automatic..
15:08  lvh: (I think you can tell Excel to do things through COM, but I don't know how painful that is.)
15:08  FrEaKmAn_: server doesnt have excel..
15:08  cnf: just tell "them" to export to csv
15:09  lvh: FrEaKmAn_: Well, PyExcelerator, or using Excel through COM
15:09  lvh: oh wait, no, there's forks of that
15:09  tsolox: COM automation via IDispatch...
15:09  lvh: xlwt/xlrd
15:09  lvh: I forgot which one you're supposed to use
15:10  tsolox: FrEaKmAn_: is the server a *nix?
15:10  FrEaKmAn_: yeah..
15:10  tsolox: FrEaKmAn_: what kind of..
15:10  FrEaKmAn_: ubuntu 8.04
15:11  tsolox: FrEaKmAn_: what version of Excel is used for the xls files..?
15:11  FrEaKmAn_: let me try with pyExcelerator first..
15:11  lvh: FrEaKmAn_: Use xlrd or xlwt
15:11  aboudreault: good morning ppl. Do you know any Web multimedia manager? music/videos written in python?
15:11  lvh: FrEaKmAn_: they're more actively maintained pyExcelerator forks
15:11  lvh: I don't know why they didn't merge either
15:11  lvh: aboudreault: I don't know what that means
15:11  lvh: a CMS?
15:12  shadow^dancer: :P
15:12  aboudreault: no, something to manage mp3/videos etc..
15:12  lvh: shadow^dancer: ?
15:12  shadow^dancer: i guess, a video/audio player
15:12  shadow^dancer: :P
15:12  aboudreault: our personnal collection.
15:12  lvh: adepti37: I don't know what "manage" means in this context
15:12  lvh: err, aboudreault*
15:13  lvh: Oh, okay. No, I don't know if such a thing exists.
15:13  aboudreault: ok
15:14  sphenxes: I am newbie for tkinter, I would like to display an equation instead of a simple string on Lable (or any other availlbe widget) widget. Label(root, Text ="my question).pick() that is the typical form. but I would like to add an equation a= b +c that are random variables. How can I do it?  I need only the idea and would contiue google (all examples are about simple text)
15:16  tsolox: FrEaKmAn_: if you like perl, there's Spreadsheet::ParseExcel
15:18  shadow^dancer: aboudreault: http://getmediacore.com/
15:19  shadow^dancer: aboudreault: http://wiki.python.org/moin/PythonInMusic
15:19  aboudreault: shadow^dancer, thanks you. Will take a look at this.
15:21  shadow^dancer: seems like u are searching but maybe it's not
15:22  aboudreault: yes, mediacore seems to be what I'm looking for.
15:22  TheCommieDuck: When I'm using unittest.main(), is there a way to set print statemets to be shown?
15:23  lvh: TheCommieDuck: That's a slightly strange thing to want. Why do you want that?
15:25  TheCommieDuck: lvh: I am getting KeyError(2,1)..which I know is trying to get dict keys which aren't in the dictionary. However, I would like to be able to print the iteration bit which..uhh.
15:26  TheCommieDuck: I'm iterating an awkward sequence in an awkward way, and I want to see exactly what I'm getting as indices.
15:26 * TheCommieDuck is struggling to explain
15:26  cwillu_at_work: TheCommieDuck, list(your_dict) will tell you the keys
15:26  TheCommieDuck: cwillu_at_work: I know what the keys are (I manually set them).
15:27  TheCommieDuck: Just..um. Give me a second.
15:27  cwillu_at_work: then I don't understand what you're asking :p
15:27  lvh: TheCommieDuck: If you're debugging a test, you want a debugger (pdb.set_trace)
15:27  TheCommieDuck: lvh: I think that's what I want.
15:28 * TheCommieDuck wanders off to the docs for a few
15:43  xeer: anyone tried programming protocol transports with python?
15:44  hemanth: print [x,m[x] for x in y] can something like that be achieved ?
15:45  papna_: hemanth: What's wrong with that?
15:45  exarkun: xeer: http://twistedmatrix.com/
15:45  xeer: exarkun: I just rewrote a mess of code to avoid twisted.. hrm
15:45  hemanth: papna, SyntaxError: invalid syntax it says
15:46  kerio: hemanth: are you using python 3?
15:46  hemanth: me doing something like print [ x,m[x] for x in y if x in z ]
15:47  hemanth: kerio, no
15:47  kerio: where's the syntax error? pastebin some code
15:47  hemanth: near for
15:48  papna_: hemanth: Pastebin ACTUAL code and your ACTUAL error.
15:48  kerio: oh wait you need parentheses around that
15:48  morfeokmg: hi!, help me pls
15:48  morfeokmg: i need execute an process but the python send me the next error
15:48  kerio: morfeokmg: what?
15:48  hemanth: kerio, bingo
15:48  morfeokmg:  File "/usr/local/lib/python2.6/site-packages/libxml2.py", line 1, in <module>
15:48  morfeokmg:     import libxml2mod
15:49  hemanth: kerio, needs to be treated as a tuple?
15:49  hemanth: papna_, fixed
15:53  Eduard: Hello
15:53  Eduard: Could someone help me with my little script?
15:53  simon: try.
15:54  exarkun: Eduard: don't ask for help, ask about the problem you're having.
15:54  exarkun: Eduard: the channel exists to help people :)
15:54  Eduard: http://pastebin.ca/2026308
15:55  infobob: http://paste.pound-python.org/show/812/ (repasted for Eduard)
15:55  morfeokmg: if execute a python script send me the error
15:55  morfeokmg:  File "/usr/local/lib/python2.6/site-packages/libxml2.py", line 1, in <module>
15:55  morfeokmg:     import libxml2mod
15:55  Eduard: at datetime.strptime() i'm getting incorrect format
15:55  Eduard: but as far as i can see, everything is correct
15:55  nosklo: morfeokmg: please don't paste in the channel. Your error message is also cut, the line with the error is missing.
15:55  sphenxes: http://paste.pound-python.org/show/813/  can someone help me with my simple idea.
15:55  morfeokmg: ok, sorry
15:56  nosklo: morfeokmg: in the future, use a pastebin, like http://paste.pound-python.org/ , to show your code/errors
15:56  NET||abuse: hey there folks, regex help.. i have 2 strings     "blah 1.5; blah" and "blah 1.1; blah"   i want to pass these trhough a regex (^|\s)(\.?\d*)*(-[a-zA-Z0-9]*)?;    but i want to add 1.5;(and other values) as a known value, that isn't stripped by the regex.
15:56  Eduard: so guys, any ideas?
15:56  NET||abuse: so in those 2 strings, i would get either  "blah 1.5; blah" or "blah blah"
15:57  GrIM147: what are my best chances interacting with a barcode printer ?
15:57  frerich: I have a function which takes a string and determines whether the string should be discarded by the program or not. If it should be discarded, I would like to return a 'reason' (Which is ,one of three possible reasons). I thought I could let the function return an 'enum' value (Ok, Err1, Err2, Err3) but now I'm not so sure anymore. Does anybody have alternative suggestions?
15:57  NET||abuse: GrahamDumpleton, HID
15:57  exarkun: Eduard: Don't use strptime for that
15:57  frerich: FWIW I implemented an enum by doing 'class Result: Ok, Err1, Err2, Err3 = range(4)'
15:57  NET||abuse: uhh, ^^ was for GrIM147
15:57  exarkun: Eduard: Just instantiate datetime with some arguments
15:57  NET||abuse: GrIM147, barcode printer. sorry
15:58  exarkun: Eduard: You already have each component of the date as separate pieces of data
15:58  NET||abuse: GrIM147,i was thinking reader
15:58  Eduard: exarkun: and it will autoparse, all the arguments?
15:58  exarkun: Eduard: no
15:58  exarkun: Eduard: Parsing is what you do to strings
15:58  exarkun: Eduard: There's no reason to smash your data into a string just so you can parse it
15:58  GrIM147: NET||abuse, ahhh ok :P i got excited there , the reader is a plane and simple input device
15:58  exarkun: Eduard: datetime.datetime(year, month, day, hour, minute)
15:58  Eduard: ok, ty
15:58  exarkun: Eduard: no strings, so no parsing required
15:59  exarkun: Eduard: you _will_ have to do `int(strYear)`, `int(strMonth)`, etc
15:59  nosklo: exarkun: http://paste.pound-python.org/show/815/
16:00  nosklo: argh
16:00  nosklo: Eduard: http://paste.pound-python.org/show/815/
16:00  reg3x: hi friends...  im using os.read  to read an stdout  from a glib.spawn_async execution ...  i need a huge buffersize since the executed app is a find on the system ...
16:00  reg3x: therefore ... i dont know which should be the size of the buffersize to define when i call os.read
16:00  Eduard: nosklo: thank you very much
16:01  reg3x: for example im using os.read(stdout_fd, 1000000000)   but that number seems to be not enough...
16:01  reg3x: is there a way to put it dinamically ? not to limit it to a number
16:01  exarkun: reg3x: no, no, no.
16:01  Juhaz: reg3x, wait, what?
16:01  exarkun: reg3x: you need a far smaller buffer and multiple calls to read.
16:02  reg3x: exarkun,  .. how come ?
16:02  reg3x: im executing  argv = ["/usr/bin/find",ruta,"-name","* *"]   to find spaces on filenames
16:02  reg3x: then i read it with os.read(stdout_fd, 100000000)
16:02  reg3x: i made the call with  glib.spawn_async(argv,standard_output=True)
16:02  exarkun: reg3x: Why?
16:02  exarkun: reg3x: use os.walk instead
16:03  exarkun: reg3x: And process the results incrementally so you don't have to keep a gigabyte of strings in memory
16:03  reg3x: exarkun, but i have a gui that needs to display a progress bar
16:03  exarkun: reg3x: Guess what
16:03  nosklo: Eduard: note that I 1) removed tabs and used 4 spaces for indentation 2) removed calls of str() on objects that are already str() 3) removed calls of str() on print since print already calls str() for you 4) removed type prefix on variable names (hungarian notation) because it is ugly
16:03  exarkun: reg3x: os.read(fd, 1000000000) isn't going to let your GUI progress bar update.
16:03  reg3x: exarkun, someone told me spawn_async  was the best option for executin external apps and got get a freezed gui
16:03  exarkun: reg3x: Use os.walk
16:03  exarkun: reg3x: Don't spawn a process
16:03  exarkun: reg3x: os.walk won't freeze your GUI either
16:04  reg3x: exarkun,  i used to use os.popen
16:04  exarkun: reg3x: okay
16:04  exarkun: reg3x: don't use os.popen
16:04  exarkun: reg3x: don't use spawn_async
16:04  exarkun: reg3x: use os.walk
16:04  reg3x: and it was fine... but ive been told it was a terrible choice to use os.popen
16:04  nosklo: reg3x: you don't need to spawn a separate process to run "find"
16:04  exarkun: reg3x: os.walk os.walk os.walk os.walk os.walk os.walk
16:04  nosklo: reg3x: python has it builtin
16:04  GrIM147: :P
16:04  reg3x: ok exarkun .. thanks.. which would be then the case for spawn_async
16:04  Juhaz: IF you needed to use an external process, which you don't, like exarkun is trying to say,spawn_async would be a good alternative but even so it would be with small reads.
16:05  nosklo: reg3x: if you want to spawn another, useful thing, then besides using spawn_async, you have to register callbacks using glib.io_watch_add() to know when you can read without blocking
16:05  reg3x: oh ic nosklo
16:06  reg3x: so .... for using gnu tools the best choice is os.walk
16:06  reg3x: thanks  a lot nosklo
16:06  nosklo: reg3x: os.walk does what find does
16:06  nosklo: reg3x: that depends on the tool
16:06  nosklo: reg3x: spawn_async isn't the complete solution, it must be used together with io_add_watch and child_watch_add
16:07  nosklo: reg3x: but, if you want to call rm, use os.remove() or shutil.rmtree. If you want to call find, use os.walk(). etc
16:09  reg3x: i use  a lot of gnu/tools on my softwares nosklo .. most of the times are tools which use gnu a lot ...
16:09  reg3x: find sed awk
16:09  reg3x: cut
16:09  cwillu_at_work: reg3x, gnu/tools are mainly wrappers around existing ioctls and such
16:09  reg3x: i wish someday to substitute all those gnu tools .. for python modules... or such things... since it would be more efficient
16:10  cwillu_at_work: find/sed/awk/cut can all be done inside python.  It's not going to be the same syntax, but that's to be expected
16:10  reg3x: but we all know processin data with awk for example is waaayyy easy
16:10  lvh: Do we now?
16:10 * cwillu_at_work suggests learning python :p
16:10  exarkun: yea, that's always what comes to mind when I think of awk
16:10  exarkun: vast simplicity and ease of use
16:10  reg3x: well... sorry i mean... me and my friends know
16:10  lvh: exarkun: Right.
16:10  reg3x: yea awk is awesome to process data
16:10  cwillu_at_work: reg3x, you and your friends should read the python tutorial :p
16:10  exarkun: reg3x: what is your opinion on gawk vs nawk though
16:11  exarkun: reg3x: don't you find that schism troubles your dreams
16:11  reg3x: cwillu_at_work,  thats what we are doing... we are even creating a python group
16:11  reg3x: most of our developments are now beein done with python...
16:11  cwillu_at_work: reg3x, okay, but if you're just using python to shell out to awk, you're doing it wrong :p
16:11  pyNem: How does one import a python file in a "sibling" directory?
16:11  reg3x: yea i know cwillu_at_work  :/
16:11  pyNem: I want to import directions from quadrant_view.py (http://paste.pocoo.org/show/308418/)
16:12  reg3x: exarkun,  right
16:12  lvh: pyNem: preferably, you don't
16:12  lvh: pyNem: Put them in a package and use absolute imports
16:12  pyNem: lvh, how does one do that?
16:12  lvh: pyNem: If you can't do that for some reason, explicit relative imports
16:13  lvh: pyNem: Which part? Put things in a package?
16:13  reg3x: another thing im trying to learn is the best OOP practices
16:13  pyNem: lvh, yes. How does one put things in a package?
16:13  lvh: pyNem: http://docs.python.org/tutorial/modules.html#packages
16:13  reg3x: thank to the lord OOP in python is not like in C++
16:13  ccxCZ: C++ has OOP?
16:13  pyNem: lvh, nosetests will continue to work with packages right?
16:14  reg3x: yea ccxCZ object oriented programation on C++ is  sick compared with python
16:14  lvh: pyNem: Yes.
16:15  pyNem: lvh, so all i have to do is add another __init__.py at the rls level?
16:15  ccxCZ: exarkun: yes, awk does associate with simplicity and ease of use in my mind, but my mind is pretty twisted.
16:15  ccxCZ: pun half-intended
16:15  lvh: pyNem: I'd have to see what you're doing to be sure we're talking about the same thing, but yes.
16:16  reg3x: so.. m y friends.. is there a way to replace "  find " external execution  with python ?
16:16  cwillu_at_work: reg3x, os.walk
16:17  pyNem: lvh, the absolute import documentation says that "users" of the package can use the absolute import form
16:17  pyNem: lvh, i want to import from a file within the package itself
16:17  pyNem: lvh, http://paste.pocoo.org/show/308418/ should give you an idea?
16:18  lvh: pyNem: Yes, you *can* do that, but it's a bad idea
16:18  reg3x: oh cwillu_at_work .... .i thought os.walk was a substitution for external execution.. like  os.popen
16:18  pyNem: lvh, so what's a decent workaround in this case?
16:18  lvh: If you must, use explicit relative imports. import .module and import ..a.b.c
16:18  lvh: pyNem: An absolute import.
16:18  reg3x: but it is instead for working with files
16:19  cwillu_at_work: reg3x, no, it's for walking over a directory tree
16:19  lvh: pyNem: from packagename.blah import x, y, incrediblylongname as short
16:19  reg3x: oh ic cwillu_at_work
16:19  ccxCZ: lvh: what's wrong with relative imports (inside a package)?
16:20  reg3x: cwillu_at_work,  in the case that i need to run a binary code or whatever external to python... i was right using glib.spawn_async() ?
16:20  pyNem: I get an import error, if I do from rls.logic import directions (in the file quadrant_view.py) after a `touch __init__.py` in the rls directory
16:20  cwillu_at_work: reg3x, not really, no
16:20  cwillu_at_work: reg3x, but the situations where you need to call an external program should be fairly limited
16:21  lvh: ccxCZ: Dependant on more context, harder (in some cases impossible) for tools to follow and modify, requires being in a particular place in order to work which makes it harder to isolate code into a smaller test case...
16:21  lvh: ccxCZ: Wait, are you talking about relative imports in general, or explicit relative imports specifically
16:22  lvh: implicit relative imports have some extra problems, most of which involve shadowing names
16:22  ccxCZ: lvh: from .debug import someroutine
16:22  lvh: import foo # python does not know if you meant that relative or absolute
16:22  lvh: ccxCZ: That's explicit
16:23  ccxCZ: lvh: yes, I turn absolute imports on in all my code
16:24  phuzion: How can I list all of the items in a module?
16:24  lvh: ccxCZ: That's just ugly (opinion), annoying for humans to handle (isolating code), annoying for computers to handle (refactoring tools such as rope try, but sometimes they just can't do anything reasonable because it moved to a completely different package)
16:24  lvh: ccxCZ: It's not as fundamentally bad like implicit relative imports
16:24  lvh: phuzion: The documentation typically does that for you
16:24  pyNem: lvh, I get an import error if I do a "from rls.logic import directions" in the file quadrant_view.py (http://paste.pocoo.org/show/308420/)
16:25  lvh: phuzion: There's ways to fake it programmatically, but it's a bad idea, because they typically do not take into account what a module intended to expose as public API and what it didn't intend to expose
16:25  phuzion: lvh: What about just a quick way to go and do something like from foo.bar list all items or something like that?
16:25  lvh: phuzion: vars and dir do that, but they have the problems I've just mentioned
16:25  lvh: They list all names in module scope, which is most likely not what you want
16:25  ccxCZ: phuzion: if you install ipython, you can easilly use tab-completion for this
16:26  lvh: ccxCZ: ipython does it wrong too
16:26  ccxCZ: lvh: because there is no correct way
16:26  lvh: phuzion: (also, ignore ipython, use bpython instead: it does less annoying things to how python works, which turns out to very often break code for no obvious reason)
16:26  lvh: ccxCZ: not ignoring __all__ sounds like a marked improvement over ignoring __all__
16:27  lvh: ccxCZ: Ignoring unmodified imports sounds like a marked improvement over not ingoring unmodified imports
16:27  lvh: ccxCZ: When something imports sys, it's *very* unlikely they meant to export sys as public API
16:27  ccxCZ: it does ignore __all__? never noticed :-|
16:27  lvh: ccxCZ: Sometimes! Sometimes it doesn't, too
16:28  lvh: Most of the time it seems to.
16:28  lvh: I've seen people use it where it doesn't, but more cases where it does, so I'm guessing it's configuration.
16:28  lvh: Either way, the reasons for using bpython over ipython remain
16:28  ccxCZ: bpython seems kind of weird to me, but that's probably because I'm not used to it
16:28  lvh: ccxCZ: What's weird about it
16:29  lvh: (Bonus: the code is not a gigantic dung heap, but I've been told this is slowly being fixed in ipython)
16:30  Kaedenn: lvh: By fixed you mean made into a proper gigantic dung heap?
16:30  Kaedenn: :)
16:30  lvh: Kaedenn: Likely ;-)
16:30  Kaedenn: Ahaha.
16:31  ccxCZ: lvh: quick question, how do I get docstring for arbitary object?
16:31  lvh: ccxCZ: help(o)?
16:31  lvh: Or, use the autocomplete boxes, which by default is activated for calls
16:31  reg3x: friends.. i found a substitution for external call to 'find'  ... is the glob module. which takes a filename pattern and returns a list of all the filenames that match that pattern
16:31  reg3x: yay!!
16:32  ccxCZ: lvh: I would definitely miss IPython's ? and ?? features
16:32  lvh: ccxCZ: http://bpaste.net/show/12464/
16:32  lvh: wide terminal is wiiiiiiiide
16:33  lvh: ccxCZ: Those features unfortunately break perfectly okay code
16:33  ccxCZ: yes, that's why I said arbitary, not just calls
16:33  lvh: ccxCZ: If they can show me a way to do it that doesn't break working code, I'll use it
16:33  lvh: ccxCZ: well, it doesn't do that
16:34  lvh: ccxCZ: Perhaps you should submit a ticket so that one day it might!
16:34  lvh: Doesn't sound like a huge feature request
16:34  lvh: It already does it for (, now it just has to for defined names
16:45  Epona: ImportError: No module named tkinter
16:45  Epona: using 3.1.3
16:45  Epona: someone help :|
16:47  exarkun: Epona: Python is case-sensitive
16:48  exarkun: Aw, darn, they renamed it.
16:48  exarkun: Epona: Maybe you don't have TCL/TK installed.  Where'd you get your Python from?
16:49  Epona: the python site
16:50  exarkun: And then you compiled it yourself?  Or what?
16:50  Epona: the latest python 3 for windows
16:50  Epona: but, not the beta
16:51  ccxCZ: Epona: iirc windows installer asks you if you want to install TCL/TK
16:51  Epona: o.o
16:51  ccxCZ: atleast that was true with 2.6.something, but I doubt they changed it
16:52  Epona: it works fine with 2.7
16:52  Epona: Tkinter is with 2.7
16:52  Epona: and then
16:52  Epona: according to the site
16:52  Epona: tkinter is for 3.1
16:52  Epona: but, chaning the case does nothing to the code
16:52  Epona: still gives error
16:53  exarkun: Epona: Yea but did you tell the 3.1 installer to include it?
16:53  Epona: no option
16:53  Epona: ok
16:53  Epona: I repaired 3.1.3
16:53  Epona: now it seems to work
16:53  Epona: strange
16:54  ccxCZ: exarkun: is there integration for builbot-slave / windows services?
16:56  exarkun: ccxCZ: yes
16:56  ccxCZ: oh, I foud the trac page already
16:57  ccxCZ: thanks
17:04  sickn3ss: Can someone help me here ? I'm trying to read a .txt file than analyze each letter from it how could I do that ?
17:05  exarkun: sickn3ss: Do you know how to read files?
17:05  sickn3ss: exarkun, well yea open('file).read()
17:05  exarkun: sickn3ss: Do you know how to iterate over each byte in a string?
17:06  revolve: nosklo: Thanks for recommending werkzeug last night. it's insanely brilliant (and for pointing me towards mako in the process!)
17:06  sickn3ss: exarkun, yea this might be the problem
17:06 --- unreal_ is now known as unreal
17:06  Neezer: I wrote a very simple script.... print "hello world"
17:07  inkjetunit: well done.
17:07  exarkun: sickn3ss: Here's a hint, use a for loop
17:07  Neezer: when I run it I get an error.... Warning: unknown mime-type for "Hello world!" -- using "application/octet-stream"
17:07  sickn3ss: so I open a file open('file').read() than I read each line from that file file.readlines
17:07  exarkun: Neezer: don't... use... CGI...
17:07  sickn3ss: exarkun, well I could use a for loop for the lines but not each charracter from them
17:07  sickn3ss: right ?
17:07  revolve: Neezer: try text/html
17:07  papna_: Neezer: You're not using CGI right.
17:07  papna_: Neezer: Don't use CGI at all.
17:07  revolve: unless you want to
17:07  papna_: Neezer: Are you building some sort of web site/application?
17:07  Neezer: exarkun....as you can tell, i'm new at this....what is CGI?
17:07  exarkun: sickn3ss: That doesn't make sense.  You read the entire file, and then you read lines from the file?  How could there be lines in the file after you read the entire file?
17:08  Neezer: I am just using the command shell.
17:08  papna_: revolve: Why would you want something like that?
17:08  Neezer: with ubuntu.
17:08  exarkun: Neezer: Oh!
17:08  papna_: Neezer: Are you sure you're not doing something weirder?
17:08  revolve: Neezer: common gateway interface (serve the output of scripting languages like perl or php from a webserver)
17:08  exarkun: Neezer: You forgot "#!/usr/bin/python" at the top, then.
17:08  sickn3ss: exarkun, oh yea, so after I read the entire file I would do something like for letter in file print letter ?
17:08  revolve: the python equivalent is WSGI
17:08  exarkun: Neezer: Or `python` in front of the name of the file you wrote.
17:08  revolve: (webserver gateway interface)
17:08  exarkun: Neezer: Sorry about the incorrect CGI guess.
17:08  exarkun: Neezer: You ran a shell script that starts with the print(1) program to talk to your printer.
17:08  Neezer: exarkun, can I use that even if the file is not in that location?
17:09  papna_: Neezer: Can you show us exactly what you're doing?
17:09  exarkun: Neezer: well, that's where it belongs.  but if it's somewhere else, put the actual path.
17:09  revolve: papna_: for really simple things that you can deploy once and completely forget about, like http://repulsive.wasteofpixels.com/listen.pls or http://repulsive.wasteofpixels.com/techlology.py
17:09  Neezer:  My first Python!!!
17:09  Neezer: # 22 December 2010
17:09  Neezer: print "Hello world!"
17:09  exarkun: sickn3ss: Sounds good!  Give it a try.
17:09  Neezer: there is a # before the first line.
17:10  sickn3ss: exarkun, I will :) but the thing is my .txt files contains names on each line I need the name than every character from the name
17:10  papna_: Neezer: If you don't clear up the problem, pastebin your shell session.
17:11  Neezer: papna_, Thanks, I may need to do that....
17:16  sickn3ss: exarkun, ping :)
17:17  exarkun: sickn3ss: How did your try go
17:18  sickn3ss: exarkun, well it did what it was supposed to do but I have a little issue
17:18  sickn3ss: my .txt file contains names, and I want something if the name contains "a" replace it with "1" or something like this and than write it in another file
17:18  sickn3ss: any hints on this ?
17:19  ccxCZ: sickn3ss: .replace() on string
17:21  nacitar: http://codepad.org/lfilnfSA <== an explanation of something simple I'm trying to do but stumbling over
17:21  nacitar: basically, has to do with managing keyword arguments in a certain way
17:21  lostern: When using easy_install, do LIBRARY_PATH and C_INCLUDE_PATH have any effect?
17:22  sickn3ss: ccxCZ, sweet that worked
17:23  sickn3ss: it there some way in python to point to lower case characters and upper chase characters ?
17:23  Purren: for Py3k, what good SQLite databases are there?
17:23  Purren: sorry
17:23  Purren: SQLite libraries
17:23  nacitar: Anyone that can help me with my fundamental issue (likely a 15 second thing for someone who is acquainted with python)
17:25  cwillu_at_work: Purren, import sqlite? :p
17:25  exarkun: nacitar: just ask
17:25  cwillu_at_work: it's in the standard libraries afaik
17:25  Purren: Is that the most efficient way to work with sqlite?
17:25  cwillu_at_work: exarkun, he did :p
17:25  nacitar: exarkun: I put the link a few lines up already, http://codepad.org/lfilnfSA
17:25  cwillu_at_work: Purren, pretty much, yes.
17:26  nacitar: exarkun: keyword arguments related; explanation within.
17:26  Purren: ok
17:26  ccxCZ: nacitar: first, naming functions with capital letters is pretty much against any naming convention
17:26  ccxCZ: nacitar: second, reading tutorial might help
17:27  ccxCZ: nacitar: third, myvar['key'] = value
17:27  cwillu_at_work: nacitar, fourth, add ccxCZ to your ignore list for a couple minutes :p
17:27  ccxCZ: nacitar: Bar(**myvar)
17:28  kerio: don't use global variables; if you want to keep state, use a class
17:28  cwillu_at_work: nacitar, "create it with that entry", for what purpose?
17:28  cwillu_at_work: you all fail at getting to the underlying problem :p
17:28  nacitar: cwillu_at_work: this isn't real; it's a recreation of something for demonstrative purposes
17:28  nacitar: i'm just trying to extend SCons a bit, heh
17:29  cwillu_at_work: nacitar, I understand that, that's why I'm yelling at everyone else :)
17:29  cwillu_at_work: nacitar, what I mean is, are you creating it just for that function, or are you hoping to pass it back to somebody to use?
17:30  cwillu_at_work: nacitar, it sounds like you should just use a simple default arg:  def foo(somekey=None):
17:30  cwillu_at_work: and then:  if somekey is None:  somekey = someotherval
17:30  nacitar: cwillu_at_work: basically, there's a function already taking keyword arguments... and I want to create my own function to replace that one, that works identically, except that if you already specify that keyword argument, I need to append mine to the end of your map (hash?)
17:30  cwillu_at_work: which map?
17:30  cwillu_at_work: oh, okay
17:30  cwillu_at_work: so, you'd do basically the same thing
17:30  cwillu_at_work: (one sec)
17:30  nacitar: and i was thinking i'd have to kw.has_key to check if it exists, then create it if not, and if it does append to it.
17:31  nacitar: but that approach seems like it's a poor one
17:31  nacitar: not knowing python well, I'd bet there's a significantly more elegant way than mine.
17:31  Spira: try: except?
17:32  cwillu_at_work: nacitar, http://codepad.org/9y2Ib9Ja
17:32  cwillu_at_work: note that we don't use def foo(myvar={}), because then you'd have a shared dict across every call that didn't supply a dict
17:32  cwillu_at_work: also be aware that as written, this will modify the passed in dict, which is a bit rude if not documented
17:33  nacitar: ah
17:33  cwillu_at_work: (i.e., it might make more sense to copy it first, and work with the copy)
17:33  cwillu_at_work: myvar=dict(myvar) would do that
17:33  nacitar: oh that actually works well for my example, with setdefault... i hadn't considered that
17:34  nacitar: (aka, didn't know of it)
17:34  nacitar: and the default keeps me from having to .has_key or try except... awesome.  thanks man :)
17:35  cwillu_at_work: ccxCZ, kerio, the pastebin he used actually executes the code in a python interpreter so you can see the output;  in this case, global variables make it a bit easier to follow what's going on, kinda sorta
17:35  cwillu_at_work: nacitar, you'd usually use "key in foo" instead of "foo.has_key(key)"
17:36  sickn3ss: anyway I can make range for letters ? like I to from 1..10 ?
17:36  Purren: Is there a way to manipulate databases with Sqlite3 without writing SQL?
17:36  cwillu_at_work: sickn3ss, sorry, letters?
17:36  Habbie: purren, sqlalchemy
17:37  cwillu_at_work: sickn3ss, did you want 'a', 'b', 'c', or did you mean numbers?
17:37  Purren: Habbie: thanks!
17:37  sickn3ss: cwillu_at_work,  I want a,b,c,d ...
17:37  cwillu_at_work: sickn3ss, not that I know of off the top of my head;  why did you need such a thing?
17:37  hopthrisC: sickn3ss: consecutive letters of the alphabet?
17:37  sickn3ss: hopthrisC, exactly
17:38  hopthrisC: sickn3ss: there is string.lowercase
17:38  sickn3ss: ccxCZ, ping
17:38  hopthrisC: sickn3ss: if you want a to z, you can use list(string.lowercase), or even tuple()
17:38  hopthrisC: sickn3ss: otherwise you can take a slice
17:38  sickn3ss: hopthrisC, nice :D thank you
17:39  cwillu_at_work: as a matter of fact, you can iterate over it directly, which is why list(string.lowercase) works :)
17:39  ccxCZ: sickn3ss: help(ord)
17:39  hopthrisC: ccxCZ: bah.
17:40  sickn3ss: ccxCZ, the .replace() worked like a charm but only the first letters can I make a replace with multiple arguments somehow ?
17:40  ccxCZ: sickn3ss: also string module has common sets of letters
17:40  nacitar: cwillu_at_work: and if I want to forward my existing args and kw from def foo(*args,**kw) to another func bar, do you just bar(bla, bla, args, kw) ?
17:40  ccxCZ: sickn3ss: yes, there's some tr equivalent
17:40  cwillu_at_work: nacitar, no, *args, **kargs again
17:40  sickn3ss: ccxCZ, any hints ? :D
17:40  cwillu_at_work: nacitar, be aware that things can get a tiny bit complicated though if you mix actual positional and keyword args with * and **
17:41  ccxCZ: sickn3ss: .translate() (there is string.maketrans to ease this)
17:42  ccxCZ: sickn3ss: http://docs.python.org/library/string.html#string.maketrans
17:42  sickn3ss: thank you ccxCZ
17:46  ivenkys: afternoon folks : Is there a way of "re-importing" a module in the Python interpreter ?
17:46  Kaedenn: ivenkys: Sure, if you have time.
17:47  ivenkys: Kaedenn: care to expand on that dear sir
17:47  Kaedenn: ivenkys: what's the problem?
17:47  ccxCZ: ivenkys: reload(), but it isn't very clean
17:47  Kaedenn: aha
17:47  Kaedenn: sorry, I read "reimplement", not "re-import", sorry
17:48  Kaedenn: ivenkys: the best way is to restart the interpreter.
17:48  ccxCZ: ivenkys: as in already instantiated objects keep their class
17:48  ccxCZ: ivenkys: what Kaedenn said
17:48  Kaedenn: ivenkys: however, a quick-and-dirty hack (that usually breaks things) is by using reload()
17:48  ivenkys: drat
17:48  ivenkys: so its not essentially a "live" environment
17:48  Kaedenn: however, as ccxCZ noted, variables already bound to stuff from the module keep their old types and information, so they won't notice the reload
17:48  Kaedenn: ivenkys: correct
17:48  tech2: Hi all, wondering if anyone has recommendations for accessing usb devices via python under linux. Most likely at a relatively low level. I used to just map them as a tty and access with simple open/read/write but am currently looking at pyUSB (sadly just the earlier pre-1.0 version due to use of ubuntu hardy), any recommendations?
17:49  Kaedenn: tech2: a while back I was interested in that, and pyUSB seems to be the best choice, although I couldn't get it working reliably.
17:49  ivenkys: Kaedenn: ccxCZ : Many thanks gents
17:49  Kaedenn: tech2: maybe the Twisted library has something? I'm not sure
17:49  Kaedenn: ivenkys: sure
17:50  Neezer: when i use "import random" I am getting an error..."File "/home/nathan/bin/random.py", line 5, in <module>
17:50  Neezer:     import random"
17:50  tech2: Kaedenn, damn :/ Thanks. I doubt I could cleanly use the twisted stuff as Iḿ already working in a gtk mainloop and integrating the reactor there is a bit more work than I have time for right now. Guess Iĺl have to wait until I get my hands on the device and try out pyusb, thanks.
17:50  Kaedenn: Neezer: that isn't the error, that's the traceback. what's the error?
17:51  sickn3ss: ccxCZ, pm ?
17:51  nacitar: cwillu_at_work: you mean if the caller passed an intermixed ordering of args and keywords?
17:51  Kaedenn: tech2: other than that, I don't know. maybe google has some information? :(
17:51  Neezer: Kaedenn, 'module' object has not attribut 'randint'
17:51  cwillu_at_work: nacitar, basically
17:51  Kaedenn: Neezer: please paste your code to http://codepad.org and give us the link
17:51  Kaedenn: Neezer: namely, the import line and the line of code using random.randint
17:52  nacitar: cwillu_at_work: right... because it pulls out all args in order and puts it into that list, and all keywords the same... so if they are mixed then you will forward it on in a different order, aye?
17:52  tech2: Kaedenn, yeah, searching for python and usb seems a little limited :D Perhaps why the codebase uses this somewhat antiquated method at the moment.
17:52  cwillu_at_work: nacitar, no, you'll get an error if you try
17:52  nacitar: cwillu_at_work: oh good then. :)
17:52  cwillu_at_work: nacitar, which will come and go depending on the other args, and the function signatures
17:52  Neezer: Kaedenn, http://codepad.org/VcU5jE4u
17:52  Kaedenn: tech2: then your best bet is to drop down to C and write the interfacing code in that language, and then bridge the two using either Cython or something equally sexy
17:53  Kaedenn: Neezer: that works...?
17:54  Neezer: Kaedenn, it looks like it is working properly on codepad, but not on my shell when I try to run the script.
17:54  Kaedenn: Neezer: that code does not have a problem
17:54  Kaedenn: Neezer: what OS and Python version are you using, and are you using IDLE?
17:54  TFKyle: Neezer: I'm going to bet it's because you named your script random.py, and thus when you import random it tries to import itself
17:54  bahamas: how can i extract some decimals from sqlite without turning them into floats?
17:54  Kaedenn: aha
17:54  Kaedenn: that is the problem, yes
17:54  zaytsev: hi! did anyone successfully override python stderr descriptor inherited from the C shared library? I am doing some os.dup black magic which works for stdout, but not for stderr
17:54  Kaedenn: Neezer: please don't name your modules the same thing as the modules in the Python stdlib :)
17:54  Kaedenn: Neezer: you need to name your module something other than "random.py"
17:54  tech2: Kaedenn, excuse me while I leap for joy ;) Yeah, but, since pyusb is kinda doing that with libusb/openusb already I figured it'd be a better option to stick with something at least vaguely well tested. Thanks for reaffirming my worries though, it's good to know that I'm not just losing my search skills.
17:54  Neezer: Kaedenn, I'm using ubuntu. I am pretty sure it is 2.6...
17:54  Kaedenn: Neezer: yeah, it's the name of your module that's a problem :)
17:54  Neezer: Kaedenn, TFKyle, thanks for the heads up! I appreciate it. I thought I was going crazy!
17:54  Kaedenn: xD
17:54  Kaedenn: Neezer: happens to the best of it
17:55  Kaedenn: Neezer: s/it/us/
17:55  Kaedenn: I can type, I swear.
17:55  zaytsev: it's stupid because sys.stderr.fileno() actually returns 2, but what works for 1 does not seem to work for 2 :(
17:55  tombee: If i have a list of tuples (x,y) that are sorted, but I want to move tuples that have y==1 to the front, how can I do this efficiently?
17:55  kerio: it never happened to me :<
17:55  Kaedenn: tech2: anytime :) there really needs to be a better USB interfacing module for Python. maybe someday when I do hardware again I'll look into writing one
17:55  kerio: does that mean i'm not the best?
17:55  tech2: tombee, invert the tuples, sort them, revert the tuples.
17:56  zaytsev: on the other hand, why I am going for os is that sys / cstringoi doesn't seem to work with foreign code line wrapped fortran stuff
17:56  tombee: tech2, sort them just where y==1 ?
17:56  tech2: Kaedenn, the latest pyusb looks "okay", and openusb seems relatively sane, it's just that I don't have access to that for now.
17:56  kerio: tombee: sorted(yourlist, key=lambda foo: foo[1] != 1)
17:56  Neezer: Kaedenn, TFKyle, thanks for the help....it is working just fine now.
17:56  Kaedenn: tech2: download a local revision of openusb and build it yourself...?
17:56  tech2: tombee, maybe I should have asked this earlier, why do you want the y==1 ones at the front?
17:57  tombee: tech2, using python-constraint, and there's a special case that's being missed
17:57  tech2: Kaedenn, yeah, more to add to our locally maintained packages I guess, no great stress, just a little more to look after.
17:57  tombee: i.e. when there's a variable that only has 1 value in it's domain, therefore it is certain
17:57  tombee: so just trying to tweak that package
17:57  Kaedenn: tech2: it's just a 'svn co' and a './configure && make'
17:58  Kaedenn: tech2: with --prefix on ./configure to your project directory, and then a make install. it should be somewhat trivial
17:58  kerio: tombee: what can y be?
17:58  tombee: 1 .. x
17:58  tombee: :)
17:58  binbrain: hoping somebody can help me. how does virtualenv decide which py files in python/lib to put into the new env's python/lib dir?
17:58  binbrain: I noticed files missing
17:58  tech2: Kaedenn, yeah, and the debian package I'd have to build and maintain, the integration into the build process for our system, the packaging for the chroots for dev and test, etc. etc. (it's never just a small thing)
17:58  tombee: usually it'll be something like 1 through 50
17:58  tombee: or something
17:58  kerio: oh ok
17:59  kerio: reversed(x) for x in sorted(reversed(x) for x in yourlist))
17:59  Kaedenn: tech2: ...point taken. well, unfortunately, a dependency is a dependency. good luck :)
17:59  tech2: thanks though
18:00  kerio: or... sorted(yourlist, key=reversed)
18:00  kerio: not sure if it'll work
18:00  tombee: kerio, it's sorted fine as it is
18:00  kerio: does reversed return a tuple or an iterable?
18:00  tombee: I just want to push y==1 to the front
18:00  tech2: tombee, if the y==1 is a special case why not just pull it out of the list and work on it separately?
18:01  tombee: the package isn't very well written :S
18:01  tech2: tombee, then kerio's solution earlier looks to be the best bet
18:01  Taos: Anyone know why pip is erroring with cant find vcvarsall.bat when building a C module?
18:05  tombee: works great,cheers kerio
18:06  tech2: tombee, what's the package again?
18:06  tombee: python-constraint
18:06  tech2: thanks
18:06  kerio: tombee: it's probably a bit inefficient though
18:06  tombee: line 460-480ish
18:06  neataroni: can you use wildcards and such with .replace()?
18:07  tombee: tech2, I believe it should assign values to variables where domain size is 1 first
18:07  tombee: that way you can propagate constraints, and further reduce the domains of constrained variables
18:07  tombee: instead of just 'guessing' at a value straight off the bat
18:08  tech2: neataroni, re.sub is probably what you're after?
18:08  tech2: tombee, I guess I don't know enough about it to provide a useful insight, sorry.
18:09  neataroni: tech2: ok, yea, looks like it
18:09  tombee: Yeah and I don't know enough about Python to know whether it's doing this in another sneaky way
18:09  tombee: but my guess is that it chooses the variable with the largest degree (actually smallest because they negate it)
18:09  tombee: and then must use forward checking to find which value goes there maybe?
18:10  TheCommieDuck: How can I use Foo(1,'string', 3) as a function object?
18:10  tech2: tombee, for all y that are 2, should they immediately follow the y==1 entries?
18:10  TheCommieDuck: *object
18:10  TheCommieDuck: *just plain object
18:10  tombee: tech2, nope :)
18:10  tombee: should be sorted by x, unless y==1
18:10  tech2: that's atrocious :/
18:10  tombee: it's just so I can force their algorithm to process tuples with y==1 first :p
18:11  tombee: tech2: I mean if you're interested, I could send you my example
18:12  tech2: tombee, best option would be to sort them that way from the start, which would just require a more complex cmp argument to sorted
18:12  neataroni: tech2: ok, im trying to turn 'blah (blahh)' into 'blah'... is my expression something like ' \(*\)'?
18:12  tombee: tech2 well, it does lst.sort()
18:13  tombee: and below it I use kerio's line of code
18:13  neataroni: tech2: whoops forgot the dot. thank you
18:13  tombee: so if there's a better way of sorting them to begin with, then fair enough
18:13  kerio: tombee: mine should work regardless
18:13  tech2: neataroni, no problem :)
18:13  kerio: it sorts by y first, then x
18:13  tombee: ah so it does kerio, great, thanks
18:15  reg3x: friends. what is a "callback"?  is it a type of method ?
18:15  aminpy: does anybody have a link for decorators in python?
18:16  ccxCZ: reg3x: type of usage of any callable (methods & functions included)
18:16  ccxCZ: aminpy: docs.python.org
18:17  reg3x: what is the difference between methods & functions ccxCZ ? arent  both : def something(args):
18:17  lvh: reg3x: They're defined in the same way, yes.
18:17  ccxCZ: reg3x: latter are bound to some object/class
18:18  ccxCZ: eh, the former actually
18:18  lvh: Except staticmethods, for some reason ;-)
18:18  reg3x: ic
18:18  reg3x: class has methods..  does class also has functions   ?
18:18  tech2: tombee, possibly something like this? sorted(x, key=lambda (x, y): (0, x) if y==1 else (x, y))
18:19  tombee: kerio's method works I think :)
18:19  xeer: performing a comparison match on two strings with .encode("hex"). they both display with the same hex value but the comparison check fails. what's the deal?
18:19  tech2: tombee, which one did you use in the end?
18:19  kerio: xeer: what check?
18:19  kerio: "is"?
18:20  xeer: kerio: results are with the same with is and double equals
18:20  sickn3ss: is there something like str.islower for uppercase characters ?
18:20  tombee: sorted(lst, key=lambda x: x[1] != 1)
18:20  tech2: tombee, yes, but then you're sorting the list twice
18:20  lvh: sickn3ss: Unsurprisingly, isupper
18:21  tombee: nope, i removed the list.sort() :)
18:21  tombee: and I think that method seems to work otherwise? :s
18:21  sickn3ss: lvh, hmmm yea this was a st@pid question
18:21  tech2: tombee, not with my testcase here
18:22  tech2: tombee, I end up with [(2, 1), (3, 1), (2, 2), (2, 3), (1, 2), (4, 2)] from the original x = [(2,2),(2,3),(1,2),(2,1),(3,1),(4,2)]
18:22  Shapeshifter: I don't understand what this guy is doing in his code on this line: return "%%%02X"%ord(c) What is this? c apparently is a single character. Also, I need to translate this to python 3 and 2to3 doesn't seem to do it automatically.
18:22  reg3x: i found the answer  ccxCZ  methods are  inside of a class therefore It is implicitly passed the object for which it was called .  methods also can operate with the data contained  within the class
18:22  tombee: hang on a sec tech2, I'm just building a test case for my example here :)
18:22  reg3x: functions are just piece of code called by  name
18:23  tombee: and then I can try the methods out
18:23  Shapeshifter: Is this the old string formatting syntax?
18:24  tech2: Shapeshifter, that's 2-char prefixed uppercase hex with a zero leader for values less than 10 (hex), the whole thing is prefixed by %
18:24  tech2: Shapeshifter, the format isn't _that_ old, what would you use in its place?
18:24  Shapeshifter: tech2: well I'm messing with python 3 atm. Is that still valid in python 3?
18:25  ccxCZ: should be
18:25  tech2: did Python 3 require that the % rvalue actually be a tuple?
18:25  TheCommieDuck: Shapeshifter: Out of interest, is that rgb->hex?
18:25  ASUchander: Is anyone aware of a python script/class that solves the bin packing problem (figuring out how many boxes of varying size can fit into a set of large boxes efficiently?)
18:26  Shapeshifter: I have no clue, really, what that is. It's from a parser that should be able to convert bbcode to HTML. Here's the snippet around that line: http://pastie.org/1398375 My problem is that python says "TypeError: ord() expected string of length 1, but int found"
18:26  Shapeshifter: I think it's url-encoding strings
18:26  ASUchander: Like a decreasing best fit solution of some sort...
18:26  tech2: Shapeshifter, then there's nothing wrong with that line, c should be a single character but you're passing a number in
18:27  tombee: tech2, ok you're right yes it wasn't working, just had to get a test case working
18:27  Shapeshifter: tech2: the function 'percent_encode(s)' is called here: self.url = percent_encode(url.encode('utf-8', 'replace'))
18:27  tombee: however tech2 that line you pasted moves the y==1 to the right handside rather than left? :)
18:28  tombee: so != 1
18:28  tombee: :)
18:28  tech2: tombee, sorted(x, key=lambda (x, y): (0, x) if y==1 else (x, y)) gives me [(2, 1), (3, 1), (1, 2), (2, 2), (2, 3), (4, 2)]
18:29  tombee: [(-4, 6, 'v1'), (-3, 6, 'h1'), (-3, 6, 'v2'), (-2, 6, 'h3'), (-2, 6, 'h4'), (-2, 6, 'v3'), (-3, 1, 'h2')]
18:29  tombee: getting my 1 at the end
18:29  tech2: tombee, I thought you said they were len2 tuples, sorry. I'd have written it differently otherwise
18:30  tombee: Hey yeah that's my fault! :)
18:30  tombee: I've just updated it and it's working now
18:30  tombee: [(-3, 1, 'h2'), (-3, 1, 'v2'), (-2, 1, 'v3'), (-4, 4, 'v1'), (-3, 2, 'h1'), (-2, 4, 'h3'), (-2, 4, 'h4')]
18:30  tombee: etc. :)
18:30  tech2: cool
18:31  tombee: maybe I could write a test somehow that proves this, and then submit a patch or something
18:31  tech2: tombee, always good to have test-cases for your code anyway
18:31  tombee: yeah this is the library's code unfortunately!
18:32  tombee: for a problem of size 7, my new heuristic does it in 7 steps
18:32  tombee: the old way does it in 8 because it just guesses
18:32  tombee: I'm sure for a more difficult problem, it would cause a lot of trouble, due to backtracking :)
18:33  tombee: plus, my design has a certain expected behaviour, that I would like to keep
18:33  tombee: rather than this unexplainable guessing :)
18:33 --- kanor is now known as tyrus
18:34  TheCommieDuck: Sorry.
18:34  TheCommieDuck: But can I do that somehow? [Have a function object with parameters]
18:34 --- tyrus is now known as kanor
18:34  Shapeshifter: tech2: it was a problem with the string, it used to be a string, now type(s) was bytes, hence the int.
18:35  Shapeshifter: fixed now
18:35  tech2: ah, I was trying to work out how that would come about, sorry, really wasn't ignoring you :(
18:35  TheCommieDuck: So Foo(3,'string', 34) as an object, then I can do object() and it'll call Foo with those parameters.
18:35  Buttons840: TheCommieDuck: what is a function object with parameters?   sounds like any old function to me, or perhaps a function created from a factory?
18:35  TheCommieDuck: Buttons840: I meant a function object which I don't have to resupply parameters to.
18:35  kerio: TheCommieDuck: ooh, a partial
18:35  kerio: it's in functools
18:35  tech2: TheCommieDuck, functools.partial makes that kind of thing relatively easy to set up, but perhaps the way in which you're describing it means you want something else?
18:36  tech2: dammit kerio :P ;)
18:36  Buttons840: TheCommieDuck: sounds like parater defaults to me; i'm interested in these partial functions though, never heard of em
18:38  MatToufoutu: TheCommieDuck, so, you want to instanciate an object and then call it as a function?
18:38  MatToufoutu: if yes, you should look at the __call__ method
18:39  Buttons840: so, it looks like functools.partial is just a function factory?
18:40  MatToufoutu: TheCommieDuck, look at this snippet: http://www.ideone.com/8bWr7
18:42  TheCommieDuck: Sorry, I was called away unexpectedly.
18:42  TheCommieDuck: MatToufoutu: No, I'm afraid I was being confusing. I think functools.partial is what I need. ;D
18:42  TheCommieDuck: Thanks! :D
18:42  MatToufoutu: ok ;)
18:43  COm_BOY: I am having problem with the following code
18:43  COm_BOY: http://pastebin.com/nD8g85ye
18:43  infobob: http://paste.pound-python.org/show/816/ (repasted for COm_BOY)
18:43  COm_BOY: it has some problems related to identientation , but i cant figure it out
18:43  sickn3ss: ok ok issue again, I've managed to read every character from my .txt file and change the lower case characters and now I want to write them into a file
18:44  COm_BOY: when i execute it , it gives me error relating to idententiation
18:44  sickn3ss: the problem is they write themselfs like a newline a
18:44  Buttons840: http://www.ideone.com/VakOc  what is "whitespace"?
18:44  RichW: How do I get getopt to handle spaces in arguments like: --foo=foo bar
18:44  RichW: ?
18:46  reg3x: friends i have an issue with os.walk   maybe someone could help me.  when i list number of directories with os.walk  the output is  4093 dirs .. when i use gnu tool " find"  the output is 4086 dirs
18:46  reg3x: does anyone knows what this happens with os.walk ?
18:46  Buttons840: RichW: that has to be handled from the shell rather than the python program i think:  --foo="foo bar"
18:47  reg3x: my source code is in here http://python.pastebin.com/bdNwjzEA
18:47  infobob: http://paste.pound-python.org/show/817/ (repasted for reg3x)
18:47  Buttons840: reg3x: just a guess, but maybe os.walk counts . and .. as directories while find does not?
18:47  ccxCZ: reg3x: print the names in python and use diff to compare outputs
18:47  reg3x: print them to a file ?  ok ccxCZ
18:47  reg3x: brillant
18:48  RichW: Buttons840, Try this code: optlist, args = getopt.getopt('--test="foo\ bar"'.split(), '', ['test='])
18:49  RichW: Buttons840, I am not using it for parsing args from the program, I have a different use for it :)
18:49  Taos: I cannot believe that lvh, dash, habnit, or papna are not here
18:50  TheCommieDuck: Taos: WHat about kerio or nosklo?
18:50  Taos: Them too
18:50  kerio: yeah, i'm totally not here
18:50  Taos: YAY
18:50  Taos: :D
18:50  Buttons840: RichW: well, i don't know much about getopt, but i'll learn something new i guess :)
18:50  kerio: (i'm also not good at python, so why the hell was i mentioned)
18:51  RichW: Buttons840, I have just found out that regex is better at this :)
18:52  Taos: Im trying to work out a way to discover the default gateway on a network that is both win/unix compatible
18:52  TheCommieDuck: kerio: Oh, I thought you were. My bad. :P
18:53  Buttons840: RichW: perhaps, what is your "different use for it"?
18:53  kerio: Taos: why would you need to?
18:53  RichW: Buttons840, I found this: http://stackoverflow.com/questions/1644362/best-way-to-parse-a-line-in-python-to-a-dictionary
18:53  neataroni: how do i delete all occurences of a value in a list?
18:53  RichW: Buttons840, and that seems to cope with spaces better from what ive read (and im testing it now)
18:54  RichW: Buttons840, oops, I am using it to parse BBCode arguments :)
18:55  bahamas: neataroni: [i for i in your_list if i != value]
18:55  Taos: kerio, because I want to?
18:55  neataroni: bahamas: nice
18:56  kerio: Taos: http://pypi.python.org/pypi/pynetinfo/0.1.9
18:56  kerio: netinfo.get_routes()
18:56  Buttons840: RichW: are you the asker or the answerer of that question?
18:56  Taos: kerio, unfortunatly that can't be used on win32
18:56  Taos: D:
18:56  RichW: Buttons840, neither, I just found it on google
18:56  Buttons840: just practicing?
18:57  bahamas: i'm using the csv module and for some reason the line terminator is \r\n\r\n instead of just \r\n as it is returned by csv_writer.dialect.lineterminator. any idea what's the cause?
18:58  Buttons840: bahamas: show some code
18:59  kerio: Taos: i doubt windows has a "route" concept
19:00  Taos: mmm
19:01  ccxCZ: kerio: any IP capable needs routes
19:01  arkanes_: kerio: windows is able to do IP, so yes, it has routes
19:02  ccxCZ: kerio: and windows even has somewhat similar executable to work with that
19:02  aminpy: http://dpaste.com/289530/
19:02  aminpy: thid code has a output
19:02  aminpy: Hello world!
19:02  aminpy: thid*
19:05  Taos: I found a way using win32api
19:05  Taos: socket.gethostbyname_ex(win32api.GetComputerName())
19:09  the_isz: hi everyone. could someone tell me why this simple piece of code is failing? http://paste.pound-python.org/show/818/
19:11  Taos: set stdout = os.devnull in subprocess rather than open it
19:12  aminpy: is this code correct? -> http://dpaste.com/289530/
19:14  lvh: aminpy: Without knowing what it's supposed to do, who know
19:14  lvh: s
19:14  lvh: At best, it's silly: it executes something
19:14  lvh: (also, one is called 'apply')
19:15  xarxer: myList = [1,2,3,4]   Can I print the values in the list directly?
19:15  xarxer: Calling print myList causes output [1,2,3,4]
19:15  xarxer: I want it 1 2 3 4
19:15  aminpy: lvh, I want to learn decorators in python
19:16  lvh: aminpy: Okay. What are you going to use them for?
19:16  evility: xarxer: sounds like you need a for loop. have you read the Python tutorial?
19:16  aminpy: lvh, I read django, and it uses decorators
19:16  aminpy: lvh, I want to know about decorators
19:16  xarxer: evility: yeah, I was just wondering if you could do it with a single print call :)
19:16  Buttons840: andar: @one; two()    is the same as two = one(two())
19:16  kerio: xarxer: " ".join(myList)
19:17  Buttons840: aminpy: ^
19:17  evility: you can, yes.
19:17  lvh: aminpy: Okay. Decorators are fancy syntax for def f(...): ...;; f = d(f)
19:17  lvh: That's pretty much all there is to it
19:17  lvh: typically, that means the decorator should return something useful
19:17  lvh: Common examples: the thing it decorated, a wrapper aroudn the thing it decorated
19:18  matael: xarxer : print " ".join([str(i) for i in a])
19:18  aminpy: lvh,  can you show me a simple example about  that?
19:18  matael: the join method only accept strings as far as i remember
19:19  xarxer: matael: where a is my list?
19:19  matael: yes
19:19  matael: sorry
19:19  lvh: aminpy: If you give me a use case
19:19  xarxer: =)
19:19  matael: xarxer : nice ?
19:19  reg3x: ccxCZ,  i used tkdiff to compared between the find gnu tool and the os.walk .  the difference is os.walk incudes links and other types of files
19:19  reg3x: find only find  files
19:19  lvh: aminpy: You could look at staticmethod, classmethod, property -- but all of those rely on you understanding the descriptor protocol, which is unrelated to decorators
19:20  xarxer: matael: yeah that worked, ty :)
19:20  ccxCZ: reg3x: you need to use stat / isfile to filter that
19:21  reg3x: ccxCZ ic you are of much help. thank you ill use it right away
19:21  aminpy: so, at first, should I read about staticmethod, class ....?
19:21  aminpy: lvh, ^
19:23  lvh: aminpy: First you should come up with a use case ;-)
19:23  lvh: aminpy: decorators are typically used for things that wrap other things (classes or functions), yes.
19:23  lvh: aminpy: property is a pretty good example I think
19:23  lvh: Also, there's @expose in flask
19:24  lvh: sorry, not expose: @app.route("/")
19:25  bahamas: Buttons840: http://bpaste.net/show/12467/
19:30  Buttons840: bahamas: yeah, what's wrong with it though?
19:31 --- rogue780_ is now known as rogue780
19:32  Buttons840: bahamas: try   row = row.strip()   after line 12 when the for loop just starts;  assuming you have some whitespace seperator issues this might help; otherwise print out repr's of your data and see if that reveals anything
19:33  tpratt: can a function decorator create names that look like globals in the decorated function?  (without passing as parameters) (would that be called 'inserting into the functions context?')
19:34  tpratt: like a closure?
19:34  bahamas: Buttons840: i already strip the row in the functions that process it, but i'll try to see the representation
19:34  papna_: tpratt: With enough work.
19:34  papna_: tpratt: It's better to make the function take arguments.
19:35  papna_: tpratt: Can you describe what you're imagining?
19:36  the_isz: no, Taos' suggestion doesn't help. with it, i get "AttributeError: 'str' object has no attribute 'fileno'"
19:36  Buttons840: bahamas: well, i don't see any strip calls in your pasted code, so perhaps you need to mock up a small example which demonstrates the problem?  (i find that in the process of making a small demo of the problem i solve my own problem)
19:38  tpratt: papna_: I agree it would better to have the function take args but web2py is really stupid.  It only "exposes" functions that match this regex: '^def\s+(?P<name>(?:[a-zA-Z0-9]\w*)|(?:_[a-zA-Z0-9]\w*))\(\)\s*:'
19:38  tpratt: papna_: I'll just fix the regex probably.
19:41  Zilly: Is there a way to open a thread on a separate core?
19:41  tpratt: Zilly: The kernel decides that.
19:41  Buttons840: Zilly: i think that's up to the OS
19:42  the_isz: would someone care to have a look at this simple piece of code again? http://paste.pound-python.org/show/818/  It seems I'm missing something very simple there...
19:42  Zilly: Hm... My computer won't ever open up threads on a separate core.  I only have an AMD x2 and Windows 64 bit.  It seems like it should open in a separate core.
19:43  Buttons840: Zilly: how do you know?
19:43  tpratt: Windows is like the government.  It takes half of everything.
19:44  Zilly: Buttons: The processing always maxes at 50%.
19:44  vvcephei: Zilly: threads stay in the same python process. You want to open a new process, i believe
19:44  vvcephei: it
19:44  Buttons840: Zilly: yeah, a single process only uses one core, which only amounts to 50%
19:44  vvcephei: it's not ideal
19:45  sigmonsays: the_isz, read the docs. Popen() takes a list of args
19:45  sigmonsays: welcome to the wonderful world of the GIL Buttons840 =P
19:45  Zilly: sigmonsays: Doesn't Popen() just open a new python file?  I can't do that.  I want to process a list of functions.
19:46 --- `Fuco` is now known as Fuco
19:46  hanstech: Hi, any way to give 2 names to a single reference and update automatic
19:46  Buttons840: vvcephei: you sure, what's the point of threads if they are no different than a simple proceedural "process"  (i use these terms loosely, as i know little of them)
19:46  ixokai: If I do logging.config.fileConfig(path) twice: does the second just add additional configuration to the first, or does it replace it? The docs I thought said the former.
19:47  tpratt: hanstech, it depends on what type of object.
19:48  tpratt: hanstech: you can do this:  a = b = {} and make changes to the dict and both will see the changes.  but you can't do a = b = {}; b = 2 and have a be updated.
19:49  Zilly: vvcephi: Is there a way to pass a priority queue in with popen()?
19:49  Buttons840: isn't intentially giving an object two names a bad idea?
19:51  hanstech: tpratt : I have a dictionary and i want some keys points to the same values
19:51  sphenxes: http://paste.pound-python.org/show/813/  can someone help me with my simple idea.
19:52  tpratt: Zilly: maybe you want the multiprocessing module.
19:52  hanstech: is this possible in any way ?.  like dict['a'] and dict['$a'] should return the same
19:52  hanstech: values
19:52  vvcephei: Zilly: I've never actually had to use it, but I think this is what you want: http://docs.python.org/dev/library/multiprocessing.html
19:52  the_isz: sigmonsays: wow, now that was a misleading error message then... thanks for the tip, that'll get me further i guess.
19:52  lduros: hi, is it possible to put two except on the same line, I was thinking of: except TypeError and AttributeError:
19:52  papna_: hanstech: Not if dict is a dict.
19:52  lduros: but it doesn't work
19:52  papna_: hanstech: You can make something that does what you want.
19:52  papna_: hanstech: What's this for?
19:52  hanstech: and when i assign a new value to dict[a] it should reflect in dict['$a'] also
19:52  hanstech: any trick ?
19:53  papna_: hanstech: What are you doing?
19:53  lduros: or should I do: except AttributeError or TypeError:
19:53  lduros: but then it doesn't seem to catch the latter
19:53  Buttons840: lduros: you have to use a tuple i believe
19:53  papna_: lduros: It's spelled "except (AtrributeError, TypeError):"
19:54  MostAwesomeDude: lduros: except (AttributeError, TypeError):
19:54  papna_: lduros: Also, catching AttributeError is almost always indicative of suboptimal design.
19:54  vvcephei: Buttons840: I seems like most of the time, the threading module is *good enough*, but you're right. I think most people expect it to open an independent os thread. I always assumed it doesn't for idiosyncratic Python implementation reasons. Maybe they'll fix it later.
19:55  papna_: vvcephei: Threads are ALWAYS the same process.
19:55  papna_: vvcephei: That's what threads ARE.
19:55  lduros: papna_: why suboptimal design? I'm trying to create an "Article" object instance, if a parser can't find a title, then it doesn't create the Article instance, so the try except AttributeError checks if the instance was created to validate the fact it's usable -- how would you do it?
19:56  hanstech: papna_: i am implementing some kind of a simulator
19:56  papna_: vvcephei: Python uses real OS threads.
19:56  papna_: vvcephei: Python doesn't use "green threads" or something like that.
19:57  hanstech: one can give a value either by $a or $1
19:57  lduros: papna_: would you do: if some.title is Not None: #create object, then do the rest -- I read in a book it was better to try/except than to make conditional statements
19:57  hanstech: both should point the same thing
19:57  papna_: lduros: "some.title is not None" and "try: some.title except AttribtueError:" are very different things.
19:57  papna_: lduros: The former is strongly preferred.
19:57  hanstech: papna_: How can i implement such a DS?
19:58  lduros: papna_: ok
19:58  nejucomo: I have a setuptools-based setup.py which defines a dependency with requires=.
19:58  papna_: lduros: Attribute existance should be a fairly static things.
19:58  nejucomo: Is pip supposed to install the dependencies before installing my package?
19:58  papna_: hanstech: I don't understand at all. Before you said $a and a, now you're talking abotu $a and $1.
19:59  papna_: hanstech: Perhaps you should make your own mapping class wrapping dict, or perhaps you should make a preprocessing function for keys.
19:59  lduros: papna_: so i'll use if some.title is not None:, but the book Head First Python3 says it's better to catch errors than to worry too much about preventing them
20:00  lduros: papna_: that's why I was using try except :-) It seems everybody disagrees with everyone :-)
20:00  shadow^dancer: [15:57] <papna_> vvcephei: Threads are ALWAYS the same process. < not from the system is point of view
20:00  shadow^dancer: :)
20:00  vvcephei: papna_: not sure what you're talking about... Look at http://docs.python.org/dev/glossary.html#term-global-interpreter-lock
20:00  papna_: vvcephei: There is a global lock on touching Python objects in CPython.
20:00  papna_: vvcephei: That doesn't mean that they aren't OS threads (They are!).
20:01  shadow^dancer: the global lock exists bcoz they are
20:01  hanstech: papna_: by 'a','$a','$1' i meant different keys. But my basic requirement is same
20:01  papna_: vvcephei: This doesn't mean that threads could ever be in a DIFFERENT process (if they were, they wouldn't be threads).
20:01  hanstech: multiple keys points to the same values
20:01  papna_: lduros: FWIW, I agree with that advice in general.
20:01  shadow^dancer: yes they can
20:01  shadow^dancer: :)
20:02  shadow^dancer: and... what about kernel mode?
20:02  shadow^dancer: it has threads yet it's not a process
20:03  papna_: hanstech: Well, then I don't know what your requirement is.
20:03  papna_: hanstech: Put whatever keys and values you'd like in your dict.
20:03  bahamas: Buttons840: in the end i solved it by changing the line separator to '\n'. for some reason, windows introduces an extra '\r'
20:03  shadow^dancer: oO
20:03  shadow^dancer: "some reason"?
20:03  Buttons840: papna_: about threads: i always associated "multithreaded" application as being able to use multiple cores: is this correct?     but a "multithreaded" application is still only one process?
20:04 * reg3x  loves this channel
20:04  tpratt: hanstech: you will have to use a bit of indirection.  Maybe like this http://paste.pound-python.org/show/819/
20:04  Buttons840: bahamas: yes, Windows (or rather, many application on windows) expect line endings to be \r\n, while unix systems only use \n
20:04  papna_: Buttons840: A process is a thing. A process may have multiple threads. An OS may schedule those threads on different cores. threading predates people using threads for parallelization or the days of desktops/laptops with multiple cores.
20:05  kerio: Buttons840: usually the OS will happily run a single process with multiple threads on two CPUs, yeah
20:05  vvcephei: bahamas: and Mac OS uses only '\r'
20:05  kerio: but with python, this doesn't happen
20:05  kerio: because of the GIL
20:05  papna_: Buttons840: In (C)Python, there is a lock that prevents multiple things from touching Python objects at one time, so though threads may run on different cores, technically, they will not run in parallel.
20:05  kerio: (if you're calling C functions, it's ok)
20:05  bahamas: Buttons840: yes, i know that. the problem is that '\r' appears even though i don't use print.
20:05  papna_: kerio: (MAYBE)
20:05  kerio: vvcephei: yeah, but nobody uses Classic
20:05  kerio: papna_: (well, it's an oversimplification)
20:05  Buttons840: papna_: so multithreading in python is useless?   use multiple processes instead?  (which i understand to be easier anyways)
20:06  kerio: Buttons840: yup, pretty much
20:06  bahamas: vvcephei: that's good to know. btw, you nickname looks like it starts with 'w', at least on my machine
20:06  kerio: it's rare to do cpu-intensive stuff in python anyway
20:06  papna_: Buttons840: threading in almost any language is a bad idea for the vast majority of apps.
20:06  papna_: Buttons840: The thing that threads were created for was asynchronous IO-bound stuff. For that application, threads in Python work as well as they would on other stuff.
20:07  papna_: Buttons840: However, it turns out threads are poor for that to start with.
20:07  lduros: papna_: so I'm using methods to create some of my attributes (validation, etc), in order to avoid AttributeError, should I just add by default self.myAttribute = None in def __init__ so that AttributeError doesn't get raised, but I can still check if self.myAttribute is not None: -- is that the best practice?
20:07  papna_: Buttons840: Using multiple processes for that in place of threads would be misguided.
20:07  shadow^dancer: threading in almost any language is a bad idea for the vast majority of apps.< those apps are useless anyway so why care about it
20:07  hanstech: tpratt: Thanks. But i think papna_ 's idea of preprocessing function is easy to implement
20:07  shadow^dancer: :)
20:07  hanstech: and reusable
20:07  papna_: lduros: That is typical practice.
20:07  Buttons840: kerio: i wouldnt' say that; i've a pet project (which might benifit from some c implementation) for a board game AI which is very cpu intensive
20:07  lduros: papna_: ok i'll do that then
20:07  papna_: lduros: That is common, idiomatic Python code.
20:08  kerio: it's hard to parallelize that
20:08  shadow^dancer: Buttons840: that is what he means
20:08  kerio: if it's easy, then it's also easy to multiprocess it
20:08  kerio: :)
20:08  shadow^dancer: only cpu intensive apps really benefit from threading nowadays
20:08  lduros: papna_: Is there some reference as to what is generally common, idiomatic Python code?
20:08  kerio: lduros: import this
20:08  kerio: that's the starting point
20:08  papna_: lduros: The AttributeError works okay for that, but the None thing provides easier to work with code.
20:09  papna_: lduros: Of course not. ;)
20:09  papna_: lduros: http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html might be of interest.
20:09  lduros: kerio: Yeh I've seen the zen of python, but something a little more detailed :-)
20:09  shadow^dancer: in the past virtual threads where usefull to have 2 execution context inside the same process
20:09  lduros: papna_: thanks
20:09  kerio: shadow^dancer: yeah but when does that happen?
20:09  papna_: Buttons840: Threads couldn't be used from Python to parallelize that code, no.
20:09  lduros: papna_: Oh ok, I've started to read this one, very good indeed. I  guess I'll print it
20:09  Buttons840: sooo, i found there's some tricky (yet obvious) enctryption/decryption going on in the this module?
20:09  papna_: Buttons840: Threads aren't typically used these days for parallelizing CPU-bound code.
20:10  kerio: hell, Chrome uses multiple processes for each single window
20:10  shadow^dancer: kerio: depends on the system, usually when your app does syncroneous calls to the system
20:12  papna_: I smirked the other day when a contact who maintains a large fluid dynamics code shared that his attempts to OpenMP some computational code so far completely backfired.
20:12  nejucomo: So if I pip install X, that doesn't install X's dependencies?!
20:12  nejucomo: -or is package X misconfigured?
20:12  papna_: nejucomo: Not in general.
20:12  shadow^dancer: openmp?
20:12  papna_: nejucomo: Sometimes.
20:12  papna_: shadow^dancer: The thing for using threads to paralleize numerical code.
20:12  nejucomo: Ok, under what conditions will it install dependencies?
20:12  Buttons840: papna_: why use "MP" for MultiThreading?
20:12  kerio: because multithreading sucks
20:12  kerio: global mutable state is evil and wants to kill you
20:12  valros: How do I slice to the end of an item? [1:-0]?
20:12  Buttons840: well, i mean, shouldn't it be called OpenMT?
20:13  kerio: the only way we have to fight it, is debugging; threading prevents debug
20:13  papna_: valros: [1:]
20:13  valros: k
20:14  nejucomo: papna_: Under which conditions will pip install dependencies?
20:14  MostAwesomeDude: If the dependency is not already met by an installed package.
20:15  papna_: nejucomo: A lot of packages aren't configured for it.
20:15  papna_: nejucomo: For whatever reason.
20:15  nejucomo: MostAwesomeDude: That is not true in this case.  I have run "pip install Foo" where Foo has "setup(…, requires=['Bar'])".  After pip install completes (it never mentions Bar) I get import errors for Bar.
20:16  nejucomo: I'm not being clear enough:  I am writing ./setup.py for package Foo.  I want users to be able to run "pip install Foo" and automatically get dependencies.  How do I do this?
20:16  nejucomo: I've put the dependencies in the setup( requires=… ) keyword.
20:17  hoonteke: if I have a dict that is indexed by a tuple (something like my_dict['names', 'process', 'fuel']), and let's say that I have 20 different fuels, 5 different process, and 3 names, what would be a pythonic way to get the tuples (and values) associated with a particular fuel?
20:17  MostAwesomeDude: nejucomo: Works here. You could look at the installed packages and see if pip thinks Bar is already installed.
20:17  hoonteke: Perhaps this example code might better explain for what I'm looking ... http://dpaste.com/289546/
20:17  hoonteke: I'm currently keeping a separate list, but it doesn't seem very clean.
20:17  nejucomo: MostAwesomeDude: Ok, thanks anyway.
20:19  shodan45: hmm, are any of those new-fangled "no-sql", key-value stores, etc. databases written in python?
20:19  papna_: shodan45: Nothing popular.
20:19  MostAwesomeDude: nejucomo: No, seriously. Does "Bar" appear in $ pip freeze
20:19  shodan45: papna_: I don't care about popular ;p
20:20  papna_: hoonteke: Well, you're welcome to be like [t for t in myDict if t[2] == "oil"]
20:21  hoonteke: papna_: ick, but that's what I'm halfway done implementing now.  It's that [2] "magic" that I don't like, but I think for now, let's go with "it works" and I'll refactor in a week.  Thanks papna_.
20:21  papna_: shodan45: There's a couple object databases in Python.
20:21  papna_: shodan45: zodb, axiom
20:21  nejucomo: MostAwesomeDude: Huh, it does not.  I think I must be missing some rtfm.  Where do I find out about pip freeze?
20:21  shodan45: papna_: hadn't heard of axiom... googling
20:21  papna_: shodan45: divmod.org/trac/wiki/DivmodAxiom
20:21  nejucomo: Strangely, I depend on package Bar, which contains Bar.Qux, and pip freeze shows "Qux==unreleased.unofficialdev".
20:22  papna_: shodan45: It's not exactly NoSQL.
20:22  xarxer: when I'm doin this s.send('PRIVMSG ' + CHANNELINIT + " hello there\r\n")
20:22  xarxer: the only thing arriving is "hello"
20:22  xarxer: anything wrong with the syntax?
20:22  nejucomo: shodan45: tahoe-lafs is written in python.  It's not quite nosql.  It's more of a distributed filesystem.
20:22  forrestv: hoonteke, your data structure can't efficiently answer that query. store the answers in a dict indexed by only fuel
20:22  nosklo: xarxer: use self.msg('hello there')
20:23  nosklo: er
20:23  xarxer: nosklo: huh?
20:23  nosklo: self.msg(channel, 'hello there')
20:23  nosklo: xarxer: http://www.habnabit.org/twistedex.html
20:23  xarxer: nosklo: hmm
20:24  xarxer: nosklo: hmm yeah I had a look at that one.. didn't really get it..
20:24  hoonteke: forrestv: heh.  Would that I could.  If can refactor to that, I will, but unfortunately I working with a framework that isn't conducive to certain things.
20:24  nosklo: xarxer: what didn't you get?
20:24  xarxer: nosklo: weeeeell pretty much everything
20:25  nosklo: xarxer: it's very well explained, and there are comments!
20:25  nosklo: xarxer: did you run it?
20:25  xarxer: nosklo: I guess I'll just have to read about the libraries included and their function
20:25  xarxer: nosklo: yeah I ran it
20:25  sickn3ss: how can I write the output of a function to a file ?
20:25  nosklo: xarxer: if you want to define new commands, just create a command_foo() method
20:26  papna_: sickn3ss: The return value?
20:26  nosklo: sickn3ss: output = myfunction(...) ; with open(somefilename, 'w') as f: f.write(output)
20:26  xarxer: nosklo: I'll have a look at it :)
20:26  sickn3ss: nosklo, thanks
20:27  nosklo: xarxer: I'm willing to help, if you want. I'm testing my bot at ##infotest
20:27  papna_: shodan45: http://www.youtube.com/watch?v=b2F-DItXtZs
20:27  xarxer: nosklo: yeah it's just that I have no idea what the imported libraries are/do/is
20:27  nosklo: xarxer: I can give you an overall idea
20:28  xarxer: nosklo: okay, say twisted.words.protocols irc
20:29  nosklo: xarxer: twisted.words.protocols.irc is the implementation of the IRC protocol according to RFC 1459
20:29  nosklo: xarxer: it has functions like IRCClient.msg(destination, message) and creates messages like ":PRIVMSG blah blah" for you
20:29  xarxer: nosklo: now that's handy :o
20:30  Buttons840: trying to win another twisted convert?
20:30  sickn3ss: nosklo, it does not allow me to f.write(output) says that it must be string
20:30  xarxer: I'm sure twisted is awesome as soon as you learn it :>
20:30  Buttons840: sickn3ss: f.write(repr(output))
20:31  Buttons840: xarxer: yeah it is, but i agree that the documentation is lacking, and i've long intended to contribute but never find the time
20:31  sickn3ss: Buttons840, I get output in the file "None"
20:31  sickn3ss: O_o
20:32  Buttons840: sickn3ss: then your function returns None
20:32  nosklo: xarxer: it's not that hard
20:32  sickn3ss: Buttons840, think it is because it actually prints the output on stdout
20:32  nosklo: xarxer: just start using it, add stuff to that example bot, and you'll get it in no time
20:33  magcius: does anybody have an IDE that works sanely with zope.interface?
20:33  magcius: pretty much every IDE I've tried never recognizes it and I have no idea why
20:33  joenp: I have a list of Card (playing card) objects that I want to sort according to suit, then rank. Suit is 1-4 and rank is 1-13. What would be a good way to achieve thet goal?
20:33  Buttons840: sickn3ss: i doubt it; if your read a file you'll move the cursor ahead and thus have nothing else to read later (unless you move the curosr back) but this wont effect the string returned by repr(object)
20:34  C_Kode: joenp: object attribute :)
20:34  kerio: joenp: sorted(deck, key=lambda card: (card.suit, card.rank))
20:34  magcius: joenp, implement __le__, __ge__ and __cmp__
20:34  joenp: C_Kode: Each instance has the attributes suit (1-4) and rank (1-13)
20:34  magcius: er, __eq__
20:34  C_Kode: joenp: Exactly, now lambda it
20:34  nosklo: joenp: deck.sort(key=operator.attrgetter('suit', 'rank'))
20:35  nosklo: no need for lambda
20:35  C_Kode: nosklo: Yeah, thats probaby a better solution.  Less overhead I believe
20:35  nosklo: lambda is also ugly
20:36  papna_: Meh.
20:36  joenp: Thanks :)
20:37  kerio: nosklo: ooh, i didn't know attrgetter did that kind of things
20:37  kerio: i'd implement sorting though :)
20:37  nosklo: nah, card sorting depends on the game
20:37  nosklo: so I wouldn't fix it on the card object
20:39  aboudreault: I'm using subprocess.Popen ... it seems that passing an argument (filename) with spaces causes problem
20:39  nosklo: aboudreault: pass it a list
20:39  kerio: don't use Popen, use subprocess
20:39  nosklo: kerio: er, he said he is using subprocess.Popen
20:39  kerio: whoops
20:39  kerio: misread there
20:39  nosklo: aboudreault: subprocess.Popen(['my spaced file', 'my spaced argument 1', 'my spaced argument 2'], ...)
--- Log closed Wed Dec 22 21:38:56 2010
--- Log opened Wed Dec 22 21:39:18 2010
21:39 --- Users 732 nicks [0 ops, 0 halfops, 0 voices, 732 normal]
21:40  reg3x: hey guys. is there a way to read if the user has the rights to read a file or directory content ?
21:40  Eevee: try to read it
21:40 --- Channel #python was synced in 106 seconds
21:40  papna_: reg3x: Read it.
21:40  reg3x: linux permissions
21:41  reg3x: i need to know if the user also owns the files
21:41  reg3x: ok with open ?
21:41  papna_: reg3x: Sure.
21:41  nosklo: reg3x: it will be checked automatically for you. If there's no permission, an error will be automatically raised
21:41  reg3x: it would then give me an exception ?
21:41  nosklo: reg3x: exactly.
21:41  papna_: reg3x: Yes. IOError
21:42  reg3x: so i just have to investigate how to handle exceptions on python
21:42  reg3x: ic
21:42  reg3x: thanks a lot guys.. ill google it :)
21:42  nosklo: reg3x: or, just read the tutorial
21:42 * reg3x loves this channel
21:42  reg3x: ok
--- Log closed Wed Dec 22 21:47:27 2010
--- Log opened Wed Dec 22 22:02:56 2010
22:02 --- Users 735 nicks [0 ops, 0 halfops, 0 voices, 735 normal]
22:04 --- Channel #python was synced in 106 seconds
22:04  bahamas: dbreddy: i don't know what they're doing. it doesn't look like an average use case. what does the code do?
22:05  dbreddy: https://networkx.lanl.gov/trac/browser/networkx/networkx/algorithms/shortest_paths/dense.py
22:05  dbreddy: line 91
22:07  chkdsk: Heya, I'm running an irc bot which logs to an SQLite database (and has several other features within this database) and at the moment it faults when it encounters japanese characters (such as あ) when it tries to enter them into the database. How can I fix this?
22:08  bahamas: dbreddy: i don't know enough about that algorithm to make sense of why they're using that defaultdict like they're using it
22:08  bahamas: chkdsk: are you decoding and encoding properly?
22:09  chkdsk: Not decoding or encoding at all yet. Not sure how to go about it
22:10  chkdsk: I just want to convert it to a format I can use to insert it into the db, and I can then revert back to the original format if the bot needs to echo something back into the channel
22:10  nosklo: chkdsk: well, you have to decode it. Problem is that IRC protocol doesn't define an encoding.
22:11  nosklo: chkdsk: most networks/channels use either utf-8 or iso8859-1 for irc messages. But there are the japanese servers which use something completely different.
22:11  nosklo: chkdsk: where do you plan running your bot?
22:11  chkdsk: right now it's on rizon
22:12  nosklo: chkdsk: I think using utf-8 and falling back to iso8859-1 if that fails is reasonable. There aren't much better options, and that's what my IRC client does
22:12  chkdsk: my main question is in what order to do it
22:12  chkdsk: do I encode, or decode before it goes into the db?
22:12  nosklo: chkdsk: decode the data you receive as soon as possible
22:13  nosklo: chkdsk: use it already decoded on all your program
22:13  nosklo: chkdsk: in the case of sqlite you can also store it decoded directly, since sqlite supports unicode
22:13  nosklo: chkdsk: when retrieving back, don't encode it until last second
22:13  nosklo: chkdsk: when you're about to send it, encode it
22:13  lduros: I had this line in python3: f = open(self.path + "/" + self.filename, "r", -1, "ISO-8859-1") -- in python2 it gives me an error 3 arguments only. But I need the ISO-8859-1 at the end, any idea what to do?
22:14  nosklo: lduros: codecs.open
22:14  lduros: nosklo: so I just use codecs.open instead and it will work. ok thanks
22:15  lduros: actually no, it didn't work out of the box, I'll have to read how to use codecs.open
22:15  papna_: lduros: Also, use os.path.join
22:16  lduros: papna_: ok
22:17  kerio: why do you need the iso-8859-1?
22:17  kerio: and why do you have files that are not utf-8?
22:18  lduros: papna_: Yes, it gives me this error: TypeError: lookup() argument 1 must be string, not int -- i wonder why this was allowed using python3
22:21  papna_: lduros: codecs.open doesn't take its buffering argument the same place as Python 3's open.
22:21  papna_: lduros: You should read the help on a function before using it.
22:22  lduros: okie
22:22  bahamas: dbreddy: ok, i've thought about it a little and the answer is that the code doesn't use defaultdict(dict) because that dict inside also needs to have some default values, more specifically inf. and the lambda is used because a callable is required as an argument for defaultdict and a defaultdict instance isn't callable
22:22  JFlash: hi
22:22  papna_: lduros: Also, I didn't think -1 was a valid value.
22:23  papna_: lduros: Oh, that's system default.
22:23  JFlash: how do I append object references to a list and make them still available for garbage collection?
22:23  papna_: lduros: So for codecs.open, you wouldn't pass the -1 at all.
22:23  JFlash: i'm looking at weakref but I only see dictionaries? what about lists?
22:23  lduros: papna_: right, I took it off
22:23  papna_: JFlash: Why?
22:23  lduros: it's the 3rd argument now
22:23  lduros: thanks :-)
22:24  papna_: lduros: -1 is the same as not passing anything.
22:24  papna_: lduros: So don't pass anything.
--- Log closed Wed Dec 22 22:28:22 2010
--- Log opened Wed Dec 22 22:33:47 2010
22:33 --- Users 723 nicks [0 ops, 0 halfops, 0 voices, 723 normal]
22:34  damada: hmm, not even remotely close as handy as a java jar file
22:35  shadow^dancer: it's all about the burden of knowdle and effort
22:35 --- Channel #python was synced in 105 seconds
22:35  damada: I can't believe there is nothing like this in Python that facilitates script bundling, there must be some way...
22:35  shadow^dancer: if your pathner to deal with small dificulties or u dealing with great dificulties to make it easyer to run
22:36  MostAwesomeDude: damada: Of course there is. Eggs. But it's *incredibly* easier to just not use eggs.
22:36  hanstech: python int is 32 bits long or 64 bits long ?
22:37  shadow^dancer: i distribute a bot(an automated player for a certain game) that is hard to use and still average users use it
22:37  shadow^dancer: http://www.pyinstaller.org/ < something like
22:37  MostAwesomeDude: hanstech: Mu.
22:37  damada: MostAwesomeDude: is it possible to bundle several Python files into a convenient container, not an exe or the like?
22:37  MostAwesomeDude: hanstech: Ints are technically unlimited in size.
22:38  damada: pyinstaller creates a binary... I think I can no longer import from it as with a standard Python file
22:38  hanstech: Is there anyway to limit the size to 32 bits
22:38  hanstech: ?
22:38  MostAwesomeDude: damada: "Convenient" is such a funny word. :3
22:38  MostAwesomeDude: damada: I'm gonna go with "Yes; a tarball."
22:38  MostAwesomeDude: hanstech: Why? Also, is (some_int & 0xffffffff) not sufficient?
22:38  damada: MostAwesomeDude: it must be fool proof :) tarball or zip archive would be perfect unless I have to unpack it
22:39  MostAwesomeDude: damada: You want something that does not exist. Eggs do what you want but they are not convenient or fool-proof.
22:39  damada: the "end user" just needs a single script file to adjust settings and call a myModule.run()
22:39  MostAwesomeDude: damada: (For that matter, neither are JARs.)
22:39  damada: MostAwesomeDude: but a jar file comes very close
22:39  MostAwesomeDude: damada: Have you considered using setuptools/distribute and PyPI?
22:39  MostAwesomeDude: $ pip install SomePackage
22:40  damada: MostAwesomeDude: I was hoping that installing could be avoided
22:40  damada: because then I could do it manually, too
22:40  damada: ideally, the user just puts it into a system wide accessible folder, and the run scripts adds this to the path, and off we go
22:40  MostAwesomeDude: damada: $ wget SomePackage.tar.gz; tar zxvf SomePackage.tar.gz; (cd SomePackage && python setup.py install)
22:41  MostAwesomeDude: damada: Are you targeting Win32 users?
22:41  damada: unfortuntely, yes :)
22:41  damada: it's for work
22:41  damada: it's for a colleague
22:41  MostAwesomeDude: Teach your coworker how to install things, or how to run from your source control, etc.
22:42  damada: this is not "how it works"...
22:42  shadow^dancer: nope he is targering only 1 person
22:42  shadow^dancer: :)
22:42  damada: she's a biologist
22:42  damada: but Excel could not do the trick
22:42  damada: anything complex will not work
22:42  xarxer: If I want to keep track of users c++ I'd use an array of classes with certain member variables.. what'd be the corresponding in python?
22:42  sherl0ck: whats the technique to iterate through the attributes of a class?
22:42  burhan: there's a program ... named PEP..somthing, which checks your files for syntax conformity as per python standards. Anyone recall what its called?
22:43  MostAwesomeDude: burhan: pep8, named after PEP 8. There's also zencheck.
22:43  damada: shadow^dancer: one colleague, plus several more it the script is as good as I think :)
22:43  shadow^dancer: it again (?)
22:43  MostAwesomeDude: damada: You seem to think that this is somehow more complex than installing anything else for an end-user. Why is it not suitable to do py2exe?
22:43  shadow^dancer:  more it the script
22:43  shadow^dancer: <
22:43  burhan: MostAwesomeDude: thanks, I can't ever remember the name of it. Kept searching for pipe8 :/
22:43  shadow^dancer: did u mean think?
22:44  damada: MostAwesomeDude: maybe I don't understand this correctly: once it's an exe, how can I import from it and use it from a simple Python script which is the "user interface"
22:44  shadow^dancer: :S
22:45  damada: all the colleagues should deal with is this simple script. And I don't have the time and ressources to maintain something which needs installation. Plus, IT department will not approve it
22:45  MostAwesomeDude: py2exe =/=> installed
22:45  damada: all I could handle is something like a zip archive or the like... Not??
22:46  shadow^dancer: PyInstaller <
22:46  shadow^dancer: (?)
22:46  MostAwesomeDude: Is this UI already installed? If not, is it part of your app?
22:46  shadow^dancer: Custom: you can automate PyInstaller to do whatever packaging mode you want through a simple script file in Python.  <
22:46  shadow^dancer: i think there is no UI
22:46  damada: MostAwesomeDude: its just a dead simple script in order to adjust settings and specify output file names
22:47  damada: shadow^dancer: well, no GUI, but for sure a UI :)
22:47  burhan: sherl0ck: you can dir() the class and filter out the variables. That's one way.
22:47  damada: then it passes everything off to the main script... This should be hidden from the user in order not to bother him/her
22:48  xarxer: if I use raw_input on a variable but just hit enter, will it be None then?
22:48  MostAwesomeDude: sherl0ck: Don't dir(). Why do you need the attributes of the class?
22:48  merwok: xarxer: Probably the empty string.  Why not trying it?
22:48  MostAwesomeDude: damada: You have some *very* bizzare requirements. Why, again, does py2exe not work?
22:48  xarxer: merwok: I suppose I could :)
22:49  BattlePope: Hi guys. I have a newb-question; I'm trying to get some data out of a dict; how do I do it? At the moment I have http://pastebin.com/B3DDw7pD as the data I'm trying to work with. What I want to do is, say, return the rank of each player in the dataset.
22:49  shadow^dancer: bcoz he cannt modify the source
22:49  infobob: http://paste.pound-python.org/show/823/ (repasted for BattlePope)
22:49  shadow^dancer: and he is setting the input values on the source
22:50  damada: MostAwesomeDude: I think my requirements are as basic as it can get :) I just can't handle a multitude of files on my colleagues workstations. This is why I want to bundle the app without compliling it or the like. It should just be an archive. Much like a JAR. What is so bizarre about a Jar?
22:50  shadow^dancer: MostAwesomeDude: *very* bizzare, sure they are, allready talked with him over private trying to get a posible solution but couldnt (?)
22:50  damada: I'll check py2exe. But I dislike its Windows-onlyness
22:50  MostAwesomeDude: damada: It's not a one-click-to-run thing either.
22:51  MostAwesomeDude: damada: If you're deploying to the systems of people running things besides Windows, aren't they experienced enough to be able to follow directions consisting of more than one instruction?
22:51  damada: no, the non-windows requirement is my own :)
22:51  shadow^dancer: =d
22:51  sherl0ck: MostAwesomeDude: Im using the class to create a row in a table
22:52  MostAwesomeDude: sherl0ck: Have you considered an ORM?
22:52  damada: I haven't used Windows in several years now, just need to at work
22:52  shadow^dancer: MostAwesomeDude: are u so awesome?
22:52  MostAwesomeDude: shadow^dancer: No, it's a reference to Bill & Ted.
22:52  MostAwesomeDude: I'm pretty lame.
22:52  shadow^dancer: ='( dissapointed
22:52  shadow^dancer: hahaahah
22:52  sherl0ck: im using cassandra, and i didnt find a comparable ORM for that
22:53  SegFaultAX: BattlePope: I'm not really sure what your problem is?
22:53  burhan: BattlePope: can you post the actual python code that you are using?
22:53  damada: MostAwesomeDude: maybe it gets clearer if you recall that this script is a work in progress. I will ahve to update it frequently, as it is used for a new prototype, and specs will change often in the next weeks. So whenever that happens I could email a new archive and tell people to replace the old one. Update done
22:53  damada: not too bizarre in my eyes
22:54  MostAwesomeDude: damada: py2exe
22:54 --- SpitfireWP_ is now known as SpitfireWP
22:54  damada: ok, I got it
22:54  shadow^dancer: damada: svn
22:54  shadow^dancer: =d
22:54  damada: will check it. Is there a Linux counterpart, too?
22:54  shadow^dancer: they can 1click > update
22:54  shadow^dancer: or 2 clicks over a batch file
22:54  shadow^dancer: yes there is
22:54  damada: shadow^dancer: you seem to never have worked with non-techy people, have you?
22:55  papna_: shadow^dancer: Why not a decent VCS?
22:55  hanstech: How can i find the binary equivalent of a -ve number
22:55  hanstech: FYI: there is no bin in my python version
22:55  shadow^dancer: http://wiki.python.org/moin/Freeze
22:55  SegFaultAX: BattlePope: That looks like a very simple data structure.
22:55  merwok: What’s a -ve number?
22:56  hanstech: negative numbers
22:57  shadow^dancer: <damada>: actually, allready told u, i maintain a bot that gamers use, some of them are really iliterate in informatics
22:57  MostAwesomeDude: damada: If you're not rolling out to Linux, then don't target Linux. Easy.
22:57  shadow^dancer: as to the point of not knowing what a file extension is
22:57  papna_: hanstech: You want a string with a binary representation of a number?
22:58  shadow^dancer: and they still manage to install svn tortuise and get files from the repository, amazing isnt it?
22:58  shadow^dancer: =d
22:58  shadow^dancer: maybe they actually do want to use the program that much
22:58  damada: shadow^dancer: sorry, forgot about that... OK, will try to get this done. But apparently there is no simple solution like a portable app for the non standard python modules...
22:58  shadow^dancer: yes py2exe
22:58  shadow^dancer: it gets compiled
22:59  shadow^dancer: so it's an exe
22:59  shadow^dancer: so they just 2click on it
22:59  damada: that is my question: how can I use this exe from a python file???
22:59  merwok: Can’t.
22:59  shadow^dancer: u dont
22:59  shadow^dancer: it's an executable
22:59  papna_: damada: "use"?
22:59  shadow^dancer: it's binary
22:59  shadow^dancer: .
22:59  damada: yes, this is why it won't work
22:59  shadow^dancer: it runs
22:59  shadow^dancer: IT RUNS!
22:59  shadow^dancer: it would
22:59  papna_: shadow^dancer: I don't think you know what py2exe. What do you mean by "compiled"?
22:59  shadow^dancer: add a text based ui
22:59  damada: how, without the settings file?
22:59  shadow^dancer: to input the parameters
22:59  shadow^dancer: ^^
23:00  SegFaultAX: shadow^dancer: Please stop talking.
23:00  papna_: damada: You can put the config file inside or outside the exe.
23:00  shadow^dancer: bundle or whatever
23:00  shadow^dancer: .
23:00  BattlePope: Hi SegFaultAX; sorry my IRC client broke.
23:00  papna_: damada: If you want to put it inside, there are recipes to open the exe (it is a zip file) and access it.
23:00  damada: I won't code around a complicated Windows only solution just because there is nothing simple to bundly several files.
23:00  BattlePope: Could you help me?
23:00  papna_: damada: If it's something a user could see or edit, put it outside the exe.
23:00  merwok: BattlePope: We don’t know your problem yet.
23:00  SegFaultAX: BattlePope: No problem. I looked over that data you pasted. It's very simple, what's the issue?
23:01  damada: OK, will have a look at it tomorrow at work
23:01  BattlePope: I don't know how to parse it
23:01  damada: don't have a Windows here.
23:01  xarxer: So in classes there are class variables and object variables.. object variables are unique for every instance of that class, no?
23:01  merwok: You don’t have to parse it.
23:01  damada: Tahnks a lot for your patience
23:01  BattlePope: basically, this is my first Python program and I am having trouble
23:01  BattlePope: adjusting from C, or something ;)
23:01  shadow^dancer: SegFaultAX: sorry burned my brain reversing stuff :P
23:01  SegFaultAX: BattlePope: You should read the Python tut.
23:01  burhan: I can't believe it is this difficult to find a python IDE that does what I want! All I want is syntax checking, calltip/IntelliSense support, supports jython and has an integrated shell/console. So far I've tried (pydev with eclipse - too freakin' slow and can't figure out how to get it to work the way I want); IntelliJ Idea 10 Professional - too slow; PyCharm (no jython support), Komodo Edit (no jython support). :/
23:01  SegFaultAX: shadow^dancer: I'm not sure what that means. Even still you're spamming the channel and not being very helpful.
23:02  Eevee: vun
23:02  Eevee: wow uh
23:02  Eevee: vim
23:02  merwok: xarxer, getting is different from setting here
23:02  burhan: Eevee: how do you get calltip/intellisense to work in vim? Or syntax checking for that matter.
23:03  MostAwesomeDude: burhan: There's a pyflakes for vim. Dunno what calltip is though; never heard of it.
23:03  papna_: xarxer: Objects have attributes. Classes' attributes are accessible through all their instances. Each instance of a class has attributes. These attributes are used for the instance's state, the information they carry uniquely.
23:03  xarxer: merwok: but if I need a class User that has variables like health, money and stamina and I intend to have an array of users.. it'd be bad for them to share their variables
23:03  Eevee: syntax highlighting tends to glow bright red at you if you do something obviously stupid, though you may have to hack python.vim if you really need it to be more extensive
23:03  shadow^dancer: SegFaultAX: http://en.wikipedia.org/wiki/Reverse_engineering
23:03  omsai: Hi all, I'm getting a very intermittent exception from a networked device and I need a way to handle it.  Basically if the exception occurs from command foo, I would like to retry command foo 5 times.  Is there a way I can implement this without nesting try-catch 5 times?
23:03  Eevee: and it has some sort of autocomplete thing but I've never used it
23:03  merwok: xarxer: Define those attributes in the __init__ method then, not as class attributes
23:03  burhan: MostAwesomeDude: call tips is when you open a ( on a method, it shows the signature of that method so you know what arguments to pass.
23:03  MostAwesomeDude: shadow^dancer: Ooh, another RE person? What do you work on?
23:04  SegFaultAX: shadow^dancer: If that were the case, you would know a little more about what tools like py2exe do.
23:04  MostAwesomeDude: burhan: Cool. Do you know why that's very difficult in Python? :3
23:04  merwok: omsai: Try a for loop + try/except
23:04  xarxer: merwok: so everything defined outside of __init__ is treated as a class attribute which is accesible through every instance?
23:04  papna_: xarxer: State, like a specific user's health and money, are things you'd use instance attributes for.
23:04  papna_: xarxer: Also, you do not plan to have an array of users
23:04  merwok: xarxer: Things defined at the class level are class attributes.
23:04  burhan: MostAwesomeDude: yes, but its possible because some of the IDEs I've tried have that support. IntelliJ does for example. But then it fails on everything else :/
23:05  shadow^dancer: MostAwesomeDude: games :* surelly dissapointing
23:05  shadow^dancer: MostAwesomeDude: u?
23:05  burhan: MostAwesomeDude: they only show keyword arguments.
23:05  merwok: xarxer: But even if spam is a class attribute, setting instance.spam will update the instance attr, not the class’
23:05  xarxer: papna_ list?
23:05  omsai: merwok: ah, so if the exception occurs, don't raise until the counter exceeds a certain value?
23:05  papna_: xarxer: Things you assign directly in class scope are class attribtues, as are things you do Class.foo = bar with.
23:05  papna_: xarxer: The only common use of class attributes is methods.
23:05  xarxer: You're confusing me :(
23:05  merwok: omsai: Something like that.  Either loop five times with except: pass, or increase a counter and raise only if counter > 5
23:06  merwok: xarxer, try the tutorial again
23:06  merwok: xarxer, or interactive experimentation
23:06  omsai: merwok: brilliant thanks.  had a brain fart ;P
23:06  xarxer: merwok: I think I'll have to do that :þ
23:06  merwok: xarxer, it’s actually simple
23:06  papna_: xarxer: You wouldn't do class Character(object): health = 0; stamina = 0
23:06  MostAwesomeDude: shadow^dancer: Drivers, although these days I've only been doing Minecraft.
23:07  MostAwesomeDude: burhan: And only for methods defined at class definition time, I bet.
23:07  burhan: MostAwesomeDude: indeed.
23:08  burhan: MostAwesomeDude: I also tried WingIDE. O.O what a ... I don't know how to describe my amazement that such software actually exists.
23:08  MostAwesomeDude: burhan: If it makes you feel better, I have *no* autocomplete, and I don't miss it.
23:08  merwok: Some people seem to like Wing IDE a lot.
23:08  shadow^dancer: MostAwesomeDude: lol minecraft, is it soo good, looking at youtube i dont get it =d
23:08  merwok: I, for one, really miss autocompletion in Vim.
23:09  SegFaultAX: burhan: I'm sure org.eclipse would love it if you would extend the pydev functionality instead of critcizing it for lacking the specific features you require.
23:09  kerio: shadow^dancer: not the right channel to talk about minecraft
23:09  burhan: merwok: WingIDE for some reason reminded me of Visual Basic.
23:09  kerio: and also yes
23:09  burhan: SegFaultAX: if I was so competent to do that, I would have already done it by now :/
23:09  BattlePope: SegFaultAX, is what I have posted a dictionary? The JSON page seemed to indicate so. If that is the case, I have a question not covered by the tutorial: Are dictionaries multi-level? And more specifically, is my data a multi-level dictionary? And if so, how can I traverse it / get data out of it?
23:10  SegFaultAX: BattlePope: Yes, a dictionary with atleast one key that references a list of dictionaries.
23:10  papna_: BattlePope: dicts can contain other containers, such as lists and other dicts.
23:10  merwok: BattlePope, try methods listed at http://docs.python.org/dev/library/stdtypes#mapping-types-dict
23:10  BattlePope: whoa, ty all
23:10  papna_: BattlePope: You access values in dicts like d[u"foo"]
23:10  SegFaultAX: BattlePope: All built in collections are arbitrarily nestable in Python.
23:10  papna_: BattlePope: It sounds like you want to write a for loop over one of the lists.
23:11  BattlePope: yeah
23:11  BattlePope: I'm looking at http://docs.python.org/tutorial/datastructures.html
23:11  BattlePope: and they have >>> knights = {'gallahad': 'the pure', 'robin': 'the brave'}
23:11  BattlePope: >>> for k, v in knights.iteritems():
23:11  BattlePope: ...     print k, v
23:11  SegFaultAX: BattlePope: Mind the /topic
23:12  BattlePope: oh sorry, thought it'd stay on one line
23:12  burhan: BattlePope: use a pastebin please.
23:12  papna_: Bizarre. My filter identifies paste 823 as Games and blocks it.
23:12  BattlePope: so anyway, I am confused as to how to loop through a multi-level thing such as my data
23:13 --- dcurtis is now known as mp
23:13  BattlePope: I understand the trivial examples, but I am having trouble extending it
23:13  Rioting_Pacifist: stupid question but how do i view the defentions of imported code? e.g show main() , would print out the python code of the a main fuction?
23:13  hanstech: papna_: yes
23:13  SegFaultAX: BattlePope: Well in the top level dict you are pretty much concerned with only 1 key, right?
23:13  papna_: Rioting_Pacifist: import foo; help(foo)
23:13  hanstech: it will dp
23:13  hanstech: do*
23:13  SegFaultAX: BattlePope: u'players'
23:13  BattlePope: yeah
23:13  Husio: hi
23:14  papna_: hanstech: Why? That's so silly?
23:14  BattlePope: and I can .get that part
23:14  SegFaultAX: BattlePope: It's value is a list.
23:14  BattlePope: but then I am left with something else, which is a list I think?
23:14  BattlePope: yeah
23:14  papna_: hanstech: bin(n) or bin(n).replace("0b", "")
23:14  Husio: anyone familiar with twill?
23:14  BattlePope: but then I don't know how to pick out the data I need
23:14  Rioting_Pacifist: papna_: that gives me the help i want to view the actual code is that possible?
23:14  SegFaultAX: BattlePope: So iterate over each of the players in that list.
23:14  hanstech: papna_: bin is not in my version of python
23:14  papna_: Rioting_Pacifist: Use your editor.
23:14  SegFaultAX: BattlePope: Something like for player in d[u'players']: ...
23:15  papna_: hanstech: Then manually create it or google for a recipe.
23:15  BattlePope: how do I define player?
23:15  BattlePope: it confuses me that there are both a players, and a player
23:15  BattlePope: is that just defined as I go?
23:15  BattlePope: I am too used to C ;)
23:16  SegFaultAX: BattlePope: Have you ever worked with foreach?
23:16  BattlePope: nope
23:16  BattlePope: this is literally the program I did next after helloworld ;)
23:16  SegFaultAX: BattlePope: I suggest reading the tut. Also: http://docs.python.org/tutorial/controlflow.html#for-statements
23:17  BattlePope: I am reading the tutorial :)
23:17  BattlePope: ty
23:18  SegFaultAX: BattlePope: In you interactive try this: for c in "Hello World!": print c
23:20  BattlePope: whoa
23:21  SegFaultAX: BattlePope: for iterates over some sequence, assigning the value (or values in the case of unpacking more complicated data structures) to the label (or labels) given.
23:21  BattlePope: yeah, i understand that now :)
23:21  BattlePope: ty
23:21  BattlePope: I tried for player in d[u'players']:
23:22  SegFaultAX: BattlePope: That should yield the player dict for each player returned, yea?
23:22  BattlePope: but it says list indices must be integers, not unicode?
23:22 --- `Fuco` is now known as Fuco
23:22  SegFaultAX: BattlePope: I used d as the name for the whole dict.
23:22  papna_: BattlePope: d isn't a dictionary, it's a list.
23:22  BattlePope: ah gotcha
23:23  kerio: is __contains__ always supposed to return True or False?
23:24  SegFaultAX: kerio: http://docs.python.org/reference/datamodel.html#object.__contains__
--- Log closed Wed Dec 22 23:27:40 2010
--- Log opened Wed Dec 22 23:33:10 2010
23:33 --- Users 706 nicks [0 ops, 0 halfops, 0 voices, 706 normal]
23:33  papna_: ralphje: Is your file name OpenSSL.py?
23:33  papna_: ralphje: Also, Twisted has SSL.
23:33  papna_: ralphje: I think it uses pyOpenSSL
23:33  ralphje: papna_: no, it even fails when I run the interactive console - that's the weird thing
23:34  SegFaultAX: Whoops sorry, updated my index. http://docs.python.org/library/stdtypes.html#string-methods
23:34  papna_: ralphje: What about "import OpenSSL"?
23:34 --- Channel #python was synced in 104 seconds
23:35  ralphje: papna_: that's the one that is failing :-). But the __init__.py has an import OpenSSL.crypto in it
23:35  SegFaultAX: ralphje: Does it depend on pycrypto?
23:35  papna_: ralphje: So "import OpenSSL" doesn't work? That's a different thing than "import OpenSSL.crypto"
23:36  papna_: ralphje: How did you install pyOpenSSL?
23:37  ralphje: papna_: you're right, that's a different problem then I described, although the error remains the same. I've installed it with distutil (setup.py build, setup.py install)
23:37  seku: i thought c was a systems programming language and some weird people thought it would be a good idea to use it for applications programming. Then more weird people thought it would be a good idea to extend it.
23:37  papna_: ralphje: Does import OpenSSL work or not?
23:37  ralphje: no it doesn't work
23:38  ralphje: let's retry: import OpenSSL doesn't work because it fails on import OpenSSL.crypto
23:38  papna_: ralphje: Did you receive errors when you ran the setup.py?
23:39  bob2: ralphje: what platform are you on?  what's the traceback for 'import OpenSSL'?
23:39  papna_: ralphje: If you still have the output, pastebin it. If not, re-build it.
23:39  ralphje: papna_: I'm just rebuilding :-)
23:39  BattlePope: hmm
23:40  BattlePope: if I split it just outputs [u'n'] [u'l]
23:40  ralphje: papna_: ok, now it works. seems that the update of ssl-devel did the trick - which is weird
23:40  SegFaultAX: BattlePope: What are you trying to print?
23:40  BattlePope: the two names
23:40  ralphje: thank you though, papna_ :)
23:40  BattlePope: so ideally it would be velocitygirl on one line, irnn on the other
23:40  SegFaultAX: BattlePope: Paste your code. /topic for the site.
23:41  BattlePope: http://paste.pound-python.org/show/824/
23:42  merwok: BattlePope: for player in thing[u'players']: print player[u'name'] ?
23:42  SegFaultAX: BattlePope: Just do this: print player[u'name']
23:42  papna_: BattlePope: player is a unciode string. When you iterate over it, you get each character.
23:42  papna_: bob2: That's not how you iterate over all the players.
23:42  papna_: Opes.
23:43  BattlePope: darn x-chat...
23:43  papna_: BattlePope: player is a unciode string. When you iterate over it, you get each character.
23:43  merwok: BattlePope: for player in thing[u'players']: print player[u'name'] ?
23:43  papna_: BattlePope: That's not how you iterate over all the players.
23:43  papna_: BattlePope: When you access "name" on line 4, you just happen to access the last character when you did the for loop before, since it's the last thing you have the name "name"
23:43  BattlePope: yeah i figured
23:44  ralphje: nah it seemed that the working directory of the interactive console was the problem *oops
23:45  SegFaultAX: BattlePope: Did you get it working?
23:45  BattlePope: yup, thanks guys :)
23:47  marel: I'm trying to generate html copy of excel file and I want to return a string with html, how should I do it ? Just make a string and keep appending it ?
23:47  merwok: BattlePope: Don’t hesitate to give each intermediate object one name (player1 = players[0], name = player1[u'name'], chars = list(name), etc.) and look at their methods in an interactive interpreter.
23:47  BattlePope: good idea, thanks
23:48  reg3x: people , does global variables exist on python ????
23:48  merwok: Yes.
23:48  merwok: They are module-level names.
23:48  Rioting_Pacifist: first i call  if type(passform) == None :, then i do stuff with passform and get the error AttributeError: 'NoneType' object has no attribute 'attrib'
23:48  reg3x: self.  is used to declare global variables ?
23:48  merwok: No.
23:48  SegFaultAX: reg3x: Python tutorial.
23:49  merwok: Rioting_Pacifist, None is not a type.  You want if passform is not None
23:49  merwok: if passform is None*
23:49  reg3x: SegFaultAX,  im reading python tutorial but...  is there a section for it?
23:51  papna_: Rioting_Pacifist: If you want to find out whether passform is None, use "if passform is None:"
23:51  reg3x: generators and iterators only exist on python 3 ???
23:51  papna_: reg3x: False.
23:51  papna_: reg3x: docs.python.org/tut
23:51  SegFaultAX: reg3x: http://docs.python.org/tutorial/classes.html#python-scopes-and-namespaces
23:51  reg3x: thanks papna
23:51  BattlePope: is player[u'name'] + " %s" % (player[u'rank']) correct for concatenating a string? It works, but it seems less elegant than the rest of Python ;)
23:51  reg3x: SegFaultAX,   thank you !! ill read that right away
23:52  kerio: BattlePope: just +
23:52  kerio: wait
23:52  kerio: what is rank?
23:52  BattlePope: I tried that and got an error; it's an int
23:53  SegFaultAX: kerio: A string.
23:53  BattlePope: oh
23:53  BattlePope: maybe not ;)
23:53  SegFaultAX: Derp, sorry. You're right BattlePope
23:53  kerio: BattlePope: player[u'name'] + str(player[u'rank'])
23:53  kerio: but you probably want some kind of formatting
23:53  papna_: BattlePope: u"%s %d" % (player[u"name"], player[u"rank"])
23:53  Rioting_Pacifist: thanks merwok papna_
23:53  BattlePope: ah
23:53  BattlePope: yeah that's what I had in mind kerio
23:53  BattlePope: ty
23:53  kerio: why are you using a dict like that?
23:53  BattlePope: ooh also good papna
23:53  kerio: with unicode keys and all
23:54  sickn3ss: ccxCZ, ping
23:54  SegFaultAX: kerio: He JSON.
23:54  BattlePope: it just happens to be how JSON makes it
23:54  SegFaultAX: Argh, I can't type.
23:54  merwok: kerio, why would he want to use byte strings for text?
23:54  papna_: BattlePope: u"%(name)s %(rank)d" % playert
23:54  BattlePope: i rather like it, SegFaultAX: "HE JSON! ARARGHGH!"
23:54  kerio: merwok: meh, it's the same as a number there
23:54  BattlePope: what's playert?
23:54  kerio: it's just for your convenience
23:54  papna_: kerio: Why wouldn't they be unicode keys?
23:55  kerio: papna_: why are they keys in the first place
23:55  kerio: instead of just two elements of a tuple
23:55  SegFaultAX: BattlePope: Now I feel like a Pyrate.
23:55  SegFaultAX: Ohh snaps. :)
23:55  BattlePope: ;)
23:55  lvh: dash: Richard Hipp is not omniscient :-(
23:55  kerio: lvh: nobody is
23:55  kerio: otherwise you could violate godel's incompleteness theorem
23:55  papna_: kerio: You haven't met kosh
23:56  lvh: dash: A very disheartening revelation right before Christmas... Next someone will tell me Santa isn't real
23:56  kerio: i don't need to meet him to say that he's not omniscient
23:57  cervanto: sup
23:57  sickn3ss: guys is there something like .islower for special characters like @#$ ?
23:58  SegFaultAX: sickn3ss: Huh?
23:58  mahmul: sickn3ss: you mean to get whatever key + shift produces them?
23:59  sickn3ss: mahmul, yea I want to do something with every special key
23:59  sickn3ss: but don't know exactly how to store them
23:59  mahmul: sickn3ss: use a dict
23:59  mahmul: sickn3ss: what are you trying to accomplish with this?
--- Log closed Thu Dec 23 00:00:01 2010
