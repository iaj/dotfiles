--- Log opened Sat Jan 22 00:00:47 2011
00:02  RandIter: which function do i implement to implement the "in" operator?
00:02  kerio: __contains__
00:02  lvh: RandIter: method, not function, and __contains__
00:02  RandIter: ok
00:03  lvh: There's also the old containment protocol but let's pretend it doesn't exist
00:03  dsimon: done and done
00:04  mlew: can someone help me with a weird unicode issue?
00:04  kerio: hmm... any(other == i for i in self)?
00:04  mlew: on my gentoo box this works:
00:04  mlew: print('{0}'.format(u'\xf6'))
00:05  kerio: mlew: locale issue
00:05  mlew: but on ubuntu 10.04 it fails with a unicode error
00:05  kerio: just encode every unicode string explicitly
00:05  mlew: kerio:  I tried that, but specifically mako is having an issue with that
00:06  mlew: I'm trying to figure out what the difference in the two systems is, but I'm stumped
00:06  mlew: they both seem to have their locales set to us_utf-8
00:06  sproingie: mlew: try the 'locale' command on each to get the full story
00:06  mlew: err…  en_US.UTF-8
00:06  mlew: sproingie:  i did, and they're identical
00:07  sente: i thought the rumors of del.icio.us's long term standing were clarified?
00:07  sproingie: i wouldnt put it past gentoo to have a site file that screws with it
00:07  mlew: well, it works on gentoo — haha
00:07  sente: hrm, seems i was scrolled up quite a bit
00:08  sproingie: sente: clarified by who?
00:08  mlew: is there some weird unicode parameter that's outside of the ubuntu locale stuff?
00:08  due: It fascinate me how much of the "new python user", etc, are intereted in file monitoring.
00:10  rns:  
00:10  rns: * Loaded log from Mon Jan 17 09:21:59 2011
00:10  rns:  
00:10  rns: * Now talking on #algorithms
00:10  rns: <rns> So, I know this is probably a newbie question, but it's something that's been bugging me.  When it comes to all the searching and sorting algorithms that are taught in schools, such as bubble, insertion, merge, etc. - do people actually use these on a regular basis instead of built in methods from the programming language?
00:10  sente: i don't recall, i just remember a mini-scare about delicious awhile back and then a week or two later the powers that be implied everyones bookmarks are safe and the service won't disappear
00:10  rns: ops, sorry for all that
00:11  rns: question still applies
00:11  Eevee: sure, _habnabit just used bubble sort a few days ago
00:12  ezy: hello good folks. I couldn't find sys.py neither in /usr/lib or /usr/local but importing sys in my python module works as expected. Anybody know where it could be located ?
00:14  sproingie: sys is builtin
00:14  kerio: hm, how do i open a file with a lock?
00:14  sproingie: as in *really* builtin, there's not even a .so file for it
00:14  Kzim: is there a simple way to write a lxml etree to a file please ?
00:15 * sente finds it pretty annoying that firefox's .json file of exported bookmarks can't be loaded as is by simplejson/json
00:15  MrElendig: malformed json?
00:16  sente: the issue is an extra ',' at the very end, implying another object in the array
00:16  sproingie: which is perfectly valid js syntax unless you're IE
00:16  sproingie: little fuzzy for json but a json parser shouldn't choke
00:17  sproingie: hell it's valid *python* syntax
00:19  ssbr: sproingie: not fuzzy for json
00:19  sente: the json files ends ...,"charset":"UTF-8"}]}]}"
00:19  dsimon: rns, nope
00:19  ssbr: spec rather specifically disallows a trailing comma
00:19  dsimon: in practical programming people just use the provided methods
00:19  Repgahroll: hello guys... what is a good search library to use in python programs? I need one that can search similarities and allow wildcards. Thanks
00:19  dsimon: however, it's important to learn those algorithms to understand basic cs concepts
00:20  sente: err, sorry, it ends ,"charset":"UTF-8"}]},]}  <-- the comma at [-2] being the problem
00:20  sproingie: ah.  guess you'll have to fix firefox's json then
00:20  sproingie: submit a bug and the relevant part of the spec.  maybe they'll fix it in 10 years
00:20  RandIter: rns , dsimon: specific sort algorithms can be useful depending upon the pre-sortedness and pattern of your data
00:21  RandIter: Repgahroll: what kind of search? maybe http://lucene.apache.org/pylucene/ ?
00:22  Repgahroll: RandIter, any kind of text search. that links helps a lot. thank you.
00:23  dsimon: RandIter, that's a good point
00:23  sente: sproingie: yeah, that's what i've done, but hackishly
00:23  fualo: What's the most pythonic way to get an item from a list given the value doesn't equal something?
00:23  deepy: RandIter: offtopic lucene question, is solr enough for me to try it out?
00:23  fualo: fualo: randomly, that is
00:24  Repgahroll: what about Whoosh? Is it ready to use?
00:25  sproingie: item = random.choice(mylist); while item != something: item = random.choice(mylist)
00:25  mlew: how do I set python's default encoding?
00:25  sproingie: yes there's cleverer ways, but frankly go with what's readable
00:25  mlew: I'd like to just set it at compile time so I don't have to mess with it
00:25  sproingie: er while item == something
00:25  sente: what's the correct way to remove just that one char?
00:25  sente: stu@sente ~ $ python -c 'import simplejson; simplejson.load(open("ff.json"))'
00:25  sente: ...
00:25  sente: simplejson.decoder.JSONDecodeError: Expecting object: line 1 column 211225 (char 211225)
00:26  Repgahroll: what is the "scoring" feature of Whoosh?
00:28  sproingie: sente: i'd say the hack way.  something like rawtext.replace(',]', ']').replace(',}', '}')
00:28  sproingie: mind you that'll reach into strings too but in this case i doubt it
00:28  sproingie: only proper way is to parse it and who wants to bother
00:29  sproingie: well, lex it anyway
00:29  sproingie: if there's potentially extra whitespace between the comma and bracket, i see regexes in your future
00:30 --- blubbi is now known as blub
00:31  RandIter: deepy: sry no idea
00:32  sente: how fun
00:32  sproingie: something like re.sub(r',\s*([\]}])', r'\1', raw)
00:33  sente: what's the one liner to remove the 211225'th character from a 211230 long string? i was having difficulty getting it right earlire
00:36  daemonkeeper: Is there a cleaner way to zip all elements of a list together? I do "foo = zip( bar[0], bar[1] )" which works (and I know the size in advance) but this is obviously not really neat.
00:37  sproingie: sente: s[:211224] + s[211225:]
00:37  sente: graci
00:38  MostAwesomeDude: daemonkeeper: I'm not quite sure what you mean, but zip(*l) might be what you want.
00:38  Kaedenn: daemonkeeper: iirc, zip can take variable arguments
00:38  MostAwesomeDude: Or, rather, foo = zip(*bar)
00:38  Kaedenn: foo = zip(*bar)
00:38  Kaedenn: yes, that
00:39  m0nkfish: i hate it when i get an excess 211225th character
00:39  daemonkeeper:  foo = zip(*bar) is exactly what I was looking for. Thank you
00:41 * sproingie gets mail from "REMITTANCE COMMITTEE" with Ban Ki Moon telling me i have 10.5M in my BofA account in a message that would fit in a tweet
00:41  sproingie: it makes me mad.  these people just don't try anymore.
00:42  sproingie: where are all the elaborate stories about plane crashes and grieving widows?
00:42  ssbr: sproingie: they're still around
00:43  ssbr: I saw a really good one the other week about a guy who recovered cash "legally" (OK fine not really but damn it we went through massive shit in that hellhole!) and needed to smuggle it back into the US
00:43  sproingie: see that's what i'm talking about
00:43  ssbr: it was emotionally compelling!
00:44  ssbr: sproingie: well, get back onto "these guys are suckers for emotional stories" list and off of the "these guys are idiots" spam list.
00:44  sproingie: 'course i know why they do that, because the longer stories always get caught by the spam filters
00:44  ssbr: oh whoops
00:44  sproingie: but still, my email is so much less entertaining now
00:44  ssbr: forgot to mention key point in the story, said guy was a soldier in afghanistan
00:44  ssbr: ruins plot. :(
00:45  Kaedenn: Python has AES support, yes?
00:45  sproingie: pycrypto does
--- Log closed Sat Jan 22 00:45:34 2011
