--- Log opened Mon Oct 18 01:28:53 2010
01:28 --- Users 714 nicks [0 ops, 0 halfops, 0 voices, 714 normal]
01:28  delaney: *amqp
01:28  ronny: lvh: i can just go by zed tends to be right about stuff
01:29  lvh: ronny: Hey, I've used ZeroMQ, apart from a few API things that are slowly being fixed, it's pretty cool.
01:29  lvh: delaney: Why would you want to write an AMQP server
01:29  ronny: lvh: btw, eventlet has a green zmq module
01:30 --- Channel #python was synced in 99 seconds
01:31  lvh: ronny: Yeah, Twisted's had one for a while now.
01:31  delaney: lvh: oh i don't but when i was starting to look for a way to message pass between a python thing and a c++ client i didn't see any projects like cherrypy/tornado,but for messaging
01:31  lvh: ronny: Do you happen to know if it uses ZMQ_EVENTS?
01:31  ronny: lvh: didnt read the source
01:31  delaney: we are doing ours with zeromq cause the api for c++ and python are so close, easier to work together
01:31  ronny: lvh: one thing is for sure tho - zmq > sockets
01:32  magicblaze0071: ronny: thanks. None of the xmpp implementation in python i tried worked.
01:32  lvh: ronny: Sure, no discussion there.
01:32  x0rs: can I store a list within a list?
01:32  delaney: yes
01:32  ronny: x0rs: yes
01:32  delaney: it can be lists all the way down
01:32  lvh: delaney: Yes.
01:33  x0rs: How do I append an entire list to a parent list? list1.append(list2) isn't working
01:33  lvh: delaney: l = []; l.append(l); l
01:33  lvh: x0rs: list.extend
01:33  magicblaze0071: ronny: do you know of a xmpp implementation that works? or something that i can use to substitute it?
01:34  x0rs: lvh: thanks
01:34  lvh: magicblaze0071: What doesn't work about twisted.words xmpp implementation
01:35  magicblaze0071: lvh: have you looked at the latest xmpp spec? twisted.words implementation?
01:35  lvh: magicblaze0071: No.
01:35  lvh: magicblaze0071: I was asking a honest question.
01:35  lvh: magicblaze0071: If you don't feel like answering, feel free not to answer.
01:36  magicblaze0071: lvh: There are things in the spec that are missing in twisted. I think its a few years behind.
01:36  lvh: magicblaze0071: Okay. Is there a ticket for said missing functionality?
01:36  nvictor: ronny: it wasn't you
01:36  nvictor: it was r0bby
01:36  nvictor: the #java basher
01:36  magicblaze0071: lvh: Don't know.
01:37  nvictor: i won't forget! >:(
01:37  ronny: magicblaze0071: afair there is a 3rd party addon for twisted implementing more of xmpp
01:37  magicblaze0071: ronny: wokkel?
01:37  ronny: magicblaze0071: that one
01:37  magicblaze0071: ronny: thats years behind as well. Written by the same guy who wrote twisted.words -- mostly i think.
01:37 --- unreal_ is now known as unreal
01:38  ronny: then no idea
01:38  lvh: magicblaze0071: ralphm still actively uses XMPP and Twisted -- it's possible t.w is lacking, but I find it hard to believe said code doesn't exist somewhere and isn't open source.
01:38  lvh: magicblaze0071: If you're interested, try asking him.
01:38  lvh: (That's Ralph Meijer.)
01:38  ronny: magicblaze0071: also again - client or server?
01:38  magicblaze0071: ronny: client
01:38  ronny: hmk
01:38  lvh: (I know some of the big corp XMPP users moved over to AMQP.)
01:39  magicblaze0071: lvh: I dont know him. Do you? He writes impressive code. What is there in twisted is really impressive.
01:40  magicblaze0071: lvh: Thanks for the pointer to ampq, never heard of it
01:41  lvh: magicblaze0071: Not personally.
01:41  ronny: magicblaze0071: btw, why do you need a xmpp client thats avsolutely complete?
01:41  magicblaze0071: is amqp implemented well in python?
01:41  lvh: magicblaze0071: Yes. txAMQP.
01:41  ronny: magicblaze0071: usually a much smaller implementation is sufficient
01:41  magicblaze0071: ronny: I need file transfer to start with.
01:41  lvh: (There's also py-amqplib, which is terrible, and pika, which I have heard is less terrible, but I can't vouch for it because I haven't used it.)
01:42  lvh: magicblaze0071: IIRC one of the reasons people didn't care is because the "old" XMPP stuff covered what 99% of people were doing with it.
01:42  magicblaze0071: I'm glad I'm in the 1% :)
01:42  ronny: magicblaze0071: what are you using xmpp for?
01:42  lvh: magicblaze0071: (And the 1% were better served by AMQP because presence is awkward and wrong for things that aren't IM.)
01:45  magicblaze0071: ronny: Keep in touch with friends on gmail automatically.
01:46  lvh: magicblaze0071: How does that imply file transfer
01:46  magicblaze0071: lvh: my app needs to transfer files and info to friends.
01:47  magicblaze0071: this looks pretty up2date: http://github.com/rhs/amqp
01:48  htoothrot: the readme says it's a partial prototype
01:48  lvh: magicblaze0071: Unfortunately nobody cares about AMQP/1.0
01:48  lvh: It's partial because the spec doesn't even exist yet.
01:48  lvh: (You get to guess how well the servers are implemented.)
01:49  magicblaze0071: lvh: why not stick to xmpp then? what are the qualms with xmpp?
01:49  lvh: Well, that depends what you're using it for.
01:49  lvh: For IM, XMPP is fine.
01:49  lvh: For messaging middleware, XMPP is incredibly limited and has annoying semantics.
01:50  lvh: (Specifically, presence, once you hit non-trivial amounts of servers.)
01:50  lvh: We had well over 1k Amazon EC2 slices and AMQP was pretty awesome.
01:51  magicblaze0071: what were you using it for?
01:51  magicblaze0071: seems like zmq would have been faster?
01:52  lvh: magicblaze0071: ZeroMQ wasn't publically released when we started.
01:53  lvh: magicblaze0071: (Furthermore, ZMQ and AMQP have overlapping functionality, but aren't 1:1 replacements.
01:53  lvh: "brokerless" is a lie -- they're small, and they're called 'devices', but they're pretty much brokers for all intents and purposes
01:54  magicblaze0071: brokers = servers?
01:54  lvh: magicblaze0071: Yeah.
01:55  lvh: magicblaze0071: There's some use cases for AMQP that you'd need to write yourself with ZeroMQ.
01:55  lvh: eg: a server successfully accepts a message and then blows up before handling it.
01:56  magicblaze0071: In my case, the number of servers is not too many. So I could live with xmpp I guess. But I'll definitely look into zeroMQ.
01:56  magicblaze0071: I only wish there was a xmpp implementation in python...a complete one that is.
01:57  lvh: magicblaze0071: The only thing ZMQ has been really bad with until now is integrating with other event loops.
01:57  lvh: If you're thinking "change the record already": that means GUIs, too
01:59  magicblaze0071: lvh: In my case, i can ship it to a different process if not a different thread...so no worries there
01:59  magicblaze0071: I've to go. Will be back later.
01:59  ronny: magicblaze0071: if processes dont matter, whats wrong with just using telepathy gabble over dbus?
02:00  magicblaze0071: ronny: cross platform
02:01  magicblaze0071: telepathy got me stuck on one of the OSes : linux or windows -- dont remember
02:02  ronny: magicblaze0071: so you want a xmpp client to automate contract with friends, and it should run cross-platform?
02:02  magicblaze0071: yes, + FT
02:02  ronny: sounds like wrong sets of requiremens
02:02  ronny: ft = ?
02:02  magicblaze0071: file transfer
02:02  magicblaze0071: ronny: tell that to google please?
02:02  ronny: magicblaze0071: i mean the operating system thing
02:03  MayTheFluke: is there a way to reverse a list?  I was trying list[-1:1] but it didn't work
02:04  ronny: MayTheFluke: [::-1], reversed(...), l.reverse
02:06  MayTheFluke: wow thanks!  thats very nice
02:06  magicblaze0071: ronny: do you know if telepathy can be installed easily on windows? linux? are there installers for these?
02:07  magicblaze0071: telepathy-python needs dbus-python -> Which failed to compile on my cygwin box.
02:08  ronny: magicblaze0071: hard on win32, shipped by all nice distros on linux
02:08  ronny: magicblaze0071: i dont see why yo need the protability tho
02:08  magicblaze0071: my boss? :)
02:09  Ttech: jh
02:12  smorg: Heh 'or' must be stronger than 'and'. Could have saved some debugging if I noticed sooner False and True or True  != False and (True or True)
02:13  lvh: smorg: It's just left-to-right
02:15  smorg: ooh
02:16  smorg: I was thinking it would short-circuit there
02:16  smorg: should sleep
02:23  comhero: havent played sc2 since release ish, was silver league when i left. come back and copy the 4gate build and beat a platinum
02:23  comhero: :\
02:24  Prometheus: did you use python to do it_
02:26  comhero: ?
02:27  Prometheus: since you were telling #python this =P
02:35  comhero: shit. ignore that lol.
02:42  smorg: So the way it actually works is like... take the first false value from a chain of adjacent "and"s, and if followed by an "or", keep evaluating
02:44  Juhaz: uh, what?
02:44  papna: smorg: Python doesn't evaluate anything it doesn't have to to get you your answer.
02:44  papna: smorg: Can you provide an example where you believe it does?
02:50  smorg: papna: You're right. 0 and 1 and 1 or 2 == 2. I was thinking that because 0 and 1 == 0 that anything after it was ignored.
02:51  KirkMcDonald: 'and' has a higher precedence than 'or'.
02:52  papna: Naw, it doesn't bail until it logically can.
02:55  maedhros777: Does anyone know why I get an ImportError when trying to import visual (VPython)? Looks like this: http://fpaste.org/9OBO/
02:55  maedhros777: I'm not sure where to get libboost_python-py26.so.1.40.0 or where to put it
02:55  PythonNub: [3]nertia hi
02:56  PythonNub: ooops
02:56  PythonNub: sorry
02:57  papna: maedhros777: apt-get install libboost-python1.40.0
02:57  maedhros777: okay, i'll try
02:57  maedhros777: says it
02:57  maedhros777: 's already installed
02:57  maedhros777: oops, accidentally pressed enter :)
02:59  papna: I hate i18n.
02:59  papna: Can't everyone read en_US?
02:59  maedhros777: What's i18n?
03:00  papna: maedhros777: http://en.wikipedia.org/wiki/Internationalization_and_localization
03:00  maedhros777: ok
03:01  maedhros777: so anyone know why I get an ImportError?
03:02  Hadronn: hello everyone, I need help with lambdas, I need to define a function to be a function of itself. How do I do that?
03:02  Hadronn: kind of like f()=f(f())
03:02  papna: Hadronn: You don't use lambdas to do recursion.
03:02  KirkMcDonald: Hadronn: A recursive lambda, you mean?
03:02  papna: Hadronn: USe a normal function.
03:02  ssbr: Hadronn: fixed point combinators.
03:02  ssbr: Hadronn: if this is a school assignment, do not google that.
03:03  ssbr: Hadronn: because you're probably meant to create one yourself.
03:03  ssbr: (from scratch)
03:03  smorg: that's what I was having the weird behavior with
03:03  Hadronn: I have already written a recursive function
03:03  smorg: works now
03:03  smorg: fix(lambda f: lambda x: x[0] is x[-1:] and (len(x) <= 1 or f(x[1:-1])))
03:04  Hadronn: I want it to define a function it takes as an argument as a function of itself every time it goes around a loop.
03:04  Hadronn: f = lambda x: f(x) gives me an undefined x.
03:05  ssbr: Hadronn: it shouldn't.
03:05  ssbr: that's just a function definition
03:05  ssbr: do you call it as f(x) without defining x?
03:06  Hadronn: I'll explain some more, I don't think I've been accurate enough
03:06 --- Seahorse_ is now known as Seahorse
03:07  Hadronn: it needs to do this.. repeat(lambda x: x+1,3)(100) ==> 103
03:07 --- rawdigits_ is now known as rawdigits
03:08  Hadronn: repeat() should return a function that takes an x (the 100) and applies the first arg to it n times (the 3).
03:09  papna: Hadronn: What do you have?
03:09  Hadronn: so far the recursion isn't too difficult I'm just having trouble making the function argument take itself each loop.
03:09  ssbr: Hadronn: are you required to do this recursively?
03:09  papna: I would not use recursion for this at all.
03:10  Hadronn: http://fpaste.org/9Zdn/
03:10  Hadronn: neither would I, but this is a tutorial to help me understand lambdas and recursion.
03:10  ssbr: lambdas are nothing. anybody that thinks you need to "understand" them specially, is wrong. D:<
03:10  Hadronn: I am not very good at recursion : \
03:10  ssbr: 'recursion is hard, though.
03:10  papna: Understanding those isn't important in Python, especially this kind of recursion.
03:11  ssbr: papna: Nonsense. Understanding principles like recursion is vital. Even if it's not used literally, the concepts around it are used liberally in all code everywhere.
03:11  ssbr: well, not all code.
03:11  ssbr: But a damned lot of it.
03:11  papna: Eh.
03:11  ssbr: The idea of using an explicit stack or something is generally piggybacked off of the idea of recursion, for example.
03:11  Hadronn: yes recursion is important, that's why I need this practice.
03:12  ssbr: You model things recursively. "Divide and conquer" is the first idea in algorithms anyone is ever taught. Recursion is a very useful and important concept. And don't you forget it. D:<
03:12  Dulak: recursion is doing the same thing again and again, no matter what the input is.  It's like shuffling a deck of cards.  Same input everytime but a slightly different outcome everytime.
03:12  ssbr: Dulak: uhhhh
03:12  Dulak: That's probably a horrible analogy
03:12  Crak: sure
03:12  Jerub: am i the only person who thinks about recursion by defining the termination condition first?
03:12  papna: Hadronn: This sort of recursion is unimportant and unscalable in Python.
03:12  papna: Jerub: God no.
03:12  Hadronn: I like recursion the code is usually short and does a lot.. the problem is the structure in my head I need to tackle each recursive problem isn't properly defined : P
03:13  papna: Jerub: Pattern matching <3
03:13  Dulak: Yeah I totally messed it up, ignore me.
03:13  Hadronn: I know, it's a silly thing to do but please help me to do it, it'll help me understand better.
03:13  papna: I think the first rule of writing recursive stuff is "define your termination first"
03:13  ssbr: Jerub: no, that's pretty normal
03:14  Hadronn: it terminates at n == 0
03:14  ssbr: Hadronn: f = f(f()) is wrong. do you see why?
03:14  smorg: Basically the only thing you have to know about Python and lambdas is that unlike Scheme or Haskell, (lambda x, y: ...)(x)(y) is invalid
03:14  ssbr: Jerub: I mean, a lot of times you have to think of the whole thing as well because you need to know what the overall strucutre looks like, but the termination condition is usually pretty obvious
03:14  Hadronn: yes, f() = f(f()) is what I really need BUT I can't assign to a function call, that's what lamda is for
03:14  ssbr: smorg: wait, that's valid in scheme?
03:15  Hadronn: lambda*
03:15  smorg: ssbr: well with S-expressions it's a bit different still
03:15  smorg: I believe so
03:15  ssbr: > (((lambda (a b) (+ a b)) 1) 2) . . #<procedure>: expects 2 arguments, given 1: 1
03:15  smorg: python doesn't auto-curry them
03:15  Hadronn: f = lambda x: f(x)
03:16  ssbr: Hadronn: it would still be wrong, though. f takes an argument, always
03:16  ssbr: f() = f(f()) may make sense in a language like haskell, but...
03:16  Hadronn: am I going about this the wrong way then?
03:16  Crak: have you solved the problem recursivelly but without using lambdas?
03:16  Hadronn: redefining the function each recursive loop won't work?
03:18  Hadronn: I've heard of Haskell and years ago I used Scheme, I've always been weak in recursion though, so that didn't end well.. lol
03:19  Crak: i mean, solve it recursively with a normal function and then try using lambdas
03:19  ssbr: Hadronn: redefining the function each time would work, but it's sort of an odd way to do it
03:20  Hadronn: it's the requirement of the puzzle
03:20  papna: The puzzle requires not producing intermediate solutions?
03:20  smorg: ssbr: hah ok yeah. Took me a bit to disect that simple thing
03:20  ssbr: Hadronn: I'm not entirely sure this solution can actually work, come to think of it
03:20  Hadronn: repeat(f, n) must return a function that takes an x and applies f to it n times
03:21  Hadronn: so that I can... repeat(f,n)(x)
03:21  ssbr: because if you pass in repeat(f, 2), then repeat(g, 1) will have g = f(f(x)) . So g(g(x)) is f(f(f(f(x))))
03:21  Crak: thats the problem?
03:21 --- Seahorse_ is now known as Seahorse
03:21  ssbr: the recursive calls won't add one call, they'd double each time
03:21  Hadronn: oh that does mess it up ssr..
03:21  ssbr: you could make this a three-argument recursion to make up for it.
03:21  ssbr: Or you could try it a different way!
03:21  Crak: or just iterate
03:22  Hadronn: ssbr*
03:22  Crak: for i in n: f()
03:22  ssbr: Crak: this is literally iteration.
03:22  Crak: range(n), sorry
03:22  ssbr: Crak: http://en.wikipedia.org/wiki/Iterated_function
03:23  Hadronn: f^n(x) == f(f^(n-1)(x)) is the hint.
03:23  Hadronn: I know that ^ is XOR
03:23  ssbr: Hadronn: not in this context :(
03:23  papna: That's not what the hinter meant.
03:23  ssbr: in this context it means iteration
03:24  ssbr: Hadronn: f applied N times on x is the same as f( f applied N-1 times on x)
03:24  ssbr: f^2(x) = f(f(x))
03:24  Hadronn: I get that, it's a hint on how to do the recursive step
03:24  ssbr: or IOW, f^2(x) = f(f^1(x)). f^1(x) = f(x)
03:24  Hadronn: that's why I mentioned it, it seems to be a solution to the doubling problem, maybe?
03:25  Hadronn: how I should actually be defining f each loop
03:25  ssbr: imagine if f were a function taking two arguments
03:25  Hadronn: ok
03:25  ssbr: well, let me rephrase
03:25  ssbr: imagine you have a function g(n, y)
03:25  ssbr: so that g(n, y) = f^n(y)
03:26  ssbr: then this hint becomes a lot more interesting
03:26  ssbr: or you might say that this function is g(y, n) = f^n(y)
03:27  ssbr: or, you might say that g = repeatedlyApply
03:27  ssbr: (with one modification!)
03:27  ssbr: Well, not quite
03:28  ssbr: it's actually g(f, n) = f^n
03:28  ssbr: but you can do the same relation
03:28  Hadronn: I'm lost, I'm trying but I don't get what you're hinting at
03:28  Crak: then n is the limit of recursion?
03:29  Hadronn: I can't see the overall inputs and outputs, the structure of the problem
03:29  ssbr: Hadronn: I can't be more direct without giving away the answer entirely
03:29  Crak: Hadronn: have you tried to solve the hanoi problem?
03:29  Crak: is the most basic recursion problem that i know
03:29  Hadronn: I've seen the hanoi problem solved
03:30  ssbr: like, I tried just now, but the answer I was going to give could just get copy-pasted in and your function would suddenly work :(
03:30  Crak: it isnt the same to view a solution than to solve a problem
03:30  Hadronn: what I have so far, is it close?
03:30  Hadronn: have I got the right concept?
03:31  Crak: ssbr: do you have a solution using lambdas?
03:31  ssbr: Crak: yes
03:33  Hadronn: repeatedlyApply() should evaluate to say f(f(f(x))) if n is 3, so the final evaluating step would be f(f(f(100))) which would evaluate to say, 103 if f=x+1
03:33  ssbr: Hadronn: what is f^0(x) ?
03:34  ssbr: or, IOW, what should repeatedlyApply(f, 0)(x) be?
03:34  Hadronn: I don't understand XOR in that context.
03:34  Hadronn: I know 1^0 = 1
03:34  ssbr: It isn't an xor. This is what we were telling you before.
03:35  ssbr: the hint has nothing to do with xor.
03:35  Hadronn: I don't understand it then, what is it?
03:35  ssbr: remember the hint, said f^n(x) = f(f^n-1(x)) ?
03:35  ssbr: that was actually half of a definition of what the ^ operator means in this context
03:36  ssbr: it's called "function iteration". f^3(x) is f(f(f(x)))
03:36  Hadronn: o.O
03:36  ssbr: f^3(x) is also repeatedlyApply(f, 3)(x)
03:36  Hadronn: O
03:36  ssbr: Hadronn: did you ever take calculus?
03:36  ssbr: ^ here is like exponentiation
03:36 * dassouki drank 5 cups of coffee .. it's 10 40 am .. and i love python .. WEEEEEEEEE
03:36  ssbr: so it's like, if you ever saw sin^2(x), and you knew it meant sin(sin(x))
03:37  ssbr: so the question is, what should f^0(x) be? or, what should repeatedlyApply(f, 0)(x) be?
03:37  Hadronn: whenever I see ^ I read 'power of'
03:37  ssbr: Hadronn: that's a good way to think of it.
03:37  dassouki: 10 40 pm sorry
03:37  Hadronn: f^0(x) = 0
03:37  ssbr: Hadronn: once you get into algebra, you'll see that there is a definition of functions and multiplication that makes ^ in this context "power of"
03:37  Hadronn: because you are applying the function 0 times
03:38  ssbr: Hadronn: but the definition of ^ is such that f^1(x) = f(f^0(x)) !
03:38  ssbr: does this work out sensibly?
03:38  Hadronn: I feel very angry that I'm having difficulty with this, but with the definition you've just given me I think I can see what it does
03:38  Hadronn: I don't know how I was supposed to know this without being told what it means
03:38  Hadronn: other than a bunch of experimentation.
03:39  Hadronn: ^ acts just like XOR on integers
03:39  ssbr: they may have expected you to already know what function iteration was, from math class
03:39  ssbr: this is a different ^
03:39  ssbr: this is math notation
03:39  ssbr: python would call it the ** operator
03:39  Hadronn: yes I know the **
03:40  ssbr: it's just notation
03:40  Hadronn: I had erased ^ definition as 'power of' in my mind when using Python
03:40  Hadronn: because I thought it was replaced by XOR and ** was the operator to use
03:40  ssbr: you shouldn't erase things, they come in useful later
03:40  ssbr: in more mathy things, and in colloquial contexts, usually exponentiation is ^, because it looks like an up arrow, which would signify a superscript
03:41  ssbr: so anyway
03:41  Hadronn: f^n(x) should just do all the work for me then
03:41  ssbr: you have to implement ^
03:42  ssbr: f^n == repeatedlyApply(f, n)
03:42  Crak: thats the recursive part
03:42  ssbr: f^n(x) == repeatedlyApply(f, n)(x)
03:47  Hadronn: I still don't get it : (
03:48  smorg: figure out the definition of Y yet?
03:48  smorg: I see a lot of f(f(f(f(f
03:49  Hadronn: I'm not stupid, I'm missing something.
03:51  dassouki: i might be late on this convo, what's up?
03:52  Hadronn: oh.. f^n(x) is just his way of writing the hint, I don't need to actually use ^ in the code.
03:53 * dassouki facepalms
03:53  Hadronn: I thought ^ had some strange operation between functions, or something
03:54 --- Natch is now known as Natch|
03:56  Hadronn: i.e. f applied to x n times is the same as f applied to f applied to x n-1 times.
03:56  ssbr: Hadronn: yes, that's what I've been trying to tell you
03:56  ssbr: but you need to figure out the base case
03:57  ssbr: and then you need to extend the base case
03:57  smorg: <smorg> @src iterate
03:57  smorg: <lambdabot> iterate f x =  x : iterate f (f x)
03:58  smorg: <smorg> @src fix
03:58  smorg: <lambdabot> fix f = let x = f x in x
03:58  Hadronn: that hint doesn't help me, I already figured out I need to decrement n each loop and add an application of f.
03:59  mgw: quick request for advice... I'm implementing a sort of data filter class, and am looking for ideas of what makes most sense.
04:00  mgw: The usage right now looks like this:
04:00  ssbr: smorg: pff@haskell
04:00  mgw: ModelClass.filter(ModelClass.first_name == "John" & ModelClass.last_name != "Smith")
04:01  mgw: But I don't think it's a very good idea to override the bitwise & operator in this way
04:01  mgw: any ideas?
04:01  ssbr: mgw: it sounds like maybe it would be better to use an ORM
04:01  mgw: ssbr: That's what we're writing, more or less
04:01  ssbr: mgw: these things have already been worked out and implemented in that very style. Take a look at SQLA for example
04:01  mgw: for cassandra
04:01  ssbr: mgw: OK. Well, then take a look at ORMs for example APIs
04:01  mgw: Yep, we looked at SQLA
04:01  mgw: That's where we got some of our ideas
04:02  ssbr: mgw: also take a look at Django ORM and Storm
04:02  ssbr: mgw: it's not unreasonable to overload &, the problem with it is operator precedence is a bit wonky
04:02  ssbr: (the SQLA docs mention this)
04:02  ssbr: I wonder somewhat if writing an SQLA backend would be crazy
04:03  mgw: SQLAlchemy is pretty SQL oriented (hence the name)
04:03  mgw: I've worked with its internals a bit in the past....
04:04  mgw: Besides, there's the whole issue of using SQLA with Twisted
04:05  PythonNub: how do you inherit from object?>
04:06  smorg: I wonder if you can use iter()
04:06  smorg: something like lambda x: iter(x(x), exit condition)
04:07  mgw: smorg: How would that work in more detail?
04:07  ssbr: smorg: that would be terrible
04:07  ssbr: also you're missing a reduce
04:08  ssbr: er, wait, you're not missing a reduce
04:08  ssbr: you're-- well, anyway
04:08  smorg: mgw: I'm not sure - the problem is it has to return something on every call, so I'm thinking it could act as a prototype for defining a generaic "repeat" function
04:08  ssbr: PythonNub: class MyClass(object): ...
04:10  Hadronn: I don't think I'm going to get this on my own
04:11  Hadronn: not after sitting here for 2 hours trying
04:11  ssbr: Hadronn: talk to your prof
04:11  ssbr: post to your class ML?
04:12  Hadronn: for math problems I can't figure out I usually check the back of the book for the answer and then I get it, I can go and do other related questions
04:13  Hadronn: I'll call my friend maybe he can explain it to me, thanks for the help so far.
04:13  mgw: hmm
04:14  mgw: ok, so Storm is doing it with &
04:14 --- peshalto__ is now known as 13WAAKYDB
04:14  mgw: store.find(Foo, (Foo.name == u"bar") & (Foo.id == 5))
04:15  mgw: And even has this note: The use of parenthesis around each sub expression is required due to operator precedence.
04:15  ivan`: that's friggin' ugly
04:16  ivan`: I hope it was justified
04:16  mgw: ivan: That was a quote from the Storm manual
04:17  ivan`: there's also dejavu
04:17  mgw: ivan`: We're doing it like this: ModelClass.filter((ModelClass.first_name == "John") & (ModelClass.last_name != "Smith"))
04:17  warz: hi all, is there a quicker way to place integers in a string dynamically? currently im using this method: 'my string %d blah' % (1)
04:17  ivan`: dejavu decompiles your functions to generate a query
04:18  mgw: I'm not generating a query, this is for Cassandra
--- Log closed Mon Oct 18 04:24:22 2010
--- Log opened Mon Oct 18 04:24:45 2010
04:24 --- Users 695 nicks [0 ops, 0 halfops, 0 voices, 695 normal]
04:24  ssbr: warz: there's not a whole lot there to shorten
04:24  frag4now: ssbr: how can I avoid that?
04:24  ssbr: it's perhaps easier to use %s instead of %d
04:25  ssbr: frag4now: avoid using glob.glob?
04:25  mgw: ivan`: why do you prefer the dejavu way over the Storm way?
04:25  frag4now: glob.glob?
04:25  ssbr: <ssbr> if you want to know the disk usage of all avi files in the cwd, use ['du', '-sh'] + glob.glob('*.avi')
04:25  mgw: It seems it's primarily a matter of & vs and, unless i'm missing something
04:25  ssbr: I meant use Popen(['du', '-sh'] + glob.glob('*.avi'), stdout=PIPE) of course
04:25  mgw: in terms of the end developer functionality
04:25  PythonNub: How do i make a new, unblocking instance of a class?
04:25  frag4now: ssbr: ah ok i lost that ;)
04:26  ssbr: PythonNub: "unblocking instance"?
04:26 --- Channel #python was synced in 90 seconds
04:26  geck: ok
04:26  ivan`: mgw: the code for both queries is a complete mismatch for what actually happens in the database, so I prefer the more python-looking thing
04:26  geck: I feel silly doing this
04:26  geck: http://paste2.org/p/1042572
04:26  ssbr: frag4now: glob.glob(s) works exactly like s would be expanded in terms of glob/fnmatch rules: * and ? and so on
04:26  PythonNub: Aah. threads, never mind
04:26  geck: but need to compare two arrays and run a specific piece of code if ane element exists in one and not in the other
04:27  ivan`: mgw: I don't have a strong opinion on this
04:27  ssbr: geck: try using the if statement: if file in your_list
04:27  ivan`: there are people in #storm who are smarter
04:27  ssbr: well, if statement and in operator, I mean
04:27  geck: naturally
04:27  ssbr: geck: it may be worthwile, conceptually, to use a set instead of a list somewhere
04:27  mgw: yeah, if and in could be useful
04:28 --- 13WAAKYDB is now known as peshalto
04:31  tos9: Gah, I dunno how to debug this. I have a method that's being decorated by 2 decorator classes. The outer decorator adds a self._cache dict to the func. When I try to add a k-v say, to self._cache, I get no error, but nothing goes in the dict. I have no setattr, self._cache is a regular dict. With only the outer decorator, I can properly assign to the dict, so something is happening when the two are interacting. What should I check? (pa
04:31  ivan`: cut off after (pa
04:32  tos9: (pastebin if need be :) )
04:32  papna: tos9: Post reproducing code.
04:33  ivan`: caching decorators don't make sense because they make the cache part of the global state
04:33  geck: so, if Not file in array
04:33  geck: ?
04:34  geck: sorry, I only started doing python 2 days ago
04:34  geck: (been programming perl and PHP for years)
04:36  DigitalKiwi: you poor thing
04:40  tos9: papna, Bleh, codepad won't run it, but more or less this is it: http://codepad.org/HgBILBBi   I have a feeling something is wrong with my __get__'s. Do you see anything obvious (sorry for not simplifying much)?
04:42  tos9: geck: Ask a clearer question please, it's not really clear if there's a question in there
04:42  Hadronn: ok I've tried some more and it's down to what the base case is
04:42  Hadronn: how can I insert the argument x into the nested n functions?
04:43  mgw: ivan`: The dejavu way would seem to require considerably more overhead than the Storm way...
04:43  mgw: I'm comparing the code
04:44  ssbr: Hadronn: each function should pass x down to whatever it calls
04:44  ssbr: (each iterated function)
04:45  papna: tos9: You're memoizing the method.
04:46  papna: tos9: You make a *new* method every time.
04:46  papna: tos9: And memoize it.
04:46  papna: Rather, memoize its results.
04:46  papna: tos9: And then every time you throw it away.
04:46  papna: tos9: And generate it over again.
04:46  tos9: papna: That's what's going on in __get__ right? I don't think I'm clear enough on how to do that the right way
04:46  papna: tos9: Memoize the underlying function.
04:46  papna: tos9: See http://bitbucket.org/mikegraham/remember/
04:48  tos9: papna: i.e. this types.MethodType business?
04:49  papna: tos9: No. types.MethodType is just another way of doing what you do with f.__get__.
04:49  papna: tos9: The key difference is that the cache itself isn't stored on the bound method.
04:50  tos9: papna: I would want it to be stored on the memoize object, not the bound method right?
04:50  tos9: Ah, MethodMemoizer, that's what you meant.
04:50  tos9: OK, let's see if I understand this...
04:50  papna: tos9: Every time you look your thing up, you make a bound thing.
04:51  tos9: papna: Which I don't want. But apparently to not do that is to do some awful hack isn't it?
04:51  papna: tos9: And you have a memoizing bound method object.
04:51  papna: tos9: Next time you look up the method, you get a DIFFERENT memoized bound method object with a cache of its own which starts blank.
04:52  papna: tos9: Do you get what I mean? You make a brand new memoize object each time.
04:52  papna: You'd have to provide the *same* memoize object each time for the cache to be stored.
04:53  tos9: papna: Yes, I get what's happening, just not yet how I should be fixing it. I see 2 solutions: 1) store the _cache on the memoize object, not on the method, 2) generate only 1 bound method. Is there a way to do 2 without killing a kitten?
04:54  tos9: Oh wait. I'm generating a new *memoize* object... Whoops.
04:55  tos9: I thought you meant I was rebinding the method every time.
04:55  tos9: OK, so then I *need* to do 2.
04:55  papna: tos9: When you do self.__class__(...), you make a fresh memoize object.
04:55  tos9: Right, I called the class again and rebound the method. Think I'm on the same page now.
04:59  geck: so not( ) is the correct syntax..
04:59  geck: sorry for the vagueness :)
04:59  geck: python seems really powerful.. but man, the syntax is strange after coming from other languages
04:59  KirkMcDonald: geck: Nah.
05:00  papna: KirkMcDonald: You know his context.
05:00  KirkMcDonald: Well, sure, PHP and Perl.
05:00  papna: I was thinking C, C++, and Java
05:00  papna: geck: What languages do you come from?
05:01  tos9: "geck: (been programming perl and PHP for years)"
05:01  mgw: Anybody seen this hack before: http://code.activestate.com/recipes/384122/ ?
05:01  papna: mgw: =(
05:01  tos9: mgw: Yes. Ew.
05:02  KirkMcDonald: mgw: Yes. It's awful.
05:02  mgw: That was my first impression too...
05:02  KirkMcDonald: In fact, that's a trick I originally saw in C++.
05:02  KirkMcDonald: And it's even *more* awful there.
05:03  geck: papna: I also do some C and ruby, but perl and PHP are my bread and better
05:03  geck: I mean, python is definately good stuff
05:03  geck: the standard lib in it is amazing :)
05:04  tos9: papna: This doesn't scream dirty hack?
05:05  mgw: So... regarding the query stuff.... this is how I'm doing it now: http://pastebin.com/TiTPPBJw
05:05  infobob: http://paste.pocoo.org/show/276820/ (repasted for mgw)
05:06  mgw: infobob: lol
05:08  papna: tos9: What doesn't?
05:08  mordy: #pyqt seems dead.. does anyone know exactly how objects are freed in pyqt? i have this relatively small code that seems rather leaky (or maybe i'm obviously doing something wrong on the python end?) http://paste.pocoo.org/show/276821/
05:08  tos9: papna: The code you pointed me to above
05:08  papna: tos9: The best way to memoize methods of most classes is to store a cache on the instance of the class.
05:09  papna: tos9: I can't think of a way I like more.
05:10  papna: tos9: The other way involves weakrefs.
05:10  tos9: papna: Oh, that's different from what he's doing here, this is on the method, just making sure you get back the same one ain't it?
05:11  papna: tos9: I don't see the harm in that.
05:12  papna: tos9: That's not the important part of the technique.
05:13  tos9: papna: It looks convoluted to me. Or more convoluted than storing it on the instance
05:14  init: how can I get the directory in which the script I'm running resides?
05:14  papna: tos9: It is stored on the instance.
05:14  init: it is not necessarily the same as the current working directory
05:14  papna: init: os.path.split(__file__)[0]
05:14  papna: init: Why?
05:15  papna: init: And when are you going to reap these processes?
05:15  init: e.g., someone might be running it from a different directory, but I need to know what directory the script is running to load stuff like conf files
05:15  init: eh it's in my queue
05:15  init: I got lots of children
05:15  init: :|
05:15  papna: init: That's not generally the right place for conf files to reside.
05:16  tos9: papna: Is it? To retrieve the _cache here I'm gonna need to call instance.memoized_func._cache, rather than instance._cache
05:16  init: it is in my case >_>
05:16  papna: tos9: What?
05:17  papna: tos9: That isn't the attribute structure of remember or your code.
05:17  tos9: papna: Each memoized function is gonna get a _cache attr right? Which means that I need to be careful about returning the same method. If I instead stored it in the instance's namespace itself, I could not worry about that. Or am I still being dense?
05:18  papna: That sounds right to me.
05:20  tos9: So other than the added cost of rebinding a method every time it's called, which I'd need to do if I wasn't careful about returning the same method, isn't the second way a bit cleaner? I'd just, what, need to define the decorator inside my class' namespace
05:20  papna: tos9: I don't understand your question.
05:20  tos9: And then I'd get access to the instance directly
05:21  tos9: papna: K, Think I'm gonna stop wasting your time until I understand things a bit clearer / concretely. Lemme try some code and come back when I at least have *something* working right
05:22  papna: tos9: You have a few options. The simplest is to memoize the underlying function. This is usually what you want for hashable types which use something other than their identity.
05:22  tos9: "underlying function = ?" What's getting called inside my method? i.e. urlopen in this case?
05:22  tos9: That sounds easy
05:23  tos9: (ier)
05:23  papna: tos9: I mean _request the function.
05:23  papna: tos9: It's usually not what you want, since it can keep your instance alive when it is only accessible through your cache.
05:24  papna: This is what would happen if you applied remember.memoize.memoize to the method.
05:25  papna: The other option is to store per-instance caches, which is what remember.memoize.memoize_method does.
05:25  papna: The nicest place to store these caches is on the instance, since that ties the cache's lifetime to the instance.
05:26  papna: tos9: You can try to store it somewhere else and get around this with weakrefs, but that runs into other problems.
05:26  papna: I've written WeakKeyIdentityDict and I don't think it's less hacky.
05:28  tos9: "Be very careful to be sure
05:28  tos9:     you can memoize the method based on its non-``self`` arguments (This is
05:28  tos9:     likely only if you have an immutable object or if your method should
05:28  tos9:     really be a normal function.)"
05:30  papna: tos9: Yeah, that part's precarious.
05:30  papna: tos9: self contains state.
05:31  papna: The most robust memoization strategy is to make a function of many arguments and call it in a method.
05:31  papna: def method(self, a): return memoized_func(a, self.b, self.c, self.d)
05:31  papna: Methods aren't normally pure.
05:33  papna: _request, as implemented, is pure unless (the undefined) DEFAULT_HEADERS changes (or the website changes!!!).
05:34  tos9: Sorry, can you define pure
05:34  papna: tos9: A pure function is a function whose return value is determined solely by its arguments.
05:34  papna: tos9: operator.add is (usually ;) ) pure.
05:34  papna: tos9: raw_input is decidedly not pure.
05:35  papna: You can only memoize pure functions.
05:35  tos9: Aha. Well then, the content of the website is expected to change extremely often. I'm caching for a certain amount of time because I don't care to get out of date results for 2 mins or so
05:36  papna: Right. I get your strategy.
05:37  tos9: So, when you say "make a function of many arguments and call it in a method", you mean a top level function, which I can memoize normally, without worrying about binding then?
05:37  tos9: And then a method in the class that simply calls the top level function
05:37  papna: tos9: Right, that is often a good solution.
05:38  Cam: What is a good library to remove "&amp;" like stuff..
05:38  tos9: Oh... That sounds like the best solution yet.
05:38  papna: Cam: You're parsing xml?
05:38  Cam: papna; html actually.
05:38  papna: Cam: lxml.html then
05:38  Cam: papna; is there a convert() function?
05:39  papna: Cam: It will give you the data as unescaped unicode.
05:39  Cam: Mk.
05:39  tos9: papna: The only thing that worries me though is that after I get this working, I'm gonna want to do something like this as well http://codepad.org/KQcjtsy0  which I can't figure out how to do with any of the ways you've suggested yet (or any I can think of)
05:39  tos9: Since all my funcs channel through _request, which is the only thing memoized.
05:40  papna: tos9: I don't really understand that snippet.
05:40  tos9: (where basically the other decorator would tell f_n to not retrieve a cached response)
05:41  tos9: papna: Yeah, sorry. Basically, I'm gonna somehow need to store which function is calling out to _request, because I have functions that when called, need to have the page content refreshed immediately the next time the function for that page is called
05:42  tos9: Instead of possibly retrieving a cached response for that page
05:43  papna: tos9: Perhaps you want to have a force_fresh=False default argument or something?
05:43  tos9: So function f1, after it's called, necessitates f2, if it's ever called, to need to retrieve a noncached response
05:44  mordy: gah
05:44  papna: tos9: Sounds complicated. Are you sure this is all necessary?
05:44  tos9: papna: Well, say I have a method get_saved_links(), and a method called save() and another called unsave(). I don't want calling save() and then calling get_saved_links() to not function as expected
05:45  tos9: i.e., to show me that I just saved something
05:46  papna: tos9: Would it be simpler to remove the saved links from the cache right that moment?
05:46  tos9: papna: That would work equally well, but again, how would I be able to find the right entry in the _cache to delete? It's not being stored by get_saved_links, so I can't look it up. get_saved_links is making a call to _request
05:47  mordy: i've been trying to debug this leak the whole day.. where do i start? i know there are a few tools for memory leak debugging but they all seem so obscure
05:47  tos9: I'm sure this is all my first lesson on "make sure you've fully thought out your implementation before you fumble through it like an idiot"
05:48  tos9: mordy: dash recommends one... what's it called... meliae I think
05:48  Brend: tos9: No, fumbling through it like an idiot is usually the best (only) way
05:48  papna: tos9: I don't know what your data actually look like.
05:48  mordy: let me look at that
05:48  tos9: mordy: Yeah. https://launchpad.net/meliae   Perhaps it'd help
05:49  tos9: papna: Well, as is I'm memoizing _request based on the args that got passed into it, which is basically the URL. So I suppose I could look up by URL and delete the URLs that I know have to do with my get_saved_links method. I suppose that's probably the easiest thing then.
05:50  tos9: Brend: comforting :D
05:50  papna: tos9: I think you might be missing a worthwhile level of abstraction.
05:51  tos9: papna: K. I hope I'm not getting on your nerves yet, but can you clarify what you mean?
05:51  faldridge: is there a way to test if two libraries are dynamically linked against the same shared library programmatically in python, since I obviously can't do "try: ... except SEGFAULT: ..."  :P
05:51  tos9: Or does it depend on my actual case too much?
05:52  mordy: grr.. it won't build, debian wants me to upgrade half my system so i can use it... it says it's similar to guppy? how similar? i found guppy to be not very helpful in my case.. or that might be because of the way pyqt does stuff
05:53  tos9: mordy: To be quite honest, I have never had to use it yet, so I can't say. I'm sure someone else has though, it seems to be really nice.
05:53  tos9: mordy: did you try the pkg or you just tried building from source?
05:54  mordy: i jsut see a tarball (whcih i tried to build) and the debian package, which wants to upgrade half my system
05:55  papna: tos9: I mean representing the data abstractly in your program as meaningful things "the user's links" and caching by that rather than an implementation detail ("the URL").
05:55  papna: tos9: I don't have a concrete picture of a applicable abstractions.
05:57  mordy: i remember i needed to debug a memory leak a while back too, i used some graphing thingy, forgot its name though
05:57  mordy: but it was quite helpful
05:57  Biaise: merde, qu'est-ce que je fout là...
05:57  ssbr: mais, non
05:58  tos9: papna: The data actually in this case isn't the user's links, it's "the API url to retrieve the user's links", meaning it's a single url that I'd need to search through and remove. But OK, lemme first try to get memoize working correctly as a top level function and then I'll cross that bridge. Thank you so much for your help as always mate
05:58  ssbr: Englais, monsieur!
05:58  ssbr: that's almost all the french I know! I'm running out of things to say!
05:58  Biaise: quel monsieur ?
05:58  ssbr: ("mdr"?)
05:58  tos9: I remember some french from muzzy. Does that count?
05:59  Biaise: what" muzzy "is ?
05:59  Biaise: ssbr, i'm not "monsieur"
06:00  Biaise: i'm just tired, with big bags under eyes, but i still Madame
06:00  ssbr: Biaise: but that's the only thing I know!
06:00  teratorn: haha, I used to watch muzzy (in spanish) as a kid
06:00  ssbr: I know how to 8say* the other one, not spell it. Google says "mademoiselle"
06:00  papna: tos9: You're never interested in the user's links?
06:00  mordy: if someone could look at this and tell me if they see something obviously wrong.. i don't know what though
06:00  mordy: http://paste.pocoo.org/show/276830/
06:01  Biaise: ssbr, "mademoiselle" is for not married woman, I'm not married but I'm consider that "mademoiselle" is an obsolete word
06:01  mordy: but pyqt has a lot of weird things...
06:01  tos9: papna: they're retrieved by GETing the appropriate API URL (like the rest of my functions). So basically each function is uniquely identified by which API URL I need to hit to get it
06:01  ssbr: Biaise: in france?
06:01  Biaise: ssbr,  yeah
06:01  tos9: papna (more or less)
06:01 --- PythonNub is now known as DiesIraeSucks
06:01  ssbr: I wonder if it's the same in Quebec
06:02 --- DiesIraeSucks is now known as PythonNub
06:02  Biaise: ssbr, but I think that... say "mademoiselle" to a woman who is working is quite rude
06:02  papna: tos9: Right, and I'm talking about abstracting that.
06:02  mordy: for example if i create an object and don't leave it accessible to normal python (e.g. the object goes out of scope, save for Qt's ownership model), then the widget does not emit a destroyed signal
06:02  Biaise: (ok, understand english : OK / understand english talking about python : erk)
06:03  papna: mordy: I expect that.
06:03  ssbr: Biaise: I had always understood it to be the equivalent of English "miss" fairly directly
06:03  tos9: Blaise: http://www.youtube.com/watch?v=mD9i39GENWU
06:03  ssbr: but it's been a while since I learned any french
06:03  Biaise: ssbr, yeah
06:03  Biaise: that's like miss I guess
06:03  ssbr: Biaise: right, but I call my professors "miss", even when they are married...
06:03  Biaise: hahaha
06:03  ssbr: for me it is like "sir".
06:04  ssbr: "madam" or "ma'am" makes them sound old
06:04  Biaise: ssbr, I suppose they like this because "miss" look like they was young :P
06:04  ssbr: women don't like being called "ma'am" in english :(
06:04  ssbr: Biaise: right
06:04  Biaise: yeah, some french women are like this
06:04  mordy: can't see why that happens.. i had to make a set to keep the references of the new objects.. and they are removed from the set when they are destroyed (whcih works)
06:04  davemo: i want to read a file 4 lines at a time in an iteration, what's the easiest way to do that?
06:04  Biaise: tos9, cho is Blaise? :P Blaise Pascal ? That's not me :P
06:04  papna: davemo: See the grouper recipe in the itertools documentation.
06:05  davemo: papna: ty, will look ;)
06:05  Biaise: tos9, OMG ! Fortunaly, french people don't have Muzzy's voice :D
06:06  tos9: papna: I mean, I know what abstraction is, but I'm not seeing how abstracting here is going to help, being that what I'm storing is just a URL for each function
06:06  mordy: and heapy gives me the extremely helpful "PyQt4.QtCore.pyqtWrapperType"
06:06  tos9: What would I do? Have a class for each function call?
06:07  tos9: Biaise: Je ne vous crois pas.
06:08  papna: tos9: `self.foo_stale = True` is easier to think about for me than `@needs_refresh(f3, f4)`.
06:08  papna: tos9: It also allows you to add f5 without subtle bugs popping up.
06:08  Biaise: tos9, even my throat-cancer boss didn't have this kind voice :D
06:08  Biaise: kinf of*
06:08  Biaise: kind* -_-
06:08  mordy: grrrr
06:09  tos9: Biaise: Oh man you always feel like an asshole when the cancer card comes out :( Sorry to hear that madame.
06:09  Biaise: ?!
06:09  Biaise: what!
06:09  tos9: Biaise: Oh, the boss had throat cancer?
06:09  Biaise: I'm french so I love Pierre Desproges
06:09  Biaise: so cancer is funny
06:10  Biaise: French -> Desproges -> funny cancer. He made humor with his cancer. He's a genius
06:10  tos9: papna: Oh ok. On my class in other words, instead of on each function. And then say after every function call clear out whatever from the cache I didn't want? That makes sense, yeah ok I can see why that's a bit nicer perhaps.
06:10  Biaise: I don't know if their is sub' videos of desproges...
06:12  papna: tos9: It strikes me as less confusing to say "Anything needing x is stale" than "f4 and f6 are stale"
06:14  tos9: Nice, yeah ok, agreed. I could even stick that in my memoizer then, instead of after every function call.
06:14  Biaise: tos9, http://www.youtube.com/watch?v=7BR4gXOe36k :P
06:15  krphop: greetings!
06:15  tos9: krphop: evening.
06:16  krphop: i've got a loop that calls a function a few times, which may error out on occasion. I'd like this error to simply exit out of the function, back to the loop
06:16  mordy: hrrm.. still gonna try with heapy
06:16  mordy: is there a way to get just the count?
06:16  krphop: break and continue wont work, since its not a loop from within the function i want to exit from
06:17  krphop: is there some command i can use to exit a current function, but not exit the entire script?
06:17  krphop: oh, i cna just return, cant i
06:17  atxq: return works
06:18  atxq: depends the situation I guess
06:18  DiesIrae: Hi all :)
06:18  krphop: heh, why didnt i think of that :-)
06:18  DiesIrae: Said Id be back eventually
06:18  DiesIrae: So here I am :)
06:18  papna: krphop: You may want return, you may want to raise an exception and catch it inside the loop.
06:18  tos9: krphop: try except, catch the error and continue works too
06:18  tos9: Yeah
06:18  DiesIrae: ANyone present?
06:18  tos9: Nah
06:19  atxq: depends who is asking
06:19  krphop: papna, tos9: the error in this case is ok, i just need to return to the loop, and try the next iteration
06:19  krphop: so i think return will work best for me
06:20  krphop: the error in the function i want to exit from is actually caught by a try/except, and the except will do the return to the previous loop
06:21  tos9: krphop why do I get the odd feeling that you're doing something strange?
06:21  mordy: bleh..
06:21  papna: krphop: exceptions don't indicate something is wrong or unexpected.
06:21  mordy: how do i get the count of objects from heapy without dumping the ten-line output?
06:21  papna: krphop: Are you sure you don't want to catch the exception *outside* of your function?
06:21  mordy: i can't see anywhere apparent
06:22  krphop: i possibly am doing something strange
06:22  krphop: i'm not much of a python coder heh
06:22  Biaise: <atxq> return works : that's the cleverest thing I heard today !
06:23  tos9: krphop: did you understand "Are you sure you don't want to catch the exception *outside* of your function?"?
06:23  atxq: how long you been online?
06:23  krphop: basically, i have a loop to run a function with gathers stats from a list of hosts, if a particular host doesnt have the stat, i'm not super concerned, i just want to continue to the other hosts
06:23  krphop: s/with/which/
06:23  tos9: atxq: The french are easily impressed ;)
06:23  mordy: qahh i see
06:24  Biaise: tos9, hey, it's just 6 am here, just 4 persons talk to me between midnight and 6
06:24  tos9: krphop: Normally, your retrieve_stat would raise ICantFindStatForHost. And then your loop would try: retrieve_stat(host) except ICantFindStatForHost: continue
06:25  tos9: Biaise: Must have been a busy night :)
06:25  krphop: ah! ok i think that makes sense
06:25  papna: (I can't help but read that as an interface.)
06:26  tos9: Heh
06:27 --- pr3d4t0r is now known as pr3d4k4t
06:27  Biaise: tos9, j'ai glandé... (I "screw  around" ?) But my lesson begin at midday, i've the time to finish this work...
06:28  atxq: seems like almost every night is a busy night for a python programmer
06:28  tos9: Biaise: Hahah. I think unknowingly that's funnier than you meant it :)
06:29  Biaise: atxq, hell ! I'm very very noob about python. I just can't imagine what will happen o my nights when I'll improve oO
06:30  Biaise: tos9, I'm note sure that i've understood your sentence...
06:31  atxq: once you become obsessed with it, might as well forget about being normal
06:31  Biaise: atxq, "beging normal" ? My teachers call me "the queer", I think it's to late
06:32  atxq: hey, who needs friends when you got python, right?
06:32 --- PythonNub is now known as PythonNub|AWAY
06:32  atxq: rsrsrsr
06:32  mordy: nice, according to heapy i'm not even leaking any memory
06:32  tos9: Biaise: I'm not sure you want to. And it's even less fun to explain. Don't worry, you're not missing anything, I'm just an idiot (or really, just tired). Your english is good, mine is just dumb at this hour.
06:32  mordy: WTF
06:33  tos9: mordy: what made you think you were?
06:33  Biaise: wtf : what the fuck : c'est quoi ce bordel ? -> I understand english \o/
06:33  mordy: top is just showing my resident memory usage go up up up up
06:33  mordy: on windows too, same effect
06:33  mordy: and it's consistent with the amount of tabs i add, and closing the tabs (and supposedly deleting them) doesn't seem to help
06:34  Biaise: atxq, you can have weird and nerd friends, that's cool too
06:35  mordy: or maybe i shouldn't trust top that much.. bleh
06:35  Biaise: err, some python users are using windows ? oO that's weird :P
06:35  mordy: i just have a windows VM up to test for portability
06:35  Biaise: (what bleh means, word reference don't know that)
06:35  Biaise: mordy, ouf !  I breath at new ! thx
06:37  atxq: oh, that makes sense
06:38  mordy: so do i trust top or guppy?
06:39  atxq: Biaise: where do you find those kinds of friends? most of mine friends call me up when they have issues with their windows.
06:39  Brend: mordy: Neither, is my vote
06:39  Biaise: atxq : only my CV say that I know how to use windows
06:39  mordy: i might just rewrite the GUI in C++ and maybe wrap it with SIP one day
06:39  drinkycrow: !lol
06:39  Biaise: I don't say to my friend that I know it
06:39  mordy: it's crazy.. almost 100MB at startup
06:39  drinkycrow: aww
06:40  drinkycrow: it used to say not to use lol because python 3 isn't out yet
06:40  Brend: mordy: Memory is complicated. Usually once Python (or anything else) asks for some memory from the OS, it keeps it forever, even after freeing it. Unless the OS needs it back, which it hardly ever does.
06:40  Brend: mordy: So reported memory use doesn't mean much
06:40  Biaise: atxq, and I'm in a Ubuntu-society, so I meet cool people
06:40  mordy: Brend: so you're saying python doesn't free() in the conventional sense?
06:40  DigitalKiwi: Biaise: hahahaha....
06:40  Brend: mordy: I'm saying it does, and that calling free() will not generally result in a reduction in reported memory use
06:41  atxq: Ubuntu just rocks!
06:41  Brend: mordy: Unless the OS is running out of memory
06:41  Biaise: DigitalKiwi, what ? Do you made the mistake to tell to your friends that you could use windows ?
06:42  DigitalKiwi: again in english please?
06:42  Biaise: ok, you're mean so I'll use google translation :P
06:42  atxq: rsrsrsr.
06:43  Biaise: DigitalKiwi, "Did you make the mistake of telling your friends that you knew to use Windows?"
06:43  DigitalKiwi: no
06:44  Biaise: great idea !
06:44  DigitalKiwi: http://narf-archive.com/pix/d84cf13b20461454402c26d383cd5da53b59780b.jpeg
06:44  Biaise: that's gates to hell...*
06:45  Biaise: hahaha
06:45  Biaise: hey, where are you from ? US ? UK ? Canada ?
06:45  atxq: clearly she looks like she uses linux for sure. she is at peace with her os
06:45 --- predsZzZ is now known as preds
06:46  DigitalKiwi: am I limited to those three?
06:46  Biaise: DigitalKiwi, no, i just forget the "..."
06:46  Biaise: forgot* ?
06:46  DigitalKiwi: luckily even if I were I'm from the US anyway
06:47  Biaise: *put her "irregular verbs" paper
06:47  Biaise: which state ?
06:47  DigitalKiwi: the one with all the corn
06:48  DigitalKiwi: Nebraska
06:48  Biaise: I didn't know where Corn-city was, thank you
06:49  mordy: dunno, free() always seems to free here
06:49  mordy: what i do know is that malloc doesn't actually give you the memory until you read/write to it
06:49 * DigitalKiwi doesn't know where that is either
06:50  mordy: or rather it's just mapped as virtual memory or something like that
06:50  Brend: mordy: Here's a different test. Open some tabs, then close a few, then check the reported memory use, then open another tab and see if it went up
06:50  Brend: mordy: If it did, maybe you have a problem
06:50  Biaise: <atxq> Ubuntu just rocks! -> Ohhh ! thank you so much ! I was in a Free Software event yesterday and they have fun of me because I'm a poor little baby using ubuntu
06:50  mordy: Brend: yep, that's what's happening
06:50  mordy: in top at least.. guppy says otherwise
06:51  mordy: of course guppy also gives a higher memory usage to begin with.. top says 40 RES, guppy gives me something like 60
06:51  DigitalKiwi: Biaise: hahaha... ;)
06:51  Brend: mordy: What does pmap say?
06:52  mordy: http://paste.pocoo.org/show/276840/
06:53  mordy: that's with 70 tabs open
06:53  mordy: let me close them all and see how much anon i have left
06:53  mordy: 0000000000e94000  12344K rw---    [ anon ]
06:53  mordy: is the biggest block now
06:56  atxq: Biaise, so what was the event you attended?
06:58  mordy: none of this makes any sense.. pmap i imagine is clearly showing a leak?
06:58  mordy: oh didn't show you the paste
07:01  Biaise: atxq, JDLL
07:01  Biaise: Journées Du Logiciel Libre
07:01  Biaise: jdll.org
07:01  Biaise: breakfast time ! bon appétit !
07:02  Biaise: atxq, this is an event in Lyon, 3  or 2 days, where we  make conferences, shops and presentations
07:07  mordy: Brend: http://paste.pocoo.org/show/276843/
07:07  mordy: and in the course of the program i create and close 60 tabs
07:07  Brend: So it's a pretty small leak
07:08  Brend: Does that thing you're using give you a summary of objects?
07:08  Brend: Usually what I do here is poke around in the gc module looking for types that I'm accumulating more and more objects of
07:11  mordy: via gc.get_objects?
07:11  Brend: Yeah
07:13  mordy: i don't know how to do it 'cleverly'.. i'd preferrably want a hierarchy that gets bigger each time rather than just the most plentiful object type
07:13  mordy: whcih is usually str, dict, tuple, etc. etc.
07:14  Brend: Build a dict by type, filter out the builtins you don't care about
07:15  mordy: hrrm.. ok.. i'll do that
07:15  ssbr: hm
07:16  ssbr: how would I start an X process with subprocess, without having that process steal focus?
07:16  ssbr: er, not an X process. You know. A graphical application.
07:16  nosklo: ssbr: under which platform?
07:16  ssbr: nosklo: KDE
07:16  ssbr: KDE3*
07:16  nosklo: urgh. dunno then
07:19  ssbr: :(
07:19  mordy: hrrm.. i have to go now.. it's not as simple as it seems, i need to figure out a reasonable threshold for variation.. there will still be tons of types
07:19  mordy: later
07:44  iman: from where can i downoad python interpreter for windows?
07:46  Jerub: iman: python.org
07:52  Fraxtil: Hi guys, I'm trying to write a meta-command command for my IRC bot (so that I can call multiple commands at once). This is what I've got so far: eval(command[user_input[0]], (lambda g: [g.update({'user_input': user_input[1:]}), g][1])(globals().copy()))
07:52  Fraxtil: Also, for example, this is one of the possible commands I have: command["update_config"] = "type(self.config[user_input[0]])(user_input[1])"
07:53  Fraxtil: But I can't figure out why it doesn't work (the bot automatically catches any errors and just says "Error" instead). Can someone find where I went wrong?
07:55  Brend: I'd say that the first place you went wrong was making your bot give no useful feedback on errors ;)
07:55  wielkiszu: writing perl-like o0
08:01 --- Fraxtil is now known as Fraxtil`
08:02  mordy: well, i've got some more time
08:04 --- taiyal is now known as taiyal|zzz
08:05  mordy: and how to sort them, too
08:18  The_Don74: does anyone have advice on how to read data types besides strings from a file?
08:19  mordy: pickle?
08:19  mordy: i mean what kind of data types and for what purpose
08:20  The_Don74: specifically a long int (4 bytes)
08:20  The_Don74: i think pickle is what i'm after though, i'll take a look : )
08:20  vvcephei: just read it as a string and int() it
08:20  tos9: The_Don74: Pickle is almost certainly not what you wanted
--- Log closed Mon Oct 18 08:26:24 2010
--- Log opened Mon Oct 18 08:26:46 2010
08:26 --- Users 683 nicks [0 ops, 0 halfops, 0 voices, 683 normal]
08:26 --- Server: [gibson.freenode.net] [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
08:27  mordy: or swig
08:27 * mordy hides
08:27  mordy: though in itself it really doesn't do any kind of serialization
08:28 --- Channel #python was synced in 90 seconds
08:28  deever: is there some kind of imp.load_source with the possibility to supply a custom __name__?
08:28  mordy: ok. am i missing anything here? http://paste.pocoo.org/show/276858/
08:28  The_Don74: i'm trying struct.unpack('>l', mfile.read(4))  but it's saying   "TypeError: 'str' does not support the buffer interface"
08:29  mordy: i'm calling this function whenever i'm pressing the close button on my tab, and it dumps out statistics whcih again make it seem as if it's not wasting anything
08:30  nosklo: The_Don74: use python 2.x
08:30  Brend: mordy: So maybe the leak isn't in Python :(
08:31  The_Don74: i'll try...
08:31  mordy: according to the qt folks my code should work as expected, and i have the same leak whether i use pyqt or pyside
08:32  mordy: then again i don't know how much they differ..
08:32  Brend: mordy: In the parlance of our times, sux to be u
08:34  mordy: i am glad to live in an era enlightened by such expressiveness
08:36  The_Don74: it seems to be converting now, but the struct method is returning a tuple instead of a long int
08:37  Brend: It always returns tuples.
08:37  Brend: Your int is presumably inside
08:37  The_Don74: yeah
08:37  The_Don74: just checked x)
08:39  The_Don74: thanks guys!
08:41  mordy: let me see about tuples and such
08:42  mordy: and other non-interesting data types
08:43  mordy: http://paste.pocoo.org/show/276859/
08:43  The_Don74: i can just do result[0] to get the long
08:43  mordy: i don't know where that QAction is coming from.. but i highly doubt it's the cause of my ills
08:44  mordy: or what the Type class is (maybe that's just from generating the dict in the first place? never seems to move)
08:53  mordy: what exactly is that 'Type' though?
09:00  sig^: hi, if I have a def inside a def, can I get variables from the outer def's scope to the inner def?
09:00  sig^: the inner def's scope doesn't seem to get "inherited" the way it does in Java or C
09:00  mordy: it's called a closure, yes
09:00  kerio: sig^: yes, you can
09:00  kerio: closures are awesome :)
09:00  _habnabit: sig^, C doesn't have closures
09:00  ssbr: sig^: Neither Java nor C have closures
09:00  mordy: however i once had a funky issue with trying an eval within a nested function
09:01  _habnabit: mordy, yeah, don't use eval
09:01  kerio: mordy: eval is a ugly kludge
09:01  mordy: i found a better alternative but i still haven't figured out why it didn't work
09:01  kerio: writing a module and importing it is almost better
09:01  kerio: i thought you could pass locals and globals to eval
09:01  _habnabit: mordy, because eval is broken
09:02  kerio: yup, eval(foo, globals(), locals())
09:02  kerio: and i'll stop right there because _habnabit will yell at me otherwise
09:02  ssbr: kerio: yerrr
09:03  ssbr: oh wait, no, that does pretty much work with eval, dunnit, since eval can't assign out
09:03  ssbr: wait, maybe it can
09:03  mordy: the closure variables aren't in 'locals' though
09:04  _habnabit: Yes, because that's not how closures work
09:04  _habnabit: And that's why eval is broken
09:04  _habnabit: Don't use eval
09:04  kerio: i second the "don't use eval"
09:05  Habbie: eval is eval.
09:05  kerio: what if you need that kind of dynamic coding though?
09:05  ssbr: there are multiple ways in which eval is broken
09:05  papna: mordy: Why are you using eval?
09:05  ssbr: kerio: when?
09:05  papna: kerio: For what?
09:05  _habnabit: kerio, if you think you need eval, then you're doing python wrong, basically
09:05  kerio: no idea, but eval probably exists for a reason
09:05  kerio: doesn't it?
09:05  _habnabit: kerio, I've never needed eval; you can accomplish just about *anything* without it
09:05  papna: Nuclear bombs exist for a reason.
09:05  _habnabit: kerio, hahaha, you think things in python exist for a reason
09:06  mordy: well, i wanted to use eval for something.. jsut to make my code shorter and save myself from writing pretty muhc the same line over and over again
09:06  kerio: mordy: so... use a loop?
09:06  _habnabit: mordy, I *guarantee* you could've written the same thing simpler without eval
09:06  mordy: well, i did in that particular instance
09:06  papna: Get used to that.
09:07  kerio: papna: get used to the existance of hbombs?
09:08  papna: kerio: They're here to stay.
09:08  kerio: papna: well, same for eval
09:10  mordy: i'm trying to use getattr and setattr as much as possible
09:10  papna: That's a bad goal.
09:10  mordy: but sometimes you don't really have an object to operate on
09:11  mordy: considering i'm a horrible typist and that i'm prone to bad typos, it's saved me a lot of headache
09:11  _habnabit: What
09:11  _habnabit: How the hell does using getattr do anything different in that regard
09:12  mordy: let'
09:12  mordy: s say i have two objects with many attribute names in common and i'd like to assign a few attributes of the first object to that of the second one
09:14  mordy: so i could either do: object1.foo = object2.foo; object1.bar = object2.bar; object1.baz = object2.baz etc. etc. etc.
09:14  papna: But you still have to TYPE the code.
09:14  mordy: or something like for a in ("foo", "bar", "baz"): setattr(object1, a, getattr(object2, a, None))
09:14  papna: getattr/setattr can sometimes make it a little easier to do such things, but it doesn't avoid typing.
09:15  papna: all the typoable things.
09:15  papna: Also, three-arg getattr occurs rarely in sane environments.
09:17  papna: I mean--really--here it probably is a lot worse.
09:17  papna: Since it makes a whole class of typos error silently.
09:25  themoebius: how can I remove all handlers from logger? I see a way to remove one if I have a reference to the handler, but I don't have it
09:25  themoebius: there's a library that is adding a handler that prints to stdout and I want to remove it
09:32  phrearch: hello
09:32  phrearch: is it possible to json encode a function call to js somehow?
09:33  _habnabit: phrearch, er.
09:33  phrearch: i got this json: http://paste.pocoo.org/show/276867/
09:33  _habnabit: phrearch, what would that do?
09:33  phrearch: i need to have that data in a dict
09:33  phrearch: but right now it doesnt validate as valid json
09:33  phrearch: it only works with js's eval offcourse
09:34  _habnabit: Then it isn't json
09:34  phrearch: nope. i probably should check whether i could change that first
09:35  _habnabit: You still haven't said what it is you're trying to do
09:47  phrearch: hm, sorry. i have a js client that logs into a c# server and starts a poller. the c# server responds with something that can be eval'ed by the js client. im trying to proxy the login through a django webinterface, so authentication can be merged with django's
09:47 --- pr3d4k4t is now known as pr3d4t0r
09:48  phrearch: i fixed it by cutting of the function part from the string, so its valid json
09:49  phrearch: didnt thought of that before
09:50  Alberth: one broken server
09:55 --- glezos_afk is now known as glezos
09:56  Alberth: mordy: make a 'copy' method, and assign values explicitly
10:00 * cloudy_nz hmms
10:00  cloudy_nz: what's the best way to make clean URLs on a website?
10:01  _habnabit: Your URL dispatcher doesn't support it already?
10:01  cloudy_nz: er...URL dispatcher?
10:01  _habnabit: Yes
10:01  _habnabit: In your web framework
10:04  cloudy_nz: that's probably my issue...no framework, just mod_python or mod_wsgi
10:04  _habnabit: cloudy_nz, mod_python is dead; don't use it
10:06  marekw2143: hi, is it possible to use memory allocated for string a="some string"  for stroring "another string"?
10:07  ssbr: marekw2143: Nope.
10:07  sig^: hmm, I was asking earlier about the closure and scope thing: http://fpaste.org/jSNs/
10:07  ssbr: marekw2143: strings are immutable
10:07  shleda: hi, am a python noob, good at PHP, need to know what is the best way to interact with MySQL, I was not able to find anything on docs.python.org
10:08  marekw2143: ssbr: and would it be much work to make python's module for allowing mutable strings?
10:08  ssbr: shleda: oursql
10:08  ssbr: marekw2143: there is a mutable string thing. You can use mmap.
10:08  ssbr: but that's kind of...
10:08  sig^: so it seems that the local variables of the outer closure don't automagically become visible in the inner closure
10:08  ssbr: sig^: could you explain what you mean in the form of code?
10:09  Gooffy: marekw2143: bytearray
10:09  sig^: ssbr: the link above  (:
10:09  ssbr: sig^: you can't assign to a nonlocal
10:09  ssbr: sig^: use the .extend method or something instead
10:09  sig^: oh... how come
10:10  ssbr: sig^: assignments are local by default
10:10  shleda: ssbr: thanks am looking at i
10:10  ssbr: an assignment declares a local variable
10:10  sig^: ok... thanks, I'll test that
10:10  ssbr: if you want a different scope for your variable you would need a declaration, such as "nonlocal", or "global"
10:10  ssbr: (nonlocal is added in 3.x)
10:10  ssbr: but you don't need these, you can use .extend
10:10  marekw2143: Goffy: I'll check that out
10:10  ssbr: or even .append
10:10  marekw2143: ssbr, Gooffy :  thanks!
10:11  sig^: ok  I:  I'm afraid this should also work on 2.x  append should be fine here. Or then I just test making a generator here  (:
10:11  sig^: that actually would make sense.
10:15  shleda: ssbr: what about this -> oursqlx/oursql.c:4: fatal error: Python.h: No such file or directory
10:15  ssbr: sig^: ...?
10:15  ssbr: sig^: if you want something to work on 2.x and 3.x, write it for 2.6, and use 2to3
10:15  shleda: am on ubuntu
10:15  ssbr: shleda: do you have python-dev installed?
10:15  shleda: well let me check, may be its not installed
10:16  _habnabit: shleda, just install from the oursql ppa
10:16  shleda: _habnabit: thanks, just did sudo apt-get :), ssbr it wasnt installed, installing
10:17  _habnabit: shleda, no, I mean, use the oursql binary
10:17  _habnabit: shleda, don't build from source
10:17  shleda: ok
10:20  shleda: well guys, not a flamewar, but I just found mysqldb on SF.net, is it much better/easy to use ?
10:20  _habnabit: oursql was written because mysqldb is shit, so
10:22  cloudy_nz: mysqldb's ok to learn some things with
10:22  _habnabit: "How not to write a database driver"
10:22  verte: :D
10:24  marekw2143: do when there will be object a = ['t','e','x','t',None], would compiler use space for storing "a" variable after doing a=''.join(a)?
10:25  jorrit: marekw2143, what do you mean by that?
10:25  verte: there is one 'a' variable there
10:25  jorrit: marekw2143, you let 'a' point to a new value. The old value is lost (garbage collected) at some point.
10:27  marekw2143: jorrit: is it way to allocate some memory "before"?
10:27  jorrit: ?
10:27  jorrit: marekw2143, you are asking questions that don't make sense in python.
10:27  jorrit: marekw2143, and also you should not worry about this at all.
10:27  marekw2143: jorrit: I'm worrying about sped
10:27  jorrit: marekw2143, don't
10:27  marekw2143: s/sped/speed
10:27  jorrit: marekw2143, not in that way at least.
10:28  jorrit: marekw2143, if you have to worry about speed then make sure your algorithms are ok. Don't micro-optimize.
10:28  marekw2143: my "problem" is low level :)
10:28  jorrit: And how do you know you have a problem?
10:29  marekw2143: jorrit: I would like to write json decoder, which is fast
10:29  Brend: We already have a fast json decoder.
10:29  jorrit: marekw2143, yes, and are you suffering from a speed problem right now?
10:29  jorrit: marekw2143, because if you are not then stop worrying about this.
10:29  jorrit: marekw2143, and even if you have a speed problem this kind of thing will not help.
10:29  marekw2143: but ......
10:29  marekw2143: that decoder would work that way:
10:30  marekw2143: first - "learning phase" - would do statistics about formats of messages decoded
10:31  marekw2143: then, after decoding e.g. 1000 000 messages, decoder would have information that e.g. 70% of messages are in format: '{"name": "some_name", "surname": "some_surname", "age": "some_age"}
10:31  jorrit: marekw2143, what has that to do with this?
10:31  marekw2143: jorrit: let me finish :)
10:32  marekw2143: then it would allocate e.g. 1000 objects of format {"name": __memory__for_storing_string, "surname": __memory_for_storing_string, "age": __memory_for_storing_int}
10:32  _habnabit: marekw2143, what is the point of this line of questioning
10:32  _habnabit: marekw2143, why do you care
10:33  verte: some compilers already use the same representation for dicts with the same keys
10:36  xelad: Is there a way to get the name of the current function without using the inspect module?
10:36  _habnabit: xelad, look up a bit
10:36  Wild_Cat: xelad: Why do you want to do this?
10:36  Wild_Cat: (it's usually a bad idea)
10:36  _habnabit: xelad, it'll be whatever's after 'def'
10:36  verte: functions names are not meaningful
10:36  verte: or not even
10:37  verte: @wraps etc
10:37  xelad: Alright, thanks.
10:42  magesing: Anyone know what's going on with www.scipy.org? I am trying to look up numpy/scipy docs, but the site seems to be down
10:43  Thiryal: magesing: Works for me, may be your connection.
10:43  magesing: Thiryal: thanks... I'll try and figure out why that site dosen't work for me now that I know it works in general
10:44  Thiryal: magesing: Actually, it may be www.scipy.org, I tried docs like you said and that loaded fine.
10:45  Thiryal: All the docs pages I loaded worked fine [docs.scipy.org], but reread your message and www.scipy.org did timeout.
10:45  VladDrac: same here, dns timeouts
10:46  magesing: Thiryal, VladDrac: ok, so I guess there is some internet wierdness going on
10:46  magesing: I'm going to guess shark attack on a sub-atlantic fiber
10:46  magesing: but I'm getting a bit off-topic with that.
10:47  Thiryal: Possibly a name server issue somewhere, docs.scipy.org is fine for me, nslookup gives 216.62.213.249 if you want to try a direct connection to just read docs. :)
10:47  magesing: Thiryal: I can't ping that IP address from where I'm sittin
10:47  magesing: sitting
10:48  Thiryal: magesing: Most www servers will not respond to ping requests, it doesn't respond to my pings either, but it does load up the docs site. :)
10:48  VladDrac: ping doesn't always say everything. I can't ping but I can connect to port 80
10:49  magesing: lol, thanks!
10:49  Neumaennl: webchat.freenode.net is down, too
10:49  Thiryal: Though interestingly, that is apparently not the same pages as I get via a different way of connecting. Hmm.
10:50  magesing: hmm 216.62.213.249 gets me to a site called "Ask scipy", not the docs
10:51  Habbie: all nameservers for scipy.org are down
10:51  Thiryal: Yeah, I'm investigating that... nslookup definitely thinks that's the IP, my web browser can reach docs.scipy.org and sub-pages i've never seen fine, but if I go to that direct IP I get Ask scipy...
10:53  Thiryal: Hmm. Is there a good way to find out the IP address of a page you're visiting? (Using Chrome at the moment)
10:53  VladDrac: scipy essentially has two nameservers, they're both down
10:54  magesing: Thiryal: as you can get at docs.scipy.org, would you do me a huge favor and download the pdf docs for me and send them my way? magesing at gmail dot com
10:54  Thiryal: magesing: Sure thing.
10:55  magesing: Thiryal: thanks.
10:55  magesing: lol I have never had such a hard time with Ring TFM
10:57  bob2: Thiryal: urlparse module + socket.gethostbyname
10:57  simplechat: heyyas, is there any easily manipulatable 2d array/matrix around in pythons libraries?
10:57  simplechat: i need to be able to insert things into rows/columns
10:57  bob2: you can do that with nested lists if you like
10:57  bob2: or scipy/numpy
10:58  bob2: or the array module
10:58  simplechat: yeah, but i need to both insert things into rows and columns
10:58  simplechat: which makes both very hard
10:58  bob2: well, not hard, but you need to write a bit of code, yeah
10:58  simplechat: yeah
10:58  simplechat: i'm thinking there needs to be something simple
10:58  simplechat: to do this
10:59  Thiryal: magesing: should be in your inbox shortly, my upstream's a lot slower than downstream. :/
11:02  magesing: Thiryal: Many thanks. . . Yeah asymetric net connections are really annoying
11:06  sid3k:  hi there
11:07  sid3k: is there any term/naming for this path: "../"
11:08  acicula: parent directory
11:08  airstrike: that was an easy one
11:09  sid3k: I know what it refers to, the thing I'm asking is that, how can we call "../" part of a path?
11:10  sid3k: for example, what name should I give to a function returns whether given path has "../" or not
11:10  Habbie: sid3k, why do you have such a function?
11:10  sid3k: any ideas?
11:10  jefimenko: does anyone know if the https client provided by the pycurl library supports server certificate validation?
11:10  marekw2143: how to easily convert seconds to days, hours, minutes, seconds?
11:11  marekw2143: for example, how to get amount of days that are in 384021521 seconds?
11:11  jefimenko: i know that urllib doesn't and google searches on the subject bring so many results that it's hard to find a good alternative solution
11:11  sid3k: Habbie: I'm working on a tool which is based on nested configuration documents
11:11  Habbie: jefimenko, it should
11:11  Neumaennl: Is webchat.freenode.net down for you, too?
11:11  bob2: jefimenko: 99% sure pycurl does, just checking
11:11  bob2: marekw2143: by writing some code, or dateutil or epsilon.extime
11:12  bob2: (if you're bored, it might be a fun way to practice tdd =)
11:12  Habbie: Neumaennl, yes.
11:12  VladDrac: marekw2143, you know there are 60 seconds in a minute, 60 minutes in an hour, and so on?
11:12  marekw2143: VladDrac: yes, but would like to use some library instead of reinventing the whell
11:13  marekw2143: s/whell/wheel
11:13  marekw2143: bob2: thanks !
11:13  jefimenko: the docs are pretty light on pycurl, but it seems to be a light wrapper around the C library
11:13  jml: in Python 3, is there a way to get at the class when decorating a method?
11:13  bob2: jefimenko: http://amanica.blogspot.com/2009/11/pycurl-does-not-like-bad-certificates.html agrees
11:14  verte: jml: the class doesn't exist when you are decorating a function that will become a method
11:14  pozic: Is there a library which given a graph gives me a nice embedding that actually works?
11:14  verte: embedding?
11:14  bob2: embedding?
11:14  jml: verte: thanks.
11:14  bob2: snap
11:14  jefimenko: bob2: thanks
11:15  pozic: bob2: that's the CS name for a graph with coordinates.
11:15  bob2: pozic: ah
11:15  pozic: 3,2,1 and someone will say 'graphviz'.
11:15  jefimenko: bob2: i guess that's my new alternative to urllib when i need server-cert validation :)
11:15  pozic: Sure, but which binding have you actually tested to work?
11:16  ornitorrincos: bob2, in your url, shouldn't just adding the server's certificate to /etc/ssl/cets/ca-certificates do it?
11:16  bob2: ornitorrincos: yeah, but it was just an example of it checking (urllib doesn't at all)
11:22  aep: hm, from a C callback, how do i return None? NULL seems to be an error
11:23  bob2: Py_None?
11:23  bob2: http://docs.python.org/c-api/none.html
11:23  Dieterbe: Hey guys.  i have a simple python webpage, which I run in apache using mod_python.publisher, my index.py imports a config module from config.py, in config.py i have a parameter totals, the weird thing is, when i refresh index.py in the browser, sometimes it uses the old config value, and sometimes the new
11:23  aep: aye thanks
11:23  Dieterbe: i made sure there are no *pyc anywhere in the directory, so that's not it
11:23  bob2: read the mod_python docs
11:24  bob2: it does not automatically reload things in a useful manner
11:24  Dieterbe: aha
11:24  bob2: (mod_python is also unmaintained and abandoned, you might like to look at writing code that speaks WSGI (or uses one of the 99.999% of python web things that speak wsgi) and mod_wsgi)
11:25  bob2: http://www.modpython.org/pipermail/mod_python/2004-February/014966.html
11:27  Dieterbe: thanks bob2
11:27  bob2: welcome
11:27  bob2: using flask or bottle, your web thing might be just as short but more portable
11:33  Dieterbe: hmm yes they look cool
11:33  Dieterbe: my current code is kinda hacky, it's my first python web project (and i don't have much python experience anyway :)
11:34  bob2: ah
11:34  bob2: mod_python is basically a trap now
11:34  bob2: it's not portable beyond apache, it's unpleasant to write for, and it's been unmaintained forever
11:35  Dieterbe: well, if flask and bottle look cool. i considered django but it's too complex for me (i don't even need a database)
11:35  Dieterbe: unfortunately, if i rewrite it now, my boss will kill me ;)
11:35  Dieterbe: s/if//
11:35  Dieterbe: in the first sentence
11:36  bob2: ah well, for future reference ;)
11:36  Dieterbe: yes, for sure
11:39  Timtitibu: Hi. Have one more newbie question :\  Here it is - http://fpaste.org/YPFw/
11:40  bob2: presumably those classes overrode __or__
11:40  bob2: which is a bit overly cute
11:40  bob2: (so you need to read the genshi docs)
11:43  bob2: I can't see an obvious part of their docs that talk about it
11:43  Timtitibu: So, __or__ should be overwritten in both classes to support those syntax?
11:44  bob2: ah, there we go: http://genshi.edgewall.org/wiki/Documentation/streams.html#filtering
11:46  bob2: it needs to be overridden on one or both
11:47  Gooffy: Timtitibu: __or__ or __ror__ ;-)
11:48  Timtitibu: Thanks, guys :)
11:51  oracle: is this a safe command sudo python setup.py install
11:52  Thiryal: oracle: without context, I'd say no.
11:52  Thiryal: setup.py could execute arbitrary code with root permissions with that command, which is inherently unsafe.
11:53  oracle: i kind of expected python would disable such things
11:53  bob2: of course not
11:53  Thiryal: oracle: It's not python that's doing that, it's you using sudo.
11:53  bob2: cpython is not sandboxed
11:53  bob2: you ran a random script as root
11:55  Dieterbe: bob2: web.py also looks cool, although it comes with it's own server, so i'ld need to proxy from apache
11:55  oracle: why do i have to run this setup.py script to install the app?
11:56  Thiryal: Because that's [one of] the standard ways to install a python app. You don't normally need to sudo it if your python was installed correctly.
11:56  Habbie: Thiryal, how would you figure it works without sudo?
11:57  bob2: --help, --home etc
11:57  bob2: Dieterbe: pretty sure it does wsgi too
11:57  Thiryal: Habbie: At least on my machine, my python install is set up so that I can install to site-packages without root priviledges. I dunno about others.
11:57  zoidberg-: Good morning Python! :)
11:57  bob2: Dieterbe: it really is like 99%+ of python web frameworks
11:59  Dieterbe: bob2: i thought that's what they said about django
11:59  bob2: django also runs under wsgi
12:01  Dieterbe: ah i thought you meant "web.py is 99% of python web framework usages" or something
12:01  bob2: oh, hell no
12:02  bob2: I just meant that almost all web frameworsk speak wsgi
12:02  Dieterbe: ah okay
12:02  Dieterbe: though question then.. flask.. bottle.. web.py.. which to choose? :)
12:04  Dieterbe: they all look cool
12:04  Dieterbe: and non-restrictive
12:07  cnf: and werkzeug?
12:07  cnf: :P
12:10  VladDrac: nagare.org also has an interesting approach, framework-wise. Depends on stackless
12:13  Brend: Dieterbe, not web.py
12:13  Brend: Other than that, they're all fine
12:15  cnf: what's wrong with web.py?
12:15  Brend: It's crazy
12:16  cnf: Wacky Waving Inflatable Arm Flailing Tube Man crazy?
12:18  kerio: t.w is way better
12:18  cnf: t.w?
12:18  cnf: o,O
12:19  bob2: twisted.web
12:19  bob2: which is pretty low level for web apps
12:19  cnf: yeah
12:19  bob2: nevow is higher but also relatively low level
12:19  Brend: (and if you like t.w but don't like low level, then Warp!)
12:19  bob2: mantissa is much higher but insane
12:19  Brend: bob2: I wouldn't call Mantissa insane, I just wouldn't call it a web app framework
12:23  mage_: Pylons is good too
12:28  VladDrac: and then there's rctk (rctk.googlecode.com), my toy project, but that's more of a desktop UI that uses a browser than a web framework.
12:33  mage_: I have my main process which feed a multiprocessing.Queue(50) with data coming from os.walk(). Then I have a two mp.Process() which process this queue, and do some operations on files. How can I terminate those two processes from the main thread once the Queue has been processed ?
12:33  mage_: I read that calling .terminate() is not safe on a process which access a Query
12:33  mage_: s/Query/Queue
12:38  Thiryal: mage_: I believe you need to close and join the Queue first, at which point you then know it's safe to join the Processes that were using it. The .terminate docs do say you shouldn't use it when accessing a Queue, but .terminate() isn't even necessary in many cases if they end naturally via join / etc.
12:38  punkoff: Hi. How can I filter my string to get rid of non-unicode data? Python 2.6
12:38  punkoff: The problem I'm getting is: ValueError: All strings must be XML compatible: Unicode or ASCII, no NULL bytes
12:40  xavieran: This is probably a stupid question, but how do I get the inverse sin?
12:40  xavieran: There doesn't seem to be anything the math lib...
12:41  xavieran: I'm seeing a heap of sinh asin, etc., but no inverse sin...
12:41  Thiryal: punkoff: Have you tried unicode(mystring)? You can use keywords to control how it then encodes possible errors.
12:41  Thiryal: xavieran: What do you mean by inverse sin?
12:42  mage_: Thiryal: ok thanks
12:42  carlesso: Is it faster to do from math import pi, import math.pi as pi or import math and use math.pi? And where can I find documentation on this topic?
12:43  Yhg1s: carlesso: there's no speed difference.
12:43  Yhg1s: 'import math.pi as pi' won't work, however.
12:43  xavieran: Well, elementary trig (but yes, radians) you have inverse_sin(Opposite/Hypotenuse) = theta
12:43  Yhg1s: carlesso: just use 'import math' and then use 'math.pi'.
12:44  xavieran: Thiryal: ^^^
12:44  carlesso: Yhg1s, yes, it was for example, let's thing about modules
12:44  punkoff: Thiryal, I'm using s.encode('utf-8', 'xmlcharref') on all strings before inserting them to XML, but that doesn't help
12:44  Thiryal: xavieran: Then that's commonly called the arcsine. :)
12:44  J_P: hi all
12:44  xavieran: Aha, thanks :D
12:44  Yhg1s: carlesso: then it matters even less.
12:44  Thiryal: xavieran: See this page: http://en.wikipedia.org/wiki/Inverse_trigonometric_functions
12:44  carlesso: ok, thansk
12:44  Yhg1s: punkoff: UTF-8 isn't unicode.
12:44  bob2: punkoff: well, when you're decoding your input string, you can tell it to remove invalid utf-8 chars
12:44  bob2: I think that's what you mean
12:44  Yhg1s: punkoff: *don't* encode them in UTF-8, but leave them unicode, and insert them.
12:44  xavieran: Thank Thiryal
12:45  punkoff: Yhg1s, I can't tell if they're unicode before inserting since I read these from file, obtain from user or anything
12:45  punkoff: - they can come from everywhere
12:46  bob2: a string of bytes isn't very useful
12:46  sig^: hmm, something I asked before about closures and scope and stuff
12:46  bob2: you need to know the encoding
12:46  Yhg1s: punkoff: if you get them from a file, then they aren't unicode, they're bytestrings.
12:46  Yhg1s: punkoff: unicode is a *distinct data type*, not an encoding as you seem to think.
12:46  sig^: so I found you can embed "global variables" in function closure scope by defining them as function arguments
12:46  sig^: which feels kind of queasy
12:47  sig^: but actually is the same as in javascript
12:47  Yhg1s: sig^: that doesn't sound right.
12:47  sig^: no, but it's the only way I found that works  I:
12:47  Yhg1s: sig^: do you mean 'function arguments can have defaults'?
12:47  sig^: mm, something like that
12:47  Yhg1s: sig^: no, I mean your description doesn't sound right.
12:47  Yhg1s: I have no idea what you're trying to do, so I don't know if it's sane at all.
12:48  sig^: yea, the point is, I have this def inside a def and I'd like to get some variables from the outer def to the inner def
12:48  sig^: without using global
12:48  merijn: sig^: Pastebin example code and explain which part confuses you?
12:48  sig^: I was already tipped about nonlocal, but I'm not quite sure what that was for
12:48  shylent: sig^: pass them as arguments? :P
12:48  sig^: http://fpaste.org/jSNs/  I had something like this
12:48  merijn: Because right now you might as well be talking chinese as far as making sense to me goes
12:48  Yhg1s: sig^: the inner function can just use the variables from the outer function.
12:49  sig^: the point there was that the nonlocal thing was read-only
12:49  Yhg1s: eh?
12:49  Yhg1s: the entire point of 'nonlocal' is that it *isn't* readonly.
12:49  Yhg1s: read-only access to outer-scope variables you get for free.
12:49  Yhg1s: sig^: that paste seems to be expired.
12:49  merijn: sig^: You're reading a local variable before writing it, which is an error
12:49  tomas_: er... can somebody please tell me what I'm doing wrong?
12:50  tomas_: testlist = [u'apple', u'tomato', u'orange']
12:50  tomas_: 'apple' and 'carrot' in testlist
12:50  merijn: sig^: You might be thinking you are referring to the global variable, but you are not
12:50  punkoff: Yhg1s, complete pipeline from source to destination: node.set_attribute(something, unicode(data.encode('utf-8', 'xmlcharrefreplace')))
12:50  tomas_: False
12:50  bob2: tomas_: and binds tigther than in
12:50  tomas_: testlist = [u'Development', u'Green', u'testprod-Admin']
12:50  bob2: so that's probably not what you want
12:50  tomas_: 'testprod-User' and 'Development' in testlist
12:50  tomas_: True
12:50  punkoff: Yhg1s, XML specialchars are getting replaced so I believe encode() *does* check the string for valid data
12:50  sig^: merijn: that's true, not really. Just a variable that would retain its value outside the function calls
12:50  Yhg1s: punkoff: yes, 'unicode(data.encode('utf-8', 'xmlcharrefreplace')); makes no sense.
12:50  sig^: but it wouldn't be used outside the function
12:51  Yhg1s: punkoff: encode expects its argument to be *unicode*, not a bytestring.
12:51  tomas_: oops looks like I've jumped the queue
12:51  merijn: sig^: You want to define "nonlocal parents" at the top of the walk_inheritance_tree() definition
12:51  sig^: ok, thanks  (:  I have to look into that nonlocal thing
12:51  bob2: tomas_: so either do two 'in's, or set intersection or all(x in testlist for x in ('apple', 'carrot'))
12:51  bahamas: tomas_: 'a' and 'b' gives you 'b'.
12:51  sig^: so far I'm fine with this, and this also works with 2.x...
12:52  Yhg1s: sig^: that sounds like exactly what nonlocal does. if you're using a Python version that doesn't have it, you can use a mutable container (like a list) in the outer scope.
12:52  sig^: ('cause SCons is 2.x I think)
12:52  tomas_: bob2: thanks
12:52  tomas_: bahamas: thanks
12:52  tomas_: will try bob2 solution
12:52  merijn: sig^: Python is compiled to bytecode, the compile step sees you assigning to "parents" inside walk_inheritance_tree(), the compiler therefore makes "parents" a local variable inside walk_inheritance_tree(). When you try to read it before assigning to "parents" that is an error (obviously). Defining "nonlocal parents" tells the compiler that "parents" will be defined in some higher function then the current one
12:53  merijn: sig^: So it will first try to find parents inside the function where walk_inheritance_tree() is defined in. Which means parents will be defined when you try to read it and you will not get an error.
12:53  Yhg1s: punkoff: if you have a bytestring (a 'str' type object, like reading from a file would give you), you have to *decode* it to get unicode. You decode it using the right encoding. That gives you unicode. Encoding is for getting a bytestring in a particular encoding from a unicode object.
12:53  sig^: oh, cool  ^__^  I won't bring that up again now that it works. I'll check that nonlocal keyword. thanks ppl
13:02  saju_m: which are the free and best ticket tracking sites?
13:02  sig^: saju_m: trac is open source at least
13:02  bob2: that's pretty subjective, but launchpad, github and bitbucket are pretty popular
13:03  merijn: No one ever seems to mention Google code, any ideas why?
13:03  NelleV: merijn: it works with svn, doesn't it ?
13:03  merijn: NelleV: Mercurial too
13:03  merijn: Has supported Mercurial for like a gazillion internet years now
13:06  tomas_: bob2: thanks, it worked
13:06  bob2: hm, I dunno why I always forget it
13:08  punkoff: Yhg1s, that damn thing drives me mad. The string is a unicode now, it's absolutely normal, and has no null-bytes. What does it want now? ):
13:11 --- taiyal|zzz is now known as taiyal
13:14  Yhg1s: punkoff: show us its repr().
13:15  punkoff: http://gist.github.com/raw/632057/08ef52d0f855a915fb93daf0044a17c8e540779c/gistfile1.txt
13:16  Yhg1s: punkoff: and how are you inserting this in what kind of XML document, and how is it failing?
13:17  punkoff: python-lxml eTree dom object, HTML mode, exact exception: ValueError: All strings must be XML compatible: Unicode or ASCII, no NULL bytes
13:17  Yhg1s: punkoff: ok, and the exact code?
13:17  Yhg1s: (the traceback might also hold clues.)
13:18  harsha: Hello, I am looking for a Python library to encrypt/decrypt data on a remote disk. Any suggestions?
13:18  punkoff: Yhg1s, http://gist.github.com/632061
13:19  Yhg1s: harsha: what kind of encryption?
13:19  Yhg1s: and what kind of remote disk?
13:19  Yhg1s: punkoff: oh dear lord.
13:19  Yhg1s: punkoff: line 15 makes absolutely no sense, and makes no sense in five different ways.
13:19  Yhg1s: punkoff: is 's' unicode or not?
13:19  Yhg1s: this is not something you should ever be in doubt about.
13:19  punkoff: bytestring
13:19  punkoff: or may be even not
13:20  punkoff: parameter can be whatever - object, number, etc
13:20  punkoff: str(s) - get bytestring
13:20  punkoff: unicode(str()) - get unicode
13:20 * Yhg1s sighs.
13:20  punkoff: then encode it, replacing XML stuff
13:20  Yhg1s: str(s) will fail for any unicodestring that isn't ASCII encodable.
13:20  punkoff: then get unicode back again, now with XML charrefs
13:20  punkoff: and yet it doesnt - why?
13:21  Yhg1s: apparently it's not unicode.
13:21  harsha: Yhg1s: Remote disk is AWS S3. All I need to do is to encrypt the data that I put in a AWS S3 bucket and decrypt it on a trusted system when I read from it.
13:21  taiyal: is .encode('utf8', 'xmlcharrefreplace')) supposed to be inside the second nesting of unicode()?
13:21  punkoff: Yhg1s, even with that, it fails not at str()
13:21  Yhg1s: if the argument is never going to be unicode, str(s) will do. You can then just do 'str(s).decode('utf-8', 'xmlcharrefreplace')
13:21  Yhg1s: punkoff: how can you tell? You have a bare except.
13:21  punkoff: I've put that now, to get repr()
13:22  punkoff: traceback: http://gist.github.com/632062
13:22  Yhg1s: punkoff: let me put it differently
13:22  Yhg1s: punkoff: there is no way that your fix_unicode() function can return the string you gvae the repr of, simply because unicode(s.encode('utf-8', 'xmlcharrefreplace')) can either fail or produce an ASCII-encodable unicode object -- and the repr you showed wasn't ASCII-encodable.
13:23  Yhg1s: punkoff: and that isn't even considering the insanity of unicode(str(s)).
13:23  Yhg1s: punkoff: I note the traceback shows a different line of code than your code paste.
13:24  punkoff: there's some blah-blahs omitted
13:25  punkoff: complete code, just in case: http://gist.github.com/632063
13:26  Yhg1s: that's still different from the traceback, since the traceback does 'self.set(idx, s)'
13:27  Yhg1s: punkoff: if your __setitem__ method is going to receive both unicode and bytestrings, you will have to use a typecheck to handle them properly, *and* guess at the bytestring's encoding. Better to always pass bytestrings in a specific encoding, or (the preferred way) use unicode throughout; decode data as soon as you get it.
13:28  Yhg1s: If you're always passing bytestrings in a particular encoding (as well as non-string objects), fix_unicode should just contain 'return str(s).decode(encoding)'. If you only accept unicode strings (and non-string objects), it should be 'return unicode(s)'
13:28  punkoff: I've made a simplest example which triggers problem: http://gist.github.com/632064
13:29  punkoff: The /var/log/boot.log appears to have some problematic text for everyone (as seen in user reports)
13:29  Yhg1s: str(s).encode('utf-8') makes no sense, as I already mentioned. str.encode is the equivalent of str.decode('ascii').encode('utf-8').
13:29  Yhg1s: which will either fail or be a no-op.
13:30  Yhg1s: punkoff: /var/log/boot.log simply contains non-ASCII data, and you are insisting it be treated as ASCII. Don't try to decode it using ASCII. Decode it using the encoding it's actually in. Or, don't decode it.
13:30  Yhg1s: is the entire source of the confusion here just that you think you should *encode* bytestrings to get unicodestrings?
13:31  saju_m: lauchpad.net is a good one?
13:31  Yhg1s: saju_m: depends on what for.
13:32  punkoff: Yhg1s, my entire confusion was on how to get that unreadable data filtered out of the string
13:32  punkoff: then I read about xmlcharrefreplace
13:32  Yhg1s: punkoff: 'xmlcharrefreplace' only works if you have a unicode codepoint. it doesn't make any sense for byte data that can't be decoded.
13:33  Yhg1s: punkoff: the only error andlers that work on *decoding* are 'ignore' and 'replace'
13:33  Yhg1s: (unless you write your own.)
13:33  harsha: Yhg1s: Any idea about the question I asked?
13:33  saju_m: ok thanks
13:34  Yhg1s: 'ignore' will omit the bytes it can't interpret, and 'replace' will replace it with the unicode replacement character ('\ufffd', which is encoded as '?' in ASCII.)
13:35  Yhg1s: harsha: sorry, no idea. There are various ways of encoding data, symmetrically and asymmetrically, but I don't know about S3.
13:35  Yhg1s: harsha: perhaps you just want something to encrypt the data, and then send it across?
13:35  harsha: Yhg1s: Yes.
13:36  Yhg1s: harsha: ok, so what kind of encryption? should it be verifyable? what kind of secrets can the machines share?
13:39  aj-dneg: hey, does anyone know of any standard practice for using coroutine generators with threads? i've rolled my own little wrapper class around qthread to capture return values and exceptions to send() or throw() them back to the coroutine...
13:40  harsha: Yhg1s: I am wondering if I could do a simple passphrase based encryption on the trusted system (my local machine), send the encrypted data to S3. When I fetch the data, I should be able to decrypt it with the same password.
13:41  harsha: Yhg1s: I am not sure what suits me the best, however.
13:41  mage_: damn, multiprocessing module is really good!
13:43  Yhg1s: harsha: PyCrypto probably has what you want then.
13:44  harsha: Yhg1s: Thank you. Will have a look.
13:44  Yhg1s: aj-dneg: I think the standard practice would be "yikes, don't". Assuming you mean 'generator' when you say 'coroutine'
13:44  aj-dneg: Yhg1s: yep, why not?
13:44  flamingspinach: Is there a way to get the full name (with namespaces) of an imported identifier?
13:44  punkoff: Yhg1s, finally did it. I owe you one
13:44  punkoff: Yhg1s, if I do something like http://gist.github.com/632080 , is it enough reason to kill me instantly?
13:45  Yhg1s: punkoff: that's bad in a number of ways, yes.
13:45  flamingspinach: for example if I ran "from x.y.z import thing", is there any built-in function (in the interpreter) that would tell me, given thing, that it originally lives in x.y.z? or is that information lost?
13:46  Yhg1s: punkoff: just use 's.decode('utf-8', 'replace')' then. Or, if you must do what you did there, ''.join(max(i, ' ') for i in s)
13:46  Yhg1s: flamingspinach: that information doesn't even exist.
13:46  flamingspinach: OK, I see. Thanks.
13:46  Yhg1s: flamingspinach: x.y.z.thing will just be a reference to thing, it could have many references, or none.
13:46  Yhg1s: and many references won't have a "name".
13:47  flamingspinach: yeah, that makes sense - much like any random object, imported, say, functions are just objects with identifiers pointing to them
13:47  flamingspinach: never mind :)
13:47  aj-dneg: Yhg1s: i have a process which is quite succinctly expressed by a generator, and i'm just using yield to yield a thread for some blocking function and some machinery to make it return or throw what the function returned or threw. why is that 'yikes'?
13:47  Yhg1s: aj-dneg: well, what would be the point? You'd still need a central event handler to translate data from the threads and resume the generators.
13:48  Yhg1s: aj-dneg: and what would you do in the mean time? Woudl you want the generator to be resumed in the separate thread? Do you already have an event system you're hooking into?
13:48  aj-dneg: Yhg1s: using Qt to hook up the thread 'finished' signal with a callback to continue (with a send() or throw() the coroutine)
13:49  Yhg1s: Twisted somewhat does what you describe, but it does that by having a central event system (and by using deferreds instead of generators, but you can turn a generator into a deferred.)
13:49  aj-dneg: we're already using the qt loop as it's a GUI app.
13:49  Yhg1s: other than that, nothing comes to mind, so I wouldn't call it 'common practice'.
13:49  Ferran: Hi all, i'm having an issue trying to set up proxy db's managers, this is my code/error: http://fpaste.org/Bqvc/ can anybody lend me a hand, please?
13:49  Ferran: Oops, sorry
13:49  Ferran: wrong window
13:50  aj-dneg: Yhg1s: ok -- how do people generally keep track of processes that require several little blocking threads if not with generators?
13:50  bob2: twisted can use qt's loop
13:50  bob2: (check out inlineCallbacks for how generators can be used)
13:50  Yhg1s: aj-dneg: usually by using threads for the entire operation and communicating through a queue instead of through generator consumption.
13:51  Yhg1s: Except when using Twisted, of course, which abstracts the details away nicely.
13:51  Bennit: Hello
13:51  Bennit: Is there any general place where design documents of python are published at?
13:52  Yhg1s: Bennit: www.python.org/dev/
13:52  Bennit: ty
13:53  Bennit: does pydoc belong to python's dev channel aswell?
13:53  Yhg1s: I'm not sure what that means.
13:54  lvh: Greetings!
13:56  dassouki: i was wondering if anyone can lend a hand with this snippet http://pastie.org/1229678
13:57  Habbie: dassouki, there's no question in there
13:57  jorrit: dassouki, yes, what is the problem with that?
13:58  dassouki: it seems that the generated random number is > than the limit_sum
--- Log closed Mon Oct 18 15:43:00 2010
--- Log opened Mon Oct 18 15:48:21 2010
15:48 --- Users 773 nicks [0 ops, 0 halfops, 0 voices, 773 normal]
15:48  lieuwe: hey, i've got a float, with lotsa numbers behind the dot, how can i write this to a file without truncating?
15:49  BlueAidan: genjix: pyside is done by nokia (the current owners of Qt)
15:49  genjix: oh nice, thats definitely a big plus
15:49 --- Channel #python was synced in 88 seconds
15:49  ccw: Well, I spent an embarrassing amount of time trying to answer what took you guys about 30 seconds.  Thanks for hangin out in here and helping the newbies
15:51  Nematodetamer: Howdy yall! I'm trying to encode video under python but cant find any good tool for it...  any pointers?
15:51  genjix: Nematodetamer: mencoder?
15:51  genjix: otherwise you'll have to write c code i think
15:52  Yhg1s: Nematodetamer: well, what do you have, and what do you want to turn it into?
15:52  genjix: using libffmpeg
15:52  Nematodetamer: genjix: I generate bitmaps and want to send them to a video "writer".
15:52  genjix: ok, encode them using the command line tool mencoder
15:52  genjix: os.system("mencoder ....")
15:53  genjix: google mencoder image sequence
15:53  Nematodetamer: i dont want to save them as bitmaps...  would take to much disk space
15:53  genjix: look heres the problem though
15:53  Yhg1s: Nematodetamer: see the pymedia and opencv projects, for starters.
15:53  genjix: when you encode realtime, you cannot compress the video much
15:54  genjix: so maybe you should save the bitmaps as compressed jpgs
15:54  genjix: and then after stitch them with mencoder into a video
15:54  Yhg1s: or, you could use something more appropriate.
15:54  Nematodetamer: i've tried the video writer in opencv and does not work properly...
15:54  Nematodetamer: pymedia seems ...dead..
15:54  genjix: otherwise i used nupplevideo before
15:54  genjix: but its a weird format
15:54  saju_m: which is the best python plugin for social authentication/registration?
15:56  Nematodetamer: Yhg1s: pymedia seems dead and opencv python wrapper is a bit... buggy
15:57  Nematodetamer: Yhg1s: do you know if pyffmpeg can do it?
15:57  Yhg1s: Nematodetamer: no idea.
15:59  Juhaz: Nematodetamer, platform?
15:59  Nematodetamer: x86-64 ubuntu maverick
16:00  Juhaz: gstreamer
16:00  Nematodetamer: Juhaz: bit of a learning threshold...
16:02  pielgrzym: hi :)
16:02  pielgrzym: is there a reasonably brief way to calculate timedelta in *hours*?
16:03  pielgrzym: current timedelta implementation returns a tuple with days/hours/seconds
16:03  pielgrzym: which is kinda inconvenient ;)
16:03  pielgrzym: help ;)
16:03  VladDrac: days * 24 + hours ?
16:04  Dulak: Write a function to do the math for you
16:04 --- 30BAAAR9D is now known as DEADBEEF_
16:04  tazle: whoever thought that not having each block have its local scope was a good idea should be made feel very uncomfortable
16:05  Yhg1s: tazle: not as unconfortable as whoever thinks having each block have its own local scope is a good idea.
16:05  tazle: Yhg1s: why is it not?
16:05  pielgrzym: VladDrac, Dulak: ok then :) thanks for clearing this out
16:05  Yhg1s: because you wouldn't be able to do *any* assignment in blocks.
16:06  Juhaz: Nematodetamer, maybe
16:06  Nematodetamer: pielgrzym: timedeltaobject.seconds/3600.
16:07  tazle: Yhg1s: unless assignment worked by searching for match from inside-out, and only creating new name in innermost scope if the name had not yet been used in outer scopes
16:07  pielgrzym: Nematodetamer: the dumb thing is - theese seconds are not the total count of seconds it's a remainder :) so you have to do some extra stuff :)
16:07  Yhg1s: tazle: yeah, which would be insanely error-prone. The only way to make all-blocks-are-local-scopes work is by having declarations.
16:08  tazle: Yhg1s: possibly
16:09  negar: I installed postgresql and psycopg in windows, when I run python manage.py shell raise an error -> Error loading psycopg module
16:09  negar: I set my database name and password in settings.py
16:09  negar: too
16:09  negar: please help me
16:09  Nematodetamer: pielgrzym: noted...
16:10  negar: should I set any environment variables in os?
16:10  negar: PATH?
16:11  Habbie: negar, how did you install python? how did you install psycopg?
16:11  negar: Habbie: yes
16:11  Yhg1s: no, "now".
16:11  Habbie: negar, try again
16:11  Yhg1s: eh, 'how'
16:11  Nematodetamer: pielgrzym: python 2.7 has total_seconds()
16:12  faldridge: is there a way to programmatically check from python whether two shared objects are dynamically linked against same shared library?
16:12  faldridge: I'm trying to test for a condition that would cause a segfault
16:12  negar: Habbie: rasie that Error again :(
16:12  PyDon: hi
16:12  Habbie: negar, try answering the question again. read it precisely. then answer it. HOW did you install python, HOW did you install psycopg?
16:13  magicblaze0071: if i use urlopen, does it automatically cache the file?
16:13  negar: Habbie: I clicked on psycopg and it installed
16:13  Habbie: magicblaze0071, no
16:13  Habbie: negar, you're going to have to be a lot more specific than that
16:13  Yhg1s: negar: did you install it for the right Python version?
16:13  Yhg1s: negar: what version of psycopg did you install?
16:14  magicblaze0071: Habbie: how can i cache files which I want to get from the web. These are small text files.
16:14  negar: Yhg1s: I installed psycopg 2-2.2.2
16:14  negar: Yhg1s: and python 2.7
16:15  negar: Yhg1s: psycopg2-2.2.2.win32-py2.7-pg9.0.1-release.exe <--
16:15  Habbie: negar, is your python 32 bit too?
16:15  negar: Habbie: yeah it's 32 bit
16:16  Habbie: negar, did you type 'python' or 'c:\python-2.7\python' ?
16:16  Yhg1s: negar: if you start python and do 'import psycopg2', does it work?
16:16  PyDon: can anyone help me? Currently I write an dev environ for Python and I have a serious problem with modules loading. Imagine you write a module and execute it. Now you change a submodule of your module and restart the script even the first module still runs. Because Python just imports a module once, the reload process doesnt work properly. The module from the first run is still active and the change just works when I restart my app.
16:16  PyDon: any ideas?
16:16  Yhg1s: PyDon: restart your application.
16:16  Yhg1s: it's the only way to do "reloading" properly.
16:16  negar: Yhg1s: yes it does
16:17  PyDon: Yhg1s: is there no real workaround for this?
16:17  Dulak: PyDon: use a web server that reloads automatically when it detects a change, like pylons or cherrypy do
16:17  Yhg1s: PyDon: restarting the application is the real workaround.
16:17  PyDon: this is poor :-(
16:17  Yhg1s: Dulak: yeah, no, that doesn't work either.
16:17  Dulak: Yhg1s: it restarts the app...
16:17  negar: Yhg1s: when I import psycopg2, anything doesn't happen
16:18  kilon: guys macosx 10.7 (codename "Lion") is going to be announced in couple of days, anyone makes any bets what version of python will be  included with it ? I assume, 2.7 ,but python 3 is also possible right ?
16:18  PyDon: i dont think its python 3
16:19  PyDon: imho
16:19  Dulak: What is in snow leopard?  2.5?
16:19  kilon: no , its 2.6.1
16:20  kilon: 2.6.1 for snow leopard and 2.5.x for Leopard
16:20  Dulak: prolly be 2.7 then for the next version
16:20  PyDon: 2.6.1
16:21  Yhg1s: negar: so psycopg2 *is* installed. Did you correctly tell whatever manage.py is to use psycopg2?
16:22  kilon: i am actually hopping for python 3 for maocsx 10.7, afterall, python 3 is the near future of python, it seems that there will not be any more 2.7.x updates, so since "Lion" is the new os it make sense to accomodate for the new python, but I dont trust apple in this alot
16:23  negar: Yhg1s: I create a django project, and I set - >http://dpaste.com/259603/
16:23  Yhg1s: kilon: Installing just 3.x would be a big mistake, since it's not compatible with the existing 2.x code and many third-party libraries aren't ported yet.
16:23  Dulak: Yeah, you don't break backward compatibility lightly, it won't happen.
16:23  PyDon: i dont hope that too
16:23  PyDon: i still think they use 2.6-2.7
16:24  PyDon: python 3.x has several great improvements, but it still feels unready for production
16:24  Dulak: It will be another 3 years before you see 3.x getting mainstream, maybe longer
16:24  kilon: true python 3 is not compatible with python 2.7, but its not as if third party libraires or existing software has any choice, the moto seems "you either follow python 3 or you die a slow and agonising death"
16:24  Yhg1s: negar: well, you installed psycopg version 2. The django docs state that 'postgresql' is the engine for psycopg version 1. you need to use 'postgresql_psycopg2'.
16:25  Yhg1s: kilon: and yet people aren't clamoring for 3.x. I'm not sure why you're worried about this.
16:25  Habbie: kilon, you seem to be quite alone in having that motto
16:26  negar: Yhg1s: thank you >:D<
16:26  kilon: i am just saying that 2.X has stoped updating
16:26  Dulak: It's nice, but until 3.x is completely vetted, and a majority of libraries become compliant, it ain't happening.
16:26  Yhg1s: kilon: but not working.
16:26  Yhg1s: the vetting isn't the issue, really. just the third-party support is.
16:27  Habbie: kilon, unless there are major bugs in 2.X, who cares if it has stopped updating?
16:27  kilon: you could of say "i am sticking with python 2.x", but in the knowledge that there will be no further updates and you will be left behind
16:27  Yhg1s: kilon: and how is this "a slow and agonizing death"?
16:27  Habbie: kilon, who needs updates to 2.x? i don't
16:28  kilon: you will care Habbie if new libraires stop targeting only python 3 and not python 2.x
16:28  PyDon: the biggest lack for me is the <, >= operator thing in Python 2.x
16:28  PyDon: thats all
16:28  Dulak: But what is being said is 'until most things work with 3.x, we'll stick with 2.x which is working fine'
16:28  Yhg1s: PyDon: the what now?
16:28  PyDon: True>"Hello" makes absolutely no sense
16:28  Yhg1s: kilon: and at that point you can move to 3.x.
16:28  Yhg1s: PyDon: ach so.
16:28  kilon: dulak yes correct thats still the attitude
16:28  Yhg1s: PyDon: there's bigger issues with 2.x.
16:29  PyDon: yes, I guess :)
16:29  PyDon: is there a list of that.. just of interest
16:29  Yhg1s: kilon: most projects can't move to 3.x because their dependencies haven't been made availalbe for 3.x.
16:29  PyDon: ach so...? ehm... german?
16:29  Yhg1s: 'ach so' is german, yes.
16:29  PyDon: i remember you were canadian.. but maybe I just miss something
16:30  PyDon: sry, ... dont know why i thought that..uhm...
16:30  Yhg1s: I'm neither Candian nor German.
16:30  Yhg1s: nor Canadian.
16:30  sternocera: Hi. Could a simple XML file available over http be reasonably described as a webservice?
16:30  PyDon: ok..nevermind... sry :)
16:30  Habbie: sternocera, why?
16:31  arkanes: sternocera: maybe, if you liked being misleading and untruthful
16:31  kilon: Yhg1s: yes i know, I use pygame and still there is a perferance for python 3
16:31 * sternocera values terminology
16:31  PyDon: ok, so just a short step back to my problem: a real restart of the host app  is required to make a proper reload
16:31  sternocera: arkanes: That's very trollish language
16:31  kilon: but remember i am not talking what happens now, but what will happen after a year or two
16:31  Yhg1s: kilon: having a preference isn't the same as breaking 90% of the user code in the next OSX release.
16:31  arkanes: sternocera: generally, when people say webservice they mean something that conforms to the various WS-* standards
16:31  arkanes: sternocera: but there are no terminology police that will arrest you if you do something else
16:31  Yhg1s: kilon: the only way to deal with the 2.x->3.x transition is to offer both for a while.
16:32  sternocera: arkanes: Perhaps there should be
16:32  kilon: well yhgls i dont see how the transition will not be painful into some extend
16:32  Yhg1s: kilon: yes, it will be painful, either way.
16:32  Habbie: os x might very well offer both 2.7 and 3.1 in the next release
16:32  Yhg1s: kilon: but the only way to deal with it *at all* is to offer both at the same time.
16:32  kilon: will have to wait and see
16:33  kilon: Yhg1s: that would have been ideal yes
16:33  faldridge: so, nobobdy knows of a way to check which libraries a shared object is linked against in python?
16:34  Habbie: faldridge, use the platform-dependent tools - ldd for linux, otool for osx - and parse the output
16:34  Yhg1s: faldridge: nothing comes to mind, no.
16:34  faldridge: mmm, thanks.
16:34  kilon: is that difficult to move a library from python 2 to python 3
16:35  kilon: ?
16:35  DasIch: Kiliko, depends on the library
16:35  Yhg1s: it takes time and effort.
16:35  deximer: sternocera: while you seem to be following "Do the simplest thing that could possibly work", what happens when you want to modify the API and you have published a file instead of a service?
16:35  kilon: i guess the automatic conversion tools are not that sophisticated?
16:35  DasIch: Kiliko, they are as sophisticated as they can be
16:36  sternocera: deximer: I'm not advocating the approach
16:36  kilon: kiliko, whos kiliko ?
16:36  DasIch: nick completion...
16:37  DasIch: it took me a couple of months to port sphinx to 3.x
16:37  kilon: so its not that easy then
16:37  DasIch: on the other hand it's using 2to3 as part of the build process and still supports 2.4
16:37  DasIch: which makes it a lot more difficult
16:38  kilon: oh i see, maybe python 3 should have allowed for execution of 2.x code, but maybe I am asking too much
16:39  DasIch: kilon: that would be very stupid
16:39  DasIch: kilon: if you clean up you should do it completely nor not at all
16:39  Yhg1s: kilon: that would defeat the point of having Python 3.x.
16:41 --- faldridge_ is now known as faldridge
16:42  kilon: i though that the purpose of python 3 is use a better python syntax
16:43  lvh: kilon: The syntax has barely changed.
16:46  pscoe2: hi
--- Log closed Mon Oct 18 19:10:02 2010
--- Log opened Mon Oct 18 19:10:23 2010
19:10 --- Users 772 nicks [0 ops, 0 halfops, 0 voices, 772 normal]
19:10  Yhg1s: the usual way to process a process's stdout is via the normal file iteration. 'for line in p.stdout:'
19:10  cognitiaclaeves: Yhg1s: Because it looks like 'blocking' behavior without understanding everything that is going on under the hood.
19:10  Yhg1s: cognitiaclaeves: yes. s.stdout.read() blocks. it reads until EOF.
19:10  cognitiaclaeves: Yhg1s: Ok, I'll try that.
19:11  Yhg1s: and EOF happens when the process ends or closes its stdout. (Few processes do the latter.)
19:11 --- Channel #python was synced in 88 seconds
19:11  kwoodson: I'd like to start up a test/temporary smtp server to catch emails during a test run.  What's the best way to do this?
19:12  lvh: kwoodson: Twisted!
19:12  Yhg1s: kwoodson: Python's own testsuite uses the smtpd module for that.
19:12  cognitiaclaeves: Ok, so stdout is treated as a file.  I'm definitely doing some things wrong, then.
19:12  icio: join #pygame
19:12  Yhg1s: cognitiaclaeves: stdout *is* a file.
19:12  icio: woops
19:12  pozican: What's the best way to scp a file using python? subprocess / popen?
19:12  kwoodson: Yhg1s, looking.
19:12  kerio: pozican: there's probably a lib
19:12  cognitiaclaeves: pozican: I use pysftp.
19:13  dalela: Yhg1s how I can ""build an index of lines" and what the "span of the match object" is
19:13  Yhg1s: dalela: to build an index of lines, you go over the file once, record the starting point of each line. that's it.
19:13  Yhg1s: dalela: there are various datastructures you can store that index in.
19:14  Yhg1s: dalela: the span of the match object would be the 'span' method of the matchobject re gives you. The re module docs explain.
19:14  cognitiaclaeves: Yhg1s: Yes, that
19:14  cognitiaclaeves: 's the behavior that I'm looking for, thanks.
19:15  lvh: pozican: Do you literally mean scp, or is any kind of file-transfer-over-ssh acceptable?
19:17  pozican: lvh: any file transfer over ssh
19:19  lvh: pozican: Well, fabric does that through paramiko
19:20  pozican: lvh: looks like paramiko is the best route to go - unfortunately the machine I'm developing on is somewhat of a stripped down os, I'm unsure how I'd install third party apps - I may just add an ssh key and have it do a subprocess
19:20  lvh: pozican: all you need is pip
19:20  lvh: (and preferably virtualenv)
19:21  pozican: pip?
19:21  pozican: Oh; neat
19:21  mwizard: okay hai guise. Anybody knows, how can I make '{0:\x00<8s}'.format('hello') to be equal to 'hello\x00\x00\x00' ?
19:22  pigdude: how do you do assertIn before py2.7?
19:22  mwizard: it currently pads string with spaces, not \x00, which is definitely not I want
19:22  pigdude: I do assertTrue(s in s2)
19:22  pigdude: and cannot see a non-literal string
19:22  KirkMcDonald: mwizard: 'hello'.ljust(8, '\x00')
19:22  Xaifas: shouldnt '\bsomething\b' match 'bla bla something bla' ? re.search() seems to not match it
19:23  mwizard: KirkMcDonald: oh thank you, bro
19:23 --- Tanvir is now known as Tanvir|Eating
19:23  KirkMcDonald: Xaifas: You want r'\bsomething\b'
19:23  blubbi: ääähm I am kinde weird.. i defined a function within this function I slice a array with rd[:,PDROP:PTS] but when I do this "if PTS > maxpts:" i get an UnboundLocalError: local variable 'PTS' referenced before assignment? How?
19:23  Xaifas: i see
19:23  Xaifas: thanks
19:23  mwizard: blubbi: source, please
19:24  lvh: blubbi: you assigned to PTS in the function
19:24  lvh: blubbi: that makes it local
19:24  lvh: blubbi: you can't reference locals before assigning to them
19:24  lvh: blubbi: but yes, please paste the code
19:24  mwizard: lvh is mindreading master
19:24  blubbi: its a laarge code
19:24  sartan: Howdy; I'
19:24  blubbi: mom, I'll make an example
19:24  pozican: mwizard: albeit in this case; probably right
19:25  blubbi: but I dun't understand why the variable works in the slice...
19:25  lvh: mwizard: I'm telepathological!
19:25  KirkMcDonald: blubbi: We can't answer this without seeing the actual code with the problem.
19:25  sartan: I'm trying to install django on my router, but my router's python distribution is missing /usr/include/python2.6/pyconfig.h; when I google this, I'm getting various hits: Do I install "PyConfig" from google code?  Is pyconfig.h supposed to be part of a normal python build?
19:25  blubbi: mom, I am making an examle
19:25  mwizard: lvh: making diagnoses basing on IRC quit messages since 1974
19:26  pozican: ^ lupus?
19:26  KirkMcDonald: blubbi: Synthetic examples written when you don't understand the problem never work out well.
19:26  pozican: KirkMcDonald: unless his example reproduces the problem?
19:26  blubbi: I can replicate the structure ;-)
19:26  KirkMcDonald: pozican: Perhaps.
19:26  blubbi: gimme a sec
19:27  mwizard: pozican: sometimes synthetical examples trying to reproduce problem actually reproduce _another_ problem.
19:27  pozican: haha
19:27  mwizard: looking the same as original, but in fact different
19:28  mwizard: sartan: mmm...
19:28  pozican: Is there a python equivelent to /bin/bash -x?
19:28  KirkMcDonald: sartan: Some package managers have a separate python-dev package.
19:28  KirkMcDonald: pozican: No.
19:28  pozican: KirkMcDonald: thanks
19:29  cognitiaclaeves: pozican: You'll need to make your own logging lines.  logging pkg is pretty slick.
19:29  sartan: not this one KirkMcDonald.. i may have to rebuild the package from source myself
19:29  DarkSector: hello, I have a very elementary question, How do I replace text in a whole file. Like I'd like to replace a word 'dirty' with a new line. I don't understand how to use var.replace(dirty, <new_line>) where var is the string for the whole document ?
19:29  papna-work: sartan: What distro?
19:30  sartan: openwrt
19:30  KirkMcDonald: DarkSector: The replace method of strings returns a new string.
19:30  lvh: pozican: Maaan, I'm a cynical bastard with a leg that doesn't work and a prescription drug habit -- you are not the first person to make that comparison :-(
19:30  sartan: it's a really small distribution intended for installation on opensource routers
19:30  KirkMcDonald: DarkSector: How large is the file?
19:30  DarkSector: KirkMcDonald, I don't know about 20000 words or so
19:30  pozican: lvh: ha - although that reference had to be made, I was actually just diagnosing based on an irc quit message
19:31  mwizard: pozican: what bash -x is supposed to do?
19:31  KirkMcDonald: So maybe a few hundred KB?
19:31  KirkMcDonald: Give or take?
19:31  DarkSector: Kiliko, yes maype
19:31  DarkSector: *be
19:31  KirkMcDonald: DarkSector: Read the file into a string. Use .replace() to get a new string. Write the new string to a new file.
19:32  pozican: mwizard: It's kinda nifty, but oftentimes a python script would be too large for it. It prints out every var, and every evaluation as it's assigned / evaluated along with the code above it. Imagine it like using python interactively for your entire script just to see step by step what's happning
19:32  DarkSector: KirkMcDonald, oh ok :) but just curious how to handle large files ?
19:32  x0rs: Can i use the split function to remove any unwanted characters from a string? ie 'I 0l0ike 0py0thon'.split('0')
19:32  Underscore: Hi, I'm have problems opening IDLE - I can only get it to open when I right click > edit with IDLE on a PY file. I'm running Python 2.6. I tried using 'python.exe Lib\idlelib\idle.py', and I get a few errors, pasted here: http://fpaste.org/OvDf/
19:32  mwizard: pozican: ah, got it. you can do this using sys.settrace(), if you want
19:33  KirkMcDonald: DarkSector: In that case, you'd read the file in chunks, and write each edited chunk to the new file, and handle the case of the replacement spanning from one chunk to another.
19:33  DarkSector: O_o
19:33  mwizard: x0rs: you should better use .replace('0', '')
19:33  DarkSector: owow, I need to read on that
19:34  x0rs: mwizard: nice, I think that's what I needed
19:34  mwizard: x0rs: or even better if you have more than one such character, use list comprehension + ''.join()
19:34  KirkMcDonald: (Or define "chunk" to mean "line," which would remove that edge-case when the string you're replacing doesn't contain a newline.)
19:34  mwizard: x0rs: or if you have large set of symbols, "import re"
19:34  x0rs: mwizard: very good info, thank you!
19:35  blubbi: oookay, here we go
19:35  blubbi: http://paste.pocoo.org/show/277048/
19:35  blubbi: this works, but uncomment the if statement
19:35  mwizard: you do "print PTS"
19:35  blubbi: yes, and?
19:35  KirkMcDonald: blubbi: The assignment on line 20 causes PTS to be a local variable.
19:35  mwizard: and that's cool
19:36  mwizard: lol
19:36  lvh: mwizard: print PTS is irrelevant
19:36  KirkMcDonald: blubbi: The point being that it causes PTS to be treated as local throughout the entire scope of the function.
19:36  lvh: Like I said before, it's assignment to a variable in function scope (as KirkMcDonald pointed out)
19:36  pozican: is there a quick way to add a character every 2 characters in a string, or is a lambda my best option?
19:36  blubbi: I don't get it
19:36  blubbi: remve the print it does not matter
19:36  mwizard: lvh: right, I'm just bustler
19:37  lvh: pozican: c.join(itertools.grouper_recipe(s))
19:37  KirkMcDonald: blubbi: If you remove the print, you're still referring to it on line 19.
19:37  lvh: blubbi: Yeah ignore mwizard listen to KirkMcDonald instead, he's right
19:37  pozican: blubbi: everythign run in a function is isolated - It's in a local scope, a scope the rest of the script doesn't know about
19:37  blubbi: yes, but so do i on line 21
19:37  mwizard: blubbi: problem is that you try to read variable before assigning something to it. python does not allow mixing local and global variables
19:37  KirkMcDonald: blubbi: You can't refer to a local before that local has been assigned to.
19:37  mwizard: with the same name
19:37  mwizard: to solve this, make _PTS = PTS and compare _PTS > maxpts
19:37  mwizard: ah...
19:38  KirkMcDonald: mwizard: I rather think he intends to assign to the global.
19:38  mwizard: may not help
19:38  mwizard: KirkMcDonald: hm, you seem to be right
19:38  blubbi: i dont get it, because in rd = rd[:,PDROP:PTS] it works
19:38  blubbi: why shoud it not work when using it in IF
19:38  KirkMcDonald: blubbi: When you comment out the assignment, PTS is looked up as a global.
19:38  mwizard: blubbi: if you comment assignment, python thinks it's global variable and act with is normally
19:38  resixian: best way to sanitize strings as filenames? im a bit surprised there is nothing in os.path.* to do this?
19:38  blubbi: aaaah
19:39  lvh: resixian: What does "sanitize" mean
19:39  mwizard: when you assign to variable, it's being explicitly but in local names table
19:39  blubbi: okay, so PTS = maxpts is the cause?
19:39  mwizard: right
19:39  resixian: lvh: make safe to use, valid?
19:39  lvh: resixian: Okay, what does *that* mean
19:39  blubbi: thats ugly... :-)
19:39  phet: can python solve linear equations?
19:39  mwizard: phet: python can do anything you can do
19:39  habnabit: Sure, why nit
19:39  habnabit: Not
19:40  resixian: lvh: preferably except on a useless or improper filename
19:40  phet: but does it have some library to solve it?
19:40  KirkMcDonald: phet: There is SymPy.
19:40  mwizard: KirkMcDonald: he may also do some kind of "clamping" variable to it's max
19:41  lvh: resixian: What's a "useless" filename
19:42  lvh: resixian: For improper ones: simply use it: the OS will complain and you'll get an exception
19:42  mwizard: lvh: sfsduosi098.py ?
19:42  lvh: mwizard: What is that?
19:43  resixian: lvh: the os won't complain for say, '..' on unix
19:43  mwizard: lvh: example of useless filename.
19:43  resixian: at least not until its kind of too late.
19:43  mwizard: :)
19:43  KirkMcDonald: resixian: Are these filenames coming from potentially untrusted user input?
19:43  resixian: KirkMcDonald: yes
19:44  lvh: mwizard: Yeah no Python doesn't have a stdlib function for detecting that sort of thing.
19:44  Underscore: Hi, I'm have problems opening IDLE - I can only get it to open when I right click > edit with IDLE on a PY file. I'm running Python 2.6. I tried using 'python.exe Lib\idlelib\idle.py', and I get a few errors, pasted here: http://fpaste.org/OvDf/
19:44  mwizard: resixian: use os.path.split(os.path.join(rootdir, untrusted_filename)) and test if [0] does not equal to rootdir
19:45  mwizard: resixian: this will help to prevent users from escaping from where they should be
19:45  habnabit: mwizard: Yeah no
19:45  habnabit: resixian: Use the filepath module
19:45  Kulik: I am using python 2.6 and I have a class with overloaded __str__. I get different results with print "%s" % (instance) and print instance
19:45  Kulik: is that normal?
19:45  mwizard: habnabit: is it something new?
19:46  resixian: habnabit: ty, i will look into it
19:46  mwizard: ah, it's not in stdlib
19:46  habnabit: mwizard: Not really
19:46  KirkMcDonald: Kulik: Different how?
19:48 --- Tanvir|Eating is now known as Tanvir
19:48  KirkMcDonald: Underscore: Try: python.exe -m idlelib.idle
19:49  resixian: Kulik: shouldnt that be expected?
19:49  resixian: Kulik: i think you are seeing the difference between __str__ and __repr__ ?
19:49  KirkMcDonald: resixian: Both print and %s call str() on the object.
19:49  mwizard: resixian: print instance calls str(), not repr(), i've tested.
19:49  Underscore: KirkMcDonald: I got: 'cannot import name Random'
19:50  Kulik: print definitely calls __str__ but the %s variant doesnt...
19:50  Kulik: it probably is desired, I was just curious about it :)
19:50  KirkMcDonald: Kulik: Show us.
19:50  KirkMcDonald: Kulik: Is this Python 3?
19:51  resixian: for me they are different
19:51  KirkMcDonald: I guess not, since you didn't use parentheses with print.
19:51  mwizard: KirkMcDonald: "< Kulik> I am using python 2.6"
19:51  KirkMcDonald: Fine.
19:51  andywww: Hi, i'm trying to write a script which abides by robots.txt rules. So far I've used robotsparser with a decent level of success. The problem I'm hitting is robots meta tags on actual pages are not being picked up by robotsparser
19:52  andywww: does anyone know if mechanize reads meta robots tags?
19:52  habnabit: andywww: Mechanize handles this
19:52  andywww: fantastic
19:52  andywww: thanks
19:52  KirkMcDonald: Underscore: What is the output of: python -c "import random; print random.__file__"
19:53  Underscore: KirkMcDonald: random.pyc
19:53  KirkMcDonald: Underscore: Which directory are you in?
19:53  mwizard: Kulik, http://paste.pocoo.org/show/277056/
19:53  pozican: lvh: I'm having issues figuring out the grouper_recipe - Can you give me something else to be searching for?
19:53  Underscore: KirkMcDonald: C:\Python26
19:53  mwizard: Kulik: same thing on 2.6
19:53  mwizard: *2.7
19:54  KirkMcDonald: Underscore: So you wrote a file named random.py and put it in C:\Python26?
19:54  phet: KirkMcDonald: sympy seems very good, thank you
19:54  Underscore: KirkMcDonald: Oh dear, it seems I did.
19:54  Underscore: *Heroic Facepalm*
19:55  mwizard: omg cancer that killed freenode itc
19:55  pozican: is there a quick way to add a character every 2 characters in a string?
19:55  Underscore: Fixed, I'm a complete idiot.
19:55  Underscore: Thank you very much.
19:55  Kulik: mwizard: thanks, I wasn't sure if this isn't some sort of a bug on my side, I am having quite large OOP hierarchy with these classes
19:56  resixian: Kulik: this is how it works for me: http://paste.pocoo.org/show/277060
19:56  KirkMcDonald: resixian: Oh, well.
19:56  KirkMcDonald: resixian: Get rid of those parentheses on line 8.
19:56  KirkMcDonald: resixian: You're printing the repr of the tuple.
19:57  resixian: KirkMcDonald: thats how i would guess he is getting the repr
19:57  KirkMcDonald: Unless that was your point.
19:57  resixian: indeed, just trying to help. i will shut up now
19:57  KirkMcDonald: Naw, it's okay.
19:58  mwizard: pozican:  ''.join(''.join(x+('@', )) for x in zip(*[iter(s)]*2))
19:58  pozican: mwizard: oh my
19:58  mwizard: ^__^
19:58  pozican: mwizard: I guess a quick for loop will probably be best then?
19:59  KirkMcDonald: ''.join(s[x:x+2] + '@' for x in xrange(0, len(s), 2))
19:59  mwizard: pozican: in any way you have to group symbols together
20:00  mwizard: KirkMcDonald: string addition using + is sloooowpokish
20:00  mwizard: and I used truly pythonical style (refer to zip() description in stdlib docs)
20:00  KirkMcDonald: mwizard: It yields quadratic performance when concatenating more than two things.
20:00  KirkMcDonald: mwizard: I am concatenating two things.
20:01  sartan: re: pyconfig.h. I copied it from a windows development desktop to this router and... surprisingly.. it works fine
20:01  KirkMcDonald: mwizard: It is no worse than your tuple concatenation.
20:01  sartan: so is pyconfig.h automatically generated?
20:01  KirkMcDonald: sartan: ./configure generates it.
20:01  sartan: based on the system python is compiled to run on?
20:01  mwizard: KirkMcDonald: yup, I just didn't knew how to make it better, that's why concatenated tuples
20:02  papna-work: I keep writing classes with only __init__.
20:02  papna-work: Someone needs to explain to me how these there functions work.
20:03  kerio: papna-work: what?
20:03  mwizard: papna-work: what function exactly?
20:03  papna-work: kerio: I keep writing classes that should be functions.
20:03  kerio: so write functions
20:03  papna-work: kerio: I was acknowledging I should be.
20:03  kerio: "these there functions"
20:04  papna-work: kerio: You American?
20:05  KirkMcDonald: Them thar functions.
20:05  kerio: no
20:05  mwizard: lolwhat are you talking about?
20:05  KirkMcDonald: kerio: Papna was employing a regional dialect.
20:05  papna-work: kerio: It's colloquial low English.
20:05  kerio: sorry for not knowing that :<
20:05  carpi: hi. could someone please tell me if there is any way to make python call my function say every 5 seconds?
20:06  kerio: carpi: is something else going on?
20:06  papna-work: carpi: What does the program do? What do you do in the mean time?
20:06  mwizard: carpi: use threading.Timer?
20:06  kerio: if not, while True: time.sleep(5); yourfunction()
20:06  papna-work: mwizard: Ugh.
20:06  kerio: mwizard: oh HELL NO
20:06  mwizard: kerio: never used .Timer class
20:06  mwizard: kerio: using .Thread and RLock only
20:06  carpi: kerio: it should not be blocking.
20:07  KirkMcDonald: Note the distinction here between calling it every five seconds, and delaying five seconds between calls.
20:07  psykidellic: time.sleep() ?
20:07  carpi: while True: time.sleep(5) blocks
20:07  papna-work: carpi: Perhaps you want an asynchronous programming framework.
20:07  KirkMcDonald: carpi: So there is something else going on.
20:07  kerio: so you want to do something else in the mean time
20:07  papna-work: carpi: What are you doing in the mean time?
20:07  detrate`: How do I refer to lines that start with @ and what do they do exactly? example: http://www.sqlalchemy.org/trac/wiki/UsageRecipes/Views
20:07  kerio: KirkMcDonald: play around with time.time() if you really want :)
20:07  kerio: detrate`: decorators
20:08  carpi: papna-work: update graphics and accept new connections
20:08  papna-work: carpi: Pictures or a GUI?
20:08  kerio: they're implicit calls to the omonimous function, the function they're decorating is substituted by the return value of the decorator function, which gets the function you're decorating as a parameter
20:08  KirkMcDonald: kerio: I don't understand what you're denigrating, here.
20:08  carpi: papna-work: 2d application
20:08  carpi: using 2d art, sprites
20:08  detrate`: thanks kerio
20:08  papna-work: kerio: @foo; def bar()...  is the same as   def bar()....; bar = foo(bar)
20:08  papna-work: detrate`: ^^
20:09  papna-work: carpi: PyGame?
20:09  carpi: no
20:09  carpi: papna-work: writing my own 2d api like pygame for uni
20:09  kerio: carpi: so write an eventloop
20:09  papna-work: carpi: Using what?
20:09  bui: hi
20:10  kerio: 'lo
20:10  papna-work: kerio: carpi: Better yet, use Twisted's or GLib's
20:10  kerio: why me :(
20:10  papna-work: kerio: Because you advised him to write an event loop.
20:10  kerio: he's writing a 2d api
20:10  kerio: i assume he *has* to write everything
20:11  papna-work: kerio: The world has too many event loops. There should be one.
20:11  kerio: because apparently the purpose of universities nowadays is to reimplement the implemented
20:11  mwizard: what's the best construction to be used for prepending string length in binary form to string itself?
20:11  kerio: papna-work: also see pygame
20:11  papna-work: What about it?
20:11  mwizard: now using ''.join(struct.pack('L', len(item)), item), but looks ugly
20:11  kerio: the world has too many 2d graphic libraries
20:11  carpi: pygame uses even loops
20:11  kerio: mwizard: why would you need that
20:11  carpi: *event
20:11  papna-work: carpi: Yes, a graphics app needs an event loop.
20:12  mwizard: kerio: to write string table to harddrive and be able to load it from C program easily
20:12  mwizard: i'm writing my own compiler lol
20:13  kerio: >load it from C
20:13  kerio: >looks ugly
20:13  kerio: makes perfect sense to me
20:13  mwizard: heh
20:14  kerio: why can't you just zero-terminate them and make the C program load them one by one?
20:14  mwizard: this will be executable for virtual machine, unfortunately python is slow enough for such work
20:14  mwizard: kerio: because NULs can be met in these strings too
20:15  papna-work: mwizard: Why aren't you using LLVM?
20:15  papna-work: The world has too many VMs, too.
20:15  sartan: thanks everyone
20:16  mwizard: papna-work: because LLVM is not designed for operations I developed my VM for
20:16  mwizard: it cannot reverse algoritms and operate with quad logics
20:17  mwizard: (quad logics - e.g. not only 0 and 1, but ? (unknown) and - (impossible) too)
20:18  mwizard: some operations need execution flow to be reversed back to direct - to fix up former unknowns, for example
20:18  papna-work: Crazy.
20:18  mwizard: so LLVM is not a solution, it'll take much longer adopting LLVM than writing own small VM from scratch
20:19  habnabit: Sounds like you want prologue
20:19  habnabit: Prolog
20:19  papna-work: Prolog
20:19  arkanes: this from the guy who is unclear on how to write length-prefixed strings
20:19  mwizard: Prolog is even slower than Python, thanks :)
20:19  habnabit: Phone autocorrected it
20:19  papna-work: Ah.
20:19  arkanes: also not on-topic or appropriate for this channel
20:19  bui: Hello, python doesn't support the '++' ? writing "var+=1" everytime is not that annoying, I'm just curious
20:19  arkanes: so elsewhere, please
20:19  arkanes: bui: integers are immutable
20:20  pozican: bui: correct
20:20  papna-work: bui: `+= 1` isn't a common operation in Python.
20:20  papna-work: bui: Perhaps you're looking for a for loop.
20:20  habnabit: bui: Most places you'd use it in other languages don't exist in python
20:20  bui: papna-work: yes I was actually doing a loop
20:21  papna-work: bui: It sounds like you might want to do a *different* loop.
20:21  bui: I may not use python in the best way then probably, but thanks anyway :p
20:21  bui: papna-work: ahah probably :)
20:21  mwizard: arkanes: I know how to write length-prefixed strings, I asked for *better* solution. This differs from "I don't get how to make this".
20:21  pozican: bui: for i in list: print i
20:22  arkanes: mwizard: off friggin' topic
20:22  papna-work: bui: Are you using i as an index?
20:22  init: hm, is there any way to get complex numbers to play nice with the decimal module?
20:22  bui: papna-work: yes actually, but I should use more the "for x in <stuff>", not used to writting this yet
20:22  Rawrcasm: Okay so I've been reading a Python book recently, and I just finished a section on callable and getattr... and I can't seem to grasp any real uses for them.
20:23  KirkMcDonald: Rawrcasm: callable() is almost perfectly useless.
20:23  habnabit: Rawrcasm: callable is useless, yes
20:23  Rawrcasm: lmao.
20:23  Rawrcasm: Oops.
20:23  papna-work: bui: Any time you find yourself using an index, stop yourself and think, "Can I do this better?"
20:23  KirkMcDonald: Rawrcasm: getattr() has its uses, but if you can't think of any, you don't need it. :-)
20:24  Rawrcasm: KirkMcDonald: Thanks. Makes sense then. :P
20:24  bui: papna-work: thanks for the tip, I think too much in C, pretty new to python ;)
20:24  MrElendig: bui: and when you really need an index, take a look at enumerate
20:24  Rawrcasm: KirkMcDonald: I guess it's good for when you have an object with different types of functions and vars that it can return, and you wanna verify it's returning what you want, eh?
20:24  Somelauw: Speech Dispatcher configuration tool
20:24  Somelauw: Do you want to setup a completely new configuration? [yes]
20:24  Somelauw: What does that mean?
20:24  KirkMcDonald: Rawrcasm: As a rule, a function should return a single kind of thing.
20:25  habnabit: Somelauw: Why are you asking is
20:25  Rawrcasm: KirkMcDonald: Yeah.
20:25  habnabit: Us
20:25  Somelauw: python says that to me: when I ask help("modules"). I don't understand the question.
20:26  habnabit: Somelauw: Then you have some poorly-written modules installed
20:27  Somelauw: So, what should I do? Maybe some programs rely on poorly written modules?
20:28  habnabit: Somelauw: Easy, don't do help('modules')
20:28  Somelauw: Is scipy badly written?
20:28  habnabit: No idea
20:28  papna-work: In a lot of ways.
20:28  KirkMcDonald: Wow. help('modules') imports everything.
20:28  KirkMcDonald: I didn't know that.
20:28  habnabit: KirkMcDonald: Hee he's
20:28  marienz: now you know!
20:28  Somelauw: So, how do I escape the question?
20:28  habnabit: Hee
20:29  habnabit: habnabit: Somelauw: Easy, don't do help('modules')
20:33  lvh`: KirkMcDonald: Q: How do you update a support library using a package manager that depends on a particular version of that library
20:33  lvh`: KirkMcDonald: A: help('modules')
20:33  Ward|: can i use python to check input from /dev/input/event* , and start a program or script when a specific key is pressed?
20:33  lvh`: Ward|: Sure.
20:34  Ward|: lvh`, are there any examples about this?
20:34  lvh`: Ward|: (Reading from that directly requires root privileges though.)
20:34  Ward|: lvh`, root privileges are fine :)
20:34  lvh`: Ward|: Not that I know of. I did that using a C program.
20:34  lvh`: Ward|: What's the use case?
20:34  Ward|: lvh`, lol hold on
20:34  Ward|: its a littel bit unconventional use
20:35  pozican: Ward|: does /dev/input/event only show keyboard events? or events from ssh connections too?
20:35  Ward|: i have this PDA with USB host, and bluetooth, its linux capable and runs and old debian etch
20:35  Ward|: however its screen is broken...
20:35  Ward|: so now i will be using it as a fancy bluetooth intervalometer to trigger my DSLR camera
20:35  Ward|: (to make timelapses)
20:36  carpi: thanks everyone
20:36  Ward|: so security is not an issue at all, it wont ever be connected to the internet
20:36  Ward|: pozican, only keyboard
20:36  pozican: Ward|: thanks
20:37  Ward|: pozican, are you trying to get a keypress from over ssh?
20:37  pozican: Ward|: of sorts - I want to be notified when a user on my shell box is mucking about with /etc/passwd for example
20:38  Ward|: pozican, ah ok i dunno then
20:38  Ward|: but dont allow the user to change /etc/passwd and you should be ok i guess
20:39  lvh`: You can only rarely do anything interesting with /etc/passwd anyway
20:39  lvh`: (well, uid 0 is interesting.)
20:39  Ward|: lvh`, so any ideas now you know what it's for?
20:39  PythonNub: What would be the most optimal way to get the time until a certain date&time?
20:39  habnabit: PythonNub: Subtract them
20:39  PythonNub: E.g. print Xhours Xminutes until Xtime
20:39  pozican: Yea, I just want to monitor the users, was considering writing a wrapper for bash
20:40  PythonNub: Yeah I know that, duh.
20:40  PythonNub: I meant use the time or date module?
20:40  lvh`: Ward|: libx11 or libxcb sounds like a good start.
20:40  pozican: PythonNub: python has support just to subtract them and print out the timedelta
20:40  lvh`: Ward|: (Oh, wait, is that thing even running X?)
20:40  Eevee: PythonNub: in a loop, sleep for one second and increment a counter.  when you pass the target date&time, you have the difference as a number of seconds
20:40  Ward|: lvh`, nope no x
20:40  habnabit: PythonNub: datetime is the only module to use
20:40  Ward|: lvh`, it CAN run x but that eats shitloads of batterypower and has no use since my screen is broken
20:41  PythonNub: it's not 'datetime' it's date and/or time
20:41  PythonNub: never mind.
20:41  PythonNub: my mistake. there is a datetime
20:41  lvh`: Ward|: Aaah yeah, okay. I'm not sure what event devices produce, but I would imagine there are C libraries to help you use it.
20:41  Ward|: lvh`, no python libs?
20:42  pozican: Ward|: I found some info, but nothing super cool for you
20:42  Ward|: pozican, nothin usefull?
20:42  Ward|: *nothing
20:42  lvh`: Ward|: Not that I know of
20:42  lvh`: Ward|: It probably exists
20:43  lvh`: Ward|: I just haven't done it
20:44  DizzyDoo: Hi. How do I execute this command line statement from a .py file  E:\My Dropbox\Adam\Mongo\bin\mongo\ --dbpath E:\My Dropbox\Adam\DB\  because I'm having trouble, mainly with the spaces in the directories. Thanks!
20:44  Ward|: yeah lvh` gonna keep looking
20:44  detrate`: was anyone here able to get oursql to compile on ubuntu? It does not want to install for me via easy_install, pip or manually, gcc failing with exit status 1
20:45  x0rs: Has anyone read O'Reilly's Learning Python 3rd edition? I have the eBook, and it seems good so far, not sure if anyone else recommends it. I went with 3rd edition instead of 4th since I am primarily learning Python 2.6 and not 3.0
20:45  totic:  Hi I am using cherry py to make a little server. But for some reason sometimes its not writing its output to a file
20:45  totic: I am just using the standard
20:45  whoever: hi all i am trying to print with ansi escape code for the first time, can someone look at my line and tell me what  i am missing : print 33['0:31'+ "\n Deleted " + SourceWWW.rsplit('/',1)[1] + "\n"+"33[0m
20:46  totic: f = open("tomato.txt","a")
20:46  totic: f.write("this\n")
20:46  totic: f.flush()
20:46  totic: and f.close()
20:46  totic: but nothing
20:46  Yhg1s: totic: and are you checking the right directory? Perhaps you want to use an absolute path.
20:47  Yhg1s: whoever: 33['0:31' is invalid syntax.
20:47  Yhg1s: whoever: did you mean "\033[0:31" instead?
20:48  whoever: Yhg1s: that looks better , all I am finding is py scrips no real help
20:49  Yhg1s: I'm not sure what you're trying to say.
20:49  Ward|: its so horrible that showkey does exactly what i need...
20:49  Ward|: only it just shust quits after ten seconds of inactivity...
20:49  Ward|: really annoying
20:52  whoever: Yhg1s: i get an err on om" which i think has to be at the end:     print "\33[0:31"+ "\n Deleted " + SourceWWW.rsplit('/',1)[1] + "\n"+ 33[0m"
20:52  whoever:                                                                              ^
20:52  Yhg1s: whoever: well, that's the same syntax error right there.
20:52  Yhg1s: 33[0m is invalid Python syntax.
20:52  Yhg1s: also, \33 is not what I said.
20:54  subsume: Can someone help me cook up some regexp that will tell me if a particular string is encapsulated within a single <p></p> set? having trouble.
20:54  subsume: gotchas: it has to respect line breaks
20:54  subsume: I don't want it to match <p>...</p><p>...</p>
20:56  whoever: Yhg1s: i tried \" and still errord
20:56  explodes: DeprecationWarning: BaseException.message has been deprecated as of Python 2.6 :: What is the proposed alternative?
20:56  derdon: explodes: show us the code!
20:57  confluency: subsume: regular expressions are really bad for parsing HTML.
20:57  subsume: I know, confluency
20:57  subsume: I don't know else how to test this
20:57  explodes: Exception('failure1298371928371982371923').message @ derdon
20:57  andywww: Hi.. I can't get mechanize to recognize the robots metatag
20:57  andywww: ... did i just rap?
20:57  andywww: anyway
20:57  andywww: is there a switch or something i can pass it?
20:57  confluency: I'll see if I can whip up something horrible. ;)
20:58  aidan: (tmp,path) = tempfile.mkstemp(); tmp.write(...) ... why would tmp be an int, the docs say it returns a handle?
20:58  derdon: explodes: catch the exception with ``except Exception as e:`` and then do something with e
20:59  confluency: subsume: what do you mean by "a particular string"?  What exactly are you trying to test?
20:59  PythonNub: How do I clear the console input in python?
20:59  subsume: confluency, I want to know if a string output as a single paragraph
20:59  subsume: pythonnub reset?
20:59  explodes: derdon: http://pastie.org/1230603
20:59  explodes: ^dammit derdon
21:00  PythonNub: What you mean?
21:00  PythonNub: print reset    ?
21:00  derdon: exlpodes: what about ``print e``?
21:00  subsume: confluency, can I just test split("<\/p>")
21:00  derdon: explodes: I meant you ;)
21:00  confluency: subsume: OK, so if you have the string, why can't you see if you can find the string in the text? i.e. unbroken by any tags?
21:00 --- Falun_ is now known as Falun
21:01  explodes: but i want the message not to print it
21:01  subsume: confluency, if its more than one, I want to allow it. =)
21:02  confluency: subsume: it's still not clear to me what you want to find out.  Can you give some examples?
21:02  habnabit: subsume: Just use lxml.html
21:02  explodes: derdon: str(error) !
21:02  explodes: derpdy derp
21:02  derdon: explodes: yeah
21:03  derdon: explodes: print uses implicit conversion to str
21:03  subsume: confluency, <p>yes</p>
21:03  tanner: are there any python libraries that can tell you the signal strength between you and a device?
21:03  habnabit: aidan: It says it returns a file descriptor
21:03  explodes: tanner, bluetooth, wifi?
21:03  nosk1o: tanner: personal aura?
21:03  habnabit: aidan: Those are Inge
21:03  habnabit: Ints
21:03  tanner: my apologies, bluetooth
21:03  MrElendig: tanner: you can probably grab that out of /sys
21:04  Beat1823: Would anyone like to help me with a Binary Sort? I need it implemented after getting a list from os.walk
21:04  MrElendig: tanner: and there is python-pybluez
21:04  Beat1823: But i dont quite get it...
21:04  MrElendig: tanner: no idea if that one will give you the signal strenght though
21:06  lvh`: Beat1823: Hang on, why does it need to be a treesort?
21:07  Beat1823: Well, im working with directories that have many many folders in them, so checking each and everyone one takes about 2-3 min.
21:07  lvh`: Beat1823: I don't understand the link between os.walk and treesort, at least.
21:07  Beat1823: OH, im getting a list of all the folders in a folder
21:07  lvh`: Beat1823: Okay, and how do you plan on making that faster using a sort?
21:08  Beat1823: Well someone said if i used a binary search, it would cut down the time. Right now its just a if statement
21:08  Beat1823: So for x in list:
21:08  Beat1823: then loops
21:09  habnabit: Beat1823: sounds like they have no idea what they're taking about
21:10  Beat1823: That could be
21:10  lvh`: Beat1823: That's entirely possible, but only if there's some part of the problem you're not telling me
21:10  Beat1823: Ok, l'll step though what im doing, hah see if that helps
21:11  kerio: you have directories with folders inside?
21:11  Beat1823: So i get a list of all the folders in a folder. Then I want to only get a list of the names of the folders that have "__" in it
21:11  kerio: what is a folder?
21:12  KirkMcDonald: kerio: A directory.
21:12  Beat1823: Ill start saying directory
21:12  Beat1823: bad habbit
21:12  lvh`: Beat1823: Well, sorting takes at least n log n on average, assuming unsorted input.
21:12  lvh`: Beat1823: Finding all things that start with __ is a linear operation.
21:13  lvh`: Beat1823: So, I'm going to go with _habnabit on this one.
21:13  kerio: lvh`: doesn't os.walk give you directories in alphabetical order?
21:13  lvh`: Beat1823: The only way you could affect that is changing what os.walk gives you, but that depends on whatever your filesystem decides to give you.
21:13  lvh`: kerio: Maybe!
21:13  habnabit: kerio: No
21:14  Beat1823: Yeah, you just have to do foo.sort() if its a list though.
21:14  Beat1823: I guess not
21:14  lvh`: kerio: By which I mean "it might".
21:14  nosk1o: [name for name in os.listdir(PATH) if isdir(join(PATH, name)) and '__' in name]
21:14  lvh`: Beat1823: Yeah but don't -- that doesn't help you.
21:14  lvh`: kerio: But in general: it definitely isn't a part of os.walk's contract.
21:16  kerio: how "a lot" is "a lot of nested directories", Beat1823?
21:16  Beat1823: Like
21:17  Beat1823: ....if i was to do a rough estimate
21:17  Beat1823: 150? or so
21:17  Beat1823: Were trying to pipeline some of the things at work
21:17  Emil: for element in list <- is that guaranteed to iterate through the list starting at 0, 1, 2, ..., len(list) - 1?
21:17  KirkMcDonald: Emil: Yes.
21:18  Emil: (index-wise)
21:18  nosk1o: Emil: it will iterate over all elements of the list
21:18  KirkMcDonald: Emil: In order.
21:18  nosk1o: *on
21:18  Beat1823: hmm... Well I know that every folder I want is going to start with __
21:19  lvh`: Beat1823: Well, in order to make that go any faster, you would need to change the output of os.walk
21:19  Beat1823: Yeah
21:19  lvh`: Beat1823: And, given the information you've given us that's not actually possible
21:19  Beat1823: I was just thinking of changing that whole function
21:19  lvh`: Beat1823: Furthermore, I would love to hear from the guy that told you to use treesort
21:20  lvh`: if he has a treesort variant that sorts in O(n), I'll buy it
21:20  Beat1823: Hahahah, hes a friend who uses C++ and C#, I dont think he quite got what i was doing
21:20  anr78: #join #emacs
21:20  anr78: oops
21:21  Ward|: lvh`, this is how i solved it in case you want to know: http://www.koders.com/c/fidB6AFFE7B3519E85CC2CAE5DE9E4FC206EE00228C.aspx
21:21  Bonaparte: anr78, running IRC commands on the network tab is always a good thing :)
21:22  lvh`: Ward|: I was kind of avoiding C since it's a PDA
21:22  jakllsch: tab?
21:22  Beat1823: Thanks everyone, hah I think ill come here more often
21:22  lvh`: Ward|: And cross compiling's a b----.
21:22  Bonaparte: jakllsch, tab/window whatever you have
21:22  KirkMcDonald: jakllsch: You know, the soft drink.
21:22  anr78: Bonaparte: yep, good it was not a *really* dark secret.
21:22  nosk1o: jakllsch: yeah! your client doesn't have tabs? It's the new thing!
21:22  papna-work: lvh`: Finding all things that start with __ is a linear operation for the applicable data structure, at least.
21:22  Ward|: lvh`, i natively compiled it :)
21:22  Bonaparte: anr78, I'm disappointed you didn't try to identify to nickserv with your password
21:23  papna-work: b----, b----, b----, and BINGO WAS HIS NAME-O
21:24  lvh`: Ward|: That works too. I started "natively" compiling on virtual machines (Qemu).
21:24  anr78: Bonaparte: that's ususally followed by. PersonScrewingUp: Now I have to change my pass. FunnyCommenter: I'm sure someone already has done it for you :)
21:24  Ward|: lvh`, yeah i made a rootfs like that
21:24  Bonaparte: anr78, good one :)
21:24  Ward|: lvh`, but there's also a very very nice toolchain for arm
21:25  Ward|: lvh`, i gforgot the name of the company who made it... their free version is perfect
21:25  Ward|: they contribute a lot to gcc from what i read
21:25  Ward|: i use that toolchain to compile kernels
21:26  anr78: Ward|: CodeSourcery, probably
21:27  Ward|: anr78, thats the one :D
21:27  Ward|: thnks
21:27  Ward|: couldnt check for the name from this machine
21:27  Ward|: anr78, i love how their toolchain just works
21:27  Ward|: i didnt have very good experiences with other toolchains
21:28  whoever: is there a doc for how how use ansi color
21:28  lvh`: Ward|: I haven't tried it but I no longer see the point in even trying to crosscompile
21:28  lvh`: Ward|: Maybe if Qemu stops being good
21:28  anr78: Ward|: Haven't used it much myself, but I hear its good.
21:28  Ward|: anr78, you should try it if you run into trouble with whatever you use now
21:28  Ward|: thats why i tried it
21:29  alexs: Do I not understand HTML5 or is html5lib doing crazy things? http://pastebin.com/wvYxCAH4
21:29  infobob: http://paste.pocoo.org/show/277095/ (repasted for alexs)
21:29  alexs: Why is <form> wrapping all tags that start after it?
21:30  anr78: Ward|: I use OpenEmbedded at the moment, which compiles its own toolchain
21:32  andywww: hi, i'm having problems making python recognise robots meta tags such as those found on WordPress blogs when you opt to not appear in search engines
21:33  andywww: <meta name='robots' content='noindex,nofollow' />
21:33  andywww: neither robotsparser nor mechanize picks up this tag
21:34  andywww: can anyone suggest a better way of testing for it?
21:34  andywww: any help would be much appreciated
21:35  PythonNub: http://paste.pocoo.org/show/277097/
21:35  PythonNub: how would i make that show time remaining instead? ^^
21:36  habnabit: PythonNub: datetime module
21:36  habnabit: Also don't use the string module
21:36  PythonNub: what bit in datetime though >.<
21:36  habnabit: datetime objects
21:36  Willfon: BTW, thank you all for imparting me with wisdom. After joining this channel, I have learned by osmosis and was able to find out why my sort function was bollocs.
21:40  pedahzur: Hit an odd one today. I am trying to work on a site using Mechanize, and selecting a form produces this error: LookupError: unknown encoding: 8859_1"  This is a US English system using UTF-8 as its default encoding.  I haven't a clue as to where I should even start looking.
21:41  habnabit: pedahzur: Pastebin the complete traceback
21:41  pedahzur: Sure.
21:41  pedahzur: Hello again habnabit :)
21:41  habnabit: Hi
21:41  lvh`: it probably wants 8559-1
21:42  pedahzur: lvh`: I would assume so, but that should be installed...I made sure of that when I set up the system.
21:42  Thiryal: alexs: Your simple example is a bit confusing - the two different forms appear to generate the same page. Is there a slightly more complex example where html5lib definitively gets it wrong?
21:42  plantian: I'm going to ask a stylistic question so get your stones ready.  Is dictionary formatting like this considered harmful -- http://paste.pocoo.org/show/277112/
21:42  lvh`: pedahzur: (I think the problem is that the thing is called 8559-1, not 8559_1)
21:43  pedahzur: http://fpaste.org/9iv7/
21:43  pedahzur: habnabit: http://fpaste.org/9iv7/
21:43  pedahzur: lvh`: yeah, I'd assume that too...but if so, then this a bug in either Mechanize or ClientForm...I would have a hard time believing it hasn't been caught before.
21:44  habnabit: pedahzur: What page is this form on
21:45  Thiryal: plantian: Not sure why it'd be considered harmful; if you have to define a lot of key/value pairs it's certainly a lot more readable to do it in that style.
21:45  Kronuz: hello
21:46  l3: Hi All: I am looking for a way to parse command line args in python 2.6.. I found argparse but it seems to be in 2.7/3.2 only.  Is there anything for 2.6 (even if less featureful?)
21:46  plantian: Thiryal:  Well I guess if its just kind of a symbol pushing and eventually just wastes more time than it saves in readability. I also think its more readable but just wanted to check if there was some reason to not to.
21:46  Kronuz: hey, I have a string: "abcdefghij"… I want to separate it, grouping it with dashes as: "ab-cdef-ghij" (every four characters) …what's the best way of doing that?
21:46  uspenok: hi, i'a, tring to make python script executable in linux, but when i start him i get cross cursor (X) and nothing is doing
21:46  papna-work: plantian: No, that's considered just fine.
21:47  Thiryal: plantian: I don't follow how it wastes more time than it saves, perhaps there's some other context to the example?
21:47  pedahzur: habnabit: https://base.liveperson.net/hc/web/public/pub/ma/lp/login.jsp
21:47  habnabit: pedahzur: Does the source of that page have 8859_1 in it anywhere
21:48  plantian: Thiryal:  well just in the past i've read about certain code formatting habits that really aren't beneficial, like lining up = signs in multiple lines of assignments, so was just curious but you've talked me into it, thanks
21:48  pedahzur: habnabit: no
21:50  Thiryal: plantian: Ok. Most good formatting practices should be handled natively in your IDE, e.g. to write that same dictionary example you gave, instead of hitting space to separate the key/value pairs, I hit enter and it looks nearly identical to what you posted.
21:51  pedahzur: habnabit: in fact it has this: <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
21:51  papna-work: plantian: A name like "key_map", on the other hand...
21:52  Thiryal: Aligning the = signs, well, you could probably set it up to happen automatically in an IDE but that seems a bit extreme.
21:52  uspenok: hi, i'a, tring to make python script executable in linux, but when i start him i get cross cursor (X) and nothing is doing
21:52  plantian: Thiryal:  That was an example of bad formatting though, I don't do that.
21:53  plantian: papna-work: Yeah I know, I pulled it from a code base that isn't mine.
21:53  habnabit: uspenok: You're running it as a bash script
21:53  uspenok: habnabit: so how i could run it like i should ?
21:54  habnabit: uspenok: Fix the shebang
21:54  plantian: Thiryal: I'm using emacs, I'll check and see if its automatic, I was just working on a patch.  Thanks.
21:54  Thiryal: plantian: I understand, just pondering out loud about it being supported in an IDE and how difficult it would be.
21:54  Thiryal: plantian: Yes, it's automatic in python-mode in emacs, that's what I'm using. :)
21:55  uspenok: habnabit: Yes, thanks
21:59 --- lvh` is now known as lvh
22:01  pedahzur: habnabit: The response headers include: "Content-Type:text/html;charset=8859_1"  Hmm...
22:01  habnabit: pedahzur: Whoops!
22:02 --- el_kevino is now known as el_kevino_afk
22:06  pedahzur: habnabit: It appears it should be 'ISO-8859-1' if I'm reading the docs right.
22:06  habnabit: Correct
22:06  pedahzur: habnabit: I'd like to know how they managed it...they'd have to try pretty hard to configure their web server that incorrectly.
22:07  TheCommieDuck: Is there a standard library for Python dealing with simple (i.e. pixel) graphics?
22:07  TheCommieDuck: I know of tk GUI.
22:07  habnabit: pedahzur: What's the server header
22:07  habnabit: pedahzur: Also it can be a badly-written Webapp
22:08  pedahzur: habnabit: IIS 6.0
22:08  pedahzur: habnabit: ASP.NET
22:08  habnabit: Yeah okay
22:08  papna-work: TheCommieDuck: What are you doing with graphics?
22:09  TheCommieDuck: papna-work: Particle game.
22:09  KirkMcDonald: TheCommieDuck: Perhaps pygame.
22:10  whoever: trying to change directory with chdir(SourceWWW.rsplit('/',1)[1].rsplit('.',2)[0])
22:11  marienz: whoever: if that's what it sounds like using direct string manipulation is suboptimal
22:11  marienz: whoever: the posixpath module may be of use
22:11  whoever: but won't change directory and dosn't complain
22:11  marienz: no wait, "chdir"?
22:11  marienz: what are you actually doing?
22:11  christianp: hi all
22:12  habnabit: whoever: chdir is basically always wrong
22:12  christianp: i need to make a sum from elements of two list of the same lenght, i.e. from [1,2,3] and [1,1,2] i need [2,3,5]. Is there a function doing that?
22:13  marienz: whoever: is "chdir" os.chdir, and what is SourceWWW?
22:13  KirkMcDonald: I once had a legitimate use for os.chdir, but it was something of a pathological case.
22:13  habnabit: christianp: map(operator.add, L1, L2)
22:13  whoever: naimon: its a variable , i prited the output to varify that that is a directry
22:14  christianp: m8, thanks habnabit
22:14  christianp: ;)
22:14  whoever: habnabit: and i did use os.chdir()
22:14  KirkMcDonald: Executing a certain binary as a subprocesses, which only worked on relative paths. (Like I said, pathological.)
22:14  whoever: naimon: you mean os.path ?
22:14  KirkMcDonald: And yes, I could have passed the cwd to Popen.
22:15  habnabit: whoever: Yes. Don't.
22:15  marienz: whoever: what is the actual value of SourceWWW? Splitting it on "." seems odd
22:15  habnabit: whoever: You should never use it
22:15  christianp: habnabit, sorry, i forgot i'm using python 2.4 . I suppose operator is not defined
22:15  marienz: habnabit: that's a bit of an oversimplification :)
22:15  marienz: christianp: import operator
22:15  KirkMcDonald: christianp: import operator
22:15  christianp: :D
22:16  habnabit: marienz: It works in the general case
22:16  marienz: hrm
22:16  habnabit: marienz: If you know enough to understand why I said it, ...
22:16  marienz: whoever: "chdir" is awkward because the current working directory is very global state, so changing it from library code is pretty much always wrong
22:17  whoever: habnabit: its splitting a url to get the name of a file, check ist extention and get the dir to change to after extraction
22:17  marienz: whoever: you're frequently better off just prepending the path you want to the filenames you want to operate on, instead of actually chdir-ing
22:17  marienz: whoever: pastebin your actual code + actual value of SourceWWW please
22:17  whoever: naimon: ok will try
22:18  whoever: naimon: actual value of SourceWWW is a dynamic variable
22:18  Diblo_Dk: I have trouble shlex converter command to useless data. http://paste.pocoo.org/show/277134/
22:19  marienz: Diblo_Dk: you're passing unicode into something expecting bytes
22:20  nosk1o: he's passing bytes
22:20  Diblo_Dk: Ooh, how to encode it in to bytes  :P
22:20  nosk1o: Diblo_Dk: you're passing bytes, however there are lots of nulls in them
22:20  TheEmpath: howdy.  I'm using MimeMultipart to generate alternative mails (plain and html).  I'm folllowing the various instructions I find on Google on how to do this and I'm copying it verbatim, but when the message gets sent, mac mail sees it as blank.  The raw headers however show the message has been generated.  I'm lost :(   http://gist.github.com/632978
22:21  marienz: nosk1o: he's passing unicode into shlex.split, I'm 99% certain.
22:21  marienz: nosk1o: try shlex.split(u'foo bar') to see what I mean
22:21  nosk1o: oh
22:21  nosk1o: weird behavior
22:21  Diblo_Dk: Ooh yes :P
22:21  marienz: Diblo_Dk: where are you getting "cmd" wrong?
22:21  marienz: err
22:21  marienz: Diblo_Dk: where are you getting "cmd" from?
22:22  nosk1o: do you have from __future__ import unicode_literals ?
22:22  marienz: nosk1o: it's because shlex uses cStringIO internally, which works on anything providing the buffer interface, and unicode objects provide that interface, exposing their underlying ucs-2 or ucs-4 storage
22:22  marienz: nosk1o: try "str(buffer(u'foo bar'))" to see that one in action
22:23  marienz: nosk1o: and yes, going "wtffffff" the first time you run into this is normal
22:25  Diblo_Dk: . :) From MyFrame.py
22:27  nosk1o: Diblo_Dk:  do you have from __future__ import unicode_literals at the top of MyFrame.py ?
22:29  Diblo_Dk: Code snippet is as it stand in the file. 1 minute and you can see the full sources.
22:30  detrate`: is oursql pretty much a deadend? I can't find much documentation on it and I can't get it to install on a Ubuntu system
22:30  KirkMcDonald: detrate`: It's still fairly new.
22:30  KirkMcDonald: habnabit: Where's the docs, eh?
22:31  damd: hey, i'm using PIL to simply resize images using the ANTIALIAS filter, but the quality of the output JPEG has too low quality for my taste.  what is the best way to increase this?
22:31  habnabit: Google finds them handily
22:32  Diblo_Dk: http://abeni.cvs.sourceforge.net/viewvc/abeni/abeni/MyFrame.py?revision=1.12&view=markup on line 1630
22:32  KirkMcDonald: detrate`: And, anyway, oursql is just a DB API module.
22:32  lvh: detrate`: http://packages.python.org/oursql/
22:32  lvh: detrate`: That doesn't count?
22:32  KirkMcDonald: detrate`: There's little that requires documenting, if you've read the relevant PEP.
22:33  whoever: naimon: here you are http://paste.pocoo.org/show/277144/
22:33  TheEmpath: is this how to send HTML mails in python?  http://gist.github.com/632978
22:33  fencepost: Is there a special class method I can write for python to call on any unknown members? Ie a
22:33  Diblo_Dk: nosk1o :s :P No I think not.
22:33  KirkMcDonald: damd: http://www.pythonware.com/library/pil/handbook/format-jpeg.htm
22:33  KirkMcDonald: damd: (Or, don't use JPEG.)
22:33  damd: why not JPEG?
22:34  fencepost: ie: a "lastditch before claiming this variable doesn't exist" function?
22:34  KirkMcDonald: damd: Well, depends on what kind of image it is.
22:34  nosk1o: Diblo_Dk: where does PORTDIR_OVERLAY  comes from?
22:34  KirkMcDonald: damd: But I nearly always prefer PNG.
22:34  damd: these are images of real people :)
22:34  KirkMcDonald: damd: Then JPEG may be fine.
22:34  nosk1o: Diblo_Dk: utils.get_portdir_overlay() seems to be returning unicode
22:34  damd: yup, should be
22:34  damd: anyways, thanks a lot
22:35  nosk1o: Diblo_Dk: or something like that. Thing is, you're ending up with some unicode object at `cmd`
22:35  Diblo_Dk: Gentoo Linux portage config. Okay
22:35  marienz: detrate`: there's an overlay
22:35  detrate`: lvh: the problem I'm hading is compiling it
22:35  marienz: detrate`: err, a ppa
22:36  nosk1o: Diblo_Dk: add some more prints or run the stuff through a debugger
22:36  magicblaze0071: if you have a class X: with a static variable y, Class X: y = 2. When one accesses X.y in this class vs self.y, what is the difference?
22:36  nosk1o: magicblaze0071: none.
22:36  detrate`: I installed cython but it still not compiling
22:36  detrate`: and I can't find any documentation on what I need to install to get it to compile
22:36  KirkMcDonald: magicblaze0071: It is possible to shadow the class attribute with an instance attribute.
22:36  panfist: is there a shortcut to running a method/function call as a subprocess?
22:36  nosk1o: magicblaze0071: when you access self.y, python tries to find the attribute in the instance
22:36  marienz: detrate`: https://launchpad.net/~habnabit/+archive/hab-ppa <-- maintained by the maintainer of oursql
22:36  nosk1o: magicblaze0071: if the attribute is not found, it "falls back" to the class
22:36  magicblaze0071: thanks
22:37  KirkMcDonald: panfist: http://docs.python.org/library/multiprocessing
22:37  detrate`: marienz: do you know why I need to install via a ppa instead of meeting the dependencies otherwise?
22:37  lvh: detrate`: Perhaps you should pastebin some program output.
22:37  panfist: thanks
22:37  marienz: detrate`: because it's too new to be included in debian (or ubuntu), apparently
22:37  detrate`: ahh
22:37  marienz: detrate`: wait, *are* you running ubuntu?
22:38  detrate`: LiamM: http://pastebin.org/297123
22:38  detrate`: yes, I'm running ubuntu
22:38  detrate`: s/LiamM/lvh/
22:38  marienz: detrate`: then just use the ppa (if there's an at all sane ppa that's normally what you want if it's not packaged yet)
22:39  detrate`: alright
22:39  marienz: Diblo_Dk: are you attempting to use python 3?
22:39  nosk1o: it doesn't looks like that's the case, from the traceback
22:39  nosk1o: the traceback mentions 2.6
22:39  Diblo_Dk: nosk1o: Yep. While we wrote I tried to add u (shlex.split (u'cmd ') and u cmd = "find% s..) But it really does not.
22:40  marienz: what?
22:40  Diblo_Dk: - shlex.split(u'cmd') and cmd = u"find% s..
22:40  marienz: Diblo_Dk: that's waht *doesn't* work
22:40  Diblo_Dk: Yes
22:40  marienz: Diblo_Dk: your "cmd" is unicode, while shlex.split only works correctly on bytes
22:41  Diblo_Dk: No 1.6
22:41  marienz: Diblo_Dk: it really doesn't look like portdir_overlay is unicode, but if you pass that through wx it might get turned into it
22:41  marienz: Diblo_Dk: also if you append a unicode string to it somewhere
22:41  TheCommieDuck: Is Python implemented as every member of a class is a pointer?
22:41  sontek: if I name a variable 'sum', it overrides the built-in sum.. how do you clear that out?  Is the best way to do from __builtin__ import sum ?
22:42  nosk1o: sontek: don't name your variable "sum"
22:42  marienz: TheCommieDuck: why do you care? :)
22:42  nosk1o: sontek: it's already a builtin
22:42  nosk1o: sontek: use a better name
22:42  Diblo_Dk: Ooh it many be my env variable
22:43  marienz: Diblo_Dk: I'd have to do a bit more digging than I really want to to figure out where your input comes from or gets converted to unicode
22:44  whoever: trying to change directory with os.chdir(SourceWWW.rsplit('/',1)[1].rsplit('.',2)[0]) and the dir is not changed i have even tried prepenting thecurrent working dir to souceWWW and no luck
22:45  Diblo_Dk: Yes. Thanks
22:45  marienz: whoever: your indentation seems broken
22:45  lvh: TheCommieDuck: Objects in CPython are pointers to a PyObject, yes
22:45  marienz: whoever: also, what's the output of that print command?
22:46  marienz: ohh, wait
22:46  lvh: TheCommieDuck: That's an implementation detail though, there's no guarantees that that's true in everything that's a Python implementation
22:46  marienz: whoever: you're trying to change the working directory of the calling shell?
22:46  TheCommieDuck: marienz: I was wondering...if it wasn't, then self.something = foo, something would only be a copy.
22:46  TheCommieDuck: Wait.
22:46 * TheCommieDuck thinks about that and leaves
22:46  SirTopHat: "global" should really be an object, shouldn't it? global.x = whatever
22:46  marienz: whoever: that is: this script is called from a shell, and you're trying to make "yourscript insert arguments here" change the working directory of that shell?
22:46  ivan`: global is a keyword
22:47  ivan`: and no, global.x would be something else entirely
22:47  SirTopHat: global s; s = 2
22:47  SirTopHat: I know that's right
22:47  marienz: SirTopHat: you can sort of do that via globals()
22:47  ivan`: also keep in mind inner functions and the py3 `nonlocal`
22:47  SirTopHat: maybe it doesn't assign it to main's s
22:48  lvh: TheCommieDuck: Python never implicitly copies
22:48  SirTopHat: print global.s looks a lot better than global s; print s
22:48  whoever: naimon: its to dowload an archive extract it, remove the archive, and enter the extracted folder (its so i don't have to manualy do it when i want somting not in a repository)
22:49  habnabit: SirTopHat: You know what's even better? Don't use globals
22:49  TheCommieDuck: lvh: I thought so, but then realised what I said.
22:50  marienz: whoever: that's impossible.
22:51  marienz: whoever: you cannot directly affect the working directory of your calling process.
22:51  whoever: marienz: here i used wgetpaste for my code http://paste.pocoo.org/show/277157/  so my indent doesn't look broken n
22:51  marienz: whoever: what's happening is that your *script* process does chdir just fine, but then immediately exits.
22:51  magicblaze0071: when one starts a thread using threading.start() -- there are two threads running at that instance, right?
22:52  SirTopHat: a global is fine for a function that's just meant to make code look better
22:52  habnabit: SirTopHat: What does that mean
22:52  marienz: whoever: and your *parent* process (the shell) is (by design, not of python but of the OS) completely unaffected by ths.
22:52  marienz: this, too
22:52  SirTopHat: I have an IRC bot, its say() has a global to get the thread, format its argument and send it to it right
22:53  whoever: marienz: how will iknow if that is the case, all i know is when the script exits i am no in the dir i expect to be
22:53  SirTopHat: because I use that in many places
22:53  SirTopHat: say("command incorrect"), etc
22:53  SirTopHat: that way I don't have to put s.send(format(string)) everywhere
22:53  habnabit: SirTopHat: 1) say should be an instance method. 2) irc bots shouldn't have threads at all
22:53  papna-work: SirTopHat: It sounds as though your design and implementaion is highly suboptimal.
22:53  marienz: whoever: that's not something you can fix.
22:53  whoever: marienz: so use os.system on that then ?
22:53  SirTopHat: I must have meant the wrong thing by "thread"
22:53  arkanes: SirTopHat: have you considered using a database?
22:53  marienz: whoever: that'll work even less well.
22:54  SirTopHat: the connection to the IRC server
22:54  marienz: whoever: os.system would spawn a third process (you'd have your original shell, your python subprocess as a child, and then a third process spawned by os.system as a child of your script)
22:54  SirTopHat: s.send("PRIVMSG #python :hello world")
22:54  marienz: whoever: that *third* process would chdir and then immediately exit. Both your python script and the shell you started it from would be unaffected.
22:54  SirTopHat: the only thing it uses a thread for is its python interpereter
22:55  habnabit: SirTopHat: Still, as I said, it should be an instance method
22:55  SirTopHat: where it saves your line (sanitized) into a file and does something like an os.system("python file") on it
22:56  whoever: marienz: so you are saying it is imposible to chang dirs with python and effect the dir that the shell is in
22:56  kerio: whoever: it... is
22:56  habnabit: SirTopHat: Ha ha, you think you can sanitize arbitrary code.
22:56  marienz: whoever: it is impossible to change directories *in a subprocess* and have it affect the parent process.
22:56  kerio: it's impossible to change dir in a subprocess
22:56  marienz: whoever: that the subprocess is a python script doesn't matter at all.
22:56  SirTopHat: all I need to do is get rid of file operations and imports
22:57  habnabit: SirTopHat: Ha ha, you think you can unilaterally get rid of those.
22:57  marienz: whoever: try this: write a two-line script: "#!/bin/sh", "cd /tmp", save it, and run it from your shell. Nothing will happen.
22:57  kerio: SirTopHat: let's get rid of CPUs
22:57  whoever: moepmoep: but i am changing dirs right befor exiting the scrip so that everthing else is already done
22:57  SirTopHat: string.strip open, import, close, write, etc
22:57  kerio: SirTopHat: hahaha
22:58  SirTopHat: you can't write to a file or execute anything without importing or a file operation
22:58  SirTopHat: as far as I knoq
22:58  SirTopHat: know
22:58  habnabit: SirTopHat: Yeah, that doesn't come close to sanitizing code
22:58  kerio: give me an int and i'll *fuck things up*
22:58  SirTopHat: int x = rm -rf / --force-root-dir
22:58  SirTopHat: pfpfpf
22:59  kerio: s = [func for func in __bases__.__bases__.__bases__.__builtins__ if func.__name__.startswith("__impor")][0]("so"+"cket")
22:59  habnabit: SirTopHat: Anyway
22:59 --- Evixion` is now known as Evixion
22:59  kerio: er
22:59  papna-work: SirTopHat: Python is really hard to sandbox.
22:59  habnabit: SirTopHat: I told you what to do
22:59  kerio: that should read (0).__bases__
23:00  SirTopHat: I don't remember asking you how to do anything, habnabit
23:00  kerio: (note: that probably doesn't work, but something similar will)
23:00  SirTopHat: what did you tell me to do
23:00  habnabit: SirTopHat: You had some poor code structure involving globals
23:00  SirTopHat: that say() function wasn't poor
23:01  kerio: a global say() for an irc bot?
23:01  SirTopHat: if you want poor code I'll pastebin the whole bot
23:01  kerio: SirTopHat: so... why aren't you using twisted?
23:01  habnabit: SirTopHat: It absolutely is
23:01  SirTopHat: because I don't need it
23:01  habnabit: SirTopHat: Since it uses global etate
23:01  habnabit: State
23:01  SirTopHat: meh
23:01  habnabit: SirTopHat: You don't need python. Why are you using it
23:01  SirTopHat: it's easiest
23:01  papna-work: SirTopHat: Using globals for state is not good design. It makes code that is less modular, predicatable, extensible, testable, and maintainabble.
23:01  SirTopHat: for me to work with
23:01  jkyle: is it possible to get the class name in string form from a class reference? e.g. class A(object): pass; def foo(cls): print(cls.??) => "A"
23:02  kerio: SirTopHat: it's really not
23:02  dash: Woop
23:02  papna-work: jkyle: What for?
23:02  habnabit: SirTopHat: Yes. That's what twisted does too
23:02  papna-work: jkyle: cls.__name__
23:02  kerio: jkyle: @classmethod
23:02  jkyle: error output
23:02  dash: hello, humans.
23:02  kerio: oh, wait
23:02  exarkun: Hello, dash.
23:02  habnabit: Dash
23:02  kibosh: Hello, dash.
23:02  kerio: i misunderstood
23:02  jkyle: papna-work: perfect
23:02  dash: and habnabits.
23:02  kerio: __name__ is the name the class gets defined as
23:02  kerio: hi dash!
23:02  habnabit: I have a thing that I want exocet to solve for me
23:02  exarkun: Does Python have a pleasant cross-platform GUI/GL library yet?
23:02  jkyle: __name__ is what I'm looking for, exactly
23:02  dash: exarkun: Does anything?
23:02  KirkMcDonald: exarkun: wx
23:03  exarkun: KirkMcDonald: Hm, I've seen references to that, yea.
23:03  exarkun: I don't want to use wx.  Any other options?
23:03  dash: exarkun: pyglet maybe
23:03  dash: if you like drawing things
23:03  exarkun: Hmm, pyglet.
23:03  exarkun: I forgot about that.
23:03  papna-work: jkyle: Use this for debugging, defining repr, etc; don't use it for semantic information.
23:03  habnabit: dash: Methods do too much
23:03  exarkun: I bet I won't like it.  I remember seeing some code it had to integrate with Twisted one time.
23:03  dash: habnabit: i'm working on it
23:04  habnabit: dash: They should be split into events and actions
23:04  dash: exarkun: don't look at the sausage factory, enjoy the delicious flavor instead
23:04  dash: habnabit: they already are
23:04  habnabit: dash: e.g. privmsg vs. msg in IRCClient
23:04  jkyle: papna-work: repr pertains to instances right? or I make a @classmethod for __repr__?
23:04  exarkun: dash: That only works until you die of food poisoning.
23:04  habnabit: dash: One you override; one you call
23:04  ronnie_vd_c: how can i make this logger http://pastebin.com/99EbpFcG also log in the terminal (stdout?)
23:05  papna-work: jkyle: No, it pertains to instances.
23:05  dash: habnabit: "method calls" and "methods"
23:05  kerio: jkyle: you can make a classmethod __repr__
23:05  kerio: but... why
23:05  kibosh: dash: You developed pyglet?
23:05  pigdude: do imports come before or after module docstring?
23:05  lvh: pigdude: After
23:05  habnabit: dash: Okay well this is the problem I have
23:05  dash: kibosh: good heavens no
23:05  pigdude: lvh: thanks
23:05  helo: exarkun: why no wx?
23:06  papna-work: jkyle: What I'm saying is that cls.__name__ isn't to be used for semantic information, only for stuff that has no particular meaning to the computer
23:06  helo: worked great for a few projects i've worked on
23:06  lvh: pigdude: first file encoding, then editor/VCS metadata if applicable, then docstring, then imports, then code, then __all__
23:06  habnabit: dash: I want to change what privmsg is called with
23:06  jkyle: yeah, this error. creating objects from xml, so the error looks like "Parser: FooClass does not permit attribute 'bar'"
23:06  exarkun: helo: I'm sure it wouldn't work great if I tried to use it.
23:06  helo: heh
23:06  habnabit: dash: But I can't override it and call it on a child class at the same time
23:06  pigdude: lvh: this is useful
23:07  habnabit: dash: Delegates solve this
23:07  helo: since it is based on the c++ lib, it isn't very 'pythonic', but works and looks acceptable
23:08  kibosh: helo: What's unpythonic about it?
23:08  habnabit: dash: Exocet solves everything, right
23:08  KirkMcDonald: The main problem with wx is that it has undergone a handful of API changes over time, and the docs still don't all use the newest API.
23:08  jkyle: delegates are a nice idiom, I enjoy them over inheritance
23:09  KirkMcDonald: wxPython, I mean.
23:09  KirkMcDonald: As a hint, if you're using ID numbers, you're not using the new API.
23:09  kerio: not to mention that wx looks like ass under os x
23:09  exarkun: It would be nice if it didn't segfault and hang
23:09  KirkMcDonald: kerio: It does?
23:09  exarkun: And if it had hooks to integrate with other mainloops
23:09  KirkMcDonald: kerio: I thought it had a lot of OS X-specific support.
23:10  exarkun: If it didn't have those problems I wouldn't even mind if it was ugly on some minority platform
23:10  helo: kibosh: http://www.mail-archive.com/python-list@python.org/msg200277.html there's some points, along with a refutation to save us time :P
23:10  papna-work: The multiple-confusinglydocumented-APIs thing is true of all the major Python GUI toolkits to some extent.
23:10  exarkun: I just want to do some hardware accelerated 3d stuff
23:10  exarkun: in an application with a real GUI, not some GLUT filth
23:11  exarkun: And also use sockets a bit
23:11  kerio: exarkun: twisted then
23:11  exarkun: kerio: Twisted doesn't do hardware accelerated 3d :(
23:11  kerio: yet
23:11  kerio: :)
23:11  exarkun: He he
23:12  exarkun: I guess I'll look at pyglet a bit.  I'm not too hopeful about the sockets part though :/
23:12  kerio: async hardware-accelerated 3d
23:12  exarkun: f'in...
23:12  kerio: http://twistedmatrix.com/trac/wiki/FrequentlyAskedQuestions#WhatsthebestwayofintegratingTwistedwithpygame
23:13  exarkun: Yea, but how do you get a nice GUI with pygame?
23:13  exarkun: (<http://pastebin.com/tymhPPML>)
23:14 --- PythonNub is now known as PythonNub|AWAY
23:14  papna-work: Does PyGame do 3d acceleration?
23:14  KirkMcDonald: papna-work: You can get an OpenGL context from it.
23:14  exarkun: pygame lets you use OpenGL in a window it creates really easily
23:14  helo: exarkun: how many platforms do you anticipate this project being used on?
23:15  papna-work: But you need to put something in it and manipulate it.
23:15  exarkun: yes, which you do with PyOpenGL I guess
23:15  exarkun: At least that's how you used to do it
23:16  exarkun: helo: It'd be nice if I could write something on Linux and have it work on at _least_ one other platform.
23:16  exarkun: If that other platform is OS X or Windows, I don't think I actually care
23:16  SirTopHat: http://codepad.org/diefURWi this is that bot. if some of the variable names are weird, they're injokes with the people on the channel the bot goes to
23:16  kibosh: If you don't care, why do you want it to be portable?
23:17  exarkun: kibosh: My thinking is that there are a ton of people who use Windows
23:17  exarkun: kibosh: So if it works on windows, neat
23:17  exarkun: kibosh: Also, people who use OS X like to spend too much money on things
23:17  exarkun: kibosh: So if it works on OS X, great
23:17  exarkun: There aren't many people on Linux
23:17  exarkun: And they don't spend money on stuff
23:17  exarkun: So if it only works on Linux, ass
23:17  habnabit: SirTopHat: Have you heard of a thing called 'classes'
23:18  Somelauw: I think most python users are linux users.
23:18  exarkun: Of course ideally it would work on all platforms.  I mean, has anyone else noticed that it's 2010?
23:18  papna-work: Somelauw: They didn't pay for Python.
23:18  SirTopHat: I've heard of them but never really looked into them
23:18  exarkun: Somelauw: I have no idea about that.  But I'm not targetting Python users, so it doesn't matter much.
23:18  papna-work: Somelauw: Also, I'm not positive.
23:18  habnabit: SirTopHat: Okay. That's what's your code needs
23:19  habnabit: Somelauw: "users" or "programmers"
23:19  KirkMcDonald: Somelauw: Depends to some extent on how you define "user."
23:19  kerio: hey, i use os x and i don't like to spend too much money on things
23:19 * kerio looks at the 200$ router he bought less than a week ago
23:20  KirkMcDonald: kerio: Soekris box?
23:20  exarkun: kerio: Heh heh
23:20  kerio: no, wrt610n
23:20  helo: surely pygame with standard 'socket'
23:20  kerio: Linksys® by Cisco
23:20  helo: ... would work well enough
23:21  kerio: helo: twisted gives you async
23:21  kerio: gives you abstraction
23:21  kerio: gives you a sane, well-built, tested eventloop
23:21  exarkun: Twisted + pygame still leaves out a nice GUI
23:21  helo: kerio: i'm not sold that pygame + twisted is great... but twisted is definitely The Solution to python network stuff
23:22  Somelauw: Both (gnome has parts in python). Also programmers since a lot of software on linux can use python scripts.
23:22  papna-work: Does pygame have its own event loop?
23:22  exarkun: There's really no question about whether or not I'm going to use Twisted in this project ;)  I need to find pieces to fill in the other parts of the puzzle.
23:22  papna-work: Or use glib's or something?
23:22  exarkun: papna-work: it has none
23:22  KirkMcDonald: papna-work: It uses its own.
23:22  exarkun: KirkMcDonald: hey what, since when?  where is it?
23:22  geck: OSX guis in python, any suggestions from people in here?
23:22  geck: (specifically looking to do a menubar app)
23:22  habnabit: papna-work: SDL kinda has one
23:22  kerio: geck: pyobjc
23:23  kerio: hands down
23:23  KirkMcDonald: exarkun: Well, okay, it doesn't have its own loop. It expects you to write one.
23:23  exarkun: KirkMcDonald: Oh, ok. :)
23:23  kerio: it's perfect!
23:23  KirkMcDonald: exarkun: It has its own events, I guess is what I mean.
23:23  papna-work: KirkMcDonald: That's good.
23:23  geck: kerio: hrm, that's included in the system python install, isn't it?
23:23  exarkun: papna-work: It's kinda bad, though.
23:23  papna-work: exarkun: That too.
23:23  exarkun: If it also gave you a file descriptor that went readable when there was an event to process, that would be good.
23:24  exarkun: But instead you have to poll it
23:24  exarkun: bbiaf, change of venue
23:27  habnabit: I always read that as "be back in a fire"
23:27  papna-work: dash: BTW, I watched the video you linked the other day.
23:27 --- PythonNub|AWAY is now known as PythonNub
23:27  papna-work: Dude had a lot of good stuff to say.
23:27  papna-work: (Took more time than necessary to do it, but kept it entertaining.)
23:28  mcantor: Does subprocess.Popen not work with file globbing?
23:28  lvh: mcantor: Well, yes and no
23:28  lvh: mcantor: flie globbing is a feature of the shell
23:28  lvh: mcantor: So, no, because subprocess by default does not invoke the shell
23:28  mcantor: lvh: I'm trying to run `grep someval /abs/path/*`.
23:29  mcantor: Ah, I see what you're saying
23:29  andywww: this sounds like a stupid question I'm sure but how do I actually parse a HTML document and pull out all <meta> tags please?
23:29  mcantor: I need to glob it before I invoke subprocess.
23:29  andywww: i've had a look at beautiful soup and lxml
23:29  andywww: neither seem immediately obvious
23:32  lvh: mcantor: don't use grep, or use the glob module
23:32  papna-work: mcantor: Don't run subprocess at all. Use the re and glob modules.
23:32  lvh: mcantor: or use shell=True but I don't reccomend it
23:32  papna-work: lvh: Don't recommend awful things.
23:32  Yhg1s: glob? just os.listdir.
23:32  adahlin: is anyone familiar with the way pyd's are loaded/unloaded in windows? I'm having an issue where scipy loads a pyd and the exit code of the program will always be zero (the only lines are import.. sys.exit(12))
23:33  papna-work: Yhg1s: Errrrr, yes.
23:33  papna-work: adahlin: Are you sure sys.exit(12) are getting run?
23:34  adahlin: papna, 98% sure, yes. been working on this a few days, almost sure i stepped into it
23:35  magicblaze0071: in eclipse+pydev, how does one comment  out a selection?
23:35  Dulak: ctrl-m iirc
23:35  Yhg1s: adahlin: how are you importing what? Does the right thing happen if you remove the import? What if you run python with -v or -vv (or set the PYTHONVERBOSE environment variable to 1 or 2)
23:36  magicblaze0071: Dulak: nope
23:36  Dulak: magicblaze0071: no idea then, been a really long time since I used eclipse
23:36  habnabit: C-c C-c
23:37  magicblaze0071: habnabit: nope
23:37  Dulak: emacs!
23:37  fission6: whats a practical way to see if the one dictionaries keys and values exist in a "parent" or another dictionary, ie a subset
23:38  adahlin: Yhg1s, "import sys; import scipy.sparse.sparsetools; sys.exit(12)" will exit with code 0
23:38  KirkMcDonald: fission6: set(d1) <= set(d2)
23:38  lvh: KirkMcDonald: I would assume d1.iteritems()
23:39  habnabit: Magicblaze007: If that doesn't comment the region, your editor sucks
23:39  KirkMcDonald: lvh: Oh, "and values."
23:39  habnabit: Magicblaze007: You can fix that by switching to emacs
23:39  fission6: i tried that KirkMcDonald but i think set(d1) just grabs keys
23:39  KirkMcDonald: fission6: set(d1.iteritems()) <= set(d2.iteritems())
23:39  adahlin: Yhg1s, I've isolated it to the *.pyd files in scipy.sparse.sparsetools. once those are imported, the "bug" (feature?) happens
23:40  adahlin: on the plus side, buildbot never fails with it!
23:40  fission6: nice
23:41  fission6: thanks
23:42  Yhg1s: adahlin: so is the sys.exit() call actually executed? If you add a print inbetween, does it print that? What if you use sys.exit("some message"), do you get 'some message' printed? Does that still exit with exitcode 0?
23:43  Sonderblade: what is the python package called that works similar to java apache maven?
23:44  adahlin: Yhg1s, yes, yes and yes
23:44  fission6: KirkMcDonald: what if the values are lists
23:44  KirkMcDonald: fission6: Then you'll have to display some adaptability.
23:45  fission6: what do you mean?
23:45  KirkMcDonald: fission6: Copy them into tuples.
23:45  fission6: what do you mean, maybe i shoul djust manually loop through the iteritems and compare values from one dict to another?
23:46  dassouki: i've never done any gamedev before, but i plan on writing a little card game app based on a local trump type game we play locally ... any pointers ?
23:47  fission6: KirkMcDonald: is this reasonable?
23:48  KirkMcDonald: fission6: You're looking at O(n**2).
23:48  Yhg1s: adahlin: very peculiar.
23:48  fission6: not just o(n), right?
23:48  Yhg1s: adahlin: the only thing I can imagine is that those modules install an atexit handler that messes things up.
23:48  fission6: justloopint throug one dictionary and see if its in another
23:48  KirkMcDonald: fission6: I guess that's right.
23:48  KirkMcDonald: Of course.
23:48  fission6: yeah may be i am making this to complext
23:49  magicblaze0071: no one uses eclipse + pydev +python here? I need the shortcut to comment a selection...cant find it on google
23:49  fission6: ill just loop through its only going to be like 2 or 3 key values to check from one dict to another
23:50  adahlin: Yhg1s, yeah, it is quite odd. I'm trying an upgrade to scipy now, but i've never seen anything like this... I can only figure the same thing
23:51  adahlin: Yhg1s, that or windows is handling unloading the dll in some really bizarre way for some undisclosed reason
23:51  _Zappy_: Hello, does anyone know how to have pstats print a heirarchy structured procs list ?
23:52  _Zappy_: Anyone pstats savy ?
23:52 --- DaZ is now known as nieDaZ
23:52  KirkMcDonald: pstats the profiler data reader?
23:52  _Zappy_: KirkMcDonald, Indeed
23:53  _Zappy_: KirkMcDonald, I created my profile data using cprofile.
23:53  _Zappy_: KirkMcDonald, But would like the pstats print to show the data in a hierarchical way
23:54  KirkMcDonald: _Zappy_: Not sure what you mean by that.
23:55  _Zappy_: Well , method A calls method B which calls method C. Have a result printed with B as child of A, C as child of B , etc. instead of one flat list
23:55  ezzieyguywuf: if I'm going to write a program that will be used to iteratively solve a problem, involving lots of data points, would python be a good choice as far as computational cost or would I be better off with something lower-level, like C or  FORTRAN ?
23:56  ezzieyguywuf: I'm basically worried about the interpretor overhead.
23:56  _Zappy_: KirkMcDonald, Ya know , Child, Parent tree
23:56  adahlin: ...and the new scipy crashes python. the fun continues...
23:57  raijin: anyone seen this 'symbol get_uint32: referenced symbol not found'
23:57  psykidellic: ezzieyguywuf: numpy/scipy
23:57  _Zappy_: ezzieyguywuf, Prototype it in Python and then try to convert in C to see if you can gain speed.
23:57 --- Yvemath_ is now known as Yvemath
23:57  exarkun: ezzieyguywuf: Run it on PyPy
23:57  habnabit: _Zappy_: Too much effort
23:57  exarkun: ezzieyguywuf: http://speed.pypy.org/
23:58  ezzieyguywuf: psykidellic: I'm familiar with these modules. I don't see how they would be any faster than just python
23:58  exarkun: ezzieyguywuf: Well, because they're highly optimized, for one thing.
23:58  ezzieyguywuf: _Zappy_: I may do that, but my question was more of a general "is there a general accepted answer to this" sort of query
23:58  habnabit: _Zappy_: Also totally the wrong way to optimize anything
23:58  exarkun: ezzieyguywuf: in fact, some numpy APIs are backed by implementations that have been developed and optimized over the last 30 years
23:59  exarkun: ezzieyguywuf: So they're often quite quick.
23:59  habnabit: Profile it and rewrite slow bits in cython
23:59  ezzieyguywuf: exarkun: well, my prog will basically be doing this: assume a=0, solve about 3 or 4 equations to find a again, check calculated a to assumed a, repeat until convergence
23:59  adahlin: ezzieyguywuf, numpy is a good answer. You can use the intel MKL library with it as well. I haven't used it much but cython also looks promising
--- Log closed Tue Oct 19 00:00:01 2010
