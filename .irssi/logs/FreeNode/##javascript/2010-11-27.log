--- Log opened Sat Nov 27 00:05:28 2010
--- Log closed Sat Nov 27 00:10:29 2010
--- Log opened Sat Nov 27 00:10:55 2010
00:10 --- Users 429 nicks [0 ops, 0 halfops, 0 voices, 429 normal]
00:11  Wes-: Arimil: carriage return is 13, 10 is line feed. Depending on your OS, you may not get a 13 when you think you will.
00:11  Arimil: Wes-: Alright, thanks
00:12  Sorella: Wes- ≣ does that run on Node?
00:12  Wes-: Sorella: It's a spidermonkey embedding primarily aimed at systems-type programming. For example, it's trivial to call into POSIX, and we make some really good portability guarantees.
00:12  Sorella: oh, SM
00:12  Wes-: Sorella: No, although if I had a couple of weeks to work I could probably get node running on it.  It's just not a priority right now.
00:12 --- Channel ##javascript was synced in 130 seconds
00:13  Wes-: (web work is actually not our main focus)
00:14  Sorella: I see
00:14  Sorella: your coding style is pretty cute
00:14  Sorella: albeit verbose
00:15  inimino: verbose?
00:15  razass: hey guys is there a way I can use if NOT ie comments to load javascript in other browsers? it doesnt seam to be working for me
00:15  Sorella: inimino ≣ vertically verbose
00:16  inimino: ah, granted
00:16  Sorella: too many lines wasted with noises.
00:16  Pilum: razass: Should be pretty straightforward.
00:16  Wes-: Sorella: strong pascal influence from the late 80s early 90s got me to liking columnar alignment of braces when I moved to C full time.  I never bought K&R style.   I just buy big monitors. :)
00:17  inimino: ...though I don't know if I'd call it verbosity since newlines aren't really words :)
00:17  Sorella: ehe, true
00:17  razass: Pilum: thats what I thought    <!--[if !IE]><script src="js/l1dCYxwoJR.js"></script><![endif]-->    doesnt load in firefox
00:17  razass: remove the conditional comments and it loads
00:18  Sorella: I used to program a lot in OP, and used something between OP and K&R style 'till recently. Then I started programming in Python, read inimino's article on his indentation style and got to something near that instead.
00:19  Sorella: I'm relying more on ASI now too...
00:19  Wes-: Sorella: OP?
00:19  Sorella: Object Pascal
00:19  inimino: Objective Pascal?
00:19  Sorella: never programmed in old Pascal tho
00:19  Wes-: I guess that's something like Turbo Pascal with Turbo Vision?
00:20  Pilum: razass: Well, it's only IE which parses those comments, so what it means is that IE should *not* load it. Other browser would just ignore it (as they should).
00:20  Wes-: Or maybe more like Object-Oriented Turing  (which you've undoubtedly never heard of)
00:20  Sorella: Object Pascal was like my first programming language. I picked it up a bit after learning Basic.
00:20  Sorella: Object Pascal is basically what Delphi is
00:20  inimino: "Object Pascal is an extension of the Pascal language that was developed at Apple Computer by a team led by Larry Tesler in consultation with Niklaus Wirth, the inventor of Pascal. It is descended from an earlier object-oriented version of Pascal called Clascal, which was available on the Lisa computer."
00:21  Wes-: My first programming language was BASIC, on a Timex/Sinclair 1000 in 1982
00:21  razass: Pilum: hmm ok ill have to figure out some kind of workaround
00:21  inimino: http://en.wikipedia.org/wiki/Object_Pascal
00:21  razass: Pilum: thanks
00:21  Wes-: memory was so scarce on that thing that the basic interpreter would parse screen memory when tokenizing - no room for an intermediate buffer
00:22  inimino: heh
00:22 * Pilum nods.
00:22  Wes-: Okay, OP looks pretty much like I thought it would, although the ^ syntax is stpid
00:23  Sorella: ^ is for dereferencing pointers, iirc
00:23  Wes-: Better than what I used to do in turbo pascal though.... for example, calling a method by reference -- take an address of a function, push its argument on the stack, and jump to it with inline assembly
00:23  Sorella: and @ for getting the pointer of an object
00:24  Sorella: oho, wow
00:24  inimino: Pascal with classes, generics, and operator overloading.
00:24  Wes-: It was a pain in the ass, but very educational
00:24  razass: Pilum: in case you were wondering <!--[if !IE]><!--><script src="js/l1dCYxwoJR.js"></script><!--<![endif]-->  IE ignores it but all others parse it as they should :)
00:24  Sorella: Delphi only got generics now. And lambdas too, I guess.
00:25  inimino: I can't think of any language that's added OOP after the fact and hasn't gotten uglier, except maybe CLOS.
00:25  Wes-: inimino: object oriented turing
00:25  inimino: heh
00:25  Wes-: seriously!
00:26  Wes-: If I had infinite time on my hands, I would write an OOT to JS compiler
00:26  Wes-: in JS
00:26  inimino: That's either a joke or a missed Enterprise product opportunity.
00:26  inimino: http://en.wikipedia.org/wiki/Object-Oriented_Turing
00:27  inimino: ...or both
00:27  Wes-: the author was my compilers prof
00:27  inimino: ah
00:27  Wes-: Or, the *actual* author, not the supervisor who gets the credit :P
00:27  inimino: hehe
00:28  inimino: Ric Holt?
00:28  Wes-: Jim Cordy - http://en.wikipedia.org/wiki/James_Cordy
00:28  inimino: ah
00:28  Wes-: Extremely good academic who can actually write code
00:28  inimino: ah, I forgot about the Turing language
00:28  Wes-: His S/SL language, by all rights, should displace lex and yacc
00:29  Wes-: Or, should have at least
00:29  Wes-: The nice thing about S/SL is that you use the same syntax to describe both the lexer and the parser
00:30  inimino: PEGs have that same property
00:30  inimino: or rather, there is no lexer and parser, just one grammar
00:31  mauke: can't you do that with yacc too?
00:31  Wes-: You can do that with S/SL, too - it just depends on how you want to set it up.  You could even do N-stage work if your mind worked that way; basically, the program is perfectly content taking it's own output as input
00:32  Wes-: mauke: It might be possible with bison, but yacc's implementation prevents you from running two parsers in the same program
00:32  Wes-: global symbols and all that
00:32  Wes-: it's like javascript without 'var'!
00:33  Wes-: OTOH, yacc's syntax does not include regular expressions
00:33  inimino: PEGs would support an N-stage approach if you exntended them with primitives for matching some kind of tokens other than characters.
00:33  Wes-: so any lexer would be a giant pain to write
00:34  Wes-: I wonder what my wife put on this pizza.. I was waiting for it to melt, but instead it caught on fire
00:35  Sorella: ...
00:35  Wes-: tastes good, though!
00:35  Sorella: well, that's good then
00:36  Pilum: Pizza en flambe? Heh.
00:50  civixier: Uhm... Im pretty new to javascript. Could someone take a look at the source code on http://civixier.com and tell me why the web browser reloads the page when I click OK in the alert box?
00:51  inimino: civixier ⋱ Because you're using a link for something that's not a link.
00:52  civixier: so I should use the <a></a> inside the divs instead?
00:52 --- Prot is now known as IggyKoopa
00:52 --- IggyKoopa is now known as Prot
00:52  inimino: No, you shouldn't be using <a> anywhere since it's not a link.
00:52  inimino: Instead of <a href=...><div class=button>, write <button> or <input type=button>
00:54  civixier: oooohh, thanks! im gonna go try it out!
00:54  eirikb: Hello. Does anyone use any libraries for 'building' JS?
00:54  inimino: eirikb ⋱ from what?
00:54  eirikb: As in running tests, compiling, bunlding, minifying and such as jQuery does using make
00:55  eirikb: Where as compiling, bundling and minifying is done through Closure
00:55  Sorella: eirikb ≣ I use GPP with Google's closure compiler and waf
00:55  eirikb: Sorella: And you will then run all tests as such as well?
00:56  Sorella: eirikb ≣ I haven't integrated any of the tests yet, since all of them are being run in a browser envinronment.
00:57  eirikb: Functional tests? What about unit?
00:58  Sorella: the unit tests are ran on a browser envinronment, since I'm writing a UI framework, so it's pretty pointless to run them in a command line. But it's not difficult to integrate the tests if you're using Node or something. You just add a new rule to waf.
00:58  eirikb: I'm not using Node
00:59  Sorella: any command line thing
00:59  eirikb: So you use waf as an alternative to make?
00:59  Sorella: but then, if your script does depend on a browser envinronment there's not much you can do
00:59  Sorella: eirikb ≣ yes, since I can extend it with python as much as I like
00:59  eirikb: And I would probably use ant or maven, since I'm most comfortable with that
00:59 * inimino shudders
00:59  eirikb: Although there are no general finished setups?
01:00  eirikb: Sorella: What do you mean? What about JSlint or similar like jQuery use?
01:00  Sorella: ew, JSLint
01:00  eirikb: It does not work?
01:00  inimino: `JSLint
01:00  jsBot: JSLint: Crockford's tool for testing his 'Code Conventions' for Javascript. Overly anal, but a good way to find some annoying IE bugs. http://www.jslint.com/
01:01  inimino: hm
01:01  Sorella: I use Emacs to code, and js2-mode auto-lints it anyways
01:01  eirikb: So what are the alternatives I should use?
01:01  Sorella: it's not as faggy as JSLint tho, so it's okay
01:01  eirikb: What does a editor have to do with testing?
01:01  Wes-: I run mine through a spidermonkey shell with strict options turned on
01:01  Wes-: does a pretty good job
01:01  Wes-: eirikb: emacs is not just an editor, it also includes a kitchen sink
01:02  Sorella: eirikb ≣ well, you can run all your test units from inside Emacs. Actually, you can run the entire thing and version it from inside Emacs
01:02  Sorella: and you can play tetris as you code :3
01:02  Sorella: also from inside Emacs...
01:02  eirikb: Version it? You mea VCS?
01:02  Sorella: I use Mercurial
01:02  Wes-: me too
01:02  Sorella: with HG-Git to push to github
01:02  Wes-: Sorella: that's a good idea
01:03  eirikb: I think I'm fine with my STS
01:03 * Sorella 's git repositories are full of .hgignore files...
01:03  Wes-: I just normally eschew github
01:03  Wes-: (google code has hg)
01:03  eirikb: But you say you run tests from your editor, what framework do you use?
01:03  Sorella: I use Bitbucket. It now has unlimited space and unlimited private repos as well
01:04  Sorella: I use the common bash/shell
01:04  Sorella: xterm
01:04  eirikb: As testing framework? I don't understand
01:04  Sorella: there's a mode for running automate JS tests for Emacs tho
01:05  Sorella: oh, I use an internal assert library
01:05  eirikb: So nothing I can use?
01:05  Sorella: I used to use Jasmine, but it was too verbose and got on my nerves
01:05  eirikb: And your bulid system is internal and custom made as well?
01:05  Sorella: sorta
01:05  eirikb: And by build I'm referring to JS only
01:05  Sorella: since both, the assert lib and the waf scripts are on github
01:06  eirikb: Can I have a look at the project?
01:06  Sorella: The code in the assert lib is terrible tho. I'm going to rewrite it using Caterwaul to get some nice things using macros.
01:06  eirikb: macros in code?
01:07  eirikb: Or macros in the tests
01:07  Sorella: eirikb ≣ https://github.com/killdream/Blueprint.js/blob/master/tests/lib/assert.js
01:07  Sorella: in the code
01:07  civixier: inimino: thanks, it helped alot!
01:07  Sorella: Caterwaul is a lib to bring lispey macros to JavaScript, by parsing your code and rewriting it
01:08  inimino: civixier ⋱ great, you're welcome!
01:08  eirikb: Sorella: I don't want to append to JS in any way, if I wanted that I'd stick to GWT
01:09  systemfault: Sorella: You written that?
01:09  Sorella: eirikb ≣ I'm going to use it just to provide nicer debugging messages, since as of now you have to provide the assert function messages for it to be helpful
01:09  Sorella: systemfault ≣ yeah
01:09  systemfault: :)
01:09  Sorella: with Caterwaul you could just do assert(( x == y )), and it would fill in the messages for you :3
01:09  eirikb: Thanks for you help
01:10  Sorella: yer welcome
01:10  systemfault: Sorella: So your name is Jasmine? :P
01:10  inimino: Caterwaul is the one that uses JavaScript syntax, right?
01:10  Sorella: systemfault ≣ eh? No :3
01:10  eirikb: Do you have any suggestions for build tools as well? Or is copying jQuery a good enough approach?
01:10  systemfault: Ah :P
01:10 * inimino suggests make
01:10  eirikb: So you suggest jQuery way
01:10  Sorella: inimino ≣ hm, what do you mean?
01:11 * Sorella never used make
01:11  systemfault: Well... make with javascript..
01:11  systemfault: I use it with C++ :P
01:11  inimino: Sorella ⋱ I mean, it tries to be compatible with JavaScript syntax so it can be implemented as a library, instead of having it's own syntax like CoffeeScript
01:11  Sorella: oh, yeah, that one
01:11  eirikb: I use it a lot, especially for my kernel. But it's far from impressive. I'd rather use ant if I could
01:12  inimino: I like Ant even less than make.
01:12  systemfault: eirikb: I hate XML.
01:12  Sorella: I like waf because I can script it in Python.
01:12  systemfault: So ant...
01:12  eirikb: systemfault: Then you'd love Make, it's not XML, but it likes to look like it anyway
01:12  inimino: I don't tend to write Java or XML by choice ^_^
01:13  systemfault: eirikb: I use cmake for my c++ programs.
01:14  Gregor: "Make, it's not XML, but it likes to look like it anyway" ... in no way do Makefiles look like XML ...
01:14  eirikb: Well, it seems you guys would recommend me to mimic jQuery make project?
01:15  eirikb: Gregor: Maybe not, but it's not any other common markup either
01:15  Gregor: It's ... not a markup ... at all.
01:15  eirikb: k
01:15  eirikb: Let's leave it at that
01:15  eirikb: Lets*
01:16  inimino: eirikb ⋱ I haven't looked at jQuery's build system, but I'd suggest using make unless you have strong reasons to do otherwise.
01:17  eirikb: A reason would be existing build framework, in make or whatever
01:17  Sorella: well, any make-ish system would work really. It's a matter of preference imo.
01:19  Sorella: I love how comp.lang.javascript is always full of spam...
01:23  eirikb: It seems jQuery is the best template I can find. Thanks for you help
01:25  eirikb: Hehe, jQuery also have both ant and rake support
01:25  eirikb: But I could just stay to make, since you guys suggest it
01:29  Wes-: c'mon
01:29  Wes-: XML and make are both written in text editors
01:29  Wes-: with letters
01:29  Wes-: I just wish I could figure out how to compile this cookie recipe
--- Log closed Sat Nov 27 16:37:05 2010
--- Log opened Sat Nov 27 16:37:26 2010
16:37 --- Users 416 nicks [0 ops, 0 halfops, 0 voices, 416 normal]
16:37 --- Server: [leguin.freenode.net] [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
16:37  Maxdamantus: lol
16:37  Maxdamantus: js> /$^a/m.test("\na");
16:37  gbot2: Maxdamantus: false
16:37  Maxdamantus: Hm.
16:38  Maxdamantus: js> /$^\na/m.test("\na");
16:38  gbot2: Maxdamantus: true
16:38  Maxdamantus: This is silly.
16:38  TheSheep: positive
16:39 --- Channel ##javascript was synced in 121 seconds
16:40  AzaToth: Maxdamantus: it's because JS doesn't have the 's' flag
16:40  Maxdamantus: js> new RegExp("").toSource()
16:40  gbot2: Maxdamantus: "/(?:)/"
16:41  AzaToth: js> /d/s
16:41  gbot2: AzaToth: Error: SyntaxError: invalid regular expression flag s:  /d/s  ...^
16:41  AzaToth: v8bot: /d/s
16:41  v8bot: AzaToth: Use v8: <code> to evaluate code or "`v commands" for a list of v8bot commands.
16:41  AzaToth: v8: /d/s
16:41  v8bot: AzaToth: /d/
16:41  AzaToth: v8: /d/smg
16:41  v8bot: AzaToth: /d/gm
17:22  binni: Why can't I check if an array is in an array? a = [[1,1]]; [1,1] in a; a.indexOf([1,1]); both return false?
17:23 --- joo|afk is now known as joo
17:23  binni: or -1
17:24  binni: uhm, topic says I should say help also
17:24  Pilum: Because indexOf checks for values not objects.
17:25  eboyjr: [1,1] is different from [1,1]
17:26  eboyjr: When you compare objects, they compare if they refer to the same object in memory, but primitive compare if they are the same value
17:27  binni: eboyjr: so [1,1] is in another place in memory then [1,1]?
17:27  binni: okay
17:27  eboyjr: yes
17:27  Pilum: js> [1,1] == [1,1]
17:27  gbot2: Pilum: false
17:27  eboyjr: v8> new Boolean(true) == new Boolean(true)
17:27  frodenius: js> 23 in [21,22,23]
17:27  v8bot: eboyjr: false
17:27  gbot2: frodenius: false
17:29  Teratogen: js> [1,1]===[1,1]
17:29  gbot2: Teratogen: false
17:30  htrejh: hi
17:31  Pilum: Lo
17:31  htrejh: when using setTimeOut() the browser resfresh icon keeps spinning and i can see a loading cursor
17:31  htrejh: is that normal?
17:31  Pilum: Depends on what you're doing.
17:31  eboyjr: htrejh: paste your code
17:33  htrejh: here it is: http://pastebin.com/K5GXvQZq
17:33  buubot: htrejh:  The 25 line paste K5GXvQZq has been copied to http://nopaste.snit.ch/26205  .
17:33  htrejh: in fact i want to refresh a part of the page at an interval
17:34  Pilum: There's your error right there heh.
17:34  Pilum: setTimeout(loadOnAirContent(), data * 1000); should be setTimeout(loadOnAirContent, data * 1000);
17:34  Pilum: () calls the function instantly.
17:34  htrejh: ow yea i did that first
17:34  htrejh: ah
17:34  htrejh: but iirc it didn't work at all anymore
17:36  Pilum: I'm afraid I'm not familiar enough with whatever you're using to debug further.
17:36  htrejh: Pilum: well the content should be reloaded
17:37  htrejh: and that doesn't happen
17:37  noobie25: hello, i'm new to javascript and was wondering how i can pass my user variables stored in a database....  do i need php for this?
17:37  Pilum: As I said, I'm not familiar enough with whatever library you're using to debug further. Maybe you should try their channel? Most of them have their own channels here.
17:38  TheSheep: noobie25: where is the database?
17:38  htrejh: ok thanks
17:38  noobie25: TheSheep: on the localhost
17:38  TheSheep: noobie25: and where is the user?
17:38  Pilum: noobie25: If it's in a normal database then you'd need some sort of serverside language, yes.
17:39  TheSheep: Pilum: normal?
17:39  noobie25: TheSheep: user can be anywhere with access to internet
17:39  htrejh: Pilum: in fact it worked, thank you very much
17:39  TheSheep: noobie25: then you need some program on the server side, it can be written in php, but also python, java, bash, perl -- even javascript
17:39  Pilum: As in, rdbms-type. :-)
17:40  TheSheep: Pilum: ah, right, coachdb can serve jsons :)
17:40  Sorella: Brainfuck for server side language~
17:40  TheSheep: Sorella: doable
17:40  noobie25: Pilum: how would i pass say a variable 'a' to server side......   if the variable 'a' is in a file a.html
17:40  Pilum: noobie25: Same way one always passes stuff to the server. By means of an HTTP request.
17:41  Sorella: using bash, yeah
17:41  TheSheep: Sorella: I used to write some cgi scripts in bash
17:41  TheSheep: Sorella: I think someone even wrote a wiki
17:42  Pilum: Sorella: Let's all write LOLCODE. :-)
17:42  Sorella: ehe, interesting
17:42  Sorella: :DDD
17:42  TheSheep: Sorella: database access is a little crude though ;)
17:42  noobie25: Pilum: could i get a very simple example using php?
17:42  Sorella: someone did write a LOLCode reddit clone iirc
17:42 * Sorella doesn't PHP
17:42  Pilum: noobie25: You probably can, over in #php
17:42  webben: noobie25: http://www.php.net/manual/en/tutorial.forms.php
17:43  webben: noobie25: Note that only covers one aspect of HTTP messaging.
17:43  webben: noobie25: The spec's here: http://www.w3.org/Protocols/rfc2616/rfc2616.html
17:44  noobie25: hmm.... if i use a form, i think i might understand how to pass variables using POST/get variables.   Is this Ajax i need to pass variables without a screen refresh?
17:44  webben: noobie25: Browsers provide interfaces for you to generate HTTP messages using most of that spec (and various extensions), and PHP provides interfaces (not always obvious) for you to gain access to full message details.
17:45  webben: noobie25: Mmmm... Ajax is too much of a buzzword for me to know what you think it means in order to answer the question.
17:45  webben: noobie25: There are series of interfaces that can be used for making HTTP requests without a full load of the host page.
17:45  Pilum: noobie25: XHR is one of those.
17:45  Pilum: And a central part to most definitions of the buzzword "ajax"
17:46  Pilum: `xhr
17:46  jsBot: xhr: http://developer.mozilla.org/en/docs/XMLHttpRequest , http://developer.apple.com/internet/webcontent/xmlhttpreq.html , www.jibbering.com/2002/4/httprequest.html , www.w3.org/TR/XMLHttpRequest/
17:46  noobie25: i'd just like to store a variable i created in javascript without needing a screen refresh.
17:47  Sorella: you can make a post request using an iFrame
17:47  Sorella: it won't refresh the main page, and you can store it on the server
17:47  webben: noobie25: Is the domain that needs to store the variable the same as the domain that serves the host page?
17:47  Sorella: or you can use XHR
17:47  noobie25: Sorella: could you point me to an easy tutorial on the web using iFrame?
17:47  Sorella: or some other thingies
17:47  noobie25: webben: yes
17:48  webben: noobie25: Then I'd generally suggest using XHR. You do need to understand the basics of HTTP messages in order to do so however.
17:49  webben: noobie25: http://www.jmarshall.com/easy/http/ is a reasonable introduction to HTTP messages.
17:49  webben: noobie25: http://developer.apple.com/internet/webcontent/xmlhttpreq.html for XHR.
17:50  noobie25: webben: i see.... XHR can receive the variable i pass to it and i can then have it store inot the database.
17:50  noobie25: *inot = into
17:50  webben: basically
17:50  webben: from the server's point of view, it's just another HTTP message.
17:50  adamDavis: web programming is so funky :)
17:50  Pilum: XHR isn't the receiving part. It's the communication-bit. I.e. the transmitter. But yes, basically.
17:51  noobie25: so...  a.html file does a XHR to say....a.php , where a.php can then store it into the database.
17:51  Pilum: Yep.
17:51  noobie25: is this ajax...?
17:51  Pilum: Not by the original definition.
17:52  Pilum: But some would say yes.
17:54  noobie25: i would need then, i think some form of authentication oto prevent users just spamming httprequests.
17:54  noobie25: so i would probably have to send in additional information, i suppose, like user crediential after the httpRequest.
17:54  Pilum: Wouldn't work.
17:54  Pilum: You can't do security via JS.
17:55  Sorella: why? Just use the server-side session
17:55  webben: noobie25: No difference between XHR and non-XHR in that respect of "users just spamming".
17:55  Pilum: As webben says.
17:56  webben: noobie25: The server must check each received message is valid (makes sense) and authorised (allowed to do what it says).
17:56  noobie25: how about if i refine my statement:  spamming can't be prevented, but i can control data persistent if the user is authorized to save data into the db.
17:56  noobie25: webben: thanks :)
17:57  webben: noobie25: The details of validation and authority-checking are very application-specific.
17:58  webben: noobie25: e.g. could include things like validating syntax, checking for authentication, checking user roles, rate limiting, sanitization of input, etc etc
17:58  webben: And (as usual) there are multiple approaches to doing those things.
17:59  noobie25: thank you.
17:59  noobie25: i have trouble loggin in to my php channel.   i had created an account yesterday, but it won't log in me ...
18:00  noobie25: do i have to recreate another account every time?
18:00  webben: noobie25: No. You just need to succeed in logging in.
18:00  Sorella: lol
18:01  webben: I assume freenode has procedures for password recovery etc. - I've never needed them myself.
18:01  noobie25: webben: what is the login command?
18:02  Sorella: /msg nickserv help identify
18:02  Sorella: will give you some points, maybe
18:04  noobie25: thanks...i'll try that
--- Log closed Sat Nov 27 18:16:08 2010
--- Log opened Sat Nov 27 18:16:33 2010
18:16 --- Users 424 nicks [0 ops, 0 halfops, 0 voices, 424 normal]
18:18 --- Channel ##javascript was synced in 126 seconds
18:37  Gregor: `essence
18:37  Gregor: Erm, that's not the name of it ...
18:38  Sorella: `harmony
18:38  Gregor: `eloquent
18:38  jsBot: eloquent: Eloquent JavaScript is a comprehensive introductory Web-based book with examples and a built-in interpreter.  http://eloquentjavascript.net/index.html
18:38  Sorella: what's ``essence" tho?
18:38  Sorella: oh
18:38  Gregor: That's what I was looking for :P
18:38  Gregor: I knew it was "E* JavaScript"
18:38  Sorella: :2
18:38  Sorella: :3*
18:38  Gregor: I was thinking of an unrelated research paper though :P
--- Log closed Sat Nov 27 18:46:09 2010
