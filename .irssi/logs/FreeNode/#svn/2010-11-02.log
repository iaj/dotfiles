--- Log opened Tue Nov 02 14:05:31 2010
14:05 --- Users 143 nicks [7 ops, 0 halfops, 0 voices, 136 normal]
14:05  iaj: lo there
14:05 --- Channel #svn was synced in 4 seconds
14:05  iaj: what lecture can you guys recommen for getting into the svn usage/ commands/
14:09 @stsp_: iaj, first 2 chapters of svnbook.org
14:09  iaj: stsp_: thanks
14:20  iaj: hmm when Im on a local directory and want to force to discard all changes and just use the latest version from the online repo - ain't svn revert the way to go?
14:22 --- ChanServ sets modes [#svn +o stsp_]
14:25 --- ChanServ sets modes [#svn +o DannyB]
14:26  lukosanthropos: Is it possible to setup subversion to leave any commits done to trunk as pending until they are authorised
14:26  lukosanthropos: and if it is, how do you do it, I'm guessing pre-commit hook
14:27 @stsp_: lukosanthropos, either send patches (svn diff output) around for review, or have people commit to a branch which is merged to trunk after review
14:27 @stsp_: a pre-commit hook can only reject commits based on the commit's content (e.g. a missing 'review by' marker in the  log message)
14:27  lukosanthropos: Thanks stsp
14:34  Hydrant_: hello all... I wanted to ask for some advice... I have a repository that has the traditional tags/branches/trunk layout, but there are going to be per-project customizations for specific projects...
14:34  Hydrant_: in particular, I have a program that I will be using to analyze customer supplied information
14:35  Hydrant_: and I want to keep track of everything in SVN... so what I'm currently thinking is to branch my project for each customer project, put all the associated data in one place
14:35  Hydrant_: does that sound reasonable?  What would be the best way to accomplish this given that it doesn't fit into the trunk/tags/branches layout?
14:59  ultramage: so you have /trunk/project1, /trunk/project2, /trunk/project3?
14:59  ultramage: or /project1/trunk|tags|branches   /project2/trunk|tags|branches
15:00  ultramage: in the latter case, per-project per-customer changes recorded as branches of the specific project would be the most sane approach
15:00  ultramage: in my opinion :)
15:03  saml: can I use external command for `svn status` ?
15:09 --- Tobias| is now known as all
15:09 --- all is now known as Guest94387
15:11  IcePic: saml: what do you mean?
15:12  ultramage: what's an external command?
15:25  Hydrant_: ultramage: thx for the response... right now I don't  have anything yet, so I wanted to ask some advice before I make a permanent layout
15:25  Hydrant_: in your example project is the larger project, like KDE, OpenOffice and so on right
15:26  Hydrant_: or the customer project
15:26  ultramage: not sure :D
15:26  Hydrant_: okay... so let's pretend I'm making a custom KDE for lots of people
15:26  ultramage: how would you be making it?
15:26  Hydrant_: by stealing KDE and making some small changes... so a branch of my trunk, with small changes made
15:26  ultramage: grab a specific kde tag, make a branch based on it, and then start editing?
15:27  Hydrant_: in reality, the changes are going to be miniscule
15:27  Hydrant_: yes, that's right, I would always want a tag
15:27  ultramage: well, I wouldn't mind having vendor branches
15:27  Hydrant_: so let's say you want KDE... I make branches/ultramage/KDE ?
15:27  ultramage: of if it was a one-time edit thing, I'd even consider tagging it instead
15:27  ultramage: I don't follow the standard conventions
15:27  ultramage: no.
15:28  ultramage: I'd have /KDE/trunk|branches|tags
15:28  Hydrant_: okay
15:28  ultramage: svn copy /KDE/tags/10.5.2 /KDE/branches/umage-custom-kde
15:28  Hydrant_: and then customer-sspecifics into the branches
15:28  Hydrant_: okay
15:28  ultramage: each project is an independent entity, so putting everything under one huge trunk directory wouldn't make much sense to me
15:29  Hydrant_: now I have some auxillary information that has to go there too... like you have your own icons or something
15:29  ultramage: the documentation, or some insight on google might have info on how to do this 'the standard way'
15:29  Hydrant_: but branches make the most sense
15:29  Hydrant_: I'm not sure if this is something a lot of others do... I guess they would
15:29  ultramage: well, I treat tags as something that's made once and then abandoned until the end of time
15:30  ultramage: if you'd never do any further edits...
15:30  ultramage: although, from a semantic point of view, tags are supposed to 'tag' a certain revision, giving it a name
15:30  Hydrant_: you do get security updates and stuff to tags though
15:30  ultramage: so hm.
15:30  ultramage: oh well
15:31  ultramage: I only worked on one big project, and the development was so rapid that not using trunk was not an option
15:32  ultramage: we only had trunk and one 'stable' branch and nothing more
15:32  ultramage: made using a checkout of the entire repo much easier :P
15:32  ultramage: if tags get edited later with patches, I myself wouldn't use tags, but branches instead
15:33  ultramage: I'd only use tags for releases... "if you check out tag 8.0.5, it's the same as if you had downloaded the 8.0.5 zip file from our website"
15:34  Hydrant_: right... sometimes you have a critical patch though
15:34  Hydrant_: like "oops... that will delete your computer"
15:34  Hydrant_: or whatever
15:34  Hydrant_: I have yet to have software so stable I make a tag tho ;-)
15:34  ultramage: well then, make a new release and publish a security advisory suggesting to update
15:34  ultramage: or use a branch instead
15:35  ultramage: if it went like this, then tags wouldn't have to be real things - they could just be symlinks to a certain revision...
15:35  ultramage: it sucks when checking out / ... if the project has 500 tags then you get 500 copies of the project
15:35  ultramage: (I try not to do that =P)
15:40  antlong: hello, i have a lot of changes on a local copy that is older than trunk. if i update without my changes committed to trunk, will they be lost?
15:41  Hydrant_: ultramage: thanks for the advice... let me google around and see what other people have done
15:41  ultramage: antlong: no, you'll go into a merging process
15:41  antlong: ultramage: ok cool ty. just want to be safe :)
15:41  ultramage: svn will attempt to merge the changes, but in places that conflict, you will be asked to manually intervene
15:41  ultramage: if doing it for the first time, a good paranoia step is to make a copy of your entire svn dir somewhere
15:42  ultramage: or run svn diff > mydiff.diff to record your changes
15:43  antlong: ty, ultramage went good
15:43  ultramage: you could run it before the update, then after the update, and then visually compare the two to see if all of the planned changes still look like they're supposed to look (or if some are suddenly missing)
15:43  ultramage: oh, nice
15:43  ultramage: if the changes aren't to the same code, svn can do it automatically
15:44  ultramage: you should make sure your code still compiles though :)
15:44  ultramage: if it's a project I'm working on, I try to at least take a peek at every changeset that gets comitted
15:44  ultramage: (trac <3)
16:03  infid: should you only do an svn switch if your working copy has no local modifications?
16:04  infid: i want to be able to switch between branch and trunk even if i havent committed everything yet because they're still works i progress
16:04  infid: *in progress
16:04 --- ChanServ sets modes [#svn +o jeremyw]
16:05 @peterS: infid: no, 'svn switch' preserves your local mods exactly like 'svn update' does.  you can in fact think of 'svn update' as a special case of 'svn switch' that only moves you in "time", not in "space"
16:06 @peterS: of course, just like 'update', 'switch' in a wc with local mods can produce conflicts
16:08  infid: so i should only switch to my branch if i'm working on different files in my branch than i was on trunk?
16:08  infid: if i leave local mods in trunk before i switch
16:08 @peterS: think of switch as just like update, except that you can move to a different branch as well as a different (usually HEAD) revision
16:08  infid: i guess in this case i'd be easier to just checkout a branch working copy to a different directory
16:09 @peterS: sometimes that's easier, yeah, because then you don't have to worry about switching back.
16:09  infid: well easier in the sense that i can leave local mods on both and move back and forth and not commit on either until i'm finished
16:10 @peterS: that too
16:10 @peterS: in fact I don't limit myself to a single working copy of a single branch, either.  often enough I am doing multiple things in parallel so I make a copy of a branch I'm working on
16:11 @peterS: (just a filesystem copy, no need to re-check-out.  if I want to throw away my changes in a given copy of a branch, I 'svn revert -R .')
16:13  infid: main reason i wanted to svn switch is having a single working copy would make it so i dont have to change any environment/htaccess stuff to point to the branch working copy
16:14  infid: sometimes i dont have to depending on what it is, but in this case it's a library that other things use that needs to have the same name while being a working copy
16:34  infid: peterS: how do you get your copies of you branches to become one branch so you can merge it back to trunk?
16:34 --- ChanServ sets modes [#svn +o dannas]
16:43 @peterS: infid: I commit (or throw away) the stuff that's in each one.  a branch that has no local changes doesn't matter
17:06  rdg: I'm a noob, and I'm doing something wrong. I'm in my repo/branches/RB-1.0 directory.. and I'm trying to do  svn merge -r47:HEAD http://util/repo/trunk/   and it's not doing anything or outputting anything
17:06  rdg: actually.. I'm in  repo/branches/package-RB-1.0 trying to merg to repo/trunk/package
17:08  sacho: rdg: you merge something *to* your working copy
17:08  sacho: not from it
17:09  sacho: so if you want to make changes to repo/trunk/package, you need a working copy of that
17:09  rdg: so I need to be in my trunk DIR and change my URL to my branch
17:09  sacho: The emphasis was a bit retarded. I meant "*to your working copy*"
17:09  sacho: no
17:09  sacho: what are you trying to do?
17:09  rdg: not fuck this up :-)
17:09  sacho: get the changes from your branch into trunk?
17:09  rdg: yes
17:10  sacho: which svn version are you using?
17:10  rdg: I already tagged the branch, want to merge it to trunk and delete the branch
17:10  rdg: client or server
17:10  rdg: well, 1.3.x
17:10  sacho: server
17:10  rdg: err wait
17:10  sacho: wow, ancient
17:10  rdg: yea I'm lying
17:10  rdg: 1.4.2
17:11  rdg: which isn't any better seeing that 1.6 is in the topic.. but it's the default for this version of RHEL
17:11  sacho: well, you'll want to merge into a working copy of trunk
17:11  sacho: now what you want to merge is a different story
17:12  rdg: I hate to say this, but I'm not following
17:12  rdg: do I need to be in my branch directory or my trunk directory
17:12  sacho: well, "merging" is just adding changes into a working copy
17:12  sacho: you need to tell svn what changes you want to add, what to "merge"
17:12  sacho: -r47:HEAD http://util/repo/trunk/ <-- that's the definition of your changes
17:13  rdg: so that actually needs to be branches/
17:13  sacho: that actually means "merge the changes that happened in trunk from r47 to HEAD into my working copy"
17:13  rdg: is "working copy" the local directory
17:13  rdg: I tihnk part of the problem here is I f'd up by never using svnswitch
17:14  sacho: working copy is the svn checkout you are working in, yes
17:14  rdg: I just have my entire repo checked out (tags/ branches/ trunk/
17:14  sacho: I don't think that's a problem
17:14  sacho: anyway
17:15  sacho: what you probably want is to get the difference from trunk to branch(that is, the changes from the current trunk to your branch) -> those would be the new things in your branch
17:15  sacho: you get those with a 2-url merge
17:15  sacho: svn merge url-1 url-2
17:15  rdg: I want to go from branch to trunk
17:15  rdg: the branch is done
17:15  sacho: yes
17:15  rdg: tagged for production and deployed
17:15  sacho: but the way difference/changes work
17:16  sacho: is "the changes from point a to point b" means "what changed in b compared to a"
17:16  rdg: sorry, when you say "get the changes from trunk to branch", I feel like you're going the wrong way
17:16  sacho: it means "what is different in branch compared to trunk"
17:16  sacho: anyway
17:17  sacho: svn merge http://util/repo/trunk http://util/repo/branches/...etc is probably what you want
17:17  sacho: done in a trunk working copy
17:19  Mr_Grim: hey
17:19  Mr_Grim: i am puzzled by something
17:20  sacho: rdg: this might help http://svnbook.red-bean.com/en/1.4/svn.branchmerge.html
17:20 --- ChanServ sets modes [#svn +o jeremyw]
17:21  Mr_Grim: if i do svn merge https://foourl.com/svn/branches/branch1 https://foourl.com/svn/trunk . WHERE . is the current directory of the LATEST trunk. SVN appears to MERGE my files but when i goto SEE the files that have been copied i dont see anything
17:21  Mr_Grim: what gives?
17:22  Mr_Grim: i seee a whole bunch of files listed with C but they simply are not there
17:22  Mr_Grim: i would assume C is for conflicted
17:24  sacho: there's no files there at all?
17:25  sacho: getting that many conflicts sounds like a problem with the merge. :)
17:26  Mr_Grim: yes
17:26  Mr_Grim: indeed
17:27  Mr_Grim: there must be a problem
17:27  Mr_Grim: look
17:27  Mr_Grim: i have a trunk
17:27  Mr_Grim: and i have a branch/xbrachname
17:27  Mr_Grim: all i want to do is merge branch/xbranchname with the trunk
17:27  Mr_Grim: it cannot be that hard
17:27  rdg: hahaa. must be that time of day.
17:27  Mr_Grim: i did later on manually create a trunk folder and a branch folder within the repository
17:27  Mr_Grim: the idiot who setup the project before didnt do it right
17:28  Mr_Grim: but anyway
17:28  sacho: well, those aren't necessarily needed
17:28  Mr_Grim: i added more files and changed a few things in the branch
17:28  sacho: perhaps you want to svn merge trunk branch .
17:29  Mkop: oh crud. I just "svn up"ed my old working copy with a new client, and now subclipse isn't happy. Can I do an svn disconnect and reconnect or something (using the old client) to get the working copy back to the old version?
17:30  Mr_Grim: merge the trunk with the branch?
17:30  Mr_Grim: okay
17:30  rdg: yea, you have to think about it backwards
17:31  rdg: at least, that's what I'm learning
17:31  Mr_Grim: but i need to be working in my trunk folder
17:31  Mr_Grim: not my branch folder
17:31  Mr_Grim: i need to go back to working in trunk
17:31  rdg: yea
17:32  rdg: You want to merge branch to trunk
17:32  rdg: but, you have to think about it backwards when doing the commands
17:32  Mr_Grim: okay
17:32  Mr_Grim: ill try something in a sec
17:32  Mr_Grim: for now
17:32  Mr_Grim: i must eat
17:32  rdg: in the command you issued that caused all of the conflicts
17:32  Mr_Grim: im sooo hungry
17:32  rdg: just switch the URLS
17:32  Mr_Grim: i will do that
17:32  Mr_Grim: brb
17:41 --- ChanServ sets modes [#svn +o Bert]
17:42  sacho: rdg: it has to do with the way diff works
17:42  sacho: rdg: you pass diff two arguments, arg1 and arg2, and it calculates the "differences" between them, that is, what is changed in arg2 compared to arg1
17:43  sacho: rdg: that's kind of what you do with svn merge, you're saying "get the differences between arg1 and arg2, and merge them into my working copy"
17:44  rdg: where arg1 is the newer
17:45  rdg: correct?
--- Log closed Wed Nov 03 09:20:57 2010
