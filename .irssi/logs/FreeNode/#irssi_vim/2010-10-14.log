--- Log opened Thu Oct 14 00:00:06 2010
02:31 --- estragib_ is now known as estragib
--- Log closed Thu Oct 14 08:39:21 2010
--- Log opened Thu Oct 14 09:03:12 2010
09:03 --- Users 7 nicks [2 ops, 0 halfops, 0 voices, 5 normal]
09:04 --- Channel #irssi_vim was synced in 90 seconds
--- Log closed Thu Oct 14 09:18:53 2010
--- Log opened Thu Oct 14 09:57:36 2010
09:57 --- Users 7 nicks [2 ops, 0 halfops, 0 voices, 5 normal]
09:58 --- Channel #irssi_vim was synced in 82 seconds
10:59 --- kornbluth.freenode.net sets modes [#irssi_vim +o shabble]
--- Log closed Thu Oct 14 12:36:32 2010
--- Log opened Thu Oct 14 12:41:55 2010
12:41 --- Users 7 nicks [2 ops, 0 halfops, 0 voices, 5 normal]
12:43 --- Channel #irssi_vim was synced in 84 seconds
--- Log closed Thu Oct 14 12:54:41 2010
--- Log opened Thu Oct 14 12:55:14 2010
12:55 --- Users 7 nicks [2 ops, 0 halfops, 0 voices, 5 normal]
12:56 --- Channel #irssi_vim was synced in 89 seconds
16:21 @rudi_s: Hi all. Sorry for the late reply, my ISP had a little fun with my internet connection ...
16:21 @rudi_s: Reading scrollback right now ..
16:21 @rudi_s: shabble: Yeah, using :source sounds good to me.
16:22 @rudi_s: But I think we should throw an error when mapping, not when calling, as it's easier to handle (and we can separate missing scripts from other internal problems).
--- Log closed Thu Oct 14 16:32:12 2010
--- Log opened Thu Oct 14 16:47:36 2010
16:47 --- Users 7 nicks [2 ops, 0 halfops, 0 voices, 5 normal]
16:49 --- Channel #irssi_vim was synced in 94 seconds
16:59 @rudi_s: estragib: Hey, I'm back (Internet working again ..). Did you find any more bugs to fix ;-)
17:00  estragib: rudi_s: not one... :'(
17:00 @rudi_s: :-/
17:00 @rudi_s: I'm sure you'll find more, it can't be perfect yet ;-)
17:01  tmr: Lets hope so! Err, wait..
17:02  estragib: rudi_s: i'll try to find more of those buggers. :) anyway, i do have a somewhat flattering question/request instead. some way to start every line in vicmd by default?
17:02 @rudi_s: Hehe. ;-)
17:03 @rudi_s: estragib: Not yet, but I think an option shouldn't be a problem. I'll add it tonight.
17:04 @rudi_s: shabble: We need some more options (see estragib's requst), should we implement them as irssi options or add a vim_mode ":set" command, like in vim?
17:08  estragib: rudi_s: thanks!
17:08 @rudi_s: np
17:17 @rudi_s: shabble: Any thoughts about the scripting thing? Should we use your script or the Safe module?
17:28 @shabble: rudi_s: hey, good to see you back :)
17:29 @shabble: I've been thinking about it, and safe is probably the way to go
17:29 @shabble: since it allows a bit of code sharing within the same script, otherwise all the functions are isolated from each other
17:29 @shabble: I haven't actually had chance to put it together though, been pretty busy with other things
17:31 @shabble: re: options, I think having them as irssi options, but making :set modify irssi_setting_foo("vim_mode_$name") seems like a nice addition
17:31 @shabble: we'd have to keep a list somewhere of hteir type though, to replace _foo
17:32 @rudi_s: ;-)
17:32 @shabble: or maybe :set should be a general interface to /set?
17:33 @rudi_s: shabble: That's a good idea, I'll add the :set command later.
17:33 @rudi_s: Hm, or that. I'm not sure. I think :set only for vim_mode is a little more natural (and prevents problems when storing the options in vim_moderc). What do you think.
17:33 @shabble: maybe a ;setlist too that shows the possible vim_mode_* settings
17:34 @shabble: yeah, let's go with vimmode stuff only
17:34 @rudi_s: shabble: Would you mind if I try to add script support? I've some free time at the moment.
17:34 @rudi_s: shabble: Sounds good to me.
17:34 @shabble: rudi_s: sure, go right ahead.
17:35 @rudi_s: shabble: Couldn't we use just :set for this? It's not really 100% like in Vim, but as we only have a few options, it should be fine.
17:35 @rudi_s: Great, will try today in the evening.
17:35 @shabble: :set\n shows options, :set foo bar does stuff?
17:37 @shabble: on a different note, can you remind me what the reason for the 1000ms delay for imaps is?
17:38 @rudi_s: shabble: Yep, that's what I thought.
17:38 @shabble: yeah, that sounds good (set)
17:38 @rudi_s: shabble: Great, will add it.
17:38 @rudi_s: shabble: To allow entering j if jj is mapped to esc.
17:39 @rudi_s: Same as it works for command mode mappings if you map g and gg for example.
17:39 @shabble: ok
17:39 @shabble: I wonder if the timeout shoudl be an option? 1s seems a bit too long imo
17:39 @rudi_s: The only problem is that Ctrl-R shouldn't have a timeout. But it'll take a while until I rewrite insert-modes, I'm a little afraid to do it - will definately break something ;-)
17:39  iaj: 1s is way too long yeah :-)
17:40 @rudi_s: shabble: Sure, it's the Vim default so I thought it's fine. But an option is fine.
17:40 @rudi_s: Just 'timeoutlen' or do we need the other timeout options as well?
17:40 @shabble: yeah, it was C-r that is hte issue, for history_search :)
17:40 @rudi_s: Oh, ok.
17:41 @shabble: there's only 2 timeouts I can think of, the esc detection, and those ones
17:41 @shabble: giv em a setting each, I'd say
17:42 @shabble: (cached in a variable, because we use them for every keystroke)
17:42 @shabble: also, I think we can refactor flush_input_buffer and handle_input_buffer to the same function
17:42 @rudi_s: shabble: Maybe a third for insert mode? Because we have three timeouts esc, insert-mode and command-mode.
17:43 @shabble: it seems a bit silly to have 2 funcs with 90% overlap
17:43 @rudi_s: shabble: Yeah, that's true. Good idea.
17:43 @shabble: yep, 3 timeouts seems sensible
17:44 @rudi_s: shabble: Ok, good. 3 settings it is.
17:45 @shabble: if you're going to handle scripting, I think I'll go back to trying to make visual mode work when I have some time
17:45 @shabble: uberprompt should make it possible now
17:46 @rudi_s: That would be great ;-) and we need replace mode as well.
17:46 @rudi_s: (I have a local branch for replace mode, but it's not working yet, will try to add it soon as it's much easier then visual mode.)
17:46 @shabble: ok
17:47 @shabble: I'll try to make a general inputline overlay so we can do all sorts of stuff
17:47 @shabble: I hav a test script somewhere that's doing colour highlighting of words for a spelling corrector :)
18:00 @rudi_s: Nice ;-)
18:13  estragib: i hope my quipping in again doesn't get on anyone's nerves, but you said you wanted to be as vimlike as possible. as to the three timeouts, are you aware of how vim handles this?
18:16 @shabble: I'm not, personally.
18:16 @shabble: rudi_s mentioned the 1s imap delay, do you have any more info?
18:16  estragib: great, otherwise i'd have wasted my time on the following writeup :)
18:17  estragib: there are four settings: 1-2) timeout and ttimeout are used to decide if there should be a timeout a) at all, b) for mappings, c) for key codes, or d) for both. 3-4) timeoutlen and ttimeoutlen decide the length. a) if ttimeoutlen is < 0, both time out after 'timeoutlen; if not, b) 'timeoutlen is for key codes, and c) 'ttimeoutlen is for mappings. there's a table of this behavior under :h 'to. i personally use set notimeout ttimeout
18:19 @rudi_s: estragib: I didn't know that vim was so complicated in this case before I looked up :h'timeout. Do you think it's necessary to implement it completely in vim_mode?
18:19 @rudi_s: Btw. what is timeout on key codes?
18:20  estragib: ^[ sth. for example
18:20  estragib: i don't think it's necessary, i'd just wish i could keep my mappings not time out at all, and everything else fast
18:21 @shabble: the 3 proposed settings should allow htat, I think?
18:22 @rudi_s: estragib: Ah, ok, thanks. What happens in your setting if you have g and gg mapped and press g? Will it never get triggered?
18:22  estragib: hm. actually this started out as an attempt to simplify because i didn't see a need for a distinction between command and insert timeouts. where did i go wrong? :/
18:23 @rudi_s: shabble: Yeah, should do it. But maybe we should do it vim-like. Just one setting more and it would be more like in vim (which is good IMO).
18:23 @shabble: heh, you're the one doing it, so whatever you like :D
18:23 @rudi_s: Hehe ;-) I'll try estragib's suggestion - the vim-like-solution.
18:24 @shabble: you've got me thinking about settings again now
18:24 @shabble: are we going to allow settings in the rc file?
18:25  estragib: rudi_s: with my specific settings, i would never be able to get the single g
18:25 @rudi_s: shabble: Would be a good idea. But I'm not sure how well that works with irssi settings.
--- Log closed Thu Oct 14 18:30:55 2010
--- Log opened Thu Oct 14 18:31:17 2010
18:31 --- Users 7 nicks [2 ops, 0 halfops, 0 voices, 5 normal]
18:32 --- Channel #irssi_vim was synced in 95 seconds
18:33 @shabble: rudi_s: well, if we're caching stuff in variables, and updating them on setup changed signal, we have the old value in teh variable before we update it
18:34 @rudi_s: shabble: Yeah, good idea. Will do that.
18:34 @shabble: we're starting to get quite a lot of globals though, might we worth moving them into a $settings hashref
18:34 @rudi_s: For settings of course, I'm just not sure how to handle all the other globals.
18:35 @shabble: yeah, just for settings I'm thinking
18:35 @rudi_s: Maybe we should group them somehow. insert-mode, command-mode, ex-mode, in hashes or something like that. What do you think?
--- Log closed Thu Oct 14 20:03:40 2010
