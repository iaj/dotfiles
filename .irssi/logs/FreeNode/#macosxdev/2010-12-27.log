--- Log opened Mon Dec 27 00:00:04 2010
00:09 --- Araxia_ is now known as Araxia
--- Log closed Mon Dec 27 02:33:50 2010
--- Log opened Mon Dec 27 02:39:17 2010
02:39 --- Users 43 nicks [2 ops, 0 halfops, 0 voices, 41 normal]
02:40 --- Channel #macosxdev was synced in 86 seconds
--- Log closed Mon Dec 27 06:32:37 2010
--- Log opened Mon Dec 27 06:37:59 2010
06:37 --- Users 40 nicks [2 ops, 0 halfops, 0 voices, 38 normal]
06:39 --- Channel #macosxdev was synced in 88 seconds
07:03 --- Araxia_ is now known as Araxia
07:12 --- Araxia_ is now known as Araxia
07:38 --- Araxia_ is now known as Araxia
07:46  clusty: hey
07:46  clusty: is there a nice way to: "add c++ classes"? in xcode
07:46  clusty: as in make 2 files and fill me basic constructors/destructors
07:59  Axman6: like it does for Obj-C?
08:08  clusty: Axman6:think so
08:09  Axman6: and you've checked that the same thing doesn't exist for C++ too?
08:09  Axman6: sounds surprising that it wouldn't exist
08:15  clusty: all i see is add new file
08:16  clusty: it's remarkably unsophisticated
08:21  Axman6: ave you opened ther add new file option?
08:29  clusty: yes
08:41  MerryTughan: clusty: I'm fairly sure I've seen it able to add a new C++ class with files and everything. One sec, I'll check Xcode.
08:42  clusty: MerryTughan:thanks
08:43  clusty: can't remember proggie, but in one you could change class name afterwards and all occurances in def and impl files would also change
08:47  MerryTughan: clusty: Huh... Yeah, seems it just adds the files in the latest version of Xcode.
08:47  MerryTughan: Probably the difference between adding an Obj-C Class and a C++ File. :P
08:48  MerryTughan: You can always make your own templates though for a C++ Class.
08:48  clusty: right
08:48  clusty: will try at some point preview 5
08:48  clusty: preview 4 still sucked
08:48  MerryTughan: Preview of what?
08:49  clusty: new xcode
08:49  clusty: developer preview
08:49  MerryTughan: Huh... I'm using 3.2.5 release.
08:49  clusty: ohh
08:49  clusty: i understood that latest xcode could do c++ :D
08:49  clusty: my bad
--- Log closed Mon Dec 27 10:32:22 2010
--- Log opened Mon Dec 27 10:37:50 2010
10:37 --- Users 43 nicks [2 ops, 0 halfops, 0 voices, 41 normal]
10:39 --- Channel #macosxdev was synced in 86 seconds
12:35  Jacksson: Hello! What kind of timer should i use in daemon for periodic (say, every 1 second) event? The keyword for googling would be enough :)
12:46  rawtaz: hi everyone. i am wondering if you could comment on http://pastebin.com/yx03u1FX - specifically, im wondering how to find out what code/process/function is placed at the EIP 0x00279484
12:47  rawtaz: the reason for this is that since upgrading to 10.6.5 a while ago i have had frequent kernel panics, and they always happend with EIP at this value.
12:48  rawtaz: i have ran Rember to test hte memory, and it does find one bit that is out of order, but even after switching the memory module's places around the panics happen at the same EIP. so im thinking it might not be the memory after all, but some system file that is faulty
12:48  rawtaz: i have read http://developer.apple.com/library/mac/#technotes/tn2002/tn2063.html%23I386_LINE_19 but am not getting a listing of kernel modules that are loaded at the EIP address, in my debug log
12:49  Jacksson: rawtaz: what about kextstat?
12:50  rawtaz: i do not know about it :) will read/check it out now
12:50  Jacksson: if you type it in terminal it displays base addresses of all kexts
12:50  rawtaz: might be something..
12:53  rawtaz: looks like ill havet o do some calculations :D
12:53  Jacksson: you can write awk script that does them ;)
12:53  rawtaz: ill try :)
13:23  Jacksson: rawtaz any luck with that?
13:23  rawtaz: Jacksson: got caught up with some support, but am on it :)
13:24  Jacksson: by the way, if panic happens in any system function (like, not correct parameters), you'll catch them in the kernel, not in a module - kextstat's displayed address for the kernel itself is 0x0, and you'll have to have 2 machines with gdb installed :/
13:25  Jacksson: and there try to see whose call was that, by tracing stack
13:27  rawtaz: as i understand you, you are saying that if the problem lies in a system function, for example that has been called with incorrect parameters by some third party), the EIP will be that of the system function in the kernel, and in that case i will need two machines and gdb?
13:39  Jacksson: yes, for example bsd funnctions lie in kernel module *.bsd,      and kextstat displays with base 0x00000000, if something wronggg hass hapened     thereyou needa debugger
13:40  Jacksson: \
13:40  Jacksson:  
13:45  rawtaz: oh darn he left XD
13:58  rawtaz: right, i cant find any kext that is loaded at an address equal to or lower than 0x00279484, so i presume that it is the kernel itself that occupies that space
14:01  rawtaz: is it reasonable that some third party process is located at a region in the memory where two bits are malfunctioning, and this process does a system call with data taken from the faulty memory region, and this causes a kernel panic where the EIP points to the system function, due to incorrect parameters?
--- Log closed Mon Dec 27 14:33:10 2010
--- Log opened Mon Dec 27 14:38:38 2010
14:38 --- Users 47 nicks [2 ops, 0 halfops, 0 voices, 45 normal]
14:39 --- Channel #macosxdev was synced in 89 seconds
--- Log closed Mon Dec 27 15:38:06 2010
--- Log opened Mon Dec 27 15:38:35 2010
15:38 --- Users 46 nicks [2 ops, 0 halfops, 0 voices, 44 normal]
15:39 --- Channel #macosxdev was synced in 90 seconds
--- Log closed Mon Dec 27 17:51:11 2010
--- Log opened Mon Dec 27 17:51:31 2010
17:51 --- Users 43 nicks [2 ops, 0 halfops, 0 voices, 41 normal]
17:52 --- Channel #macosxdev was synced in 90 seconds
--- Log closed Mon Dec 27 18:32:45 2010
--- Log opened Mon Dec 27 18:38:06 2010
18:38 --- Users 45 nicks [2 ops, 0 halfops, 0 voices, 43 normal]
18:39 --- Channel #macosxdev was synced in 88 seconds
--- Log closed Mon Dec 27 20:25:23 2010
--- Log opened Mon Dec 27 20:25:45 2010
20:25 --- Users 49 nicks [2 ops, 0 halfops, 0 voices, 47 normal]
20:27 --- Channel #macosxdev was synced in 84 seconds
--- Log closed Mon Dec 27 20:52:39 2010
--- Log opened Mon Dec 27 20:53:04 2010
20:53 --- Users 48 nicks [2 ops, 0 halfops, 0 voices, 46 normal]
20:54 --- Channel #macosxdev was synced in 87 seconds
21:36 --- Psy| is now known as Psy
--- Log closed Mon Dec 27 22:10:47 2010
--- Log opened Mon Dec 27 22:11:07 2010
22:11 --- Users 46 nicks [1 ops, 0 halfops, 0 voices, 45 normal]
22:12 --- Channel #macosxdev was synced in 88 seconds
--- Log closed Mon Dec 27 22:34:02 2010
--- Log opened Mon Dec 27 22:39:26 2010
22:39 --- Users 44 nicks [1 ops, 0 halfops, 0 voices, 43 normal]
22:39 --- Server: [hubbard.freenode.net] [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
22:40 --- Channel #macosxdev was synced in 89 seconds
22:48  Michaelson_: hello, is there a way to programatically "Unselect" my preference pane?
22:49  Michaelson_: "unselection" - is what apple calls what happens to the pane, when the user clicks "Back" or "Show all" button in System Preferences
23:09  Psy: just let the user do whatever he wants
23:10 --- ChanServ sets modes [#macosxdev +o Beelsebob]
23:10  Michaelson_: yeah, figured that  already
23:15 --- ChanServ sets modes [#macosxdev +o Beelsebob]
--- Log closed Tue Dec 28 00:00:04 2010
