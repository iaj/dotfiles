--- Log opened Sun Jan 16 00:00:51 2011
--- Log closed Sun Jan 16 00:10:19 2011
--- Log opened Sun Jan 16 00:10:40 2011
00:10 --- Users 52 nicks [2 ops, 0 halfops, 0 voices, 50 normal]
00:12 --- Channel #macosxdev was synced in 108 seconds
00:48 --- Cocoatan is now known as Cocoatan|Drwaing
00:48 --- Cocoatan|Drwaing is now known as Cocoatan|Drawing
--- Log closed Sun Jan 16 02:10:38 2011
--- Log opened Sun Jan 16 02:11:03 2011
02:11 --- Users 48 nicks [2 ops, 0 halfops, 0 voices, 46 normal]
02:12 --- Channel #macosxdev was synced in 103 seconds
--- Log closed Sun Jan 16 12:29:55 2011
--- Log opened Sun Jan 16 12:30:17 2011
12:30 --- Users 51 nicks [3 ops, 0 halfops, 0 voices, 48 normal]
12:31 --- Channel #macosxdev was synced in 102 seconds
--- Log closed Sun Jan 16 14:52:29 2011
--- Log opened Sun Jan 16 14:52:50 2011
14:52 --- Users 50 nicks [3 ops, 0 halfops, 0 voices, 47 normal]
14:52 --- Server: [verne.freenode.net] [freenode-info] if you're at a conference and other people are having trouble connecting, please mention it to staff: http://freenode.net/faq.shtml#gettinghelp
14:54 --- Channel #macosxdev was synced in 103 seconds
17:41  CaBa: hi
17:41  CaBa: is there a way to compile a c library on 10.6 for 64bit arch so that it also runs on 10.5?
17:41  CaBa: right now 10.5 complains about unknown instructions when i try to use the library there
17:42 @Bynbo7: interesting
17:42 @Bynbo7: i assume this isn't an Xcode project?
17:42  CaBa: nope, its not
17:43  CaBa: its a JNI library... i used to simply provide a 32-bit version for 10.5 - but now we switched the project to java6 and java6 on 10.5 does not support 32-bit mode for some reason
17:43  CaBa: and if java is running in 64 bit mode you have to load a 64 bit library, otherwise it complains about the arch mismatch
17:46  CaBa: "unknown required load command 0x80000022"
17:46  CaBa: thats what i get
17:46  CaBa: when i try to load the library built on 10.6 with 10.5
17:47 @Bynbo7: hmm
17:47 @Bynbo7: have you tried specifying the minimum OS X version when compiling? i forget how to do it, but gcc has flags for it (clang too i believe)
17:48  CaBa: nope, i didnt try that... let me check that out
17:50  CaBa: hm, i don't find an option like that...
17:50 @Bynbo7: hmm, there is some way to specify it, i'm sure
17:50  CaBa: well it should be documented in the gcc manpage, right?
17:51 @Bynbo7: i'd try looking in Apple's docs
17:51  CaBa: mmacosx-version-min
17:51 @Bynbo7: it may not be a gcc flag
17:51 @Bynbo7: that'd be it
17:51  CaBa: keep your fingers crossed ;)
17:52 @Bynbo7: yeah, no guarantees that'll do it
17:52 @Bynbo7: may also be worth trying a different compiler
17:52 @Bynbo7: as in clang
17:54  CaBa: didnt do the trick :(
17:55  CaBa: well this project is built on windows,solaris,mac and linux... i'd really like to stick to gcc
17:56 @Bynbo7: well, clang is a drop in replacement for gcc, so it would be a matter of changing $CC
17:56  CaBa: oh really? well let me give that a try as well...
18:01  CaBa: still the same :(
18:01  CaBa: i wonder if this might be also jni related
18:01  CaBa: thats the exact error i get:
18:01  CaBa: You are running x86_64-Java on Mac OS X
18:01  CaBa: Trying to load library from /lib/libgecko2/mac__x86_64.jni
18:01  CaBa: java.lang.UnsatisfiedLinkError: /private/var/folders/FY/FYuS2Vf1HxO5vXhHG8Qc9E+++TM/-Tmp-/libgecko2113271771561229031.jni:  no suitable image found.  Did find:  /private/var/folders/FY/FYuS2Vf1HxO5vXhHG8Qc9E+++TM/-Tmp-/libgecko2113271771561229031.jni: unknown required load command 0x80000022
18:02  CaBa: the first two prints are from mu code, the latter is the java exception
18:02  CaBa: *my
18:03  CaBa: nope, its not JNI related...
18:03  CaBa: the same thing happens if i built a CLI version that is java independent
18:04  CaBa: oh wait
18:04  CaBa: *idea*
18:20  CaBa: Bynbo7: i hadn't specified that for the linking, only in CFLAGS...
18:20  CaBa: Bynbo7: if the min os versino is also passed to the linker it works
18:20 @Bynbo7: ah, ok
18:21 @Bynbo7: yes, it does sound like a linking problem
18:21  CaBa: i also recompiled the entire libgsl that i statically link with that min version flag... i dont know if that was necessary after all
18:34 --- ChanServ sets modes [#macosxdev +o Beelsebob]
--- Log closed Sun Jan 16 18:52:39 2011
--- Log opened Sun Jan 16 18:53:03 2011
18:53 --- Users 55 nicks [2 ops, 0 halfops, 0 voices, 53 normal]
18:54 --- Channel #macosxdev was synced in 102 seconds
18:58 --- ChanServ sets modes [#macosxdev +o Beelsebob]
--- Log closed Sun Jan 16 20:59:03 2011
--- Log opened Sun Jan 16 21:12:14 2011
21:12 --- Users 57 nicks [2 ops, 0 halfops, 0 voices, 55 normal]
21:16 --- Channel #macosxdev was synced in 424 seconds
21:56 --- crilly| is now known as crilly
23:38  Home__: anyone?
23:39  CaBa: Bynbo7: is it in general recommended to choose clang over gcc?
23:40 @Bynbo7: well, i do, because it makes life easier. gcc currently produces better code, but not by much, and if you tweak the llvm flags, you can get better code from clang
23:41  CaBa: Bynbo7: what do you mean by makes life easier?
23:41 @Bynbo7: its error messages are orders of megnitude better than gcc's.
23:42 @Bynbo7: and there's also the clang analyser, which can find bugs for you
23:42  CaBa: btw, do you have any idea if there is a way to check java+jni code for memory leaks?
23:42  Home__: can I ask a question about memory management? I seriously can't locate the error
23:43 @Bynbo7: Home__: don't ask to ask, just ask. rule #1 of irc
23:43 @Bynbo7: CaBa: Shark might be able to do it
23:43  CaBa: .oO(two metas in 5 minutes... amazing :P)
23:44  Home__: I'm new, so I'll do everything I can do be fast. I'm making a (un)archiver, it has already been released in the past as Archivator on macupdate, and worked fine
23:45  Home__: now I'm having a tableview, when I click start the app takes the top element of that view and passes it on to a class AVTask, that handles it
23:45  Home__: it then removes the element and reloads the table data
23:46  Home__: meanwhile, AVTask stores the element (actually a file path), the file name and extension using three NSString instance variables
23:46  Home__: an nstask then gets launched
23:46  Home__: to handle the file at the given file path
23:47  Home__: but when the archive needs a password, I need to relaunch the NSTask with additional arguments
23:48  Home__: when my AVTask class notices a password is necessary, it stops the task and calls a method that shows a password view with an NSTextField
23:49  Home__: when entering the password and pressing enter, that password view is hidden and the NSTask is relaunched.
23:49  Home__: (We're almost there, if anyone is following this)
23:50  Home__: The problem is : The class that handles the table view also handles the password view (it's my AVFileController class, and it's the delegate of the AVTask class).
23:51  Home__: When asking the delegate to show the password view, then hiding it, the three NSString instance variables are null, and the arguments of the last launched NSTask (I also stored those in an instance variable, an NSArray) also.
23:51  Home__: this outputs several errors
23:51  Home__: now can anyone tell me what goes wrong when calling the delegate, or do I have to supply code?
23:54  Home__: Don't tell me nobody was listening -.-
23:55  Home__: Oh come on!
23:56  Home__: You gotta be kidding me! Please!
23:56  Home__: Just tell me how to debug that code, or something
23:56 @Bynbo7: :\
23:57  Home__: :P
23:57 @Bynbo7: patience is a virtue my friend
23:57  Home__: I've tried stackoverflow, they stopped answering
23:57  Home__: :P okay, I'll wait :)
23:58 @Bynbo7: i haven't found a good place to be able to ask cocoa questions anywhere. luckily i don't have to program with cocoa :P
23:58  Home__: Can you help me in any way :P?
23:58  Home__: I could always pay for an answer, but that would take more time
--- Log closed Mon Jan 17 00:00:47 2011
