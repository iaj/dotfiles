--- Log opened Thu Oct 21 00:00:08 2010
--- Log closed Thu Oct 21 00:31:45 2010
--- Log opened Thu Oct 21 00:32:05 2010
00:32 --- Users 53 nicks [2 ops, 0 halfops, 0 voices, 51 normal]
00:33 --- Channel #macosxdev was synced in 100 seconds
--- Log closed Thu Oct 21 00:58:19 2010
--- Log opened Thu Oct 21 00:58:41 2010
00:58 --- Users 54 nicks [2 ops, 0 halfops, 0 voices, 52 normal]
01:00 --- Channel #macosxdev was synced in 98 seconds
--- Log closed Thu Oct 21 01:22:53 2010
--- Log opened Thu Oct 21 01:23:15 2010
01:23 --- Users 54 nicks [2 ops, 0 halfops, 0 voices, 52 normal]
01:24 --- Channel #macosxdev was synced in 99 seconds
--- Log closed Thu Oct 21 01:53:34 2010
--- Log opened Thu Oct 21 01:53:58 2010
01:53 --- Users 54 nicks [2 ops, 0 halfops, 0 voices, 52 normal]
01:55 --- Channel #macosxdev was synced in 99 seconds
--- Log closed Thu Oct 21 02:21:13 2010
--- Log opened Thu Oct 21 02:21:33 2010
02:21 --- Users 53 nicks [2 ops, 0 halfops, 0 voices, 51 normal]
02:23 --- Channel #macosxdev was synced in 101 seconds
03:34  therrell: Hi everyone, I'm stuck with a problem accurately capturing elapsed time in my application between my calls to a updateSimulation function. The timeIntervalSinceNow call is giving me back a NSTimeInterval of 3.1929.... seconds, yet I print to console between the calls and notice only 23milliseconds had elapsed
03:35  therrell: my NSDate object is instantiated with [[NSDate date] retain];
03:36  Psy: show coe
03:36  Psy: show code*
03:36  therrell: Psy: sure :)
03:36  therrell: Psy: I don't know how to post it in pretty format..sorry for the rough formatting
03:36  Psy: ¿?
03:36  Psy: http://paste.lisp.org/new
03:39  therrell: Psy: Is this channel #macdev ? I don't see #macosxdev in the list of channels
03:40  Psy: don't put a channel
03:40  therrell: Psy: http://paste.lisp.org/display/115748
03:41  therrell: Psy: updateSimulation is getting called every 25ms on a timer
03:41  Psy: first of all
03:41  Psy: always use NSTimeInterval
03:41  Psy: also, why do you multiply by -1000 ?
03:42  therrell: Psy: I was referencing some c code, realizing it isn't appropriate for this code
03:42  Psy: ...
03:42  Psy: NSTimeInterval is a double
03:42  Psy: and it is in seconds
03:44  therrell: Psy: Okay, so you mentioned always use NSTimeInterval. I still need the NSDate object though for a reference date correct?
03:44  Psy: I mean, when you want to manipulate time intervals, use NSTimeInterval
03:44  Psy: don't switch to float
03:44  Psy: because float is less precise than NSTimeInterval (aka double)
03:44  therrell: Psy: Okay, I understand
03:46  therrell: Psy: so any idea why elapsedTime gets 3.1929... seconds in a 25ms elapsedTime?
03:48  Psy: what's that: [m_previousUpdateTime initWithTimeInterval:elapsedTime sinceDate:m_previousUpdateTime]; ?
03:48  Psy: therrell: NEVER
03:48  Psy: EVER
03:48  Psy: SEND INIT MESSAGES TO AN ALREADY INIT'D OBJECT !
03:49  Psy: [[SomeClass alloc] init...] <-- THAT'S THE ONLY FORMAT YOU SHOULD EVER USE !!!!
03:51  therrell: Psy: Okay I'll change that appropriately
03:51  Psy: please do
03:51  therrell: Psy: :)
03:51  therrell: Psy: New to obj-c/cocoa, so its good to get your critique
03:52  therrell: Psy: I really need some guidance about the inconsistency between real elapsed time and the NSTimeInterval of 3.19 seconds I'm receiving. Did you have any ideas?
03:53  Psy: start with that
03:53  therrell: Psy: k I'll change it real quick
03:59  Psy: therrell: note... don't put "get" in ObjC getters
04:00  Psy: for getter/setters naming convention is: - (Type)<key>; and - (void)set<Key>:(Type)value;
04:00  Psy: NSZeroPoint exists too..
04:01  Psy: naming convention says that "and" is used when a method does two things at once, example: -makeKeyAndOrderFront:
04:02  Psy: you don't use it to separate related parameters
04:02  Psy: also, "get" is used when the queried value is returned by reference through the parameters
04:19 --- ChanServ sets modes [#macosxdev +o Beelsebob]
--- Log closed Thu Oct 21 04:33:34 2010
--- Log opened Thu Oct 21 04:33:56 2010
04:33 --- Users 51 nicks [1 ops, 0 halfops, 0 voices, 50 normal]
04:35 --- Channel #macosxdev was synced in 96 seconds
04:39 --- ChanServ sets modes [#macosxdev +o Beelsebob]
04:59 --- ChanServ sets modes [#macosxdev +o Beelsebob]
--- Log closed Thu Oct 21 05:22:28 2010
--- Log opened Thu Oct 21 05:27:48 2010
05:27 --- Users 50 nicks [1 ops, 0 halfops, 0 voices, 49 normal]
05:29 --- Channel #macosxdev was synced in 96 seconds
05:30  Psy: ¿?
05:50  KonaB1end: yet-another-package manager for osx :|
05:59  bavarious: isn't there a #homebrew channel?
06:04  yohan14_: #homebrew: nah . #homebrew isn't for mac package manager
06:05  bavarious: oh, i think it's #machomebrew or #homebrewmac or st
06:05  yohan14_: both of those r empty
06:06  bavarious: http://github.com/mxcl/homebrew/wiki says it's #machomebrew
06:06  bavarious: but i guess the community is small
--- Log closed Thu Oct 21 06:21:27 2010
--- Log opened Thu Oct 21 06:21:47 2010
06:21 --- Users 47 nicks [1 ops, 0 halfops, 0 voices, 46 normal]
06:23 --- Channel #macosxdev was synced in 98 seconds
08:21 --- ChanServ sets modes [#macosxdev +o Beelsebob]
--- Log closed Thu Oct 21 08:59:10 2010
--- Log opened Thu Oct 21 08:59:33 2010
08:59 --- Users 52 nicks [2 ops, 0 halfops, 0 voices, 50 normal]
09:01 --- Channel #macosxdev was synced in 100 seconds
--- Log closed Thu Oct 21 09:26:50 2010
--- Log opened Thu Oct 21 09:27:14 2010
09:27 --- Users 53 nicks [2 ops, 0 halfops, 0 voices, 51 normal]
09:27 --- Server: [niven.freenode.net] [freenode-info] if you're at a conference and other people are having trouble connecting, please mention it to staff: http://freenode.net/faq.shtml#gettinghelp
09:28 --- Channel #macosxdev was synced in 100 seconds
--- Log closed Thu Oct 21 10:20:56 2010
--- Log opened Thu Oct 21 10:21:18 2010
10:21 --- Users 53 nicks [2 ops, 0 halfops, 0 voices, 51 normal]
10:22 --- Channel #macosxdev was synced in 96 seconds
--- Log closed Thu Oct 21 11:13:59 2010
--- Log opened Thu Oct 21 11:14:23 2010
11:14 --- Users 53 nicks [2 ops, 0 halfops, 0 voices, 51 normal]
11:15 --- Channel #macosxdev was synced in 101 seconds
--- Log closed Thu Oct 21 11:23:20 2010
--- Log opened Thu Oct 21 11:23:42 2010
11:23 --- Users 52 nicks [2 ops, 0 halfops, 0 voices, 50 normal]
11:25 --- Channel #macosxdev was synced in 99 seconds
--- Log closed Thu Oct 21 12:08:42 2010
--- Log opened Thu Oct 21 12:08:51 2010
12:08 --- Users 56 nicks [2 ops, 0 halfops, 0 voices, 54 normal]
12:10 --- Channel #macosxdev was synced in 97 seconds
12:59 --- kaio_ is now known as kaio
--- Log closed Thu Oct 21 14:28:27 2010
--- Log opened Thu Oct 21 14:28:52 2010
14:28 --- Users 53 nicks [2 ops, 0 halfops, 0 voices, 51 normal]
14:30 --- Channel #macosxdev was synced in 97 seconds
16:30  elderK: Hey peeps,.
16:30  elderK: has anyone noticed Gprof giving weird results on Snow Leopard?
16:30  elderK: It's call graphs seem to be ordered entirely wrong,
16:30  elderK: the "calls" for things representing the wrong things,
16:30  elderK: at least, compared to the GProf manual.
--- Log closed Thu Oct 21 17:28:32 2010
--- Log opened Thu Oct 21 17:38:57 2010
17:38 --- Users 53 nicks [1 ops, 0 halfops, 0 voices, 52 normal]
17:40 --- Channel #macosxdev was synced in 94 seconds
--- Log closed Thu Oct 21 18:08:10 2010
--- Log opened Thu Oct 21 18:08:30 2010
18:08 --- Users 51 nicks [2 ops, 0 halfops, 0 voices, 49 normal]
18:10 --- Channel #macosxdev was synced in 98 seconds
--- Log closed Thu Oct 21 19:07:38 2010
--- Log opened Thu Oct 21 19:07:59 2010
19:07 --- Users 53 nicks [2 ops, 0 halfops, 0 voices, 51 normal]
19:09 --- Channel #macosxdev was synced in 96 seconds
19:26  jacksson: hello! Can someone explain please, what does a "firing of a run loop source" mean? is it just "placing" an event into run loop? Or is it a forcing run loop to process that event right now?
19:33  bavarious: without knowing the context, i'd say it means a source generating an event
19:50  jacksson: bavarious the context is CFRunLoopSource reference
19:51  jacksson: "When a source is ready to fire, some part of the application, perhaps code on a separate thread waiting for an event, must call CFRunLoopSourceSignal to tell the run loop that the source is ready to fire"
20:33  iSimon: I'm looking to launch a URL in the default browser in C, how is this done for OSX?
20:35  bavarious: iSimon: launch services api
20:36  iSimon: I'll have a look, thanks.
20:36  bavarious: LSOpenCFURLRef()
20:37  iSimon: Yup, got it.
20:39  iSimon: Where in the documentation can I find out about LSOpenCFURLRef and its arguments?
20:40  bavarious: launch services reference
20:41  bavarious: http://developer.apple.com/library/mac/#documentation/Carbon/Reference/LaunchServicesReference/
20:41  iSimon: Thanks for your help.
20:42  bavarious: hmm, apparently LSOpenURLsWithRole() is preferred over LSOpenCFURLRef()
20:43  iSimon: Okay, I'll have a look at that too.
20:58  jacksson: hello.. When i call CFRunLoopRun, this function call doesnt return immediately? It puts the thread into forever loop?
--- Log closed Thu Oct 21 21:07:44 2010
--- Log opened Thu Oct 21 21:08:05 2010
21:08 --- Users 53 nicks [2 ops, 0 halfops, 0 voices, 51 normal]
21:09 --- Channel #macosxdev was synced in 97 seconds
--- Log closed Fri Oct 22 00:00:26 2010
