--- Log opened Tue Nov 09 12:14:32 2010
12:14 --- Users 699 nicks [0 ops, 0 halfops, 0 voices, 699 normal]
12:14 --- Channel #git was synced in 2 seconds
12:14  iaj: hi there
12:14  iaj: i have a folder with lots of git repo folders inside.. is there any way to see which ones were updated?
12:15  benishor: iaj: what does "were updated" mean?
12:15  benishor: udated since a given timestamp?
12:15  benishor: s/udated/updated
12:16  albel727: iaj: you mean, you want to know, what "git fetch; git status" will return in each one of the repos?
12:19  cbreak_work: how can I create an empty group in gitolite?
12:20  cbreak_work: I have a whole bunch of repositories that will have the same access control, so I made two groups, one for read only, one for read write access.
12:20  cbreak_work: but so far the read only group is empty, and gitolite chokes on that.
12:21  teukka: cbreak_work: that might still apply: https://github.com/tmatilai/gitolite/commit/fc27bfe66b91f0c4c0293dbed1ff1b490dbe34e1
12:22  teukka: cbreak_work: or just add a dummy user to the group
12:23  cimenta: albel727:  but I do not have my personal repo
12:24  albel727: cimenta: I suppose, you're referring to git-scm/setting-up-private-repository. then instead of "git clone --bare ..." do "git init --bare" and scp that.
12:25  cimenta: albel727: yes, you're right. and how can I create branch in such repo?
12:26  cimenta: albel727: I can ssh to the remote host
12:27  albel727: cimenta: but thing is, since someone else already pushed to the repo that you already have, you actually do have a "personal repo". just clone that. you can create branches in any kind of git repo with "git branch", but usually nobody creates branches in bare. they create branches in non-bare repos and push those to bare, instead.
12:27  cbreak_work: that's what I ended up doing :/
12:28  cimenta: albel727: I am happy to start from scratch ...
12:28  albel727: cimenta: but I suspect, you don't have the problem, you think you're having. please pastebin full message of what git clone is telling you.
12:28  cimenta: albel727: if I try to clone that remote repe I get this error "warning: remote HEAD refers to nonexistent ref, unable to checkout."
12:29  albel727: cimenta: but the git directory is still in place? it's just that there's nothing in it, right?
12:30  cimenta: albel727: there should be something in the branch
12:30  albel727: cimenta: you absolutely did not answer my question
12:31  albel727: cimenta: is there something left after git clone? like a directory with ".git" subdirectory in it?
12:31  cimenta: albel727: .git directory is there and repo directory is empty
12:31  albel727: cimenta: ok, what does "git branch -r" tell you?
12:31  albel727: cimenta: (when executed from inside repo dir, ofc)
12:32  sitaram: teukka, cbreak_work: the reason I did not allow this by design is that my focus was on preventing errors -- it's rare that someone needs this, and more common that they misunderstood something and did something wrong
12:32  cimenta: albel727: when I tried to browse the repo with gui it looks like there is nothing..  let me try ...
12:32  albel727: cimenta: what gui did you use?
12:33  sitaram: teukka, cbreak_work: I suppose now the focus has to change, with lots of people using it...
12:33  sitaram: teukka: if you want to email me that patch again (rebased on a recent pu) I'll take it... or I can add that myself when I get back
12:34  cimenta: albel727: git branch -r tells me origin/jarda where jarda is the name of the branch I created for developer
12:34  iaj: albel727: yeah, sorry had to get some dinner :)
12:34  albel727: cimenta: ok, "git checkout -t origin/jarda"
12:34  iaj: e.g. which repos have changed remotely since last pull.
12:34  cimenta: albel727: the windows git gui
12:34  albel727: cimenta: oh, msysgit?
12:34  wereHamster: iaj: ls-remote and compare the refs
12:35  cimenta: albel727: yes
12:35  albel727: cimenta: I see. well, you can see all the history you have, with "gitk --all"
12:35  iaj: wereHamster: what's ls-remote ? :\
12:36  albel727: iaj: man git-ls-remote. try it and see =)
12:36  cimenta: albel727: I can see "no commits selected"
12:37  cimenta: albel727: no, sorry
12:37  cimenta: albel727: you're right
12:37  albel727: cimenta: and what's the result of git checkout I've told you to run?
12:38  cimenta: albel727: ;-) the files I wanted to seeeeeeee
12:38  teukka: sitaram: as you wish. I am not using it anymore even myself, as I changed the setup a bit
12:38  albel727: cimenta: well, the only problem with your server repo (besides it most likely being non-bare), is that it has bad HEAD setup.
12:38  teukka: sitaram: but I'll try to rebase it in a moment. right now a bit busy...
12:39  cimenta: albel727: could you tell me what is the origin/jarda? why is not only jarda. I created branch jarda for him
12:39  cimenta: albel727: I am happy to start from scratch. The developer has his local repo and he will push it to new properly set up remote repo
12:40  albel727: cimenta: after that question I'd advise you to read git tutorials some more. "origin" is the inner name of the remote repository (the one, you've cloned). therefore origin/jarda is the branch "jarda" on remote "origin"
12:40  iaj: albel727: hmm ahw.. tahnks... im trying to just run git ls-remote * but that doesn't seem to work - my intention is to go through all the directories in my ~/git folder ;\ any clue?
12:41  albel727: iaj: well, there's no solution besides writing a shell script. there's also git slave (http://gitslave.sourceforge.net/gits-man-page.html) but it works only for submodule-like setup, so... =/
12:41  iaj: albel727: awh... i see :-(
12:41  iaj: thanks for the help:)
12:42  albel727: no problem.
12:42  cimenta: albel727: ok, I will... could you help me to fix the HEAD set up or set up new repo with one branch and proper HEAD?
12:43  albel727: cimenta: ok, first off we need to understand, whether your server repo is bare or not. ssh to your server.
12:43  cimenta: albel727: I am there and I can create new repo if it's easier ...
12:44  albel727: cimenta: no it's not.
12:44  cimenta: albel727: ok, I'll do what ever you say ...
12:44  albel727: cimenta: now. do "git clone --bare path/to/repo path/to/repo.git"
12:44  cimenta: ls
12:44  cimenta: ops
12:45  cimenta: does it matter what the pwd is?
12:45  cimenta: or I could be anywhere?
12:45  albel727: cimenta: no it doesn't matter. the bottom line is that a new repo directory ending with ".git" should appear alongside your original repo.
12:46  cimenta: but there is already .git repo
12:46  albel727: cimenta: oh, directory name ends with .git? and when you go inside you see "config, HEAD, index..." and other files?
12:47  albel727: ...other git internal files?
12:47  cimenta: yes
12:47  cimenta: HEAD contains ref: refs/heads/master
12:47  albel727: cimenta: oh, then it's a bare repo already.
12:47  albel727: cimenta: then do the following...
12:48  albel727: cimenta: "git symbolic-ref HEAD refs/heads/jarda"
12:48  albel727: cimenta: what is the content of HEAD now?
12:49  cimenta: albel727: ref: refs/heads/jarda
12:50  albel727: cimenta: ok, now you can try git clone on your client machine again. warning should disappear and files should be in place immediately.
12:51  cimenta: albel727: and then when I want to check into master?
12:51  albel727: cimenta: thing is, content of HEAD of a bare repo determines, which branch will be checked out after someone clones it. and, until now, your HEAD was referring to nonexistent branch "master".
12:53  cimenta: albel727: ok, so when I am happy with the code in jarda, I create branch master and check into master and push in remote. right?
12:54  albel727: cimenta: what do you mean? if you want to create a branch "master" you create it in some of your clones, and then push it to your central repo. if you want to make "master" to be the default on clone, you do it by modifying HEAD. if you don't want it to be default, but just want to work on it, after someone else pushes it to central repo, you can always use that "git checkout -t <remote_branch>".
12:54  cimenta: albel727: yes, yes. happened what you said ;-)
12:54  albel727: (... default on clone, you do it by modifying HEAD on central repo)
12:55  cimenta: albel727: I thought that master is something like root and branches are "under" it
12:56  albel727: cimenta: "master" is just the same branch, as any other. it is in no way special, from git standpoint.
12:58  albel727: cimenta: it's just that people usually choose to treat it differently, depending on their preferred workflow. for example, some people prefer that "master" contains only the most stable version of code. unstable features are developed on other branches, and then get merged into "master", once they become stable.
13:00  cbreak_work: sitaram: what I did to solve the problem was to make a general group @projectname, and a read only group @projectnamero = @projectname
13:00  cbreak_work: just as placeholder
13:00  cbreak_work: maybe you could make a special group @none, like @all, just the opposite :)
13:01  cbreak_work: then we could use that as placeholder
13:02  albel727: yeah, that was my idea, too. but I imagined @empty =)
13:03  albel727: (but @none sounds better to me)
13:06  albel727: but conceptually, I like @projectnamero = @projectname better. all that I'm worried about, is that line with "R" permission won't override the line with "RW+" permission. I.e that users from @projectname won't end up having only "R", just because they're alse listed in @projectnamero.
13:06  gioele: hello
13:07  gioele: I just used `git svn dcommit aabb00ff` (to push only few commits, not all of them). What should I do in order to be able to push the remaining commits?
13:08  gioele: should I rebase on top of the commit that git-svn gave me as its last output?
13:09  albel727: gioele: hmm, I'd try just "git svn rebase; git svn dcommit" first. but manual rebasing on top of git-svn latest commit should work too.
13:10  gioele: albel727: thank you, in fact rebasing on top of git-svn latest commit works fine
13:11  albel727: yeah, it should. you're welcome.
13:12  cimenta: albel727: thank you soooo much for your help & explanation
13:13  cimenta: albel727: the trouble is that never used git and don't have experience with VCS
13:13  cimenta: albel727: ;-) thank you again. I will sleep better now :-)
13:13  albel727: cimenta: you're welcome. but I still advise you to read up something. at least http://progit.org/book/ . git has a steep learning curve, but it pays in the end. =)
13:15  cimenta: albel727: I went through progit before I was installing git & gitolite. Yes it takes time
13:15  albel727: cimenta: you also installed gitolite? good job. well, all that's left is practice, then. =)
13:17  cimenta: albel727: gitolite was really easy to install. I only followed manual. it's all about undestanding of git itself.
13:19  albel727: cimenta: well, yeah. gitolite is really nice in that regard. but git itself is not that hard, once you get around "git checkout; git add; git commit" workflow, and concepts of remotes and tracking branches,
13:20  cimenta: albel727: the trouble is that I do not do the coding .. I kind of manage the project. Well I will get there ;-)
13:20  cimenta: my next thing is integrate git into redmine ;-)
13:22  albel727: cimenta: well, since you're the manager, then you're the unfortunate guy, who'll also need to know "git remote add", "git init --bare". that's all. good luck with redmine =)
13:22 --- trochala is now known as yatiohi
13:23  cimenta: albel727: thank you and
13:23  cimenta: thank you again :-)
13:23  albel727: (although with gitolite you can forget about git init --bare)
13:23  albel727: cimenta: no problem
13:23  albel727: cimenta: and you're welcome =)
13:24  cimenta: albel727: yes, gitolite did it for me yesterday ...
13:24  henk: gebi: gitolite seems really nice and exactly what i was looking for. thanks again!
13:24  albel727: cimenta: ^ see? =)
13:24  chronos: hey guys.
13:24  cimenta: henk: we should thank sitaram ;-)
13:25  henk: sitaram: thanks to you too, looks really good so far, even the docs :)
13:25  henk: cimenta: you spoke my mind ;)
13:25  chronos: how I can set a git server on a Windows ( 7 ) machine ?
13:25  cimenta: yes the docs is so easy to follow. No problem to install and set it up
13:26  henk: cimenta: yes, and pretty intuitive even :) i love the way its config is handled via git!
13:29  albel727: chronos: there is no good way to do that. by git server you mean a machine, which someone can point to in git clone <url>? if you don't care about security, just share a bare repo via windows share. I didn't do it myself, but I've heard that in cygwin's git a git-daemon is available (also provides no security). if you want security - installing ssh server is your only choice.
13:31  albel727: (I might be wrong about that, and there might have been some improvement lately in the area of windows git server, but I highly doubt that. On your place, I'd just ran linux in a virtual machine, or coLinux, or something).
13:33  Yotson: hi all. new to versioning here. I am looking for a way to manage my (hobby related) ever growing amount of code.
13:33  chronos: albel727: I'm thinking in server something like github does hehe, if possible.
13:33  Yotson: Would you advise git or would that be a bit of overkill for this case?
13:33  gioele: chronos: gitorius?
13:34  gioele: Yotson: subversion may be simpler for a novice, but in the long run you will appreciate git more
13:35  albel727: chronos: surely it is possible. on linux. especially, if you want github-like interface. there are plenty of git web interfaces, but I have no idea, how well do they play with windows.
13:37  chronos: gioele: I need that closed in company.
13:37  albel727: I'd say, it's highly unlikely, that you'll ever get around setting up SSH and/or git-daemon (the two protocols used by github) on windows, let alone web interface on top of tht.
13:37  albel727: s/tht/that/
13:37  chronos: gioele: my personal stuff I keep on a dreamhost account with gitolite
13:38  gioele: chronos: gitourious is free software, download it and install it inside your company
13:38  Yotson: gioele: ok. thanks. I've just seen 2 'git the basics'  video's and basically scares me. On the other hand the pile of code scares me about as much. :)
13:38  albel727: chronos: gitorious is one of those web interfaces I mentioned. but on windows... =/
13:41  chronos: hmmm
13:41  albel727: chronos: here's the link to the interface, used by gitorious.org. http://gitorious.org/gitorious   as you can see, it looks very linux-oriented.
13:44  albel727: chronos: here's a link with some other interfaces, maybe you'll gather something from it. https://git.wiki.kernel.org/index.php/Gitweb
13:45  gioele: chronos: about running git on windows https://code.google.com/p/msysgit/
13:46  gioele: chronos: yet, I'd suggest running the git server on a linux (virtual) box
13:48  albel727: gioele: msysgit doesn't have either git-web or git-daemon, afaik. as I've already mentioned, cygwin's git does, but I'm not sure it will be easy to use them.
13:50  albel727: gioele: Yotson: aha. I lied horribly. seems like msysgit finally ported git web. see this https://git.wiki.kernel.org/index.php/MSysGit:GitWeb
13:51  albel727: Yotson: sorry, wrong person. =/
13:51  Yotson: albel727: already setting up a virtualBox to mimic my server
13:51  albel727: chronos: ^
13:51  Yotson: np
13:52  albel727: Yotson: i'm not sure you even need server, tbh.
13:53  Yotson: need? i don't know. but i do want. :)
13:53  albel727: Yotson: since you're a single person, who is ever intending to work on his code, you'll be perfectly ok with a single in-place git repo .
13:53  albel727: Yotson: haha
13:54  Yotson: well. i have several different places i work. i try to keep as much data centralized as possible.
13:54  albel727: Yotson: oh, then central server it is.
13:55  albel727: (virtual box is what I tend to use in these cases on my home win, too =D)
13:57  Yotson: that was basically the reason to get something versioning. Now all my code is stored on a ftp server. I make a copy of a file, change something,
13:57  Yotson: alter the first line with a version number and upload that to the server.
13:57  Yotson: this does not scale well. :D
13:58  albel727: Yotson: haha =) yeah, that's a clear use-case for VCS. well, git branching will surely help you... once you understand it =D
13:58  chronos: ya
13:59  chronos: I'll set a vbox with ubuntu and git
13:59  chronos: well, with gitorious I can acess like git@machine:repo , like github?
13:59  Yotson: that why i install the same os as my server in a virtualbox and start playing.
13:59  chronos: like gitolite
13:59  chronos: the plan in the end is move to a real linux server.
14:00  albel727: chronos: ok. but note, that some git web interfaces manage git repositories themselves, and therefore don't need gitolite.
14:00  chronos: is case of gitorious?
14:01  albel727: chronos: I think, gitorous manages repos itself.
14:01  albel727: s/gitorous/gitorious/
14:01  chronos: nice.
14:01  ilogik: I deleted a file from version control a few weeks ago. how can I recover it?
14:02  albel727: I think, every single web interface, except gitweb, manages repos itslef.
14:04  albel727: ilogik: locate the commit in history, where you deleted that file, and then you'll be able to get the version of the file just before that.
14:04  ilogik: is there a quick way to find that commit? I can't get a list of files changed for each commit, right?
14:06  albel727: ilogik: yeah, try git log --name-status
14:07 --- dwmw2_gone is now known as dwmw2
14:07  albel727: ilogik: gitk is usually helpful, too
14:08  ilogik: albel727: great, found it, thanks :)
14:08  codered: hi
14:08  codered: how can i check whats on git
14:09  albel727: ilogik: ok, so you see the hash of commit, where the file was deleted? then do "git checkout <hash>~1 -- <file>"
14:12  albel727: codered: you need to be a little more specific. define "check what's on git".
14:15  codered: is ther a search index?
14:15 --- RichiH_ is now known as RichiH
14:15  codered: online?
14:15  codered: i want to check what programs/software people have made and put on git
14:16  nizze: codered: github.com
14:24  patrikf: codered: there's no such index. not a complete one, at least
14:24  Guthur: anyone using msysgit? I am getting authentication fail when trying to push over https
14:24  Guthur: I could clone the repo fine
--- Log closed Tue Nov 09 14:30:07 2010
--- Log opened Tue Nov 09 14:30:30 2010
14:30 --- Users 718 nicks [0 ops, 0 halfops, 0 voices, 718 normal]
14:30  patrikf: ilogik: or git checkout <commit> <file> if you want to overwrite the currently checked-out copy
14:31  Guthur: patrikf: It can wait until I get home, I'll try https there as well to satisfy my own curiosity
14:31  ilogik: patrikf: thanks (i just piped the output from show :)
14:32  patrikf: Guthur: now I'm curious too, notify me of your results
14:32 --- Channel #git was synced in 135 seconds
14:33  Guthur: patrikf: will do
14:34  LiamH: What is the remedy for a non-responsive git?  Doing a git pull, it just hangs.  I'm working from the filesystem (AFS) and I can see the repository files with an ls just fine.
14:35 --- g0bl1n_ is now known as g0bl1n
14:39  charon: LiamH: pull is fetch+merge (conceptually). maybe the fetch part is hanging waiting for the remote end to answer?
14:39  wereHamster: LiamH: what about a 'git fetch', does it hang, too?
14:39  LiamH: yes git fetch is hanging
14:40  wereHamster: LiamH: and 'git ls-remote origin' ?
14:40  LiamH: charon: the remote end could be hanging, but I can do an ls and see the files no problem
14:40  LiamH: git ls-remote origin
14:40  LiamH: 545630049302df7580fbec8f04656d51e0f8a876	HEAD
14:40  LiamH: 545630049302df7580fbec8f04656d51e0f8a876	refs/heads/master
14:42  chronos: someone have idea of what happens with that: http://dpaste.de/dk4W/
14:42  chronos: I tried clone a repo from github too, not work
14:43  charon: LiamH: in that case define "hang". it's actually possible (through a flaw in the negotiation) for the two to talk to each other for a few minutes trying to find common history. if that's the issue, then a clone will enter the "receiving objects stage" very quickly.
14:44  LiamH: charon: I've waiting 5+ minutes with nothing happening.  No output, no shell prompt.  Is there some verbosity setting which will tell me about the progress in negotiations if that's what's happening?
14:45  SethRobertson: LiamH is your remote URL an AFS url or a ssh or git url?
14:45  SethRobertson: LiamH: `GIT_TRACE=1 git <command>` will provide some tracing
14:45  SethRobertson: strace -fF git <command> will provide other
14:45  LiamH: SethRobertson: it's on an AFS filesystem
14:47  LiamH: With the 'GIT_TRACE=1 git pull', it hangs at this line: trace: run_command: 'rev-list' '--quiet' '--objects' '--stdin' '--not' '--all'
14:47  sylr: Hi
14:48  sylr: I did a push force-update that I should not have done on my origin repo
14:48  SethRobertson: chronos: Are you behind a proxy?  Can you `ping github.com`?
14:48  sylr: can i undo the push using reflog ?
14:48  sylr: origin is a bare repo (no work tree)
14:48  SethRobertson: You cannot undo a push, however you can undo your rebase (or whatever) and then re-push the original head
14:48  SethRobertson: Oh, on the upstream repo?  I'm not sure.  You'll have to check
14:49  sylr: $ git reflog
14:49  sylr: cb11874 HEAD@{0}: push
14:49  sylr: 6862085 HEAD@{3}: r173247
14:49  sylr: yeah on the origin repo
14:49  SethRobertson: Well, use gitk to look at 6862085 and see if it looks good
14:49  chronos: SethRobertson: can't, and yes, probably behind a proxy
14:49  LiamH: strace hangs in the middle of a line: [pid  2104] read(5,
14:50  LiamH: after a bunch of output
14:50  charon: LiamH: so have you tried the cloning?
14:50  SethRobertson: LiamH: If you say `strace -o/tmp/tr -fF git <command>` you can save the output.  Specifically, we'd like to know what file descriptor 5 belongs to
14:51  SethRobertson: LiamH: Another option is to copy the repo over AFS to a local directory and then try cloneing that
14:51  chronos: well SethRobertson , the guys here say that I'm not behind a proxy ...
14:51  LiamH: the previous line is [pid  2104] read(5, "ACK 349e5c06528b52015745e3fa8012"..., 52) = 52
14:52  SethRobertson: chronos: Well, if you cannot ping you are not going to be happy.  That networking problem needs to be resolved, or proxy configuration set up.
14:53  LiamH: SethRobertson: OK, I am copying over the repo now.
14:54  chronos: :\
14:54  chronos: well, i'm downloading packages.
14:54  albel727: sylr: after you ensure, that 6862085 looks good (with gitk or just "git log 6862085"), you can try "git reset <branch> 6862085" or "git update-ref refs/heads/<branch> 6862085" (in the origin repo, ofc)
14:54  sylr: ok thanks
14:55  Yotson: apt-get install gitweb
14:55  Yotson: crap. sorry.
14:56  albel727: chronos: can you ping google.com? if not, it sounds like a case of too restrictive firewall to me. git:// protocol uses a non-popular port. try cloning via http://. (http://git.gitorious.org/gitorious/mainline.git)
14:56 * FauxFaux ponders a scriopt that adds varying whitespeace to the end of your commit messages to ensure the first 4 digits of the hash are always b00b.
14:56  SethRobertson: chronos: If you can download from the internet but cannot ping or use git, then you are either behind a proxy or a firewall is blocking the packets.  You need to ask locally
14:57  albel727: FauxFaux: haha
14:57  chronos: albel727: what is the port albel727 . I'm certain that I'm behind a very restrictive firewall :)
14:57  chronos: google don't ping too
14:57  chronos: and clone via http doesn't works too
14:57  chronos: same error
14:58  albel727: chronos: git:// uses 9418 afaik
14:58  SethRobertson: Can you browse the internet with your browser?
14:58  chronos: hehe, can
14:58  chronos: I can
14:58  SethRobertson: Then check your browsers proxy configuration
14:58  albel727: chronos: does it have proxy configured?
14:59  chronos: nops albel727 , SethRobertson .
14:59  chronos: probably guys here configured some transparent proxy, we don't need to configure anything in machines, vms, browsers, etc
14:59  SethRobertson: Can you point your browser at the gitorious URL pasted above?
15:00  albel727: chronos: ok which browser do you have?
15:00  ScottO_: any submodule experts in here?
15:00  albel727: SethRobertson: it won't show anything, will it?
15:00  albel727: ScottO_: just ask away. maybe someone answers.
15:00  ScottO_: i cant find a single tutorial on git submodules
15:00  SethRobertson: ScottO_ I am an expert in an alternative to submodules: gitslave (http://gitslave.sf.net)
15:00  ScottO_: all the github pages about it are dead
15:00  SethRobertson: You cannot have googled very hard
15:01  ScottO_: SethRobertson: what else is there to google other than 'git submodules'
15:01  albel727: ScottO_: start with this http://progit.org/book/ch6-6.html
15:01  ScottO_: seems pretty straight forward
15:01  SethRobertson: "git submodules tutorial"
15:01  SethRobertson: The first result is live
15:02  chronos: firefox, ie, chrome
15:02  SethRobertson: However, depending on what you are trying to do, `git-subtree` or gitslave might be better for you.  Or might now
15:02  chronos: albel727: ^
15:02  ScottO_: im finding it very common to have projects within projects
15:02  ScottO_: and then i have to update the one thats within
15:02  SethRobertson: ScottO_: Are your subprojects under local development?  Do you branch, tag, etc them all at the same time?
15:02  ScottO_: until now ive been tellign git to ignore those directories
15:03  ScottO_: SethRobertson: no, they are pretty much plugins developed by others
15:03  ScottO_: i may make an occasional tweak to get one working correctly with my project
15:03  SethRobertson: Then submodules may be for the best
15:03  ScottO_: ok thanks
15:03  ScottO_: ill read up
15:04  albel727: chronos: ok, suppose you open firefox. tools -> options -> advanced tab -> network subtab -> settings.
15:04  ScottO_: any major developments in software that can be run locally to provide an inter-office github like environment?
15:05  albel727: chronos: 2 questions. a) does firefox have access to internet b) what is selected "no proxy"/"auto-detect"/"system settings", etc?
15:06  chronos: albel727: in all 3 browsers and in windows system configurations doesn't have a proxy configured.
15:07  fr0sty: ScottO_: gitolite
15:07  albel727: chronos: so "no proxy" it was, then?
15:07  albel727: chronos: really strange
15:07  fr0sty: there is not the slick web-interface, but it is great for hosting multiple repositories with addess restrictions.
15:08  albel727: chronos: I think, nobody besides your local sysadmin will help you, then =/
15:08  chronos: yes albel727
15:08  chronos: direct with internet
15:08  chronos: no proxy
15:09  chronos: albel727: er, is a little complicated... take too much time to any infra-structure action here hehe
15:09  ScottO_: fr0sty: this isnt a web interface is it?
15:09  chronos: but I think that I'll need to ask guys aniway
15:09  albel727: chronos: yeah, probably. you have firewall installed locally, maybe?
15:09  fr0sty: ScottO_: gitolite just manages repositories.
15:10  fr0sty: something like CGit or gitweb will do the 'web-interface' part.
15:10  ScottO_: fr0sty: im lookign for soemthing to avoid paying for github that i can run on a local server
15:10  fr0sty: ScottO_: what features do you need?
15:11  ScottO_: Cgit looks nice
15:11  ScottO_: ive been using viewgit
15:11  fr0sty: ScottO_: how big is your organization?
15:11  albel727: chronos: then it would explain, why one program can access internet, and another - can't. in that case, you'll need to add permissions for git executables (like git-remote-http, etc)
15:12  ScottO_: fr0sty: fairly small
15:12  fr0sty: so small that you have no budget?
15:12  ScottO_: fr0sty: me and maybe another
15:12  ScottO_: fr0sty: correct
15:12  fr0sty: $12/mo shouldn't be breaking anyone's bank.
15:12  chronos: albel727: nop
15:12  fr0sty: brown-bag it for two days ;-)
15:12  chronos: is company firewall.
15:13  ScottO_: suppose i could talk them into it
15:13  albel727: chronos: then I'm out of ideas =/
15:13  helo: if you're already broke, even $1/mo is too much
15:13  fr0sty: gitolite is really good software and any of the various web interfaces are at least passable.
15:13  helo: it is possible to have negative money :)
15:13  fr0sty: github has a lot of 'cool' that you won't be able to replicate easily or cheaply.'
15:14  fr0sty: and if you have only one other collaborator you could probably survive without anything but git+ssh and use gitk for visualization.
15:14  chronos: albel727: I'll set up git here in vm and if locally not works need to ask permission for ports, but thx very much to help :)
15:17  gc: hi, is it possible to git-clone only the master branch ?
15:17  gc: didn't find that in manpage
15:17  ScottO_: fr0sty: gitk wont work over samba
15:18  ScottO_: fr0sty: i have a local server for development and experienced nothing but problems when trying to use gitk over a samba share
15:18  ScottO_: windows desktop to debian server
15:25  Adri2000: I'm merging a branch "origin" into my "master" branch, and some files have been removed from origin; these files are in .gitignore, and I'd like git to keep them locally when merging
--- Log closed Tue Nov 09 15:30:40 2010
--- Log opened Tue Nov 09 15:31:01 2010
15:31 --- Users 719 nicks [0 ops, 0 halfops, 0 voices, 719 normal]
15:31 --- _dels is now known as dels
15:31  ScottO_: fr0sty: any ideas on the whole samba and gitk thing?
15:32  Form: say, how do you folks name branches related to issues from a tracker?
15:32  ScottO_: fr0sty: or git-gui rather
15:32  curtana: bug_xxx_description
15:33  Form: curtana: no prefix?
15:33 --- Channel #git was synced in 133 seconds
15:33  curtana: bug_ is the prefix :)
15:33  Form: right
15:33  Form: what about using slashes in branch names?
15:33  Form: I'm looking at the git-flow model for some inspiration now
15:34  SethRobertson: My group does not have branches for bugs.  Instead we put the bug info in the commit and have the receive hooks which sends email also send properly formatted email to the bug tracker so that the commit goes into the ticket
15:34  SethRobertson: Don't use slashes in branch names
15:34  Form: how can you tell if a bug is closed if it requires multiple commits?
15:35  curtana: slash might confuse some users
15:35  Form: a merge commit provides some information on which commits are related to the issue
15:35  SethRobertson: Because you can annotate the bug number with a "R" which tells the script/ticket program to resolve the ticket
15:35  chronos: someone know how enable gitorious in a directory under apache root?
15:35  SethRobertson: Otherwise it is just a commit which is put in the ticket which remains open
15:35  Form: SethRobertson: ah, that makes sense
15:35  fr0sty: ScottO_: why don't you work on a local clone of the repository?
15:35  Form: we used to have that on svn with Lighthouse or something
15:35  ScottO_: fr0sty: because a local clone wouldnt be accesible by apache
15:36  ScottO_: and by local i assume you mean local pc
15:36  fr0sty: why do you care? you just want gitk/git-gui to work...
15:36  ScottO_: the repo sits on a local server curently
15:36  ScottO_: fr0sty: cant exactly write and test code without a webserver to run it on
15:37  ScottO_: and im not running apache on my desktop
15:37  fr0sty: ScottO_: work local and 'deploy' with whatever tool you currently use to the webserver.
15:38  fr0sty: what OS is on the server?
15:38  ScottO_: its linux
15:38  fr0sty: if the repository is there run gitk/git-gui on the server and forward it to your display.
15:38  fr0sty: do you have Windows on the desktop?
15:38  ScottO_: another weird configuration :/
15:38  ScottO_: yes
15:39  fr0sty: nothing weird.
15:39  fr0sty: how do you do work on the server currently?
15:39  ScottO_: through ssh
15:39  fr0sty: what terminal?
15:39  ScottO_: and samba for files
15:39  ScottO_: putty
15:40  SethRobertson: You have linux on your desktop and on the server and you are using putty?  Weird
15:40  ScottO_: no the other way around
15:40  ScottO_: linux server windows desktop
15:40  ScottO_: i use putty to use git
15:40  ScottO_: samba to access files with my IDE
15:40  SethRobertson: ah, that is fine then
15:41  ScottO_: tempted to use NFS or SSHFS for windows
15:42  ScottO_: but not sure about git-gui and gitk on that
15:42  fr0sty: ScottO_: why would git-gui care what Filesystem you use?
15:42  ScottO_: fr0sty: maybe you can tell me, but git-gui get confuse when i use it over samba
15:42  fr0sty: 'gets confused'?
15:43  ScottO_: file attributes
15:43  Adri2000: rewrite of my previous querstion: is there a way to tell git "stop tracking this file" ? so that when people then do git pull, git keeps the file locally
15:43  ScottO_: fr0sty: git-gui status wont return the same info as git status on ssh does
15:43  Nacho: OLA
15:43  SethRobertson:  Adri2000: git rm --cache filename; echo filename > .gitignore; commit
15:43  Nacho: VIVA ESPAÑA
15:44  ScottO_: fr0sty: obviously windows and linux dont play nicely
15:44  fr0sty: git doesn't really track attributes. (besides 'executable')
15:44  ScottO_: fr0sty: well when git-gui shwos files that have changed when they havent, thats what concerns me and why is toppe dusing git-gui over SMB
15:44  Adri2000: SethRobertson: I tried that, but git pull removed the file :(
15:45  SethRobertson: git pull on a different repo you mean?  It might.  Once.  But in the future it would not do so
15:45  fr0sty: ScottO_: get X11 software for your desktop: (exceed, xming, or others) and run git-gui/gitk on the server directly.
15:45  ScottO_: suppose i could try tortoisegit
15:46  Adri2000: SethRobertson: yes, on a different repo
15:46  SethRobertson: Or clone and develop locally and push/pull to the upstream or...
15:47  ScottO_: not gonna be using apache on my desktop
15:47  SethRobertson: I think we already had this discussion.  You don't have to
15:48  ScottO_: SethRobertson: yes i would, otherwise i would have to push to the apache server each time i made a change
15:48  SethRobertson: When you want to test, either push (with a hook on the upstream) or pull from the upstream, or use rsync, or...  and then test
15:48  ScottO_: not goign to be pushing that frequently
15:48  ScottO_: tryign to make thigns easier, not more complicated
15:48  SethRobertson: So use rsync intead
15:49  ScottO_: i would still have to run rsync before each broswer reload
15:49  ScottO_: which would be excessive
15:49  SethRobertson: People have to "compile" all of the time to make a program available for testing.  Your version of compiling is rsync.  Your IDE might even be able to do it for you.  You can even have it run automatically every 15 seconds.
15:49  ScottO_: i like having my working copy on the apache server
15:50  ScottO_: SethRobertson: web work doesnt typically involve compiling
15:50  SethRobertson: So?
15:50  SethRobertson: Well, you have three options. Work locally and deploy.  Get X running locally and have the programs display using that.  Switch to NFS or some other filesystem which doesn't suck.
15:51  ScottO_: tempted to do the latter
15:51  fr0sty: fourth option: ditch MS and run Linux on the desktop.
15:52  ScottO_: fr0sty: not gonna happen
15:52  ScottO_: unfortunately
15:52 * fr0sty shrugs...
15:52  SethRobertson: Or run linux in a VM, or run windows in a VM
15:52  ScottO_: SethRobertson: :P
15:52  fr0sty: or have two computers and a KVM
15:53  Dreamer3: ScottO_: why
15:53  ScottO_: Dreamer3: "why" is not a proper sentence
15:53  Dreamer3: god, microsoft is so fuckign awful
15:53  ScottO_: how am i to know what you are talking about
15:53  fr0sty: or rDesktop and a windows machine in a closet.
15:53  Dreamer3: ScottO_: see my followup comment :)
15:53  ScottO_: Dreamer3: im not getting the context
15:54  ScottO_: oh ok
15:54  Dreamer3: n/m then
15:54  ScottO_: does git-gui work over NFS?
15:57  fr0sty: what are you using git-gui for?
15:57  ScottO_: it has more than one use?
15:58  ScottO_: i would have been using git-gui instead of git from bash
15:58  ScottO_: it wasnt for the issues with samba
16:00  ScottO_: oh cool apparently tortoisegit uses ssh
16:01  shruggar: ScottO_, I just skimmed the conversation but missed this part: Why can't you run an X Server on windows?
16:01  ScottO_: shruggar: its annoying
16:01  ScottO_: why do i want to work in windows within windows within windows?
16:02  fr0sty: you prefer to run linux applications on a compatability layer on Windows?
16:02  fr0sty: that's less annoying?
16:02  shruggar: Perhaps you don't understand the concept: I'm not talking about a desktop which acts like a window and has other windows inside it, I'm talking about something which just runs on windows and allows X11 windows to be drawn as if they were windows windows
--- Log closed Tue Nov 09 16:07:45 2010
--- Log opened Tue Nov 09 16:08:10 2010
16:08 --- Users 724 nicks [0 ops, 0 halfops, 0 voices, 724 normal]
16:08  ScottO_: if i could get away with just putty that would be ideal
16:08  ScottO_: so ill need cygwin also?
16:09  shruggar: well you only need to actively use putty, but you will need to install cygwin, yes. I assume other X servers exist, which don't require cygwin, but I'm not familiar with them
16:09  shruggar: (and I'm not familiar with the cygwin one anymore, honestly, I just know I've used it in the past)
16:10 --- Channel #git was synced in 140 seconds
16:10  shruggar: oh, of course, that was what needed tweaking: some security setting needed to be changed to allow connections from arbitrary clients, since putty is not known by cygwin. I don't remember how to do that. (your firewall should still be configured to block connections from the outside, obviously)
16:11  ScottO_: oh... why cant this be easier :P
16:11  ScottO_: too many hurdles
16:11  rgr: which is the preferred way to simpy set all files back to HEAD throwing away all local uncommited changes?
16:12  curtana: git checkout -f
16:12  wereHamster: rgr: git reset --hard
16:12  shruggar: this was how it worked maybe 5-10 years ago. There may very well be a simpler way now
16:12  wereHamster: curtana: wrong answer ;)
16:12  curtana: it doesn't?
16:12  curtana: what is the difference? i start using checkout once it existed
16:12  wereHamster: curtana: yours would copy the files from the index into the working tere
16:12  wereHamster: but he said HEAD
16:13  shruggar: how about "git stash", so he can get it back if he changes his mind?
16:13  curtana: ahf, i guess i tend not to use it with stuff in the index
16:13 --- bittwist_ is now known as bittwist
16:23  pigdude: How do I view a history of diffs for one file?
16:24  pigdude: eh why bother I'll forget in a week anyway
16:24  curtana: perhaps some combination of 'git log -p file' and filterdiff
16:24  pigdude: curtana: that is it, the -p option
16:25  pigdude: curtana: there are not so many revisions for this file to make this unbrowseable
16:25  curtana: i gives you the whole patch for the commit that touched the file tho, not just the diffs of the fiel
16:26  pigdude: thanks curtana!
16:29  jack_spratt: Hi. I want a git repository that tracks changes to a website, the basedir being the httpdocs folder. Therefore I can't rename it to httpdocs.git as this would break the site. but without the .git extension I cant add it locally from the remote server. How can I get around needing a project folder ending with .git?
16:32  albel727: jack_spratt: symlink?
16:32  wereHamster: jack_spratt: why can't you add it?
16:32  wereHamster: git doesnt' care whethre a directory has the .git suffix or not
16:34  jack_spratt: wereHamster: git remote add origin 123.123.1.123:/var/www/vhosts/domain/subdomains/test/httpdocs gives "fatal: Not a git repository (or any of the parent directories): .git"
16:35  jack_spratt: thats what I'm referring to
16:36  wereHamster: jack_spratt: did you create that repository on the server?
16:37  cbreak_work: jack_spratt: that's supposed to be on a server?
16:37  jack_spratt: wereHamster, the url is accurate, and the httpdocs folder has a .git folder inside it
16:37  cbreak_work: you did that wile you were inside a git repo, right? :)
16:37  wereHamster: jack_spratt: does it work ifyou add that .git to the url?
16:37  jack_spratt: I'll check
16:37  wereHamster: as in, git remote add ... ...test/htdocs/.git
16:38 * cbreak_work suspects that he is not in a repository locally
16:38  wereHamster: oh. right
16:39  jack_spratt: cbreak_work: to be sure I just created a new dir locally, did git init inside it, then reran  the git remote add command, no errors this time
16:40  jack_spratt: so now test it with pull?
16:40  albel727: jack_spratt: so, you should have just "git clone <url>". git pull wont work so easily.
16:41  jack_spratt: albel727, instead of git remote add? or now that I've already performed that?
16:41  wereHamster: instedad
16:41  jack_spratt: I tried that but it asked for a pwd that I didn't have
16:42  jack_spratt: I set up the remote repository, but as you can tell, I don't really know what I'm doing
16:42  wereHamster: if you don't have the password then you cant fetch..
16:42  albel727: jack_spratt: that's because you're using ssh protocol to connect. what else did you expect?
16:42  jack_spratt: but which password?
16:42  jack_spratt: I tried the root pwd
16:42  jack_spratt: it didnt work
16:42  wereHamster: can you ssh into the server, like 'ssh 123.123.1.123' ?
16:42  jack_spratt: yes
16:43  jack_spratt: I'm connected to the remote server via ssh right now
16:43  albel727: jack_spratt: password is asked of you?
16:43  wereHamster: jack_spratt: then you can clone it. git clone 123.123.1.123:/var/www/vhosts/domain/subdomains/test/httpdocs
16:43  jack_spratt: wereHamster: from inside what local dir should I run that?
16:43  wereHamster: jack_spratt: any local dir
16:43  albel727: jack_spratt: any dir
16:44  albel727: jack_spratt: preferably not the one, in which you did "git init"
16:44  jack_spratt: ok
16:44  cbreak_work: you should get pubkey auth set up :)
16:44  cbreak_work: (as next step)
16:45  albel727: cbreak_work: oh come on, let us figure out simple cloning first =)
16:45  jack_spratt: sorry, newb :)
16:45  wereHamster: jack_spratt: http://progit.org
16:45 --- shennyg_ is now known as shennyg
16:45  albel727: jack_spratt: cloning worked?
16:45  jack_spratt: result of the clone command is 'jack@109.200.3.194's password' there is no remote user jack, jack is my account on local machine
16:46  wereHamster: jack_spratt: you said 'ssh 123.123.1.123' worked..
16:46  wereHamster: so does it or does it not?
16:46  albel727: (http://progit.org/book/ to be precise)
16:47  jack_spratt: no I ssh in as root
16:47  wereHamster: jack_spratt: then adjust the clone url appropriately
16:47  jack_spratt: using ssh root@123.123.1.123
16:47  jack_spratt: ok
16:47  albel727: jack_spratt: git clone root@123.123.1.123:/var/www/vhosts/domain/subdomains/test/httpdocs
16:47  wereHamster: just FYI, git can't read your mind
16:48  wereHamster: and you shouldn't log in as root anyway..
16:48 * albel727 agrees with wereHamster
16:48  jack_spratt: "remote: Counting objects: 15779, done." looks promising...
16:48  albel727: sure it does
16:49  jack_spratt: assuming it copies correctly right now, then from this point forward I can use push and pull commands from within this local directory and it will send and receive from remote dir?
16:49  albel727: jack_spratt: yes. but certainly not in the way you imagining it. you need to read faq non-bare
16:50  jack_spratt: ok
16:51  albel727: jack_spratt: https://git.wiki.kernel.org/index.php/GitFaq#non-bare
16:51  jack_spratt: albel727, so I should create user accounts for each project user on the remote server so they can successfully clone and access the repo?
16:51  cbreak_work: wereHamster: there was some list of cracked accounts of some british government agency on slashdot
16:51  jack_spratt: albel727: thanks, jus the link I need :)
16:51  cbreak_work: admin had the password "ppp" ;/
16:51  cbreak_work: ... people are just braindead when it's about security
16:52  cbreak_work: jack_spratt: either make local users on the machine (and then you have to make the repository use shared permissions)
16:52  cbreak_work: or you use something like gitolite for permission control
16:52  albel727: jack_spratt: if you have many people, I'd use gitolite.
16:52  cbreak_work: I agree.
16:54  albel727: jack_spratt: but I imagine, something, like apache server, requires from /var/www/vhosts/domain/subdomains/test/httpdocs to be under root ownership, so the point with several users might be moot.
16:55  cbreak_work: why would a web browser care about file ownership?
16:55  jack_spratt: albel727, OK, so the best option is probably creating users for each contributor (theres only a few) on the remote server?
16:55  albel727: cbreak_work: dunno. it's just that I seem to recall meeting a guy here with that exact setup (html files deployment with git).
16:56  cbreak_work: as long as it can read it it's ok. and if it can read files that belong to root, then it's either root and can read everything (and is a gigantic security hole), or it's some other user, and the owner is irelevant ;)
16:56  albel727: cbreak_work: ...and the guy had to use root for some reason
16:56  cbreak_work: ... lack of brains...? :)
16:56  albel727: haha
16:57  cbreak_work: maybe it was a honey pot.
16:58  albel727: jack_spratt: well, if you guys don't mind being continuously asked for passwords (which will happen, if you don't intend to setup public key ssh access), then even a single non-root (e.g named "git") user would be enough.
16:58  jack_spratt: albel727, hm, I'd prefer to use ssh keys. is this hard to configure on the remote server?
16:59  cbreak_work: no.
16:59  NfNitLoop: Yay, just made our SVN repo read-only. :)
16:59  cbreak_work: unless you use windows
16:59  jack_spratt: I dont
16:59  albel727: jack_spratt: (if you intend to setup public key access, then single git user is actually ok, too)
16:59  cbreak_work: it was pretty much automatic on my server (already set up)
16:59  cbreak_work: gitolite did the rest
16:59  cbreak_work: note that gitolite has it's own repositories it manages
17:00  cbreak_work: it will not manage the repository you already have on the server
17:00  jack_spratt: albel727, Its not public, its for a private project
17:00  cbreak_work: and you can also not just put hooks into them (there are other ways though)
17:00  albel727: cbreak_work: problem is, he wants a web deployment on push. using gitolite would be hard for that, wouldn't it?
17:00  cbreak_work: no idea. damn web devs...
17:00  cbreak_work: aren't there any real deployment tools?
17:00  albel727: ofc, nothing, that can't be done with a proper hook
17:00  albel727: but still too much pain for a newbie
17:02  albel727: cbreak_work: btw, what's the problem with ssh keys and windows? I pretty much use it effortlessly every day.
17:02  cbreak_work: took me half an hour to get it to work on one machine
17:02  cbreak_work: and it didn't work on the other afterwards
17:02  cbreak_work: putty and that tortoise git thing couldn't find the private key
17:02  albel727: strange =/
17:02  albel727: cbreak_work: oh, putty
17:02  cbreak_work: and I could not connect to an ssh-agent either
17:02  albel727: that explains it
17:03  albel727: I prefer to use ssh from msysgit.
17:03  cbreak_work: msysgit didn't search in %USERPROFILE%
17:04  albel727: cbreak_work: huh? I have my ssh config in %userprofile%/.ssh
17:04  cbreak_work: eventually I worked out that msysgit searches in %HOMEDRIVE%%HOMEPATH%\.ssh\
17:04  cbreak_work: and not in %USERPROFILE%
17:04  cbreak_work: and in putty I could set a path in the settings
17:04  albel727: haha, well maybe
17:04  cbreak_work: needlessly to say that either used different private key formats
17:04  albel727: isn't that the same thing, though?
17:04  cbreak_work: luckily I could convert it
17:04  cbreak_work: no, it's not
17:04  cbreak_work: different variables
17:05  cbreak_work: point to different paths too
17:05  cbreak_work: don't ask me why, I am a mac person
17:05  cbreak_work: anyway, that all was just for the client
17:05  albel727: yeah, different private key formats. it's true. puttygen or something handles this, iirc.
17:05  cbreak_work: setting up gitolite on windows... or even public key authentification with ssh server...
17:05  cbreak_work: I don't even dare
17:06  Jygga: pageant is pretty easy to set up
17:06  albel727: cbreak_work: gitolite on windows? I wouldn't dare either. ssh server on windows... well I could try, but not if I can help it.
17:06  Zelfje: hi, will it give problems if i install git-server on top of the same repo as svn?
17:07  albel727: well yeah. it's pretty much run it, and you're done.
17:07  cbreak_work: what's git-server?
17:08  jack_spratt: does anyone have a link to a guide/howto for setting up ssh key auth with git on the remote server?
17:08  wereHamster: jack_spratt: google has
17:08  cbreak_work: pretty much an ssh question
17:08  cbreak_work: nothing to do with git
17:08  albel727: jack_spratt: if you don't work with gitolite or anything, then it's just plain ssh auth
17:09  albel727: jack_spratt: (cbreak tells the truth)
17:09  jack_spratt: albel727, OK great, thanks!
17:09  cbreak_work: all you have to do is change .ssh/authorized_keys if your ssh server is configured sanely and for pka
17:10  jack_spratt: cbreak, awesome
17:10  albel727: (captain obvious to the rescue: pka - public key authentication)
17:10  cbreak_work: my home computer has disabled pw auth :)
17:10  Zelfje: gitiosis?
17:10  Zelfje: not sure if there are more variants
17:11  cbreak_work: gitolite. get it.
17:11  albel727: cbreak_work: haha, cool. how is that possible? =)
17:11  cbreak_work: gitosis is ancient
17:11  cbreak_work: albel727: /etc/sshd_conf
17:11 * albel727 concurs with cbreak
17:11  cbreak_work: quite well commented
17:11  Zelfje: thx cbreak_work
17:12  Zelfje: will git and svn bite each other if they share same repo?
17:12  fr0sty: Zelfje: what do you mean 'share'?
17:12  cbreak_work: they can't share the same repo
17:12  cbreak_work: git uses a git repository
17:12  cbreak_work: svn uses an svn repository
17:12  Zelfje: allright
17:13  albel727: cbreak_work: ah, you mean you have disabled pw auth on server. I thought, you did that on client.
17:13  cbreak_work: that's like asking "will linux and windows bite each other if they share a partition"
17:13  cbreak_work: most likely they will :)
17:13  cbreak_work: albel727: that too.
17:13  cbreak_work: (my client is also an ssh server)
17:14  cbreak_work: ah well, enough work done for today :)
17:14  albel727: cbreak_work: well, configs for ssh and sshd are different.
17:14  cbreak_work: yes.
17:14  cbreak_work: but the ssh client will not try password auth if the server doesn't ask for it
17:14  cbreak_work: so it doesn't have to be disabled there
17:14  albel727: so the question is more like "is it possible to disable pwd auth for ssh", and if yes, why? =)
17:18  wereHamster: yes it is.
17:18  wereHamster: and why? because PKs are more secure :)
17:19  albel727: wereHamster: well, I still see no reason to deny yourself possibility to log into server with a password, if server permits it. =)
17:22  parasti: albel727: but when you permit it, it's not just you who now has that possibility :P
17:25  albel727: parasti: well sometimes I might want to login to some server which requires password for authentication, and which I have no control over. ssh <server> will be miserably failing, and it probably will take me too much time to remember, that is's just because I have forbidden my ssh client to use pwd auth for some reason. =P
17:26  bnovc: I have a repository that I can't repack because I have a ulimit of 1024 on th emachine and it tries to open too many files
17:26  bnovc: is there any way to avoid this without repacking it on another machine with a higher limit
17:28  nakkor: is there a way to add a gitignore file to a repo that isn't named .gitignore?  Something like core.excludesfile but for the repo?
17:29  albel727: bnovc: hmm, now that is really troubling. did you try playing with git repack's options. like --max-pack-size=<n>?
17:29  albel727: bnovc: also try "git config pack.threads 1"
--- Log closed Tue Nov 09 20:13:55 2010
