--- Log opened Thu Oct 21 00:00:08 2010
00:01 * Spidey01 uses C-j in place of C-a
00:10  frogonwheels: Spidey01: !?
00:10 * frogonwheels is unsure what to do with a wagon.
00:10  Spidey01: surely a frog on wheels must like wagon flies, no? Or do you prefer autoflies for the oily flavour?
00:11  frogonwheels: ahhh.
00:11  Spidey01: I have a sick, strange, perverted, and uniquely non sensical sen
00:11  Spidey01: form of humour. Damn return key.
00:12  Shapeshifter: How can I open two files in a tab, split vertically using --remote-* ?
00:12  Shapeshifter: If I just do --remote-tab file1 file2, there's a tab for each file
00:12  Shapeshifter: while I want a new tab and file1 | file2, split vertically
00:13  Spidey01: Shapeshifter: just send the actions you would use in vim itself
00:14  Shapeshifter: Spidey01: as in, remote-send?
00:14  ormaaj: How can you execute an external command and make the output actually show up in a new buffer instead of just a temporary window? I want something like :!curl -u root 192.168.1.1/common.js
00:15  Raimondi: ormaaj:  :h :Redir
00:15  Raimondi: It's   :h :redir
00:15  Spidey01: Shapeshifter: that's likely the command I'm thinking of (I remember there was one that could either send keystrokes or :commands)
00:16  Shapeshifter: Spidey01: I see
00:16  frogonwheels: ormaaj: try  :help :read!
00:17  Spidey01: I rarely use it, but I think my vimrc has a Bang2Buffer() functions that works like executing :!cmd in a scratch buffer
00:18  ormaaj: So it's like redir if you want to send something to a register or file, read for a buffer
00:18  frogonwheels: ormaaj: :redir   is for vim command output
00:19  Shapeshifter: Spidey01: well, vim --servername "MULTI" --remote-send  ":e ${couple[@]}" just prints me ":e file1 file2 file3" in the prompt of the vim window but doesn't "hit enter" to actually do it. sending a \n doesn't work
00:19  ormaaj: aah
00:19  Spidey01: Shapeshifter: try adding a <cr> to the end, e.g. ":e ${couple[@]}<cr>"
00:19  frogonwheels: ormaaj: eg  :redir @a | silent hi | redir END          <--  put the output of  :hi  into  register a
00:20  Shapeshifter: Spidey01: thanks, that works
00:20  Spidey01: I figured that out a few months ago, when planning to mate vim to an external tags browser / project manager thingy I was trying to write
00:21  Shapeshifter: mhh
00:22  ezzieyguywuf: how do I include ( in a search regexp?
00:22  ezzieyguywuf: I'v tried \( to no avail, says that its unmatched
00:22  Raimondi: Don't escape it
00:22  dindinx: ezzieyguywuf: (
00:25  ezzieyguywuf: yay that works!
--- Log closed Thu Oct 21 00:31:45 2010
--- Log opened Thu Oct 21 00:32:04 2010
00:32 --- Users 573 nicks [0 ops, 0 halfops, 0 voices, 573 normal]
00:32  Spidey01: Assuming all the code is properly formatted, it works great
00:32  Spidey01: ezzieyguywuf: ed/ex/vi/vim by default use a more basic regexp than that
00:33 --- Channel #vim was synced in 80 seconds
00:34  ezzieyguywuf: can I do a :s/{a,list,of,items}/self.<matched_item>/g ?
00:34  Spidey01: It's also why I regularly find myself using grep -E / egrep whenever I want to grep by a more suitable pattern
00:36  KeeperOfTheSoul: is there a prefered shortcut for escape or does everyone just use their own thing?
00:39  Spidey01: if you mean the escape key KeeperOfTheSoul most sane people use the escape key
00:39  KeeperOfTheSoul: Spidey01: but that is so far out of the way?
00:39  spiiph: some people use jj
00:39  Spidey01: Some also remap a key like capslock to escape, which is fine until you use another setup
00:40  Spidey01: KeeperOfTheSoul: once you get used to it, escape is actually great where it is
00:40 * ezzieyguywuf uses jk
00:40  KeeperOfTheSoul: Spidey01: I prefer not to reach half way across my keyboard
00:40  ezzieyguywuf: me neither
00:40  KeeperOfTheSoul: I like to keep my hands on the home row as much as possible
00:40  Spidey01: Kind of like the menubar crap with Apple. Strange but probably a good thing. (Apple likes a big menu bar at top of screen, instead of on each window)
00:41  Spidey01: Home row is overrated.
00:41  ezzieyguywuf: first thing I do when I ssh into a new box is scp my .vimrc over so I can have my inoremap
00:41 --- chocoby is now known as CHOCOBY
00:41  Spidey01: If you can't touch type as fast as you can think, it is the keyboard layout slowing you down, not where your fingers started typing FROM.
00:41  Spidey01: Or your brain perhaps.
00:44  Spidey01: Once you start typing, as long as your able to touch type keys, the position of where your hands started typing from becomes irrelevant, because the only motions needed are to type a given key with the nearest finger. Since you have to move a finger to hit a key, that solves the problem as optimal as it can get without removing fingers from the equation
00:52  KeeperOfTheSoul: Spidey01: its more about minimizing the amount I move my fingers rather than speed
--- Log closed Thu Oct 21 00:58:19 2010
--- Log opened Thu Oct 21 00:58:40 2010
00:58 --- Users 567 nicks [0 ops, 0 halfops, 0 voices, 567 normal]
00:58 --- Server: [pratchett.freenode.net] [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
00:59 --- Channel #vim was synced in 78 seconds
00:59  spiiph: ...and as soon as you start using some of the more complex vim command, that layout quickly becomes quite useless.
01:01  sjl: What's the proper way to "override" commands for a given buffer? :command doesn't seem to want to override built-in.  Is it ":cabbrev <buffer> quit call SomeFunction()"?
01:04  rson: sjl: just an fyi (at least earler today) one of the lines in your plugin has an enormous amount of trailing whitespace if you care
01:04  sjl: rson: Yeah, that was from a patch from someone I merged before.  I fixed it a few minutes ago. :)
01:05  sjl: Also, is there a way to strip leading whitespace from embedded python code, so my indentation doesn't look like crap?
01:06  rson: sjl: not that i know of.  that's always pissed me off too
01:06  rson: i get lost when there is embeded python because i never know what func i'm in
01:06  sjl: rson: Yeah, a simple rule like "strip leading whitespace equal to the indentation of the python statement itself" would be perfect.
01:06  spectie: doesn't 'indent' do that ?
01:06  sjl: I can see how that would make parsing ugly though.
01:07  sjl: spectie: I mean when I'm writing a vim plugin with python code in it... :help indent doesn't really seem like it will help...
01:08  spectie: sjl, i meant the program, not the vim feature
01:09  rson: sjl: i see you've got an option for width of the gundo frames, are you planning on adding an option for which side to open gundo on?
01:09  spectie: but i see it only does C and C++
01:09  rson: spectie: the issue isn't indenting it, it's vim parsing the indented python
01:09  sjl: rson: Hm, never thought of that.  It probably wouldn't be too hard to add.
01:09  viking: i have yet to find a javascript.vim that behaves
01:09  spectie: ah ok
01:10  rson: sjl: i was just going through the plugins that open auxiliary windows like taglist and nerdtree and those types always seem to have that option
01:10  rson: sjl: i really like the diff window too btw, i think that's what does it for me
01:11  sjl: rson: Yeah, it seems reasonable. I just never even thought of it.
01:11  sjl: rson: The diff window is what makes the whole thing actually usable :)
01:13  rson: indeed
01:16  sjl: I'd thinking of adding a 'd' command to 'open a vimdiff of the selected state against the current', but I'm not sure how useful that would be in practice.
--- Log closed Thu Oct 21 01:22:53 2010
--- Log opened Thu Oct 21 01:23:14 2010
01:23 --- Users 568 nicks [0 ops, 0 halfops, 0 voices, 568 normal]
01:24 --- Channel #vim was synced in 79 seconds
01:25  rson: if you get an answer about indenting embedded python, please let me know.  that would be incredibly useful
01:25  sjl: Ugh, Vim's syntax highlighting for .vim files doesn't recognize comments unless they're proceeded by whitespace or ^, but the parser does?
01:25 * sjl sighs
01:26  sjl: rson: Will do
--- Log closed Thu Oct 21 01:53:34 2010
--- Log opened Thu Oct 21 01:53:57 2010
01:53 --- Users 564 nicks [0 ops, 0 halfops, 0 voices, 564 normal]
01:55 --- Channel #vim was synced in 79 seconds
01:57  Raimondi: sjl: I'm not sure, but yu could try with an autocmd
01:57  sjl: Raimondi: Hmm, I didn't think of that.  I'll have to look into it, thanks!
--- Log closed Thu Oct 21 02:21:13 2010
--- Log opened Thu Oct 21 02:21:33 2010
02:21 --- Users 560 nicks [0 ops, 0 halfops, 0 voices, 560 normal]
02:22 --- Channel #vim was synced in 81 seconds
02:25  mcantor: Is there a basic ftplugin/syntax/indent/etc. out there for.. I dunno.. notes?  Word processing?  A to-do list?
02:25  sjl: mcantor: Vimoutliner?
02:26  FernandoBasso: nchaimov: txtfmt is one of them.
02:28  mcantor: sjl: That sounds like a plugin.
02:28  nate-: mcantor: I like vimwiki  http://www.vim.org/scripts/script.php?script_id=2226 (also a plugin)
02:28  sjl: mcantor: Yep, it is.  I assumed your "etc" included plugins :)
02:28  nate-: probably more than you need
02:28  nate-: sjl: just installed gundo, will let you know about any bugs
02:29  nate-: cool plugin btw :)
02:29  mcantor: Yeah, plugin might be overkill.  I'll check out Vimoutliner and vimwiki though.
02:29  sjl: nate-: Thanks!
02:45  rson: sjl: i'll update in the morning but i'll have limited use tomorrow as the vim at work is -python.  i'll have to waste some time in the morning on my server to give you some feedback.
02:46  rson: sjl: btw, do you prefer issues/pull requrests to be opened on bitbucket instead of github?
02:51  mcantor: Are there any gotchas to editing syntax groups on-the-fly in a buffer?
02:51  mcantor: I'm having some weird issues and I'm not sure where my point of failure is.
02:56  sjl: rson: Really? -python?  Am I crazy or is it 2010? :/
02:56  sjl: rson: Issues on BitBucket -- I disabled the GitHub issue tracker to keep everything in one place.
02:56  sjl: rson: Pull requests: either. hg-git is awesome and lets me grab patches from both.
03:04  ezzieyguywuf: how can I match "the last comma" in a substitute expression?
03:05  ezzieyguywuf: or even "the second comma"
03:06  ipkiss: ezzieyguywuf: something like this: ^[^,]*,[^,]*\zs
03:06  ipkiss: oops
03:06  ipkiss: add a comma at the end
03:06  ezzieyguywuf: ok lemme interpret that in my head for a sec
03:07  ezzieyguywuf: but I only want to replace the stuff after and including the second comma.
03:07  ipkiss: that's what \zs is for
03:07  ipkiss: :h /\zs
03:08  ezzieyguywuf: oh wow that works
03:08  ipkiss: another way would be to place everything before the 2nd comma into a group, and use \1 at the beginning of the substitute part
03:08  ezzieyguywuf: I'm gonna have to learn a little more about regexps huh.
03:08  ipkiss: but I find \zs more elegant
03:08  mcantor: Hey, what gives?!  I'm running syn include /usr/share/vim/vim72/syntax/html.vim, and it's running silently with no errors, but when I subsequently run :syn, there are no html syntax elements in the list!!
03:08  ezzieyguywuf: I was in the process of using that second method
03:17  mcantor: Arrgh.  It must be sourcing html.vim successfully, but quitting because current_syntax is already set.
03:18  chrisgeorge: quick question… in vim in there a way to do 'perl-like' variables in a regex to grab a value and replace it in the pattern? like in perl "foo(.*)bar' .* is stored in $1.
03:19  mcantor: chrisgeorge: :he :s
03:19  mcantor: or sub-replace-special
03:19  chrisgeorge: ah great, thank you!
03:21  mcantor: np
03:29  mcantor: How can I query the syntax group of a given line?
03:33  mcantor: rrrrrrrrrrrrgh
03:36  frogonwheels: mcantor: look in :help synidattr  iirc
03:36  frogonwheels: mcantor: errh . ..  bottom of :help synID()     there's an example:  map it to a key :)
03:41  mcantor: frogonwheels: Thank you!!!
03:42  mcantor: HAH!! I DID IT!
--- Log closed Thu Oct 21 04:33:34 2010
--- Log opened Thu Oct 21 04:33:55 2010
04:33 --- Users 551 nicks [0 ops, 0 halfops, 0 voices, 551 normal]
04:35 --- Channel #vim was synced in 76 seconds
04:36  siezer: is there a way to run vimv noninteractively? like... pipe files to it and run commands? I want to find . -name "*.rb" | xargs vim - "gg=G"
04:44  kermit: cool, there was a vi questoin on the RHCE exam
04:44  kermit: but no emacs question :)
04:50  bnguyen: when I use 'gqq' to split current long line, it works just fine with the default textwidth (dont even know what it is), but if I 'set tw=60' before 'gqq', Vim adds some spaces at the beginning of some splitted lines. Anyone know a workaround?
04:52  anon33_: How do I change the directory to where swap files are saved?
04:52  anon33_: (in vimrc)
04:54  jamessan: anon33_: :help 'directory
--- Log closed Thu Oct 21 05:22:28 2010
--- Log opened Thu Oct 21 05:27:48 2010
05:27 --- Users 549 nicks [0 ops, 0 halfops, 0 voices, 549 normal]
05:27  Rakko: godlygeek: works well
05:28  Rakko: use viper-mode :)
05:28  jeffszusz: lol
05:28  jeffszusz: emacs viper mode?
05:28  jeffszusz: how vimlike is it, really, though? :P
05:28  Rakko: I dunno
05:28  Rakko: it uses hjkl^$
05:28 --- Channel #vim was synced in 76 seconds
05:29  ReinH: ugh
05:29  ReinH: lol
05:30  ReinH: or just use vim?
05:30  godlygeek: Rakko: you just do :b foo<CR> and you'll switch to /path/to/afoofile.txt
05:30  Rakko: thanks, gg
05:32  Rakko: oh, exec 9>&1
05:32  Rakko: I think I had tried that but couldn't get it to work
05:33  Rakko: I'm trying to port a program that has a braindead makefile that recompiles every C++ file each time :(
05:34  mcantor: For some reason my cursor is invisible whenever it's on a character in the "Ignore" hilight group.
05:34  Rakko: hmm!
05:34  gkatsev: when using emacs to go into viper mode use this chord: C-x C-c vim CR
05:34  Rakko: hehe
05:35  gkatsev: that is the true major viper mode. not the built-in minor viper mode
05:35  Rakko: oh, I didn't know there were two
05:35  gkatsev: yeah, there are minor and major modes in emacs
05:35  gkatsev: still don't really get the difference
05:36  Rakko: well a minor mode sounds foreboding or depressing, while a major mode sounds happy
05:36  Rakko: oh, now I get the joke. lul ;)
05:37  jeffszusz: c-x c-c exits :P
05:37  jeffszusz: nice job gkatsev
05:37  Zeiris: I've been searching for a while - where's that script that binds F6 and F7 to rotate colour scheme?
05:38  gkatsev: jeffszusz: :P
05:38  gkatsev: Rakko: lol
05:39  Rakko: I'm looking, Zeiris ... I thought I just saw that the other day
05:40  Zeiris: I saw it, used it to get what I wanted in 30s, and then happily forgot it existed :o
05:40  Zeiris: The best tools are always like this :(
05:41  jeffszusz: now i want a t-shirt that says
05:42  jeffszusz: "True Viper Mode: C-x C-c vim <CR>"
05:42  Rakko: Zeiris: hmm, I think I was thinking of this: http://code.google.com/p/vimcolorschemetest/
05:42  Rakko: but that's not a plugin or key binding
05:42  Zeiris: Aye.
05:42  jeffszusz: i use
05:42  Zeiris: Gehh, it was really neat for checking how different languages'd look
05:43  jeffszusz: ScrollColor
05:43  jeffszusz: but
05:43  jeffszusz: i have to do
05:43  jeffszusz: :COLOR
05:43  jeffszusz: and then use teh arrow keys.
05:43  Zeiris: http://vim.wikia.com/wiki/Switch_color_schemes Script halfway down the page! Yes!
05:43  jeffszusz: Zeiris: i opened several splits with different files open (html, css, python, php) and then invoked :COLOR
05:44  jeffszusz: worked nicely.
05:46  jeffszusz: hey does anyone know of a script off the top of their head that makes vim automatically change it's working directory (for ! commands) to that of the file you're editing?
05:47  deryni: :help 'acd
05:47  jeffszusz: oh sweet it's built in
05:47  jeffszusz: :D thanks
05:53  xak466: hi. when editing php, is there a plugin to show the first line of the parent of a {} block
05:53  xak466: e.g. if i have code block if (1==1) {print 1;}, it will show "if (1==1)" when i'm on the line of "print 1"
05:54  Rakko: xak466: `[
05:55  Rakko: oh, `[ doesn't do exactly that
05:55  xak466: what does `[ do?
06:06  mcantor: Is there an easier way to refer to the colors when you have 256 than by number?
06:06  Rakko: xak466: it goes to the { at the beginning of the block
06:08  jeffszusz: anyone know how the directory structure works for pathogen? do i include each and every plugin in the /bundles directory with the same directory structure it expects normally? so each help file is in it's own doc/ directory etc.?
06:15  mcantor: Can I assign custom color names?
--- Log closed Thu Oct 21 06:21:27 2010
--- Log opened Thu Oct 21 06:21:47 2010
06:21 --- Users 547 nicks [0 ops, 0 halfops, 0 voices, 547 normal]
06:22  Patric3: How do I change a visual block to mixed case (i.e. capital letters at the start of each word ?)
06:22 --- Channel #vim was synced in 78 seconds
06:36  jeffszusz: sweeeett pathogen is awesome.
06:37  Rakko: what is it?
06:38  jeffszusz: makes it so your plugins don't have to be split up
06:38  Rakko: oh, I remember that now
06:38  jeffszusz: instead of spliting them into their component directories like putting the .txt file in /doc you put it in it's own thing in /bundle
06:38  jeffszusz: it's very nice
06:38  jeffszusz: so now that i've done that
06:38  jeffszusz: i've also put my .vimrc into my .vim/ directory and symlinked it from my ~/
06:38  jeffszusz: and now i can version control the whole shebang
06:38  Patric3: How can I replace text just within a selected visual block.  If I select and then try "%s/foo/bar/gc" then vim starts at the top of the document
06:39  Rakko: I did that with .vimrc too
06:39  Rakko: Patric3: don't use %
06:39  jeffszusz: :D has it eliminated a lot of headaches?
06:39  Rakko: not really. I just use it to sync my work and home vimfiles
06:40  jeffszusz: oh crap
06:40  jeffszusz: stupid .DS_store files
06:41  Patric3: Rakko: Thanks
06:42  Bucciarati: perl 'errorformat' anyone ?
06:45  Bucciarati: oh, efm_perl.pl
06:45  jeffszusz: wtf
06:48  Rakko: how do you search for {foo,bar} in vim regex?
06:50  Axioplase_: Rakko: /{foo,bar} works
06:51  Axioplase_: Unless you meant /foo\|bar/
06:53  Rakko: well I want to find either foo or bar
06:54  Rakko: within a longer string
06:56  Rakko: also, I would like to find lines ending in \ when the *following* line is blank
07:20  Axioplase_: Rakko: either foo or bar is my second answer
07:21  Rakko: oh, ok.
07:21  Axioplase_: /\\\n^$/ is the answer to your second question
07:21  Rakko: and I would wrap it in \( \) if I need to separate it?
07:21  Rakko: oh, thanks
07:21  Axioplase_: yes
07:24  Axioplase_: or in \%( \) if you don't want to remember it
07:27  Maahes: is there a way to tell vim to use a particular syntax highlighting scheme other than reloading a newly saved file with the correct extension?
07:27  Araxia: Maahes: :help 'filetype'
07:27  Axioplase_: Maahes: set syntax=thesyntaxiwant
07:29  Axioplase_: But yes, most of the time, you'll want to set 'filetype'
07:31  Araxia: right, if you *really* want only the syntax, :set syn is good, but usually you'll want to load all of the other ftplugin goodies that go along with a particular filetype.
07:31  Maahes: thankyou ^_^
07:55  Rakko: Axioplase_: so I guess the notation {foo,bar} is a shell glob thing, not a regex
07:56  Rakko: I recently found a feature of bash that seems only moderately helpful: if you type part of a filename and then <Esc>{, it will complete the filename using {foo,bar}
07:56  Rakko: so "a<Esc>{" => "a{lgorithm.{cpp,dep,h},pplication.{cpp{,~},dep,h}}"
08:03  Maahes: zsh has brilliant tab completion for files
08:03  Rakko: yeah?
08:04  Rakko: I'm jealous of the exclusion feature
08:05  qiyong: how do i change a word into lower case?
08:05  ondrejk: qiyong: veu
08:06  qiyong: thanks ondrejk
08:06  ondrejk: np
08:06  Maahes: or ~ if you're right on the character
08:11  Maahes: anyone know a *complete* vim command reference? just the keyboard commands? not : I've only been able to find truncated cheatsheets
08:12  qiyong: mathanks
08:12  qiyong: Maahes, thanks
08:19  Maahes: also is there an opposite to ve[Uu]? change the beginning of the word to upper/lower?
08:19  Rakko: I think a complete reference would be very long
08:22  jorrit: Hi
08:23  Rakko: Maahes: http://vim.wikia.com/wiki/Switching_case_of_characters
08:23  Rakko: see "Twiddle Case"
08:24  Rakko: hi jorrit
08:25  Rakko: bye
08:30  Araxia: Maahes: the complete vim command reference is :help
08:39  Maahes: Araxia, is there a way to select items in the main help document and load it?
08:39  Araxia: Maahes: i don't think i understand what you mean by that.
08:39  Maahes: in other words is it some sort of hypertext?
08:40  Araxia: yeah, C-] will navigate to a keyword, C-o will navigate back.
08:42  Araxia: :help usr_01.txt is a good brief introduction to the help system and a jumping off point.
--- Log closed Thu Oct 21 08:59:10 2010
--- Log opened Thu Oct 21 08:59:33 2010
08:59 --- Users 545 nicks [0 ops, 0 halfops, 0 voices, 545 normal]
09:00 --- Channel #vim was synced in 80 seconds
09:15  depaulis: Hi, when changing the size of the terminal containing vim, and then restore the size of the terminal, then the windows inside vim are "compressed" (to fit the last window sixe of the terminal). If I just split a window inside vim and then exit one of the new windows, then the size if all windows are restored to fit the new size of the terminal. Is it possible to prevent vim from resizing the...
09:15  depaulis: ...windows due to the terminal size changes? And is there a command to restore the windows just as a temorary split does ?
09:16  systemfault: c-w =   ?
09:16  zomg: iirc ctrl w = autoresizes windows
09:17  depaulis: c-w ? c-w +w cycly between windows, just c-w does not do anything for me here. Did I understand you correct?
09:18  depaulis: ahh "="
09:18  depaulis: forgot that one.. Yeah tha is what I want. Thanks!
--- Log closed Thu Oct 21 09:26:50 2010
--- Log opened Thu Oct 21 09:27:14 2010
09:27 --- Users 545 nicks [0 ops, 0 halfops, 0 voices, 545 normal]
09:28 --- Channel #vim was synced in 80 seconds
09:31  MadlyNormal: i'm using vim on windows and trying to use it to compile my c code: i have http://www.ideone.com/xC6zb added to my ./vimrc file, I can compile just fine, but its running thats giving me the problems, what do I have to change on line 11 to get this to work on windows
09:42  MadlyNormal: nevermind, got it working.
09:43  MadlyNormal: just had to change it to exec "!%<.exe"
09:50  Maahes: anyone familiar with NERDTree: If I change the current working directory and then tell vim to create a new file will it create the file in NERDTree's working directory?
09:53 --- nhOmega is now known as ruskie
09:53 --- estragib_ is now known as estragib
09:57  Maahes: Anyone survive the netsplit?
09:58  Raimondi: Maahes: Have you tried doing what you asked? I think NERDTree displays the current working directory.
09:58  Maahes: Raimondi, I didn't see what you asked
09:59  Raimondi: Last thing I saw was your question about creating a file, I must have been left out by the net split, sorry :)
10:04 --- zomg_ is now known as zomg
10:05  Maahes: Raimondi, Well I just tried it, I did a vsplit from the nerdtree window, its still creating new files in ~/.vim/doc which is definitely not where I want it to save new files to
10:06  iaj: i got :set history=500 in my vimrc file, however when I loaded up vim and do :set history it gives me 20 only
10:06  iaj: what's the reason for that?
10:06  iaj: :verbose set history  gives history=20 Last set from ~/.vimrc  as well.
10:09  iaj: can I do a grep on history commands in vim? ;p
--- Log closed Thu Oct 21 10:20:56 2010
--- Log opened Thu Oct 21 10:21:18 2010
10:21 --- Users 547 nicks [0 ops, 0 halfops, 0 voices, 547 normal]
10:21  thkoehler: iaj: die you read any of my comments? :)
10:22  thkoehler: iaj: maybe you should set the history *last* in the .vimrc
10:22  thkoehler: iaj: for example, 'history' is reset when you set 'compatible' or 'nocompatible'
10:22  thkoehler: so if you "set history" first, then "set nocompatible", your history is reset to 20...
10:22 --- Channel #vim was synced in 77 seconds
10:29  iaj: thkoehler: yeah I found that one out - set it far below
10:29  iaj: where its worknig :)
10:29  iaj: s/nig/ing
10:29  iaj: how large is your 'history set to?   oh did you receive my other questions as well?
10:35  thkoehler: iaj: only "can I do a grep on history commands in vim?"
10:38  thkoehler: iaj: which you can do by using ":redir", then ":history", then ":redir END", then ":grep <whatever> <file you redirected the output to>"
10:39  heeen: why is there a limit of 12 on the foldcolumn
10:41  thkoehler: heeen: I expect that to be an arbitrary limit. Do you really need more than that?
10:45  Shapeshifter: How can I set the colour used for hlsearch?
10:46  iaj: thkoehler: what would I usually redir that stuff to?  file/register?
10:47  thkoehler: iaj: a file, so that you can grep it
10:49  iaj: thkoehler: hm damn i wish there was an easier way :-) but I could write a function for that I guess
10:50  thkoehler: Shapeshifter: :highlight Search ctermfg=black ctermbg=green guifg=black guibg=green
10:50 --- silex is now known as Silex
10:50  thkoehler: iaj: I don't know an easier one, which does not necessarily imply there isn't :)
10:50  iaj: ;-)
10:51  Raimondi: iaj  q:
10:51  Shapeshifter: thkoehler: thanks!
10:53  Silex: is there a way to see all keys that have "action" in normal mode? I mean :nmap or :noremap doens't show that the "v" key enters visual mode...
10:53  Silex: so I don't know what keys are free to use
10:53  Raimondi: Silex:  :h normal-index
10:53  Silex: Raimondi: ty
10:54  iaj: Raimondi: hm.. yeah that would work as well.. using vim regexps for searching through that list.
10:54  Raimondi: np
10:55  thkoehler: ah, q:
10:55  thkoehler: it's not exactly the same, but yes, it's also nie
10:55  thkoehler: s/nie/nice/
10:56  Silex: is it a good idea to always use [count][command][motion] instead of [command][count][motion] ? e.g always use 5dd instead of d5d that way when we do e.g 5x it's consistent (you always start with the number)?
10:56  Silex: or is there something I'm missing?
10:58  thkoehler: 5dd is easier to type than d5d
10:59  Silex: thkoehler: okay so there's no drawkback to use 5dd. I got the habit of using d5d and I'm thinking of switching to 5dd
10:59  Silex: so all commands follow the same pattern
11:00  thkoehler: basically, you're free to use whichever you like :)
11:00  thkoehler: there's no real difference
11:00  thkoehler: both delete 5 lines
11:01  thkoehler: though I personally more often use V<motion>d because I'm too lazy to count lines, or I use d} or something like that (which also works without counting}
11:02  Silex: I see
11:02  thkoehler: or I use d:<number>
11:02  thkoehler: because when you have ":set number", you also can avoid counting :)
11:04  Raimondi: Even better, set rnu
11:06  Shapeshifter: Mh. How come :retab 4 doesn't do anything in a Makefile while it works in a *.cpp file?
11:06  the_isz: thkoehler: you meant  :d<number>  right? i just want to make sure i'm not missing something...
--- Log closed Thu Oct 21 11:13:59 2010
--- Log opened Thu Oct 21 11:14:22 2010
11:14 --- Users 556 nicks [0 ops, 0 halfops, 0 voices, 556 normal]
11:14  avinashhm: hi, i have #ifdef macroA .... #endif .. sevral times in my .c file .. can i write any simple script to delete all others except the contesnts included by this macroA ... pointers will be helpful ...
11:15  Shapeshifter: mh, nevermind. it does this
11:15  avinashhm: Shapeshifter, how
11:15 --- Channel #vim was synced in 80 seconds
11:17  Shapeshifter: avinashhm: I'm not even sure. It doesn't do it in a Makefile, but in normal files that don't depend on tabs it works
--- Log closed Thu Oct 21 11:23:20 2010
--- Log opened Thu Oct 21 11:23:41 2010
11:23 --- Users 558 nicks [0 ops, 0 halfops, 0 voices, 558 normal]
11:24  Silex: hum yes, looks it's for that!
11:24  Silex: </self_answered_question>
11:24 --- Channel #vim was synced in 79 seconds
11:29  simplechat: Hey guys, this is probably a very stupid question but if i have a pyflakes.vim file whereabouts would i place it on order for vim to use it?
11:29  Raimondi: simplechat: Is that a filetype plugin?
11:30  simplechat: "install vim module" is telling me how to install vim from source, but not to install this, which is kind of wierd
11:30  simplechat: Raimondi, i think so
11:30  simplechat: Raimondi, its syntax highlighting for python
11:30  simplechat: *with extra cool stuff
11:31  Raimondi: Copy it to  syntax/python.vim
11:32  simplechat: where is syntax?
11:32  simplechat: Raimondi, can i have a full path?
11:32  Raimondi: ~/.vim/syntax/python.vim
11:33  simplechat: ok
11:33  simplechat: that doesn't work
11:41  Silex: is there a way to open multiple files at once with fuzzyfinder?
--- Log closed Thu Oct 21 12:08:42 2010
--- Log opened Thu Oct 21 12:08:50 2010
12:08 --- Users 563 nicks [0 ops, 0 halfops, 0 voices, 563 normal]
12:10 --- Channel #vim was synced in 77 seconds
12:14  Silex: how do I paste from a register when in insert mode? in snipmate they show this example where they replace a word and end up in insert mode so my guess is that they do cw then paste from register
12:15  Silex: what I'm talking about is at 0:35 in http://vimeo.com/3535418
12:16  Raimondi: Silex:  <C-R>"
12:17  Silex: Raimondi: thanks!
12:17  Raimondi: :h i_CTRL-R
12:17  evilgeenius: Im using this plugin that loads items into a "quickfix" list.  What is a quickfix list and how do I cycle between the items in it?
12:22  rson: evilgeenius: :help quickfix
12:24  mgedmin: Silex, you've just convinced me to download and try out snipmate
12:25  evilgeenius: ah, it was :cope, couldnt see it easily in help
12:28  mgedmin: evilgeenius, for some reason I always use :cw
12:28  mgedmin: and I've mapped <f4> to :cn
12:29 --- bburhans is now known as ^Albert
12:29  mgedmin: (well, actually, to a magic function that does :cc the first time, then :cn, or, alternatively, :ll/:lnext, if I've got a location window instead of quickfix)
12:29 --- ^Albert is now known as bburhans
12:29  evilgeenius: what about :cp?
12:31  mgedmin: <S-F4>
12:31  mgedmin: ;)
12:31  mgedmin: quickfix is awesome
12:32  evilgeenius: im using the vim-fugitive wrapper around git, its awesome
12:32  evilgeenius: :Glog puts previous revisions of the current file in the quicklist
12:33  mgedmin: I mostly use my quickfix for multiple-file greps (see e.g. :vimgrep)
12:34  evilgeenius: Which files does vimgrep work on?
12:35  mgedmin: the ones you ask for
12:35  mgedmin: e.g. vimgrep foo **/*.c
12:35  mgedmin: (make that /foo/)
12:36  Silex: mgedmin: it's really nice
12:36  mgedmin: wait, just foo also works
12:36  mgedmin: I haven't read :h vimgrep in a long time
12:39  evilgeenius: silly question but does **/* mean look in all the files , including those in subfolders?
12:41  Silex: evilgeenius: yes
12:41  Silex: ** means any subdirectory
12:42 --- CHOCOBY is now known as chocoby
12:42  evilgeenius: is there a shorthand way of writing it?
12:43  daniel_: shorter than... **/*?
12:43  evilgeenius: yeah
12:43  Silex: Oo
12:43  Raimondi: cmap ** **/*
12:44  evilgeenius: ahh cool
12:45  evilgeenius: Raimondi: wont that cause some crazy recursive stuff?
12:45  evilgeenius: ahh i see
12:45  Raimondi: IF the mappings is at the beggining there won't be recursion, iirc :)
12:46  Raimondi: But you can alway use cnoremap
12:48  Raimondi: :h recursive_mapping
13:08  depaulis: Is it possible to match several lines in vims search using magic ? I tried '/\v^firstLine.*thirdLine/m' but it did not work.
13:08  depaulis: If I recall, m is the modifier to regexp to search multiple lines.
13:08  mgedmin: no
13:08  mgedmin: you want \_.* for that
13:09  mgedmin: 'm' is a modifier in Python/Perl (IIRC), not in vim
13:10  depaulis: mgedmin: ahh.. yeah I base my regexps from what I have done in Perl....
13:11  mgedmin: you may find :h perl-patterns useful then
13:12  depaulis: I take a look at it.
13:12  depaulis: thanks
13:19 --- jinky is now known as jink
--- Log closed Thu Oct 21 14:28:27 2010
--- Log opened Thu Oct 21 14:28:47 2010
14:28 --- Users 577 nicks [0 ops, 0 halfops, 0 voices, 577 normal]
14:28  evilgeenius: Is there a way to move up and down the omnifunc completion list without pressing the Down key?  (my down key has broke)
14:29  creidiki: xak466: one second
14:29  rson: evilgeenius: can't you just use C-p and C-n ?
14:29  sktrdie: hello guys
14:29  rson: evilgeenius: not sure about that though
14:29 --- Channel #vim was synced in 77 seconds
14:30  creidiki: xak466: http://www.vim.org/scripts/script.php?script_id=2874 i use this, it has an option that turns the more "expensive" syntax off when the file goes over a confrable number of lines.
14:30  FernandoBasso: evilgeenius: Yes. There is
14:30  evilgeenius: rson: yeah you can, thanks
14:30  creidiki: with this i can edit a 10k line file without feeling like its 1999
14:30  FernandoBasso: evilgeenius: Ctrl-p(revious) and Ctrl-n(ext)
14:31  sktrdie: i just started a new job... and i have to work on some code. at the end of the day, when i'm finished making changes to a bunch of files i would like to show sort of like a report to my boss... so like i would like to generate an html file or something with all my changes and a small explanation of what's been added/ edited for each section.... how do you do something like this?
14:31  xak466: thans creidiki i'll give it a try
14:31  creidiki: configurable*
14:31  creidiki: the number of lines that triggers the "large file mode"
14:32  evilgeenius: sktrdie: Use a source code control system to do it
14:32  evilgeenius: Do you use git or svn?
14:32  xak466: sktrdie: you can commit your changes to a vcs and just show him the logs
14:32  xak466: version control system
14:32  FernandoBasso: evilgeenius: Actually, we should avoid using the arrow keys, and stay in the home position as much as possible.
14:33  sktrdie: evilgeenius, xak466 : yeah i already use svn
14:33  sktrdie: but i'd like something guided
14:33  sktrdie: like
14:33  sktrdie: it shows me a piece of text i edited and it makes me put in some text
14:33  mgedmin: svndiff > textfile
14:33  evilgeenius: sktrdie: as long as you record what you have changed with each commit then that should be easy
14:33  sktrdie: so that i can describe that change
14:34  mgedmin: best way of doing this would be to make small frequent commits with meaningful commit messages
14:34  sktrdie: but a commit description is just a large scale description
14:34  evilgeenius: svn commit -m "I have added some code to do x..." file.txt
14:34  sktrdie: i'd like to explain each piece of code i've changed.
14:34  xak466: i suppose if you really wanted to, you could commit each file seperately
14:34  mgedmin: then you can, I dunno, svn log
14:34  sktrdie: xak466: nah
14:35  sktrdie: i'd probably just svndiff and work on that file directly
14:35  sktrdie: and send him that
14:35  rson: anyone here using both snipmate and supertab using tab to trigger both?
14:35  evilgeenius: The purpose of a vcs is to record all the changes made and the reason you have made them, using anything else is just silly, especially when you're already using svn.
14:36  xak466: if you're on windows, tortoisesvn makes it quite easy to commit one file at a time
14:36  sktrdie: i dont want to do that
14:36  sktrdie: my friend used a plugin for vim or something
14:36  sktrdie: to edit a diff not sure
14:37  d0ugal: How can I make vim do spaces in Python code and tabs in HTML?
14:38  sktrdie: why do you care of HTML?
14:38  d0ugal: sktrdie: Just 'cause I think tabs are the best idea
14:38  sktrdie: for what?
14:39  daniel_: I'd like to delete all files no starting with Foo or Bla. I only know zsh's regex syntax that would be like ^{Foo,Bla}, but don't know how to do this in normal regex
14:39  d0ugal: HTML indentation
14:39  sktrdie: if you care of bandwith, compress your html.
14:39  d0ugal: Nope
14:39  sktrdie: then who cares. spaces will indent
14:39  d0ugal: It's not bandwidth, its in the company they all use tabs and I'm coming along and mixing things up by using spaces
14:39  mgedmin: d0ugal, you want a filetype plugin
14:39  mgedmin: mkdir -p ~/.vim/ftplugin; echo 'setlocal noexpandtab' >> ~/.vim/ftplugin/html.vim
14:39  sktrdie: d0ugal: tell them to use spaces or you'll quit
14:40  mgedmin: also, tabs are evil
14:40  d0ugal: Everybody cares.
14:40  sktrdie: Everybody's hurt
14:40  d0ugal: mgedmin: thanks
14:41  d0ugal: I'd probably use spaces tbh but changing a file to being half and half is worse than just using tabs.
14:42 --- falconin1y is now known as falconindy
14:43  rson: :set et ts=4 | retab
14:43  rson: :)
14:43  d0ugal: rson: With the added advantage of making my commits bigger and it looking like i'm working hard.
14:43  rson: d0ugal: please dont do that in the same commit as your change
14:44  rson: makes rolling back a bitch if something were to go wrong, and looks ugly as hell in a diff
14:44  d0ugal: rson: I was just joking - I'm not going to re-indent everybody elses work
14:45  mgedmin: ts=4 is heresy
14:46  rson: ts=4 is pep8, which is why i've adopted it everywhere
14:48  nate-: hey guys, i'm having trouble compiling vim 7.3 on ubuntu with python support
14:48  nate-: i'll pastie the commands i'm using
14:48  scp1: The world would be a Better Place if everybody used the same indention settings.
14:49  d0ugal: rson: pep8 for life?
14:50  rson: d0ugal: more like pep8 for a living
14:50  d0ugal: :)
14:50  nate-: here's the commands I used: http://pastie.org/1237997
14:51  nate-: first time I've ever compiled anything in years >_> so more than likely I'm doing something wrong or missing a dependency
14:52  rson: nate-: for anyone to help you, you'll have to paste the output where it's failing
14:52  nate-: kk
14:52  nate-: gvim .
14:52  nate-: Gundo requires that Vim be compiled with Python 2.4+
14:53  nate-: basically just want to make sure my plugins using python will still work
14:53  rson: nate-: what does vim --version | grep python give you?
14:54  nate-: -python -python3
14:55  rson: nate-: shot in the dark, do you have python-dev and python3-dev stuff installed?
14:55  nate-: no idea... which more than likely means no :)
14:55  rson: try installing those packages, then recompile
14:56  nate-: will do, cheers r
14:56  nate-: rson*
14:56  rson: nate-: don't cheers me yet, it might not work ;)
14:56  nate-: well those packages weren't installed so I have a feeling you're onto a winner
15:01  nate-: compiles fine now rson, but it feels sluggish inside vim moving around tbo
15:02  rson: nate-: cant help you there, that could be one of many many things
15:02  nate-: well, i'm halfway there :)
15:03  rson: nate-: do you really need the python3 interface right now? if not, it may be worth trying it without that
15:03  nate-: I probably don't tbo, figured it couldn't do any harm... I'll try it withouit
15:11  cYmen: When I delete something using ci{ does it not end up in any register?
15:12  deryni: It should end up in the unnamed register I believe.
15:14  cYmen: hm..
15:14  cYmen: which one is that? :)
15:14  cYmen: the one I can paste with p?
15:14  cYmen: because afterwards I deleted something with di{ and then tried to paste the original with "1p and similar and couldn't find it anymore when checking with :reg
15:17  gkatsev: right after deletion it should end up in the " register
15:18  deryni: { commands seems to always be put in "1 so it probably would have moved to "2 assuming the rotation works when not yanking/etc. to 0.
15:26  graywh: cYmen, was it less than 1 line?
15:27  iaj: how can I set paths in my .vimrc (for MacVim that is)
15:27  graywh: remember: most recent yank or delete is always in register "; deletes less than 1 line go to "-, not "1
15:28  deryni: The help seems to say that things like { always use "1.
15:28  deryni: Though how that interacts with "- I don't know.
15:29  graywh: not sure what you're reading, but what i said is absolutely true
15:31  deryni: :help "0   "An exception ..." in the middle of the block.
15:31  deryni: Oh, delete operator only.
15:31  graywh: and {, not i{
15:34  deryni: Also true.
15:37  iaj: i dunno if its the best way to do so but I just added a  'let $PATH = $PATH . "..."' to my _vimrc now.
15:39  iaj: btw someone happening to use peepopen?
15:40  graywh: why do you need to change $PATH for macvim anyway?
15:41  marlun: If I've block selected some text and I want to paste something on all lines, how do I do that? I tried just hitting p but that only pasted on the first line.
15:42  graywh: i don't think you can
15:43  marlun: I hit 'c' and wrote it and that got inserted on all lines. Lucky my it wasn't that much text to write :)
15:43  iaj: graywh: because I got a folder - $HOME/bin where all of my own stuff goes... and it wasn't accessible from within my macvi
15:44  graywh: you're adding it to $PATH using .bashrc or equivalent?
15:44  mcantor: Hey guys, I sent an e-mail to the vim discussion list, but I'm not sure if it was received.  Are we supposed to be copied on our own e-mails?
15:44  mgedmin: check the archives on the web
15:45  mcantor: Oh, naturally.
15:45  mgedmin: if google's involved, it's famous for suppressing copies of your own messages to lists
15:45  iaj: graywh: Im just adding it to MacVim's $PATH variable :/
15:46  mcantor: Ah, it's there.  My question was simply not awesome enough to warrant discussion yet.
15:53  jeffszusz: is there a way to open a pre-set configuration of splits with specific content?
15:55  jeffszusz: for example, to type a command like :MyPythonEnv and have things like a bash shell, a python interpreter, the NERDTree and TaskList all open in the positions I want?
15:56  strull: jeffszusz: probably :he mksession
15:57  nvictor: dear vim, i have forgotten how to get statistics again, word counts, byte counts etc...
15:57  nvictor: :)
15:57  graywh: g ctrl-g
15:57  nvictor: thanks :)
16:02  Silex: how do I change the color of the omni completion menu in vim?
16:03  Silex: atm it's grey on pink, despite any colorscheme I choose
16:04  Silex: ah, found http://vim.wikia.com/wiki/Omni_completion_popup_menu
16:05  mcantor: Silex: I believe Pmenu controls all popup menus, not just the omni-completion one.
16:06  Silex: mcantor: yeah that's what I'm after
16:06  Silex: ty
16:07  jeffszusz: i tried :mksession
16:07  jeffszusz: lol
16:07  jeffszusz: it made such a mess...
16:07  mcantor: jeffszusz: It usually works pretty well for me.  What happened?
16:07  jeffszusz: the splits all opened in the wrong spots
16:07  kurkale6ka: works really well
16:08  jeffszusz: i have three vsplits, the rightmost of which is divided into three splits
16:08  jeffszusz: but when i restore the session i get
16:10  jeffszusz: two splits, the bottom one is divided into three vsplits, and the rightmost one is divided into 3 more.
16:10  mcantor: Duuuude.  "vim.org" has no DNS set; it doesn't even redirect you to "www.vim.org".
16:10  jeffszusz: does for me all the time mcantor
16:11  jeffszusz: unless Chrome is just smart like that.
16:11  Silex: by me too it has no dns
16:11  mcantor: I'm on Chrome, too.
16:11  Silex: jeffszusz: type http://vim.org
16:11  mcantor: Man, that is like my biggest pet peeve for websites.
16:11  mcantor: That and having no favicon.
16:11  Silex: just vim.org triggers some chrome smartness
16:11  jeffszusz: lol
16:12 * jeffszusz wonders what could have caused his splits to freak out on session load
16:12  mcantor: jeffszusz: Did you change your pwd between windows, by any chance?
16:13  jeffszusz: ?
16:13  jeffszusz: like perhaps with autochdir set ?
16:13  mcantor: Yeah.
16:13  jeffszusz: that's going to affect it?
16:13  jeffszusz: oy
16:14  mcantor: jeffszusz: The session file stores relative paths based on the pwd that was set in each buffer, I think
16:14  jeffszusz: lame
16:14  mcantor: I thought so.  I wonder if that counts as a bug, actually.
16:15  jeffszusz: i'll have to just write a vimscript that sets up my stuff the way i want
16:15  jeffszusz: though proportions won't be perfect since it'll just have everything done in halves
16:16  mcantor: I stopped using autochdir... I haven't had the time to find a solution to quickly open files in the same directory as the current file, though
16:16  jeffszusz: well
16:16  jeffszusz: NERDTree kindasorta helps a bit
16:16  jeffszusz: but it's not as fast as typing.
16:17  mcantor: Few things are!
16:18  jerojasro: mcantor: I solved that with fuzzyfinder
16:18  mcantor: jerojasro: I'm looking into that right now... I'm very, very stingy about plugins, though.
16:19  jerojasro: I don't use autochdir, and use fuzzyfinder to open the files I need. It provides commands to look for files in the current dir, and the dir of the current buffer
16:19  mcantor: That is pretty awesome.
16:19  mcantor: I may just cherrypick those functions...
16:20  mcantor: Holy crap... how is bufkill.vim almost a thousand lines long?!
16:20  Raimondi: jeffszusz:  cnoremap %% <C-R>=expand('%:h').'/'<CR>
16:20  jerojasro: why so picky?
16:20  jerojasro: wrt plugins, mcantor ...
16:21  mcantor: jerojasro: I've never used a plugin that worked exactly the way I wanted it to; if I use a plugin, that means I need to understand it, which means I need to read the code!
16:22  jerojasro: jeez, no. The docs are enough, in most cases. (at least in the most popular/large plugins)
16:22  mcantor: jerojasro: You must be less finicky than me, when it comes to plugin behavior... ;-)
16:23  mcantor: jerojasro: See... I don't need fuzzyfinder--just Raimondi.  ;-P
16:24  mcantor: Better to have 1 line in my .vimrc than an entire plugin.
16:25  Raimondi: mcantor: Didn't realize it was for you :)
16:26  mcantor: Raimondi: I was ranting about it a few lines up :->
16:26  RichiH: when using vim via a serial console, some key events, like delete or page up produce weird chars & make vim act, well, weird
16:26  RichiH: any idea where i should start with debugging this?
16:26  Raimondi: yeah, I saw the ranting but mixed the nicks up
16:27  Raimondi: RichiH: I'd check mappings
16:28  Raimondi: RichiH: I missed the serial console part, I know nothing about that :(
16:28  LaoLang_cool: hi, offtopic, in bash, {.*,*}/ can match all dirs including those has been hidden, how to express {.*,*}/ in sh? sh hasn't such expression.
16:28  RichiH: Raimondi: yah, np
16:28  RichiH: it's just annoying & weird :p
16:28  RichiH: and i hate having to fall back to nano
16:31  mcantor: jeffszusz: Try looking at :he 'sessionoptions', btw
16:36  mcantor: Is there an easy way to say "delete the block at this indent level"?
17:02  ondrejk: mcantor: maybe something like this: :%g/\t\t\t/d ?
17:03  ondrejk: err
17:03  ondrejk: mcantor: :%g/^\t\t\t[^\t]/d
17:03  jerojasro: mcantor: there is a aplugin to define new text objects
17:04  jerojasro: and one of the text objects I've seen defined using it is a "text in the same indent level" one
17:04  jerojasro: textobj-usr, iirc
17:07  mcantor: jerojasro: Oh my God.  You can make custom text objects?
17:08  jerojasro: and with that you might delete it as you would normally with other text objects: d<keybindings assigned to the new text object>, v<kybindings .....>
17:08  jerojasro: yes you can. they are implemented as fancy mappings, not core vim text objects,
17:08  jerojasro: but yeah, you can
17:09  mcantor: Awwwww.  It'd be SO COOL if you could modify the core text objects.
17:10 * mcantor adds an item to his "patches I will write when I invent a time machine and no longer have to worry about only having 24 hours per day" list.
17:10  jerojasro: hell yes. I'd kill for being able to redefine the paragraph object
17:10  jerojasro: for example
17:12  ironcamel: should i be able to imap <C-tab> ?
17:13  spiiph: ironcamel, if you're using gvim
17:13  ironcamel: not using gvim
17:13  ironcamel: spiiph: why is that?
17:14  spiiph: In terminals, <Tab> = <C-i>, so <C-Tab> doesn't make sense.
17:15  ironcamel: spiiph: so imap <C-i> should do what i want?
17:15  spiiph:  Uh, no. That will remap <Tab>
17:15  ironcamel: yeah, it looks like it
17:15  ironcamel: haha, you are right
17:16  ironcamel: crap
17:17  ironcamel: anyone have a mapping they like to use for <c-x><c-o> ?
17:17  ironcamel: the omni complete thing
17:17  spiiph: <C-X><C-O>
17:17  jerojasro: thet same one
17:17  ironcamel: what??
17:17  jerojasro: </troll> :)
17:18  mcantor: When compiling vim, is ./configure --prefix=$HOME/myvim enough to corral my installation files, or do I need to pass --exec-prefix as well?
17:18  spiiph: mcantor, --prefix should be enough, iirc
17:19  mcantor: Umm... why is there a Makefile in vim/ and a Makefile in vim/src?  What's the difference?
17:19  mcantor: Oh, I suppose the root one must call the one in src.
--- Log closed Thu Oct 21 17:28:32 2010
--- Log opened Thu Oct 21 17:38:57 2010
17:38 --- Users 592 nicks [0 ops, 0 halfops, 0 voices, 592 normal]
17:39 --- picasso__ is now known as picasso
17:40 --- Channel #vim was synced in 74 seconds
17:40  alex_XD: Can somebody share quickfix for c++ configuration?
17:44  spiiph: alex_XD, that's compiler dependent, not languagedependent
17:45  mcantor: WTF?  Even though ./configure found python, vim compiled with -python?!?!
17:45  psycojoker: ./configure --enable-python ?
17:45  psycojoker: stuff like that iirc
17:46  mcantor: psycojoker: Yeah, man!  That's what I did.  :-\
17:46  mcantor: it's --enable-pythoninterp
17:46  mcantor: This is my ./configure output: http://pastebin.com/C5WWTvX8
17:48  psycojoker: aw, no idea, can't help you :/
17:49  jerojasro: mcantor: funny, I was thinking about this one: http://www.vim.org/scripts/script.php?script_id=2484
17:49  psycojoker: ./configure --with-features=hudge --with-x --with-gnome --disable-netbeans --disable-darwin  --disable-selinux --enable-pythoninterp --enable-perlinterp --enable-rubyinterp << that the way I used to compile vim, but your problem seems more distribution specific
17:51  mcantor: psycojoker: What does --with-features=huge get you, anyway?
17:51  alex_XD: spiiph: ok... so I need to search for gcc?
17:52  psycojoker: mcantor: it's enable a lot of advanced features
17:52  mcantor: Maybe it's because I don't have the python development headers.
17:52  mcantor: psycojoker: Is there a list?
17:52  psycojoker: mcantor: probably in one of "how to compile vim" articles
17:53  mcantor: OK... vim found hte python config directory this time.
17:53  mcantor: I can't believe it just silently failed!!!
--- Log closed Thu Oct 21 18:08:10 2010
--- Log opened Thu Oct 21 18:08:30 2010
18:08 --- Users 595 nicks [0 ops, 0 halfops, 0 voices, 595 normal]
18:08 --- Server: [calvino.freenode.net] [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
18:09 --- Channel #vim was synced in 78 seconds
18:13  alex_XD: How to link makerpg to make file?
18:14 --- Silex is now known as silex
18:19 --- kisielk_ is now known as kisielk
18:19 --- batrick_ is now known as batrick
18:29  g0bl1n: how can I add a file syntax  to be recognized as another one ? I want a new extension to be recognized as .rb syntax
18:29  agib: does project.vim work on MacVim? I put the file in ~/.vim/plugin but I can't seem to do \g or \G... is there something else I have to do?
18:31  rson: agib: is the plugin showing up in :scriptnames ?
18:32  agib: rson: yeah
18:32  rson: agib: do \g and \G show up in the output of :map ?
18:32  graywh: g0bl1n, :h new-filetype
18:33  agib: rson: hmm no they don't seem to be there
18:34  rson: agib: i've never used project, but i'd suggest taking a look at how it defines the mappings and see if it's just mapping to something else instead for some reason
18:34  g0bl1n: graywh, ty
18:34  rson: for instance, if it's mapping to <leader> and \ isn't your leader
18:34  agib: rson: https://gist.github.com/6b4a5b31052824238a8a is my :map output
18:35  rson: agib: it looks like one of those might be related to project, but maybe not
18:35  genjix: when I search and get yellow highlighting
18:35  genjix: how can i remove the highlighting?
18:35  rson: genjix: :noh
18:35  genjix: no, sorry
18:35  genjix: i mean
18:38  iaj: Can I somehow autocomplete from words in commandline mode?
18:40  genjix: I've got my searches, now stop showing them :p
18:40  rson: genjix: :noh
18:40  genjix: normally i do /sdkjsdsdkjsdkjsd
18:40  rson: it only turns off current hilighting
18:40  rson: next time you search it hilights again
18:40  genjix: ok
18:40  agib: rson: ah... hmm so it has: nnoremap <buffer> <silent> <LocalLeader>g \|:call <SID>GrepAll(0, line('.'), "")<CR>
18:40  agib: how can I see what LocalLeader is?
18:40  genjix: thanks
18:40  Raimondi: agib: :echo b:maplocalleader
18:40  rson: agib: i'm not sure about localleader, but you can do :echo g:mapleader to see what mapleader is set to
18:40  agib: Raimondi: that gives me invalid expression
18:40  kurkale6ka: iaj: if you use ^f yes
18:40  Raimondi: agib: What's the output of  :echo exists('b:maplocalleader')
18:40  agib: 0
18:40  Raimondi: OK, maplocalleader hasn't been defined in that buffer.
18:41  agib: ah -- what's the difference between localleader and leader?
18:41  genjix: nnoremap <esc> :noh<return><esc>
18:41  genjix: fyi, that is what I've added for clearing highlighting after a search ;)
18:41  genjix: thanks rson
18:41  Raimondi: agib:  :h maplocalleader
18:42 --- harleypi1 is now known as harleypig
18:42  agib: ahh
18:43  agib: so if project.vim uses <LocalLeader>... how do I use them?
18:45  genjix: erm wtf
18:45  genjix: if i type "7dd then check the buffer
18:45  genjix: its in buffer "8
18:45  genjix: all the numbers are +1
18:46  rson: genjix: np
18:46  genjix: "9yy is in buffer 8
18:46  deryni: register
18:46  genjix: ah thanks!
18:46  genjix: i was using :di :p
18:47 --- Natch is now known as Natch|
18:47  deryni: That's the same, I was correcting your calling them "buffers".
18:48  deryni: And that sounds like an oddly behaving plugin to me, do any of the other registers change?
18:48  genjix: yep
18:48  genjix: the ""
18:49  genjix: if I do a normal yank then register "" and 2 changes
18:51  agib: hmmm
18:51  agib: let maplocalleader=',' doesn't seem to do anything...
18:52  deryni: It isn't retroactive.
18:52  deryni: genjix: What scripts do you have running?
18:52  genjix: ok so number registers are shifted +1, but letter registers are normal
18:53  genjix: nothing i dont think
18:53  mcantor: iaj: Also use Ctrl-D for command line completion.
18:53  genjix: my vimrc has one key map and set cursorline, set hlsearch
18:53  mcantor: Well... it's not completion, but it's still awesome
18:54  mcantor: genjix: re: search highlighting, I do :nnoremap <silent> ; :set invhlsearch<CR>
18:54  deryni: genjix: What does :scriptnames say?
18:55  genjix: ohh quite a few, didn't know that im running these :p
18:55  genjix: http://pastebin.com/k7aNPsCF
18:56  genjix: all ubuntu defaults really
18:57  deryni: What mapping do you have and what's in debian.vim?
18:57  genjix: http://pastebin.com/5aVBmGrE
18:58  genjix: just added that last line from deryni above, so ignore that :p
18:58  genjix: deryni: what does that do? remove it when you press enter?
18:58  deryni: ; is an occasionally useful key on its own, mapping it away may not be the best idea.
18:59  genjix: ignore the last line, i only just added it
18:59  deryni: I know, that was just a general statement.
18:59  iaj: mcantor: thanks...
18:59  genjix: oh its mapped to ; :p
18:59  iaj: btw is there some way to install vimball files without sourcing them - since I use pathogen.vim
18:59  genjix: yep
19:01  genjix: on another note i just saw that people are mapping ; to :
19:01  genjix: i think i might add that
--- Log closed Thu Oct 21 19:07:38 2010
--- Log opened Thu Oct 21 19:07:58 2010
19:07 --- Users 604 nicks [0 ops, 0 halfops, 0 voices, 604 normal]
19:07 --- Server: [niven.freenode.net] [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
19:09 --- Channel #vim was synced in 76 seconds
19:16  foocraft: is there any way to mark a line by using multiple characters?
19:19  DHulme: foocraft: mark in what way?
19:19  DHulme: you mean like with the m command?
19:19  foocraft: yeah
19:19  DHulme: no
19:19  DHulme: maybe there's some plugin
19:19  foocraft: how about without it? :)
19:19  foocraft: the m command I mean
19:20  foocraft: or maybe a way to alternate between two marks quickly?
19:20  foocraft: like I mark one place, mark another and be able to play over there, jump back and forth and so on
19:20  DHulme: alternate? like with '' ?
19:21  foocraft: hmm never used that
19:21  DHulme: there's that, ``, and :h jumplist
19:21  foocraft: I love vim!!!
19:21  foocraft: damn
19:23  skizzhg: is    vim -c "set fenc=latin1"   enough to edit a file apparently in iso-8859-1 (and keep that encoding)? before editing it `file -i` says charset=us-ascii while after becomes charset=iso-8859-1; but iI was pointed out that the accents are messed
19:26  DHulme: skizzhg: you should make sure iso-8859-1 appears first in fileencodings (note the s at the end)
19:26  DHulme: then Vim will be able to detect its encoding automatically
19:28  skizzhg: oh, it's not
19:28  skizzhg: fileencodings=ucs-bom,utf-8,default,latin1
19:28  skizzhg: what the heck is ucs-bom?
19:28  DHulme: UTF-16 with a byte-order-mark
19:29  DHulme: latin1 won't work after utf-8
19:29  skizzhg: so i have to change the order of that?
19:29  skizzhg: i need that encoding just for some files
19:29  DHulme: if latin1 is before utf-8, both latin1 and utf-8 files will be correctly detected
19:30  DHulme: (also, you need to do this *before* opening the file)
19:30  deryni: According to the help latin1,utf-8 is wrong.
19:31  iwkse: hi, i'd like to know if there's a way to run external commands on a different window (eg. :!make and be able to look the output as well the source)
19:32  DHulme: deryni: yes, you're right, this is a file-dependent problem
19:32  irc2samus: guys vim's ability to see if a file was modified on this is (I assume) controlled by a setting, if that's the case which one is it?
19:32  DHulme: sorry, I was thinking the wrong way around
19:32  DHulme: irc2samus: I'm not quite sure what you mean; are you thinking of 'autoread'?
19:33  deryni: irc2samus: What are you trying to change/fix/do exactly?
19:33  DHulme: iwkse: in that case, you're better off with :make, which will run make and parse the compiler errors for you so it can jump to the right source line
19:33  irc2samus: DHulme when other program modifies the file you have open and vim asks you to reload it
19:34  iwkse: DHulme: thank you :)
19:34  irc2samus: autoread goes along those lines but it's not exactly what I'm looking for, I want it to ask me when outside changes were detected
19:35  irc2samus: I think this is default in some cases but it seems I've lost it in my setup
19:35  DHulme: irc2samus: see :h timestamp
19:42  irc2samus: ah that's it DHulme many thanks :)
19:43  skizzhg: sorry, i was on the phone
19:44  skizzhg: so, something like  vim -c "set fileencodings=latin1,utf-8,ucs-bom,default,latin1"   can be a solution?
19:45  skizzhg: ops, without one "latin1"
19:45  DHulme: umm, no; see above
19:45  DHulme: sorry for giving you a bit of a bum steer
19:46  skizzhg: np
19:46  DHulme: just use vim ++enc=latin1 filename
19:46  skizzhg: but i'm lost, i need to edit those file keeping the encoding and it seems a pita
19:47  skizzhg: ah, that's override the default, right?
19:47  mgedmin: vim keeps the encoding unless you explicitly ask it to convert
19:48  irc2samus: ok then if I want to add an autocommand to call :checktime everytime I step into a buffer which even would be appropiate? ideally it should trigger when the buffer receives focus either by switching to it or by becoming active after vim regains focus
19:48  irc2samus: *event
19:49  strull: irc2samus: gvim does this
19:49  strull: vim does not receive the focus-gained event
19:49  deryni: vim triggers it when you switch to a buffer, but doesn't notice when the terminal gains focus.
19:51  skizzhg: mgedmin, ok but using vim -c "set fenc=latin1" the statusbar says latin1,unix, `file -i` says iso-8859-1, nano shows a � instead of accents, someone is lying :)
19:52  skizzhg: btw i'll try with ++enc=latin1 thanks DHulme and everyone
19:52  irc2samus: ok so focus is out of the question in the terminal, what about buffers then?
19:53  irc2samus: BufEnter seems ok, would it be a problem if the buffer is new? (i.e. no associated file)
19:58  iaj: does anybody konw if theres a way to enhance vims syntax highlighting for java ?
20:04  ezzieyguywuf: can I do ctrl-6 while in insert-mode to toggle buffers?
20:04  mgedmin: skizzhg, :set fenc doesn't do what you think it does
20:04  singingwolfboy: for the purposes of testing to see if I installed a filetype-based plugin correctly, how do I check to see what filetype vim believes the current file to be?
20:05  graywh: singingwolfboy, :echo &ft
20:05  skizzhg: mgedmin, indeed :/
20:05  singingwolfboy: graywh: perfect, thanks
20:05  mgedmin: vim -c 'set fenc=...' sets the default encoding for new files that you create
20:05  skizzhg: ahh
20:06  mgedmin: set fenc after you've loaded a file converts the file from the encoding vim autodetected to the one you specified on first write
20:06  mgedmin: to override the encoding of the file if vim can't autodetect it, use :e ++enc=... filename
20:06  mgedmin: or, better yet, :set fencs=ucs-bom,utf-8,latin1
20:07  mgedmin: so vim's autodetection gets a chance to get it right
20:07  iaj: gna, is someone happening to do java coding in vim?
20:09  skizzhg: another question, i just used  :e ++enc=latin1 (without filename but in the current buffer) and it says:  foo/bar [converted]
20:09  skizzhg: is it right/enough?
20:09  mcantor: ezzieyguywuf: inoremap <C-6> <ESC>:b#<CR>i
20:09  skizzhg: also, can i use that option in the command line?
20:09  graywh: mcantor, um...?
20:09  Raimondi: skizzhg: It's enough to re-load the file, you have to write it now.
20:09  skizzhg: i mean bash
20:09  graywh: inoremap <C-^> <C-o><C-^>
20:10  graywh: ezzieyguywuf, ^^
20:10  mcantor: ezzieyguywuf: Do it graywh's better
20:10  mcantor: graywh: Your condescending stutter was unnecessary; your suggestion is obviously superior.  ;-)
20:11  mcantor: (well, be fair, it could have been out of sincere confusion)
20:11  graywh: mcantor, with yours, repeatedly hitting ctrl-^ would move the cursor
20:12  mcantor: graywh: Ah, right.  Maybe a would work instead.
20:12  skizzhg: Raimondi, the buffer contains an iso-8859-1 file, so does vim convert the file itself or i need to redirect on "filename", the help says   :e ++ff=unix
20:14  graywh: mcantor, not if the cursor was in front of the first coloumn
20:14  skizzhg: and i would like to use that option like  vim -c "something", it's more comfortable, or maybe can i set it for a specific kind of file? (it's .wml)
20:14  Raimondi: skizzhg: What you did re-loaded the file with the specified encoding, now you can save it to disk.
20:14  mgedmin: skizzhg, seriously, set 'fencs' correctly once
20:15  mgedmin: unless you need to deal with multiple legacy 8-bit encodings
20:15  skizzhg: i don't understan dhow or what i need to do
20:16  mgedmin: put "set fencs=ucs-bom,utf-8,latin1" in your .vimrc
20:17  DHulme: mgedmin: it's already set that way
20:17  mgedmin: then vim can edit latin-1 files
20:17  deryni: That's basically the default in a unicode locale.
20:17  DHulme: indeed
20:17  skizzhg: :set fileencodings -> fileencodings=ucs-bom,utf-8,default,latin1
20:17  DHulme: I'm curious to know what's special about this file.
20:17  skizzhg: i need to use iso-8859-1 only for .wml
20:18  mgedmin: I'm curious about what the default encoding maps to
20:18  DHulme: mgedmin: whatever your locale says
20:18  skizzhg: i'm using utf8
20:18  skizzhg: it's a kind of html with perl, they are documentation file from debian site
20:18  DHulme: skizzhg: no, I mean special that makes it not be detected as iso-8859-1 by Vim
20:18  skizzhg: and everything is iso-8859-1
20:19  mgedmin: maybe it's not latin-1?
20:19  DHulme: maybe
20:19  mgedmin: iso-8859-15 could be plausible
20:19  DHulme: it's hard to tell from here
20:19  skizzhg: can you try the file?
20:20  mgedmin: can you give us a link to the file?
20:20  skizzhg: of course
20:20  skizzhg: https://alioth.debian.org/scm/viewvc.php/*checkout*/webwml/italian/devel/index.wml?revision=1.125&root=webwml
20:20  agib: does anyone know what project.vim means by "Enter the CD parameter?"
20:21  mgedmin: skizzhg, looks like windows-1252
20:22  mgedmin: so, set fencs=ucs-bom,utf-8,windows-1252,latin1
20:22  mgedmin: wait, am I too hasty?
20:22  skizzhg: mgedmin, what command or somethin else do you use to say it?
20:22  mgedmin: these two are very similar encodings; some bytes in the 0x80-0x9F range are different
20:22  DHulme: hmm, detected fine as latin1 here
20:22  DHulme: seems to be OK
20:23  DHulme: mgedmin: what makes it look like cp1252?
20:23  mgedmin: the file looks good as latin1 too
20:23 --- shika is now known as shikamaru
20:23  mgedmin: DHulme, an old 'fencs' setting in ~/.vimrc that made my vim "autodetect" it as cp1252
20:23  DHulme: mgedmin, seriously, set fencs correctly once
20:23  DHulme: ;)
20:24  sir_lewk: is there a way to make the help buffer a regular buffer?
20:24  mgedmin: yes, well, I had to edit some cp1252 documents at some point
20:24  DHulme: skizzhg: you don't have set fenc=something in your .vimrc, do you?
20:24  mgedmin: smart quotes are different from latin-1 there
20:24  DHulme: where in the file?
20:24  Raimondi: sir_lewk: What do you want to do?
20:24  skizzhg: DHulme, i dno't
20:24  mgedmin: skizzhg, you haven't accidentally corrupted the file by overwriting it?
20:25  sir_lewk: mainly make it not pop open a new window, and let minibuffexplorer display it
20:27  skizzhg: mgedmin, since 'set fenc='  was bad, i don't know, maybe
20:28  skizzhg: now i knoe to edit it correctyl, make a sample and send to the "boss" to know if is ok
20:28  Raimondi: sir_lewk: I'm not sure you can prevent :help from opening a new window. :set buflisted  and/or  :set buftype=   might help with the rest.
20:28  skizzhg: damn typos
20:29  iaj: run vim in a login shell - that option is gone in recent macvim version?
20:29  Raimondi: sir_lewk: YOu could play with autocommands to make the help window the only one.
20:31  mcantor: how exactly does one pipe a newline-delimited list of files and tell vim to open them all?
20:31  Tricia: when I do a replace starting with a @, it doesn't find it, even though its highlighted (s/@blah/blah/g, for example)
20:31  DHulme: mcantor: using xargs?
20:31  sir_lewk: Raimondi: ok, thanks
20:31  DHulme: Tricia: do you need to use :%s instead of :s ?
20:31  Tricia: ...der. thanks
20:32  mcantor: DHulme: I tried it and it mysteriously didn't work.
20:32  DHulme: vimgor: didn't work
20:32  vimgor: What? OMG! But that cannot fail! It's the failsafe! We're ALL DOOMED NOW. Or you could actually tell us what it really did. Your choice.
20:32  Raimondi: lol
20:32  Tricia: heh
20:32  mcantor: I'm typing, ya bum ;-P
20:32  deryni: I think I liked the old message better.
20:32  graywh: there's 2
20:32  DHulme: vimgor: doesn't work
20:32  vimgor: What happened? Did it fall asleep on your couch? Eat your homework? Destroy your hard drive? Be specific.
20:32  Raimondi: That factoid changed recently , right? :D
20:32  DHulme: deryni: that one?
20:32  deryni: Ah.
20:32  Raimondi: Oh!
20:33 * graywh prefers "doesn't work"
20:33  agib: what's the best way for me to be able to grep in my current project in vim?
20:33  mcantor: DHulme: This is the exact command I'm running: svn stat | awk '{print $2}' | xargs vim
20:33  mcantor: I also tried it with xargs vim --
20:33  DHulme: doesn't work is less snarky
20:33  mcantor: I get the "Warning: Input is not from a terminal" message, and then the "Enter" key produces no results, though Vim itself *appears* to load successfully
20:34  mcantor: Also, hitting Backspace inserts a ^? escape instead of, well, backspacing.
20:34  agib: project.vim doesn't seem to have very much documentation...
20:34  deryni: vim `svn stat | awk '{print $2}'`
20:35  Yeanno: hi, the cursorcolumn option seams not to work with omnicompletion - is there a workaround or something like this?
20:35  mcantor: deryni: That would certainly work, but I'd prefer to understand why the pipe makes it break.
20:37  deryni: Because "Input is not from a terminal".
20:38  DHulme: "find -iname \*.pl | xargs vim" gives the same warning but works correctly for me
20:40  Tricia: DHulme: I think it hoses your terminal
20:40  graywh: better to do vim $(find -iname \*.pl)
20:41  fow: assuming your shell splits things properly
20:42  mcantor: Huh.  Yeah, looks like the only way to do it is with a subshell.
20:42  mcantor: That's so weird!
20:43  Tricia: cmd | xargs gvim it works fine, so yeah, it's tied to the terminal somehow
20:43  deryni: vim expects to be attached to a terminal and it isn't in the pipe case, what's so weird about that?
20:43  deryni: I'd imagine most curses/etc. apps wouldn't like it much.
20:49  fifou: hi! does anybody know a font which is ok with unicode character? (I experienced some issues at work because I'm not using same font since I use win xp on my professional computer against debian here)
20:49  fifou: (i'm using unicode with listchars)
--- Log closed Thu Oct 21 20:51:08 2010
--- Log opened Thu Oct 21 20:55:30 2010
20:55 --- Users 608 nicks [0 ops, 0 halfops, 0 voices, 608 normal]
20:55 --- Channel #vim was synced in 3 seconds
20:57  fifou: fow: dejavu is on my usb key, ready to test tomorrow. Thanks you =)
20:58  fow: you're welcome
20:58  fifou: I see no difference with Monospace on Debian :) Pretty font!
20:59  fow: Monospace isn't an actual font, it's just a placeholder for any monospaced font :P
--- Log closed Thu Oct 21 21:07:44 2010
--- Log opened Thu Oct 21 21:08:06 2010
21:08 --- Users 611 nicks [0 ops, 0 halfops, 0 voices, 611 normal]
21:09 --- Channel #vim was synced in 114 seconds
21:10  fifou: fow: sorry, battery problem :/ I see your last comment about Monsopace and I didn't realized that by past!
21:16  KarlHungus: how do i yank a couple of lines and write that into a new file?
21:17  fow: KarlHungus, :.,+nw newfile
21:17  fow: (where n is the number of lines below the cursor)
21:18  KarlHungus: oh. wow. you rock
21:18  KarlHungus: thank you!
21:18  fow: Ranges are great. you're welcome
21:18  KarlHungus: its the ranges with a w that i was somehow missing =) =)
21:19  graywh: yeah, it's pretty great
21:19  graywh: :[range]w !cmd  pipes range to external cmd
21:19  graywh: note that this is different from filtering   :[range]!cmd
21:20  fifou: in the same way, I use :w !sh (:help rename-files)
21:20  KarlHungus: and i can use visual mode to do this as well :P
21:20  graywh: yeah
21:21  fifou: really useful with a list of file to rename (you can use all you like in Vim as macro :p)
21:21  graywh: visual mode sets the '< and '> marks
21:21  agib: is there a way to nmap something to call two commands in a row?
21:21  graywh: and marks can be used to define a range, too
21:22  jerojasro: agib: you can chain several commands using the | character
21:22  graywh: Ex commands, that is
21:27  agib: jerojasro: ahh so I'm trying to combine these two commands -- https://gist.github.com/f317523c8b7eeaef7cea -- is it possible?
21:30  graywh: agib, sure :nmap _p :gotoproject<CR><Leader>p
21:30  agib: graywh: ah awesome, thank you
21:42  fifou: i'm trying to improve my vimrc with test of module, etc. because I use it on linux, windows, vim-tiny sometimes, etc! So I keep all alerts I meet and I'm trying to solve each issue. Do you know how I can avoid alert E319 on "let mapleader=","" ?
21:43  fifou: in this context, i'd like to have mapleader=default \
21:44  strull: fifou: e319 means : command in this versin not available.
21:44  strull: *version
21:45  fifou: yes, so vim don't change mapleader I suppose. next mapping similar to map <Leader>key are linked to \ aren't?
21:45  fifou: or <Leader> is not understood?
21:45  strull: no, mapleader is simply not known to vim
21:46  fow: fifou, what's the full error you actually get?
21:47  fifou: Sorry, the command is not available in this version: let mapleader=","
21:48  jerojasro: fifou: seems to me you need the has() vim function. check its help
21:48  strull: looks rather that even :let is not known to this vim
21:48  fifou: but has is to test module and module is generally annonced by :help functionnality, not here
21:48  strull: what gives :ver  ?
21:49  graywh: sounds like a tiny build
21:49  fifou: I have the same opinion than strull
21:49  fifou: I do not have this version on my current pc, so I can't do :ver
21:50  fifou: I just would like to think about eventual possibility to erase this error of the list if I'm using vim-tiny on debian
21:51  strull: fifou: my suggestion is : don't try this. It's not worth the trouble.
21:51  graywh: if 1
21:52  strull: live with the errors in the rare cases you have to use vim-tiny
21:53  fifou: strull, you probably right...
21:53  jerojasro: mgedmin's vimrc works even with vim-tiny, iirc. mgedmin: ping
21:53  graywh: since vim-tiny is -eval, if 1 | :let x='a' | endif
21:53  fifou: I needed to think about this issue with you but I agree
21:53  fifou: if 1 ??
21:54  graywh: it really works
21:54  fifou: hm ok
21:54  graywh: or you can use exists(':let') == 2
21:55  jerojasro: fifou: :h no-eval-feature
21:55  fifou: the second solution seems more beautiful
21:57  fifou: thank you for help. I'm going to test it.
21:58  Raimondi: graywh: Hod do you use exists(':let') ? don't you need a conditional there?
21:59  strull: sure
22:03  mcantor: I have a file full of SQL insert statements; I need to replace the 3rd argument of each VALUES() with the 8th argument on that line + 1.  Is there a way to do this other than recording a macro?
22:04  [azoic]: Is there a guide to making taglist and exuberant ctags work with languages that are mapped to other languages? e.g. exuberant ctags maps pyrex to python. I wanna know how to make taglist recognize the generated tags.
22:04  mcantor: (cont'd) ... something like :g/VALUES/s/[0-9]\{8\}/=.!awk -F, '{print $8}' + 1/ ...??  not even sure if that would work...
22:05  fifou: why do you want to avoid macro mcantor ? It would be really easy.
22:05  djmccormick: ^
22:07  ezzieyguywuf: graywh: mcantor thanks
22:07  mcantor: fifou: For some reason, macros just never end up working for me.  I always make them too complicated, or I rely on a property of the line I'm editing that isn't reflected in all the lines.
22:08  fifou: ^^ it's not easy to think about other lines when recording a macro but if you spend time on it, it will be ok easily
22:09  djmccormick: in the case of a SQL file you've probably got exactly 8 sets of quoted and/or comma-delimited fields right
22:09  djmccormick: should be pretty straightforward
22:10  mcantor: Yeah... and I can always blast the macro register out and edit it if need be (eeeek!!)
22:12  mcantor: How can I set a variable to the result of a shell expression?
22:14  mcantor: hmm, maybe system()...
22:14  mcantor: Gah... but I need to pass the current line, like with :.!awk
22:15  mcantor: OK... so my real question is: How can I set a variable to the result of a filter expressoin?
22:21  mcantor: :-\
22:21  IznastY: :-|
22:25  mcantor: Anyone?  I guess alternatively, I could pass the contents of the current line to a system() call
22:26  Araxia: mcantor: i think that would be the way to go.
22:28  mcantor: What's the Ex command for getting the contents of the current line...?
22:29  mcantor: Or the contents of a given line number?
22:29  DHulme: :p
22:30  mcantor: DHulme: For a second I thought you were just razzing me!
22:30  DHulme: but probably getline() is more convenient if you're passing it to system()
22:31  Araxia: so, getline(".") for the current line.
22:31  mcantor: Ahhhh.  There we go.  Thank you.
22:31  mcantor: Man, I wonder why I couldn't find that in the docs myself.
22:32  DHulme: oh, I've given up wondering that
22:32  DHulme: you'd be surprised what some people can't find in the docs for themselves
22:32  mcantor: DHulme: I love Vim's help docs.  I use them extensively
22:32  DHulme: me too
22:33  mcantor: I have the most trouble when I'm writing vimscript
22:33  DHulme: but on here, sometimes I feel I'm the only one
22:33  DHulme: agreed, the expression stuff is not the best indexed
22:33  mcantor: Well, most people don't even realize that you can do :he i_<C-o> to ask "what does this do... *in insert mode*?"
22:33  Araxia: :helpgrep is pretty awesome.
22:33  mcantor: Araxia: I :helpgrepped for "line number", but there were juuuust too few results to really pare it down effectively.
22:34  mcantor: It is pretty effin' sweet, though
22:34  mcantor: I didn't know about the "quickfix" stuff.
22:35  mcantor: Also, I just realized that if you open a help file, and then do C-X, C-L in insert mode in the buffer you're editing, you can easily copy an entire line of code from the help file
22:35  mcantor: That RULES.
22:35  DHulme: oh, I didn't realise ctrl-x ctrl-l worked across buffers
22:35  mcantor: Yeah!
22:36  DHulme: that's slightly useful
22:36  strull: DHulme: I think it works like ^n
22:38  iaj: mcantor: huh... ^X ^L is line completition isn't it? I mean from the current buffer?
22:38  iaj: nevermind.
22:49  Araxia: mcantor: fwiw, :help usr_41.txt has a lot of great information about writing scripts.
22:58  mcantor: Araxia: Thanks!
23:08  DarkUranium: hey, are there any plugins/scripts/hooks/whatever for vim for collaborative dev in existance?
23:08  DarkUranium: along the lines of Gobby
23:09  amigrave: how can I identify if vim is running under cygwin in my vimrc ?
23:10  Raimondi_: has('win32unix')
23:10  gkatsev: or win64unix
23:11  gkatsev: probably
23:11  gkatsev: if you are running 64bit win
23:11  amigrave: cool thanks !
23:29  MarcWeber: DarkUranium: Not that I know about it. SSH and screen works well for some use cases.
23:30  DarkUranium: MarcWeber: how would I share a screen?
23:36  Rakko: How do I echo something in a script and have Vim wait for a keypress before deleting it? It seems like it sometimes does that automatically, but other times the text is erased before I can see it.
23:37  strull: Rakko: :he input()
23:37  Rakko: thanks
23:37  Rakko: why does vim sometimes do that without me asking?
23:38  Rakko: hmm, maybe it only does it automatically for builtins
23:39  Araxia: Rakko: if something emits more than 1 line. see :help messages
23:40  tsolox: i'm looking towards customizing my vim syntax coloring, particularly making commented lines as gray..are there good collections of themes out there i can choose from?
23:40  Rakko: Araxia: that's what I thought, but in my scripts if I echo "\n\n\n" it doesn't pause
23:40  spiiph: vimgor, colorschemes
23:40  vimgor: Get the Vim Color Sampler Pack at <http://tinyurl.com/vimCSP>. If you use Vim in a terminal, then get CSApprox at <http://tinyurl.com/vimCSA> to make gVim themes work perfect from an 88/256 color terminal. Want MORE options, go to <http://tinyurl.com/vimCST>
23:43  _numbers: how do i make it so vim search happens as i type instead of after i hit enter
23:43  strull: _numbers: try :set incsearch
23:46  _numbers: thx strull
23:46  Araxia: Rakko: they have to be separate echos. e.g. :echo "foo" | echo "bar"
23:46  Rakko: ahhhh
--- Log closed Fri Oct 22 00:00:26 2010
