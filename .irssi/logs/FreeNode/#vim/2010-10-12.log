--- Log opened Tue Oct 12 06:14:53 2010
06:14 --- Users 562 nicks [0 ops, 0 halfops, 0 voices, 562 normal]
06:15 --- Channel #vim was synced in 71 seconds
06:15  Rakko: damn, win2k is fast :D
--- Log closed Tue Oct 12 08:47:14 2010
--- Log opened Tue Oct 12 08:47:37 2010
08:47 --- Users 558 nicks [0 ops, 0 halfops, 0 voices, 558 normal]
08:50 --- sjl_ is now known as sjl
--- Log closed Tue Oct 12 08:50:43 2010
--- Log opened Tue Oct 12 08:51:03 2010
08:51 --- Users 557 nicks [0 ops, 0 halfops, 0 voices, 557 normal]
08:51  jeffszusz: any reason the plugins i have in a particular directory aren't loading?
08:52  jeffszusz: ooo waitaminute
08:52 --- Channel #vim was synced in 67 seconds
08:52  Raimondi: jeffszusz: Does it appear in   :scriptnames
08:52  Raimondi: ?
08:52  jeffszusz: nope
08:52  jeffszusz: it's in ftplugin
08:52  jeffszusz: so
08:52  jeffszusz: filetype plugin on has to be set right?
08:52  Raimondi: For what fileytpe?
08:52  Raimondi: Yes
08:52  jeffszusz: .py
08:52  jeffszusz: hm seems it's already set
08:53  Raimondi: What's the name of the nfile?
08:53  jeffszusz: python.vim
08:54  jeffszusz: in .vim/ftplugin
08:54  carlesso: can I set some directive in my .vimrc with respect to the language using?
08:54  jeffszusz: oh wait
08:54  jeffszusz: vim/after/ftplugin
08:55  jeffszusz: oh wow, okay
08:55  jeffszusz: apparently
08:55  Raimondi: carlesso: :h FileType
08:55  jeffszusz: if i'm in a .py file it works
08:55  jeffszusz: but if i have only :set filetype=py it does NOT work.
08:55  Raimondi: jeffszusz: Whod did you expected it to work?
08:55  Raimondi: set filetype=python
08:56  jeffszusz: hm i tried =python and it burped at me. must've mistyped
08:57  carlesso: Raimondi, thanks, I see, FileType and filetypes are quite explanatory. But cannot understand how to do a if check
08:58 --- daniel___ is now known as daniel
08:58  Raimondi: au FileType * if &filetype == python | set expandtab | endif
08:58 * jeffszusz needs to make a vim cheatsheet
08:58  Raimondi: carlesso: ^
09:04  k-: jeffszusz: don't forget to paste.. ;)
09:04  carlesso: hum what is that | | sintax : ( sorry, quite new to vim configuration
09:04  Raimondi: | allows to use multiple commands.
09:04  carlesso: ah I see
09:04  jeffszusz: lol, k-, you want a cheatsheet if i make one?
09:04  carlesso: and why does it not work? => au FileType * if &filetype == ruby | set smartindent | set tabstop=2 | set shiftwidth=2 | set expandtab | endif
09:05  k-: sure: there a plenty of the around, but another _one_ couldn't hurt.. :P
09:05  jeffszusz: lol
09:05  k-: lulz
09:05  jeffszusz: i plan to make one as a dashboard widget
09:05  jeffszusz: remove all the other widgets
09:05  jeffszusz: and have this one as big as i can make it
09:05  Raimondi: carlesso: Are you putting that in your vimrc?
09:05  jeffszusz: just so i can use the dashboard button on my keyboard at any time to get the vim cheatsheet hah
09:05  Raimondi: vimgor smartindent
09:05  vimgor: Don't you mean stupidindent? In all seriousness, 'smartindent' is an obsolete option for C-like syntax. It has been replaced with 'cindent', and setting 'cindent' also overrides 'smartindent'. Vim has indentation support for many languages out-of-the-box, and setting 'smartindent' (or 'cindent', for that matter) in your .vimrc might interfere with this. Use 'filetype indent on' and be happy.
09:05  Raimondi: carlesso: ^
09:06  k-: awesome: can't wait to see it in action..
09:06 * k- now uses smartindent because autoindent handles pasting very poorly..
09:07  k-: or i'm just doing something wrong... =\
09:07 * jeffszusz just uses > and < to indent/outdent
09:08  Raimondi: carlesso: MY mistake, you need to use &filetype == 'ruby' , enclosed in quotes.
09:10  sgronblo: the colors in gvimdiff are like virtual pukes
09:12  davidfetter: bash.org!
09:12  joeytwiddle: i changed them to red, green and blue
09:13  jeffszusz: well i'm off to bed
09:13  jeffszusz: later
09:14  Tasser: is ruby1.9 support being fixed in next time?
09:16  carlesso: thanks a lot Raimondi!!! :)
09:16  Raimondi: np
09:17  carlesso: But I cannot go to a newline while using this sintax?
09:17  carlesso: with a \ ?
09:18  Raimondi: carlesso: What are you trying?
09:19  carlesso: Raimondi, this http://pastie.org/1214836
09:19  carlesso: is it "correct"
09:19  Raimondi: You missed a | after expandtab
09:20  KRF: k-: there's a "pastetoogle" shortcut for that
09:20  carlesso: it works in this way, but was asking if it's the correct way to go to a newline when splitting a command
09:21  Raimondi: That's a yes.
09:21  carlesso: Thanks a lot again
09:22  k-: KRF: to viiew cheetsheets?
09:22  k-: /viiew/view/
09:22  KRF: [09:06:42] -*- k- now uses smartindent because autoindent handles pasting very poorly..
09:22  k-: /cheet/cheat/ :wow i'm sleepy
09:22  k-: oh, ok... i get where this is going...
09:23  iaj: anyone ever tried java in vim? ãƒ„
09:24 * k- feels that paste-toggle will decrease productivity..
09:24 * KRF does not feel that
09:29  k-: could i map it to one key? such as ":if exists(<"i do not know what to put here") <Bar> \ set paste <Bar> \ else <Bar> \ set nopaste <Bar> \ endif" ??
09:30  k-: /endif/endif <CR>/
09:31  Kismet010: morning
09:34  iaj: hmm I've got a question, Nnoremap yad ggyG
09:34  iaj: got that in my vimrc... nnoremap even - but how can I make yad work with registers as well?
09:49  behelit: hi. when filetype.vim is loading, .bashrc is identified as a bash script and the filetype is set to bash. there is no syntax/bash.vim, where is the syntax for bash-scripts "loaded"?
09:50  dunz0r: behelit: It uses sh.vim iirc
09:51  behelit: dunz0r: seems like it, but how is the syntax file loaded?
09:51  dunz0r: Like any other syntax file.
09:53  behelit: dunz0r: in my world that means that i should have a .vim-file with the same name as the filetype, there is however no bash.vim in syntax/ meaning that it's loaded in some other way
09:54  Raimondi: behelit:  It should be in $VIMRUNTIME/syntax
09:54  behelit: Raimondi: i cannot find it in vim73/runtime/syntax
09:55  behelit: there's a sh.vim, but no bash.vim
09:55  Raimondi: As dunz0r wrote up there, sh.vim is the one being loaded.
09:55  Raimondi: behelit: Type  :scriptnames  and see which file is loaded.
09:56  iaj: how would you guys replace a whole document with something you got in a register somewhere?
09:57  behelit: and HOW is it loaded?
09:57  behelit: sorry about the caps, just emphasizing what my question is.. not shouting P
09:59 --- EselTheo_ is now known as EselTheo
10:03  Raimondi: What are you trying to do? behelit
10:04  behelit: raimond: learn how it works
10:05 --- EselTheo_ is now known as EselTheo
10:08  behelit: Raimondi: i see that sh.vim is sourced when i edit bashrc, but i can't see from where, or why, it is loaded
10:10 --- EselTheo_ is now known as EselTheo
10:10  behelit: Raimondi: if i unset the rtp and re-create parts of filetypes.vim and the syntax dir in a sandbox, sh.vim is not loaded.. so i can only assume that there is something somewhere telling vim to load the sh syntax for filesof filetype bash
10:12  behelit: but ok, i'm totally wrong. the ft is actually sh
10:13  Raimondi: Well, good to know, I was looking for the place where sh.vim was being called and couldn't find it :)
10:14  behelit: Raimondi: i'm orry for the goose chase, i was so certain that i set ft reported bash .. it must have been in the middle of my experiments :/
10:14  Raimondi: No problem, I should have checked that first :)
10:29  behelit: ok, another, possible equally stupid question: if i create a vimrc with two lines: set runtimepath= and syntax on vim reports that /opt/local/share/vim/vim73/syntax/syntax.vim .. how does vim know about that file? is it relative to the binary or are there some settings that are always loaded?
10:30  Raimondi: Have you checked  :h starting.txt  ?
10:30  iaj: how can I yank to a register using an ex command?
10:31  spiiph: :h :y
10:37  iaj: spiiph: is it possible to define a mapping like "ayad to yank a document to register a?
10:40  spiiph: You could do it with an operator mapping, but what's wrong with :%y<CR>?
10:42  iaj: spiiph: yeah well, you are right...  I just had a yad = ggyG  mapping but it gets ripped when I use netrw... so I tried to find a solution
10:42  iaj: :%y register  will do then :\
10:44  spiiph: gets ripped when you use netrw?
10:47  behelit: Raimondi: I think I found it in src/misc1.c thanks
10:49  silasdavis: how can I delete a line, up to, but not including the newline?
10:49  spiiph: D
10:49  iaj: spiiph: yeah well I go to one file, press yad there .. which yanks it to the basic "" register I guess.. but when I open up another file and ggVG p.. its not working?
10:49  iaj: s,?,\.,
10:49  spiiph: iaj, that should work
10:50  iaj: spiiph: yeah... I thought so as well.. dunno what's breaking it
10:50  iaj: something is messing with the unnamed register :\
10:50  spiiph: Whatever it is, you should fix it.
10:51  iaj: spiiph: right.
10:51  silasdavis: spiiph: thanks
10:55  silasdavis: how do I 'find' backwards, like df), but backwards? I thought it was dF(...
10:55  spiiph: Did you check the help to verify that what you thought was right?
10:56  silasdavis: spiiph: yes, didn't seem to work
10:56  silasdavis: but because I'm an iditio
10:56  silasdavis: was using "
10:56  silasdavis: that's special isn't it, sorry
10:57  spiiph: Aww, that's okay. :)
10:57  iaj: dF( should work imo. if its on the same ilne.
10:57  iaj: s/ilne/line
10:57  silasdavis: how would I get dF" to do what I mean in this instance?
10:58  spiiph: I'm not precisely sure what you want it to do
10:58 --- daniel__ is now known as daniel
10:59  silasdavis: delete up to the previous quotation mark
10:59  iaj: dF" would delete every thing from cursor position to the previous "
10:59  spiiph: }}No
10:59  avinashhm: hi, is it possible for vim to detect that the file has changed .. and ask to reload ??? [ If we have changed it with another editor ]
10:59  spiiph: Bah
10:59  frogonwheels: silasdavis: on the same line of course
11:00  spiiph: No, dF" deletes from the character left of the cursor, up to and including the previous "
11:00  spiiph: silasdavis, maybe you want dT" ?
11:00  iaj: if its not in the same line d?" that would exclude the " tho
11:01  silasdavis: ah, it's because I have a " selected it seems
11:01  frogonwheels: silasdavis: and sometimes  di" might be what you wante too
11:02  silasdavis: it just moves me one charcter forward and highlights the quotation mark pair
11:03  silasdavis: di, dt, dT are all good to know though
11:21  trondth: I often wants to put $ on both sides of a character or word when writing latex. Is there an easy way to do this?
11:25  iaj: trondth: take a look at surround.vim plugin.. then csw$ for example would enclose the current word with $'s
11:25  trondth: Sounds like a plugin for me! I will check it out.
11:40  KeeperOfTheSoul_: how do I turn off automatic indentation, I have :set noautoindent nosmartindent nocindent
11:41  KeeperOfTheSoul_: so I assume it is the syntax file somehow that is indenting?
11:52 --- sjl_ is now known as sjl
12:00  srk9: Vim does some sort of weird tabbing when I try to paste text. Is there any way to paste text without it doing that?
12:01  Jerub: srk9: :set paste
12:01  Jerub: then, afterwards, :set nopaste
12:01  srk9: Jerub: What is the downside to having :set paste set all the time?
12:02  dindinx: :help 'pt' will be helpful too.
12:02  dindinx: srk9: they are discribed in :help 'paste'
12:03  srk9: Thanks.
12:18  rical: can I somehow print tabstop value in statusbar?
12:19  dindinx: rical: %{&tabstop}
12:25  rical: dindinx: thanks
12:28  KeeperOfTheSoul_: how do I select a text-object as a range for an ex command?
12:31  spiiph: vap:'<,'>s/foo/bar
12:31  KeeperOfTheSoul_: I was wondering if it could be done without altering the selection, that's all (or more to the point the cursor location)
12:35  minh: 'vim -p *.c' opens each file in a separate tab...is there an equivalant CL-switch for splitwindow?
12:36  KeeperOfTheSoul_: -o
12:36  KeeperOfTheSoul_: or -O for vertical splits
12:37  minh: KeeperOfTheSoul_: Thank you very much!
12:38 --- sjl_ is now known as sjl
13:12  smorg: Can you use a vim server to look at two different buffers in two X windows running in the same vim instance at the same time?
13:12  KeeperOfTheSoul_: oh, still wondering how to disable automatic indentation
13:12  KeeperOfTheSoul_: I have :set noautoindent nosmartindent nocindent
13:12  KeeperOfTheSoul_: yet it still indents (incorrectly)
13:12  smorg: Or I guess it would be more like two different vim instances which share the same buffers, since you can't just use a shared Screen instance to do that
13:13  smorg: KeeperOfTheSoul_: what filetype?
13:14  KeeperOfTheSoul_: smorg: html, I assume it has something to do with syntax
13:14  KeeperOfTheSoul_: is there a missing option that determins syntax indentation?
13:26 --- sjl_ is now known as sjl
13:30  apropos: Hmm, vim's C syntax highlighting doesn't like this: puts((char[]){'H', 'e', 'l', 'l', '0', '\0'});
13:30  apropos: It highlights the '{' and '}' in red.
13:32  apropos: Oh well
13:32  smorg: KeeperOfTheSoul_: noai doesn't work for me either with html. Though I think it might have to do with my global config.
13:36  smorg: Eh, I've never had a desire to turn it off.
13:38 --- Walt is now known as lightningsaxopho
13:38 --- lightningsaxopho is now known as lightningflute
13:39  KeeperOfTheSoul_: smorg: it keeps mis-indenting my javascript
13:41 --- sjl_ is now known as sjl
13:43  jamessan: KeeperOfTheSoul_: are you using 7.3?
13:44  jamessan: KeeperOfTheSoul_: and Vim doesn't have any autoindent turned on by default, so you shouldn't have to explicitly disable those
13:44  KeeperOfTheSoul_: 7.2
13:45  jamessan: KeeperOfTheSoul_: ah, 'cindent' was given some javascript smarts in 7.3
13:50  iaj: when I fired up files with vim *.c  how can I not only go to the next file in that arglist.. but close the previous one, abandoning changes?
13:50  iaj: :n still keeps it in the bufferlist
13:51  KeeperOfTheSoul_: jamessan: do syntax scripts cache the value of autoindent?
13:52  KeeperOfTheSoul_: jamessan: since I have set ai in my vimrc, I ran :set noai manually when the indentation went funny
13:52  KeeperOfTheSoul_: though I just thought ai maintaned the indent level of the previous line
13:53  KeeperOfTheSoul_: this is actually altering the indent level
13:55  spiiph: :h 'ai will tell you precisely what it does
13:57  KeeperOfTheSoul_: right, and that says it just copies from the previous indent unless smartindent or cindent is on
13:57  KeeperOfTheSoul_: which is why I really don't understand why it is indenting when I've disabled indentation
13:57  smorg: Yeah it does always seem to increase the indent
13:58  KeeperOfTheSoul_: no in this case sometimes when I type; { it removes the indent completely
13:58  KeeperOfTheSoul_: and then on the next line indents by 3
13:58  spiiph: What's does ':set ai? si? cin? ci?' say? What does :filetype say?
13:58  KeeperOfTheSoul_: or often indents by 3 tabs + 1 space
13:58  KeeperOfTheSoul_: spiiph: no
13:59  spiiph: I'm quite sure it doesn't say that...
13:59  smorg: Are you in a CDATA section
13:59  smorg: might make a difference
13:59  KeeperOfTheSoul_: smorg: no, <script> section, but shouldn't syntax still honour my indent settings?
13:59  smorg: perhaps not for a file with multiple embedded languages
14:00  KeeperOfTheSoul_: so any setting to change that yet keep syntax highlighting? or do I have to hack the syntax file?
14:00  spiiph: No
14:00  spiiph: This has nothing to do with the syntax file.
14:00  smorg: I tried it, it's impossible
14:00  KeeperOfTheSoul_: spiiph: then what?
14:00  spiiph: And it's not a doing of 'autoindent'
14:01  spiiph: If you answer my question, maybe you'll find out
14:01  KeeperOfTheSoul_: spiiph: like I said, no; noautoindent, nosmartindent, nocindent, nocopyindent
14:01  spiiph: OK, that was not clear.
14:01  spiiph: What about :filetype?
14:02  KeeperOfTheSoul_: ft=html and I'm in a <script> section
14:02  spiiph: :filetype, not :set ft?
14:02  KeeperOfTheSoul_: ah, so there is another indent setting
14:03  spiiph: Yes.
14:03  smorg: so what does having ai on do then?
14:04  smorg: just increase indents automatically
14:04  spiiph: No
14:04  nroc: hey, is there a vimscript function for :substitute?  similar to match() that'll let me specify a rangle & replacement?
14:04  spiiph: It does precisely what :h 'ai says
14:04  nroc: heh rangle/range
14:04  smorg: ai copies indents from the current line to the new line even when ai is off
14:04  spiiph: nroc, you'll have to call :h substitute( on each line.
14:04  KeeperOfTheSoul_: spiiph: ok, so I did :filetype indent off
14:04  spiiph: smorg, no, it doesn't.
14:05  KeeperOfTheSoul_: spiiph: yet, still it auto-indents, but now it isn't deleting the indent
14:05  nroc: spipph: ugh ok, I think i'll stick with what I've got then :)
14:05  KeeperOfTheSoul_: though it is indenting too far, ie 2 tabs + 1 space
14:05  nroc: thanks
14:06  KeeperOfTheSoul_: ah, it seems to be doing some sort of smart auto-alignment to match the next line with the start of the function
14:06  KeeperOfTheSoul_: right, now how to disable that?
14:07  spiiph: KeeperOfTheSoul_, what does :set inde? say?
14:08  KeeperOfTheSoul_: spiiph: ah I see, and another indent setting, how many indent settings does vim have anyway?
14:08  spiiph: That should've been cleared when you did :filetype indent off
14:08  KeeperOfTheSoul_: odd
14:09  nico_le_terrible: hi all
14:09  KeeperOfTheSoul_: well excellent, now to make that the default when opening a html file
14:09  KeeperOfTheSoul_: spiiph: thanks
14:09  spiiph: No, sorry, I'm in error. :filetype indent off won't clear 'inde'
14:09  spiiph: :h :filetype-indent-off
14:10  spiiph: You'll have to clear 'inde' manually
14:10  KeeperOfTheSoul_: so what is the best way to make that default for all html files? use an autocmd?
14:11  spiiph: Yes, clear 'inde' in an autocmd, unless you want to turn off filetype indenting completely.
14:11  spiiph: (Which I don't recommend.)
14:12  KeeperOfTheSoul_: naw, I normally like it, but it is getting really confused within javascript in html files
14:15  smorg: weird. :filetype indent off, :set noai, :set inde="", then try making a few <div>'s and it still increases indents for you.
14:16  spiiph: smorg, you're doing something wrong
14:16  KeeperOfTheSoul_: smorg: smartindent or cindent?
14:19  KeeperOfTheSoul_: so for this autocommand, I should handle both FileType and Syntax?
14:19  nico_le_terrible: I try to add a ftplugin
14:19  spiiph: No, FileType is enough
14:19  nico_le_terrible: but it doesn't work
14:19  spiiph: Again, syntax doesn't have anything to do with indentation
14:19  spiiph: vimgor, doesn't work
14:19  vimgor: What happened? Did it fall asleep on your couch? Eat your homework? Destroy your hard drive? Be specific.
14:19  nico_le_terrible: I just put it in~/.vimrc/ftplugin
14:20  nico_le_terrible: restart vim
14:20  KeeperOfTheSoul_: spiiph: ah right, so file-type sets the indentation and the syntax
14:20  spiiph: That's obviously not right. Did you read the instructions?
14:20  spiiph: KeeperOfTheSoul_, FileType is called, IIRC, after loading the ftplugin and indent scripts.
14:20  spiiph: Syntax is called after loading the syntax script
14:21  spiiph: :h FileType, :h Syntax
14:22  nroc: hey spipph: that worked really nicely, thanks
14:22  smorg: Gentoo has a pretty in-depth global vimrc. I never set anything related to indenting in my user vimrc.
14:22  nroc: ended up needing to do it as :s doesn't ignore gdefault
14:22  nroc: whereas substitute seems to
14:22  nroc: substitute() rather
14:23  spiiph: nroc, right.
14:23  spiiph: np
14:24  DestinyAwaits: spiiph : Hello, Sir :-)
14:24  spiiph: hi
14:32  smorg: Oh well. The only lang with significant whitespace I have major indenting issues with is Haskell, but it seems just about every editor gets it wrong. Vim does quite well with Python.
14:33  ivan-kanis: how do you move in the : line without the cursor key?
14:34  spiiph: the : line?
14:34  ivan-kanis: spiiph: after you press the : key
14:35  spiiph: The command line. What do you want to do with it?
14:36  ivan-kanis: spiiph: edit it without using the arrow key
14:38  KeeperOfTheSoul_: spiiph: and thanks again, with that autocmd everything is good again
14:39  ivan-kanis: I am asking because I would like to keep the home keys
14:41  bziobnic: why does /[[:alpha:]] find all alphabetic characters but /[\a] does not?
14:43  dindinx: bziobnic: use /\a
14:46  bziobnic: dindinx: that matches '\', '/' and 'a' for me. I've tried lots of combos: \\a /\a \\\a /\/\a, etc, etc can't seem to just match alpha
14:46  apropos: /\a
14:46  deryni: You don't need the [] \a is a class already.
14:46  apropos: Oh, didn't read :P
14:46  apropos: Well /\a works for me.
14:47  apropos: vim 7.3 here
14:47  deryni: [:alpha:] matches the class inside [], \a matches the class by itself.
14:48  bziobnic: deryni: so \a does not work inside []? thanks, I did not know that
14:49  deryni: I didn't either, to be honest, but it would appear that it doesn't.
14:50  bziobnic: it seems like a strange limitation. I just want to match alpha and '_' and it seems [\a_] should work but I have to use [[:alpha:]_]
14:51  KeeperOfTheSoul_: could use \a|_
14:52  KeeperOfTheSoul_: bah, \| even; \a\|_
14:53  bziobnic: KeeperOfTheSoul_: I was forgetting to escape the pipe. Thanks. This is the thing I always forget when working with vim regex
14:54  KeeperOfTheSoul_: bziobnic: could up the magic level
14:55 --- booddin_ is now known as booddin
14:56 * mgedmin read "escape the pipe" and had flashbacks of The Shawshank Redemption
14:57  bziobnic: true. I just read a handy tip the other day that auto-inserted \v in front of every search. might make things easier on me.
15:00  iaj: How can I kill buffers 14-20 for example
15:01  apropos: for i in range(14,20)
15:01  apropos:     bdel i
15:01  apropos: endfor
15:02  iaj: apropos: can I somehow call something like that from within vim?
15:02  rdpate: bziobnic: you mean "map / /\v"?
15:02  apropos: iaj: you can type that on the command line, or put it in a function.
15:04  spiiph: ivan-kanis, :h cmdline-editing
15:04  iaj: apropos: mhhh, I only get one line to enter at the prompt
15:04  bziobnic: rdpate: yes
15:06  apropos: iaj: start the for statement and it'll prompt you for more lines - it'll even auto-indent!
15:07  iaj: apropos: yeah but if I hit <CR> I don't see my first entered line anymore
15:07  apropos: iaj: really?
15:07  apropos: Strange. I do.
15:08  iaj: :-( nah... mhh and if I hit <CR> after the bdel i... it says 'More than one match for i'
15:24  ivan-kanis: spiiph: thanx, too bad the emacs keys are not on by default...
15:26 --- sora_h is now known as sorah_off
15:26  Zathrus: ivan-kanis: it's vim. Why would it use emacs keys?
15:27  ivan-kanis: Zathrus: in the command line it seems natural, after all C-p is emacs-ish
15:29  Zathrus: c-p for Previous and c-n for Next dates back to LOOOONG before Emacs.
15:30  FranciscoD: hello, i'm using the vimc script for my needs,
15:31  FranciscoD: " \sif      if { }  "
15:31  FranciscoD: this gives if(){
15:31  FranciscoD: }
15:31  FranciscoD: can i somehow edit something to make it
15:31  FranciscoD: if()
15:31  FranciscoD: {
15:31  FranciscoD: }
15:31  FranciscoD: ?
15:31  FranciscoD: just a minor change to suit my style
15:32  ivan-kanis: Zathrus: didn't emacs existed before vim?
15:32  Zathrus: not before vi. And numerous other things used c-p/n
15:33  Zathrus: and prior to the existence of bash, most people did not use emacs keystrokes for command line editing (and I still don't)
15:36  RobertV: Any idea how to do this properly: ^\C[A-Z].*[a-z]$\%<60c
15:36  RobertV: "Line that starts with a captial letter, ends with a lower-case letter, before column 60"
15:37  RobertV: ^\C[A-Z].*[a-z]\%<60c$
15:38  RobertV: i think i was applying \%<60c to the wrong regex atom
15:39  ch077179: hey cool, just found out that vim works in powershell, like on *nix
15:40  Zathrus: RobertV: put \( and \) around the ^$
15:40  Zathrus: RobertV: although I'd think that it would apply the \%c to $
15:41  yogurt_truck: is there a way to make VIM's regex include utf-8 chars when using \w? or should i manually list those chars in my regex?
15:43  Zathrus: yogurt_truck: you'd have to list them
15:43  mgedmin: yogurt_truck, you could use \K, maybe
15:43  mgedmin: or \I
15:44 --- sorah_off is now known as sora_h
15:45  yogurt_truck: ah, because the yaml syntax file bundled with vim breaks with stuff like "resumÃ©: foo bar", but apparently the yaml spec does allow unicode
15:45  mgedmin: no, \I doesn't pick up accented letters, while \K does
15:45  yogurt_truck: and i'm seeing that the syntax file has this: syn match   yamlKey             '\w\+\(\s\+\w\+\)*\ze\s*:'
15:46  yogurt_truck: will try with \K, and if not I'll list them, thx.
15:46  iaj: is there something wrong about that statement:   g:/^"Test"/w >> foo.txt  ?
15:50  mgedmin: iaj, perhaps you meant :g rather than g: ?
16:02  iaj: Oh I actually used :g.. but it resulted in an endless loop
16:02  iaj: ^ mgedmin 
16:02  mgedmin: endless? weird
16:04  iaj: :-( yeh.
16:04  mgedmin: anyway, what it does is concatenate a bunch of copies of your full source buffer into foo.txt, where the number of copies is determined by the number of lines matching that pattern
16:05  mgedmin: :g/pattern/.w >> foo.txt would write just those lines matching your pattern
16:20  iaj: ohmg.. yeah.. I missed the . :-) thanks mgedmin 
16:21  visof: hello
16:22  visof: can i say , copy the content from the line n to the end of the file in a new file, or even remove the content from line n to end of file ?
16:27  mgedmin: assuming n=42, 42yG will copy the content into vim's unnamed register, while 42dG will remove it
16:27  mgedmin: visof: ^
16:27  mgedmin: sorry!
16:27  mgedmin: 42GyG and 42GdG
16:28  visof: mgedmin, 24GyG will copy that to unamed register , how can i paste that to new file name ?
16:29  mgedmin: ah, you don't want to copy, you want to write to a new file? :42,$ w newfile.txt
16:40  mcantor: How can I force a refresh of a buffer?  For example, when I type ":bn", ":bp", and the file has changed since it was originally read, Vim will warn me and I can reload it.  How can I force that behavior?
16:40  mcantor: For example, if I have only one buffer open.
16:40  mcantor: Obviously I could simply do :enew, :bp, but that's not very atomic.
16:41  Araxia: :mcantor :e
16:45  masak: I want to rebind the arrow keys to do nothing. any suggestions?
16:46  graywh: masak, :map <Left> <Nop>
16:46  masak: excellent. thanks.
16:47  iaj: Thats gonna frustrate all those users who want to edit in your vim who don't have a clue ;-)
16:48  masak: arguably a small group :)
16:49 * Kiruwa rebound his arrow keys to tab navigation... works fairly well
16:52  iaj: Kiruwa: that's an interesting idea... but then you need to move your hands :[
16:54  Kiruwa: It's more or less modal on a large scale... moving around tabs is usually accomplished with PageUp/PageDown + tab keys
16:55  Kiruwa: I've considered mapping to alt-hjkl as well... but it just didn't work as well for the times when I actually used it
16:55 * mgedmin can reach the arrow keys with his pinky without moving from the home row -- ThinkPad keyboards rule
16:56  mgedmin: but who am I kidding? I never learned to touch type
16:56  Kiruwa: mgedmin: go look up "typing of the dead" or somesuch... strangest program to learn from :)
16:57 --- lightningflute is now known as Walt
17:00  graywh: typing of the dead is awesome!
17:01  iaj: what is it??
17:01  graywh: like the shooting game house of the dead, but with keyboards
17:02  graywh: a friend of mine has the dreamcast port and 2 keyboards
17:02  iaj: haha :) sounds interesting!
17:11  daniel: graywh: i've even played it in an actual arcade in japan
--- Log closed Tue Oct 12 21:16:56 2010
--- Log opened Tue Oct 12 21:17:08 2010
21:17 --- Users 626 nicks [0 ops, 0 halfops, 0 voices, 626 normal]
21:18 --- Channel #vim was synced in 63 seconds
21:21  creidiki: hhmm. do after/ files work for colorschemes too?
21:21  lamdk: is there a quick way to clear all capital letter registers?
21:21  graywh: there are no capital letter registers
21:21  lamdk: i keep jumping to random files on accident when i try to hit 'a but press 'A instead
21:22  graywh: those are marks
21:22  strull: lamdk: don't confuse registers with marks
21:22  lamdk: oh i mean marks
21:22  jerojasro: lamdk: the best solution for that is to map your caps lock key to esc
21:22  jerojasro: vimgor: capslock
21:22  vimgor: It's common for Vim users to want to remap the Caps Lock key to Esc. Instructions on how to do this in MS Windows, see http://vim.wikia.com/wiki/VimTip75. For Unix-like systems, both using XWindows and the console, see http://vim.wikia.com/wiki/VimTip166.
21:23  creidiki: ive got mine remapped to ctrl, otherwise i keep pulling up the menu when I play games
21:23 --- dpyro_ is now known as dpyro
21:23  jerojasro: lamdk: it will also help you avoid trashing your file because you forgot that caps lock was enabled, and you were doing C, U, and friends instead of what you meant
21:24  lamdk: ma capslock key is mapped to ctrl also o_O
21:24  creidiki: but yeah. ive tried after/colors/<scheme>.vim but it doesnt work? O_o
21:24  lamdk: for some reason i keep holding down shift when i try to jump to mark
21:24  graywh: creidiki, no
21:25  jerojasro: hum, I see :)
21:25  creidiki: hhmm. ok. thanks :)
21:25  jerojasro: lamdk: you have to use shift to get ' ?
21:25  creidiki: i guess i better see if there's an autocmd that gets called after :colorscheme
21:26  creidiki: ah, ColorScheme
21:36 --- ivanoats is now known as sustainableweb
21:40  macrobat: is there a way to extend a visual block passed the last character of the shortest line?
21:41  graywh: *past
21:41  mgedmin: :h 'virtualedit'
--- Log closed Tue Oct 12 21:50:19 2010
