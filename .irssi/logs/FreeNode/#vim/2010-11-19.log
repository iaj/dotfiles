--- Log opened Fri Nov 19 09:59:40 2010
--- Log closed Fri Nov 19 10:04:41 2010
--- Log opened Fri Nov 19 10:04:50 2010
10:04 --- Users 574 nicks [0 ops, 0 halfops, 0 voices, 574 normal]
10:04  the_isz: indietrash: gimme a sec, that should be possible
10:05  indietrash: also how do I do :s/$/\\ for the next fourteen lines?
10:05 --- Channel #vim was synced in 75 seconds
10:06  Raimondi: Would this work?  :s/{\_.*}//
10:06  indietrash: I tried 14s, but that obviously does /$/\\\\ for line fourteen, not the next fourteen lines, heh.
10:06  Raimondi: :.,+14s
10:07  indietrash: yay. thanks.
10:07  the_isz: indietrash: i think  :s/$/\\ 14  should work, too
--- Log closed Fri Nov 19 12:14:04 2010
--- Log opened Fri Nov 19 12:14:25 2010
12:14 --- Users 585 nicks [0 ops, 0 halfops, 0 voices, 585 normal]
12:14  the_isz: mhi^: yeah, the indentation = part of syntax thing takes some getting used to
12:14  the_isz: mhi^: other than that, i find python to be a really nice language
12:15  the_isz: LeoNerd: in my experience, only few scripts are really throwaway :)
12:15  LeoNerd: I find Python to be too much like safety scissors. No mutable variables. No anonymous closures. No "variable" name declarations...
12:15  mhi^: Well, I have nothing against it, but lack time to learn it ;)
12:15 --- Channel #vim was synced in 73 seconds
12:16  LeoNerd: Bizarre choices of some operators or functions;  % to mean sprintf,  a if cond else b  where anyone else writes  cond ? a : b
12:16  the_isz: LeoNerd: % is deprecated now :)
12:16  LeoNerd: Mhmm...
12:16  LeoNerd: Shock as language found to contain features that turns out was a bad idea and now considered harmful.
12:16  the_isz: LeoNerd: but the ternary thing is truly a little strange. but it reads great, i think
12:17  LeoNerd: while(<>) is truely a little strange, but it reads great, I think
12:17  LeoNerd: It's all just opinion
12:17  the_isz: fair enough :)
12:17  strull_: jeesus, in what channel am I?
12:17  the_isz: strull_: too friendly?
12:20  the_isz: strull_: the discussions, i mean?
12:20  strull_: too OT
12:20  LeoNerd: Eh. *shrug* The channel was quiet and idle before that
12:21 * the_isz nods.
12:21  LeoNerd: It's not -so- far off-topic for a techie channel. If someone else wanted to talk about vim, that would have taken precidence.
12:21  strull_: I know. I was not complaining - just wondering
12:22  indietrash: &wc
12:22  the_isz: LeoNerd: maybe i just like python better because i grew up with object-oriented languages.
12:22  LeoNerd: *shrug* Perl has objects.
12:22  the_isz: LeoNerd: i didn't want to bash perl either, sorry if i made it sound like that
12:22  LeoNerd: Perl has very powerful objects..
12:23  LeoNerd: Though it knows not everything is always an object, so doesn't try to make it so
12:23  strull_: let's talk about APL
12:23  the_isz: LeoNerd: hmm... they must be well hidden^^ or i didn't look properly
12:23  mhi^: 12:22        the_isz | LeoNerd: maybe i just like python better because i grew up with object-oriented languages.
12:23  mhi^: See, mainly C, ASM and Perl here :P
12:23  LeoNerd: Hah.. Perhaps not...
12:23 * LeoNerd tends not to really do any ASM stuff any more
12:24  LeoNerd: Heh.. I don't even do that much C these days unless it's XS code behind some Perl
12:24  mhi^: Hah, I just start to really dive into reversing, since it's a cool feeling being able to FULLY understand a program :)
12:25  LeoNerd: Oh.. heh.. I don't mind reading assembly code on occasion, I just never seem to have a need to write any
12:25 * mhi^ nods
12:26  strull_: I've done some embedded system development when I needed asm last time
12:26  strull_: and ... I sure used vim for this
12:29  sqz: LeoNerd: what kind of projects do you use Perl for? webprojects?
12:30  LeoNerd: I don't really do web stuff, no
12:30  sqz: LeoNerd: I'm curious about its application besides shellscript-style scripts
12:30  LeoNerd: One of my bigger projects is this very IRC client here :)
12:30  sqz: LeoNerd: ah nice one
12:30  LeoNerd: http://www.leonerd.org.uk/code/circle/  <== the client I use on Freenode
12:31  sqz: LeoNerd: I have a friend who works at a company where they have a custom perl applications which handles millions of bookings (travelagencies) each day
12:31  LeoNerd: Sure..
12:31  sqz: LeoNerd: do you also use Perl for clients?
12:31  LeoNerd: It's a general-purpose language. People use it for all sorts
12:31  LeoNerd: "clients" ??
12:32  pk4r: Hey, how do I map CTRL+q and CTRL+SHIFT+q in insert mode ? inoremap <silent> <buffer> <c-q>.. is enough to start ?
12:32  sqz: LeoNerd: hehe jeah..you know..like real persons
12:32  LeoNerd: I'm not sure I understand what you're asking...
12:33  sqz: LeoNerd: well suppose somebody walks up to you (a client), and says "hey can you build this for me? I pay you $500"
12:33  sqz: have you ever used perl in situations like that?
12:33  LeoNerd: I don't do paid consulting stuff, so... no :P
12:33  sqz: 'consulting'?
12:33  LeoNerd: But if someone wanted me to make something I probably would do it in Perl yes, because it's very quick for me to write
12:33  LeoNerd: "You pay me money, I'll write you something" => consulting
12:34  sqz: thanx
12:34  sqz: actually learned something today :)
12:34  sqz: anyways, look pretty tight, your circle irc client
12:34  LeoNerd: Mhm
12:36 * sqz -> coffee
12:36  sqz: (well actually its decafe hehe)
12:37  LeoNerd: Hah.. That's not real coffee
--- Log closed Fri Nov 19 13:42:33 2010
--- Log opened Fri Nov 19 13:42:51 2010
13:42 --- Users 595 nicks [0 ops, 0 halfops, 0 voices, 595 normal]
13:44 --- Channel #vim was synced in 77 seconds
13:45  rindolf: Hi all.
13:45  rindolf: mhi^: hi.
13:45  bosie: i just opened a file and at the beginning of each line i see a 'diamond' so to speak
13:45  mhi^: hey rindolf ;]
13:45  rindolf: mhi^: where have you gone?
13:46  bosie: can't seem to figure out what character that is
13:46  mhi^: rindolf: I sometimes part so I don't get distracted from doing stuff :)
--- Log closed Fri Nov 19 13:47:54 2010
--- Log opened Fri Nov 19 13:48:26 2010
13:48 --- Users 599 nicks [0 ops, 0 halfops, 0 voices, 599 normal]
13:49 --- Channel #vim was synced in 72 seconds
13:51  mhi^: firekraag: Open an .h file and do ":echo &ft". I will probably be 'cpp'. If you check /usr/share/vim/vim7?/indent/cpp.vim, you'll see that there are no real rules. It just sets cindent and uses its built-in rules.
13:51 --- vin is now known as JESUS
13:52 --- JESUS is now known as vin
13:52  mhi^: zaarg: what's the problem?
13:54  mhi^: firekraag: To give you an answer.. if you want different indentation for .h than for .c, you'll need something like: au BufRead,BufNewFile *.h setlocal cinoptions=...
13:56  firekraag: mhi^: In fact I'd like the same indentation for C and H, but not for CPP
14:06  firekraag: Ok I directly put `au BufRead,BufNewFile *.h ...` in my ~/.vimrc like a fat pig, since .h indentation rules are not defined in cpp.vim either
14:10  zaarg: mhi^: the problem is it doesn't work
14:11  zaarg: by modleine i mean statusline btw
14:27  the_isz: vimgor: doesn't work
14:27  vimgor: What happened? Did it fall asleep on your couch? Eat your homework? Destroy your hard drive? Is it making faces at you? Does it want more money? Is it sleeping with your best friend? Please be specific!
14:27  the_isz: zaarg: ^
15:45  Accolade: do I understand :h index right, in that there are no default alt-/meta-key mappings?
15:45  mklappstuhl: what plugin do you recommend/use for pasting to online paste services?
15:46  tlonim: there is a gist plugin but it is broken
15:47  iaj: mklappstuhl: im using LodgeIt.vim - im pretty happy with it
15:47  mklappstuhl: tlonim: yup, unfortunately
15:48  tlonim: have they fixed it -- the github people ?
15:50  mklappstuhl: no afaik
15:57  Accolade: I would like to use an Umlaut key (e.g. ä) as a modifier - meaning something like I could do än än än by doing <ä down>nnn<ä up>. Is there any way for this in vim? A hack, using events, if necessary?
15:58  mgedmin: you can't do this in vim
15:58  Accolade: mgedmin, thx
15:58  Accolade: I might try some AutoHotkey wizardry on top of it then sometime
16:01  pigdude: Accolade: Are you by any chance using a Mac?
16:01  Accolade: pigdude, no
16:01  pigdude: Accolade: tü bad
16:01  Accolade: :)
16:03  sharat87: so if I launch evim, or vim -y, would my ~/.vim/evim.vim be sourced? The docs say the $VIMRUNTIME/evim.vim is sourced, so does that mean the evim.vim in my .vim directory is not sourced?
16:03  Accolade: are there commands or API calls to control the application-window size of GVim?
16:04  graywh: sharat87, $VIMRUNTIME is not $HOME/.vim
16:04  sharat87: Accolade: set lines=30 columns=40
16:04  mklappstuhl: somebody should really fix the gist plugin :)
16:04  Accolade: sharat87, awesome, thanks!
16:05  sharat87: graywh: so, is there another way I can tell vim to source a particular file if vim is launched with -y?
16:05  sharat87: Accolade: np :)
16:05  graywh: sharat87, you can test against v:progname
16:06  graywh: or check &insertmode
16:07  sharat87: graywh: woo, v:progname is just what I need :)
16:07  sharat87: thanks
16:07  graywh: note that v:progname won't be "evim" if you do vim -y
16:09  mklappstuhl: how can i set a constant provided by a plugin
16:11  sharat87: graywh: oh, that's ok I guess, its mostly evim I need to detect
16:12  Accolade: and is there other Vim window related functionality accessible? E.g. I'm used to doing <Alt-Space>n which opens the window's context menu and chooses minimize. Is something like that possible with built-in tools?
16:16  graywh: that's your window manager's job
16:16  graywh: not vim's
16:17  Accolade: well, vim hinders it from doing it, as it does not pass through the <a-space>
16:17  mgedmin: Accolade, on Windows, you can do some of those window context menu actions with some command that I forgot
16:17  mgedmin: :simalt
16:17 * graywh uses his ubuntu-key for window manager stuff
16:18  Accolade: mgedmin, excellent, thanks!
16:20  Accolade: my use case is even included as an example :)
16:20  Accolade: <- happy
16:22 * mgedmin tells Accolade about /me
16:22  Accolade: <- knows :P
16:22  graywh: ...
16:23 * Accolade <- happy
16:23  Accolade: there :)
16:26 --- paradigm is now known as BigBrother
16:26 --- BigBrother is now known as Big_Brother
16:26 --- Big_Brother is now known as paradigm
16:26 --- paradigm is now known as BigBrotherBot
16:27 --- BigBrotherBot is now known as paradigm
16:35  sangho: how can i express → key  in vimrc? (for example ESC key is express vimrc in <ESC>)
16:35  LeoNerd: <Left>   perhaps?
16:35 * mgedmin sees <Right>
16:35  sangho: thanks
16:36  mgedmin: sangho, you can go into insert mode, press Ctrl-K, then press a key and get vim's name for that key
16:36  elik: mgedmin: you shouldn't abuse it though
16:36  sangho: sorry about my English
16:36  mgedmin: this works for function/arrow keys
16:36  mgedmin: doesn't work for letters/ctrl+letters/alt+letters
16:36  rson: LeoNerd: lol.
16:36  mhi^: ;p
16:38  AlexMax: This may be a retarded question, but how do i 'refresh' a nerdtree?
16:38  AlexMax: after adding/moving a file?
16:38  LeoNerd: Umm... <Right>. Yes...
16:38  LeoNerd: I have troubles with Left vs Right :P
16:39  mgedmin: there's a simple mnemonic for that: when the arrow goes left, you use <Left>
16:40  mgedmin: :P
16:43  _rane: AlexMax: :NERD<tab>
16:43  _rane: it's something like nerdtreeflush
16:44  mklappstuhl: how can i set a constant provided by a plugin
16:46  AlexMax: _rane: nothing even close to that command exists
16:46  thesteo82: AlexMax: refresh with r
16:47  AlexMax: ah okay
16:47  AlexMax: had to select a node first
16:47  thesteo82: yep
16:49  mhi^: mklappstuhl: you mean are variable? Since constants are constant. ;P  Most probably: let g:variable = 1
16:49  BlkPoohba: in vi I can :g/^Stop:/d to delete all lines that begin with Stop: but how do I find a line that begins with Stop: and replace a string on those lines only?
16:49  mhi^: mklappstuhl: you often find more details in the plugin's help page.
16:50  AlexMax: While you're at it, why are the syntax files so inconsistent in what they consider keywords, strings, etc.
16:50  mgedmin: BlkPoohba, with :g/^Stop:/s/foo/bar/
16:50  mgedmin: any command can follow :g//
16:50  AlexMax: some syntax files consider quotes a part of the string highlight
16:50  AlexMax: others don't
16:51  mhi^: I'd guess it depends on the language
16:51  mklappstuhl: mhi^: i use paster.vim and this "let g:PASTE_URI = http://pzt.me/" gives me "undefined variable http:"
16:52  mhi^: mklappstuhl: put it in quotes
16:52  BlkPoohba: ah.  cool
16:54  sangho: can i adjust delay that used in showmatch?
16:55  mhi^: sangho: :h 'matchtime'
16:56  sangho: thanks
16:58  mklappstuhl: mhi^: thank you :)
16:58  AlexMax: I'm a textmate user normally and I wasn't really satisfied with any of the color schemes out there.
16:58  AlexMax: On top of that, it seems like almost no color scheme that works in a 16 color terminal looks how i want it to either.
16:58  AlexMax: So I made my own
17:05  pngl: Hi, is it possible to know which executable vim uses for :ruby ?
17:05  mgedmin: I think it's a library, and ldd ought to tell you
17:05  mgedmin: (/usr/lib/libruby1.8.so.1.8 on my system)
17:07  pngl: mgedmin, ok, same for me. Can I change it somehow? Is it something you instruct at compile time?
17:08  mgedmin: yes
17:09  mgedmin: I think you can say ./configure --with-ruby=...
17:09  mgedmin: hm
17:09  mgedmin: --with-ruby-command=RUBY  name of the Ruby command (default: ruby)
17:10  pngl: thank you
--- Log closed Fri Nov 19 19:02:21 2010
--- Log opened Fri Nov 19 19:02:47 2010
19:02 --- Users 611 nicks [0 ops, 0 halfops, 0 voices, 611 normal]
19:06 --- Channel #vim was synced in 208 seconds
19:16  complete: Hey People! When I do :%s/something/else/gc - can I somehow easily only replace every second occurance of "something"?
19:17  elik: complete: well, you must be able to tweak your regexp so it does that
19:17  mgedmin: or train your fingers to press ynynynynyn
19:17  elik: complete: by anchoring it or something
19:18  elik: complete: also, if something is complex, you can \(\) it and represent it as \1 later (but it will match what it found in the first place, if it contains expansions and stuff)
19:18  complete: ok
19:22  complete: thanks
19:24  industrial: Can vim do this: tail -f inside a buffer? I want it to update as the file gets written. I only want this buffer to do that (log file) and nothe the other ones (code).
19:27  mgedmin: I think :set autoread is as close as you can get
19:28  gkatsev: you can use the conque plugin which puts a shell in vim
19:28  gkatsev: then you can just run tail -f
19:28  gkatsev: http://code.google.com/p/conque/
--- Log closed Fri Nov 19 19:35:50 2010
--- Log opened Fri Nov 19 19:36:38 2010
19:36 --- Users 613 nicks [0 ops, 0 halfops, 0 voices, 613 normal]
19:36 --- Server: [bartol.freenode.net] [freenode-info] if you're at a conference and other people are having trouble connecting, please mention it to staff: http://freenode.net/faq.shtml#gettinghelp
19:42  Raging_Hog: conque uses vimball? Why is the latter still alive?
19:42 --- Channel #vim was synced in 402 seconds
19:43  Raimondi: Raging_Hog: Why shouldn't it?
19:44  Raging_Hog: Raimondi: at least some time ago, it had both backward and forward compatibility problems and the inability to work with different runtimepath setting (as in with pathogen.vim)
19:46  graywh: you can set a path for vimball to unpack to
19:50  Raging_Hog: graywh: yeah, I googled it up and seems so. But it is a bit of a drag that people wanting to install a plugin must find out a way to change the path for it. btw, note that I don't really mind if people release vimballs or whatever balls they wish, the problem is if they *only* release in a such obscure formats
19:51  Raimondi: The compatibility proble you reffer to might be with Vim 7.0, it can be easily updated for that case.
19:51  graywh: godlygeek was working on a vimball-to-zip converter
19:51  graywh: https://github.com/godlygeek/vim-plugin-bundling/blob/master/vba2zip.py
19:52  gkatsev: should've called it invader zim
19:52  Raging_Hog: and I remember problems with line endings with vimball. I'm not sure if it's vimball specific, tho, but I recall suspicion toward it
19:52  elasticdog: I'm not a vimball fan either, but I usually just extract them in the current directory and then move the files where I want them
19:52  gkatsev: where zim is a join of zip+vim
19:52  elasticdog: vim -n -i NONE -c ":UseVimball $(pwd)" -c ":q" ./example.vba
19:53  Raimondi: elasticdog:  :let g:vimball_home = 'Desired/path'
19:53  Raging_Hog: vba2zip is quite nice, I've used it to unpack the vimballs safely
19:54  elasticdog: Raimondi: using pathogen, so the desired path to the bundle directory would be different for each plugin
19:55  Raimondi: Yes, is that a problem?
19:55  elasticdog: just saying that's why I don't use g:vimball_home
19:56  Raimondi: Because I use pathogen is that I use g:vimball_home, I don't see your point. I'm not suggesting that you should use though, just curious ;)
19:57  elasticdog: because I'd want to extract it into a different directory for each plugin: ~/.vim/bundle/plugin1 ~/.vim/bundle/plugin2
19:57  elasticdog: so I can't just have a static g:vimball_home assigned
19:57 * strull_ never understood the reason for this aproach
19:58  elasticdog: strull_: for pathogen?
19:58  Raimondi: That's what I do,  :let g:vimball_home = '~/.vim/bundle/thisplugin' then :so %
19:58  graywh: or you can :e the vimball and :UseVimball ~/.vim/bundle/thisplugin
19:58 * strull_ doesn't see the reason for pathogen too
19:58  elasticdog: Raimondi: ahhh...I was thinking you had g:vimball_home set in your vimrc file. that makes more sense now
19:59  graywh: strull_, same reason you might use the stow utility
19:59  elasticdog: graywh: that's essentially what I do with the above command
19:59  strull_: stow?
19:59  graywh: http://www.gnu.org/software/stow/
19:59  Raimondi: graywh: HAdn't relized about that command, that's easier.
20:00 * graywh always uses stow when installing from source (and not building a patched .deb)
20:03  Raimondi: graywh: That's a nice tool, thanks!
20:04  elasticdog: definitely...never heard of stow before
20:22  grof002ax: On Windows XP using vim 7.3.46 I would like to that <BS> in normal mode would delete characters to the left just like it does in insert mode. So I have set commmand: "nmap <BS> dh" in C:\Program files\vim\_vimrc file. But this settings is not respected when vim is started. I have checked and other commands from _vimrc are respected. Just to make sure they isn't some command to interfer with nmap command I have deleted all other commands f
20:22  grof002ax: rom _vimrc and started vim. It does not respect command. But if I enter this command manually when vim is started like: ":nmap <BS> dh" then command is respected. How to make this nmap command permanent in _vimrc
20:23  strull_: grof002ax: just put it in there
20:23  strull_: also dh is the same as X
20:23  Raimondi: grof002ax:  :verbose nmap <BS>
20:28  DHulme: also, don't bother putting it in program files: it'll be overwritten when you restart Vim
20:28  DHulme: not restart, upgrade
20:28  DHulme: put it in your home directory (use :echo $MYVIMRC to see the correct filename to use)
20:29  grof002ax: :echo $MYVIMRC outputs C:\Program files\vim\_vimrc
20:30  DHulme: hmm
20:30  DHulme: guess $MYVIMRC behaves differently on Windows
20:30  DHulme: well, put it in your home directory anyway
20:31  DHulme: :echo $HOME should still work to tell you the right directory
20:31  grof002ax: ":verbose nmap <BS>" returns error "Last set from C:\Program Files\Vim\_vimrc...
--- Log closed Fri Nov 19 20:37:13 2010
--- Log opened Fri Nov 19 20:42:40 2010
20:42 --- Users 611 nicks [0 ops, 0 halfops, 0 voices, 611 normal]
20:43  strull_: ezzieyguywuf: scriptnames may be enlightning
20:43  ezzieyguywuf: strull_: how do you mean?
20:43 --- Channel #vim was synced in 72 seconds
20:43  strull_: ezzieyguywuf: just type :scriptn<tab><cr>
20:44  DHulme: bosie: What do you mean?
20:44  bosie: DHulme: i thought that < indicates a modifier key
20:44  bosie: <M- would mean comamnd key under macosx
20:45  DHulme: yes, I didn't understand the "what shortcut is" part
20:45  bosie: <C- control etc
20:45  graywh: bosie, backspace
20:45  bosie: thanks
20:47  ezzieyguywuf: isn't there a way to have vim show me a sample of my syntax hilighting?
20:49 --- second is now known as sec^nd
21:00  connermcd: hey my gvim works great but when I use vim in terminal it goes screwy sometimes... I figure it's something in my .vimrc - anybody mind taking a look at it?
21:01  DHulme: "screwy"
21:02  connermcd: hard to describe
21:02  connermcd: like... it will sometimes display some of the file's contents
21:02  connermcd: but when I try to page forward or page backward it say something like 10% 20% 30% and just won't move
21:02  connermcd: and it won't take any commands after that
21:03  connermcd: .vimrc is here: http://pastebin.com/HpUWQU2H
21:03  connermcd: I'll take a screenshot if it helps
21:04  DHulme: what happens if you comment out the lines that set 'lines' and 'columns'
21:04  DHulme: in fact, never mind that
21:04  DHulme: take out the "set term" line at the start
21:05  DHulme: and don't try setting the terminal to something it isn't
21:06  connermcd: that did it!
--- Log closed Fri Nov 19 21:12:58 2010
--- Log opened Fri Nov 19 21:14:22 2010
21:14 --- Users 610 nicks [0 ops, 0 halfops, 0 voices, 610 normal]
21:18 --- Channel #vim was synced in 335 seconds
21:39  Geralt: hi, how can I map the tag search of CTRL-] to another key?
21:39  mgedmin: with :map
21:39  mgedmin: I don't know what to tell you that :help :map wouldn't
21:40  Geralt: mgedmin: I know the map command, but not the sequence after :map <F1> that would do the same thing as pressing CTRL-]
21:40  mgedmin: :map <F1> <C-]>
21:41  Geralt: mgedmin: perfect, thanks :-)
21:41  mgedmin: :h key-notation has the full reference, if you're interested
21:44  Geralt: I'll check it out
21:44  Geralt: Is it possible to evaluate a piece of vim script in a buffer?
21:46  graywh: Geralt, copy it to a register, then use :@
21:47  Geralt: graywh: thanks :-)
21:48  homekevin: I recently learned that a bunch of string operations don't work right with Unicode encodings.
21:48  homekevin: Even string indexing is wonky.
21:49  homekevin: strlen gives bytes rather than characters.
21:49  Geralt: Is it possible to bind a key for all modes with one command?
21:50  strull_: no
21:51  homekevin: Maybe. If the command is a function call, and the function binds a key for all modes.
21:52  theyranos: Is there a noob-friendly way to make gvim remember the window dimensions I had for each file?
21:52  strull_: theyranos: there is :mksession
21:55  theyranos: strull_: so… i need an au BufWrite that calls :mksession  with ssop=winpos,winsize and stores it in a hidden file, then an au BufRead that loads the session?
21:55  theyranos: or is there a less complicated way?
21:56  Geralt: strull_: homekevin: ok, I think map and imap suffices (don't know most other modes anyway ;))
21:56  strull_: of the other modes only vmap is of much interest
21:57  homekevin: Everyone knows omap is the best map.
--- Log closed Fri Nov 19 22:14:07 2010
--- Log opened Fri Nov 19 22:14:31 2010
22:14 --- Users 603 nicks [0 ops, 0 halfops, 0 voices, 603 normal]
22:15 --- Channel #vim was synced in 66 seconds
22:15  bosie: http://img526.imageshack.us/img526/1513/vim.jpg what's the green thingie?
22:17  fow: bosie, perhaps the first character for tab in listchars
22:17  Kuukunen: curious choice tho
22:17  bosie: fow:  when i search for \t via / it doesn't seem to be a tab
22:19  homekevin: bosie: What does ga say it is?
22:19  bosie: Hex 00a0
22:19  bosie: Octal 240
22:19  bosie: < > 160
22:20  Geralt: Is it possible to create custom commands for example :ctags that would run ctags with some command line arguments for me?
22:20  strull_: Geralt: :he :com
22:21  Geralt: strull_: thanks
22:21  homekevin: bosie: Then what it is might depend on the encoding. Usually a0 is a non-breaking space.
22:22  homekevin: But that's only true in certain encodings, like Unicode encodings and the ISO 8859 family.
22:22  bosie: it is set to utf-8
22:22  homekevin: Bear in mind though, that the file encoding is also relevant.
22:23  homekevin: Probably more relevant.
22:24  bosie: according to 'file' it is utf8 english text
22:24  bosie: so that should fit no?
22:24  homekevin: Assuming that's correct, the display might be screwy because your terminal doesn't support UTF-8.
22:25  bosie: for file?
22:25  bosie: i am using macvim
22:26  homekevin: No, I mean you may be seeing it printed as a weird character because Vim is writing something to the terminal that the terminal doesn't understand.
22:26  bosie: right but macvim doesn't use the terminal
22:26  homekevin: Oh.
22:26  graywh: maybe your font doesn't have that character
22:27  bosie: hm
22:27  bosie: i use monaco
22:31  bosie: how could i replace all those characters with nothing
22:31  homekevin: I wonder how a font could not have NBSP. Wouldn't it just be a space?
22:32  homekevin: The bigger mystery though, is why someone would put a bunch of those in a source file.
22:32  homekevin: bosie: You could always do :%s/\xa0//g
22:33  strull_: isn't it \%xa0 ?
22:33  homekevin: Could be
22:33  bosie: it is %xa0
22:33  bosie: thanks guys
22:38  esaym153: how to force vim to use a certain syntax highlighing if I don't have a shebang or file extension?
22:39  graywh: :set ft=something
22:39  DHulme: esaym153: also see :help modeline if you don't want to have to do it every time you open the file
22:40  esaym153: DHulme: can't a flag be added to the file or something?
22:40  DHulme: did you read the help topic?
22:40  esaym153: no
22:40  DHulme: I think it answers your question
22:43  foocraft: hey all, how should I deal with tabs/spaces to let my code look okay for most people?
22:44  graywh: tabs are overrated
22:45  foocraft: but I love em! I mean...how can I do proper spacing easily without them?
22:45 * xtagon loves tabs
22:45  homekevin: OK, you love tabs. But the answer to your question is "don't use tabs."
22:45 * elik hates xtagon for loving tabs
22:45  foocraft: haha I think I just realized how taboo the topic I started is
22:46  homekevin: There's nothing taboo about it.
22:46  elik: it is a hot topic
22:46  xtagon: It's not like I said I love emacs...
22:46  elik: torllish, almost
22:46  foocraft: it was an honest question though, elik
22:46  foocraft: I mean, I am getting sick of people having weirdass configs for their editors that let my code look like crap when they try to read it
22:47  peth: foocraft: use tabs for indenting exclusively, spaces for aligning/layout
22:47  elik: foocraft: it's cool, it's cool
22:47  xtagon: What peth said.
22:47  foocraft: and what's a useit-or-gtfo tabwidth configuration?
22:47  strull_: tabs are bad, except in the middle of a line, where they are very bad
22:47  xtagon: Why are tabs bad?
22:47  elik: foocraft: it's just that it's been discussed and discussed again, with no new arguments
22:47  Raimondi: vimgor indent
22:47  vimgor: For a quick overview of Vim's indentation settings, see http://vim.wikia.com/wiki/Indenting_source_code
22:48  Raimondi: foocraft: ^
22:48  elik: xtagon: generally speaking, tabs are great, but people are too stupid to use them properly, therefore, you should not
22:48  elik: vimgor: tab
22:48  vimgor: Tabs are evil. They're also 8 spaces wide, always. Do not change 'ts' ever, since many output devices (web pages, printers, etc) will always print a tab as 8 spaces wide.
22:49  bosie: gah, can't find the the keys to position the current line at the top/bottom of the screen
22:49  Geralt: what's the difference between location list and quickfix list?
--- Log closed Sat Nov 20 13:48:31 2010
