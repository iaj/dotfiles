--- Log opened Mon Dec 13 00:45:14 2010
--- Log closed Mon Dec 13 00:45:14 2010
--- Log opened Mon Dec 13 08:43:16 2010
08:43 --- Users 562 nicks [1 ops, 0 halfops, 0 voices, 561 normal]
08:44 --- Channel #vim was synced in 89 seconds
09:18  jorrit: Hi
--- Log closed Mon Dec 13 09:27:00 2010
--- Log opened Mon Dec 13 09:42:18 2010
09:42 --- Users 579 nicks [1 ops, 0 halfops, 0 voices, 578 normal]
09:43 --- Channel #vim was synced in 82 seconds
--- Log closed Mon Dec 13 09:49:19 2010
--- Log opened Mon Dec 13 09:54:41 2010
09:54 --- Users 580 nicks [1 ops, 0 halfops, 0 voices, 579 normal]
09:54  FernandoBasso: maxagaz: :help usr_07.txt
09:55  maxagaz: FernandoBasso, thanks!
09:55 --- Channel #vim was synced in 82 seconds
09:57  maxagaz: FernandoBasso, how to close the help ?
09:57  FernandoBasso:  :quit
09:58  maxagaz: thanks
09:58  maxagaz: what's the first help file I should open that will explain me everything ?
09:58  minikomi: hi, having some trouble with macvim/netrw
09:58  FernandoBasso: maxagaz: Just :help
09:59  minikomi: exploring, opening, saving all working fine but getting funky errors on every command :(
09:59  FernandoBasso: maxagaz: and then follow the usr_nn.txt sections, a little by little. And really, if you haven't yet, run *vimtutor*.
09:59  maxagaz: and what the doc I should read before all on the web about how to use vim ?
09:59  maxagaz: FernandoBasso, okay, thanks a lot
10:00  FernandoBasso: maxagaz: Definitely, vimtutor. And *then* the :help usr_01.txt, usr_02.txt, and so forth.
10:00  FernandoBasso: maxagaz: Vim takes a while to learn, because it is really powerful.
10:01  maxagaz: FernandoBasso, more powerfull than emacs ? ;-)
10:02  minikomi: maxagaz: i just started too, and i found the "vim tricks" thread on stack overflow really interesting & fun to use
10:02  maxagaz: vim tricks ? where ?
10:02  minikomi: and keeping a scratch of all the little bits i learn in say, notational velocity -> reading them on the train in simplenote has been super useful
10:03  maxagaz: minikomi, where is this document ?
10:03  minikomi: http://stackoverflow.com/questions/95072/what-are-your-favorite-vim-tricks
10:03  FernandoBasso: maxagaz: I would say yes. I know 3% of what vim can offer, and it still unbelievable. But I have never even tried emacs.
10:03  FernandoBasso: http://vim.wikia.com/wiki/Best_Vim_Tips <-- This is also great.
10:04  minikomi: FernandoBasso: good one!
10:04  FernandoBasso: maxagaz: But first, make sure that you go through vimtutor, and some usr_nn.txt help files.
10:05  FernandoBasso: Tips like those are not always easy to understand, if we don't have a prior good understanding of the basics.
10:05  minikomi: true
10:05  minikomi: but something like di" is immediately obvious & useful, and shows it's worth the slug through
10:06  FernandoBasso: minikomi: I agree with you.
10:06  minikomi: or *, %..
10:06  minikomi: \/
10:06  minikomi: sorry
10:06  minikomi: just forward slash
10:06  FernandoBasso: Even the help we don't fully understand on a first try.
10:07  minikomi: i keep getting this -> https://gist.github.com/738812 when i try to save a file over netrw on an ftp.. any idea why ?
10:12  Number5: how can add a space at the beginning of the line for the whole file?
10:13  FernandoBasso: :%s/^/ /g <-- This adds one space at the beginning.
10:13  Number5: FernandoBasso: thank you very much, I really learnt something from you.
10:14  FernandoBasso: What?
10:14  Number5: using ^ in regex.
10:14  Number5: :)
10:15  FernandoBasso: Oh, please. You make me embarrassed. I know almost nothing about vim. There are really masters here. I fell embarrassed being told that in front of them.
10:15  FernandoBasso: But anyway, I glad you learned something.
10:16  Number5: Don't be, I know there are masters here, to me, you helped me a lot with this solution.
10:16  FernandoBasso: :)
10:16  yano: regular expressions are your friend :)
10:17  FernandoBasso: Sure they are. I am learning them myself.
10:18 --- MikhX_ is now known as MikhX
10:28  maxagaz: is there a collapsable system mode to take notes in vim (like in org-mode for emacs) ?
10:28  maxagaz: to take notes with a hierachy
10:29  maxagaz: and being able to collapse or uncollapse parents and children
10:30  minikomi: with friends like regex...
10:34  FernandoBasso: maxagaz: There are some plugins for that, I believe.
10:37  strull_: maxagaz: I use folding for this (foldmethod indent). :he folding
10:38  maxagaz: FernandoBasso, in org-mode, each collapsable paragraph begin with "* my parent", "** my child", "*** my sub-child" ..., it collaspse when perssing <tab>, that's the only thing I would like to have to manage my notes, is there a plugin for that, or perhaps a better system ?
10:39  FernandoBasso: maxagaz: I use txtfmt (plugin) for colors, and nothing else. I admit I miss something else, but never bothered looking for something.
10:39  FernandoBasso: maxagaz: strull_'s way seems good to me.
10:39  FernandoBasso: I'll try it myself.
10:40  FernandoBasso: And vim *can* do fold levels.
10:47 * jink folds FernandoBasso a bit.
10:48  minikomi: hmm
10:49  minikomi: if i use :s/foo/bar then move to a different line can i use . ?
10:49  minikomi: doesnt seem to work :(
10:49  jink: I think you need & for that.  Let me check.
10:49  jink: Yup, it's &.
10:49  minikomi: ah, & works
10:49  minikomi: thanks
10:49  jink: . only works for edits, I think.
10:49  minikomi: any reason why . does not take on this function
10:50  jink: There should be, I guess, but I'm not aware of the exact decision.
10:57  minikomi: woahhhh
10:58  minikomi: just blanked an entire file while going back over undo tree ..
10:59  jink: ^R for redo. :)
10:59  minikomi: u = at newest change
10:59  minikomi: ^r = at oldest change
10:59  minikomi: buffer nuked...
11:00  jink: :o
11:01  minikomi: netrw over ftp is not playing nice at all
11:01  the_isz: minikomi: if you go back to your oldest change, then do a modification, all your previously undone work is not reachable through redo anymore.
11:01  minikomi: is there some kind of log i can look over for this to identify what might have happened?
11:02  minikomi: the_isz: the file started with content so theoretically the oldest change should be that starting point, right?
11:05  the_isz: minikomi: right... except if you save in between, i guess...
11:06  minikomi: saves overwrite undo buffers?
11:06  the_isz: minikomi: no, that doesn't change anything...
11:06  the_isz: minikomi: no, wrong thought
11:06  minikomi: any ideas before i revert to a backup ?
11:09  minikomi: is there some kind of buffer history log ?
11:09  minikomi: to see what caused it
11:12  danielsh: the_isz: g-  ?
11:12  minikomi: 0 changes
11:14  the_isz: danielsh: i don't have a problem atm, minikomi does. i was just half-thinking about his problem and quickly realized that half doesn't cut it ;)
11:16  minikomi: well...
11:16  minikomi: the show must go on
11:16  minikomi: unfortunate.
11:36  danielsh: the_isz: I was suggesting g- in response to your first comment,
11:36  danielsh: however I'm not entirely sure what happened to minikomi so I don't know what to suggest there
11:37  minikomi: its quite strange, and the 2nd time its happened... meanwhile macvim/netrw continues to give errors :(
11:44  the_isz: danielsh: is g-/g+ another mechanism as u/<c-r> ?
11:44  minikomi: g-/+ is by time, u/ctrl-r is on the current undo branch
11:45  danielsh: g- sometimes recovers things that u doesn't
11:45  minikomi: time? order? not sure how to put it
11:45  the_isz: interesting... didn't know that...
11:46  minikomi: for example edit 1, edit 2, edit3, undo undo, edit 4, edit 5, edit 6
11:46  minikomi: u u -> edit 4
11:47  minikomi: g- g- -> edit 3?
11:48  minikomi: yes, it seems to work
11:49  minikomi: http://sjl.bitbucket.org/gundo.vim/ wow!
11:56  the_isz: minikomi: impressive... i didn't even know vim stores an undo tree...
12:00  robgleeson: heylo.
12:00  robgleeson: is there any documentation on writing vim documentation?
12:06  accel: what's something like minibufexpl but is shown at the top/bottom of the screen rather than the left/right ?
12:08 --- quaestor is now known as Guest30037
12:09  minikomi: accel: do you want a vertical split or horizontal split?
12:09  minikomi: sorry
12:11  minikomi: i dont use it so i dont know the normal behaviour
12:11  minikomi: but it looks like let g:miniBufExplVSplit = 0 or let g:miniBufExplVSplit = 1 might change it like you want
12:13  minikomi: sorry, let g:miniBufExplVSplit = 30 will give a vertical split of 30 chars... 0 will make it horizontal split
12:22  minikomi: wow. gundo is crazy.
12:23  minikomi: now i just need to get it working in illustrator ;P
12:27  krz: when i do ctrl+w+s i want the cursor to be on the new split window. how can i do this?
12:30  accel: minikomi: got it working now :-)
12:30  accel: minikomi: thanks :-)
12:30  minikomi: accel:cool
12:30  minikomi: i like buffer explorer but havent tried minibuf
12:30  minikomi: any difference? that you know of?
12:31  krz: minikomi: buff expl shows the buffer like tabs
12:32  krz: minibuff opens a new window to display all buffers
12:32  krz: i personally use mnibuff
12:32  krz: not as much though
12:33  krz: minikomi: this is what i use: https://github.com/carlhuda/janus
12:35  minikomi: v nice
12:35  minikomi: i dove right in when i started and installed a bunch of stuff which people recommended
12:35  minikomi: heh
12:36  minikomi: nice to know that i could avoid it if i have to do it again
12:36  krz: minikomi: yea, the bundle helps quite a lot. its all i am using right now. very productive
12:36  krz: i like the moloko theme as well
12:36  minikomi: i have a lot of that going though
12:36  minikomi: will have a look
12:37  minikomi: i like ir_black or desert .. with background darkened
12:37  minikomi: nerdtree rocks though
12:37  krz: yep sure does
12:37  minikomi: wish it would work over ftp :*(
12:37  krz: and so does command+t
12:40  minikomi: any way to quickly grab the current file's path ?
12:41  minikomi: hrm... im using haml php to do some things , and was wondering if i can change the syntax hilighting so its haml for files that end in .haml.php
12:43  krz: perhaps there is a plugin for haml
12:46  kurkale6ka: minikomi: maybe this could help: https://github.com/tpope/vim-haml ?
12:47  minikomi: ah thanks
12:47  minikomi: haml is working fine, just have to reset it every time i open a haml.php
12:47  minikomi: would like to change the syntax definition
12:47  kurkale6ka: have a look in there...
12:52  minikomi: au! BufRead,BufNewFile *.php.haml         setfiletype haml  ?
12:52  minikomi: oops
12:52  minikomi: i mean .haml.php
12:54  minikomi: hrm not working
12:54  minikomi: i think the double . is throwing it off
13:17 --- silex is now known as Silex
13:32  tvm: how do i disable current visual selection?
13:32  Silex: tvm: press v again?
13:32  Tau: is there some way to make the vim's window to be enumerated ascendently ?
13:32  tvm: no, i mean the marked text
13:33  Silex: tvm: :nohl
13:33  tvm: marked as in selected (after performing search/subtitution/etc)
13:33  tvm: Silex: thanks
13:33  Silex: fyi it's "highlighted"
13:33  tvm: ah, right.
13:34  tvm: not too comfortable to edit text that is all cluttered with white blocks ;]
13:34  Silex: I can't seem to find a "better" syntax file for c++. Currently it looks like the whole std::class::member is all of the same color/group, I wish it's differentiate a little bit
13:34  minikomi: stumbled upon another massive tips page
13:34  minikomi: http://www.rayninfo.co.uk/vimtips.html
13:35  Silex: tvm: nnoremap <C-L> :nohl<CR><C-L>
13:35  Tau: hi
--- Log closed Mon Dec 13 13:38:19 2010
--- Log opened Mon Dec 13 13:38:42 2010
13:38 --- Users 581 nicks [1 ops, 0 halfops, 0 voices, 580 normal]
13:39  Tau: sid3k, hm
13:39  minikomi: ah lag sorry :)
13:39  Tau: Silex, yes.
13:39  Tau: Silex, but i want they to be displayed on the right side of each line.
13:39  Tau: like when you enumerate lines.
13:39  Tau: Silex, do you understand ?
13:39  marlun: Hmmm. Started having problems with the pyflakes vim plugin. I'm getting this error: E15: Invalid expression: <__main__.loc object at 0x101165a50> ... when editing .py files. Any ideas on how to debug it?
13:40 --- Channel #vim was synced in 88 seconds
13:40  Silex: not really, all I understand is that you want the line numbers at the right instead of left
13:40  Tau: Silex, http://pastebin.com/JbXJaH74
13:40  Tau: this must help.
13:42  Silex: tau: theres no number at the right side
13:42  marlun: Some more: http://paste.pocoo.org/show/304264/
13:42  Silex: only at the left side
13:42  Tau: Silex,
13:42  Tau: lol
13:42  Tau: Silex, sorry
13:42  Tau: it is left side
13:42  Tau: HAHA.
13:42  robgleeson: any bufferlist.vim users here?
13:42  Tau: Silex, i simply haven't slept.
13:42  Tau: sorry.
13:42  robgleeson: has, literally, 0 documentation
13:42  Tau: lolwut
13:42  Tau: oh my god.
13:42  Silex: Tau: so, is ":set number" what you want?
13:43  Tau: Silex, yes.
13:43  Tau: HAUE
13:43  Tau: thank you.
13:43  Tau: sid3k, i'm ashamed.
13:43  Tau: i don't believe i simply wrote right in place of left.
13:43  Silex: :)
13:43  Tau: LOL
13:43  minikomi: haha
13:44  Silex: robgleeson: check the plugin's source? often there's somewhat inside doc
13:44  minikomi: if only all problems were that simple ;0
13:44  Tau: i simply wrote twice 'right' wanting to say left.
13:44  Tau: lol
13:44  seku: robgleeson: did you see inside the file?
13:44  robgleeson: Silex: alrightly.
13:47  robgleeson: seku, Silex: answer in the source, thanks.
13:47  Silex: yw
13:48  Tau: is there some way to create new key-command like 'gg, G , j, k' etc ?€
13:50  seku: yes, by mapping one. :h key-mapping
13:51  Tau: hmm
13:52  Silex: what do you want to do?
13:52  Tau: Silex, i have finished a little script for vim which i have done with python.
13:52  Tau: Silex, so i want it simply to get a line and send to the script.
13:53  Tau: i have got a way of doing that, but it would be easier and fast if i had a mechanism like pressing a sole key and it working tha way rather than typing :Sc
13:53  Tau: etc
13:53  Tau: ah.
13:53  Tau: Silex, could i show my script to you, so you could tell me if there is something alike ?
13:54  Tau: it simply makes vim behave in a weird way when you are programming in C. it is weird but fun and i guess it should work when debugging/programming code.
13:54  Tau: it permits you to select text with v and run it as though C were interpreted.
13:55  minikomi: i have a regex question (im not very good at it yet!)
13:55  Tau: and you can compile inside and out of context(window's buffers) in that case, you can define functions and run code depending of those functionjs on the air.
13:55  minikomi: how can i seaerch for 2 words e.g. big dog, regardless of case, with anything inbetween
13:55  Tau: Silex, do you know something alik ethat ?
13:55  minikomi: \big.dog\c ?
13:56  iaj: minikomi: /big.*dog/ ?
13:57  marlun: If I've got several vim installed (both system vim and the vim isntalled by macvim) how can I figure out which ones a running vim instance is? :)
13:57  iaj: minikomi: when you set 'ic  that is
13:57  Tau: http://codepad.org/ihmMxOlQ this is the script(sorry for the english iwas asleep)
13:57  minikomi: ah /big.dog\c
13:57  minikomi: sory i meant any character inbetween
13:59  minikomi: wow. so great.
13:59  minikomi: regex search/replace is powerful...
14:01  Tau: is there some plugin to permit completion for python ?
14:02  Silex: Tau: your script somewhat reminds me of http://www.vim.org/scripts/script.php?script_id=3115
14:06  Tau: Silex, hm.
14:06  Silex: about python, vim can autocomplete by default if compiled with +python
14:07  Tau: Silex, hm, that script is slightly different from mine. mine permits you to select a C code like < "printf("shhh");" > and run it.
14:07  nico_le_terrible: Hi all
14:08  minikomi: hello
14:08  nico_le_terrible: I'm looking for a commande to get the name of the file currently edit
14:08  Tau: you can do things like "int func() { return 299; }this is what you have written" < printf("hehe %i", func()) >(this is the code selected t
14:08  Tau: then make it run
14:08  Tau: it is a bit hard to explain.
14:08  Tau: i'm finding troubles for explaining.
14:09  Tau: Silex, well. i have edited python code here, but it isn't working the auto completion.
14:09  Tau: and it was compiled with +python
14:10  kurkale6ka: nico_le_terrible: expand('%')
14:10  nico_le_terrible: I see it, but don't understand how to use it :s
14:11  kurkale6ka: nico_le_terrible: do you want to use it in a script?
14:14  nico_le_terrible: yeah
14:14  nico_le_terrible: I want "sed" it after
14:14  nico_le_terrible: and use in a :put
14:15  kurkale6ka: why would you sed it?
14:15  nico_le_terrible: test.h => __TEST_H__
14:17  nico_le_terrible: expand("%:t")
14:17  Silex: Tau: see <C-X><C-O>
14:18  nico_le_terrible: :put=expand('%:t')
14:18  nico_le_terrible: works
14:18  nico_le_terrible: :p
14:18  nico_le_terrible: ty
14:18  Tau: Silex, hm
14:18  kurkale6ka: np
14:18  nico_le_terrible: :r :e
14:18  nico_le_terrible: it works :p
14:19  Tau: Silex, should i look for help with :help C- ?
14:19  Silex: nico_le_terrible: I suggest you look up snipmate, looks like your goal is to do a C/C++ inclusion guard
14:19  nico_le_terrible: yeah
14:19  Silex: which snipmate has by default and it will make your life much easier for all the other things you plan on doing
14:20  Silex: Tau: :h <C-X><C-O>
14:20  nico_le_terrible: Silex: http://www.catonmat.net/blog/vim-plugins-snipmate-vim/
14:20  Tau: Silex, thank you.
14:20  Silex: Tau: err, :h ^X^O
14:20  Tau: hm
14:20  nico_le_terrible: ty it seems interresting
14:20  Tau: Silex, k
14:20  nvictor: hello all
14:20  nvictor: so i have this regex which is not working
14:20  Silex: nico_le_terrible: https://github.com/msanders/snipmate.vim
14:21  nvictor: \s\((Ja|Neen)\)
14:21  nvictor: isn't () used for alternatives?
14:21  Silex: nico_le_terrible: with snipmate in insert mode, you jsut type "once<Tab>" and voila you have your include guard
14:21  fow: nvictor, \( \) is grouping, \| is alternatives (assuming magic but not very magic)
14:21  nvictor: oh ok
14:21  nvictor: thanks
14:22  fow: nvictor, prepending \v to that pattern should make it work (assuming that's the entirety of the pattern)
14:22  nvictor: yes
14:22  nvictor: the \| also worked
14:23  nico_le_terrible: :put='#ifndef __'.expand('%s:t:r').'_'.expand('%:t:e').'__'
14:23  nico_le_terrible: works too xD
14:27  Tau: Silex, thank you.
14:27  Tau: oh, that feature is great.
14:28  nico_le_terrible: works too xD
14:28  nico_le_terrible: sorry
14:29  minikomi: hmm
14:29  minikomi: is uppercase U mapped to anything important?
14:30  fow: minikomi, :h U
14:30  minikomi: ah
14:31  minikomi: thought it might be nice to map ctrl-R functionality to that
14:35  nico_le_terrible: how map something to do a lot of things ?
14:35  nico_le_terrible: map ,a G|:put='a'
14:35  Silex: you just do it?
14:35  nico_le_terrible: something like that :s
14:36  Silex: well that should
14:36  Silex: +work
14:36  nico_le_terrible: ok :s
14:36  Silex: but you probably want G<CR>:put='a'
14:36  nico_le_terrible: yeah
14:36  nico_le_terrible: what is the use of | ?
14:36  Silex: :put='a'|w foo.txt|q
14:36  nico_le_terrible: ok
14:37  nico_le_terrible: put='a'|G is correct ?
14:37  Silex: doesn't look correct
14:37  Silex: except if you mean :G
14:37  nico_le_terrible: no I don't :(
14:38  nico_le_terrible: ^
14:38  nico_le_terrible: it seems
14:38  nico_le_terrible: I will try :p
14:38  Silex: what do you want to do exactly?
14:38  nico_le_terrible: Inclusion guard
14:39  nico_le_terrible: it's far more fun to do it self
14:40  Silex: not really, but if you think so why not
14:40  nico_le_terrible: this way, I learn :p
14:42  fow: nico_le_terrible, give a range to :put. Also names with two underscores are reserved
14:43  nico_le_terrible: reserved, I cannot do what I want :(
14:44  nico_le_terrible: What is the common way ?
14:44  nico_le_terrible: only one _ ?
14:47  Silex: just FOO_H
14:48  Silex: is the classic way
14:51  minikomi: hmmm
14:52  minikomi: i wonder if i can remap the "english" key on this japanese keyboard to be toggle mode
14:53  minikomi: cant get anything out of it with ctrl-v :/
14:53  OwaisL: hey, how can I select all the text between two opposite braces
14:53  OwaisL: say, everything between > and <
14:54  OwaisL: OR
14:56  OwaisL: How can I move the cursor to a particular character. example I have "hello there, <fdf"
14:56  OwaisL: how can I go to end of  "hello there,"
14:56  OwaisL: i.e, where < begins
14:56  nvictor: i have a file with fenc being utf-8, but my python script can't decode the file.
14:56  minikomi: to select inbetween braces ... %v%
14:56  nvictor: UnicodeDecodeError: 'utf8' codec can't decode byte 0xe9 in position 12: invalid continuation byte
14:56  mgedmin: OwaisL, f<
14:56  mgedmin: nvictor, pastebin the file?
14:56  nvictor: mgedmin: ok
15:03  OwaisL: mgedmin, minikomi: Thanks, that worked
15:03  minikomi: no problem
15:04  minikomi: there might be a better way to do it! im still quite a beginner
15:04  minikomi: experiment 8)
15:04  OwaisL: yea
15:05  minikomi: if you want to delete the lines between delete in % di% , or the whole kit n kaboodle da%
15:05  sitaktif: OwaisL: minikomi vib is more natural :)
15:05  sitaktif: "v inner brackets"
15:05  OwaisL: hmm
15:05  minikomi: oops
15:05  minikomi: that didnt work
15:06  OwaisL: yes. doesn't work
15:06  sitaktif: mine works...
15:07  minikomi: hmm
15:08  sitaktif: :h ib
15:08  minikomi: im trying for css
15:08  sitaktif: but you mean {} or () ?
15:08  sitaktif: iB for {}
15:08  minikomi: cool
15:08  sitaktif: or i}
15:08  sitaktif: easier to remember
15:08  sitaktif: :)
15:08  minikomi: that got it
15:08  sitaktif: just read the help, it's pretty cool
15:09  sitaktif: like ci" is pretty cool too
15:09  minikomi: how to go to the nearest { ?
15:09  sitaktif: ?{<cr>
15:09  minikomi: thought % did that but not so.. hrm
15:09  OwaisL: yes it works.. but I actually needed to select between } and {
15:09  OwaisL: :)
15:09  OwaisL: > and < rather
15:09  sitaktif: OwaisL: did you read logs ? ;)
15:09  minikomi: the vim help is really well written
15:09  minikomi: i must say
15:09  OwaisL: nah
15:12  kurkale6ka: hey, anyone using supertab and snipmate together. the combination breaks snipmate in gvim for me...
15:14  mgedmin: I heard snipmate's help has something to say about superta b
15:14  mgedmin: (or maybe the other way around ..)
15:15  mgedmin: snipmate + supertab appears to be a frequent question lately on #vim
15:15  mgedmin: shame I didn't pay attention
15:15  mgedmin: I don't use supertab mysel ...
15:16  MarcWeber: I don't understand why you all like the "one key which does all" that much.
15:16  fow: kurkale6ka, Googling "snipmate supertab" leads me to this Stack Overflow question which seems to say to use the updated versions available on GitHub: http://stackoverflow.com/questions/944624/
15:18  kurkale6ka: fow: I wouldn't ask if I hadn't done that myself and tried the above link :)
15:18  fow: ah
15:19  kurkale6ka: MarcWeber: I don't like supertab mutch but in a few cases can be usefull (right now just <tab> vs ^p, ^n, I know it's not much)
15:20  kurkale6ka: much
15:31 --- rseixas_ is now known as rseixas
15:36  babilen: Hi all. I am currently using "imap jj <esc>" in my vimrc to switch between input and normal mode. The problem with this is that it tends to move the curser around. (e.g. one char right, one line down) Are you aware of any better way to achieve switching between input and normal mode (preferably with something like 'jj')
15:36  Silex: there's <C-c>
15:36  Silex: (control c)
15:37  Silex: some people also remap the capslock key for that
15:38  fow: babilen, imap jj <esc> doesn't move the cursor at all for me
15:38  babilen: Silex: yeah, I am aware of ESC, C-[ and C-c ... but i prefer to have something in my home row. Not sure what causes the movements ..
15:38  Silex: babilen: probabyl timeouts
15:38  babilen: fow: hmm, that is strange.
15:39  Silex: and you type it too slow
15:39  fow: Silex, wouldn't that leave a j in the buffer, something I'm sure babilen would notice?
15:40  Silex: fow: hum, yes it would
15:40  babilen: It does leave anything in the buffer and the movements are more or less random. Or at least I was not able to induce a particular pattern.
15:40  mcantor: Oops... left irssi open at work over the weekend again.
15:40  babilen: I wonder what might cause this ... And it is hard to describe :)
15:41  danielsh: a touchpad?
15:41  fow: babilen, if you start vim -N -u NONE -U NONE and then make the map, does it still happen?
15:41  babilen: danielsh: definitely not
15:41  rson: babilen: are you sure you aren't just waiting two long in between j presses?
15:41  babilen: fow: one second. I should note that I currently experience this in gvim
15:41  rson: babilen: my alternative is to map capslock to escape, but that's not for everyone
15:42  fow: babilen, gvim -N -u NONE -U NONE then :)
15:42  babilen: rson: quite sure .. I can't type any faster. The movements typically happen after a movement command. Eg. "kjj" will move up one line (k) and then down+switch to normal mode
15:43  danielsh: why would k move up?
15:43  danielsh: in insert mode
15:43  rson: exactly my question
15:43  babilen: danielsh: right, i missed something ...
15:44  babilen: sorry, that was misleading information. give me a second, i'll try the NONE NONE things
15:45  babilen: OK. It does *not* happen if I start gvim with -N -u NONE -U NONE ... I guess that means that something in my config is the culprit
15:45  danielsh: probably
15:46  babilen: And the command sequence was "kijj" not "kjj" sorry for the confusion
15:46  danielsh: --noplugin can narrow it down further
15:46  babilen: danielsh: Ok, I'll try to find the culprit as it is quite, well, unpredictable and slows me down.
15:48  babilen: danielsh: Yepp, happens with "--noplugin" as well ... *sigh* I guess I'll have to do some binary search in my vimrc :-\
15:48  rson: babilen: can you paste your vimrc?
15:49  rson: more eyes will find it quicker
15:54  depaulis: Hi is it possible to read a file in iabbrev, for example I got a function-template for perl I want to do something like this ":iabbrev <buffer> funhead :read /path/perl-function-header"
15:55  depaulis: but I guess I miss something, since it just give me the string ':read ... ' it it even is possible ?
15:56  Silex: depaulis: I think you want to make some <C-R>= to execute the :read
15:56  Silex: I mean, as I understand :iabbrev it just replaces funhead by the text after
15:56  depaulis: Silex : I give it a try and see what happends.
15:57  depaulis: Maybe I need to go to <Esc> before ':read .. '
15:57  Silex: depaulis: not sure if <C-R>= is really waht you want, but basically have it execute the thing in ex mode
15:57  Silex: depaulis: maybe a mapping would be more appropriate? not sure how well it'd work tho
15:58  Silex: maybe snipmate would be an even better choice
15:58  Silex: (the plugin)
15:58  depaulis: Silex: a mapping could to though... one way or the other
16:03  babilen: rson: yes, sure (had to get some coffee)
16:04  babilen: rson: http://paste.debian.net/102275/
16:10  danielsh: babilen: odd: 'jj' leaves cursor where it is, while ^[ moves it one character left
16:10  jink: ^[ == esc
16:11  danielsh: right, ^[ is esc and jj is mapped to esc, and yet they differ
16:11  mgedmin: babilen, there's a trailing space in your :imap jj <esc> line
16:11  mgedmin: space moves one character right
16:12  babilen: gah ... and I even have all this trailing space functions in there
16:13  babilen: mgedmin: Yes, that was it. Good idea, thanks for spotting it and thanks for reminding me to get my .vimrc into git :)
16:13 * mgedmin recommends :set list listchars=tab:>-,trail:.
16:14  rson: mgedmin: i did somethign similar, andi 'll never go back.
16:14  rson: saves so much time sometimes
16:14 * babilen hands a beer/glass of champagne/a cup of hand-made cappuccino to everybody :)
16:14  babilen: mgedmin: Yeah, i'll do that.
16:14  DHulme: oh, I have tab:→·,trail:_
16:15  rson: i wish my encoding/font let me see that
16:16 * mgedmin ♥ unicode
16:16  babilen: Everybody loves unicode :-þ
16:16  Hates_: I hate it
16:16 * Hates_ unicode!
16:17  rson: i'm on windows at the moment and consolas apparently doesn't like thos characters
16:17  rson: those*
16:17  qfr: أنا أكره يونيكود
16:24  Silex: is there a :saveas equivalent that takes a range?
16:24  Silex: :write takes a range but :saveas cannot, do I have to resort to multiple command to achieve the same (e.g :'<,'>write foo.txt|e foo.txt ) ?
16:25  jerojasro: won't <range>w <filename> work?
16:25  jerojasro: oh, I see
16:25  Silex: I guess I'll just do a helper command
16:32  spiiph: You an just hit <C-6> after using :w
16:32  spiiph: (I tthink.)
16:32  ivan-kanis: rson: i am on windows with emacs and they display just fine
16:34  rson: ivan-kanis: yeah i believe this is an issue with my font and or putty config
16:34  rson: not that worried about it
16:36  ivan-kanis: rson: probably putty...
16:41  kotique: The spec_chglog plugin provides a map like the following:
16:41  kotique: 	:map <buffer> <LocalLeader>c <Plug>SpecChangelog
16:41  kotique: But it doesn't work when I press \c !
16:41  rson: have you changed your leader?
16:42  kotique: no, he's still sitting next to me
16:43  kotique:    \c           @<Plug>SpecChangelog
16:44  mgedmin: rson, if you ever decide to pursue this, download/install DejaVu Sans Mono, which has pretty good Unicode coverage, make sure Putty uses UTF-8, and make sure the remote system uses a UTF-8 locale
16:46  kotique: mgedmin, happy new year!
16:46  kotique: do you know why that plugin doesn't work?
16:46 * mgedmin checks the calendar
16:46  mgedmin: roundup is an issue tracker that lets each user specify a timezone offset
16:46  mgedmin: so I went and entered +0300 there
16:46  mgedmin: a bit later I noticed all the dates were 2 weeks off
16:47  mgedmin: stupid thing assumed that meant 300 _hours_, not 3 hours
16:47  mgedmin: it's still 2 weeks until the new year in my time zone
16:47  Silex: spiiph: I used command -range=% -nargs=1 -bang -complete=file SaveAs <line1>,<line2>write<bang> <args> | edit #
16:47  fow: haha
16:47  Silex: but yeah, ^6 would have worked :)
16:51  scholtz: Hi all. I'm playing around with setting up more up to date ruby config files via a github repo (https://github.com/vim-ruby/vim-ruby). One option that apparently needs to be set in .vimrc is "compiler ruby". Is this necessary or is it perhaps set elsewhere? I've read the help for compiler, but I'm not quite sure what it does.
--- Log closed Tue Dec 14 11:47:24 2010
