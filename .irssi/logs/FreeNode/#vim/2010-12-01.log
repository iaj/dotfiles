--- Log opened Wed Dec 01 00:00:12 2010
--- Day changed Wed Dec 01 2010
00:00  genjix: atm I have to backspace all the way to the first line
00:00  genjix: if blaa \
00:00  genjix:             and foo:
00:12  nate-: anyone else have issues with MacVim fullscreen mode, I use 'set fuoptions=maxvert,maxhorz' then 'au GUIEnter * set fullscreen' but it doesn't seem to take up the full vertical space most of the time
00:13  nate-: but then when I do shift+cmd+f twice it always fixes it
00:14  nate-: I just want it to enter fullscreen mode properly on GUIEnter
00:14  owen1: after i hit :ls, is there a way to open any of the buffers by hitting some key?
00:15  owen1: i would expect to be able to hit any of the numbers on the left, but it's not.
00:22  nate-: owen1: I'm sure there is a way but I don't know it... I use bufexplorer for that - it opens a buffer with a list of all your buffers, then you just use movement keys and enter to choose a buffer
00:22  nate-: very easy to use
00:23  nate-: bufexplorer is a plugin found here: http://www.vim.org/scripts/script.php?script_id=42
00:30  mhi^: owen1: :h buffers  (you want :b <one of the numbers>)
00:33  cryptic0: I have a string of six characters in each column and would like to split that into two columns each containing a string of 3 characters, is there a way to do it?
00:34  MarcWeber: cryptic0: :%s/\(...\)\(...\)/\1<c-v><cr>\2/
00:34  MarcWeber: c-v cr means ou have to type those combinations
00:34  shmup: i'm not sure how this happened, but vim went from having a grey background to a black one
00:34  shmup: same colorscheme
00:35  MarcWeber: shmup: syntax files may change it as well. (They should not but some might do so).
00:35  MarcWeber: So pay attention whether this happens after loading a specific filetype.
00:35  MarcWeber: Try :syn off | syn on  to reset it
00:36  shmup: MarcWeber: this happens in any file, but mk
00:36  shmup: will test that
00:36  shmup: didn't matter. curious, then. how can you change your background color?
00:36  shmup: the actual color.
00:36  shmup: not just dark/light.
00:38  cryptic0: MarcWeber:  thanks, I am trying to understand the syntax
00:38  KB1JWQ: Is there an "approved" way to get a version of vim compiled with python 2.6 support onto MacOS?
00:38  KB1JWQ: Apparently it's missing from brew,
00:39  MarcWeber: KB1JWQ: Get the source, run ./configure --help . Watch for --with-python or such and change the brew script to pass that file.
00:40  MarcWeber: AFAIK brew supports options. so maybe you just missed it?
00:40  eyda|mon: KB1JWQ: macports wil do it from you
00:40  eyda|mon: KB1JWQ: er, for you
00:40  eyda|mon: KB1JWQ: and homebrew's policy seems to be not to supply any apps which ships with osx
00:40  KB1JWQ: MarcWeber: Yeah, unfortunately there's no formula for it at all.
00:41  eyda|mon: KB1JWQ: there's a variant for the macport
00:41  KB1JWQ: eyda|mon: Yeah, but I'm trying to wean myself off of macports. :-)
00:41  eyda|mon: KB1JWQ: port install vim +python31
00:41  MarcWeber: KB1JWQ: Being curious: What do you want to use python for?
00:42  KB1JWQ: MarcWeber: Editing python files.
00:42  KB1JWQ: And before you accuse me of being a complete idiot, I've got a pile of fun python syntax validation that is itself a python script.
00:42  eyda|mon: KB1JWQ: well, homebrew doesn't have it. the moment I noticed that homebrew were never going to deal with stuff like vim, I realized I wanted both installed.
00:43  MarcWeber: I don't accuse you :) Why should I. Using python myself for some tasks.
00:43  MarcWeber: eyda|mon: Why "never" ?
00:43  eyda|mon: KB1JWQ: also, the formula for macvim doesn't seem to have an option to compile with python support
00:43  cryptic0: MarcWeber:  would this command assume that the file contains nothing but a string of six characters in every row and column?
00:43  eyda|mon: MarcWeber: read their policy on apps which ship on osx.
00:43  MarcWeber: cryptic0: :h pattern. Each dot is one char. So yes
00:44  MarcWeber: eyda|mon: Why not fork and add Vim yourself?
00:45  eyda|mon: MarcWeber: I'm not the one who didn't have a problem with macports. I'm using that just fine  :)
00:45  eyda|mon: er, who had a problem with, even
00:45  eyda|mon: not worth spending my time adding formulas for stuff they won't support, and then keeping my own tree up to date etc
00:45  cryptic0: MarcWeber:  how do you type <c-v> and <cr>  is it command+c+v?
00:46  MarcWeber: c-v = ctrl + v. <cr> = return key
00:48  cryptic0: MarcWeber:  is that control return?
00:49  MarcWeber: cryptic0: If you have to press two keys they are always separated by - in Vim "language".
00:49  MarcWeber: cryptic0: Also consider asking :h <cr> before asking :)
00:49  MarcWeber: <cr> means typing :h <cr> literally here.
00:49  cryptic0: MarcWeber:  I see. you're right. I need to get in the habit of using help
00:54  cryptic0: MarcWeber:  that command was carrying the last three characters on the next line, I just want to put a tab in between, so I implemented this: :%s/\(...\)\(...\)/\1\t\2/ but that didn't work.
00:55  cryptic0: I have several strings of 6 chars each in every line, to clarify.
00:55  genjix: if foo and \
00:55  genjix:        bar:
00:55  genjix: how could I join bar to and? atm I have the backspace all the way to the previous line
00:56  MarcWeber: genjix: select and press j or J
00:56  genjix: I don't get you :p
00:56  MarcWeber: genjix: How many do you have?
00:56  genjix: select the line and press down?
00:57  genjix: ah maybe i wasnt clear enough
00:57  MarcWeber: j J has a different meaning in visual mode.
00:57  genjix: oh
00:57  genjix: let me try
00:57  MarcWeber: I mixed something up J and gJ
00:58  genjix: I have 2 lines like this:
00:58  MarcWeber: You can use them in :g/select-pattern/j or the like. However in your case using macros could be fastest.
00:58  genjix: if (blaa blaa blaa &&
00:58  MarcWeber: genjix: do you know about macros?
00:58  genjix:           foofofo) {
00:58  genjix: yes I do, but that's overkill
00:59  MarcWeber: genjix: You also want to remove the \ when joining lines by J or gJ. So maybe it is not.
01:00  genjix: if I put myself on the end of the if line, press End, delete the newline
01:00  genjix: and then i could delete the whitespace I suppose
01:00  genjix: In normal editors I press Home, Shift+Up, End, Delete and it does the job
01:01  MarcWeber: in vim you put the cursor on the upper line and you press gJ or J
01:01  MarcWeber: J always keeps a space. gJ never does.
01:01  genjix: oh cool. thanks
01:02  MarcWeber: You can even use J4j or such to merge many lines (or use visual mode)
01:02  MarcWeber: oh. it was 4J only
01:03  genjix: why does that work?
01:03  genjix: :p
01:03  MarcWeber: genjix: Which kind of reply are you looking for? :p
01:04  genjix: what does g do in visual mode?
01:04  genjix: it deletes text?
01:05  MarcWeber: noting. I only know about gg (=HOME)
01:05  shmup: I would love to figure this out. I'm using the colorscheme evening, like always, because it has a darkgrey background.
01:05  shmup: I haven't edited the file at all. Haven't edited anything..
01:05  shmup: It's all black now :/
01:05  shmup: black background, that is
01:06  shmup: weiiird
01:06  shmup: :hi clear fixed it, but.. in my evening.vim it does a hi clear
--- Log closed Wed Dec 01 01:15:19 2010
--- Log opened Wed Dec 01 01:15:39 2010
01:15 --- Users 584 nicks [0 ops, 0 halfops, 0 voices, 584 normal]
01:16  strull_: leandroal: try ^W>
01:17 --- Channel #vim was synced in 102 seconds
01:18  peth: cryptic0: found your solution yet?
01:18  leandroal: strull_, worked perfectly, also I can use ^W10< or ^W10>. Is  there a simular way to do this with commands? I need to put this in my vimrc...
01:19  leandroal: strull_, I mean, without combining keys...
01:19  strull_: try wincmd >
01:24  shmup: would anyone know why having all of the colorschemes backgrounds are being ignored
01:24  shmup: and i have to manually hi clear, or put it in my .vimrc
01:24  shmup: this just happened earlier today. was fine last night.
01:24  leandroal: strull_, thanks... I just found the command "vertical resize N", that resize to N.
01:46  jsvana: Alright, so I have a template file and I want to automatically change a line so that it includes part of the filename.  How do I do that?
01:50  nate-: anyone else have issues with MacVim fullscreen mode, I use 'set fuoptions=maxvert,maxhorz' then 'au GUIEnter * set fullscreen' but it doesn't seem to take up the full vertical space most of the time
01:51  strull_: nate-: never heard of fuoptions
01:51  strull_: is this a mac-thing?
01:52  nate-: according to the help it's macvim gui only strull_
01:53  strull_: mmm ... strange. I always thought the runtime-files contained all the stuff for all oses. Obviously this was wrong thinking
01:59  shmup: what do i have to set to move between buffers in vim
01:59  shmup: without saving the files
02:00  strull_: shmup: :set hidden
02:03 --- peth_ is now known as peth
02:06  peth: nate-: did you try the tip from the faq?
02:07  peth: ah, nevermind. that only seems to set defaults.
02:07  nate-: doh
02:08  codeshah: hey guys, in my omniauth.yml config I want to assign facebook api keys depending on the server... i.e. localhost:3000, dev.myapp.com etc... how can I do this?
02:09  nate-: peth: I might try setting explicit cols and rows
02:13  nate-: success :) instead of 'set fuoptions=maxvert,maxhorz' I use 'set lines=56' and 'set columns=235' ... then 'au GUIEnter * set fullscreen' works right every time
02:13  nate-: maxvert and maxhorz must be calculating incorrectly
02:17  mhi^: nate-: I'm no gui user, but I recall people setting 'lines' and 'columns' both to 999. So it automatically always takes the biggest values possible.
02:18  nate-: ah i see
02:18  mhi^: I'll remember that for the next person who asks this question :)
02:18  nate-: I'll give that a shot
02:18  nate-: I even went to the trouble of calculating the max lines and columns ;)
02:19  mhi^: well, I'm not sure it works, maybe my brain is betraying me ;)
02:20  mhi^: (I just see that it's even mentioned in the help pages.)
02:20  nate-: ja, works great :)
02:20  nate-: thx
02:20  mhi^: Well, actually you figured it out on your own :>
02:22  shmup: i've been wondering this.. if i need to paste into vim, from say something i've copied in my browser..
02:22  shmup: i do a :set paste
02:22  shmup: how come it misses the first few characters?
02:22  Ademan: I set a command like so 'com Hex /0x[0-9A-Fa-f]\+' and I can run it with :Hex but when I do it doesn't appear equivalent to running the regex by itself
02:22  nate-: mhi^: but the 999 trick was helpful to me too
02:22  homekevin: shmup: You need to be in insert mode when you paste.
02:23  shmup: that is probably it! lol
02:23  shmup: thanks homekevin
02:23  homekevin: Then you need to turn 'paste' off. So annoying.
02:23  shmup: yeah ha
02:23  Ademan: if I ran it manually it would take me to the match, the command only takes me to the line the match is on and n/N doesn't work
02:23  shmup: better to just map a key
02:23  homekevin: shmup: Use the + register instead, if you can.
02:24  shmup: homekevin: i'm not familiar
02:24  homekevin: with registers or with +?
02:24  shmup: with both i suppose
02:24  shmup: not sure what you mean by using + register
02:24  homekevin: If you aren't familiar with registers you should really visit the help. :h register
02:24  homekevin: Oops, not that.
02:25  homekevin: :h registers
02:26  homekevin: Then, if your Vim supports the + register, it works with the system clipboard
02:26  shmup: oh niiice
02:28  homekevin: The only really tricky part is figuring out exactly what registers everything goes into.
02:28  homekevin: 0 is actually pretty different from 1-9, IIRC.
02:28  homekevin: Then a lot of things skip the numeric registers and go to "-
02:33 --- pi-rho|away is now known as pi-rho
02:46 --- jkatana is now known as nicklovescode
03:08 --- fedesilva_ is now known as fedesilva
03:48 --- pi-rho is now known as pi-rho|away
03:59  nate-: anyone know how to achieve indent guides in vim? preferably a plugin, but a snippet, function etc will work too
04:00  nate-: something along the lines of this: http://www.joeflash.ca/blog/images/FB_feature_request_indent_guides_sm.jpg
04:01  nate-: also worth mentioning, I use spaces not tabs so using listchars isn't what I'm looking for
04:10  bl^ckh0le: how can I do :s/x2bxrx/\x2b\xbb line in sed?
04:12  bl^ckh0le: \x starts hex value
04:22  lumgwada: nate-: you might be able to achieve a useable effect with highlight groups. This doesn't work but the idea is there http://dpaste.com/281782/
04:22  lumgwada: a nice background gradient effect might make it prettier
04:23  lamdk: is there an autocmd that gets run when you press tag jump?  i.e. Ctrl-]
04:24  lamdk: i need to do set iskeyword+=- when you push it
04:27  walt: lamdk: you can remap Ctrl-] to trigger your function, and then doing the jump?
04:28  lamdk: is there an ex command that does the same thing as ctrl+]?
04:28  lamdk: hmm
04:28  homekevin: lamdk: There's :tag
04:28  homekevin: But it needs the argument
04:28  homekevin: lamdk: So I guess maybe :exec "tag " . expand("<cword>")
04:29  lamdk: ooo yeah cool
04:30  homekevin: bl^ckh0le: \x words in Vim too, I think
04:30  homekevin: Er, wait... are you asking a sed question?
04:30  nate-: thanks lumgwada will check it out
04:38  lumgwada: nate-: actually that seems to work better. I'll let you figure out the colorscheme http://dpaste.com/281787/ There's probably a more fancy way of doing it.
04:38  nate-: cool
04:39  lamdk: hmm is there an ex command that does g<C-]>?
04:40  homekevin: lamdk: :tjump?
04:42  lamdk:    oh yeah it says in :h g_CTRL-] hmm
04:52  nate-: thanks lumgwada works great
04:52  nate-: might make a plugin out of this one day
04:54  lumgwada: yeah no probs. I strangely feel like eating neapolitan icecream after using the test version :)
04:54  lumgwada: I think a plugin that grabs your shift width settings would be good
04:55  nate-: yea
04:55  nate-: and uses your current background color as a starting point
04:55  nate-: i like the idea of zebra strip type colors
04:55  nate-: stripe*
04:55  nate-: looks great with my current theme
04:59  nate-: i love how well this works
04:59  nate-: <3 vim
05:05  homekevin: Huh.
05:05  homekevin: It's possible to programatically set xterm colors.
05:05  homekevin: That would make something like CSApprox able to perfectly mimic GUI colors.
--- Log closed Wed Dec 01 05:15:00 2010
--- Log opened Wed Dec 01 05:15:21 2010
05:15 --- Users 561 nicks [0 ops, 0 halfops, 0 voices, 561 normal]
05:16 --- Channel #vim was synced in 103 seconds
05:50  homekevin: And it works in gnome-terminal. That's really cool.
06:09  RobotCow: to insert a real tab character in vim when expandtab is set?
06:10  RobotCow: character in vim when
06:10  RobotCow: control I
06:10  RobotCow: ??
06:10  gkatsev: <c-v><Tab>
06:14  cryptic0: I am sending a mac vim edited text file to a friend who uses windows notepad.  How can I make sure that end of line characters will get formatted correctly?
06:14 --- masterhumper is now known as sejo
06:18  homekevin: cryptic0: :set ff=dos
06:18  cryptic0: homekevin:  thanks, just figured it out too :D
06:25  megana: robot cow needs help!
06:26  RobotCow: gkatsev, that control and v put me in visual block mode and then tab didn't seem to insert anything
06:26  deryni: ctrl-v in insert mode.
06:27  RobotCow: deryni, thanks, that did the trick for this picky make file
06:28  deryni: Yes, makefiles are picky about tabs.
06:29  gkatsev: you can also set an au in your RC file to disable expandtab and set ts=8 for makefiles
06:59  armence: Hey all, when I hit the escape key sometimes, it pastes... Any idea why that may be happening?
07:00  armence: Actually, just generally the esc key appears to have some weird behavior sometimes pasting stuff and sometimes deleting stuff. (mostly after I use the backspace key)
07:06  Raimondi: armence: Asuming you have the problem on insert mode  :verbose imap <esc>
07:07  armence: No mapping found
07:09  Raimondi: :au InsertLeave
07:09  armence: Auto-Commands
--- Log closed Wed Dec 01 08:03:39 2010
--- Log opened Wed Dec 01 08:03:58 2010
08:03 --- Users 556 nicks [0 ops, 0 halfops, 0 voices, 556 normal]
08:04  rtl: incidentaly
08:04  rtl: sed is not required
08:04  rtl: yes takes arguments
08:04  rtl: refactor plox
08:05 --- Channel #vim was synced in 102 seconds
08:07  lamdk: say -v Pipe Organ pretty good too
08:20  sedrik: Hi guys, I'm working on a small script and was woundering if there is an easy way to get the name (excluding extension) of the current file
08:20  sedrik: doing @% I get test/test_alarm.erl and I would like to get only test_alarm
08:21  iaj: how can I print values..? for testing eg. something like... :echo @% ?
08:21  iaj: argh.
08:22  fow: sedrik, depending on context, %:t:r or expand('%:t:r') or something like that
08:22  iaj: well ok that's the register where the filename is stored...
08:22  iaj: fow can I somehow echo me that thing by using the command line, if so - how?
08:23  fow: iaj, yes, echo. :echo expand('%:t:r')   for example
08:23  iaj: fow thanks - so that's what I could simply use in a vimscript/fun then :-) thanks!
08:25  fow: yep, and you're welcome
08:26  fow: though you may want to see :echomsg too
08:26  sedrik: fow: ok, will try it out =)
08:27  iaj: fow: yih..thanks!
08:36  sedrik: fow: sorry for being stupid but I can't seem to store the value in a variable :/
08:37  sedrik: tried let file = execute %:t:r
08:37  iaj: sedrik: expand( ) not execute I think.
08:38 --- daniel___ is now known as daniel
08:39  sedrik: iaj: aa thanks
08:41  iaj: fow's work. ;)
09:45  tvm: hi, how do i escape / ?
09:45  tvm: \/ doesn't seems to work
09:45  tvm: and \\/ doesn't works aswell
09:48  fow: tvm, escape / in what context?
09:48  tvm: %s/foo/bar/g
09:48  tvm: foo being foo/foo
09:48 --- RobotCow is now known as _RobotCow_Return
09:49 --- _RobotCow_Return is now known as RobotCow_Returns
09:49  fow: tvm, hmm \/ should work, though you could alternatively use a different delimiter, like :%s;foo/foo;bar;g
09:49  tvm: hmm.
09:51  fow: tvm, maybe the "foo" parts of the regex aren't matching properly
09:51  tvm: fow: yeah, i'm already noticing this, so the \/ espacing was actually working
09:52  tvm: hah, yes, tried both \/ and ; delimiters and it works now
09:52  tvm: silly O - 0 problem
09:53  tvm: :/
09:53  tvm: oh well, thanks anyways.
09:53  fow: you're welcome
09:55  Zharf: tvm, only bad fonts cause it!
09:56  tvm: yeah, i guess so.
09:57  tvm: but i like current setup.
09:57  tvm: running full screen rxvt-unicode with -fn 9x15
09:57  tvm: big and readable, but O - 0 is a problem, yes. :|
10:00  Zharf: there is a difference :)
10:01  Zharf: but yeah it is a problem
10:02  tvm: very small difference, for a tired, exhausted person at work (like me) ;)
10:03  Zharf: URxvt*font:  xft:Bitstream Vera Sans Mono:pixelsize=13, xft:Kochi Gotchi
10:03  Zharf: I use that
10:03  tvm: hmm.
10:04  mavvert: screenshots? :p
10:04  krz: is there a way to save all buffers?
10:05  fow: krz, :bufdo up  " or :bufdo w
10:05  krz: thanks
10:10  Zharf: mavvert, http://eclipser.xmms2.org/urxvt-bitstream.png
10:11  _rane: Inconsolata looks better imo
10:12 * tvm takes a screenshot.
10:12  mavvert: nice :)
10:12  Zharf: opinions... :p
10:12  _rane: Zharf: btw, you may want to /ignore #vim JOINS PARTS QUITS
10:13  Zharf: why
10:13  Zharf: I LIKE MY JOINS PARTS AND QUITS
10:13  _rane: less noise on the channel you don't need to see
10:13  mavvert: lol :p
10:13  Zharf: I never ignore anything
10:13  _rane: suit yourself
10:13  mavvert: me neither
10:14 * mavvert takes screenshot.
10:14  _rane: me too http://rane.kapsi.fi/shots/term-20101201-111347.jpg
10:15  Zharf: I'm on some channels that have had only joins and quits for the past few years now <.<
10:15  mavvert: http://img403.imageshack.us/img403/6571/ircq.png
10:15  tvm: http://vis0r.sweb.cz/ss.png
10:16 * mavvert loves screenshots.
10:16  Zharf: o.O
10:17  tvm: mine is best!
10:18  fow: _rane, Inconsolata is nice, but it doesn't differentiate between l and 1 enough for me
10:19  fow: Zharf, what hinting/aliasing settings are you using?
10:19  jink: http://img821.imageshack.us/img821/6337/irssiscreenshot.png
10:19  Zharf: fow, no idea
10:19  fow: Zharf, ah, just as well. I was looking at the wrong ss >_>
10:19  iaj: jink: what font is that/
10:20  jink: Monaco
10:21  mhi^: http://b.imagehost.org/0589/irc.png
10:21  mavvert: mhi^: nice colors :)
10:21  mhi^: Indeed, thanks ;p
10:23  fow: so I don't feel left out: http://ompldr.org/vNmRvaQ
10:23  fow: (It's Menlo, Apple's font based on DejaVu Sans Mono/Bitstream Vera Sans Mono)
10:24  mavvert: looks pretty good
10:24  jink: Too blurry for me. :)
10:24  fow: :P
10:24  jink: s/for me/to my taste/ # perhaps
10:24  mavvert: any (g|mac)vim shots ?
10:25  mavvert: i'll start:  http://img203.imageshack.us/img203/8205/vim0.png
10:26  mavvert: _rane: what font are you using ??
10:26  _rane: inconsolata :)
10:26  mavvert: right
10:26  mavvert: *slaps self*
10:27  _rane: http://rane.kapsi.fi/shots/macvim-20101201-112728.png
10:28  mhi^: http://d.imagehost.org/0487/vim.png
10:30  mavvert: mhi^: cool. what colorscheme?
10:30  mhi^: my own :>
10:30  mavvert: ah.
10:30  _rane: what's that thing in the lower right corner?
10:31  mhi^: the syntax highlighting you see is C-specific though
10:31  mhi^: I mean the colors are C-specific
10:31  avinashhm: hey guys, is there any way to confirm if our folders are properly shared .. like go to some 'location' where all shared folders are listed ???
10:31  mhi^: _rane: just an X window I used to take the screenshot :)
10:32  mhi^: avinashhm: what are you talking about?
10:32  avinashhm: mhi^, i have shared a folder .. but i amn't able to access from another ubuntu PC ..
10:33  mhi^: what is a shared folder?
10:33  mhi^: and why are you asking this in #vim?
10:33  avinashhm: i have a folder of data, which i shared ..
10:33  iaj: mhi^: do you have that colorscheme shared?
10:33  avinashhm: oops .. i am sorry .. i wanted to ask this on #ubuntu
10:33  iaj: looking good:)
10:33  avinashhm: sorry guys
10:34  mhi^: iaj: ask me again in a few days, I just set up my website and will upload it there
10:34  iaj: mhi^: ok :)  reminder set.
10:35  _rane: is there a vim plugin or something that allows me to quickly scroll through color schemes?
10:36  _rane: instead of downloading them one by one and then editing .vimrc and :sourcing it
10:36  fow: _rane, you don't need to source your vimrc. Just place the colorscheme in the right place, then :colors <name>
10:37  mhi^: vimgor: colors
10:37  vimgor: hmm... colors is http://code.google.com/p/vimcolorschemetest/, mhi^
10:37  mhi^: _rane: ^
10:38  _rane: yeah, i know that site
10:38  _rane: but i would prefer to be able to try them on the file i have currently open etc.
10:38  _rane: with minimal trouble .)
10:39  mhi^: well, then what fow said :>
10:42  iaj: _rane: just :colo<C-d> is the way to go imo :(
10:43  _rane: not exactly what i was thinking about...
10:45  mhi^: iaj: I'm not really sure you want that theme, though.. it's pretty.. specific. This following screenshots use the same theme as the one you've seen before: http://d.imagehost.org/0464/vimrc.png and http://b.imagehost.org/0399/perl.png
10:49  iaj: mhi^: oh it really is specific - enhance it :)
10:57  fragione: how can I cause :q (and :Q) to behave like alt-f4?
10:57  fragione: (in gvim, windows)
10:58  mhi^: How behaves Alt-F4?
11:02  fragione: a dialog box that confirms you want to exit, if you have unsaved changes, instead of a text message in the status line
11:02  fow: fragione, :se 'confirm'
11:02  fow: erm. I meant either :h or confirm. I'm not sure which.
11:05 --- forneus_ is now known as forneus
11:05  fragione: isn't there a way to just remap :q to alt-f4? why do I need to create my own dialog box?
11:06  fow: umm did I get the option name wrong...
11:06  fragione: oh ok my bad... it's :h :confirm
11:07  fragione: but can I map :q to :confirm?
11:07  fow: nope, 'confirm' is the one I meant...
11:07  fragione: err or :q to :confirm :q
11:08  fow: fragione, :set confirm | q brings up a dialog for me
11:08  mhi^: fragione: you can't remap :q
11:09  fragione: can I remap :Q?
11:10  mhi^: fragione: yes, with ":com"
11:10  mhi^: but as fow said, just set 'confirm' in your vimrc
11:10 * spiiph can't believe that anyone would prefer a dialogue box over a simple confirmation message.
11:11  mhi^: :)
11:11  fow: spiiph, guio+=c :)
11:11  fow: err, go+=c
11:13  fragione: spiiph: it's not a confirmation message, it just says u can't exit with this command
11:13  fow: I'm really starting to think fragione has me on ignore >_>
11:15  spiiph: fow, I use 'noconfirm', I have no use of that option. :)
11:17 --- RichiH_marriage is now known as RichiH
11:17  fragione: fow, am i supposed to put 'set confirm | q' in my vimrc?
11:17  fow: fragione, no, just set confirm
11:18  fow: fragione, the | q was because I was too lazy to issue two : commands
11:20  fragione: ok... thank got it working.
11:20  fragione: thanks
11:20  fragione: is there a way to quickly copy from the defualt register to the unnamed (system) register and vice versa?
11:21  spiiph: Uh, the default register is the unnamed register.
11:21  spiiph: Try :let @+=@"
11:23  fragione: and the other way?
11:24  spiiph: You should be able to guess.
11:25  canthiswait: if I don't use toolbars or buttons in gvim is there any benefit in using it over vim in the terminal?
11:25  daniel: yes, fonts and colors
11:25  daniel: and refresh and paste
11:26  canthiswait: refresh?
11:26  fragione: @=@+?
11:27  daniel: well, refresh might not be broken in modern terminal emulators
11:27  daniel: but i experienced situations where i had to make vim refresh it's content because some parts were missing/wrong
11:28  canthiswait: cool thanks!
11:38  iaj: whats going wrong here... 'cat * | vim' is not working...  
11:38  kurkale6ka: vim -
11:39  MarcWeber: iaj: vim -
11:39  MarcWeber: oh :)
11:40  iaj: thanks - and if I got a mapping for gvim with g linked to gvim --remote-silent   how'd that work?
11:41  MarcWeber: iaj: pipe to file, ask vim to open that file.
11:41  MarcWeber: iaj: Or ask vim to run the command by :r! cmd
11:42  iaj: MarcWeber: i heard of a command used by g $(command)  somewhat.. but that doesn't seem like it...
11:42  MarcWeber: iaj: There is --remote-send or such. Then ask vim to call :e | r! your-cmd
11:45  iaj: MarcWeber: i don't get it :-) 
11:45  MarcWeber: iaj: Can you open vim? Then type :enew | r! seq 100
11:46  MarcWeber: or :enew | cd path | r! cat *
11:46  MarcWeber: Then do vim --help 2>&1 | grep remote.
11:46  MarcWeber: Then you know how to pass such a command to vim
11:48  Dynetrekk: why doesn't more languages than english show up in macvim's spell check?
11:48  iaj: i wanted to avoid the tabbing to macvim :) but alright i see the last point
11:48  iaj: @marcweber.
11:49  MarcWeber: iaj: Theen google how to make gvim go front.
11:49  mhi^: Dynetrekk: do you have others installed?
11:50  Dynetrekk: mhi^: in macosx? I think so
11:50 --- Dad`_ is now known as Dad`
11:50  hadyy: hi, how to apply syntax highlighting every time i opened th vi
11:50  Dynetrekk: dutch, polish... various stuff here
11:51  iaj: MarcWeber: so I'd need to use remote-send in order to send a command to macvim... I just don't know how I should make it use the current dir im in $PWD something I guess
11:51  iaj: I just thought I could do that without calling r! cat in my macvim
11:51  mhi^: Dynetrekk: I don't know "MacVim's spell check", but the languages supported by the operating system and Vim's spell files are 2 different things.
11:51  iaj: alright, tahnks a lot:)
11:52  Dynetrekk: mhi^:  ah, I see. so I probably need to download spell files for vim then
11:52  mhi^: yup
11:52  hadyy: guys?
11:52  Dynetrekk: mhi^: is there some central repo for this kind of vim related stuff?
11:52  mhi^: hadyy: put "filetype plugin indent on" and "syntax on" into your vimrc
11:53  mhi^: Dynetrekk: http://ftp.vim.org/vim/runtime/spell/
11:54  Dynetrekk: mhi^: thanks
11:56  Dynetrekk: mhi^: what files do I need? the .aap file?
11:56  mhi^: Dynetrekk: No idea, I don't use this feature. See :h spell
11:56  Dynetrekk: mhi^: ok, thanks
11:57  mhi^: np
11:58  Dynetrekk: woot, it works now...
12:02  mhi^: :)
12:06  Dynetrekk: how can I use spell suggestions without mucking about with the mouse?
12:11  Dynetrekk: I found it: http://tips.webdesign10.com/vim/how-use-vims-spellchecker
12:18 --- MinceR_ is now known as MinceR
--- Log closed Wed Dec 01 12:32:10 2010
--- Log opened Wed Dec 01 12:32:29 2010
12:32 --- Users 581 nicks [0 ops, 0 halfops, 0 voices, 581 normal]
12:32 --- Server: [hubbard.freenode.net] [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
12:34 --- Channel #vim was synced in 108 seconds
12:56  iaj: hmm I just tried cat * | vim -   but somehow I can't browse through that file.. any clue view? if I hit j for example it prints j
12:59  MarcWeber: iaj: WHat does cat * | less do?
12:59  MarcWeber: does echo TEXT |vim - work?
13:00  iaj: MarcWeber: cat * | less is working as expected
13:01  iaj: echo TEXT | vim - isn't :\
13:01  iaj: same behaviour - is it working for you?
13:01  MarcWeber: iaj: Which shell are you using?
13:01  iaj: zsh shell.
13:01  MarcWeber: Yes it is working for me.
13:02  iaj: mhh I'll try bash
13:02  MarcWeber: zsh should work. Do you have multiple buffers opened? Try :ls
13:03  iaj: multilple buffers? that vim session is just being launched :(  - : doesn't even bring me to the command line
13:03  iaj: i get a warning vim is reading from standard in at first - and then I get to read the top of the file.. but all additional keypresses result in getting pressed
13:03  iaj: guess its just assuming std in there.
13:04  iaj: btw are there any advantages from console vim over guivim?  like macvim in my case?
13:04  Starfire: echo might not work because it's often a shell builtin.
13:04  Starfire: Try: /bin/echo TEXT | vim -
13:05  Maahes: iaj: yes, you can stay in the console, run it under a session manager like screen or tmux.
13:05  iaj: Starfire: same problem.... -stdin- is on my bottom like.
13:05  iaj: s/like/line
13:06  iaj: Maahes: yeah.. that's about the only good reasoning right? so you can let it run all the time.
13:06  Maahes: g/mac/vim however has easy to access point and click stuff.
13:07  Maahes: iaj: well, if your workflow is very oriented around the console its probably a better choice to use it in console, tighter integration, plus its one less window.
13:08  Maahes: iaj: with tmux. I can open up a split of vim and split of something else (term prompt, htop, whatever), and sitch back in forth entirely keyboard driven.
13:09  iaj: Maahes: I'd actually run it in console, if there weren't some drawbacks... shift-space is same as shift in console, right?  hmm. its running much more slower than macvim... really- the rendering is so much slower... dunno if its because of CSApprox or something...
13:09  Maahes: iaj: try unloading that plugin.
13:09  iaj: Maahes: hmmm.. tmux > screen ?
13:10  iaj: how many splitwindows can you have there?
13:10  Maahes: iaj: as many as you want, plus tabs.
13:10  iaj: Maahes: can you hook me up with a screenshot?
13:11  Maahes: and well feature wise tmux > screen. Screen has an advantage of being everywhere.
13:11  Maahes: sure hold on
13:11  iaj: how do you switch between those splits?
13:11  iaj: ty
13:11  Maahes: iaj: keyboard bindings or the mouse
13:12  iaj: mouse, lol ... that's not what we are @vim for ;)   which keyboardcombination in your case?
13:12  Maahes: jjk/redraw
13:12  iaj: uh? jjk/redraw?
13:16  Maahes: http://i.imgur.com/gFJRR.png
13:17  Maahes: that was me trying to deal with a bug in weechat, sorry.
13:17  Maahes: iaj: ^
13:17  spiiph: That looks nice. I should get tmux
13:17  iaj: heh.. looks good...  so if you are at the top right and want to go to the top left.. how'd you do?
13:18  Maahes: C-a C-k
13:18  Maahes: it's possible to make a binding such that you only have to hold down alt+hjkl to switch windows, but it's not supported in my term
13:19  iaj: wee.. ill go check it out definelty... got a link to that alt+hjkl thingie?
13:20  iaj: definitely..sorry
13:21  Maahes: the three big features tmux has over screen: It's prettier, you can do vertical and horizontal splits, and you can start a program then start up tmux, and attach that program to tmux, or detach a program from tmux whilst still running.
13:22  iaj: hmm you can have vertical and horizontal splits in screen too now.. in the devel version - but yeah the starting program part sounds awesome as well..
13:30  Maahes: iaj: the binding is something like bindkey M-[hjkl] send-prefix select-pane -[hjkl] I believe.
13:32  iaj: thanks :)
13:32  Maahes: np :) now if only I could get weechat to not fuck up
13:34  amgarching: hi, how to turn auto indent temporarily off? :set noautoindent dosnt help. I also have "filetype plugin indent on" in my ~/.vimrc
13:38  iaj: Maahes: heh :-) use irssi + vimbinds :D
13:38  shurane: I was just wondering, isn't '^' a weird key to get to the first character of a line?
13:38  Maahes: iaj: weechat is otherwise a lot better than irssi
13:38  spiiph: I use _
13:38  iaj: otherwise! :D
13:38  iaj: using _ as well.
13:39  Maahes: otherwise than the particular bug I'm having. weechat accepts plugins in several different languages, has a clear and consistent API, can v and h split, and do multiplits. And merge two channels into 1, and the UI's easily configurable, and you don't have to use perl. That's its biggest feature.
13:41  Maahes: oh and making things like vim-like keybindings for weechat is clear and easy, you can do it inside the typing prompt with no hassles, and write to the config.
13:41  shurane: Maahes: you're making weechat (also tmux) sound extremely attractive. Irssi doesn't quite cut it.
13:42  Maahes: irssi has one advantage: there are bazillionty plugins for it. But I'm quite happy with the available plugins for tmux. And themeing is dirt simple
13:42  spiiph: Hrm, you make me want to use tmux, but I'd have to port one plugin, and I don't have time! :D
13:42  tlonim: hmmm... weechat vs irssi ?
13:43  tlonim: obviously weechat :)
13:43  mhi^: I'd go for weechat if I had to choose between one of those. But someone like me, who has a full-fletchered irssi config + theme + plugins won't ever change to something else.
13:43  Maahes: you just edit some config values. Adding a new network is like this /server autoconnect irc.server.freenode.com then for channels /set irc.server.freenode.autojoin "#chan1,chan2,#etc" to write to your config /save
13:43  mhi^: Also, Perl fans will mostly prefer irssi over weechat.
13:44  mhi^: *most probably
13:44  Maahes: weechat accepts perl plugins though.
13:44  Maahes: and tcl, and python and ruby, and one other I think
13:44  mhi^: With the core still written in Python. And that's the point. ;)
13:45  Maahes: mhi^: yeah, but that's not relevant to most people unless they're editing the source-code of irssi. Just how they interact with the api
13:45  mhi^: It does make a difference. They have mostly the same features in the end. So a Perl fan will most probably go for irssi. Just because.
13:46  Maahes: mhi^: that's a bad way of looking at things, but you are probably right.
13:46  shurane: But mhi^, with that attitude you'll never try new software! :(
13:47  Maahes: If program A has a better API and architecture, but is written in a different language, and allows you to write for it in your programming language of choice. The choice should be: use the better program.
13:48  shurane: it's too bad plugins and plugin APIs aren't designed more generically.
13:48  Maahes: yeah, it would be nice to have a generic standardized plugin implementation.
13:49  mhi^: shurane: There was a time when I played around with new software daily. (First 3 years of Linux.) But there comes the time when you will be satisfied with your current setup and you stay with it. That's when you start to get things done. ;P
13:49  Maahes: mhi^: that's a valid reason to stick with what you know.
13:49  Maahes: if it's what makes you productive, keep it.
13:50  mhi^: It's like the old saying: "Never change a running system."
13:50  nate-: hey guys how can I echo the guibg for the Normal highlight group?
13:50  shurane: More like, "if it ain't broke, don't fix it"
13:50  mhi^: Only if other software provides neat features that you really want to have.
13:50  mhi^: nate-: just ":hi normal"
13:51  nate-: thanks mhi^
13:51  shurane: mhi^: haha, we're so feature-driven! Won't anyone try something new unless there's this "killer app" that uses said new product?
13:52  mhi^: I can't speak for everyone, but it's how I handle it.
13:53  mhi^: It's down to: Either it has a new killer feature or it improves my daily workflow significantly. Otherwise don't pay attention to it."
--- Log closed Wed Dec 01 13:56:45 2010
--- Log opened Wed Dec 01 13:57:34 2010
13:57 --- Users 599 nicks [0 ops, 0 halfops, 0 voices, 599 normal]
14:00 --- Channel #vim was synced in 202 seconds
14:31  dimm: how can i match '<p align=> ' via something like 's/<p. {some text here}//'
14:33  tvm: try %s/\'<p align=> '/bar/g
14:33  dimm: tvm, i need for non-greeedy substitute
14:33  dimm: line contents something like:
14:33  dimm: <p align=center> text text text </p>
14:34  tvm: and you want to substitute the text or the tags?
14:34  dimm: delete tags )
14:34  tvm: hrm.
14:34  dimm: tvm, did you remeber, <p> have </p>, or it is a mistakes of web-designer?
14:35  dimm: is <p>-tag have closing </p>-tag, or it is a mistake?
14:35  tvm: i don't remember what is <p> tag actually.
14:36  dimm: paragraph
14:36  tvm: ah, yes.
14:40  tvm: dimm: maybe, try something like this: %s#<[^>]\+>##g
14:41  dimm: tvm, i need only susbtitute <p ...... > :-)
14:43  kurkale6ka: use \{-1,} for non greediness
14:46  dimm: kurkale6ka, can you print command?
14:46  dimm: %s/<p.\+\{-1,}>//
14:46  dimm: not work in gvim
14:47  kurkale6ka: %s#</\=p[^>]\{-}>##gc
14:47  kurkale6ka: untested
14:48  dimm: %s/<p.\{-}>//
14:48  shurane: dimm: you're trying to delete the tags? Have you heard of surround.vim?
14:48  dimm: work fine for me
14:48  dimm: shurane, i not heared abou it , sorry
14:49  kurkale6ka: vimgor surround
14:49  vimgor: surround.vim is a plugin written by tpope for dealing with pairs of surroundings. It can be downloaded at http://www.vim.org/scripts/script.php?script_id=1697 or http://github.com/tpope/vim-surround
14:50  dimm: vimgor, ok
14:50  vimgor: Bugger all, I dunno!
14:50  dimm: how i can catch </p> ?
14:50  dimm: oops, kurkale6ka, ok :)
14:51  dimm: my mistake - $ instead % at start of command
14:51  dimm: %s/<\/p>//    work fine
15:31  kedarm: If I did [count]w, it moves [count] words forward -- how do I get back? Ctrl-O does not seem to get me back. Any idea?
15:33  iaj: since word motions don't count as jumps... you can't go back with C-O
15:33  MarcWeber: kedarm: 10 B ? If c-o does't work there is also g; (last position weher you edited some text)
15:33  iaj: you need to [count]b ?
15:33  gkatsev: <c-o>
15:34  gkatsev: <C-o> will jump back to where you were exactly.
15:34  iaj: gkatsev: but not after wordmotions? no?
15:34  gkatsev: oh, yeah, you're right.
15:36  kedarm: MarcWeber: iaj: thanks, but [count]b is only for going [count] words backward. Is there a general Ctrl-O equivalent?
15:37  MarcWeber: kedarm: THe issue is that its not storing the position.
15:37  iaj: i don't think there is
15:37  kurkale6ka: kedarm: you could set a mark: mm then `m
15:37  MarcWeber: If you press l 100 timse, do you want Vim to record 100 posititons?
15:37  kedarm: Ah.
15:37  kedarm: Makes sense.
15:37  iaj: for the last motion there would be a useful thing tho
15:37  kedarm: Yeah.
15:38  kedarm: But then how does it remember the position you go to using Ctrl-O?
15:38  MarcWeber: kedarm: You could emulate it using a search pattern. THen c-o will work
15:38  kedarm: kurkale6ka: I guess I can us marks, but that takes some time.
15:38  gkatsev: there is the jumplist. which c-o and c-i use
15:39  MarcWeber: kedarm: CAn you copy paste the lines you want to navigate in?
15:39  iaj: kedarm: :he jump-motions
15:39  MarcWeber: Maybe there are faster ways to get back.
15:39  MarcWeber: 10w is something I never use.
15:39  kedarm: iaj: yeah, that's next. I am on :help various-motions
15:40  iaj: kedarm: yeh but there you will find information what's being stuffed for <c-i> or <c-o> respectively.
15:40  gkatsev: :h text-objects ftw
15:40  kedarm: MarcWeber: I was just curious. I am trying out w, W, t, T, f, F etc. as I read and I stumbled on this one.
15:41  gkatsev: vimgor: movement
15:41  vimgor: In normal mode, all of these keys can move the cursor: ` # $ % ^ * ( ) 0 _ - + w W e E t T I o O { } [[ [] ][ ]] [m [M ]m ]M [( ]) [{ ]} | A f F ge gE gg G g0 g^ g$ g, g; gj gk gI h H j k l L ; ' z. z<CR> z- zz zt zb b B n N M , / ? <C-b> <C-d> <C-e> <C-f> <C-h> <C-i> <C-o> <C-t> <C-u> <C-y> - learn to use all of them
15:41 --- peth_ is now known as peth
15:41  MarcWeber: vimgor: zz ? depends on how you look at it.
15:41  vimgor: I don't know!
15:42  kedarm: Another question related to it. What is the opposite (equivalent) of [count]$?
15:43  spiiph: [count]_ perhaps?
15:43  gkatsev: MarcWeber: it moves the cursor.
15:43  spiiph: Depends on what you mean with opposite
15:43  MarcWeber: gkatsev: the line number will be the same.
15:44  kedarm: I'd have expected [count]^ to go to [count]th line above and moved cursor to first non-blank character in the line.
15:44  gkatsev: MarcWeber: I don't know, never used it but it seems like it might move according to the help
15:45  spiiph: kedarm, did you try [count]_ ?
15:45  kedarm: spiiph: I see that moves the cursor down [count] lines and places it at the first non-blank character in the line.
15:46  kedarm: how to move it up [count] lines and place it on first non-blank character?
15:47  neuro_sys: anyone using VimIRC?
15:48  spiiph: neuro_sys, we don't discuss that here.
15:48  lucasoman: er
15:48  lucasoman: agreed
15:48  neuro_sys: okay
15:48  lucasoman: neuro_sys: i hear emacs is a nice OS, but for a good editor
15:49  gkatsev: spiiph: what about conque? is that also taboo?
15:49  neuro_sys: hmm that would make a nice discussion topic.
15:49  spiiph: Nah, people seem to like that one.
15:50  gkatsev: hehe, yeah, conque is pretty cool
15:50  gkatsev: though, I still have some problems with editing the buffer
15:51  rson: i wish that when program running in the conque buffer died, the buffer would be deleted.  i haven't found a way to handle that yet.
15:51  gkatsev: isn't there some option or something for that now?
15:52  rson: there may be, i haven't been following development for a while now
15:52 --- disgrntld1 is now known as disgrntld
15:52  gkatsev: there was a new version like a week ago
15:52  spiiph: Granted. Anyway, conque is a plugin, and it is at least remotely related to using Vim. VimIRC is not. :)
15:53  rson: heh, actually i just realized i had removed it.  i'll go check out the commits on my git mirror and see what's been going on
15:53  rson: gkatsev: thanks for the heads up
15:53  neuro_sys: vimirc plugin seems to be sucking hard anyway.
15:53  gkatsev: rson: let g:ConqueTerm_CloseOnEnd = 0
15:54  gkatsev: rson: well, you want it 1, actually.
15:54  gkatsev: :)
15:54  christophe-marie: I noticed when I "scroll" by keeping pressing the <Down> key (bad practice, I know) and that I open 2 windows side by side (or more), I often loose control of vim (it keeps scrolling even though I released <Down> long ago). Is it due to xterm or do other people have the same problem?
15:57  rson: gkatsev: indeed, ty kind sir.  there are a few other new options that look especially exciting.  i may add it back in again.
15:58  gkatsev: np
16:01  christophe-marie: set lazyredraw saved the day
16:08 --- davidfetter is now known as everyone
16:08 --- everyone is now known as davidfetter
16:08  blueyed: I am trying to paste something containing newlines at the cursor position, but it either gets pasted above ("P") or below ("p"). Is this meant to be like this or triggered by some setting/plugin?
16:09  blueyed: (i.e. I want to paste it at "_" for "<td>_</td>")
16:10  graywh: blueyed, what you're trying to paste was a line-wise delete
16:10  graywh: to get around that, paste from insert mode
16:11  blueyed: graywh_: how do you know what I want to paste? Just because there's a newline in it it becomes a line-wise delete? It was normal text, containing a newline.
16:12  mgedmin: it all depends on how that text ended up in your register
16:12  graywh: containing a EOL doesn't make it line-wise
16:13  blueyed: from another app, but also when using e.g. "Vy"
16:13  graywh: V is visual line mode
16:13  graywh: so that yank will be line-wise
16:13  blueyed: I see.
16:14  blueyed: Originally it came from another/external app though (Acrobat Reader)
16:14  mgedmin: I believe presence of newlines is how vim decides if the clipboard/selection was linewise or characterwise
16:14  blueyed: "Ctrl-R *" works btw, good enough. So it's meant to be like that. Fine and thanks :)
16:16  rson: blueyed: interesing, i found myself asking that same question this morning.  glad you asked here :)
16:18  mcantor: In vimscript, how do I express "repeat the character I just typed X amount of times, where X is the length of the previous line?"
16:18  mcantor: Alternatively, does anyone have some good keymappings for editing rst files?  :-)
16:19  spiiph: mcantor, 20ix<Esc>
16:19  krz: gosh ive almost forgotten how much i love vim
16:20  mgedmin: mcantor, there's a nice trick for underlining a title line
16:21  mgedmin: yypVr=
16:22  mcantor: spiiph: That forces me to manually count the length of the preceding line.
16:22  mcantor: mgedmin: That's what I've been doing, but I want to do it in 1 keystroke, and I want to be able to do it with an arbitrary character (not just =).
16:23  mgedmin: yypVr{arbitrary character here}
16:23  rson: mcantor: then it will be at least two keystrokes, one for the action, two for the arbitrary character
16:23  mgedmin: and how else do you expect it to know which arbitrary character to use?
16:23  mcantor: rson: Of course; that's what I meant, and what I should have typed.  :-)
16:23  mgedmin: read your mind?
16:23  mcantor: mgedmin: Well, ideally... ;-)
16:24  mcantor: Oh, speaking of the yypVr trick, I've been wondering something for a while: How can I make it so that my keymappings DON'T clobber any registers that they use?
16:25  Scala: what does the Vr do?
16:25  rson: select the current line, replace each character on the line with whatever comes after r
16:25  mcantor: Scala: V line-selects the whole line, and r replaces the entire line with the next character you type.
16:25  Scala: mcantor: What's the purpose of yanking the line before then O_o
16:26  rson: to get exactly the same number of characters as the previous line
16:26  Scala: Ohh
16:26  Scala: I didn't know you could replace selections like that.  Nifty
16:28 * mcantor paints a "The More You Know" rainbow over Scala; and hopes people get the reference
16:28  Scala: mcantor: haha
16:29  Scala: Learning more about vim definitely improves quality of life
16:32  mgedmin: mcantor, to avoid clobbering registers I think you'd need to do something else, like
16:33  mgedmin: :pub =substitute(getline('.'), '.', '=', 'g')
16:33  mgedmin: err, :put, not :pub
16:37  krz: anyone used nerd commentor before?
16:38  rson: who runs vi-improved.org? the download links need to be updated on the front page
16:38  spiiph: vimgor, anyone
16:38  vimgor: Please do not ask if anyone uses, knows, is good with, can help you with or is a guru/expert of <some program>. Instead, ask your real question. You'll probably get help faster that way.
16:38  mhi^: it's actually pretty common, krz
16:38  rson: krz: i use it.
16:38  gkatsev: krz: lots of people use it, just ask the question you want to ask, unless that was the whole question.
16:38  mhi^: rson: I _believe_ MetaCosm
16:38  spiiph: rson, yes, it's MetaCosm
16:38  rson: mhi^: i just realized there is a contact link at the very bottom..  should have looked first.
16:39  krz: mhi^ rson do you know how to provide spaces between the comment tags? for example: /* foobar */ instead of /*foobar*/
16:39  gkatsev: hehe, I was about to do a whois on the domain :)
16:39  krz: or // foobar instead of //foobar
16:40  rson: krz: there is an option called NERDSpaceDelims i think will do what you want
16:41  krz: thanks ill have a look
16:49  armence: Hey, what's the command to do again what I just did?
16:50  iaj: . ?
16:50  armence: thanks
16:51  iaj: shortest answer ever ;) np
16:54  armence: :)
16:55  spiiph: No, you should've excluded the ? :)
17:08  iaj: you'r right spiiph :'(
17:09  iaj: anyone using fuzzyfinder + lustyjuggler combination?
17:10  mhi^: WTH is lustyjuggler? :D
17:10  mhi^: I see.. I never heard of this one before
17:11  gkatsev: sounds kinky
17:12  iaj: a somewhat nice tool if one keeps editing in <10 buffers
17:13  mhi^: Honestly, I almost never edit more than 4 buffers and just use :bn and :bp (mapped, of course)
17:14  iaj: in large projects 4 won't be sufficient at all for me :)
17:14  jerojasro: fuzzyfinder can also switch between buffers
17:14  iaj: jerojasro: i know.. but I like lustyJugglers approach
17:16  iaj: just that lustJuggler keeps showing a [fuf] window from fuzzyfinder which I wanted to get rid fo
17:16  iaj: s/fo/of
17:17  jerojasro: iaj: dunno; I use mostly ctrl-6 (previous buffer), or I select the buffer I want with fuf, if the one I want is not the immediately previous one
17:18  jerojasro: to each his own, I guess
17:18  mhi^: What's your favourite plugin?
17:19  jerojasro: mhi^: plugin to do what? any plugin?
17:19  mhi^: yea
17:19  mhi^: (latter)
17:19  jerojasro: surround.vim
17:20  mhi^: Agreed, I use it, too :P
17:21  mhi^: I just keep getting used to space.vim, I have it installed for eternities already though.
17:21  jerojasro: fuzzyfinder would be a close second, though
17:22  mhi^: well, I also use nerdcommenter VERY often
17:22  mhi^: mostly to quickly commenting out certain lines etc.
17:22  mhi^: pathogen is a winner too, of course
17:24  jerojasro: um, yeah. You know, those two plugins, pathogen and surround, are SO GOOD that I don't really think about them
17:24  mhi^: hehe, yea
17:24  mhi^: snipmate is also very cool
17:25  jerojasro: is what linus torvalds said (misquote follows): a technology is really good and really mature when its users don't notice them: my goal is to develop a OS that is invisible to its users
17:25  mhi^: Now I just have to decide for either vcscommand or fugitive.. but since I mostly use git repops, I think I'll go for fugitive (and because it's from tp*pe :P)
17:26  jerojasro: yep
17:26  gkatsev: and as arthur c clarke said 'any sufficiently advances technology is indistinguishable from magic'
17:26  mhi^: :]
17:30 * mgedmin thinks acc could spell
17:30  homekevin: Wow, fugitive looks really cool.
17:31  mhi^: mgedmin: don't be so fussy :-P
17:31 * mgedmin is bored
17:31  homekevin: I'm not really a fan of doing VCS commands from inside Vim. That's what shells are for.
17:31  mgedmin: and looking for entertainment on irc
17:31  gkatsev: mgedmin: http://bit.ly/gBSMOD
17:31  mgedmin: homekevin, VCSVimDiff is very useful sometimes
17:31  homekevin: But there are some things that are really useful, like showing a vimdiff of the current work.
17:32  homekevin: (I have a plugin for vimdiffing the current version against committed versions that I use all the time)
17:33  homekevin: I've always wanted an easy way to jump to different versions of a file, though. It looks like some of that is implemented in fugitive.
17:33  MarcWeber: homekevin: which VCS are you talking about?
17:33  homekevin: MarcWeber: Well, any.
17:34  MarcWeber: homekevin: I wrote a minmial plugin called vim-addon-views and some git support on top of it.
17:34  MarcWeber: vim-addon-views is easy because it let's you run arbitrary commansd and show them in a buffer.
17:35  MarcWeber: My git porcelaine on top of it only does :exec CreateBufName(['git','show',"rev:path"]) then.
17:35  jerojasro: homekevin: I have a plugin to compare the current file against the HEAD version, or previous versions if needed. Works only for git, though
17:35  akosch: i've been using ctags with vim for ages and it's great with huge projects. the only thing i'm missing is to be able to list all public functions of a class (shouldn't be that hard to write a script: I already know where the class is defined from ctags...)
17:35  jerojasro: akosch: do you know the taglist plugin?
17:37  akosch: jerojasro: yes, but it's a bit cumbersome: when I need this i'm mostly typing somewhere in insert mode and with taglist I first need to do a :ts for my class, then start the taglist plugin which displays all my buffers
17:38  akosch: jerojasro: and that's usually a lot :)
17:38  homekevin: jerojasro: Mine currently supports git, hg, and svn. It also shows rev info in the status line and restores the original window settings when the diff window is closed.
17:39  homekevin: Those are some of the things I think are cool about it. :)
17:40  akosch: jerojasro: If I could configure taglist to only display classes and function for my active buffer I guess it would be ok (I also dislike the variables view, since usually it is very long)
17:41  jerojasro: mine also has that those features; funny thing; looks like we both were trying to fix vcsvimdiff :P; I never knew how to close properly those vcs windows!
17:44  homekevin: Man, why can't my plugins be special? :/
17:44  mhi^: Are you missing something important? I'm search for an idea for a plugin :>
17:45  mhi^: *searching
17:45  jerojasro: homekevin: I never got around to publishing it, and I actually don't know if it duplicates fugitive's functiionality (wouldn't be surprised, though)
17:45  mhi^: I thought about expanding my scratchpad thingy, but it wouldn't be a big plugin :P
17:48  jerojasro: akosch: : Tlist_Show_One_File
17:48  jerojasro: I see no option for showing only classes and functions, though
17:48  homekevin: Actually, I think a few of mine are unique. I looked for a better gpg-encryption plugin before I wrote mine, and I've never seen anything else like my indent detection plugin.
17:48  akosch: jerojasro: thx, for that: it's a big improvement already :)
17:48 --- forneus_ is now known as forneus
17:49  mhi^: what do programmers often do.. *thinks*
17:50  mhi^: I'm not really missing something, so I can't come up with a good idea :>
17:50  homekevin: mhi^: Figuring out what you are missing is really hard.
17:50 * mhi^ nods
17:50  homekevin: Or what you are *lacking* but not missing, I guess.
17:52  mhi^: maybe a screenshot + upload plugin :-P
17:52  mhi^: or something which tar's the current project and uploads it to your website..
17:52  mhi^: all pretty lame :p
17:59  jerojasro: mhi^: dunno, I wouldn't try writing a plugin just for the sake of it; it is better when *you* need, since what you want (and what the plugin will do) is absolutely clear in your head
17:59  jerojasro: and you can (ab)use yourself as a testing monkey :)
17:59  mhi^: Agreed ;)
18:00  homekevin: mhi^: Or just write a First-Person Shooter.
18:00  jerojasro: hell yeah, that's a needed plugin for vim!
18:00  mhi^: Don't like them. VimCity would be nice :-D
18:00  homekevin: mhi^: Maybe you could come up with a minesweeper game that integrates with your coding.
18:01  mhi^: How would that look like?
18:01  homekevin: So if you type the wrong character in the wrong cell.... booom!
18:01  mhi^: haha
18:05  homekevin: I'm actually planning my next plugin now. It's gonna be sweet.
18:06  homekevin: Or it'll suck so bad that it'll never see the light of day.
18:06  mhi^: !
18:07  SpookyET: hi
18:07  SpookyET: How do you deal with a stuck command in a vim window? http://cl.ly/3TAj I can open new windows, but can't close this particular window or terminate the command.
18:07  jerojasro: SpookyET: ctrl-c helps?
18:08  SpookyET: no
18:08  homekevin: SpookyET: CTRL-Q?
18:09  SpookyET: i'll remember next time
18:10  SpookyET: Testing VCSCommand SCMFrontEnd and vim-fugitive.
18:11  SpookyET: SCMFrontEnd seems to have lots of potential
18:12  SpookyET: and macvim just crashed
18:13  homekevin: What? Vim doesn't crash.
18:13  jerojasro: SpookyET: were you trying a svn command from vim when it hanged?
18:13  SpookyET: VCSStatus
18:14  SpookyET: on git
18:15  ivan-kanis: homekevin: you should try doomrl for a first person shooter
18:16  mhi^: spiiph: my space.vim is managed by pathogen. The vimrc says "let g:space_loaded = 1". :scrip says that it got loaded after /etc/vim/vimrc.local, but still ":verb nmap <space>" is mapped to ":nohl<CR>" set by the vimrc.local. What am I missing?
18:17  mhi^: Ehm, the variable is set to 0, of course.
18:22  graywh: mhi^, unlet the variable
18:22  graywh: if exists("g:space_loaded") finish
18:22  graywh: endif
18:23  mhi^: Oh.. thanks :)
18:25  spiiph: Right.
18:26  mhi^: Yea, this was a stupid mistake. I always had it disabled by setting it 1, now I finally wanted to try it out and just changed the value. :]
18:26  spiiph: Heh
18:27  mhi^: Even stl integration, neat.
18:29  mhi^: Is it supposed to work with 'za'?
18:29  spiiph: Not sure, what does za do?
18:29  mhi^: toggling folds
18:29  spiiph: Ah, no, it's just for movements.
18:29  macieks: Hi
18:30  mhi^: Ah, hmm. What is a 'fold movement' then? :) (g:space_no_folds)
18:30  macieks: I have a question about vim and python
18:30  macieks: I have vim with python support and I wanted to check the python version
18:31  macieks: in my system i have 2.4.3 and 2.6
18:31  macieks: I ran :python import sys; print sys.version in vim
18:31  mhi^: spiiph: Ah, space-hooks. I overlooked it ;)
18:31  macieks: 2.4.3 (#1, Jan 21 2009, 20:18:43)
18:31  jerojasro: macieks: vim --version would also answer that
18:31  macieks: and I got this, is there a way to tell vim to use python 2.6 binary ?
18:33  jerojasro: mac  afaik, not withouth recompiling vim
18:33  macieks: vim --version showed thah it was linked with python 2.4, so probably there is no way to change that
18:34  macieks: :(
18:40  jerojasro: macieks: can't fix your problem dragging what you want from the 'future' module?
18:44 --- _Unode is now known as Unode
18:44  mhi^: I should write a blog entry about each plugin I use. Thus I learn more about them (as I'd have to reread the help pages) and it could be a nice reference to others.
--- Log closed Thu Dec 02 15:16:28 2010
