--- Log opened Fri Dec 03 13:04:41 2010
--- Log closed Fri Dec 03 13:07:43 2010
--- Log opened Fri Dec 03 13:07:52 2010
13:07 --- Users 590 nicks [0 ops, 0 halfops, 0 voices, 590 normal]
13:07 --- Server: [holmes.freenode.net] [freenode-info] if you're at a conference and other people are having trouble connecting, please mention it to staff: http://freenode.net/faq.shtml#gettinghelp
13:08  walt: mgedmin: 7.3 but I have tracked it down to having to do with bufexplorer
13:08  mgedmin: interesting
13:08  walt: it is when I visit the buffer again from buffer explorer it happens
13:08  mhi^: walt: :h FileChangedShell
13:08  walt: however, it does not automatically detect the change though
13:08  walt: if I just ave the file open
13:09  dc5ala: walt: if i run vim in terminal mode instead gui i dont get any message either, hmmm
13:09  mgedmin: IIRC for me it used to happen when I switched from a different window back to gvim
13:09  mgedmin: it would show me "file modified, load it? (y/n)" and then refuse to accept my input
13:09  mgedmin: echoing characters as I type them
13:09  mgedmin: same bug or a different one?
13:09 --- Channel #vim was synced in 113 seconds
13:09  dc5ala: so there seems to be different behaviour if running on terminal
13:13  mgedmin: hm, at some point I added 'set autoread' to my .vimrc
13:14  mgedmin: it could be that's why I never notice this any more
13:21  krz: how do i yank from cursor onwards?
13:22  scoobertron: y$ yanks to the end of the line if that is what you mean
13:22  krz: okill try this
13:51  Altreus: Is it easy to set up a command to increase the gui font size?
13:51  Altreus: or decrease it of course!
13:52  Silex: :set guifont ?
13:52  Silex: </guess>
13:53  Altreus: could do, but I'd have to find out what it is
13:53  Altreus: seems like a thing that is find-outable
13:53  Silex: I don't understand where you would be stuck
13:54  Silex: anyway, google suggests http://vim.wikia.com/wiki/Change_font_size_quickly
13:54  Altreus: ah, they're doing it the hacky way I was going to do it - except I probably would not have succeeded :)
13:55  Silex: there's also http://www.vim.org/scripts/script.php%3Fscript_id%3D202
13:55  Silex: well, actually http://www.vim.org/scripts/script.php?script_id=2321
13:59  Altreus: ah yea these seem to work the same way :)
13:59  Altreus: Should have searched for plugins first heh
14:37  peth: is there a way to use i_Ctrl-X_Ctrl-F completion without vim expanding prefixed env variables like $HOME ?
14:48  nital: how do I copy stuff from vim to klipper? I googled it and found a way to mark it with 'v' and then '+y', and it works... partially
14:48  nital: it copies only the first one of selection
14:48  nital: how do I copy the whole selection?
14:49  dindinx: nital: use the + register: "+y
14:49  Silex: the " is important
14:50  nital: oh :)
14:50  nital: I thought that it was citation mark when I googled it..
14:50  nital: thanks!
14:53  SpookyET: Hi. Is there a vim setting that will automatically open QuickFix after make if there was an error? Thanks.
15:00  malfy: bah
15:01  malfy: getting E509: Cannot create backup file (add ! to override)
15:01 --- nital_ is now known as nital
15:01  malfy: even though i have the $VIMHOME var set
15:01  malfy: in my .vimrc
15:01  Silex: SpookyET: make a mapping
15:03  malfy: also, sometimes vim's tabs have shortened tab names in the tab status line even though there is still room left
15:03  malfy: anyway to fix this?
15:03  Silex: SpookyET: actually, look QuickFixCmdPost
15:06  SpookyET: silex: as in au QuickFixCmdPost * copen ? I do remember a seeting that did automatically. It might have been from a plugin.
15:06 --- nital_ is now known as nital
15:07  Silex: SpookyET: I'm not sure what the right way would be, but there are ways
15:07  Silex: you're on your own to figure it out now
15:07  Silex: ;)
15:10 --- nital is now known as nital_
15:10 --- nital_ is now known as nital
15:11  SpookyET: silex: QuickFixCmdPost * cwindow seems to work.
15:12  Silex: cool
15:12  SpookyET: unlike copen, cwindow only opens when there are errors.
15:12  Silex: I personnaly use :FufQuickFix
15:13  SpookyET: silex: I don't use fuzzyfinder.
15:14  Silex: you made me realise I could tweak my build command to do more fancy stuffs
15:15  SpookyET: You can control it for only the things you want: au QuickFixCmdPost make, grep, grepadd,… cwindow/copen
15:15  SpookyET: No need to use the asterisk.
15:17  rson: SpookyET: i could have sworn there was an option for that as well but i can't find it anywhere.  oh well.
15:18  SpookyET: rson: i know
15:19  SpookyET: rson: Then again, many plugins/compilers open cwindow automatically unless disabled via a variable. Pylint comes to mind. So, our memories could be warped.
15:34  wanderley: how can I highlight double quoted strings in cucumber file?
15:43  Silex: :set hlsearch /\v".*"
15:44  Silex: :)
15:44  Silex: if the idea is it to be part of the syntax file I have no clue
15:44  Silex: err, /\v"[^"]+"
16:10  Typh: is there any way to... switch the escapes with :s ? It's weird having to type \( when every other regex I've ever used, that would be escaped, rather than the special (
16:11  Typh: if that makes any sense.
16:11  Kuukunen: Typh: :s/\v
16:13  Typh: oh thank god
16:13  Typh: Thank you :)
16:13  Typh: I wish I had asked that sooner
16:13  Kuukunen: Typh: altho afaik, there's no way to make that default
16:13  telemachus: You can put it in your .vimrc
16:13  Typh: looks like "set magic" does it
16:13  Kuukunen: one reason all scripts using substitute would break
16:14  Kuukunen: Typh: \v is "very magic"
16:14  Kuukunen: magic should be default
16:14  Typh: oh
16:14  Kuukunen: telemachus: put what? :o
16:14  Kuukunen: \( is still how you have to do with it if you have magic set
16:15  telemachus: nnoremap / /\v
16:15  telemachus: vnoremap / /\v
16:15  telemachus: For searching at least
16:15  Kuukunen: I don't usually do complex regexps when searching tho :P
16:15 * Typh does
16:15  telemachus: Ah, I do
16:15  telemachus: at least medium-complex
16:16  Kuukunen: only when substituting
16:16  telemachus: and either way, if I use a regex at all, I would prefer not to need to remember a second kind of them
16:16  Kuukunen: owell, that might help typh a bit then
16:16  Kuukunen: telemachus: yea, but that's the problem... there's vim regexps, grep regexps, perl regexps....
16:16  Kuukunen: annoying
16:16  Typh: vim's has thus far been the most bizarre I've seen
16:16  telemachus: Kuukunen: Agreed, so I try to minimize where I can
16:17 * telemachus shrugs
16:17  Kuukunen: telemachus: but vim's with \v set is somewhat close to the idea of perl's
16:17  telemachus: adding that \v automatically to searches has made my life much simpler
16:17  Kuukunen: telemachus: yea, but then you have to know two kinds of regexps if you don't write \v for every :s
16:18  telemachus: I do write \v for every :s
16:18  Kuukunen: Typh: I personally consider the weirdness in regexps a stupid legacy feature :P
16:18  telemachus: :)
16:18  Kuukunen: (and the fact you can't set \v the default without breaking stuff)
16:18  telemachus: and Perl is where I learned most of what I know about regexes, so \v works for me
16:18  Kuukunen: telemachus: oh, I had an idea ... you could map something into :%s/\v
16:19  Kuukunen: (only works on the global scope, but meh)
16:19  Kuukunen: in fact, I think I'll go map ,s into that right now \o/
16:21  Kuukunen: and vmap ,s into :s/\v and it works
16:22  telemachus: cool
16:24  Kuukunen: Typh: btw, in case you were wondering why vim regexps are so weird, I think it's because of historical reasons
16:24  Typh: It's always been a confusing aspect.
16:25  Kuukunen: afaik, ed was one of the first software to support regular expressions, so there was no real standard
16:25  Kuukunen: and ed inspired ex, which inspired vi, which became vim
16:28  telemachus: Right, vim's regexes come from vi and those come before Perl (which then became a semi-standard for other implementations).
16:29  telemachus: So historically Perl is weird, not Vim. Though to most people now I guess it feels the other way around.
16:30  Kuukunen: yea
16:31  Kuukunen: telemachus: altho, I'd say more that Perl brought some order into it :P
16:31  telemachus: Kuukunen: Fair enough (and serious power).
16:31  telemachus: I don't disagree, but I know that many long-time Vim people resent the "why aren't Vim regexes _normal_?" questions...
16:32  Kuukunen: telemachus: there's a reason for that :P
16:32  telemachus: the question or the resentment or both?
16:32  telemachus: ;)
16:32  Kuukunen: I think other projects have started using perl regexps because they make more sense
16:32  Kuukunen: and as I said, silly legacy :/
16:33  bryanl:  tpope: ping
17:07  thebishop: hello hello
17:08  thebishop: I'm trying to set up Ctags/Cscope, but i'd like to store the tag files in my home directory rather than in source directories
17:08  thebishop: is there an easy way to do this?
17:09  mgedmin: yes
17:09  mgedmin: :h 'tags'
17:09  mgedmin: dunno about cscope, I don't use it myself
17:30  malesca: So someone told me the other day how %:h gets me the dir of the current file, and that :h is one filter among many. What :help page will tell me more? Can't find it.
17:30  malesca: oh duh, :help %:h actually worked…
17:31  mgedmin: :)
17:32 --- gkatsev_ is now known as gkatsev
17:44  dob1: hi, i have a very long line, if it is possible i want to see it as multiple line of a determinated lenght
17:44  Silex: :set wrap ?
17:45  Silex: there's also something about the maximum textwidth or smth
17:46  dob1: wrap can be useful but is not ok in my case, or better, i have to resize gvim
17:47  gkatsev: ah you want a softwrap at char X?
17:47  dob1: gkatsev: yes
17:48  dob1: like i was splitting the line every n char
17:51  gkatsev: dob1: I found linebreak which does softwrap
17:51  gkatsev: but I can't find a way to make it force a char limit like textwidth or wrapmargin
17:52  dob1: gkatsev: well thanks anyway, if it is not possible i just use wrap
17:52  afuentes: is ctrl + 6 suppose to switch opened between buffers? because i press it and it doesnt work , dunno why :S
17:54  Silex: afuentes: maybe you want :bn instead?
17:54  WakiMiko: ^6 switches to the alternate file
17:54  mgedmin: you appear to have no alternate buffer in this window
17:55  gkatsev: afuentes: yes, it should switch between current and previous buffer
17:55  afuentes: well, :bp works but ^6 doesnt
17:55  WakiMiko: ^6 switches to the alternate file no to the last buffer
17:55  homekevin: afuentes: Does # show up in :ls
17:55  homekevin: ?
17:55  gkatsev: dob1: try this: http://stackoverflow.com/questions/989093/soft-wrap-at-80-characters-in-vim-in-window-of-arbitrary-width
17:56  homekevin: afuentes: In the :ls output the current buffer should be marked with % and the alternate with #.
17:57  afuentes: maybe homekevin no, it didnt, but it works now, didndt know i had to swtich between buffers before
17:57  gkatsev: dob1: what you want is this: i}
17:57  afuentes: thanks
17:57  afuentes: :D
17:57  gkatsev: oops
17:57  gkatsev: dob1: what you want is this: :set wrap linebreak textwidth=0 columns=80
17:57  homekevin: afuentes: so you were getting E23: No alternate file?
17:58  afuentes: yep
17:58  afuentes: guess so
17:58  homekevin: afuentes: You can always use :h E<error num> to get more infe
17:58  homekevin: *info
17:58  afuentes: didnt know what alternate were
17:58  gkatsev: dob1: where 80 is the number of columns you want to wrap at
17:58  afuentes: hey thanks! that will be handy for sure
17:59  homekevin: Granted, some of the error descriptions are minimally helpful...
17:59  afuentes: e23 for example xD
18:00  homekevin: afuentes: It includes a link to alternate-file though.
18:00  dob1: gkatsev: well it's perfect, thanks a lot
18:00  gkatsev: dob1: np
18:01  afuentes: yup, i see it now, thanks homekevin  :D
18:08  xilo: how do i speed up tag lookup? using boost and tab completion makes it ungodly slow
18:09  mgedmin: ouch
18:09  Silex: xilo: you don't
18:09  Silex: you use something like clang_complete
18:09  Silex: or gccsense
18:10  Silex: if you go for clang_complete make sure you use the github version
18:15  xilo: hmm one other question... how to get supertab and snipmate to play nice together?
18:15  Silex: xilo: read snipmate's documentation
18:15  Silex: it's mentionned in it
18:15  Silex: maybe you need the latest github version
18:16  xilo: i'm using github version
18:16  xilo: right now i have to do like tab enter tab enter tab for snipmate to insert
18:17  xilo: instead of just tab complete
18:21  Silex: xilo: I'm pretty sure there's a section about supertab in snipmate's doc
18:25  xilo: i just looked
18:25  xilo: wasn't anything
18:28  Silex: "This release also fixes a number of bugs, including: support for supertab"
18:28  Silex: since version 0.74
18:28  Silex: nothing in the help tho, lemme find where I remember this then
18:30  Silex: xilo: apparently it's buggy about it: http://code.google.com/p/snipmate/issues/detail?id=63&q=supertab&colspec=ID%20Type%20Status%20Priority%20OS%20Summary
18:31  Silex: xilo: check if any of the http://code.google.com/p/snipmate/issues/list?can=2&q=supertab&colspec=ID+Type+Status+Priority+OS+Summary&cells=tiles has an answer
18:31  xilo: k thanks
18:31  xilo: http://code.google.com/p/snipmate/issues/detail?id=108&q=supertab&colspec=ID%20Type%20Status%20Priority%20OS%20Summary
18:32  xilo: that's the problem i'm having :/
18:32  xilo: except with neocomplcache instead of autocomplpop
18:40 --- ipkiss_ is now known as ipkiss
18:41  xilo: Silex: looks like github version of neocomplcache fixed it :)
18:41  xilo: erg
18:41  xilo: still broke lame
18:48  sako: hey guys, what would cause everything in <a href></a> to be underlined in vim?
18:48  sako: is that in the colorscheme?
18:49  graywh: it's in the html syntax
18:49  sako: ah thanks
18:49  sako: whats the best way to customize that?
18:50  graywh: htmlLink is linked to Underlined
18:51  graywh: you could define highlighting for htmlLink
18:51  graywh: or link it to something else
18:54 --- Maletor_ is now known as Maletor
18:54  consumerism: when i want to fold a function in a php file, i go to the line with the function name and opening bracket and hit $V%zf     ... is there a better way, or can vim do this automatically when i'm inside a given function?
19:00  mgedmin: zfa{ maybe? dunno, I don't use manual folding
19:00  mgedmin: doesn't php syntax define folds?
19:01  mgedmin: next I'd be inclined to try fdm=indent
19:01  Silex: I don't use folding at all
19:01  Silex: :>
19:14  hearit: Hello
19:14  hearit: how to enter to the 30min vim tutorial?
19:14  hearit: mentioned in :help Q_ct
19:14  Silex: vimtutor?
19:15  hearit: |tutor|         30 minutes training course for beginners
19:15  hearit: or to the |quickref|
19:16  mgedmin: :help, line 10: "Jump to a subject:  Position the cursor on a tag (e.g. |bars|) and hit CTRL-]"
19:16  hearit: control - jay?
19:16  mgedmin: control-right-square-bracket
19:17  Silex: mgedmin: do you know why in some terminals that doens't work (^]) ?
19:17  mgedmin: no -- what terminals?
19:17  Silex: btw, to make the ] key I have to press alt
19:17  Silex: I found K to be a good alternative to ^] :)
19:17  mgedmin: Alt might be interfering
19:18  hearit: to push right sqr bracket i need to down Alt gr too
19:18  hearit: ]]
19:18  mgedmin: AltGr should not be interfering
19:18  hearit: I will change my keyboard layout to english so
19:18  mgedmin: hm
19:18  mgedmin: if you run 'cat' in a terminal and press ^], what do you see?
19:18  hearit: setxkbmap en
19:18  Araxia: general efficiency question: say you've got text "firs|t| last" (where |x| is the cursor location in normal mode). you've got "middle" in the unnamed register. what is the most efficient way to wind up with "first middle last"? i'm currently doing "lpa <Esc>".
19:18  mgedmin: (where ^] is ctrl-right-square-bracket, and not a pair of ascii characters)
19:19  mgedmin: Araxia, that's what I would do too
19:19  hearit: Error loading new keyboard description
19:19  hearit: :(
19:20  Silex: mgedmin: damnit, all the terminals here work. I think it was on OSX, I'll ask again later when I'm on OSX
19:20  hearit: now yes
19:21 * mgedmin has nnoremap <buffer><cr> <c-]> in ~/.vim/ftplugin/help.vim
19:21  Silex: mgedmin: so taht only works for help? brillant
19:22  mgedmin: but hm, I'm overriding the default help plugin this way, amn't I?
19:22  mgedmin: maybe not
19:22  Silex: wha?
19:25  hearit: well I live in Argentina but im practice to use english keyboard layout maybe i will be more conmfortable programming
19:25  Silex: Araxia: la^r"<Esc> maybe
19:25  hearit: ;;;;
19:25  hearit: ::
19:34  Silex: is there an opposite of J ?
19:34  elik: Silex: i<cr>
19:34  elik: <esc>
19:34  Silex: ok :)
19:34  kevincolyar: anyone using vim in tmux?
19:36  gkatsev: kevincolyar: not me, but i heard there were problems with it passing keys to vim, if that is the problem you were having
19:36  kevincolyar: gkatsev: nah, no problems like that yet
19:37  kevincolyar: gkatsev: trouble yanking from vim in one split and pasting into a another split
19:37  gkatsev: vim yanking only works in that vim sessions
19:38  gkatsev: you can try yanking to + or * terminals and then pasting from those terminal
19:38  gkatsev: or you can use a copying capabilites of tmux, if those exist
19:38  gkatsev: kevincolyar: ^
19:39 * mgedmin mutters "registers, they're called registers"
19:39  kevincolyar: i had setup my .vimrc to use pbcopy but i guess it doesnt work with tmux
19:39  gkatsev: mgedmin: er, yes, sorry.
19:40  gkatsev: s/terminal/register/g
19:40  kevincolyar: i'll take a look at that, thanks
19:41  gkatsev: + is the clipboard register and * is the middle click register
19:41  gkatsev: usually
19:47  kevincolyar: so it looks like yanking was still copying to the system clipboard as intended
19:47  kevincolyar: i just need to paste into tmux from the system clipboard, instead of the tmux clipboard
19:48  kevincolyar: i'll visit the tmux room, thanks for the help guys
--- Log closed Fri Dec 03 20:13:33 2010
--- Log opened Fri Dec 03 20:13:45 2010
20:13 --- Users 605 nicks [0 ops, 0 halfops, 0 voices, 605 normal]
20:15 --- Channel #vim was synced in 118 seconds
20:20  rson: can vim not open files over https?  http seems to work fine, but https doesn't return anything in the buffer..
20:22  lover: rson: I have never tried, however I believe vim can do that. have you checked if you have support for ssl built in or something?
20:40  __ls: is there an optio for auto completing (, [, {, ", ' and such?
20:41  gtklocker: Hi, how can I run vim as a server?
20:41  gtklocker: like emacs -daemon is
20:43  Scala: gtklocker: I don't think you can
20:43  Scala: What would be the reason for doing that?
20:43  gkatsev: there is something like that
20:44  gkatsev: it allows you to only use one vim instance
20:44  gkatsev: but it isn't really a server
20:44  gtklocker: having my vimrc in ~/.config/
20:44  gtklocker: my viminfo in ~/.cache/
20:44  eueu: gtklocker, see :help remote.txt
20:45  gtklocker: :help remote.txt
20:45  gtklocker: LUL
20:45  gtklocker: that was stupid
20:46  gtklocker: hi Sirupsen (uh, someone I know at least :P)
20:47  drubies: very basic question: how does vim represent double quotes? trying to search on them but \" and " don't return anything
20:48  Scala: drubies: What do you mean by represent?
20:48  drubies: uh nm - i guess i copied text from fireworks and it made for some weird characters
21:05  eueu: drubies, to search for a double quote, the pattern is "
21:14  drubies: eueu: ya thanks - when I copied them from fireworks they were oddly curved.. I deleted them and actually typed the " character, which displayed as the normal straight vertical tick marks and my function worked normally
21:16 --- y3llow_ is now known as y3llow
21:16 --- cuba33ci_ is now known as cuba33ci
21:16  singlecore: hi all
21:40  homekevin: I wish that XChat could show "quit" messages for people that have actually said something, and hide join and quite messages otherwise.
21:41  d3mn0id: how can i add a ";" to then end of a word.
21:41  homekevin: There's too much noise on a channel like this with join and quit enabled, and with them disabled I don't know when I'm talking to myself because the person left.
21:42  homekevin: d3mn0id: ea;<esc>
21:42  spiiph: homekevin, use nick completion? :)
21:42  homekevin: Yeah, that's what I end up doing.
21:43  homekevin: With how much I complain about XChat maybe I should learn to write plugins and just fix the things that annoy me.
21:43  gkatsev: homekevin: that would be kind of useful actually
21:43  homekevin: But I'm too busy doing that with Vim.
21:43  d3mn0id: i don't even know how to disable that in xchat, homekevin.
21:43  gkatsev: homekevin: switch to irssi and write a plugin :)
21:43  spiiph: Maybe you should use a good irc client instead. ;)
21:43  gkatsev: spiiph: does irssi allow you to do that?
21:43  gkatsev: would be awesome
21:43 * gkatsev checks irssi.org/scripts
21:43  spiiph: nick completion? sure
21:44  spiiph: Uh, it's just a setting
21:44  gkatsev: spiiph: no, only show quit for users who talked
21:44  Scala: I can vouch for irssi being great
21:44  Scala: it does nick completion out of the box
21:44  gkatsev: I know it has nick completion
21:44  spiiph: Oh, I don't know.
21:44  gkatsev: I am using irssi right now
21:44  gkatsev: on a server
21:44  gkatsev: inside of screen
21:44  mavvert: weechat already has something like that :)
21:44  spiiph: Right, sorry, I missed the actual question :)
21:44  homekevin: d3mn0id: If you mean join/quit messages in XChat, it's well-hidden. You have to right-click on the channel tab to find the option.
21:45  d3mn0id: meh. maybe u should also improve the ui?
21:45  d3mn0id: thanks.
21:45  homekevin: IMO, nothing should ever exist solely in a context menu.
21:45  d3mn0id: there should be a global setting
21:46  d3mn0id: as well as a per-channel setting like now.
21:46  d3mn0id: or even better:
21:46  d3mn0id: a list of channels to hide join/part messages on
21:47  d3mn0id: like in Window->Ignore list...
21:53  d3mn0id: homekevin, ea;<esc> works nicely, but does it have to enter input mode?
21:53  elik: homekevin: if you complain that much about xchat, you should also spend more time in #xchat
21:53  homekevin: d3mn0id: You want to insert without insert mode?
21:54  d3mn0id: yeah, like r does...
21:54  homekevin: I've sometimes thought that there should be a way to insert one char without going into insert mode. As far as I know this isn't (directly) supported.
21:54 --- forneus_ is now known as forneus
21:54  homekevin: ...right, it would be akin to r.
21:55  d3mn0id: dang. time to google for a plugin. but i doubt one exists.
21:55  homekevin: There's always putting ; in a register and using p
21:55  homekevin: You could also use a macro.
21:55  elik: homekevin: why would you insert single characters so often?
21:55  elik: there is always easyvim, thee hee
21:56  homekevin: elik: I like to have a very granular undo history.
21:56  homekevin: No, not really.
21:56  Silex: what is easyvim?
21:56  Silex: google isn't friendly
21:56  elik: homekevin: are you that guy that wanted to do a git commit on every keystroke
21:57  inkdot: o_O
21:57  elik: Silex: evim
21:57  homekevin: I don't do it terribly often, but when I do there's a sort of hiccup in my brain as I hunt for the 'r' equivalent and don't find it.
21:57  d3mn0id: homekevin, yeah. there should be some way to do this more intelligently because what i'm doing is apending ";" to the first word on each line.
21:57  singlecore: ey whats the deal with git dudes
21:57  Silex: elik: rofl
21:58  homekevin: d3mn0id: You need visual-block mode
21:58  elik: d3mn0id: you need regexps for that
21:58  homekevin: Or that.
21:58  elik: homekevin: they are most likely not aligned
21:58  homekevin: elik: No need for them to be.
21:58  d3mn0id: there's a regexp construct for the first word on a line?
21:58  elik: homekevin: visual block?? yeah
21:58  elik: d3mn0id: yeah...
21:58  Silex: singlecore: http://en.wikipedia.org/wiki/Revision_control
21:59  graywh: d3mn0id, ^\w*\zs
21:59  elik: d3mn0id: :h /^
21:59  singlecore: Silex, yea so much i know
21:59  homekevin: elik: Nope, you can append to a range of lines just fine with visual-block mode.
21:59  graywh: actually, you could do without the ^
21:59  singlecore: originially i wanted to continue my question
21:59  singlecore: like is it better than svn
21:59  homekevin: elik: :h v_b_A
21:59  graywh: homekevin, which is not the same thing
21:59  elik: homekevin: but you cannot append to the end of first words of lines
22:00  singlecore: but then i thought like "fuck it"
22:00  elik: homekevin: don't worry, I know that topic
22:00  homekevin: Oh, I misread the problem.
22:00  homekevin: Sorry.
22:00  homekevin: Regex it is!!
22:00  singlecore: homekevin, walt and me had a long discussion about the dangers of knowing too much
22:00  elik: d3mn0id: I was asking why inserting single characters so often, because it most likely always point to bad usage of vim
22:00  singlecore: yesterday
22:01  homekevin: I think sometimes knowing the answer to a question makes you more likely to see that question where it doesn't exist.
22:01  d3mn0id: yeah, i don't know a whole lot about vim, elik.
22:01  Silex: singlecore: it's arguable, but many many many people think decentralized versioning systems are better
22:02  elik: d3mn0id: it's cool, you're here to learn :)
22:02  singlecore: so git is decentralized?
22:02  Silex: singlecore: and in the decentralized versioning systems (hg, mercurial, git), some argue that git is better
22:02  homekevin: It's sort of like, "When the only tool you have is a hammer, every problem begins to look like a nail."
22:02  elik: d3mn0id: also, regexp are very useful outside of vim
22:02  Silex: singlecore: my vision on this is that yes, decentralized is better and git is not better than hg or mercurial but probably more used and there's github etc
22:03  Silex: s/not better/not significantly better/
22:03  elik: singlecore: distributed
22:03  Silex: same thing
22:03  elik: singlecore: DVCS
22:03  singlecore: how do they manage coherence when dudes go offline with their shit?
22:03  graywh: singlecore, it's surprisingly easy
22:04  Silex: singlecore: basically in svn, commit means commit + push in git
22:04  singlecore: whats push? never used that...
22:04  homekevin: Silex: Just to be clear, hg IS mercurial.
22:04  singlecore: wait, i can google that
22:05  Silex: singlecore, when you commit in svn it adds a message on your changes then sends those changes+text to the remote server right?
22:05  Silex: homekevin: oh, thanks!
22:05  singlecore: yea
22:05  homekevin: singlecore: You can't really "get" DVCS from one quick google, but it's well worth the effort to learn about it.
22:05  Silex: singlecore: in git when you commit it adds a messages to your change locally, and when you push it sends this to whatever you configured it to be your remote server
22:05  elik: Silex: periodic table of elements ;)
22:05  Typh: I'd use mercurial, but github's way nicer than bitbucket
22:05  graywh: hydrargyrum
22:06  singlecore: i c
22:06  homekevin: singlecore: And, yes, almost anything that's not CVS, RCS, or SourceSafe is significantly better than svn.
22:06  Silex: singlecore: basically with git you can do as svn does but you can also commit to your repo without having an internet connection
22:06  singlecore: so if i work in a project with 5 other developers, i have to configure them as my remote servers right
22:06  homekevin: No
22:06  Silex: singlecore: git is also much simpler to put in place
22:07  homekevin: singlecore: Really, this is a big topic and we shouldn't really go into it on #vim
22:07  Silex: yeah, just ask in #git if you're interested about knowing more
22:07  singlecore: homekevin, youre right
22:07  homekevin: But I highly recommend learning git, or at least Mercurial.
22:07  singlecore: Silex, probably the better jump in would be reading a littel bout it first
22:08  d3mn0id: git and hg are the best.
22:08  singlecore: ill give it a shot when i have time
22:08  singlecore: push("git",brainStack);
22:08  d3mn0id: i don't know why people use svn as a "goto" vcs anymore.
22:09  Typh: around my office, I assume because they hate me.
22:09  d3mn0id: lol
22:09  Silex: d3mn0id: same reason they went to cvs when svn existed
22:09  d3mn0id: meh, ignorance ftl
22:09  elik: singlecore: the function returned with error status overflow :)
22:11  singlecore: elik, ^^
22:11  elik: singlecore: you should always monitor return status :)
22:12  singlecore: i know, my master told me to
22:12  d3mn0id: regexp sucks
22:12  spiiph: ...
22:12  d3mn0id: ^\w*
22:13  d3mn0id: it doesn't recognise "strange" characters.
22:13  homekevin: d3mn0id: It's not supposed to.
22:13  d3mn0id: so for a Portuguese word like "abraçar"
22:13  d3mn0id: it only matches
22:13  d3mn0id: "abra"
22:13  d3mn0id: meh.
22:13  homekevin: Oh, that's a bit bigger an issue than I expected.
22:14  homekevin: There's almost certainly a way around it, though.
22:14  d3mn0id: life is forcing me to finally learn regexp. :'(
22:14  Silex: maybe \S ?
22:15  Silex: (not space)
22:15  elik: d3mn0id: regexps never suck. YOU suck... they are a tool, you do not use it well
22:15  homekevin: Maybe [[:alpha:]]?
22:15  homekevin: elik: No, regex kind of sucks.
22:15  d3mn0id: [[:alpha:]]?
22:15  elik: well, in the i18n sense of the world suck.. maybe
22:15  homekevin: It gets the job done, but not without some pain.
22:16  d3mn0id: wouldn't that only match 'a'..'z'?
22:16  elik: d3mn0id: :h /character-classes
22:16  homekevin: d3m: I'm not sure what it matches. I'm thinking it might depend on the locale.
22:17  elik: d3mn0id: :h [:alnum:]
22:17  elik: d3mn0id: and you'll get plenty other character classes
22:18  elik: and as Silex pointed out, the is a way to work around that
22:18  malesca:    also says:
22:18  malesca: cat\Z     Both "cat" and "càt" ("a" followed by 0x0300) Does not match "càt" (character 0x00e0), even though it may look the same.
22:18  malesca: so that should work if the characters are decomposed
22:20  homekevin: That's kind of weird.
22:20  graywh: but that c with a cedilla isn't composed
22:21  d3mn0id: what would [:graph:] match?
22:21  homekevin: d3mn0id: I *think* you should check man isgraph for that
22:21  d3mn0id: i don't get the explanation.
22:22  homekevin: It looks like it's all printable characters that actually have a glyph (so not spaces)
22:22  Silex: "The isgraph() function tests for any printing character except the space character, that is, any character for which isalnum() or ispunct() is true."
22:22  homekevin: Not space, and not control characters.
22:22  elik: d3mn0id: have you tried what Silex suggested
22:22  d3mn0id: how would i integrate that into /^\w*/ ?
22:22  graywh: how is that any different from \S
22:23  homekevin: Yeah, if there's reliably space after the word, that's much easier than trying to describe exactly what is a word.
22:23  elik: d3mn0id: if you only have a few of those "weird" characters, you can also create a list with them, such as [[:alpha]ç]
22:23  Silex: graywh: seem you miss what the discussion is about
22:23  graywh: Silex, no
22:24  Silex: graywh: sorry then, why would \S* be the same as \w ?
22:24  d3mn0id: elik, it's Portuguese. i have é á ç ê etc.
22:24  Silex: err, \w*
22:24  elik: d3mn0id: so describing what is not a word might be easier
22:24  Silex: \S only checks for "not a space", \w checks for "is a,b,c,d..z"
22:24  elik: d3mn0id: that way you match everything until it's not a word
22:25  d3mn0id: ok. i got the matching working
22:25  graywh: Silex, referring to [[:graph:]]
22:25  d3mn0id: but when i try to add to it by replacing
22:25  Silex: graywh: ah, yes that'd be like \w. My bad
22:25  d3mn0id: it replaces the whole thing with ";"
22:25  graywh: d3mn0id, use & in the replacement
22:25  d3mn0id: :%s/^\S*/^\w*;/
22:26  homekevin: Silex: Wait, [[:graph:]] is like \w? I don't think that's right.
22:26  graywh: s/^\S*/&;/
22:26  graywh: or s/^\S*\zs/;/
22:26  d3mn0id: awesome, thanks.
22:26  d3mn0id: now i'll get a bookon regex.
22:26  d3mn0id: to educate myself.
22:26  Silex: homekevin: maybe not exactly [[:graph]], but one of those classes has to be like \w
22:26  graywh: well, \S matches control characters
22:26  graywh: Silex, [:alnum:]
22:27  elik: d3mn0id: it's probably a good time to learn about :h /\( too
22:27  homekevin: d3mn0id: Vim's regexes are unique, I think. It's good to know the general way they work, but the specifics are all in :h
22:27  Silex: graywh:  that one, yeah
22:27  d3mn0id: elik, i know almost nothing about regex so :h doesn't help me much.
22:27  homekevin: graywh, Silex, I think that still differs in _
22:27  graywh: Silex, but the problem is matching accented characters and the like
22:27  d3mn0id: because it don't have a proper mental picture to fit the information into.
22:28  elik: d3mn0id: :h regexp, it will take you from knowing nothing about regexp to knowing everything :)
22:29  elik: d3mn0id: alternatively, I learned by reading on perl
22:38  d3mn0id: "entrega nf delivery     escrever v to write"
22:39  d3mn0id: how could i insert a newline in the middle of those two without ruining the parts of the file that i already change?
22:43  d3mn0id: this is difficult :|
22:44  d3m: \quit
22:44  d3mn0id: haha
22:44  Silex: d3mn0id: i<CR><Esc> ?
22:44  Silex: your question doens't make much sense
22:45  d3mn0id: yeah, disregard it.
22:48  d3mn0id: i'll rephrase. i want to replace "     " a row of spaces with a newline character.
22:48  d3mn0id: like above.
22:48  d3mn0id: <d3mn0id> "entrega nf delivery     escrever v to write"
22:49  peth: s/  \+/\r/
22:49  veg^: how to delete part of text without lost content in main register? it's hard to copy text in other register then paste from it. like 1) y some text 2) then d some text 3) p p p from 1). I just want that d command will not paste text in main buffer
22:50  Silex: what peth said. \s\{5\} for a fixed num of chars
22:50  Silex: veg^: d into another register? e.g "ad
22:50  Silex: then "ap to paste what was cut
22:51  Silex: of course the d command is incomplete in taht example, execpt if you visuall selected some text before
22:51  veg^: Silex: ok, it may be a solution
22:52  Silex: it's not hard to yank in say register b if you really need to keep track of something
22:52  Silex: e.g "byy
22:55  homekevin: b? Come on, g is the best register. Everyone knows that.
22:58  DHulme: veg^: or d into the "black hole" register, _
22:58  peth: veg^: "" holds the last yank *or* delete. if you want your last yank, "0 will always keep it warm for you no matter if you deleted anything in between.
22:58  Silex: homekevin: the g spot?
22:59  Silex: peth: I don't understand how "1, "2 etc are populated
22:59  homekevin: Pshaw, that's a myth.
22:59  Silex: I mean, doing several d seems to only fill "0/""
22:59  homekevin: G-spots and unicorns.
22:59  Silex: same for yanks
22:59  peth: a d should never touch "0
22:59  Silex: ok maybe
22:59  singlecore: i dont think the g-spot is a yth
23:00  singlecore: myth
23:00  Silex: I recall reading the yankring plugin that argued for cuts it was already implemented
23:00  Silex: and when I tried it wasn't. Oh well time to read about :h :reg
23:01  peth: it is. the numbered registers are a little complicated, but very handy from time to time. see :help redo-register
23:02  homekevin: Yeah, I can never remember all the registers.
23:03  peth: (cont'd) ... and the paragraph above for one nifty example.
23:03  homekevin: But "1 etc. are only used for whole-line deletes, aren't they?
23:04  d3mn0id: 3 simple commands and i did what i wanted :)
23:04  Silex: ok so 0 is for yanks, 1..9 is a ring for deletes/changes
23:04  d3mn0id: wicked.
23:04  Silex: d3mn0id: yeah, vim is crazy like that
23:04  homekevin: Silex: But don't forget "-, the "small delete" register
23:05  peth: homekevin: i think so, but i haven't force-tested it. i'm still midly confused by the smalldelete register :)
23:05  Silex: me too
23:05  d3mn0id: Silex, yeah. i'm definitely a fan now.
23:06  Silex: d3mn0id: watch this http://vimeo.com/15443936
23:06  Silex: it all clicked for me after I've seen this
23:06  homekevin: The biggest problem I tend to have with registers is deleting something with the intent of pasting it somewhere else, but then deleting something else first, so I end up pasting the wrong thing.
23:06 * d3mn0id pauses amarok
23:06  Silex: d3mn0id: also in general, watching http://www.derekwyatt.org/vim/vim-tutorial-videos/ helps a lot
23:06 * d3mn0id opens up chromium
23:06  bosie: is there a way to make marks portable?
23:06  peth: i mapped \p to "0p, \P to "0P, \d to "_d etc
23:07  Silex: homekevin: I always have that problem too
23:07  Silex: :)
23:08  homekevin: It should only be a *real* problem with the small-delete register, because whole-line deletes should just rotate in the numbered registers if I'm understanding correctly.
23:08  bosie: by portable i mean transporting it to other computers
23:08  bosie: like make it presistent via ~/.vim/
23:09  walt: how co I copy from vim so that I can paste into a terminal?
23:09  gkatsev: "+y
23:09  bosie: walt: if you are using macvim, there is an option
23:09  gkatsev: go+=a i believe auto copies to + register or something like that
23:09  homekevin: bosie: You'd need to transport your .vimrc for that to work
23:10  homekevin: Er, .viminfo, sorry
23:10  d3mn0id: Silex, is there a script to download vids from vimeo?
23:10  Silex: d3mn0id: no clue
23:10  bosie: homekevin: not a problem really
23:11  bosie: homekevin: i am already doing it
23:11  walt: gkatsev: hm, well, neither the + or the * register seem to be the "middle click" buffer
23:11  homekevin: walt: * should be I think, but it also depends on the cooperation of the target app.
23:12  homekevin: Some apps totally mess up X selections
23:12  d3mn0id: Silex, you see, i live in a country where we pay for our bandwidth and as such
23:12  d3mn0id: we like to download things
23:12  Silex: d3mn0id: understandable
23:12  d3mn0id: because then we feel like it was worth it.
23:12  homekevin: d3mn0id: That makes you a pirate!
23:12  homekevin: Downloading is evil!
23:13  d3mn0id: homekevin, i definitely wish i was european to vote for the pirate party.
23:13  bosie: homekevin: any more info ?
23:14  peth: d3mn0id: i'm just testing http://ossguy.com/?p=841
23:14  homekevin: bosie: the plastic things on the end of shoelaces are called aglets.
23:15  bosie: homekevin: cool, i didn't know that
23:15  homekevin: bosie: There true purpose is sinister.
23:15  bosie: homekevin: mommy got you one of those 'learn one thing a day' xmas calendar? ;)
23:15  homekevin: *Their
23:16  d3mn0id: peth, thanks.
23:16  homekevin: bosie: Sorry, I just don't know what kind of information you were asking about.
23:16  walt: homekevin, gkatsev. It did work with "* it was just me not seeing it because I copied a line, and the newline made it scroll
23:17  walt: so I thought nothing happened
23:17  walt: thanks
23:17  bosie: homekevin: well, by default marks don't seem to be persistent or?
23:17  bosie: homekevin: they don't show up in my viminfo at least
23:17  homekevin: bosie: Oh, do you mean they don't exist if you close and re-open Vim?
23:17  d3mn0id: yay! just successfully imported my wicked vim-made CSV file into anki.
23:17  walt: hmm
23:17  bosie: homekevin: ye
23:17  homekevin: bosie: That may be the 'viminfo' setting.
23:17  walt: I have seen marks in the viminfo file=
23:17  walt: I think
23:17  d3mn0id: this is great. :)
23:18  bosie: homekevin: hm, there is a mark that is persistent even if you close/reopen vim, that jumps to the last position of the file. do you happen to know where it is stored?
23:18  peth: d3mn0id: you know of cclive for most of the rest, right?
23:19  d3mn0id: peth, cclive?
23:19  homekevin: bosie: I'm not sure I understand.
23:19  Silex: ah, yankring is convenient!
23:19  peth: d3mn0id: http://code.google.com/p/cclive/
23:19  walt: I neve got the point of yankring
23:19  homekevin: bosie: I think there's a setting to automatically restore the last cursor position. I assume it uses .viminfo.
23:19  bosie: homekevin: nevermind, i will bing or google the shit out of me ;)
23:20  bosie: homekevin: thing is, viminfo doesn't get written to, so i am wondering where it does get stored
23:20  Silex: walt: you cut something that you plan on paste later on, you notice something else that needs to be cut, you cut it and you want ot paste and shit, it's not what I wanted to paste
23:20  bosie: Silex: why not use register?
23:21  walt: Silex: latest yank is always in "0
23:21  homekevin: bosie: I think it would be quite strange if Vim stored persistent info somewhere *other* than .viminfo.
23:21  walt: I guess that's enough for me
23:21  Silex: walt: yeah I guess I could yank then cut
23:21  Silex: and only paste yanks
23:21  peth: bosie: it is definitely .viminfo
23:21  bosie: homekevin: yea, that's what i am thinking too. but i don't have your expertise ;)
23:21  bosie: peth:  my viminfo is basically empty
23:22  peth: we had problems with it not working because of .viminfo not being writable
23:22  walt: ahh Silex, I just realised. In those situations I always delete into register q
23:22  bosie: peth: that's what i thought, so i set it to 777
23:22  peth: maybe it's using another viminfo, which is why yours is basically empty? :p
23:22  walt: since it is close to "
23:23  bosie: peth: true. ~/.vim-local/.viminfo is being written to
23:23  bosie: peth: smartsy pants ;)
23:23  Silex: walt: yeah named registers are fine, but when I'm in quick mode it's like ok I'll cut this and pas... wait let's cut this too ARGH shit I have to paste first otherwise I lose my cut *grmrlml* I now need to move to paste site and go back just to cut again
23:23  peth: :D it was really just a guess
23:24  Silex: walt: the alternative is "shit I have to undo then cut again in register q"
23:24  bosie: peth: though it only seems to store 'A, '0-'9
23:24  walt: Silex: yeah, I guess. I think I am not very efficient in that situation, so I guess I should use yankring. I just undo a few times, yank, redo, paste
23:24  Silex: walt: the other alternative is yank first then cut then use "0, and the last alternative is yankring :)
23:24  bosie: but thanks, will see if i can find some plugin getting the job done
23:24  walt: Silex: it's just in my workflow
23:24  bosie: maybe with a few mappings, to make homekevin even more sick of my setup ;)
23:25  Silex: walt: mine too, tbh I insalled yankrings 4 minutes ago
23:25  Silex: maybe I'll remove it if it serves me nothing
23:25  walt: I see :)
23:25  walt: Silex: the reason I think it's ok is because it's usually just a few undo, then :later 100
23:25  walt: which takes no time
23:25  Silex: but for now basically you just cut as much as you want, you paste (the wrong thing), and you ctrl-n/ctrl-p your way into the correct yank/cut
23:26  Silex: pretty easy
23:26  Silex: gotta go!
23:26  Silex: bye
23:26  peth: bosie: the mark in question is '" . see :help restore-cursor
23:27 --- Silex is now known as silex
23:27  bosie: peth: well, my initial question was how to make all file marks persistent, so i can transport them over to other computers
23:28  peth: bosie: oh. missed that. :help 'viminfo' has something about how many marks are kept
23:28  bosie: wth is the diff. between marks and file marks
23:28  homekevin: bosie: Why is your .viminfo in a weird place, anyway? Did you change 'viminfo'?
23:29  bosie: homekevin: No
23:29  homekevin: bosie: I think you might be referring to marks that jump to a specific location in a specific file Vs. marks that apply only to the current file.
23:30  bosie: homekevin: i am not refering to it, :h viminfo distinguishes it though
23:30  homekevin: So a-z can be defined for all files, but A-Z can only exist once.
23:30  homekevin: IIRC
23:31  homekevin: bosie: see :h 'a for clarificatien
23:31  bosie: homekevin: true, and `A opens a window with the buffer
23:31  bosie: homekevin: and i would love to have all of them persistent ;)
23:33  peth: bosie: well, don't use f in 'viminfo' then, and a very high '
23:34  homekevin: peth: Why not use f?
23:34  lamdk: arg i forgot,  is there a vimscript function that finds the position of a  matching paren?   like the % key?
23:34  peth: homekevin: "when not present or when non-zero, they are all stored."
23:35  galaxywatcher: Is there a way to edit a gzipped file in vim, or do I need to unzip, edit, zip?
23:35  homekevin: Ooooh.
23:35  homekevin: Huh.
23:35  homekevin: galaxywatcher: Did you try just opening it?
23:35  homekevin: That always works for me.
23:36  bosie: thanks peth
23:36  homekevin: But it does require a plugin, I believe. It's just usually installed by default on systems I use.
23:36  galaxywatcher: homekevin: omg...it works!
23:37  galaxywatcher: and :wq saves it in it's original zipped format?
23:37  homekevin: galaxywatcher: I don't think I have tried that, but I would hope so.
23:37  homekevin: galaxywatcher: You might check :h pi_gzip
23:38  homekevin: Eh, looks like there's not much in pi_gzip, actually.
23:38  galaxywatcher: I did a test run...it does indeed save back as a .gz ....
23:39  homekevin: I would expect some options to control compression, but none seem to be mentioned.
23:39  galaxywatcher: I am embarrassed how many times I unzipped first to edit.
23:39  homekevin: Yeah, you should be.
23:39 * galaxywatcher facepalms
23:39  homekevin: And we're going to tell everyone.
23:39  singlecore: i liked that archive editing feature, thx 4 the hint homekevin
23:40  singlecore: i dunno when or if ill ever need or use it but its cool :)
23:40  walt: when I use yankring and try triggering a macro, apparently @ is a binding, so it tells me to enter a character?
23:40  walt: is this something I should care about? Macros seem to execute
23:40  singlecore: and thx for the question galaxywatcher
23:41  homekevin: I mostly use it to read zipped files.
23:42  galaxywatcher: to read zipped files, I always to gzcat filename |less
23:42  galaxywatcher: s/to/do/
23:42  homekevin: Debian has a policy about compressing files in certain places that are over a certain size, so READMEs and other documentation are often g- or b- zipped.
23:42  homekevin: galaxywatcher: less can work on zipped files also.
23:42  homekevin: galaxywatcher: You need a certain environment variable though.
23:43  singlecore: yea but mostly i have to unpack that archive anyway so i just extract everything and then look into the text files ..
23:43  alejo: hey, i'm editing a file with vim. what do i have to do in order to know what's the current file name? without leaving vim ..
23:44  singlecore: maybe echo %
23:44  singlecore: ?
23:44  homekevin: alejo: CTRL-G
23:44  singlecore: i dunno
23:44  alejo: thx homekevin !
23:44  homekevin: alejo: But consider :set laststatus=2
23:44  galaxywatcher: homekevin: interesting...I will look that environment variable up sometime.. less warns me it's about to look at binary when I try with my stock version.
23:44  homekevin: galaxywatcher: Check for the lesspipe package
23:44  helo: zless?
23:44  singlecore: ah :!echo % works too
23:45  homekevin: Or something.
23:45  singlecore: but not that elegant though
23:45  homekevin: Sorry, it's not lesspipe
23:46  homekevin: galaxywatcher: My mistake, lesspipe is part of the less package here. I think it just requires setting the LESSOPEN variable correctly.
23:46  galaxywatcher: homekevin I do that in my .profile?
23:47  homekevin: galaxywatcher: I have it in .bashrc. I'm not sure what difference that makes.
23:47  homekevin: galaxywatcher: In my case, I think it came from the skel file
23:48  homekevin: galaxywatcher: I assume the less/lesspipe documentation explains how to set it up
23:48  galaxywatcher: homekevin: Yeah..I am checking that out. http://aplawrence.com/Bofcusm/179.html
--- Log closed Sat Dec 04 00:00:40 2010
