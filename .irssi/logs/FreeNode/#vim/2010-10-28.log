--- Log opened Thu Oct 28 00:00:55 2010
00:10  foocraft: so now that I downloaded and compiled vim7.3, how can I set margins?
00:10  foocraft: s/margins/margin line/
00:19 --- galaxywatcher_ is now known as galaxywatcher
00:19  foocraft: awesome!! :) map <f5> :w :!<up><cr>
00:19  strull: foocraft: try :set cc=80
00:20  foocraft: yup worked, thanks strull
00:21  strull: crazy mapping, btw
00:31  foocraft: hehe c'mon :)
00:31  foocraft: the beauty of it is that it just "works" with everything I do
00:36  mcantor: How can I replace every instance of "5000" in a file with an incrementing number starting at 5000?
00:36  mcantor: That is, if "5000" appears 8 times, I want it to replaced with "5001", then "5002", then "5003", etc.
00:43  mcantor: figured it out... :let inc=5196 | g/5196/let inc+=1 | s/5196/\=inc
01:40  ehc: how can I paste the filename of the current buffer? supposedly @% but i'm not sure how to use that. is it a buffer, or what?
01:42  strull: try "%p
01:43  rson: or from insert mode <C-r>%
01:43  fow: in other words, the % register
01:51  jergason: so i am writing some ruby in vim
01:51  jergason: is there a way to execute the contents of the buffer?
01:52  strull: try :%w !ruby
01:54  jamessan: might need to tell it to look at stdin -- :w !ruby -
01:54  strull: yeah, probably (don't really know ruby)
01:55  strull: jamessan: did you have a look at ConqueTerm? If so, what is your impression
01:55  jamessan: nope. I've never felt the need to run a term in vim
01:55  jamessan: I use screen
01:55  strull: yeah, same here, until I found a need. It works pretty well
01:56  strull: I'm impressed of what can be done
01:59  okayzed: i've tried conque term
02:13 --- Guest10739 is now known as gdoteof_home
02:29  jnylen: Hey guys... how can I get vim to show a parameter list for a builtin PHP function?
02:29  jnylen: I know C-x C-o but it doesn't show parameters if there's only one match for what I've typed.
02:31  ezzieyguywuf: so, do you guys use set -o vi ?
02:32  strull: sure
02:32  ezzieyguywuf: what exactly does that do? my terminal still seems to behave the same.
02:32  jamessan: jnylen: :help 'completeopt
02:33  strull: ezzieyguywuf: this looks like a #bash question
02:34  strull: but don't mix terms with shells
02:34  ezzieyguywuf: oh, sorry. and thanks.
02:36  jnylen: jamessan: thanks, :set completeopt=menuone,preview did the trick
02:40  jnylen: jamessan: how about a quicker way to close the resulting preview window than Esc, C-w w, C-w c ?
02:40  jamessan: jnylen: C-w z
02:41  jnylen: thanks
02:58 --- estragib_ is now known as estragib
03:01 * strull wonders what "one or the other" in :he e180 means
03:04  jamessan: it should probably be phrased "... specifying any one of the following ..."
03:04  jamessan: or "at least one of the following"
03:04  strull: yeah, in fact ... at most one of the following
03:04  strull: right. exactly one of the following
03:05  strull: it seems that one cannot give more than one
03:05  jamessan: ok, then "any one of" or "exactly one of"
03:05  strull: neither by repeating -complete nor by file,buffer or alike
03:55  Patric3: :s/foo/bar/gc will prompt & replace only the first instance of foo from the cursor.  How do I get this command to continue from the cursor to the end of the document (or until quit using "q") ?
03:56  jamessan: Patric3: /g means "all occurrences in a line". most ex commands only operate on the current line by default, so you have to specify otherwise
03:56  jamessan: Patric3: % is the shortcut range for "all lines in the buffer" -- :%s/foo/bar/gc
03:57  Patric3: Is there a way to start from the current cursor position (but be % otherwise) ?
03:57  jamessan: :.,$
03:57  Patric3: 0_o
03:57  nezZario: Ok
03:57  nezZario: Anybody know the reason why I can't copy/paste to/from vim from PuTTY ?
03:57  jamessan: Patric3: :help 10.3   for the user manual section about cmdline ranges
03:58  Patric3: I've noticed that I can use /g with a visual block
03:58  Patric3: bit of a hack I guess
03:58  jamessan: Patric3: no, /g still means "every occurrence in the current line"
03:58  Patric3: And a visual block is treated as one line ?
03:58  jamessan: Patric3: it's just that the command is run on every line in the visual selection
03:58  Patric3: ok
03:58  jamessan: run once on every line
03:58  jamessan: that is
03:59  Patric3: yip - got it
03:59  nezZario: oh look at that
03:59  nezZario: looks like I can just hold shift..
04:00  erikc: how do i set the # of lines in the 'ex' area (the bottom of vim)
04:00  jamessan: erikc: :help 'cmdheight
04:04  zorph: in multiline visual block select, can I replace the column with a consecutive range of integers?
04:16  qiyong: how do i list buffers?
04:18  Jerub: :ls
04:22  qiyong: :ls
04:22  qiyong:   1  a=  "/usr/sbin/remove_members"     line 132
04:22  qiyong:   2 # =  "/usr/lib/mailman/Mailman/Utils.py" line 103
04:22  qiyong:   3 %a=  "/usr/lib/mailman/Mailman/MailList.py" line 688
04:22  qiyong:   4   =  "/usr/lib/mailman/Mailman/Site.py" line 72
04:22  qiyong: Jerub, what a= # = %a means?
04:22  strull: qiyong: these "indicators" are explained under :he :ls
04:27  qiyong: strull, are there vim users in the world who mastered vim completely? and how many?
04:27  strull: yes, there are exactly 42 of them
04:27  qiyong: not to count various addons
04:27  qiyong: strull, how do you know 42?
04:28  jamessan: qiyong: :help 42
04:29  strull: also :he!
04:29  qiyong: it's from a movie
04:29  qiyong: is there a short cut to move to Next chapter: |usr_43.txt|
04:30  jamessan: <C-]>
04:30  jamessan: qiyong: it would be useful to read the first couple pages of ":help"
04:31  qiyong: i know c-], but that need to first move onto the link
04:31  qiyong: jamessan, ^
04:31  jamessan: no way to avoid that
04:32  Patric3: Is there a way to yank from the position of the cursor to the end of the line ?
04:32  jamessan: y$
04:33  qiyong: :ls doesn't list the help window, right?
04:33  Patric3: ah - that makes sense :p
04:33  jamessan: :ls doesn't list windows, it lists buffers
04:33  strull: qiyong: unless you want to try :n $VIMRUNTIME/doc/* and use n to switch to the next file
04:33  Accolade: qiyong, but /| or similar might be short enough for you
04:34  qiyong: accipter, right
04:34  jamessan: and :ls! will list the help buffer.  :ls doesn't list it because the buffer has 'nolisted' set
04:34  Accolade: qiyong, also, you could remap C-] to jump to the next chapter reference and then follow it
04:34  qiyong: are there any vim developer here? it's a good thing vim ships with esperanto support.
04:35  jamessan: various of us have submitted patches, but Bram is the only one with commit access and he's not here
04:35  jamessan: Dominique Pelle is the one that maintains the esperanto support, iirc.  he used to be in here
04:35  Accolade: Patric3, what makes sense as well: nmap Y y$ (in vimrc)
04:36  qiyong: jamessan, what's his nickname?
04:36  Patric3: Accolade: ah - nice tip
04:36  jamessan: qiyong: I think it was dominiko, but I'm not positive
04:36  Accolade: Patric3, yes, it should be default
04:36  jamessan: except for hysterical raisins
04:37  Patric3: yeah - it's a op that I would use frequently
04:37  jamessan: Patric3: well, the other related commands all follow that pattern.  C == c$, D == d$, but vi had Y == yy
04:38  Patric3: ah - I see
04:38  jamessan: so vim does the same for compatibility. luckily you can remap it
04:38  Accolade: vim is not refactor-mercilessly-land :)
04:39  jeffszusz: on the contrary - vim's interface is the most suited to merciless text reorganizing
04:39  Patric3: :-)
04:40  jeffszusz: it's downside is that the human brain and hands can't figure out how the heck to do that crap fast enough to matter.
04:40  jeffszusz: :D
04:50  Patric3: An observation - When pasting a block (with "P") the cursor remains at the top of the newly pasted contents.  However, I usually want to edit beneath the block.  Have others noticed this issue ?  What workarounds are there (apart from searching for the end of the block) ?
04:51  Accolade: an improvement on searching for the end would be jumping to the end: ']
04:53  jamessan: Patric3: gP
04:54  jamessan: which is conveniently just after p in the help
04:54  lumgwada: hrm... handy. I wonder how long until my brain absorbs that one
04:54  Accolade: this would maintain column: :noremap P mpP` p
04:54  Accolade: note it overwrites register "p
04:55  godlygeek: or using gp or gP
04:55  godlygeek: Accolade: hm?  "maintains column"?  Like `] ?
04:56  Accolade: godlygeek, that does something different for me, but both share the `
04:57  godlygeek: different how?
04:57  Accolade: ']  `]   To the last character of the previously changed or yanked text.  {not in Vi}
04:58  Accolade: mpP`p  jumps back to the charactor on which you P'eed ;)
04:59  godlygeek: jamessan: for testing the athena gui - i'm currently running ubuntu, is there an easy way for me to grab the debian deb for just vim?
04:59  jamessan: godlygeek: I haven't built an athena deb yet
05:00  godlygeek: jamessan: i'd be happy with just a way to convince apt-get source to grab me your sources instead of the ubuntu ones
05:01  Patric3: jamessan: Ah - Brilliant
05:01  Patric3: Why does it work ?
05:01  jamessan: Patric3: :help gP
05:01  Patric3: fair enough
05:02  Patric3: by definition :)
05:04  jamessan: godlygeek: dget http://debian.lcs.mit.edu/debian/pool/main/v/vim_7.3.035+hg~8fdc12103333-1.dsc
05:05  godlygeek: huh.  i was about to come to the realization that i could just start by cloning the debian git repos
05:05  godlygeek: never seen dget before.
05:06  jamessan: godlygeek: oh, I'm using hg now
05:06  jamessan: godlygeek: hg clone http://hg.debian.org/hg/pkg-vim/vim
05:07  jamessan: whee, I think I just fixed gnupg.vim to use {Buf,File}{Read,Write}Cmd instead of Pre/Post
05:08  gMinuses: I was reading the vim help. what's the fastest way to navigate to a chapter's link without using the mouse?
05:08  godlygeek: ah, yeah - i remember you saying you were going to switch now that bram did...
05:08  godlygeek: you can tell i'm not around much anymore, heh.
05:09  jamessan: gMinuses: double click on it
05:09  jamessan: oh, without using the mouse
05:09  godlygeek: jamessan: oh yeah?  If :grep gives you back a gpg-encrypted file as the first search result, do you jump to the last line of the file?  :-D
05:09  jamessan: gMinuses: <C-]>
05:10  jamessan: godlygeek: I'd bet gnupg.vim was already broken if you happend to get one as a grep result
05:10  gMinuses: jamessan: but you have to navigate the cursor on top of the link first. I was wonder how to do it fast?
05:10  gMinuses: *I'm wondering how to do it fast.
05:10  godlygeek: jamessan: heh, probably.  the solution is to do :lockmarks on your :r command, though!
05:11  jamessan: right :)
05:11  godlygeek: gMinuses: :help (tag)
05:11  godlygeek: for instance, if you're trying to follow the link for :lockmarks you could do :h :lockmarks<CR>
05:12  Accolade: gMinuses, also consider /|[^ ]+|   or, more simply  /|   the first one is better suited for mapping (or repeating with n, if you don't search for anything else)
05:12  jamessan: godlygeek: although, '[ and '] never seemed to be set when BufReadCmd was triggered, for me
05:13  erikc: is there a way to execute a unix command and print the stdout without blanking the screen? (in a terminal)
05:13  jamessan: and I'm still not sure why Markus messes with &encoding before running the shell commands
05:14  godlygeek: a misunderstanding of what &encoding does, i'm sure...
05:14  gMinuses: Accolade: what does these search pattern do? I typed it in my help file. nothing I can notice happened.
05:15  godlygeek: jamessan: hm.  netlib winds up setting '[ to line 1 and '] to line("$") - not terribly shockingly
05:15  godlygeek: you don't even get that?
05:15  gMinuses: godlygeek: did you mean :help tag?
05:15  godlygeek: gMinuses: i meant (tag) as a placeholder.
05:16  godlygeek: gMinuses: my point was, the text of the "link" is the name of the help article, too - if you can read the link, it might be faster to just type :help foo than to move the cursor to it.
05:16  Accolade: (:h when going for speed)
05:17  Accolade: (also often a prefix of the topic title suffices)
05:17  gMinuses: godlygeek: i get it. thanks. but how about links like "usr_01.txt" "usr_02.txt" in the "Getting Started" section?
05:17  godlygeek: (and tab completion helps)
05:17  godlygeek: :help usr_01.txt
05:17  godlygeek: or :h usr_01 for short
05:17  Accolade: gMinuses, nothing happens when you type /|
05:17  Accolade: ?
05:19  gMinuses: Accolade: I'm sorry, but nothing make sense to me. what's supposed to happen?
05:19  Accolade: gMinuses, / searches: :h /
05:19  Accolade: and links in vim help are marked by |'s
05:20  gMinuses: Accolade: I know about / but what does | mean? how is it supposed to navigate to wherever I want?
05:20  Accolade: please excuse the confusion :)
05:21  qiyong: __init__.py makes a directory be a package?
05:21  pigdude: qiyong: #python, but yes
05:22  gMinuses: godlygeek: that works. thanks. not as perfect as I wanted it to be though. still requires a lot of typing. but... acceptable i guess. thanks.
05:22  qiyong: pigdude, sorry wrong chan
05:22  pigdude: qiyong: np :^)
05:22  Accolade: gMinuses, as line 10 of :help says: "Jump to a subject:  Position the cursor on a tag (e.g. |bars|) and hit CTRL-]."
05:22  grassboy: hi
05:23  grassboy: i have a problem with vim function script
05:23  grassboy: can anyone help me :(
05:23  Rakko: sure
05:23  pigdude: grassboy: paste your script and say what is wrong
05:23  godlygeek: vimgor: anyone
05:23  vimgor: Please do not ask if anyone uses, knows, is good with, can help you with or is a guru/expert of <some program>. Instead, ask your real question. You'll probably get help faster that way.
05:23  Accolade: so "/|" (without quotes) is supposed to move the cursor to the next bar ("|"), which is supposedly where you can follow a reference with CTRL-]
05:24  gMinuses: Accolade: thanks for the elaboration, I'm reading it.
05:24  grassboy: i wrote a function to control the cursor in vim
05:24  grassboy: such as MoveCursorTo(x, y)
05:25  grassboy: it can move my cursor in vim to the document position [x, y]
05:26  grassboy: the content of MoveCursorTo is mainly exec(a:x."gg".a:y."|")
05:26  grassboy: but the build in function exec seems like execute the :instruction
05:26  gMinuses: Accolade: ok I get it. pretty neat. it seems to locate the nearest text that is a link.
05:26  grassboy: so i am wrong...
05:27  grassboy: but i don t know how to fix it...
05:27  godlygeek: grassboy: paste exactly what you have to a pastebin, and give us the link.   vim.pastey.net for example
05:27  strull: grassboy: :he :normal
05:27  Accolade: gMinuses, exactly. You can cycle trough the occurrences by repeating the search by pressing n
05:27  godlygeek: ooh, yeah - that too, heh.
05:27  grassboy: sorry... i am not a native american, my english is very poor... thanks for your watching
05:29  grassboy: wait for me
05:29  grassboy: http://vim.pastey.net/142172
05:29  gMinuses: Accolade: but it stops both before and after a link, and I have to press n a couple times before it stops at the link i want. anyway. a neat trick. thanks very much.
05:30  grassboy: the code of MoveTo(x, y)  is here: http://vim.pastey.net/142172
05:30  Accolade: gMinuses, well just begin typing the link you want, e.g. /|ba
05:30  Rakko: what does "|" do, grassboy?
05:31  Accolade: here's a more elaborate search pattern, that should match links pretty well and match only once per link: /|[^ ]+|
05:31  grassboy: goto the specific column
05:31  Rakko: oh, cool. I didn't know that.
05:32  gMinuses: Accolade: that's better. but why is the | invisible in my gvim? is it because of my syntax highlighting?
05:32  strull: yes
05:32  Rakko: gMinuses: :h 'conceallevel'
05:32  strull: gMinuses: type V to make it visible
05:33  Accolade: Rakko, doesn't work for me
05:33  Accolade: gMinuses, yes, but that is the default syntax highlighting
05:34  gMinuses: Rakko: strull: ha, right there. and now I know the option for it. thanks
05:35  Rakko: grassboy: what happens when you call your function?
05:35  gMinuses: Accolade: got it. thanks!
05:35  grassboy: strull: thank you! the :normal command seems works
05:35  strull: np. have fun!
05:35  Rakko: oh, yeah! I was just gonna say :normal
05:36  grassboy: it returned me "not a editor command"
05:36  grassboy: thank you everybody
05:36  grassboy: i will fix my code
05:39  Accolade: gMinuses, you might :map <Space> /|[^ ]+|
05:40  Rakko: what is everyone's opinion of the option that automatically chdirs to the current buffer's dir?
05:40  strull: Rakko: don't do it !!
05:41  gMinuses: Accolade: I typed :h and then /|[^ ]+|, but vim said  pattern not found
05:41  Rakko: strull: that's what I was expecting... why?
05:42  Accolade: gMinuses, try :set incsearch
05:43  Accolade: gMinuses, sorry, my bad
05:43  Accolade: the + has to be escaped: /|[^ ]\+|
05:44  Accolade: sorry, obviously I hadn't tested the pattern myself :)
05:44  gMinuses: Accolade: np. it works! thanks a lot.
05:45  Accolade: it's a specialty of vim's regular expressions flavor - kind of a pet peeve of mine -.-
05:45  Accolade: gMinuses, also :set hls
05:45  Accolade: that will highlight all links after the first search
05:46  gMinuses: Accolade: agreed. it's like you have to escape it in order to not escape it.
05:46  Accolade: gMinuses, hehe
05:46  gMinuses: Accolade: I already have hls set. thanks.
05:48  Accolade: (personally I mapped / to /\v which makes most chars special)
05:49  Accolade: dunno if that is a good idea though, script-compatibility-wise
05:50  jamessan: I doubt most plugins use "normal /" and if they are, they shoul be using "normal! /"
05:51  Accolade: yes
05:59  gMinuses: I don't know what happened. but after I remove some plugins. double clicking on a link now selects its text. how can I fix it?
06:00  Raimondi: gMinuses: That's the expected behaviour. Check the plugins you removed.
06:00  godlygeek: gMinuses: you mean help links?  the expected behavior there is that you follow the link.  you must have changed the 'mouse' option
06:03  gMinuses: very strange. if the help is brought up by typing '0 then double clicking selects link text, however, if the help is brought up by typing :h, then double clicking navigates to wherever the link points to.
06:03 * Raimondi missunderstood, he's sorry.
06:04  gMinuses: Raimondi, it's my bad. didn't describe it clearly.
06:05 * Raimondi is not that sorry, then ;)
06:05  gMinuses: Raimondi, lol
06:32 --- sacho_ is now known as sacho
06:47  d1b: hi guys how do i echo the currently used syntax?
06:47  d1b:  / show it
06:49  Raimondi: :set ft?
06:51  d1b: ?
06:51  Raimondi: Yes, type  :set ft?
06:55  d1b: erh ... maybe :)
06:56  Raimondi: The ? is part of the command :)
07:03  iaj: isnt :set ft sufficient as well :-)
07:03  bairui: it's a good habit to get into, iaj, to use the ? form when querying the value.
07:03  Raimondi: Ditto
07:03  bairui: g'day all, btw :)
07:03  iaj: are there some ways when one really needs the ? part?
07:03  Raimondi: Hi there
07:03  Rakko: yes
07:03  iaj: g'morning,yes
07:04  bairui: iaj: sure there are - all of the boolean ones
07:04  iaj: bairui: aaaaaaaaah of course
07:04  iaj: thanks for that!
07:04  bairui: :) np
07:40  grassboy: hello
07:40  grassboy: anybody here?
07:41  Raimondi: vimgor anybody
07:41  vimgor: I don't have a clue!
07:41  Raimondi: vimgor somebody
07:41  vimgor: I have no idea!
07:41  Raimondi: lol
07:41  Raimondi: vimgor anyone
07:41  vimgor: Please do not ask if anyone uses, knows, is good with, can help you with or is a guru/expert of <some program>. Instead, ask your real question. You'll probably get help faster that way.
07:41  Raimondi: grassboy: ^
07:42  grassboy: this is a strange question...
07:42  Raimondi: You might get a strange answer...
07:42  grassboy: :D
07:43  grassboy: there are many lines in my code
07:43  grassboy: line 1 contains 15 characters
07:43  grassboy: line 2 contains 5 characters
07:44  grassboy: line 3 contains 25 characters
07:44  grassboy: question: my vim cursor now at [1, 15]
07:45  grassboy: when i press <Down> , the cursor will move to [2, 5]
07:45  Rakko: right
07:45  grassboy: but press <Down> again, the cursor will move to [3, 15]
07:45  Rakko: yes
07:46  grassboy: why the vim so smart?
07:46  Rakko: lol
07:46  Raimondi: lol
07:46  grassboy: is there any variable stores the position in previous column??
--- Log closed Thu Oct 28 08:43:30 2010
--- Log opened Thu Oct 28 08:43:53 2010
08:43 --- Users 528 nicks [0 ops, 0 halfops, 0 voices, 528 normal]
08:44 --- Channel #vim was synced in 73 seconds
08:47  Patric3: Ah "_" is like "/dev/null" for registers ?
08:48  Raimondi: You got it :)
08:48  Patric3: thx
08:51  Patric3: Can I yank a visual block and have the cursor stay at the end of the selection ?
--- Log closed Thu Oct 28 08:58:00 2010
--- Log opened Thu Oct 28 08:58:19 2010
08:58 --- Users 528 nicks [0 ops, 0 halfops, 0 voices, 528 normal]
08:58 * Patric3 comes to the realisation that vi can do just about anything
08:58  Rakko: Raimondi et al: for my block-removal thing, I have this mapping: noremap <A-%> :call IsBeginningOfBlock() ? normal 'ma%ddkV`aj<kdd' : normal '')<CR>
08:59  Rakko: But that's not quite right. How do I tell it to send a certain normal mode sequence only if a condition is true?
08:59  Patric3: except harness-butterfly-effect of course
08:59  Rakko: hehe
08:59 --- Channel #vim was synced in 71 seconds
09:00  Raimondi: Rakko: You can use noremap <expr> <a-%> isBeginningOfBlock() ? "normal ma%ddkV`aj<kdd" : "normal ..."
09:00  Rakko: oh yeah. thanks
09:10  Rakko: ah, this ? : thing isn't a good way to do it anyway
09:14  Raimondi: Rakko: You can put all the logic in the function and make it return the desired mapping
09:14  Rakko: yeah, that's what I'm doing
09:14  Raimondi: Good :)
09:22 --- daniel_ is now known as daniel
09:23  grassboy: hello every body
09:23  Raimondi: Welcome back, grassboy
09:23  grassboy: i ve got some problem again :(
09:24  grassboy: i ve read the vim document
09:24  grassboy: there is a buildin function winwidth(0)
09:25  grassboy: it can get the byte length per line of current window
09:26  Raimondi: That's not what the help says.
09:26  grassboy: however, it will include the width of line number, foldwidth ... etc
09:27  Raimondi: It returns the width of a window
09:27  grassboy: is there any function that return the width of coding area?
09:29  Raimondi: What are you trying to do?
09:31  grassboy: i will get the width of editable area
09:32  grassboy: ie. in wraping mode, it can contain n characters per line
09:32  grassboy: does any function return n?
09:36  Rakko: Hey everybody! http://gist.github.com/650849
09:36  Raimondi: grassboy: No.
09:36  grassboy: oh...
09:37  Raimondi: grassboy: Why do you need such a function?
09:37  grassboy: ha... i am implementing a function
09:37  bairui: um... are you just talking about   &textwidth   ?
09:37  Raimondi: Rakko: use  normal!  on scripts to prevent mappings
09:38  Rakko: oh, ok
09:38  Rakko: I just noticed a problem with < also
09:38  Rakko: weird, I just got "--No lines in buffer--" when clearly there are lines
09:38  grassboy: it can move the vim cursor by display lines when wrapping
09:39  Rakko: grassboy: I believe that's already been accomplished
09:39  Raimondi: grassboy: what's wrong with gj gk?
09:40  grassboy: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
09:40  grassboy: oh~~~~~~~~~~~no~~~~
09:40  grassboy: i didn't try the instruction gj, gk
09:41  Rakko: sorry you did all that work, grassboy
09:41  Rakko: Raimondi: does < have special meaning in a regexp?
09:41  grassboy: i didn't try the instruction gj, gk before
09:41  grassboy: ><
09:41  Raimondi: Well, bet grassboy learn something from trying that :)
09:41  ku0n: hello
09:41  grassboy: ha
09:41  grassboy: maybe
09:41  ku0n: Anybody know a good ruby plugin for vim? I can't find proper indentation for it
09:42  sora_h: ?
09:42  Raimondi: Rakko: I think not...
09:42  Rakko: the builtin ruby.vim doesn't do it, ku0n?
09:42  sora_h: ruby vim plugin is builtin
09:42  ku0n: not well
09:42  Rakko: Raimondi: well then I wonder why this function chokes on < >
09:42  grassboy: then, is there any command such that
09:43  sora_h: ku0n: hm, like begin-rescue-else-end bug?
09:43  ku0n: nop more like splitting lines
09:43  grassboy: when i press home, the cursor will jump to the first "NON EMPTY" Character?
--- Log closed Thu Oct 28 09:48:49 2010
--- Log opened Thu Oct 28 09:49:11 2010
09:49 --- Users 525 nicks [0 ops, 0 halfops, 0 voices, 525 normal]
09:50 --- Channel #vim was synced in 72 seconds
10:07  foocraft: guys,
10:07  foocraft: how can I go to shell mode in vim (without using :!)
10:07  daniel: O_o
10:08  daniel: ^Z :P
10:08 * foocraft slap
10:09  foocraft: like a shell within vim
10:10  the_isz: foocraft: i'd suggest you don't and would suggest someone wrote a vimgor entry for that shell-in-vim topic
10:15  [MAD]: Hi
10:16  the_isz: i hope i didn't drive foocraft away... that's not what i meant to do :(
10:17  [MAD]: have you seem this image that is an actually vim script?
10:17  Raimondi: We all know how mean you are, the_isz :p
10:18  Raimondi: [MAD]: The spammy one?
10:21  Raimondi: Boy! that was a joke and nobody loled, maybe I'm the mean one o_O
10:29  carlesso: Hi! I'm using nerdtree but I'm not able to understand if and how I can cycle between opened files
10:35 --- silex is now known as Silex
10:37  the_isz: Raimondi: no, you're not. i was just afk :)
10:38 * Raimondi thinks he was too hard on himself, the poor guy :)
10:39  Raimondi: carlesso: Try with :b partofname<Tab>
10:39  Raimondi: :ls   to list all buffers
10:42  cih997: hi, how can i search string in vim? Not pattern, string only, i.e. "something, interesting[other]"
10:42  cih997: /string return E486 Pattern not found.
10:42  cih997: I'm newbie with vim
10:43  Raimondi: What string are you using?
10:43  cih997: Raimondi: i.e. "something, interesting[other]"
10:43  cih997: Raimondi: and this string is in file
10:44  Raimondi: Is that the actual string? I ask because / will search using vim's regex
10:44  cih997: Raimondi: so my question is how to search string only (not vim's regex) or how to use vim's regex to find string? :)
10:45  Raimondi: For info on vim's regex look  :h pattern
10:45  indietrash: gvim sets hints for the wm that specifies the increments in which a window is resized. how do I lose this behaviour?
10:49  carlesso: thanks Raimondi that's what I was looking for
10:49  Raimondi: Good :)
10:50  kotique: how do I mark block of text and then replace from that mark till current position?
10:50  cih997: Raimondi: i'm reading this but still don't know how to search simple text with few words and special characters (not pattern, string only). one word works well with /someWord but /some, ofew, words[] and special chars <- this doesn't work :/
10:52  Raimondi: kotique: for mark a    :'a,.s/...
10:52  kotique: 'a,.
10:52  the_isz: cih997: i'll only feed you a fish here, but you need to escape [ and ] here with a \ each
10:52  kotique: okay
10:53  cih997: the_isz: yeah! thanks a lot!
10:54  the_isz: cih997: you're welcome
10:54  the_isz: but reading  :he pattern.txt  will teach you to fish ;)
10:54  the_isz: cih997: ^
10:56  cih997: the_isz: my english is quite poor so could u explain me what does it mean "feed somebody fish" and "teach somebody to fish" ? ;)
10:56  the_isz: cih997: give a man a fish and you'll feed him for the night. teach him to fish and feed him for a livetime.
10:57  daniel: how can I pass the whole line to a :! command (without the line-ending)?
10:57  the_isz: cih997: it's an english saying. i hope i did it right, i'm not an english native speaker either
10:57  the_isz: daniel: try  :he :w_c
10:59  cih997: the_isz: thx :)
11:01  daniel: the_isz: ah, cool
11:02  daniel: (for the others: i use it as :$,$w !cat
11:02  daniel: ah wait, i want to pass it as a parameter
11:02  daniel: not to stdin
11:02  Altreus: hmm ... I'm trying to make a mapping that inserts text. I figured Otext<C-o> would do it, but it doesn't: it treats the letters as commands. How can I specify that Otext means press O, insert text ?
11:03  Raimondi: :h :normal
11:03  daniel: Altreus: eh? it does
11:04  daniel: Altreus: but use <Esc> instead of <C-o>
11:04  carlesso: Are there (and where can I find) default vim keybind regarding buffer navigation?
11:04  daniel: and use :nmap, since you want that mapping in normal mode only
11:05  daniel: carlesso: :h grail
11:05  daniel: and then search for buffer
11:05  Raimondi: Altreus: Safer is :nnoremap  and read :h :normal
11:06  daniel: the_isz: any idea?
11:06  carlesso: the fact is that nmap <C-TAB>   :bnext<CR>
11:06  carlesso: nmap <C-S-TAB> :bprevious<CR>
11:06  carlesso:  are not working
11:06  the_isz: daniel: i didn't get your problem. please tell me again what exactly you're trying to achieve
11:06  Raimondi: daniel: To pass one line as argument you better use :exec  +  getline()
11:06  daniel: the_isz: I have a line that looks like "some/filename", and i'd like to pass it to, say, echo as the first parameter
11:07  daniel: so that it prints "some/filename"
11:07  Raimondi: carlesso: From the terminal?
11:07  carlesso: yes
11:07  Raimondi: Maybe the terminal doesn't handle those key combos
11:08  daniel: Raimondi: i suck at vimscript ;)
11:08  carlesso: I see
11:08  Raimondi: daniel:  :exec '!echo '.getline('.')
11:09  the_isz: daniel: or  V:w !cat
11:09  carlesso: Raimondi, you're right, tt and tT works well
11:09  carlesso: thanks for the second time
11:09  Raimondi: np
11:09  the_isz: daniel: or  :.,.w !cat
11:09  daniel: i actually want echo, not cat ;)
11:09  daniel: the_isz: no stdin
11:09  the_isz: daniel: oh, that's something different then
11:10  the_isz: daniel: use Raimondi's suggestion, he's the man
11:10  daniel: yep, seems to work
11:10  daniel: thanks Raimondi!
11:10  the_isz: daniel: remember :w ! too, though. i bet you'll want it soon ;)
11:10  Raimondi: Check :h shellescape()   too
11:12  jsquared: Is there a vim plugin which will emit line-drawing characters rather than | +, etc. when drawing lines that separate windows?
11:12 --- Natch is now known as Natch|
11:17  Altreus: thanks guys, sorry - lost internet
11:18  masterkorp: hello, does anyone recomend any article comparing/reviewing  vim themes?
11:18  Altreus: I'm using :normal now ... is there a no-op that will clear a Visual Line but still set '] to the end of it?
11:25  Altreus: Hm, or is there another way I can run a command on the visual-selected block itself, rather than on each line individually
11:25  Altreus: I realise I was asking the xy problem
11:26  qiyong: can i irc inside vim?
11:27 * pyrho thought vim was a text editor
11:27  Altreus: You can use ^Aa to swap to an IRC window if you use screen and irssi
11:28  qiyong: but i heard emacs can irc
11:30  Altreus: ah if I make a function and add 'range' to it I can probably do what I want
11:31  remyo: qiyong: Emacs can do email and (I've heard) browsing too.
11:31  qiyong: remyo, can vim do ?
11:31  remyo: qiyong: But no, Vim does non of these things. Its a tool that does one thing VERY WELL. Ediitng text
11:31  qiyong: any non-editor work
11:32  remyo: Not really. I think the most out there thing I've seen is a Tetris Game and a Twitter feed in vim, qiyong
11:35  pyrho: Emacs can show google maps (cf. http://julien.danjou.info/google-maps-el.html)
11:35  pyrho: but emacs can't efficiently edit text, sad for a text editor :)
11:35  Raimondi: Maybe it can run Vim?
11:36  pyrho: viper-mode sucks
11:36  pyrho: That's every emacs's user argument "Emacs can run vim".
11:36  pyrho: I've tried M-x viper-mode, and it truely has nothing to do with vim.
11:37  qiyong: why you say not efficient? pyrho
11:37  qiyong: long key strokes
11:37  qiyong: because of long key strokes?
11:38  iaj: qiyong: theres a neat vimmode plugin for irssi... already supporting pretty most of the common motions etc.
11:42  wessel: is it possible to copy/paste the last line of each file in the current folder?
11:44  daniel: the_isz, Raimondi: Thanks again. I just looked through the svn diffs of 2000 files in only half an hour
11:44  Raimondi: Good? :)
11:44  pyrho: wessel: using xclipboard and tail -n 1 on ls *, maybe
11:45 * daniel is doing mass code-restructure, and wanted to make sure his sed scripts did not mess anything up that they are not supposed to
11:47  Raimondi: wessel: You could use :bufdo $yank A   to store them in the a register
11:52  pyrho: qiyong: it's just another mentality, and I prefer vim's.
12:35  qiyong: sometimes, when i resumed my vim, the window become blank
12:46  mgedmin: resume?
12:46  mgedmin: as in ctrl-z; fg ?
12:46  mgedmin: does ctrl-l repaint it?
12:50  LeoNerd: Yeah... I get that occasionally too. No idea wh
12:51  LeoNerd: Another Ctrl+Z + fg seems to fix it though
13:09  bosie: how is one supposed to navigate wrapped lines?
13:10  mgedmin: gj/gk
13:10  bosie: mgedmin: hmm i see
13:10  remyo: bosie: Dude, you're everywhere
13:10  bosie: remyo: it scares me
13:10  bosie: ;)
13:11  remyo: bosie: set:wrap
13:12  bosie: remyo: hm?
13:12  remyo: :set wrap I mean
13:13  bosie: thats what i did
13:13  remyo: I might have mistread your question though.
13:13  remyo: Ah, you're just asking how to navigate it more easliy?
13:13  bosie: but then i have a few lines that JK jumps over
13:13  bosie: and as mgedmin stated, gj/gk can navigate those 'wrapped line'
13:15  LeoNerd: I have them mapped on Filetype txt
13:15  the_isz: bosie: maybe remyo meant  :set nowrap  ?
13:16  bosie: LeoNerd: thinking of doing the same thing for tex files as well
13:16  bosie: the_isz: hm, can't think of how to make that work though
13:17  the_isz: bosie: well, it's a matter of taste probably. and filetype.
13:20  bosie: so 'g' is supposed to be what? the shortcut for 'jump' ? gm ... jumpmiddle, jl jumpline ?
13:21  mgedmin: g is a prefix for miscellaneous unrelated two-letter commands
13:21  mgedmin: I tend to think of it as "modified" or "altered", e.g. gj ~= modified j
13:22  the_isz: sounds very plausible, mgedmin.
13:22  bosie: mgedmin: i see
13:23  bosie: so the 'modification' isn't predictable?
13:25 --- whitedragon is now known as Guest679
13:28  Nyoxi: bosie: actualy, the scheme seems to work this way -- if you implement new feature try to thing of a good command based on mnemonics, if you can't think of anything that isn't already used pick a random letter and stick 'g' infront of it ... repeat until you hit a free combo ;)
13:28  bosie: haha great.. ;)
13:29  Ulfalizer: is there some way to open files from the quickfix window without the cursor leaving it? like what 'o' does in the taglist plugin.
13:29  Ulfalizer: err, 'p'
13:34 --- Natch is now known as Natch|
14:13  Dynetrekk: hi. can I set foldmethod=indent for only one filetype? I would like to use syntax normally and 'indent' for fortran90
14:14  mgedmin: yes
14:14  mgedmin: use an autocommand
14:14  mgedmin: or create a filetype plugin
14:14  Dynetrekk: mgedmin: enlighten me? I don't know autocommands
14:14  mgedmin: :h 40.3
14:15  mgedmin: and :h 41.12
14:16  Dynetrekk: mgedmin: would that be: autocmd Filetype fortran set foldmethod=indent
14:16  mgedmin: nearly
14:16  mgedmin: better use setlocal foldmethod=indent
14:16  mgedmin: or is 'foldmethod' always local?
14:16  mgedmin: I get confused by these details all the time :/
14:16  Dynetrekk: mgedmin: I don't know, I'm still learning quite a bit about vim and its customizations
14:16  Dynetrekk: mgedmin: setlocal is for that single window I suppose
14:17  Dynetrekk: mgedmin: I sometimes mix fortran and python, so setlocal sounds great, actually
14:17  Dynetrekk: mgedmin: looks like this works! only disadvantage is that it doesn't recursively fold all indent levels...
14:19  mgedmin: you can fiddle with 'foldlevel' for that
14:19  mgedmin: or maybe 'foldlevelstart'
14:19  Dynetrekk: mgedmin: aha... let me check that out
14:19  Dynetrekk: mgedmin: what does it mean that 'foldlevelstart' is surrounded by ' ' ?
14:19  mgedmin: it's a convention for help topics
14:19  mgedmin: indicates that I'm talking about an option
14:20  mgedmin: see :h help-context
14:20  Dynetrekk: ah, one I can change with 'set'
14:20 --- whitedragon is now known as Guest78923
14:22  Dynetrekk: mgedmin: wow, thanks, my vim is now even more loved ;)
14:25 --- sitaktif is now known as sitaktif__
14:28 --- Silex is now known as silex
14:29 --- sitaktif_ is now known as sitaktif
14:31  sputnick: hi
14:31 --- sitaktif__ is now known as sitaktif_
14:32  sputnick: I saw something to compile Makefile in vim, but is there some plugins or builtin to run g++ on C sources and going back to vim to the first occurence if there's an error ?
14:33  spiiph: :h :make
14:33  spiiph: Also, :h :compiler
14:35  sputnick: 'k thanks : http://stackoverflow.com/questions/540721/compile-directly-from-vim
14:40  spiiph: And as per usual, when it comes to Vim, the proper answer is the least recommended one.
14:41  the_isz: spiiph: "compile outside vim and use vim to edit goddamit!" ?
14:41  spiiph: Nah
14:41  spiiph: But the correct answer was at the far bottom of the post.
14:42  the_isz: ah ok. didn't actually follow the link :)
14:50  staar2: hello
14:54  bosie: if i am in an all uppercase word, how can i get it lowercased but with an initial?
14:54  bosie: i.e. FOOOO => Foooo
14:56  LeoNerd: s/(\w)(\w*)/\U\1\L\2/   or somesuch
14:56  staar2: i got small problem with NerdTree, i got keybinding for opening NT :map <F6> :NERDTree<CR> right, but when i do :OpenBookmark myBook then it makes new buffer
14:56  bosie: LeoNerd: well I was hoping for something more.... sophisticated
14:56  mgedmin: boise, how about blgue?
14:56  LeoNerd: Unfortunately Vim lacks real ability to properly play Lego with these things...
14:57  mgedmin: that assumes you're in the middle of the word, not on the first letter
14:57  nroc: hey is there a way to make vim set expandtab intelligently (e.g. guess) based on the file that's been opened?
14:57  bosie: LeoNerd: no offence to your solution, wasn't my intend to put you down
14:57  LeoNerd: Otherwise I'd suggest something like breaking ~, and making it instead take an option;  ~U upper, ~l lower, ~p proper
14:57  nroc: i ask because if there isn't, i may write a plugin or something for it
14:57  spiiph: nroc, there are plugins
14:58  LeoNerd: nroc: I have a plugin I wrote for it
14:58  cih997: i have a problem with snipMate. It doesn t work for me. I unzip files as in instruction and this is my vimrc http://pastebin.com/QFDUFr6S
14:58  LeoNerd: Fairly simple... look for \t, or occurances of lines starting in (sw)*space, for
14:58  LeoNerd: example
14:58  bosie: mgedmin: can't find anything about 'blgue' in google. you mean blogit.vim ?
14:58  nroc: and determine based on count?
14:58  mgedmin: no, I mean 'b' to move to the beginning of the word, 'l' to move to the second letter, 'gue' to lowercase until the end of the word
14:58  LeoNerd: It just guesses
14:59  Kuukunen: bosie: guiw~
14:59  nroc: thanks, i'll see if anything existing will do the trick - if not i'll have a stab :)
15:00  nroc: thx spiiph/LeoNerd, appreciate it
15:01  bosie: Kuukunen: like it
15:02  Kuukunen: bosie: of course if you're doing it a lot, you might wanna macro it :P
15:02  Morg0th: hello, I have mapped the Tab key to Esc in my vimrc with "noremap <Tab> <Esc>", but it isn't working when I edit a cobol file… I don't understand why it works with everything else
15:02  bosie: Kuukunen: i am not at the point of macro-ing vim up unfortunately. The un-macro-ed vim experience is killing my brain already ;)
15:02  Kuukunen: bosie: it's easy tho
15:03  Kuukunen: bosie: :h q
15:04  mgedmin: Kuukunen++
15:04  Kuukunen: I have binded a button for @q so if I want to record a macro, I just hit qq, do stuff, hit q and then use å for playing back that
15:04  mgedmin: Morg0th, you've mapped <tab> in normal mode only -- but <esc> in normal mode doesn't do much anyway
15:04  Kuukunen: mgedmin: wouldn't normal mode be nnoremap?
15:05  Morg0th: mgedmin: I did inoremap and vnoremap
15:05  Morg0th: not working with nnoremap too
15:05  spiiph: mgedmin, it's :noremap, not :nnoremap
15:05  bosie: Kuukunen: the help doesn't say anything about persistence of those recordings. or is a register automatically saved?
15:05  spiiph: Morg0th, check if <Tab> is remapped for cobol files
15:05  mgedmin: Morg0th, check with :verbose imap <tab> if some plugin remapped it
15:06  the_isz: bosie: you can even map it:            :nmap <F7> guiw~
15:06  Kuukunen: bosie: ah yea, if you know you're gonna be doing it in the future too, might wanna make a real mapping for it
15:07  bosie: the_isz: i think vim-latex uses <F7> for something, but i get your point
15:07  Morg0th: I get 2 lines with the :verbose commnand, one in ftpplugin/cobol.vim and one in my vimrc file. I'll check the plugin, it's probably that
15:07  spiiph: That would be my guess.
15:08  Morg0th: yeees that was in a plugin file in vim install directory, thanks a lot
15:15  ddosia: if on my linux-machine i able to do ":e ++enc=cp1251" and see valid chars inside file and same thing i do on freebsd and see inside file only "???" instead of chars who knows how to fix it? thnx
15:17  mgedmin: I believe vim uses the system's iconv library to convert between charsets
15:17  mgedmin: :!iconv -l ought to list all the charset names the system supports
15:17  mgedmin: look if it has cp1251 or windows-1251
15:18  ddosia: mgedmin: yes, CP1251 is there
15:19  mgedmin: hmm
15:19  mgedmin: I've never used freebsd ...
15:19  ddosia: so do i
15:20  ddosia: i tryed to caompare output of locale and it seems similar
15:20  ddosia: *compare
15:33  metasyntax`: I built the latest Vim 7.3 on Ubuntu 10.10; are the GTK+ tearoff menus supposed to still work? For me, if I tear them off, clicking an entry does nothing. If the entry is a submenu, clicking in the submenu works. But direct children of a torn-off menu don't.
15:34  mgedmin: I can reproduce
15:36  metasyntax`: Thanks, I'll ask about / report it on vim-dev then.
16:05  sikker: I can open files in my current gvim with --remote filename, but I want the split to be vertical instead of horisontal. --remote +vsplit filename opens the file twice in a vertical split, and keeps the currently open file in a horisontal split.
16:07  strull: sikker: not sure. try --remote "+vsplit filename"
16:08  sikker: strull: Argument missing after: "+vsplit ts.php"
16:09  strull: then try --remote-send ":vsplit filename"
16:14  mlq: hello, i want to delete the second appearing colon in each line and replace it with a space? can someone give me a hint how i can do that fast?
16:15  spiiph: :%s/:[^:]*\zs:/ /
16:15  sikker: strull: that inputs the text string "plit ts.php" in the currently open file where my cursor is
16:15  mlq: spiiph: thank you!
16:16  mgedmin: sikker, --remote ':vsplit filename' ought to work better
16:18  sikker: mgedmin: that opens a [New file] called ":vsplit ts.php" in a horizontal split. The same deal with --remote-send just put sthe command into the modeline without executing it
16:19  mgedmin: okay, how about --remote-send "+vsplit ts.php<cr>" ?
16:20  sikker: mgedmin: it works if I change the + to : again. I tried with \n before, but <cr> works as intended :)
16:20  sikker: thanks!
16:20  mgedmin: oh, did I say +vsplit?  what's wrong with me today?
16:21 * strull was wondering already
16:24  winterweaver: So I've found lots of docs on for using spaces instead of tabs, but I now have a project I'm working on where the devs used tabs. I want to write a short python function which I can call to temporarilly use tabs again. What are the related commands for this?
16:29  spiiph: What's wrong with :retab?
16:30  LeoNerd: :retab is great for that
16:30  winterweaver: what does it do ? O.o
16:30  spiiph: It was a rethorical comment. :D
16:30  winterweaver: resets the tabs?
16:30  spiiph: winterweaver, :h :retab
16:30  winterweaver: ok
16:31  DestinyAwaits: spiiph : Hello, Sir :-)
16:31  spiiph: Hi
16:31  NET||abuse: hmm, need to do a mass replacement change all href="aform.html" to href="aform.php"  there's about 2 hundred references in one directory, anyone got a quick way?
16:32  spiiph: NET||abuse, man sed
16:32  winterweaver: wait, wont retab change all the tabs to spaces? I can't do that since the original developers are still working on the project using tabs, and they wont be happy if I go changing things.
16:35  LeoNerd: find | xargs sed
16:35  LeoNerd: winterweaver: Yup.
16:38  iaj: winterweaver: that was my problem with retab as well - since Im not using expandtab :\
16:44  spiiph: You configure your indent settings, then you run :retab or :retab! as is suitable
16:50  Araneidae: I know that . repeats the last command: is there any way to repeat the command before that?
16:51  spiiph: Nope
16:51  Araneidae: huh
16:52  Araneidae: That seems a bit remiss: I'm constantly wanting to do that!
--- Log closed Thu Oct 28 20:58:53 2010
--- Log opened Thu Oct 28 20:59:17 2010
20:59 --- Users 574 nicks [0 ops, 0 halfops, 0 voices, 574 normal]
21:00 --- Channel #vim was synced in 87 seconds
21:05 --- Natch is now known as Natch|
21:31  wooden: Say I wanted to diff all the files in two directories...  When invoking vimdiff from the command line, is there a way to open multiple diffs, each one in a different tab?
21:35  aidan: my text looks like foobar\nxxx  .. how do I remove the \n?
21:35  aidan: x and X fail me for obvious reasons
21:35  jink: J
21:37  LogicHoleFlaw: How can I disable colorcolumn for quickfix buffers? In .vimrc I have "set colorcolumn=80" but I wish to disable it for quickfix buffers.
21:37  LogicHoleFlaw: I tried "autocmd BufEnter quickfix setlocal colorcolumn=0" but I think I'm doing it wrong.
21:38  rson: LogicHoleFlaw: try autocmd filetype qf
21:39  graywh: rson, that's it
21:40  aidan: thanks jink
21:40  jink: aidan: np
21:41  LogicHoleFlaw: What's the best way to reload .vimrc after making a change to it?
21:41  abstrakt: LogicHoleFlaw, :source ~/.vimrc
21:41  kwtm: Wouldn't it be "source .vimrc"?  I mapped a shortcut for that.
21:41  kwtm: beat me to it, abstrakt
21:42  LogicHoleFlaw: Excellent. Thanks folks.
21:43  kwtm: My question: is there a ":" command equivalent for the normal mode keys?  Like if I wanted to do "d3j", is there a command like ":execute d3j" or something which I could type out first and it would wait till I pressed Enter before executing?
21:43  graywh: kwtm, :normal
21:43  kwtm: graywh: Okay, so ":normal d3j".  Thanks, will check help on that.
21:43  graywh: or you can use the Ex commands, :,+3d
21:44  kwtm: graywh: ":normal" was what I was looking for.  Thanks!  In this case it would work better than the "ex" commands.
22:32 --- WebDragon|laptop is now known as WebDragon
22:45  capuchin1: just googled for how to flip selected text, couldn't find anything on this
22:46  jink: flip?
22:46  capuchin1: by flip I mean: move first line in selection to last line
22:46  capuchin1: etc
22:46  capuchin1: for all selected lines
22:47  capuchin1: vim can do anything right :p
22:48  jink: Heh. :>
22:49  capuchin1: closest I could find was this: http://vim.wikia.com/wiki/Moving_lines_up_or_down
22:49  capuchin1: but thats only for moving a selection to a given line
22:50  rson: capuchin1: you could probably filter through an external program that does that
22:50  estragib: capuchin1: :g/^/m0
22:51  Raimondi: capuchin1: http://vim.wikia.com/wiki/VimTip1118
22:51  estragib: customize for visual selection :)
22:51  jink: pipe it through !tac
22:52  jink: :'<,'>!tac
22:52  estragib: >> http://vim.wikia.com/wiki/Reverse_all_lines
22:55  capuchin1: estragib: awesome! that flips the whole file but just pasted my selection into a file, Cheers!
22:56  estragib: jink's tip is closer really, but glad you're happy :)
22:56  capuchin1: thanks all!
23:06  zorph: which color scheme do u use? and why u like it?
23:08  zorph: evening scheme is nice
23:09  rson: i use a slightly modified xoria256 because it's easy on the eyes.
23:10  rson: easy on the eyes but still has plenty of color
23:10  zorph: where do u get that theme?
23:10  zorph: can I just specify it in the vimrc ?
23:10  rson: no you have to download it and use a 256 color terminal (or gvim)
23:10  rson: let me find the original link
23:11  zorph: is it dark or light bg ?
23:11  rson: dark
23:11  zorph: my terminal has a dark bg
23:11  zorph: cool
23:11  rson: http://www.vim.org/scripts/script.php?script_id=2140
23:12  rson: my modified one is in my github repo at http://github.com/rson/dotfiles/
23:14  rkhshm: how do i set the bold font on ?
23:15  zorph: ya that's pretty nice..xoria
23:16  rkhshm: anyone know pls
23:17  rson: rkhshm: it's part of your colorscheme
23:17  rkhshm: rson: as in ?
23:18  rson: rkhshm: :help hilight-args
23:20  zorph: I kinda like the higher contrast themes...to differentiate between parts of the script
23:20  zorph: vars, strings, tags, etc
23:22  rson: anyone know of a good test file to use when developing colorschemes?  i'd love to make my own but i never have a file that has all the specific hilight groups in it
23:25  rkhshm: rson: read the help.. could not find it .. do you happen to know.
23:25  rkhshm: I dont know if i missed it ..
23:25  rkhshm: but tried everything listed in the help but to no avail.
23:25  rson: rkhshm: one that help section (and the one below it) talks about how to set specific attributes in different types of terminals.  what terminal are you using?
23:29  rkhshm: bash
23:29  rkhshm: well basically im using putty over windows to log into my machines...
23:29  rson: ok, so you're using putty
23:29  rkhshm: yeah
23:29  rson: for the record, bash is a shell, putty is a terminal :)
23:30  rson: there may be some putty specific settings about bold fonts, i dunno
23:30  rson: in putty's config
23:30  rkhshm: yeah found that.
23:30  rkhshm: thanks
23:30  rson: that do it for you?
--- Log closed Fri Oct 29 00:00:50 2010
