--- Log opened Tue Nov 02 00:00:13 2010
00:08  thepro4ever:  i need a quick way to strip the ^M from the end of every line of a huge list of files
00:09  staz_: thepro4ever: dos2unix
00:09  thepro4ever: i need it converted to unix format basically
00:09  thepro4ever: is that a command?
00:09  staz_: thepro4ever: it's a program
00:09  thepro4ever: is there a script way i can do it?
00:09  thepro4ever: i don't have the luxury of installing programs to this server
00:11  staz_: thepro4ever: open all your file at one in vim and do a :%s/^M/\n/ on all your buffers
00:11  staz_: using :bufdo
00:12  staz_: so something like :bufdo %s/<ctrl-v><ctrl-m>/\n/
00:13  mhi^: vimgor: ff
00:13  vimgor: See :h 'fileformat'. E.g. ':set ff=unix' or ':w ++ff=dos' or ':e ++ff=mac'. Explanations: http://vim.wikia.com/wiki/Change_end-of-line_format_for_dos-mac-unix
00:13  mhi^: @ thepro4ever
00:14  thepro4ever: woah how do i open more than one file with vi
00:14  thepro4ever: vi * ?? won't that open a bunch of separate terminals
00:14  thepro4ever: and crash my os
00:15  staz_: what os and vim version are you using ? o.O
00:15  thepro4ever: i'm using debian lenny, vi improved 7.1
00:17  et: sed -i 's/^M$//' *
00:19  FernandoBasso: the most improved is already 7.3. :D
00:19  FernandoBasso: 7.1 is a little less improved.
00:20  et: that doesn't seem to work (took it from a website)
00:20  et: sed -i 's/'$(echo -ne \\r)'//' *
00:20  et: this one seems to do it.
00:21  et: hm
00:22  et: sed -i -e
00:22  FernandoBasso: thepro4ever: You can't open more than one file in vim?
00:23  thepro4ever: FernandoBasso: i've never tried to open more than one at a time because i don't know how
00:23  FernandoBasso: thepro4ever: Well. There are many ways.
00:23  et: of course you can
00:23  et: but using vim to strip carriage returns is, like, overkill.
00:23  FernandoBasso: thepro4ever: But then be prepared to also learn how to manage them.
00:24  thepro4ever: so basically i need to do something like this, find ./ -type f -exec dos2unix {} \;
00:24  Raimondi: thepro4ever: That should work.
00:24  thepro4ever: ??
00:24  Raimondi: vim *  in the dir you have the files
00:24  Raimondi: Oops! seems like I'm answering the wrong question.
00:24  thepro4ever: heh
00:24  thepro4ever: i was about to say
00:25  thepro4ever: anybody see anything wrong with my command, i found that the server does have dos2unix on it
00:25  thepro4ever: so basically i need to do something like this, find ./ -type f -exec dos2unix {} \;
00:26  et: and why don't you do something exactly like this?
00:27  thepro4ever: et: like what?
00:28  et: find . -type f -exec dos2unix {} \;
00:28  thepro4ever: thats what i'm saying
00:29  thepro4ever: i'm hesitant about every command i type
00:30  thepro4ever: omg here goes, i'm going to blow up the server now
00:30  poppiez: quit
00:32  indiefan2a: is there a way to change the location of vim's window title bars (where it shows the filename) from bottom to top?
00:33  strull: no
00:33  thepro4ever: damnit that didn't work
00:34  thepro4ever: now i get segmentation faults when running java instead of core dumps
00:35  thepro4ever: basically someone handed me an install thats blowing up because all teh files have ^M in them and it has an internal jre as well
00:35  thepro4ever: i'm thinking maybe i should have excluded binary files in that command somehow
00:36  strull: thepro4ever: time to recover your backup, I guess
00:36  thepro4ever: strull: i still have the install
00:36  thepro4ever: its a zip file, i guess the guy didn't know about dos 2 unix troubles
00:37  thepro4ever: i can just unzip it again back to its first broken state
00:37  thepro4ever: i'm just a lowly support tech that does what hes told
00:37  thepro4ever: technically my job is done unzipping it, they never said make it run
00:41  mhi^: did you actually try what the link said?
00:41  staz_: shouldn't java works with both line terminaison transparently?
00:43  thepro4ever: mhi^: what link?
00:43  mhi^: when I highlighted you
00:44  mhi^: vimgor: ff
00:44  vimgor: See :h 'fileformat'. E.g. ':set ff=unix' or ':w ++ff=dos' or ':e ++ff=mac'. Explanations: http://vim.wikia.com/wiki/Change_end-of-line_format_for_dos-mac-unix
00:46  thepro4ever: yeah but i don't know how to run that on a whole directory of files
00:46  thepro4ever: with subdirectories
00:53  mhi^: thepro4ever: Do all of the files in the subdirs have to be converted?
00:53  thepro4ever: yes
00:54  mhi^: then go to the root dir and ":args **/*", you can check all arguments with just ":args" then
00:54  mhi^: then ":argdo", like described in the link (bottom)
00:55  mhi^: (or middle)
01:00  thepro4ever: this is what i do for a living http://www.youtube.com/watch?v=W8_Kfjo3VjU
01:04 --- Walt_ is now known as Walt
01:05  wallish: I was hoping someone could help me:  It seems that in gvim, 'set t_vb=' does nothing from the vimrc.  It only works if I manually enter it each time I start gvim.  This happens on Windows 7 (and I think on arch as well).  Any idea?
01:06  mhi^: wallish: t_* means termcap and descibe terminal capabilities. gvim is a program on its own
01:06  staz_: thepro4ever: poor you
01:07  wallish: mhi^: I see.  So is there not an equivalent command that CAN be entered into vimrc for gvim to disable all visual bells at startup?
01:08  mhi^: wallish: :h errorbells and :h visualbell
01:08  wallish: mhi^: Both of those are ineffective.
01:08  thepro4ever: staz_: you like that! hah
01:08  thepro4ever: staz_: thats my job
01:09  wallish: mhi^: Actually, I should clarify.  They are effective, but only at turnong ON visualbell.  I would like no bells, visual or otherwise
01:09  DHulme: did you read the help for visualbell?
01:09  DHulme: it explains exactly how to disable the visual bell in the GUI
01:10  wallish: DHulme:  I feel like an idiot now.  I kept reading that and thinking "But I already put in t_vb= !!"
01:12  wallish: Well, thanks for the help.
01:16  thepro4ever: staz_: i like it, i get paid, i like some of the people
01:17  dab_: anyone have any ideas why 'dd' would hang slightly in vim? Using a slightly different vimrc but can't think what would cause this
01:18  strull: dab_: what gives :map dd ?
01:18  staz_: thepro4ever: I would kill someone on the second day if I had this job
01:18  dab_: strull: 'no mapping found'
01:19  dab_: strull: dab@dab ~ $ wgetpaste .vimrc
01:19  dab_: Your paste can be seen here: http://paste.pocoo.org/show/284690/
01:22  elasticdog: dab_: I'm guessing it's because of your mapping dsb, which starts with d and will trigger the timeoutlen/ttimeoutlen
01:23  elasticdog: dab_: you can test that by changing that mapping temporarily to see if the problem goes away
01:23  strull: elasticdog: it shouldn't cause trouble for dd
01:23  strull: anyway, gtg
01:23  dab_: well when i was using this .vimrc, the problem wasn't apparent http://github.com/trapd00r/configs/blob/4c92031a5fe4d224f38881409e77e1b875427c39/.vimrc
01:24  dab_: but with my .vimrc http://paste.pocoo.org/show/284690, the problem persists
01:25  elasticdog: dab_: your github vimrc doesn't have that mapping...I'd still say that's your culprit
01:26  dab_: sorry elasticdog I don't get what you mean, in my current .vimrc dd has no mapping (like the github rc)?
01:27  elasticdog: dab_: I'm talking about your mapping of 'dsb', not 'dd' directly
01:27  elasticdog: because it starts with a 'd', I'm guessing that the timeoutlen kicks in which waits for mapped key sequences to complete
01:28  elasticdog: try commenting out the line "noremap dsb mZkA<BS><BS><Esc>jjddk`Z
01:28  elasticdog: " and restarting vim
01:34  dab_: ah right elasticdog let me try that
01:35  dab_: elasticdog: bingo, thanks for that (=
01:35  elasticdog: yep...you can either adjust timeoutlen/ttimeoutlen, or just throw <Leader> in front of that mapping if it annoys you
01:37  dab_: its ok elasticdog i think i can survive without that map completely
02:58 --- estragib_ is now known as estragib
--- Log closed Tue Nov 02 05:10:54 2010
--- Log opened Tue Nov 02 07:45:23 2010
07:45 --- Users 543 nicks [0 ops, 0 halfops, 0 voices, 543 normal]
07:46 --- Channel #vim was synced in 69 seconds
07:58  jorrit: Hi
08:06 --- roman is now known as Guest93721
--- Log closed Tue Nov 02 09:14:15 2010
--- Log opened Tue Nov 02 09:14:38 2010
09:14 --- Users 548 nicks [0 ops, 0 halfops, 0 voices, 548 normal]
09:15 --- Channel #vim was synced in 73 seconds
09:42  the_isz: i have some gripe with command mode completion. when i have a directory including a space, the completion completes the directory name, but doesn't escape the space(s). this is specifically stupid because it even removes the \'s if i insert them manually and then complete again.
09:42  the_isz: is there a workaround for this?
09:43  frogonwheels: the_isz: windoze?
09:43  the_isz: frogonwheels: no, linux
09:44  frogonwheels: the_isz: hmm.. works for me.. you mean on the : command line don't you?
09:44  the_isz: frogonwheels: yes, i do
09:44  the_isz: frogonwheels: like in  :find my\ dir/
09:45  frogonwheels: the_isz: to be clear, you type  :e  my<tab>
09:45  frogonwheels: hmm.. find
09:45  the_isz: frogonwheels: yep
09:45  frogonwheels: yup works
09:45  frogonwheels: hmm
09:45  frogonwheels: version?
09:45  the_isz: frogonwheels: VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Sep  4 2010 19:49:36)
09:46  frogonwheels: haven't tried 7.3  yet.  I'm on  7.2 pl 330
09:46  the_isz: maybe a regression bug...
09:47  Kuukunen: works in 7.1 just fine
09:47  the_isz: can anyone else using 7.3 confirm?
09:49  strull_: the_isz: works here just fine too (vim 7.3)
09:50  the_isz: hmm...
09:50  Raimondi: Works here too 7.3
09:50  the_isz: thanks, strull_
09:50  the_isz: thanks, Raimondi, too, so i'll have to keep looking...
09:52  iaj: is there someway to improve the speed of showing the current tag in taglist.vim?
09:54  Raimondi: iaj: I think it depends on cursorhold, so you can change updatetime to a lower value.
09:55  iaj: Raimondi: what's the setting for cursorhold-updatetime?
09:56  iaj: another thing can I have a mapping declared locally for that buffer only?
09:56  Raimondi: The setting is updatetime, the autocmd event is cursorhold
09:57  Raimondi: Yes, see  :h :map-<expr>
10:01  iaj: thanks
10:01  iaj: :-
10:10  the_isz: hmm... starting vim both with '--noplugin' or '-u NULL' seems to solve my problem... argh... if i only knew which setting is causing this...
10:13 --- dhruvasagar is now known as Guest28177
10:28  FernandoBasso: The jQuery.vim does not support comments properly. I think I could just match evertything between /* */ and add a color to it.
10:36  marekw2143: how to refresh currently opened file?
10:37  estragib: :redraw or :e , depending on what you mean by 'refresh'
10:37  tylerl: So, I put "# vim: set syntax=conf" at the top of my file, and it doesn't change my syntax scheme. (but typing ":set syntax=conf" does)
10:37  tylerl: what am I msssing?
10:37  marekw2143: estragib: update content of file, that is currently opened
10:38  estragib: marekw2143: :e then
10:38  marekw2143: estragib: thanks
10:40  tylerl: are certain files not parsed for modelines perhaps?
10:40  estragib: tylerl: the modeline variant with 'set' needs a terminating
10:40  estragib: ... terminating :
10:40  estragib: "# vim: set syntax=conf:
10:40  tylerl: estragib: "# vim: set syntax=conf:" still no effect
10:40  estragib: huh
10:41  tylerl: does .vimrc override modeline settings maybe?
10:41 --- izibi_ is now known as izibi
10:42  tylerl: ..no. renamed my .vimrc and I still get no love :(
10:42  estragib: if it's not sensitive, pastebin your conf somewhere?
10:43  the_isz: damn, i was disconnected. did anyone say something concerning my problem?
10:45  tylerl: estragib: successfully reproduced with the following modified config file: pastebin.com/5DNhw0FC
10:46  tylerl: hm. if I put it on another server, it works...
10:46  tylerl: *the plot sickens*
10:46  estragib: :) works here too.
10:47  estragib: you're not opening as root by chance?
10:47  tylerl: estragib: oh, there you go.
10:48  tylerl: forgot about that restriction
10:48  estragib: :)
10:51  Dynetrekk: hi. I want to search for /\<quasi and let the cursor jump to the i, the last letter. how can I do this?
10:52  FernandoBasso: Dynetrekk: /\<quasi/e
10:52  FernandoBasso:  e = end
10:52  Dynetrekk: FernandoBasso: thanks, I'll give it a go
10:53  Dynetrekk: FernandoBasso: what is the :h command to read about such things?
10:54  FernandoBasso: Dynetrekk: try :help usr_10.txt
10:54  Dynetrekk: FernandoBasso: thanks!
10:54  FernandoBasso: No, it is not there.
10:55  FernandoBasso: Found usr_27
10:56  FernandoBasso: 27.3 - Offsets.
10:56  bairui: :) I love this channel :)
10:56  FernandoBasso: Me too.
10:56  FernandoBasso: ☺
10:56  bairui: :)
11:06  sktrdie: hey guys, i'm using Java Doc and would like vim to automatically add the * stars for commenting when i do a new line... is there a way for this?
11:06  fow: sktrdie, try :se fo+=c fo+=r fo+=o  " see :h fo-table
11:07  sktrdie: hrm what?
11:08  bairui: see the help before asking for more. :)
11:08  fow: add the c, r, and o flags to the fo option. This should happen automatically, though I'm not even sure if it'll do what you want
11:09  bairui: Vim can certainly handle automatically adding the continuation comment leaders. It's just a matter of learning how.
11:10  fow: I wasn't sure if Java used only // comments and the * was something for Java Doc or if Java used both /* */ and // comments
11:11  bairui: well... I think Vim forces you to choose a continuation preference in that case, which is only natural.
11:17  sktrdie: fow: thanks
11:28  srk9: I have 3 files open in vim using :vsplit and I want to move the left file to the right of the screen. How can I do that without closing them and reopening them?
11:28  kurkale6ka: try ^wH
11:28  FernandoBasso: Yeah. Upercase H
11:30  srk9: Thanks guys. :)
11:32  FernandoBasso: :)
11:37 --- daniel__ is now known as daniel
11:40  sis: hello
11:44  sis: which shell integration do you use in vim? (I've found counque is a promising plugin, but that does not support helldoors :) )
11:48  mhi^: none
11:49  mhi^: I used to use conque for running the current file in gdb, but it wasn't flexible enough
11:49  rson: conque is the best i've found at this point.
11:50  rson: the author of conque sent a message to one of the vim mailing lists about the state of shell plugins
11:53  sis: thank you
11:58  rson: sis: http://groups.google.com/group/vim_use/msg/22c97ebfd6a978eb that's the mail if you're interested
11:59  sis: rson: thank you very much!
12:00  rson: np
12:00  rson: i like to rant on this topic a lot, i've done my research :)
12:02  sis: :)
12:02  LeoNerd: sir_lewk: Nope.. Mine is independent, just happens to unfortunately have the same name. So can't help with the latter...
12:17  the_isz: ok, i'd like to ask again. even when started with '-u NONE --noplugin' and just setting 'set nocp', my vim doesn't escape spaces in file names. any ideas what i should try?
12:22  csmrfx: I found a paste bug in vim
12:23  csmrfx: pasting a couple of lines, and then undoing leaves 3 last lines of the paste
12:30  amcsi: hello
12:30  amcsi: how do I find out if my terminal supports only 16 colors?
12:31  LeoNerd: Try more of them?
12:31  LeoNerd: Arthur C Clarke, and all that :)
12:32  csmrfx: ahm, well, could reproduce that twice but no more
12:32  csmrfx: weird
12:33  Nyoxi: amcsi: if you trust your terminfo then run 'tput colors' ... or do :set t_Co from vim
12:34  LeoNerd: Hah..  TERM=xterm tput colors  =>  8
12:34  LeoNerd: I distrust that
12:38  KukMan: Is there any command to enter new line. Something similar to i<Enter><esc>
12:38  Nyoxi: LeoNerd: heh
12:38  Nyoxi: KukMan: no, make a mapping
12:38  KukMan: ок
12:41  LeoNerd: Easiest way to probe terminal's capabilities is likely to throw it sequences and see what it does
12:42  Nyoxi: sure, but not everyone knows how to do that
12:43  KukMan: How use many registers with yank, delete and put commands?
12:48  bairui: KukMan: you might like to try: http://github.com/dahu/Insertlessly
12:54  KukMan: thank you
12:58  bairui: np
13:04  iaj: is there some way to have urls highlighted in basic txt files?
13:04 --- silex is now known as Silex
13:10  FernandoBasso: iaj: txtfmt
13:10  FernandoBasso: Take a look at it.
13:13  the_isz: strull_, Raimondi: which patch versions are included in your 7.3 built? my  :version  says 1-3 at the top.
13:19  iaj: FernandoBasso: thanks - is the only way to get that behaviour by installing additional plugins?
13:19  FernandoBasso: iaj: I'm not sure, but I think the answer is 'yes'.
13:20  FernandoBasso: iaj: Just curious, what are this txt files for?
13:21  iaj: FernandoBasso: mostly todo lists and stuff like that
13:24  FernandoBasso: iaj: I do them with txtfmt. I don't like to use a word processor for stuff like that, and sometimes plain text is not enough. That is why I like txtfmt. I don't need to miss my beloved vim. :D
13:24  iaj: hmmm that documentation is sooo huge and scares me :-)
13:25 --- Natch is now known as Natch|
13:25  FernandoBasso: iaj: I must admit that it is not that easy to customized it. I didn't customize too much myself.
13:26  iaj: FernandoBasso: that's what I thought
13:26  FernandoBasso: I think it is a plugin that should be included in futures vim releases.
13:51  dfrank: hello All. I can't find what command return me list of features that Vim is built with?
13:51  strull_: dfrank: try :ver
13:52  dfrank: strull_: thanks, this is what i need
13:55  dfrank: strull_: hmm, another question. I trying to use plugin Gundo, but it tells me that it needs Python 2.4+.   :ver tells me that i have +python/dyn and +python3/dyn. I don't understand this. Maybe you know?
13:57  kedy07: I'm helping a friend set up his vim in Mac. I'm not familiar with mac, so we have run into some problems. First when you open a file in vim the text flashes. Does anyone know why?
13:58  robgleeson: yeah.
13:58  robgleeson: you're most likely using a 256 colorscheme.
13:58  kedy07: Yes, I am, I like the desert256 colorscheme =)
13:59  kedy07: Is that a problem?
13:59  kedy07: Does mac not support 256 colors?
13:59  graywh: mac's terminal.app only supports 8 colors
13:59  graywh: plus, it's a crappy terminal
14:00  kedy07: hmm, i disabled my .vimrc yet some text still flashes
14:01  Silex: set noflash ?
14:01  Silex: </quickguess>
14:03  iaj: kedy07: i suggest you use iTerm :D
14:04  kedy07: Ok, fixed the flashing when I turn vim 256 colors off.
14:04  kedy07: iaj: ok thanks i'll take a look into it
14:04  graywh: what do you mean by "turn [it] off"?
14:05  kedy07: craywh: comment lines in .vimrc
14:06  graywh: were you using :set t_Co=256 ?
14:06  kedy07: well actually, i had set his bash terminal to 256 colors too, so that was actually the reason why when i commented some lines in the vimrc before it still flashed
14:07  kedy07: yes. yes i was
14:07  graywh: b/c that's so wrong
14:07  kedy07: i just copy pasted everything from my linux box over here hoping everything would work, i don't know squat about mac ox
14:07  graywh: :set t_Co=256 is wrong on every system
14:08  kedy07: really? what should it be?
14:09  Silex: default?
14:09  deryni: Not set manually.
14:09  graywh: set the proper $TERM for your terminal
14:10  graywh: and for terminal.app, that's vt100
14:11  kedy07: so how would it be in mac? like this? export TERM=vt100?
14:11  graywh: application prefs
14:11  Silex: it'd be set to that by default no?
14:12  graywh: no, it incorrectly defaults to xterm like everything else
14:12  Silex: I mean, set to a correct value
14:12  graywh: don't set $TERM in your shell startup, either
14:12  graywh: unless you absolutely have to (*ahem* gnome-terminal)
14:12  Silex: hum, what would using vt100 change over xterm?
14:12  Silex: ability to use the ALT key for example?
14:13 * Silex makes a note to try vt100 when he's at home
14:13  kedy07: Ok, I'll try it
14:15  kedy07: ok now when I open something in vim, everything is white
14:15  The_User: Hi
14:15  The_User: is there a file containing all vim-digraphs?
14:16  The_User: (a file, not :digraph)
14:19  graywh: kedy07, worry, dtterm
14:19  graywh: s/w/s/
14:19  kedy07: graywh: huh?
14:20  Pendrag0n: Ok, someone helped me, I figured out that  cat /proc/PID/environ | xargs -0 echo | sed -n 's/.*WINDOW=\([0-9]*\).*/\1/p'  will show me which screen a file is open in when I am using vim in 10 screens with 10 files open per vim
14:20  graywh: better $TERM for terminal.app is dtterm
14:20  Pendrag0n: now is there any way to hack that into vim so that when I try opening an already opened file I can have it tell me what window it is in place of or at least in beside the PID
14:21  Pendrag0n: so it can say "file: x.foo is already opened in window 4 of your screen session."
14:22  kedy07: graywh: I tried dtterm just now. It looks like xterm.
14:24  graywh: kedy07, looks isn't the only difference when changing $TERM
14:24  kedy07: graywh: I know, but right now I'm trying to get desert256 colorscheme to work.
14:24  graywh: kedy07, it can't work in terminal.app
14:27  kedy07: graywh: Oh I see. Then i shall wait till iTerm finishes downloading and try that. Thanks for all the help!
14:27  The_User: or is there a way to save the output of :digraph into a file?
14:28  graywh: The_User, you can :redir it
14:31  The_User: graywh: thanks
14:31  The_User: bye
14:41  catsup: Pendrag0n: instead of cat /proc/$$/environ|xargs -0, try "env"
14:41  dp: how can I replace a column of text with a specific value? I thought I could ^V, hilight, then R, but that removed the whole line
14:41  catsup: (also you don't need cat, xargs -0 echo < /proc/$$/environ works)
14:41  graywh: dp, r, not R
14:42  dp: graywh: awesome! thanks
14:42  catsup: (my hobby: eliminating superfluous uses of 'cat')
14:44  Silex: what do you guys use to edit files remotely over ftp/ssh/whatever inside vim?
14:45  rson: netrw
14:46  rson: catsup: s/catsup/sup/
14:48  Silex: ty
14:49  catsup: rson: s/^...//
14:49  catsup: heh, the ^ is superfluous
14:51 --- BBonifieldd is now known as BBonifield
15:04  rdpate: catsup: not with :set gdefault :)
15:14  Pendrag0n: catsup: evn doesn't work on this fedora box, it is environ
15:14  Pendrag0n: it does work though
15:14  Pendrag0n:  Ok, someone helped me, I figured out that  cat /proc/PID/environ | xargs -0 echo | sed -n 's/.*WINDOW=\([0-9]*\).*/\1/p'  will show me which screen a file is open in when I am using vim in 10 screens with 10 files open per vim  now is there any way to hack that into vim so that when I try opening an already opened file I can have it tell me what window it is in place of or at least in beside the PID  so it can say "file: x.foo is already opened in window 4 of y
15:15  Silex: how easy is it to have buffers that only belongs to a windows?
15:15  graywh: Pendrag0n, :h SwapExists
15:15  Silex: e.g I want a ^Wn where going :bn inside it only switches between buffer 1 & 2
15:15  Pendrag0n: ok
15:15  Silex: and the other window should cycle through buffer 4-5-6
15:16  graywh: Silex, can't be done
15:16  Silex: graywh: okay, I need tabs for it I guess
15:16  Silex: or I simply forget about it
15:17  Silex: graywh: I'm a bit confused by windows... how do I make :bd not delete the window if it's the last buffer of that window?
15:18  graywh: you have to switch buffers first
15:18  Pendrag0n: graywh: thanks, I will try to figure out how to set a v:swapcommand or v:swapchoice to run that grep sed junk and tell me what screen's window that file is already open in
15:18  graywh: someone has a smart buf-delete :command
15:18  Pendrag0n: graywh: I am guessing that is something I can override in my .vimrc file correct?
15:19  graywh: Pendrag0n, yes
15:19  Pendrag0n: sweet
15:19  Pendrag0n: lol, it is going to take me 2 days to figure this out though
15:19  spiiph: Pendrag0n, simple solution: never delete buffers.
15:20  spiiph: (Try it, you'll like it.)
15:20  Pendrag0n: spiiph: delete buffers?  I don't think I am talking about deleteing anything or anything to do with buffers
15:20  Silex: graywh: hum I don't get it, I go :sp, then I go :bn through some buffers, then I want to delete one of them and type :bd and poof my split is gone
15:20  spiiph: :bd deletes a buffer
15:21  Silex: graywh: there seem to be some magic going on about buffers belonging to a window, about if they're already loaded or not etc. I'm confused
15:23  graywh: Silex, deleting a buffer closes any windows it's in, except for the last window
15:24  Silex: graywh: okay, how am I supposed to do then?
15:24  graywh: to prevent the window from closing, you can switch the buffer in that window, *then* delete the buffer
15:24  Silex: so hum, :bdN ?
15:25  graywh: basically, :bn|bd#
15:25  Silex: oh, smart
15:26  silasdavis: How can I append a string to the end of every line in a visual selection?
15:27  gkatsev: :<,>,s/$/somestring/
15:27  gkatsev: :'<,'>s/$/somestring/ that is
15:27  gkatsev: silasdavis: ^
15:28  silasdavis: I thought I could use A, like you can use I in visual mode
15:28  graywh: visual block mode
15:28  silasdavis: but I now see I doesn't work as expected in bloody windows vim
15:28  silasdavis: ah
15:28  gkatsev: vim on windows is the same as non-windows vim, as long as you delete the default windows vimrc
15:28  silasdavis: yeah that does work
15:29  silasdavis: gkatsev: I did that but I had some very broken behaviour initially I recall
15:29  gkatsev: there is like the 'behave msdos' or whatever that is the particular problem
15:29  Pendrag0n: graywh: just out of curriousity, would you have any idea how to set those in a vimrc file so that it would tell me what screen the file was already opened in, but still provide the open, edit, readonly options?
15:29  gkatsev: behave mswin
15:30  graywh: Pendrag0n, no idea
15:30  gkatsev: delete it.
15:30  Pendrag0n: k
15:32  silasdavis: Pendrag0n: what screen? in GNU screen..?
15:32  silasdavis: gkatsev: yeah not sure what my problem was with my linux vimrc, but it seems to be okay without that stuff now
15:33  gkatsev: silasdavis: perhaps you had some linux only option not guarded against?
15:34  the_isz: last time asking this here before writing an email to the vim-devs: even when started with '-N -u NONE --noplugin', my vim forgets to escape spaces when completing file names in command mode. anyone got an idea what could be the reason? i'm on vim 7.3.
15:35  Pendrag0n: silasdavis: screen is a command that allows you to have kinda like tabs within a single bash session, it is very useful with putty for 2 reasons, you can detatch a screen at work and then reattach while at home, and pick up where you left off, and you can share it with another user, O and a third use, it gives you multiple windows (like tabs expressed in the title bar) within the same window
15:35  Pendrag0n: man screen
15:36  silasdavis: Pendrag0n: I know what screen is, I just wondered if that's what you meant by 'which screen'
15:36  Pendrag0n: o I meant which window
15:36  Pendrag0n: I often have 10 open and in each vim 10 files or more open
15:36  graywh: the_isz, no problem for me
15:36  Pendrag0n: then I try to edit a file that is already open and I have to play where's waldo to figure out which freeking window it is open in
15:37  Pendrag0n: however vim does provide the pid of that thing opeing that file already
15:37  graywh: the_isz, and by command mode, don't you really mean cmdline mode?
15:37  graywh: it makes no sense to complete filenames in command mode
15:37  Pendrag0n: and I found the command to tell me which window it is in, now I just need to hack that into vim so it will just say "hey this file is already open in window 4" or something like that
15:38  the_isz: graywh: yeah, Raimondi and strull_ also confirmed they don't have this with 7.3.
15:38  the_isz: graywh: i mean the mode you get in after pressing :
15:38  graywh: the_isz, what OS and filesystem?
15:38  Pendrag0n: silasdavis: If I said which screen, that was a typo, I meant which window :-)
15:38  the_isz: graywh: 32-bit linux (arch), tried both on ext4 and ntfs.
15:39  the_isz: graywh: the os is running inside a vm, if that makes a difference...
15:40  the_isz: graywh: sorry, have to correct: tested on ext4 and vboxsf.
15:40  silasdavis: Pendrag0n: I suppose one way that might work would be to wrap the command invoking vim with a script that looks at the temporary vim files, gives you the info then launches vim
15:41  FernandoBasso: the_isz: I use arch here and that doesn't happen.
15:41  silasdavis: I'm not sure why the new instance of vim would know about the instance of vim editing the same file in the other window
15:41  the_isz: FernandoBasso: very strange... must really have something to do with running inside a vm then...
15:42  the_isz: FernandoBasso: and you're up-to-date package-wise? not running a self-compiled vim?
15:42  FernandoBasso: the_isz: How are the files named like exactly?
15:42  FernandoBasso: the_isz: I run the default package from the repos.
15:42  Pendrag0n: well I found a command that will tell me the window number via providing the pid, and vim knows the PID, and graywh: had me look at h: SwapExists which let me know that there are  swapcommand and swapchoice arguments that I can override somehow in my vimrc file.  I am close, just I don't know quite how to use those or to override them yet
15:42  the_isz: FernandoBasso: created like 'mkdir ~/my\ test'
15:42  Pendrag0n: but I did think of that
15:43  FernandoBasso: the_isz: mkdir my\ test does not create one dir, but two.
15:43  Pendrag0n: silasdavis: I'm not sure why the new instance of vim would know about the instance of vim editing the same file in the other window  << because it sees a swap file and looks in /proc/PID/environ to figure out what is editing it
15:43  Pendrag0n: it looks for swap files basically
15:43  the_isz: FernandoBasso: in vim, saying  :find ~/my<Tab>  completes to  :find ~/my test
15:43  FernandoBasso: Do mkdir "my test" instead.
15:44  the_isz: FernandoBasso: that's not true
15:44  FernandoBasso: Well, I'm confused.
15:44  the_isz: FernandoBasso: try it
15:44  silasdavis: Pendrag0n: but would that link to which screen window it is open in?:
15:44  FernandoBasso: I did. You are right.
15:44  the_isz: FernandoBasso: there's more than one way of escaping spaces
15:44  Pendrag0n: silasdavid: oh, you are asking that, I had to figure that out myself, see it knows the PID
15:44  FernandoBasso: the_isz: Anyway, I can :edit 'my test'
15:45  Pendrag0n: lets say the PID is 5000
15:45  the_isz: FernandoBasso: i can do that, too, the problem is the completion
15:45  silasdavis: you can send 'whereis 5000' to screen itself?
15:45  Pendrag0n: then you just put this:  cat /proc/5000/environ | xargs -0 echo | sed -n 's/.*WINDOW=\([0-9]*\).*/\1/p'  and it tells me which window
15:45  silasdavis: right
15:45  the_isz: FernandoBasso: please try the example i gave above
15:46  Pendrag0n: now I need to somehow override a command in my vimrc to run that and echo it to the screen if it exists when a swapexists
15:46  Pendrag0n: and bam, done, but I am not sure how to do that just yet
15:46  silasdavis: Pendrag0n: why not invoke via a script that checks the swp file just like vim is doing, and do your stuff
15:46  Pendrag0n: silasdavis, that would work if I was just typing vim filename
15:46  silasdavis: I suspect the 'edit open file' behaviour might be hard-coded in vim
15:46  Pendrag0n: but if I do this, vim filename then CTRL+w,n   e: secondfile
15:47  catsup: Pendrag0n: not evn, env
15:47  Pendrag0n: that doesn't use the wrapper
15:47  silasdavis: ah
15:47  FernandoBasso: the_isz:  :find my temp/ (E172: Only one file name allowed)
15:47  Pendrag0n: oo
15:47  Pendrag0n: I didn't catch taht before catsup, let me look
15:47  the_isz: FernandoBasso: that's the problem
15:47  FernandoBasso: Although with :edit it works.
15:47  the_isz: FernandoBasso: it should expand to  :find my\ temp
15:48  Pendrag0n: catsup: env is null
15:48  catsup: env is a standard unix util
15:48  Pendrag0n: hmm
15:48  graywh: yes, it's not completing correctly for :find
15:48  the_isz: FernandoBasso: you're right! oO
15:48  Pendrag0n: okay? I don't know it
15:48  catsup: it's in the gnu coreutils package
15:48  the_isz: graywh: thanks for following and confirming. so this really seems to be a bug
15:49  Pendrag0n: o nice, thanks catsup
15:49  FernandoBasso: I myself never use space separated file/dir names. I always use underscore.
15:49  Pendrag0n: that makes the command shorter
15:49  Pendrag0n: but I still need to figure out how to invoke the command when a swapexists, and how to render the results
15:49  catsup: it does exactly what 'xargs -0 echo < /proc/$$/environ' does, but it works on all unix platforms (only linux has /proc)
15:49  the_isz: FernandoBasso: yeah, i _usually_ do that, too, but there's no reason it shouldn't work
15:49  Pendrag0n: and, how to provide the PID
15:49  Pendrag0n: man thanks
15:49  catsup: wait what
15:49  FernandoBasso: I'm afraid of someday doing rm -R my stuff and instead of removing 'my stuff' remove 'stuff'.
15:50  FernandoBasso: the_isz: I see your point.
15:50  catsup: you have to run 'env' from the process you're getting the environment of
15:50  pen: FernandoBasso: it will remove my and stuff
15:50  FernandoBasso: yeah.
15:50  catsup: if you want to get the environment of another process then you have to use /proc
15:51  catsup: spaces in filenames are annoying to complete, anyway
15:51  catsup: although so is _
15:51  FernandoBasso: Not always would one do rm -r 'my stuff' to prevent accidents. So I stick with underscored file names. Although I understand that spaces should not be of any trouble for vim, as the_isz just stated.
15:52  silasdavis: Pendrag0n: see: http://objectmix.com/editors/149165-vim-set-edit-anyway-default.html
15:52  silasdavis: there might be something useful there on how to override the default open behaviour
15:53  silasdavis: then perhaps you can your own vim script to do what you what
15:53  the_isz: FernandoBasso, graywh: yeah, i'll write the devs about this, it seems to be a bug. thank god someone could confirm this.
15:55  Pendrag0n: hmm
15:55  Pendrag0n: I'll work on it, thanks for finding that link, I need to do something for work real quick
15:55  Pendrag0n: bbl guys
15:55  silasdavis: Pendrag0n: see also: http://www.ibm.com/developerworks/linux/library/l-vim-script-5/index.html
15:55  silasdavis: let us know how you get on, I'd quite like to override vim's open behaviour for a few purposes.
16:07  BBonifield: i'm trying to decrease the tab level of a given block of text, but it seems like each time i do "V [select 10 lines] <" it is actually decreasing 2 indents instead of one
16:07  spiiph: vimgor, indent
16:07  vimgor: For a quick overview of Vim's indentation settings, see http://vim.wikia.com/wiki/Indenting_source_code
16:08  spiiph: Hint: check your 'shiftwidth'
16:10  BBonifield: spiiph: ahh perfect, thank you much!
16:10  spiiph: np
16:10  _rane: hello, any idea why I'm getting these errors when I use vim on a remote computer via SSH? this doesn't happen when I use the computer locally. both systems are OS X. http://pastie.org/1266817
16:12  _rane: also, remotely it's complaining about lack of ruby support (command-t.vim requires Vim to be compiled with Ruby support), this also doesn't happen locally :[
16:13  paradigm: _rane: the only thing I can think of is you've got it set up to do things differently on SSH than locally.  Maybe when SSH'd you've got a different PATH wwhich sees a different version of vim.
16:14  iaj: someone happens to do java development in vim?
16:14  bosie: is there a way to delete the character under the cursor without going into insert mode afterwards
16:14  the_isz: bosie: x
16:15  bosie: is there a way to delete the character under the cursor without going into insert mode afterwards and without the character being put into the buffer?
16:15  bosie: ;)
16:15  the_isz: bosie: "_x
16:15  Raimondi: bosie: "_x
16:16  Raimondi: echoe
16:16  the_isz: bosie: but why do you (think you) need that?
16:16  the_isz: Raimondi: ;P
16:16  bosie: the_isz: because it happens quite a bit that i already have something i want to paste in my buffer that would get overridden otherwise
16:17  the_isz: bosie: see  :reg  . you can access older registers (not buffers!).
16:17  the_isz: bosie: if that's not enough, have a look at YankRing.vim.
16:17  bosie: i thought the copyboard in vim is a buffer?
16:18  the_isz: bosie: no, those are registers.
16:18  bosie: hm, interesting
16:18  _rane: paradigm: meh, which vim shows /usr/bin/vim and that should be the only vim there is
16:18  bosie: thanks the_isz
16:18  the_isz: bosie: see  :he registers
16:20  the_isz: bosie: you're welcome
16:21  _rane: this is rather annoying
16:21  paradigm: iuno
16:21  paradigm: the only guess i've got left is that you're ssh'ing into the wrong machine, but I expect you've verified that's not the case
16:22  _rane: I have :)
16:23  Silex: :h foo has become _really_ slow
16:23  Silex: what could cause this?
16:23  Silex: should I just try to regenerate my tags?
16:24  Silex: I searched for "tags" and the biggest tag file is 9K... hardly something difficult
16:25  PelleTut: how can I delete something without overwriting what's already in the clipboard? say I yank a line, then I delete something then I want to paste what I first yanked
16:26  paradigm: prefix the delete command with "_
16:26  spiiph: Or use "0p to paste from the yank buffer
16:26  paradigm: "_dd, to delete a line without overwriting the clipboard
16:26  iaj: PelleTut: id visual select the stuff that should be replaced, hit p... then you got the deleted lines in "" afterwards.
16:44  Scala: I wish that when you do a yyjVp it didn't overwrite the 1st line stored in the copy buffer with the 2nd line. I want to do things like yyjVpjVpjVp and copy the 1st line over the 3 underneath it but I can't
16:45  graywh: Scala, the yanked line is still in "0
16:45  mgedmin: why not yyj"_d3dP ?
16:46  Scala: mgedmin: Well sometimes I want to yank a line and overwrite various lines throughout the file, not necessarily 3 in a row
16:46  mgedmin: I hear you
16:46  mgedmin: "_ddP is longer than Vp
16:47  mgedmin: as graywh said, V"0p is an option
16:47  Scala: I guess I have no choice but to do V"0p though... I feel like the text you copy over shouldn't count as being deleted in this case though
16:50  Pendrag0n: so I am so darn close, I need to set up an autocommand in my vimrc file for this already opened file...
16:50  Pendrag0n: I just have to figure out how to capture it's PID which is shown on the screen as a vim var so I can pass it to my oneliner and echo the window number
16:51  the_isz: Scala: please have a look at YankRing.vim. i wouldn't want to live without it ;)
16:51  Scala: the_isz: Looking into it now
16:56  Scala: the_isz: So you can paste something and use a command and swap what you just pasted with old yanks?
16:58  the_isz: Scala: yep
16:58  the_isz: Scala: it mimics emacs' kill-ring
16:58  Scala: the_isz: Nice.
16:58  the_isz: Scala: very. i love it.
16:59  FernandoBasso: I copy the text to a sheat of paper before I delete it, so that I can remember what I have deleted in case I need it again. ☺
17:00  the_isz: FernandoBasso: good idea! ;P
17:00  FernandoBasso: hehe
17:04  Scala: the_isz: Thanks, this is pretty awesome. Just what I was looking for :)
17:12  the_isz: Scala: glad to hear that. i'll be off. bye everyone!
17:48  Silex: MarcWeber: how would I regenerate *all* plugin tags with vim-addon-manager?
17:49  Silex: MarcWeber: I ask because :UpdateAddons doesn't work on plugins that were fetched from vim.org
17:49  Silex: *plugin help tags
--- Log closed Wed Nov 03 09:20:57 2010
