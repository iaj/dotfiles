--- Log opened Wed Jan 05 00:00:39 2011
00:04  nate-: frogonwheels: it's hard to put into words tbo... I've built an indent guides plugin that matches spaces and tabs at the start of a line
00:04  nate-: I'm trying to allow users to customise the size of the highlight
00:04  nate-: works perfectly for soft-tabs, but hard-tabs are proving more difficult
00:05  frogonwheels: nate-: you could always try coloring a tab differently if it crosses a boundry.
00:09  frogonwheels: nate-: which you could do with  :h \%v
00:09  nate-: kk, I'll give it a try
00:09  nate-: frogonwheels: this is what I'm aiming for btw: http://imgur.com/Lp9BN
00:10  nate-: http://i.imgur.com/Lp9BN.png
00:10  nate-: woops
00:12  frogonwheels: nate-: oh. but you want to highlight only a single char of a tab?
00:12  nate-: yea
00:13  frogonwheels: nate-: think you might be sol on that one. um.. you know about 'list' and 'listchars'  presumably.
00:14  nate-: frogonwheels: yea I do, but I'm wanting it to look consistent with space and tab indents
00:15  nate-: had a funny feeling there may not be a solution to this, I'll keep trying though :P
00:16  strull: nate-: maybe you want to look at :help 'cc
00:16  strull: only in vim7.3 though
00:21  kongo: colorcolumn will highlight the column(s) for the whole screen
00:21  nate-: yea, I've thought of that
00:22  nate-: decided against cc
00:38  EspadaV8: is it possible to paste a value that was obtained via 'input' ?
00:39  EspadaV8: ah ha
00:39  EspadaV8: let @x = input('what is your name? ')
00:39  EspadaV8: and then "xp
00:43  homekevin: I suppose if you don't want to trash a register you could do let val =... then "=var<CR>p
00:43  homekevin: Make that var val... or vice versa
00:45  EspadaV8: ah, that'd also work :)
00:45  EspadaV8: thanks
00:45  fow: couldn't you do just "=input('what is your name? ')<CR>p   ?
00:46  homekevin: That would never work
00:46  homekevin: Actually in a script I'd try :put rather than "...p
00:48  EspadaV8: i was trying to record a macro (i think that's what it's called)
00:49  EspadaV8: with `q`
00:49  EspadaV8: a 'complex repeat'
00:50  EspadaV8: but i've spent way more time trying to get it working than manually doing it :(
00:56  tonymec|away: homekevin: :put x is always linewise. For characterwise use :normal "xp
00:58  iamphi: How do I view unicode character in gvim for windows?
00:59  spiiph: ?
00:59  spiiph: :set encoding=utf-8, perhaps
01:01  danielsh_: :set guifont=*
01:01  iamphi: spiiph: that works.  thanks
01:05  spiiph: np
01:05  tonymec: iamphi: for mode detailed explanation, see http://vim.wikia.org/wiki/Working_with_Unicode and the help tags to which it refers
01:29  spiiph: tonymec, I wonder if setting the global value of 'fenc' is necessary in that snippet, since the value of 'enc' will be used if 'fenc' is empty. Might be good for educational purposes, of course.
01:29  spiiph: Nevermind, that's even described below.
01:46  tonymec: spiiph: you may want a default other than UTF-8 -- for instance latin1 -- for "most" new files you create, while still being able to R&W files in any encoding thanks to enc=utf-8. Then you set enc=utf-8 and you setg fenc=latin1
01:49  tonymec: Similarly, with setg fenc=latin1 bomb   new files will be created by default in Latin1 (which cannot have a BOM) but new Unicode files will by default have a BOM
01:51  spiiph: tonymec, true.
02:15 --- RobotCow is now known as Evoken
02:31 --- tonymec is now known as tonymec|away
03:09 --- peth_ is now known as peth
04:45  peth: anyone get perl.vim errors when editing a new file that's only named ".pl" ?
04:50  infid: how can i find out what ctermfg=188 and ctermbg=235  is in hex #xxxxxx?
04:50  infid: or rgb
04:51  nate-: in VimL, how can I convert a float variable to a string, so I can print it
04:51  nate-: echo it*
04:57  godlygeek: peth: no, but vim's error messages tell you what line/file caused the error..
04:57  jerojasro: nate-: only print it? or format it somehow?
04:57  godlygeek: infid: it differs by terminal emulator, but ... https://github.com/godlygeek/colorchart/commits/master
04:58  mutandi: hi
04:58  godlygeek: jerojasro: :echo string(1.0)
04:58  godlygeek: nate-: ^ oops, meant that for you
04:58  mutandi: i can't seem to find a straight forward way to map escape to capslock in osx. can someone point me in the right direction? i'm using terminal based vim
04:59  nate-: godlygeek: perfect, thx
05:03  mutandi: no one rerouted their escape key in osx?
05:05  jerojasro: vimgor: capslock
05:05  vimgor: It's common for Vim users to want to remap the Caps Lock key to Esc. Instructions on how to do this in MS Windows, see http://vim.wikia.com/wiki/VimTip75. For Unix-like systems, both using XWindows and the console, see http://vim.wikia.com/wiki/VimTip166.
05:06  jerojasro: damn, no mac hints
05:10  infid: godlygeek: where do i install colorchar.vim ?
05:11  infid: just ~/.vim/plugin?
05:15  infid: nm that worked. how come it's on github not vim.org
05:44  rudi_s: jerojasro: Remap it to ctrl, mac can do that and that's IMHO better anyway. Ctrl-[ is esc (jj as esc is my favorite though).
05:46  mutandi: rudi_s: if you map jj to esc, will you still be able to use j as down?
05:47  nate-: mutandi: yes
05:47  mutandi: how do you map?
05:48  rudi_s: mutandi: inoremap jj <Esc>
05:48  rudi_s: i meaning it's only active while in insert mode.
05:48  rudi_s: :h :imap
05:50  mutandi: it works like a dream
05:50  mutandi: o man that's so much better
05:51  mutandi: i can never use variables that have two consecutive j's in their name
05:51  mutandi: small price to pay
05:57  bairui: let hajj.destination = 'Mecca'       D'oh! :)
06:03 --- whitedragon is now known as Guest9177
--- Log closed Wed Jan 05 06:25:08 2011
--- Log opened Wed Jan 05 06:25:29 2011
06:25 --- Users 515 nicks [0 ops, 0 halfops, 0 voices, 515 normal]
06:26 --- Channel #vim was synced in 70 seconds
--- Log closed Wed Jan 05 08:50:20 2011
--- Log opened Wed Jan 05 08:50:43 2011
08:50 --- Users 519 nicks [0 ops, 0 halfops, 0 voices, 519 normal]
08:50  the_isz: dhruvasagar: worth a try :)
08:50  dhruvasagar: the_isz: but how do I map it ?
08:51  the_isz: dhruvasagar:  :cnoremap  ?
08:51  dhruvasagar: I want this to be a Ex mode (:) specific, since I wish to paste it in after the (:)
08:51  bairui: c meaning command *cough*
08:51  dhruvasagar: I don't want to end up pasting in the buffer..
08:51 --- Channel #vim was synced in 67 seconds
08:52  dhruvasagar: although I guess I could get used to <c-r>+
08:53  dhruvasagar: the_isz: do you know of a tutorial which explains in detail the various map functions in vim ?
08:53  dhruvasagar: the_isz: ok I googled it
08:54  the_isz: dhruvasagar: good man :)
09:05  peth: btw, bairui, it isn't called command mode. command mode is synonymous with normal mode.
09:08  bairui: ok - my bad. I guess I should have said 'command-line' mode. In my mind, command mode = ex mode. Calling Normal mode Command mode is a bit confusing, IMHO.
09:08  the_isz: bairui: another nit-picker for today, huh? ;)
09:09  bairui: I can take it. :p
09:09  peth: bairui: i'd never call normal mode command mode either. :) help is mentioning it.
09:11  bairui: Hmm...   "For Nomal mode: When typing commands."   <--  yes. A bit of an overload there, it seems. I guess everything you tell a computer to do is a command...
09:11  bairui: make me a coffee!
09:12  peth: you didn't say sudo
09:12  bairui: sudo make me a coffee!
09:12  peth: on it
09:12  bairui: hehe... gotta love xkcd
09:12  ggergely: hi
09:13  ggergely: how can i get the filename of the buffer being edited? (or other ways to move the edited buffer into annother gvim window (instance?) is welcome
09:14  the_isz: ggergely: in which context do you need the filename?
09:14  ggergely: the_isz: probably coped to the windows clipboard...
09:14  ggergely: i have a software, that launches editors, vims
09:15  dhruvasagar: ggergely: oh my...what a software :)
09:15  ggergely: i'd like to know how to convince it, to launch tabs in a single vim instead.
09:15  ggergely: the broblem these are not launced at once
09:15  ggergely: but one at a time
09:15  dhruvasagar: hmm
09:15  dhruvasagar: but can you do something about the software ?
09:15  dhruvasagar: like change its behaviour ?
09:16  ggergely: dhruvasagar: a configureable software :) but it runs under windows, and i'm not used to windows version of vim.
09:16  ggergely: dhruvasagar: u can change the vim commandlie
09:16  the_isz: ggergely: to copy the current filename to clipboard try  :let @+=expand('%')
09:16  ggergely: it has filename and line number as variables to expand in the commandline
09:16  dhruvasagar: ggergely: well I meant more like could you change the way it launches various editors, vim being one of them
09:17  dhruvasagar: the_isz: :)
09:17  ggergely: the_isz: thanks.
09:17  the_isz: dhruvasagar: is that not what he asked?
09:17  the_isz: ggergely: you're welcome
09:17  dhruvasagar: the_isz: I guess
09:17  ggergely: the_isz: i asked two questions, one solving my current problem, thanks, and one to solve the occurance of the problem :)
09:18  the_isz: ggergely: must've missed that other question...
09:18  the_isz: ggergely: but i saw the keyword "tabs" which makes me light my torch and get out my pitchfork, just in case^^
09:20  dhruvasagar: the_isz: why is that?
09:20  dhruvasagar: the_isz: although I don't use tabs in vim
09:20  dhruvasagar: gvim*
09:20  the_isz: dhruvasagar: many people try to make tabs in (g)vim work like tabs in firefox or such and that's not what they are.
09:21  the_isz: vimgor: tabs
09:21  vimgor: Tab pages are not buffers, don't try to force them to act like buffers. Consider tab pages like viewports, layouts, or workspaces. Trying to setup 1 tab page == 1 buffer is an exercise in futility. Do ':set hidden' and get started. Get FuzzyFinder, LustyExplorer or BufExplorer to make getting around your buffers easier. See http://vim.wikia.com/wiki/Category:Tabs for more info.
09:22  dhruvasagar: the_isz: as I said I don't use tabs, I guess I am doing it right :)
09:22  the_isz: dhruvasagar: using no tabs is one way of using tabs right ;)
09:22  dhruvasagar: the_isz: I use gvim, but i've stripped it off of everything, the menubar, the toolbar, everything, tabs take up space and I don't like that
09:22  the_isz: ggergely: could you rephrase your other question? i must've missed it.
09:23  ggergely: dhruvasagar: i cannot change more. these are files selected individually in an file browser window. And i'd like them to have a tab for each file opened... the problem is more complicated, but i cannot explainn it now, as my internet connection is failing me. i guess i'll be back when i won't have to wait minutes to have a typed in word appear i
09:23  dhruvasagar: the_isz: well from what I understood, the *software* he uses launches editors, vim being on of them
09:23  dhruvasagar: the_isz: but it launches them one by one, that means multiple vim windows
09:23  dhruvasagar: the_isz: he wants it to instead launch multiple tab
09:23  dhruvasagar: tabs*
09:23  malesca: I'm still getting the hang of Vim buffer management, but so far I like using tabs kind of like virtual desktops containing splits.
09:24  ggergely: malesca: i know that, i want to use it that way (also...) but having a tab with each file buffer is good...
09:24  ggergely: for me for this work.
09:24  malesca: ggergely: This is gvim? I know MacVim has a setting to open in new windows or tabs or splits.
09:24  ggergely: so the vim commands to edit files are not issued once for many files, but once for each file
09:24  the_isz: ggergely: well, once you get rid of that idea i have a solution for you.
09:25  ggergely: and this is what i cannot change
09:25  the_isz: ggergely: use vim's  --servername  command line argument
09:25  the_isz: ggergely: that way, you can open multiple files in one vim instance
09:26  ggergely: but to have it more complicated :) accidentally i might do an action to have multiple editors launched for the same file. these should be ignored...
09:26  ggergely: as the software i'm using (parasoft c++ test) has a symbol browser, and i might launch annother edit for a diffrent symbol in the same file
09:26  dhruvasagar: I like the command-T plugin
09:26  ggergely: the_isz: i'll check it out
09:27  the_isz: ggergely: ok
09:31  fgro: when calling :help, how can i achieve for it to open in the current buffer and not create a horizontal split?
09:32  TzilTzal: Hello
09:34  strull: fgro: :help then <c-w>o
09:35  malesca: fgro: That will "zoom in" on that split, not actually open in the current window
09:36  strull: so?
09:37  malesca: Just as a FYI. It's probably what he really wants.
09:37  malesca: Hit <c-w>o again to go back.
09:37  strull: pardon?
09:37  strull: hit <c-6> to go back
09:38  fgro: thanks guys
09:39  malesca: strull: If you had several splits before hitting <c-w>o, it doesn't "restore" that set of splits. If you only had one it works.
09:40  TzilTzal: How does one get involved in helping develop vim?
09:41  strull: <c-w>o will in no case restore a set of splits
09:41  strull: TzilTzal: :he develop.txt
09:43  malesca: strull: Perhaps I used the wrong terms. If you have three splits and use <c-w>o on one, you will see only that one. If you hit <c-w>o again, you'll go back to seeing the three splits. If you instead hit <c-6> I believe you'll go back to seeing the last visited buffer, but you don't see the other splits anymore.
09:44  strull: malesca: wrong. Did you try it? <c-w>o == :only. How is this supposed to restore a view?
09:44  malesca: strull: I mean, it toggles "only", doesn't just activate it. Works for me but maybe that's something in my dotfiles.
09:45  strull: so what gives :map <c-w>o for you ?
09:45  malesca: strull: Oh yeah, there we go. Mapped to a plugin (ZoomWin). Sorry about that.
09:48  the_isz: malesca: don't mess with strull if you don't know vim's source code by heart. he's a knight of the round ex-mode!
09:49  strull: absolutely not
09:49  malesca: the_isz: :) I'm just over a month in. Have a bit more to learn, but loving it.
09:50  the_isz: strull: :(
09:51  the_isz: malesca: learning vim is fun. good that there's is so much of it :)
09:51  TzilTzal: strull: this doesn't mention who develops it or decides what goes in, how to raise request for features or bugs, etc...
09:52  strull: :he bugs for this
09:52  TzilTzal: what if I want a feature added?
09:53  bairui: add it
09:53  TzilTzal: lol
09:53  TzilTzal: and?
09:53  TzilTzal: what if people don't agree with it?
09:53  bairui: submit it to the mailing list and pray that the Vim gods are happy with your offer
09:54  the_isz: TzilTzal: well, you're free to branch vim. that's what open-source is all about
09:54  bairui: you could call it Tzim
09:54  TzilTzal: the_isz: I know, except I don't want to waste my time doing something that might not be accepted.
09:54  the_isz: TzilTzal: well you could check out the responses here or on vim's mailing list.
09:55  bairui: so... what's this smoking hot new feature?
09:56  the_isz: TzilTzal: see, you got one potential customer already :)
09:56  TzilTzal: nothing too smoking. I would like to get notifications when a buffer content's changed.
09:57  bairui: um, the little [+] in the status line not doing it for you, eh?
09:57  bairui: you want a big pair of flashing ones? :)
09:57  bairui: ok - so, I guess you mean programatically - a new event?
09:57  TzilTzal: no, I'm talking about what columns have changed.
09:57  TzilTzal: sorry, rows.
09:58  bairui: oh... a changelist?
09:58  bairui: what about the change tree?
09:58  TzilTzal: something similar
09:59  Dark_MX: re2all
09:59  strull: go for :DiffOrig
09:59  bairui: is that a plugin, strull?
10:00  the_isz: bairui: no, see  :he :DiffOrig
10:00  strull: no, it's a command. It's mentioned in :he DiffOrig
10:00  Dark_MX: How change let s:zen_settings = {
10:00  Dark_MX: ou... sorry
10:00  TzilTzal: I'd like to be notified of the changes as they occur.
10:00  bairui: hmm... I typed :DiffOrig and got diddly, so asked about it being a plugin. :-/ Cheers, guys.
10:00  Dark_MX: How change in zencoding html:5 snippet code?
10:00  strull: TzilTzal: yes, that's what it does. Go and try
10:01  bairui: TzilTzal: walk me through this. What would you do with the event? How would it make your day brighter? I ask in all seriousness.
10:01  bairui: ok - ignore me - look at strull's suggestion
10:01  TzilTzal: It allows you to analyse text as it's being changed.
10:02  bairui: right, so, after looking at :h DiffOrig - it's a command you *could* have if you'd read the help! :D
10:02  Dark_MX: set as let s:zen_settings = {'html': {'snippets': {'html:5': "...snippet code..."}}
10:02  Dark_MX: Please help );
10:02  TzilTzal: I'm reading it now
10:03  bairui: IIANM: let s:zen_settings['html']['snippets']['html:5'] = "blah"
10:03  Dark_MX: bairui, thx!
10:04  bairui: Dark_MX: that   s:   is gonna bite you though, unless you do the changes from within the same plugin file that data structure was defined.
10:04  TzilTzal: vim doesn't complete DiffOrig and doesn't recognize it
10:05  bairui: TzilTzal: I fell into the same trap: Read the help.   :help DiffOrig
10:05  TzilTzal: I am.
10:06  TzilTzal: ?
10:06  bairui: well... the help says you have to *create* the DiffOrig command...
10:07  bairui: go ahead and copy/paste that line that says:     command DiffOrig ...     into the command-line, prune out the control chars and you'll have a DiffOrig.
10:08  TzilTzal: it returns 'trailing characters'
10:08  bairui: that'd probably be failure to remove the control chars...
10:09  strull: alternatively copy the two lines (exactly as they are) to your .vimrc and start over
10:10  bairui: oh, and you won't need the    \  on the second line, when you join it as a single line.... Meh. This is *hard*. Hangon. I'll give you something easier: use this: command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis | wincmd p | diffthis
10:10  TzilTzal: ok, managed
10:11  TzilTzal: thx
10:11  bairui: np
10:11  TzilTzal: it doesn't work for substitution :)
10:12  strull: sometimes you need :diffupdate
10:12  bairui: agreed...
10:12  bairui: hmm... ok. cool.
10:12  TzilTzal: well, that's a problem :(
10:13  bairui: not ideal, but you could put a :diffupdate on a CursorMove or CursorHold...
10:13  strull: sounds expensive.
10:13  strull: :diffupdate executes external diff
10:14  bairui: versus writing a new Event extension, it might be tolerable...
10:14  bairui: well... I have to go and knead my pizza dough now. Later, lads. :)    (Inseption achieved, the_isz :p)
10:14  the_isz: bairui: ;P
10:27  RusAlex: how can i place in command line a filename with relative path ?
10:32  jink: RusAlex: Erhm, what?
10:33  hokapoka: Can anyone reccommend a plugin that lists open buffers and maybe allow quick access to them?
10:33  RusAlex: can i use variable for saving file ? i want to type    :w $var<CR> where $var must be path to my current file with filename
10:33  hokapoka: ATM I'm using NERDtree and I've mapped :bn / :bp to keys and when I have a number of open buffers it's a pain to jump through them all.
10:35  hokapoka: As I have NERDtree open on the left I'd like  the list of open buffers along the top / bottom.  I've tried tabs but never got on with them.
10:36  RusAlex: jink: i want to deploy files into remote ftp via Nwrite command, and i will map it. similar to this: Nwrite "ftp://ecustom@69.22.60.252/httpdocs/path/to/file/main.php"   where /path/to/file/main.php it's a relative path to file on my local machine, only /httpdocs folder is not the same. and i want to map somthing ex: Nwrite "ftp://ecustom@69.22.60.252/httpdocs/$mylocalrelativepathtofilewithfilename"
10:40  bairui: vimgor buffers
10:40  vimgor: For a quick intro to vim's windows, buffers, and tabs, see http://img200.imageshack.us/img200/9031/windowsv.png and http://vim.pastey.net/115548 See also ':help tab-page-intro' and ':help windows-intro'
10:40  bairui: vimgor tabs
10:40  vimgor: Tab pages are not buffers, don't try to force them to act like buffers. Consider tab pages like viewports, layouts, or workspaces. Trying to setup 1 tab page == 1 buffer is an exercise in futility. Do ':set hidden' and get started. Get FuzzyFinder, LustyExplorer or BufExplorer to make getting around your buffers easier. See http://vim.wikia.com/wiki/Category:Tabs for more info.
10:40  bairui: hokapoka: ^^
10:40  hokapoka: many thanks
10:40  bairui: np
10:56  RusAlex: guys? is anyone know how to use relative path in command line mode ?
10:58  bairui: RusAlex:   :echo expand('%')    will show you the relative path
10:59  bairui: relative to the current working directory, which you can see with   pwd   and change with   cd
10:59  bairui: the  :  forms, of course
11:07  RusAlex: bairui: thanks, but Nwrite "ftp://ecustomfinishes@69.67.60.252/httpdocs/".expand("%")<CR> gives me alot of errors, otherwise echo "ftp://ecustomfinishes@69.67.60.252/httpdocs/".expand("%") works
11:08  bairui: RusAlex: you might need to chuck that into an execute:    :execute "Nwrite blah".expand('%')<CR>     <--- salt to taste
11:16  RusAlex: bairui: you r the best
11:32  bairui: np    sorry, was afk making pizza :)
11:36  malesca: bairui: Mix crème fraîche, mayo, garlic and salt for an awesome sauce ;)
11:36  bairui: cheers! :D
11:37  bairui: I tend to make tomato based pizzas... even tonight's creation - a curry lamb pizza - has a tomato base... I'll try your cream creation one night, thanks. :)
11:37  malesca: bairui: Oh yeah, not as a replacement for the tomato sauce on the pizza, but something to dollop on it afterwards. Really good.
11:43  bairui: *drool*
11:47  saba: in visual mode for example, writing a regex to replace or something - is it possible to get a preview of matches or first match as when / searching?
11:47  saba: I don't want instant replace thought, only to see matches that would be replaced if I'd execute the command
11:48  the_isz: now the pizza has tomato sauce, "crème fraîche, mayo, garlic and salt" "sauce", possible toppings and cheese and bairui-drool on it^^
11:48  saba: "instant preview replace" heh :-)
11:48  saba: the_isz: nice
11:48  fow: saba, if you have hlsearch, use the c :s flag, and Vim should highlight them all. Then you can tell Vim to replace them all after looking or do it one by one. Either way, you can always undo
11:48  bairui: there's *always* bairui drool on it... :D
11:48  jink: :set incsearch
11:49  the_isz: the hidden ingredient that makes special-sauce so special :P
11:49  bairui: :p
11:50  saba: fow: I'm not sure if I have hlsearch, how do I set c :s flag?
11:50  saba: jink: I see no difference and :help set incsearch is invalid, what is that?
11:50  jink: saba: :he 'incsearch'
11:51  the_isz: saba:  s/bla/blu/c
11:51  fow: saba, err, have hlsearch on. i.e,   :set hlsearch    The c :s flag is just :s/foo/bar/c
11:51  fow: jink, incsearch only affects searching with /, not replacements with :s
11:51  jink: fow: So, search with /, then replace with :s//lalala/ ?
11:52  fow: oh, yeah, that's an option
11:54  saba: hlsearch is nice, thought I want to select a few lines, press V, : and do a regex and while writing that regex see what the regex would match. I'm sorry but it doesn't seem to help me with that.
11:54  the_isz: saba: try it, it will
11:55  the_isz: saba:  :set hlsearch  , then  :s/foo/bar/c  , that is
11:56  saba: the_isz: no it doesn't, :'<,'>s/foo/bar in visual mode doesn't highlight foo before I'm pressing enter
11:57  bairui: oops... I mean,   /c
11:57  bairui: fail :(
11:57  the_isz: saba: ah, now i got what you want. but  /c  will highlight the upcoming changes and you can abort before the first, so it should be a good alternative.
11:58  bairui: weechat doesn't like    / c     <--- separated for weechat's benefit
11:58  bairui: i feel naked now
11:58  bairui: like I just woke up from the middle of a dream where I was giving a lecture in my underpants... :-(
11:58  fow: saba, the only way to get Vim to highlight the regex as you type it is to do it the way jink suggested
11:59  jink: bairui: Get a real client. :P
12:00  bairui: oi!
12:00  bairui: i loves my weechat!
12:00  saba: ok then at least I got highlighting at some point and learned /c :-)
12:00  saba: thanks all!
12:00  bairui: jink: i just wasn't prepared for the   / c    behaviour. :)
12:01  bairui: saba: I didn't actually contribute, but I feel I made the learning environment that little bit lighter. :)
12:06  dassouki: how can i have vim and macvim share the same vimrc
12:06  dassouki: i guess viminfo on mac
12:07  malesca: dassouki: They should share the same vimrc as it is. MacVim will also load gvimrc as I understand it. You can put conditionals in your vimrc or gvimrc to only target MacVim.
12:08  malesca: dassouki: If you symlink the MacVim mvim binary to vim in your path, you'll get MacVim's version of vim (7.3 I believe) on the command line too. E.g. ln -s ~/.homebrew/bin/mvim ~/.homebrew/bin/vim
12:09  dassouki: ooh k
12:10  dassouki: well vim in terminal doesn't have the same vimrc on my machine, i'll investigate further
12:15  spiiph: dassouki, compare :echo $HOME, :set runtimepath and :scriptnames for both vim and mvim
12:18  dassouki: spiiph: HOME is the same and the other two return differentresults, one returns 7.2 and the other 7.3
12:19  spiiph: The system paths are not what's interesting.
12:19  spiiph: What's interesting is noting which .vimrc is loaded.
12:22  dassouki: ya one is through /usr/sharevimrc (terminal vim( and macvim it's through the app
12:23  spiiph: ...and then you check 'runtimepath'
12:23  spiiph: Actually, nevermind. That's irrelevant.
12:24  spiiph: You check :version for where it's trying to load .vimrc from.
12:26  dassouki: $VIM/vimrc and $HOME/.vimrc for both
12:26  malesca: dassouki: What specifically makes you assume they're not loading the same vimrc?
12:28  dassouki: syntax, syntax highlighting, i have one setup with no swap files, vim terminal still creates them
12:31  spiiph: Also, it would show in :scriptnames.
12:33  dassouki: ok
12:33  dassouki:  well i'll dabble wiht it at work time toshower and go to work
12:35 --- MinceR_ is now known as MinceR
12:40 --- silex is now known as Silex
12:57  amaurea: Hi! I find the english spellchecking in vim useful, but it would be nice to have one for my native language too: Norwegian. How do I enable this? Do I have to download or generate a definition file?
12:59  rson: amaurea: have you read :help spelllang yet?
13:00  the_isz: damn, rson was a bit too fast for me. was about to suggest the same...
13:00  amaurea: I skimmed it, but on going through it again, I found a link to lingucomponent.openoffice.org
13:00  amaurea: I guess the first thing to check is whether this already is installed, though
13:02  rson: yeah, chances are you already have it.  unfortunately I have no experience in this area.
13:03  amaurea: seems hebrew and yiddish are installed for some strange reason, but not norwegian
13:03  amaurea: By the way, the openoffice page has forms in a new and old format. Which one does vim want?
13:10  amaurea: Actually vim, offers to download the spelling definition itself when I try to set spell spelllang=nb_no, and finds a definition. But after downloading it, it says "Error detected while processing /mn/regulus/u1/sigurdkn/.vim/spell/nb.utf-8.spl E763: Word characters differ between spell files E758: Truncated spell file". Any ideas about what might cause this?
13:11  amaurea: When searching for it, it seems like this might be a bug that was fixed recently: http://vim.1045645.n5.nabble.com/patch-fixed-E763-when-using-a-spell-checker-td1211530.html
13:22  Axioplase_: (what is nb? norwegian bokmal?)
13:22  mosno: why don't i see "[Not edited]" when i do ctrl-g on a file i haven't edited?
13:23  mosno: or is that only when i ":f filename" manually?
13:24  the_isz: mosno: i don't either. vim usually only says if the file is modified. if it's not, vim is quiet :)
13:24  mosno: the_isz: i see the string when i :new then :f foobar then ctrl-g
13:24  the_isz: mosno: hmm... then i don't know :)
13:25  amaurea: I got it to work with the downloaded old-version files from openoffice
13:25  amaurea: Not sure what was wrong with the autodownloaded ones
13:26  amaurea: Axioplase_: Yes, nb is bokmål, which is the largest written language in Norway
13:26  merijn: Anyone have any suggestions why the GUI version of vimdiff shows this http://www.few.vu.nl/~mvn540/screenshot.png (the two right files are *not* completely empty...)? The commandline version seems to work properly...
13:30  amaurea: Nice, the spellcheck handles compound words properly too! :) It accepted bakemesterassistentopplæringsanstalt, for example.
13:31  peth: merijn: it looks like vim diffs all three buffers and thinks the lines shown on the left aren't in the other two buffers. you'll probably find the lines that are in those buffers if you scroll down there.
13:32  amaurea: Is there a nice way to switch between spellchecking in different languages? I'm not sure it is a good idea to just set spelllang=en,nb, as that would give me the union of the two, right? And many misspelled english words match norwegian ones, and vice versa
13:32  merijn: peth: No, the "----" lines are followed by one empty line :\
13:32  peth: oh right. it says "bot". :/
13:33  the_isz: amaurea:  :set spelllang=en  and  :set spelllang=nb  ?
13:34  peth: merijn: did you check if there is anything in those temp files at all? eg. with :!cat %
13:34  amaurea: the_isz: Sure, that works, but it would be nice to have a button that toggles between no spellcheck, english spellcheck and norwegian spellcheck. Is is possible to make such a keybinding?
13:35  the_isz: amaurea: of course. see  :he mapping
13:37  amaurea: the_isz: But what command would I map the key to? It would need to be some conditional that checks what the current spelllang is, or perhaps something that maintains an internal counter, and sets spelllang based on the mod3 of that counter
13:37  the_isz: amaurea: map it to a self-created function.  :he user-function
13:38  amaurea: the_isz: I guess, just making one mapping for going to english and another one for going to norwegian is simpler and pretty much as good
13:38 * amaurea reads up on user-function
13:38  the_isz: amaurea: i forgot the 's' at the end
13:38  the_isz: amaurea: but you probably already realized...
13:38  merijn: peth: Yes, I just checked. When I manually start it using two files, the GUI version works. If I fire it up from Mercurial it does not. However, the files it gets passed by Mercurial do exist and are not empty :x
13:39  ironhead: amaurea: I toggle spelling with nnoremap <F9> :set spell! spell?<CR>
13:39  ironhead: you could have another mapping to set the spelling language
13:39  ironhead: to use the same key, I suspect you would have to script it
13:42  peth: merijn: very odd. does anything change when you :diffoff those files? that screenshot only makes sense to me if those files are empty, unless it's a bug or some such
13:44  merijn: peth: Found the problem, silly mistake.
13:44  merijn: Mercurial creates a tempfile for merging which gets deleted once your editor exits. The GUI version by default forks and exits to detach from the shell >.>
13:45  amaurea: the_isz, ironhead: Thanks for the help! I ended up making a set of mappings: ,s ,e and ,n which respectively toggle spelling, set spelling to english and set spelling to norwegian. Getting to know more vim-scripting would be a good idea, and would let me build the single-button version, but I have something I need to write now, so that will have to help. Still, thanks for pointing me in the right direction!
13:45  merijn: So the second it started it would delete the other two copies and claim the merge was successful...fixed it by adding "-f" to vimdiff command
13:46  the_isz: amaurea: welcome to the world of vim. have some cookies! ;)
13:51  merijn: Can I make ":e" open a file in a background buffer? (i.e. not visible)
13:55  rindolf: merijn: there's probably a different command for that.
13:58  fow: :badd is what you want, I think
13:58  merijn: fow: Yes, thanks
13:59  fow: you're welcome
14:00  rindolf: :badd programmer! No cookie.
14:00  rindolf: fow++
14:00  rindolf: It can also be shortened as :bad
14:01  systemparadox: afternoon
14:01  fow: :)
14:02  systemparadox: is there a verbose mode for vim? I'm trying to edit files via a gvfs FTP mount, but it hangs for almost a minute each time. I can't work out what it's doing.
14:02  systemparadox: the -V option only gives script info
14:03  rindolf: systemparadox: you can try strace or its friends.
14:04  systemparadox: ah that looks useful, thanks
14:04  systemparadox: seems the server doesn't support chmod
14:20  _rane: is is possible to get rid of foldmethod=syntax autofolding while when I open it
14:21  _rane: ergh
14:24  dhruvasagar: _rane: what do you mean ? zR will open all folds in a file
14:24  _rane: I know
14:24  _rane: that's too much trouble to do every time
14:25  dhruvasagar: :)
14:25  dhruvasagar: _rane: is it ?
14:25  _rane: yeah
14:25  dhruvasagar: _rane: hmm maybe you should map zR to something shorter I suppose if that helps
14:26  dhruvasagar: _rane: wait for others' reply
14:27  _rane: you'd figure there was some config option to disable the autofolding
14:27  _rane: it's not very intuitive default imo
14:29  spiiph: _rane, :h foldlevelstart
14:36 --- mikl is now known as robert_
14:36 --- robert_ is now known as Guest94359
14:47  systemparadox: I'm confused
14:47  rson: systemparadox: is it hanging when starting up?
14:47  systemparadox: I set vim to use a local directory for swap files, but it still appears to hang when chmodding the swap file
14:48  systemparadox: yes
14:48  _rane: spiiph: thank you
14:49  rson: systemparadox: might be worth running vim --startuptime vim.log and inspecting the log for anything curious (if you have a new enough version of vim)
14:51  systemparadox: rson, well that's odd. That makes it go fast
14:52  massimo: Hi. CTRL+A works here but CTRL-X does not. Maybe I have modified that short cut somewhere. How can I see which shortcut key I have defined?
14:54  systemparadox: rson, where can I find documentation for --startuptime and what it does?
14:55  rson: systemparadox: just :help startuptime afaik
14:56 --- wtfness is now known as foocraft
14:56  systemparadox: rson, yes, but that doesn't say it makes any changes to the way vim works
14:56  systemparadox: so now I'm really confused
14:56  rson: massimo: you should be able to see maps for c-x by running :map <C-x>
14:56  systemparadox: why would using that option make it work fast?
14:57  rson: systemparadox: nope, it just logs what it's doing and when it's doing it.  it should have no affect on things
14:57  rson: systemparadox: try running with vim -u NONE -U NONE --noplugin and see if it's still slow
14:57  rson: if not, it may be something in your config for some reason
14:57  rson: or a plugin you're using
14:59  massimo: rson: Thanks,     v  <C-X>       * :call RangeUnCommentLine()<CR>    Some uncomment plugin has done this.
14:59  systemparadox: rson, nope still slow. Something is causing gvfs to hang, but I can't figure out what
15:00  rson: massimo: that's only in visual mode though
15:01  rson: systemparadox: unfortunately I have no experience here.  just curious what version of vim you're running?
15:01  systemparadox: 7.2
15:02  systemparadox: oh
15:02  systemparadox: the -u thing will make it slow, because that removes the option for putting swap files elsewhere
15:03  rson: yeah, I didn't think about that
15:03  rson: I'm out of ideas :/
15:03  devdrinker: working on some code if I accidently press enter, i have to press delete upto several times to get back to where i was (due to autoindent), is there a quicker way with this reoccurence
15:03  systemparadox: I guess I should strip down my vimrc
15:03  devdrinker: in insert mode obviously
15:04  rson: devdrinker: i'd suggest <Esc>kJ
15:05  devdrinker: yeah take me to start of the last line, also got to delete the line i just created dd.. and then shuffle back to where i was
15:05  rson: rather, <Esc>kJa
15:05  rson: J will join the current line and the line below it, plus remove the leading whitespace that you didn't want.  at least it does here.
15:06  devdrinker: rson: i like it thanks
15:06  devdrinker: same guy from couchdb channel?
15:06  rson: nope
15:06  setog3: hi, I am using gvim colorscheme jellybeans and font terminus, but I get some pixelised font for italics style ( result in screenshot here : http://imagebin.org/131092 ) can you help me to fix it ?
15:08  rson: setog3: can you reproduce that in any other applications? that just looks like poor font rendering in general, not specific to gvim
15:09  BigBlackDog: ok, i've asked that last night and thought i solved my problem. but it turned out i was missing something. here we go again: i've installed pathogen.vim and snipmate.vim. but somehow the snipmate/after/plugin/snipmate.vim doesn't get loaded. if i load it manually at the end of snipmate/plugin/snipmate.vim i get my snippets, if i don't i only get tabs when hitting the <tab>
15:09  rson: setog3: (unrelated) why are you importing a bunch of junk from numpy, then importing * from numpy?
15:09  rson: BigBlackDog: how did you install snipmate? as a bundle?
15:10  BigBlackDog: rson: yep
15:11  rson: BigBlackDog: just curious, where did you get your snipmate bundle from?  I pull directly from msanders' git repo and don't have any issues
15:12  systemparadox: rson, wow, just to make things even more strange, I removed everything from my vimrc and then readded it until it went slow again. It never did. It's back exactly how it was and now it's working :S
15:12  BigBlackDog: rson: thats where i got it from, too
15:12  rson: systemparadox: i wonder if you're having some network issues?
15:12  systemparadox: probably
15:12  systemparadox: the thing is, everything else has been working fine
15:13  systemparadox: gedit, less, cat, etc are all fast. It's only vim that's been slow
15:14  rson: BigBlackDog: and you're running pathogen#runtime_append_all_bundles(<your bundle dir>) in your vimrc somewhere, right?
15:14  rson: if your bundle dir is named bundle, you can ignore that part
15:17  rson: BigBlackDog: for reference, this is an excerpt of my dir structure: http://paste.pocoo.org/show/315295/
15:18  BigBlackDog: rson: that is correct. i only have 8 commands left in my .vimrc to hunt down the problem. 1st i set runtimepath=$VIMRUNTIME,~/Dropbox/configs/vim where my plugins sit, then i let g:snippets_dir = "~/Dropbox/configs/vim/bundle/snipmate/snippets" (doesn't make a difference if i have this or not), then set nocompatible, set filetype off, then pathogen#runtime_append_all_bundles, pathogen#helptags, filetype
15:18  BigBlackDog:  on, syntax on
15:19  BigBlackDog: the helptags get created on startup ... so at least the plugins are found and loaded
15:20  setog3: rson: you are right I get exactly the same things in gedit
15:20  rson: BigBlackDog: just a suggestion, rather than futzing with your runtimepath, why not make a symlink from ~/.vim to ~/Dropbox/configs/vim ?
15:21  rson: BigBlackDog: i doubt that has anythign to do with the problem, just an observation
15:21  kongo: BigBlackDog: or better do :set rtp+=~/Dropbox...
15:21  rson: kongo: damn you, I was just getting there :)
15:22  rson: rtp != $VIMRUNTIME by default.
15:22  setog3: so I need a good font as terminus with italic do you know one ?
15:23  rson: setog3: look into creating a decent ~/.fonts.conf, or stealing someone else's.  You can try mine but I just stole it from someone else, it's probably not the greatest
15:23  rson: setog3: https://github.com/rson/dotfiles/raw/master/fonts.conf
15:24  kongo: BigBlackDog: see :h 'rtp and :h $VIMRUNTIME for information
15:24  rson: setog3: you'll probably have to restart X for that to take effect
15:24  _rane: why the hell does \+ have to be escaped in regexes
15:24  rson: because + is special
15:24  _rane: how so?
15:24  rson: it means one or more of the previous character
15:24  _rane: yes, I know
15:25  _rane: \w+ would work just fine in most environments
15:25  _rane: but + needs to be escaped in vim
15:25  rson: you probably want to look at :help magic, vim's regex is a bit different.
15:26  systemparadox: is there an exit command for vim scripts? I want to be able to just move that around instead of having to comment/delete lines
15:26  rson: systemparadox: finish
15:26  Raimondi: systemparadox: :h :finish
15:27  _rane: how to repeat last played macro?
15:27  rson: @@
15:32  malesca: How would I insert something into the document that would otherwise be echoed?
15:33  Raimondi: malesca: :h :redir
15:33  malesca: Raimondi: Thanks"!
15:33  Raimondi: malesca: np
15:34  BigBlackDog: rson: ok, did that, but it didn't help
15:34  BigBlackDog: kongo: thank you, did that, too, didn't help either :(
15:35  malesca: Raimondi: Hm, does that only work with a saved file?
15:35  malesca: Say I do ":set foo?" and want the output to go into the current, unsaved buffer
15:36  rson: BigBlackDog: can you pastebin the output of tree in your vim dir (if you have tree), and your vimrc
15:36  industrial: How do I get MacVim to not open tabs when I drag files into it? I just want new buffers opened, not tabs.
15:37  kongo: BigBlackDog: is that after/plugin/snipmate file even loaded? check with :scriptnames
15:47  s__C: hello
15:48  s__C: i'm quite a newbie, but who cares about it ? So, i have a nice Xdefault colorscheme and i am now asking myself : how to port it into vim ?
15:50  BigBlackDog: rson: here is the tree http://pastebin.com/mApbuSQe
15:50  rindolf: s__C: there was a plugin for it.
15:50  BigBlackDog: rson: and here is the vimrc http://pastebin.com/UjxmW46d
15:50  s__C: ok i'll look if i find it
15:52  BigBlackDog: kongo: no, it is not ... only the plugin, not the after plugin
15:53  rson: BigBlackDog: i'm not sure it matters, but I have filtype off after the pathogen#runtime_append_all_bundles
15:53 --- ml|_ is now known as ml|
15:53  rson: not before
15:56  BigBlackDog: rson: tried it in different places ... seems to make no difference
15:57  rson: BigBlackDog: can you launch vim, then echo &rtp and paste that here?
15:58  kongo: BigBlackDog: your file tree looks like your bundle dir is inside your .vim directory. I don't know if that's a problem but it's unusual for sure
15:59  rson: that's where mine is as well
15:59  cryptic0: does vim have multiple definitions for syntax color coding?  I see two different color schemes for my tex documents and there seems to be no pattern as to either of them.
16:00  BigBlackDog: rson: /home/bbd/.vim,/usr/share/vim/vimfiles,/usr/share/vim/vim73,/usr/share/vim/vimfiles/after,/home/bbd/.vim/after,/home/bbd/Dropbox/configs/vim,/home/bbd/Dropbox/configs/vim/bundle/snipmate
16:00  kongo: rson: ah ok
16:00  rson: BigBlackDog: that's weird.. the after dir isn't ending up in your rtp
16:01  BigBlackDog: rson: exactly :(
16:03  rson: it's also weird that the global after directories are showing up before your normal directories.
16:04  rson: your Dropbox directories that is
16:04  Veejay: Anyone know how to get proper code completion with vim for Ruby/Rails?
16:04  Veejay: It seems that the omnicompletion thing is only looking in the buffer
16:04  rson: BigBlackDog: you said you tried getting rid of the rtp changes in your vimrc and using a symlink instead, right?
16:07  BigBlackDog: rson: i did use a symlink, but for the .vimrc only ... i'll try that, too
16:09  BigBlackDog: rson: THAT WORKS!
16:10  s__C: mhh the html script is fine
16:10  rson: BigBlackDog: I think the problem lies in the fact that you are manually changing rtp before pathogen runs
16:13  BigBlackDog: rson: hmm ... do you think this might work if i use the runtime_prepend_subdirectories method instead?
16:15  rson: BigBlackDog: it very well may, but you'll have to pass in <path>
16:16  rson: you may have to do that, then call runtime_append_all_bundles
16:16  rson: i'm not sure
16:17  BigBlackDog: rson: i'll try that. thank you very much for your help!
16:17  spiiph: Sometimes the lib functions of Vimscript are too much like Python's. I frequently confuse add() with append() :(
16:18  rson: BigBlackDog: np, hopefully you'll get a sufficient solution
16:18  rson: spiiph: i ran into that yesterday.  I also banged my head against remove() for a while until I reread the :help.  I didn't realize remove returned the item removed, not the modified list
16:19  spiiph: Heh
16:19  spiiph: Quite annoying.
16:32  markskilbeck: Hi, all. How would you check that a variable ends in a newline, and if not, append a newline to it?
16:34  BigBlackDog: rson: just fyi -> the prepend-thing works without the append all!! yippieehh
16:36  Silex: markskilbeck: not sure, but probably somethinkg like if s[-1] == "\n" | let s += "\n" | endif
16:36  lucs: I'm trying to build a mapping that removes trailing whitespace from all lines in a file, making sure the current search pattern remains intact.
16:36  lucs: But I'm getting mixed up in the syntax. Here's what I tried:
16:37  lucs: :map gs let moo = "/ <bar> %s/\s\+$//c<CR> <bar> let "/ = moo
16:37  lucs: Can someone help me fix that?
16:37  rson: BigBlackDog: sweet
16:38  lucs: (Once I get it right, I'll add something to restore the cursor to its initial position.)
16:38  rson: lucs: what is wrong with it currently?
16:38  Silex: lucs: I have something liek this to automatically remove trailing whitespaces:
16:38  rson: lucs: i'd suggest putting that in a function though
16:38  Silex: autocmd BufWritePre * :call setline(1, map(getline(1,"$"), 'substitute(v:val ,"\\s\\+$", "", "")'))
16:38  Silex: whenever I save a file, it removes trailing whitespace
16:38  pattern: i just do :%s/* $
16:38  pattern: nice and simple.. though it doesn't save the current search pattern
16:39  Silex: pattern: you meant / *$
16:39  rson: that also doesn't take into account tabs
16:39  pattern: uhh.. yeah :)
16:39  pattern: hehe
16:39  pattern: true, that's only for spaces
16:39  pattern: but i almost never see trailing tabs
16:39  lucs: rson: It "doesn't work" (details are painful).
16:39  pattern: and the first thing i do when working with files that have tabs is :retab
16:39  lucs: Lots of ideas here though.
16:40  lucs: I'll work on it some more.
16:40  rson: lucs: try putting all the junk in a function, then map gs :silent! call MyFunc()<CR> instead
16:40  lucs: rson: Yep, I will
16:40  lucs: Thanks rson, Silex, pattern.
16:40  Silex: yw
16:41  rson: lucs: btw, it may "just work" if you change the "/'s to @/'s
16:41  lucs: rson: Hmm... Trying...
16:42  rson: and add a : before let, i think
16:43  rson: lucs: :nnoremap gs :let moo = @/ <bar> :%s/\s\+$//g <bar> let @/ = moo <bar> normal ``<cr>
16:45  lucs: rson: That last one works. Yay!
16:45  lucs: Thanks!
16:49  disposable: how do i append e.g. .com to every first word of a line in a file? (or how do i search and replace every first whitespace with .com?)
16:49  rson: disposable: :%s/\s/.com/ should work, no?
16:50  disposable: rson: thank you
16:53  tonymec|away: disposable: "every first whitespace" won't match at end-of-line, and s/from/to/ without g at the end replaces only the 1st match. For "every word" (including at end of line) try :s/\>/.com/g
16:55  consumerism: what is the option that tells vim to remember what i've done in a buffer so that if i close the window/tab and reopen the buffer i can still undo what i did in the earlier window?
16:56 * spiiph wishes there were a read-only variable containing the value of the path separator.
16:57  gkatsev: how do I display the files in the currenty directory inside of vim?
16:57  rson: spiiph: me too, that would be very nice
16:57  gkatsev: preferably, not :!ls  or :!dir?
17:10  ironhead: gkatsev: :e .
17:10  ironhead: is that what you had in mind?
17:11  gkatsev: I guess that's one way.
17:13  lucs: rson: That mapping you showed me unfortunately fails to restore the search pattern if no trailing spaces are found. Can you point me in the right direction to fix it?
17:14  lucs: It's okay if I have to sweat a bit, I gotta figure this out :)
17:16  lucs: 1) Make it a function 2) Exception handling in Vim?
17:16  spiiph: lucs, :h :s_flags
17:16  spiiph: Check the e flag
17:16  lucs: spiiph: Ok, thanks.
17:18  lucs: spiiph: Perfect :)
17:41  devdrinker: any javascript devs here, what extra plugins do you use and how do they enhance your vim productivity?
--- Log closed Wed Jan 05 18:27:29 2011
--- Log opened Wed Jan 05 18:32:38 2011
18:32 --- Users 586 nicks [0 ops, 0 halfops, 0 voices, 586 normal]
18:33 --- Channel #vim was synced in 68 seconds
18:47 --- ardese_ is now known as ardese
--- Log closed Wed Jan 05 19:29:13 2011
--- Log opened Wed Jan 05 19:29:22 2011
19:29 --- Users 595 nicks [0 ops, 0 halfops, 0 voices, 595 normal]
19:29  fow: :nnoremap whatever y0o<C-r>"
--- Log closed Wed Jan 05 19:33:06 2011
