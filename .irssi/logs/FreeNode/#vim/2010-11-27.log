--- Log opened Sat Nov 27 00:05:28 2010
00:09  iaj: lo there
--- Log closed Sat Nov 27 00:10:29 2010
--- Log opened Sat Nov 27 00:10:53 2010
00:10 --- Users 574 nicks [1 ops, 0 halfops, 0 voices, 573 normal]
00:11  bosie: better than c-a m-b ;)
00:11  iaj: how can I replace all occurences of ^M with a newline feed
00:11  iaj: sorry I got disced
00:11  mhi^: The people who want real support for asynchronous processes can either wait for at least another 10 years or register on vim.org, vote for the feature and donate Bram 100000 Euro.
00:12 --- Channel #vim was synced in 97 seconds
00:12  mhi^: iaj: you might want to look at this:
00:12  mhi^: vimgor: ff
00:12  vimgor: See :h 'fileformat'. E.g. ':set ff=unix' or ':w ++ff=dos' or ':e ++ff=mac'. Explanations: http://vim.wikia.com/wiki/Change_end-of-line_format_for_dos-mac-unix
00:13  bosie: mhi^: 100k you say
00:13  mhi^: At least!
00:13  bosie: *gets cheque book*
00:13  Raging_Hog: iaj: if you have several different newlines, you might want to try  :%s/<C-v><Cr>//g
00:14  __ls: can i make vim accept :W as :w somehow? i'm sick of the "no such command" ...
00:14  homekevin: vimgor: tell iaj about ff
00:14  mhi^: __ls: :com :W :w
00:14  homekevin: Huh, I thought that would work.
00:14  mhi^: __ls: or.. :com W :w
00:14  MetaCosm: The bottom line is -- writing a vim clone is an astounding amount of work, there are a couple quiet ones being worked on by private groups (I know of 3 currently) none are terribly interested in trying to drum up major developers or drama right now (not looking to replace vim)
00:15  MetaCosm: but, I think for the featuresets you guys are talking about, you need like Vim built from the ground up with support for a major scripting language (Lua, Python, *something*)
00:15  MetaCosm: But the bottomline is the vim is so freaking good at editting text, it makes everything it can't do seem very acceptable... and often you can find outside tools to do most of it.
00:15 * mhi^ agrees
00:16  mhi^: Amen.
00:16  Raging_Hog: iaj: with several different newlines, I mean different kinds of newlines in the same file. As in Windows newlines with Unix newlines. Otherwise changing the fileformat works, as per to mhi^ said
00:16  MetaCosm: Also, the features that vim natively supports... once you get used to... are hard to ever go away from -- which is why vim-mode in other editors constantly frustrates... it isn't that it is bad... hell, some of them are GREAT
00:17  MetaCosm: but is they don't support (random vim command you love) -- you will label them unacceptable
00:17  MetaCosm: like, I am the one guy who uses ":earlier" a LOT
00:17  MetaCosm: and I mean, at least once everyday.
00:17  bosie: MetaCosm: right so why is vim kinda alone in the way it edits (modal mode i think it is called)?
00:17  cirwin: MetaCosm: that's why it really annoys me, vim is vendor-lock-in and I got sucked into it and can't get onto something new and shiny now
00:17  MetaCosm: bosie, alone!?  There are hundreds of Vi-Model clones
00:18  MetaCosm: HUNDREDS
00:18  homekevin: MetaCosm: Why :earlier rather than u?
00:18  MetaCosm: and, mode-extentions for dozens of other editors to make them work like vim
00:18  bosie: MetaCosm: from the ground up i mean
00:18  homekevin: Oh, I mean g-
00:18  Raging_Hog: MetaCosm: I was with the yzis guys for a while, but never developed with anything but vim. It was stablish, but always a feature struck me
00:18  MetaCosm: bosie, you question doesn't make sense... lots of people have built vi-clones from the ground up
00:19  bosie: MetaCosm: who?
00:19  MetaCosm: freshmeat.net -- enjoy.
00:19  MetaCosm: seriously, there are lots.
00:19  bosie: MetaCosm: i am not talking about some tiny ones
00:19  bosie: i am talking eclipse, vs studio, idea, emacs calibres
00:19  homekevin: Well, there's vim, vile, elvis, nvi...
00:19  MetaCosm: bosie, nvi, vile?
00:20  MetaCosm: you are talking about things that aren't editors
00:20  homekevin: Apparently busybox has its own.
00:20  MetaCosm: IDE != Editor
00:20  bosie: k
00:20  MetaCosm: Editors are for "editting" text
00:20  bosie: MetaCosm: an ide still needs to edit text
00:20  mhi^: that's what I preach all the time! :P
00:20  MetaCosm: bosie, and eclipse, vs-studio, etc have vi/vim plugins
00:20  bosie: so they would be interested in making it efficient
00:20  MetaCosm: the vs-studio one is rather good
00:21  bosie: MetaCosm: plugins. which means when they built it they didn't think vim's approach was good?
00:21  homekevin: I think they just have different primary goals.
00:21  MetaCosm: bosie, vim approach is fantastic, but very hard
00:21  bosie: MetaCosm: to learn?
00:21  MetaCosm: Why doesn't everyone use a plasma-lance to cut stuff
00:21  homekevin: Vim is an excellent text editor in part because it doesn't try to be an IDE.
00:21  MetaCosm: cause plasma lances are hard to use, but they still are the best way to cut concrete and metal
00:22  MetaCosm: why doesn't everyone use plasma lances... cause they are fucking hard to learn
00:22  MetaCosm: most people use power saws, or the sawzall
00:22  bosie: MetaCosm: right, call me naive but someone who hacks 8 hours in vs studio per day might want to be efficient
00:22  MetaCosm: now, no one would argue for a moment that your friendly recipercating saw is as powerful as a plasma lance
00:22  bosie: MetaCosm: and doesn't care if he learns it for  a few days
00:22  MetaCosm: bosie, ummm, you are naive, incredibly
00:22  MetaCosm: they have to SELL VS.net
00:23  MetaCosm: you don't sell something to someone and then drop them into an alien environment
00:23  homekevin: I don't know about you guys, but I'm going to start doing all my editing with a plasma lance.
00:23  MetaCosm: The generic standard way of editting is "good enough" for most people, and that is all that matters
00:23  MetaCosm: it is good enough, has a very low learning curve
00:23  DHulme: bosie: I would have thought that too, but lots of people use MSVS for 8 hours a day, all the while thinking "I should really learn a proper editor"
00:24  bosie: DHulme, MetaCosm: ok than replace vs studio with eclipse ;)
00:24  MetaCosm: Lots of people using MSVS don't even move around words with control
00:24  MetaCosm: that means, they are shitting at using MSVS
00:24  MetaCosm: they don't even know the shortcuts in it
00:24  bosie: shit
00:24  homekevin: I expect a lot of people using MSVS aren't familiar with the concept of a more advanced editor like Vim. They're amazed at how much better VS is than Notepad.
00:24  MetaCosm: I have watched more coders than I care to think about move char by char to highlight a word
00:25  bosie: MetaCosm: and that's better with eclipse? i doubt it
00:25  MetaCosm: you doubt what?
00:25  fow: cirwin, there's a difference between vendor lock-in and there being no alternatives one likes
00:25  mhi^: bosie: I know some Java devs who go totally frenzy when using eclipse. Positvely. You wouldn't think that, because most other people don't know how to use Eclipse like that.
00:25  bosie: MetaCosm: that eclipse users are more mature/advanced than vs studio users
00:26  MetaCosm: I never said it was better
00:26  MetaCosm: They are the same I am sure
00:26  homekevin: Yeah, cirwin, Vim is most definitely *not* vendor lock-in.
00:26  MetaCosm: It wasn't a cut on MSVS devs -- it was a cut on standard generic editor users and lack of any sort of process optimization for editting
00:26  homekevin: It uses standard text that can be edited by a million different editors.
00:26  MetaCosm: It isn't vender lock-in, but it is functional lock-in... and it really is
00:27  MetaCosm: I am not comfortable editting in anything else, but I don't consider that a downside of vim
00:27  homekevin: Yeah, that's somewhat true, MetaCosm. But you could get away from it if you really wanted to or needed to.
00:27  MetaCosm: I consider it a failure of every other editor in existance and I curse my muscle memory
00:27  mhi^: ;]
00:27  __ls: mhi^: thanks so much!
00:27  homekevin: So it would be accurate to call it "habit-forming".
00:27  mhi^: __ls: np!
00:27  MetaCosm: the bottom line is -- editing text in other editors makes me feel semi-retarded... and just go "why the hell would anyone want to edit this way, it is horrible"
00:28  MetaCosm: I feel slow and crippled
00:28  MetaCosm: ... there is no quick way to delete 3 words, how annoying!
00:28  cirwin: I'm glad we agree on some things MetaCosm :)
00:28  homekevin: MetaCosm: I feel that way sometimes in Vim without my .vimrc and plugins.
00:28  homekevin: Or when 'compatible' is set.
00:29  mhi^: A lot of people should start with ":set compatible" and later go over to the Vim features ;)
00:29  MetaCosm: mhi^, I disagree nearly violently.
00:29  homekevin: Hm, I don't know about that one, mhi^.
00:29  MetaCosm: <-- is trying not to explode
00:29  Raging_Hog: after learning vim, editing with other editors seemed to me like playing with an infant. "Oh, you can make it do that. *Very* good!"
00:29  mhi^: MetaCosm: :o
00:29  bosie: MetaCosm: you have strong opinions? no shit ;)
00:29  MetaCosm: homekevin, true, being without your .vimrc can be painful.
00:30  MetaCosm: I am less dependant on plugins, as long as I got my .vimrc I am happy
00:30  MetaCosm: I mean, I love some of them, but I can make due without
00:30  mhi^: MetaCosm: Well, you often have people in here asking for how to disable this and that because they want to force themselves to get a better editing habit.
00:30  MetaCosm: mhi^, set compatible is way too brutal IMHO
00:30  mhi^: Which is good, IMO. You should know about the core features before advancing further.
00:30  MetaCosm: set compatible doesn't make a core
00:30  mhi^: Well, ok, but you know what I mean!
00:31  MetaCosm: it makes vi
00:31  homekevin: I think 'compatible' is rather painful.
00:32  homekevin: It seems like requests to modify behavior to better match naive expectations are more common.
00:32  homekevin: Or pre-existing habits.
00:32  MetaCosm: no backup files, no digraphs, no escape keys, no expand tabs, no file format detection, no history
00:32  cirwin: so given that people don't want vim to become an IDE, and IDEs have a terrible time trying to emulate vim — how would you build an IDE around vim?
00:32  bosie: cirwin: emacs with vim bindings? ;)
00:32  cirwin: I think that falls under the terrible emulation category
00:32  MetaCosm: that exists... multiple versions
00:33  homekevin: I think cirwin's question is legitimate.
00:33  MetaCosm: they have had major work put into them (huge work)
00:33  MetaCosm: Viper ... and there is even a more intense one than viper
00:33  MetaCosm: that looks to be a full replacement
00:33  homekevin: The separation of the editor from the rest of the IDE makes some sense to me.
00:33  homekevin: I wouldn't make emacs the IDE, though ;)
00:33  MetaCosm: Simpulse
00:33  MetaCosm: Vimpulse
00:33  MetaCosm: Vimpulse goes a good bit beyond viper
00:34  homekevin: Interesting, I haven't heard of it.
00:34  Raging_Hog: I'd think 'compatible' just drives people away from vim
00:34  homekevin: And I follow Emacs so closely! Oh, wait, I don't.
00:34  Raging_Hog: it is of course excellent for people used to it, naturally
00:34  MetaCosm: compatible makes vim semi-retarded, some of the stuff it turns off is just terrible, I understand it has too.. but, ack
00:35  MetaCosm: cirwin, umm, there are lots of projects
00:35  MetaCosm: that try to do that
00:35  homekevin: compatible seems like a good thing to have, but I think we may be beyond where it needs to be a default.
00:35  cirwin: MetaCosm: can haz google juice?
00:35  MetaCosm: Eclim is probably the most profound attempt at deep integration
00:35  MetaCosm: it ties vim to a headline eclipse
00:35  homekevin: Can't Vim be truly embedded into another app?
00:36  MetaCosm: homekevin, not really, no
00:36  homekevin: Huh, too bad.
00:36  MetaCosm: vim would have to be rebuilt as a widget
00:36  MetaCosm: and you would have to decide what toolkit to support
00:36  mhi^: homekevin: we just spoke about asynchronous processes ;p
00:36  MetaCosm: and what platforms
00:36  homekevin: There's obviously some abstraction that allows a terminal and GUI version.
00:36  MetaCosm: hehe, not what you think
00:36  MetaCosm: open the code, I promise you shock and awe
00:37  bosie: can one extend emacs with other programming languages or just the lisp thingie?
00:37  MetaCosm: Vim is not a modern app when it comes to code
00:37  homekevin: I'm going to take that as a warning to never ever look at that part of the code if I can help it.
00:37  mhi^: and have fun laughing at ":h coding-style"
00:37  MetaCosm: homekevin, vim is the ugliest open source codebase I am aware of -- someone feel free to jump in if they have seen worse
00:37  MetaCosm: I haven't even seen in the same ballpark
00:38  homekevin: MetaCosm: Oh, I've spent some time in the code.
00:38  mhi^: I believe bogofilter was quite terrible, too
00:38  MetaCosm: conversely, vim is the foundation of my daily work and has caused me next to no issues in the many years I have been using it
00:38  homekevin: I'm not sure if it's worse than Mozilla's code, but I am familiar with the issue.
00:38  MetaCosm: it is ugly on the inside, but when built, it becomes my little trustworthy brick
00:38  MetaCosm: it just works
00:39  MetaCosm: ... why would they need anything but elisp?
00:39 --- Reviou is now known as Evious
00:39  MetaCosm: elisp is an amazing language, not sure if they support anything, I am sure you could build an elisp harness for other stuff
00:39  bosie: MetaCosm: cos not everyone can use lisp?
00:40  homekevin: Anyone who can program can program with lisp given some initial investment.
00:41  MetaCosm: bosie, ... anyone one uses emacs can use elisp, if you are talking about an inability to learn lisp... meh, they need to man up
00:41  MetaCosm: I honestly think having elisp and as undisputed core is one of the best things
00:41  bosie: aha
00:41  MetaCosm: if I was building an editor, I would use either javascript or lua as my scripting core
00:42  MetaCosm: and not allow other languages to be integrated
00:42  MetaCosm: because more languages == watered down core
00:42  MetaCosm: Vim supports a TON of scripting languages
00:42  MetaCosm: ... but really, by supporting a ton, it means that it only supports vimscript
00:42  MetaCosm: beause no one wants to have to build vim to have the proper version of python in it
00:42  MetaCosm: cause that is a pain in the ass
00:42 --- dindinx is now known as plop
00:42  MetaCosm: and less-portable
00:43 --- plop is now known as dindinx
00:43  bosie: MetaCosm: so what are the editing features that make you stay with vim then?
00:45  MetaCosm: bosie, that is a long list
00:45  MetaCosm: bosie, the core reason I love it, is I code in 8+ languages most days
00:46  MetaCosm: vim is consistant and awesome across all of them, and I don't have to learn any new toosl to deal with them
00:46  MetaCosm: the highlighting and editing experience is always consistant
00:46  MetaCosm: but, it is 1000 things at the end of the day
00:46  MetaCosm: the ease of creating / automating macros
00:47  mhi^: I agree here. Emacs always come with various programming modes, which are most of the time powerful, but always a bit different than the other.
00:47  MetaCosm: the comfort / speed of being able to do very powerful things with very few keystrokes
00:47  MetaCosm: and, like for navigating files... I find the old mode of using a big ass tree
00:47  Raging_Hog: the only thing vim doesn't rock with is intimaticy with a language, refactoring and other things you'd need to compile/interpret the source
00:47  MetaCosm: to be... basically retarded
00:48  MetaCosm: FuzzyFinder > Searching In A Huge Tree
00:48  MetaCosm: Raging_Hog, which is why Eclim tried to "borrow" those features from the Eclipse backend
00:48  MetaCosm: I really think Eclim from a conceptual standpoint is awesome -- as implemented, a bit meh
00:50  Raging_Hog: I have to say that I never really needed such things, but I understand if someone did. I've mostly worked with a codebase I knew quite well and navigated with ease
00:50  bosie: how do you navigate with vim in a codebase?
00:50  bosie: can vim navigate in a 'project'/directory?
00:51  MetaCosm: bosie, you don't know what a fuzzyfinder is do you?
00:51  MetaCosm: I recommend you find out, then try asking again
00:51  bosie: MetaCosm: well, i haven't tried it
00:51  bosie: i have command-t
00:51  rudi_s: Not really vim related, but if you use a good shell, you can open files very quickly as well.
00:51  bosie: so fuzzyfinder supports tags?
00:51  Raging_Hog: I mostly use zsh with apparix to start a new vim instance, or with e:  with some of the :cmap I've defined. I also have ctags to use :tsel with them
00:52  rudi_s: bosie: Nope. That's what tag files are for.
00:52  MetaCosm: Raging_Hog, the reason I love fuzzyfinder is if I know the codebase, I know the keywords to use in the search, and often get it down to 1 file with a few keystrokes, and if it is an unfamiliar codebase, the display part of fuzzyfinder lets me fumble about
00:52  bosie: rudi_s: ok, i am unable to navigate the project tags though
00:52  bosie: rudi_s: taglist opens only one file
00:53  MetaCosm: fuzzyfinder also works on buffers, which is the feature I really love
00:53  mhi^: bosie: but you can display the tags of several files
00:53  MetaCosm: I often have 70+ buffers open after a few days of work
00:53  mhi^: O.o
00:53  rudi_s: bosie: I don't know taglist, use Ctrl-] ..
00:53  mhi^: MetaCosm: What do you work? :P
00:54  Raging_Hog: I tried using fuzzyfinder, but it needed all the files in buffers I recall, which took a long time to open since I had taglist.vim. The latter wanted to check the tags and it took a long time
00:54  bosie: mhi^: have to check how that works
00:54  MetaCosm: mhi^, cloud based web applications, so a simple edit will hit 9-10 files... deploy file, build file, js file, html file, sql file, etc, etc, etc
00:54  Raging_Hog: what I wanted was lazy load, which was supplied with fuzzyfinder_textmate, but that was discontinued
00:54  mhi^: MetaCosm: Ah, okay
00:55  MetaCosm: mhi^, the idea of having to navigate via a tree is -- just scary
00:55  MetaCosm: they are all in very different (far apart) directories
00:55  mhi^: See, I do system administration and have 10 buffers open at max. All perl and shell scripts.
00:56  MetaCosm: yeah, my "max" is about 250 :)
00:56  homekevin: I'm barely aware of buffers that aren't in a window.
00:56  homekevin: Until recently I basically only knew that they existed.
00:57  homekevin: Now I actually use :ls and :sbuffer sometimes.
00:57  mhi^: The times before 'hidden'? :)
00:57  bosie: mhi^: i can't seem to find how you would show those files though. TlistAddFilesRecursive adds them and then?
00:57  homekevin: You know, I don't use 'hidden'.
00:57  homekevin: I'm not sure if I'd like it.
00:57  homekevin: Very rarely I'll :hide a buffer.
00:57  Raging_Hog: I have about 5-15 files open at a time but only if I remove the unneeded ones. And mostly they belong to a bunch I can close after I can send an issue to QA
00:58  cirwin: I tend to have two or three buffers open in two or three different vims — it's amazing how differently people use this stuff
00:58  MetaCosm: yeah, that is part of what is great about vim
00:59  MetaCosm: it will find a place in your workflow
00:59  MetaCosm: I have a friend who opens stuff almost exclusively with grep and vim
00:59  MetaCosm: to pop to the right line
01:00  Raging_Hog: I know I should use the buffers more, but when I can't see the files, I don't remember them. So I use :sball  and separate vim instances, whatever gets me quicker to submitting the issue to QA
01:05  MetaCosm: Raging_Hog, took me a bit to get used to it
01:05  MetaCosm: Raging_Hog, but it improved the "way" I edit by making my movements and file openings more purposeful
01:07  homekevin: Hey, do any of you have (or feel like you should have) a mapping for "make this line empty"?
01:07  Raging_Hog: MetaCosm: how do you remember the files you need to ask someone something about? Say you edit a file, see something you can't do anything more about until you get the spec? And since the project manager is busy, you stumble into that five times?
01:07  mhi^: bosie: What do you want to do? I just said that you could see the definitions of several files in a taglist window. So you can quickly just open a file which contains a certain function.
01:07  cirwin: homekevin: Vd
01:07  MetaCosm: you don't have a scratchpad open all the time Raging_Hog ?
01:07  homekevin: Ah, good point cirwin.
01:08  MetaCosm: I have my scratchpad open whenever I am in vim (often in a split) for making random notes
01:08  homekevin: Or, wait... that doesn't work, cirwin.
01:08  cirwin: or VdO I suppose to get the line back again
01:08  MetaCosm: ~/scratchpad.txt <-- existed on every computer I have ever used for 10 years :)
01:08  Raging_Hog: MetaCosm: if you have five different scratchpad windows in vim, you don't have much room for editing the next thing
01:08  MetaCosm: Raging_Hog, it is 3 lines
01:08  MetaCosm: that is all I show
01:09  MetaCosm: until the end of the day for my emails
01:09  MetaCosm: and, no differen't scratchpads
01:09  MetaCosm: ONE scatchpad
01:09  MetaCosm: it is just ... a random place for anything
01:09  mhi^: MetaCosm: Won't you write a blog entry about your daily Vim workflow? :>
01:09  MetaCosm: I use it when reading emails, when talking on the phone, when editing code
01:10  MetaCosm: it is the equiv of a piece of paper sitting on your desk, just in digital form
01:10  bosie: mhi^: how do you open the taglist window with multiple files though?
01:10  Raging_Hog: MetaCosm: so you do edits, save the buffers, then copy the filenames to your scratchpad for each issue?
01:10  MetaCosm: mhi^, it really isn't that interesting
01:10  Raging_Hog: MetaCosm: Yes, it is. We need help
01:10  MetaCosm: Raging_Hog, I sense my workflow isn't an "issue centric" as yours... but, I would probably make a macro to do that for me
01:11  mhi^: ;]
01:11  MetaCosm: it would get the filename and line number from the last buffer I was in, and insert it at the start of the current one
01:11  MetaCosm: s/current one/current line
01:11  MetaCosm: yeah, I will write up "A Day With Vim" hehe
01:12  MetaCosm: which will explain how I work
01:12  MetaCosm: I will be mocked for using windows 7, but it is my main Dev OS :)
01:12  mhi^: if it works for you ;)
01:13  MetaCosm: Colinux FTW!
01:13  Raging_Hog: Basically, one issue needs changes to several files, at several lines, mostly dozens of lines. So I should make an alias for a process that diffs the source tree?
01:13  bosie: mhi^: :TlistOpen only opens a single file for me
01:13  homekevin: Colinux is pretty cool.
01:14  MetaCosm: Raging_Hog, but, doesn't your version control allow you to bundle that and make notes when you check in that batch of changes?
01:14  mhi^: bosie: I just tested it with ":TlistAddFiles *.c"
01:14  Raging_Hog: I'm not supposed to check in stuff that isn't specced properly yet
01:14  bosie: mhi^: and then?
01:14  MetaCosm: Raging_Hog, epic-work-fail
01:14  MetaCosm: Raging_Hog, you don't have branches?
01:15  MetaCosm: being forced to work out of version control is an absolutely broken workflow (not your fault, but that is just retarded)
01:15  Raging_Hog: MetaCosm: Sure we have, we've talked about this before. I'm just not allowed to create them
01:15  homekevin: DVCS FTW.
01:16  MetaCosm: Raging_Hog, honestly, I would simply stealth use version control
01:16  MetaCosm: I would refuse to work in that braindead a system
01:16  homekevin: Well, not hg.
01:16 --- forneus_ is now known as forneus
01:16  MetaCosm: and I would use mercurial or git locally.
01:16  MetaCosm: and I would use that to generate the reports you need to
01:16  homekevin: I've done guerrilla git-svn before.
01:16  mhi^: bosie: and then I see definitions of all .c files in the current folder, not just the one of the current buffer holding a certain file.
01:17  bosie: mhi^: did you have to set a certain value to get taht?
01:17  bosie: that
01:17  MetaCosm: Raging_Hog, that would also let you have all those changes in a little place, and when given the go ahead, you simply switch to that tag (you made when you sent the email) and check it in
01:17  bosie: it tells me it added it but i don't see any additional tags
01:17  MetaCosm: homekevin, not sure why you said "not hg" *Grrrrrr*
01:18  homekevin: MetaCosm: That was in response to "I'm not allowed to make branches"
01:18  MetaCosm: are you claiming that hg doesn't have branches?
01:18  mhi^: bosie: Hmm, I just set this: http://codepad.org/hrr2lpDB
01:18  homekevin: With git, make all the local branches you want. With hg (sans plugins) you need new working dirs instead.
01:19  homekevin: MetaCosm: No, I'm claiming branches are part of the repo, so they get pushed/pulled.
01:19  homekevin: I'm not super familiar with hg, but that's my understanding.
01:19  MetaCosm: I am guessing if they don't allow branches, he is using something terrible
01:19  MetaCosm: SVN / VSS / CVS
01:19  homekevin: Probably.
01:19  MetaCosm: sorry for calling SVN horrible... "less good"
01:20  homekevin: And hey, I would understand that mentality under those systems.
01:20  bosie: mhi^: what sthe value of Tlist_Show_One_File ?
01:20  homekevin: I hate seeing 70 different branches for things I know nothing about.
01:20  MetaCosm: homekevin, I don't, SVN post 1.5 can handle branching / merging ok
01:20  MetaCosm: VSS / CVS less so
01:20  homekevin: Merging is a
01:21  MetaCosm: once you "adapt" to the hg branch model being very different (branches are major long term things) and you get used to implicit branching, you fall in love with it
01:21  MetaCosm: implicing branching + naming == win
01:21  homekevin: Merging is a different issue. I just don't like tons of highly task-specific branches in the shared repository.
01:21  bosie: mhi^: same as here btw
01:22  homekevin: Hmm, I don't know what "implicit branching" means.
01:22  MetaCosm: homekevin, I don't like it, but I accept it as required
01:22  mhi^: bosie: before and after ":TlistAddFiles *.c": http://d.imagehost.org/0499/before.png and http://d.imagehost.org/0135/after.png
01:22  MetaCosm: homekevin, it can be annoying when browsing, but I do the /branches/(developer)/task-specific
01:22  JMurray: And then there are those of us who have next to no use for version control, but find this conversation fascinating anyway.
01:22  MetaCosm: having developer specific sub-dirs makes me hate it slightly less
01:22  MetaCosm: but, I understand your feelings
01:22  bosie: mhi^: crap. i still only see one file listed
01:23  MetaCosm: "ack, 900 branches!"
01:23  homekevin: How can you use Vim and not have a use for version control?
01:23  JMurray: I honestly mostly use it for tweaking config files. I've never managed to pick up programming.
01:24  homekevin: I keep my config files in version control. :)
01:24  Raging_Hog: The problem is that I need to *remember* I need to do something. If I remember to switch to buffer foo, everythings just as excellent as it were if I had a branch. But I might not remember to do it, unless I have a window open somewhere reminding me to ask the manager
01:25  JMurray: homekevin: You have given my life purpose. Now to investigate version control.
01:25  bosie: mhi^: and you are using taglist?
01:25  MetaCosm: Raging_Hog, so, you get a ticket, this ticket requires 10+ files to be editted to make the patch work
01:25  MetaCosm: ... so you open the 10 files right away?
01:25  MetaCosm: as sorta a todo?
01:26  MetaCosm: homekevin, implicit branching is what happens in Hg if you go back and edit an old revision, it implicitly branches, now you have two sets of changes on it
01:26  MetaCosm: and you can merge them
01:26  MetaCosm: it is also what happens when you merge others work
01:26  MetaCosm: and in lots of other places, it is sorta a keystone of Hg
01:26  homekevin: Oh, OK.
01:27  MetaCosm: it is how you end up with multipleheads
01:27  MetaCosm: cause they are both just implicit branches
01:27  MetaCosm: me and you both edit revision 7, you push it to me after I make a change
01:27  homekevin: JMurray: You may want to take a look at this: http://www.reddit.com/r/vim/comments/dw325/ive_started_using_git_for_my_vim_configuration_id/
01:27  MetaCosm: I got revision 8, you got 9, they are both heads built off of 7
01:28  MetaCosm: JMurray, without a doubt, my favorite quick start / tutorial on version control (and Hg) is hginit.com
01:28  MetaCosm: hginit.com <-- a site just for a tutorial, written by Joel from JoelOnSoftware
01:28  mhi^: bosie: as you can see in the screenshots, yes :P
01:28  bosie: mhi^: i just wanted to make sure. cos mine still doesn't work
01:29  Raging_Hog: MetaCosm: no, I open just the one file I suspect. I look at it for some time, then opening up others. Then finally I crash on a problem, be that an undeciding software architect, unfinished spec or maybe even my own incompetence. Then I stop everything and try to hunt down the people who stop me from taking the issue further. I can't make them answer me so I start another task
01:29  MetaCosm: ahh, ok, ok.  So, you have this set of partially editted files
01:30  MetaCosm: And, what you do now is leave them open until someone gets back to you?
01:30  MetaCosm: even if it is days / weeks / key person is on vacation in Boca for 3 weeks?
01:32  bosie: mhi^: nevermind, was the setting you didn't mention that was the reason it didn't work ;)
01:34  Raging_Hog: MetaCosm: I don't have a staging server to put them in for the time being, or the authorization to put them in a branch where others might see it. It's just on my workstation, which I of course back up
01:35  MetaCosm: But, who do you keep track of all the pending work?
01:35  MetaCosm: s/who/how
01:37  MetaCosm: hmph, that is the question indeed
01:37  MetaCosm: right now you have like a local notes / comment and a session?!
01:39 --- Natch is now known as Natch|
01:40  Raging_Hog: Mostly it is obvious when I see the files that need something to do with, as in:   if ($order->getOrderingUnit() ===   // @TODO What?    Sometimes I put comments in the issue tracker (if they are of the nature that others will not be distracted) and finally my own text files I leave open somewhere
01:43  MetaCosm: Raging_Hog, you :sball per issue right now
01:43  MetaCosm: ?
01:44  Raging_Hog: MetaCosm: Exactly my point. There is no room left for other issues. If I have five issues, I have five vim tabs or instances
01:45  MetaCosm: ah, I am starting to understand your workflow a bit
01:45  mhi^: I just read the backlog. JoelOnSoftware rocks. Ducktape programming++ :D
01:45  mhi^: *Ducttape ;)
01:45  MetaCosm: "other issues" would be an issue not directly related to a ticket or pending QA pack
01:46  MetaCosm: Raging_Hog, I assume you can't assigne the PM a ticket to answer your question?
01:47  MetaCosm: sounds like your environment would frown on that
01:47  MetaCosm: I would created a ticket "BLOCKER: Need Answer to <ABC> Before Work can procede on (TASK)" [if ticket system allows me to make it a prereq of my ticket, I do so)
01:48  MetaCosm: but, not all environments consider that cool and groovie, despite that fact that it IS a blocker, and it is a prereq
01:49  Raging_Hog: MetaCosm: I often do a lot of work for an issue, then send that issue back as info_needed. The PM's seem to have other things to do
01:49  ezzieyguywuf: where can I read up on executing external commands from within vim
01:49  ezzieyguywuf: is :h ! my only resource?
01:50  MetaCosm: Raging_Hog, yeah, if you come up with a non-crap solution, please tell me, as I got a friend who has basically your workflow
01:51  MetaCosm: so, you just end up with the huge almost done work pile
01:51  homekevin: ezzieyguywuf: Don't panic!
01:51  homekevin: Oh, theres a space there.
01:51  MetaCosm: the tricky part has to be when you are working on multiple issues on a single file
01:52  b14ck: Hi all. I've got a silly question, really: I'm using vim with the following vimrc: http://pastebin.com/wRc70j5H Whenever I'm editing markdown files (.md), it uses syntax highlighting whenever it sees a quotation mark ('), which messes up my coloring in the terminal. Does anyone know how I can fix this behavior? Here's a screenshot (look at the coloring in my vim windows): http://i.imgur.com/kFYe9.jpg
01:52  mhi^: bosie: Ah, wasn't really paying attention... Tlist_Show_One_File. Makes sense :) I'll remember this one.
01:52  b14ck: What I'd like to do is make a rule (or correct whatever I've done wrong) to force vim to NOT use syntax highlighting in .md files unless it actually needs to.
01:52  MetaCosm: b14ck, umm, md == modula2
01:52  b14ck: It shouldn't be highlighting around every quotation mark.
01:53  b14ck: MetaCosm: ?
01:53  homekevin: ezzieyguywuf: Depending on what you want to do with your external command, there's also :read ! and :write !
01:53  MetaCosm: b14ck, you are using the modula2 file extention for markdown
01:53  MetaCosm: vim thinks you are editing modula2 files
01:53  b14ck: MetaCosm: Oh. Is there a way I can force vim to detect .md as markdown?
01:53  homekevin: ezzieyguywuf: Plus theres the system() function, and some relevant variables (v:shell_error) and options ('shellredir')
01:53  b14ck: It's pretty common convention to use .md or .markdown for markdown files (afaik).
01:53  bosie: mhi^: though now i see tags for aux files as well
01:54  ezzieyguywuf: homekevin: I'm just looking to do a basic edit-compile-edit procedure with a LaTeX file
01:54  bosie: mhi^: any idea on how to filter it?
01:54  mhi^: bosie: How did you added them?
01:54  bosie: mhi^: i stupidly added it recursively
01:55  mhi^: well, I'm kind of filtering when adding by extension
01:55  bosie: mhi^: TlistAddFilesRecursivly
01:55  strull: ezzieyguywuf: you may also want to read :he :make
01:55  ezzieyguywuf: tried messing with this :make stuff and wasn't very sucessful
01:55  MetaCosm: b14ck, I have seen .markdown .mdown .mkd .mkdn
01:55  homekevin: ezzieyguywuf: Then you probably only need :!, but you might want to consider co-opting something like :make, I suppose.
01:55  mhi^: bosie: Can't you just do ":TlistAddFilesRecursively *.pl" or so?
01:55  MetaCosm: b14ck, which are the 4 vim handles natively
01:56  homekevin: ezzieyguywuf: Oh, you looked at :make.
01:56  MetaCosm: au BufNewFile,BufRead *.md  setf markdown
01:56  MetaCosm: to add .md to the list
01:56  bosie: mhi^: recursively only works on directories
01:56  mhi^: Oh, hmm.
01:56  homekevin: ezzieyguywuf: Personally, I use CTRL-Z for all my compiling and such.
01:56  bosie: how do i remove the tags though?
01:56  homekevin: Or another terminal.
01:56  MetaCosm: ... another terminal FTW
01:56  b14ck: MetaCosm: lemme try that
01:56  ezzieyguywuf: homekevin: yea. I also tried hunting down a ~/.vim/compiler/tex.vim file online but didn't find any, outside of what ships with latex-suite.
01:57  Raging_Hog: MetaCosm: yes, right now I'm waiting for a couple of  info_needed  tasks to come back since another issue is depending on the same file
01:57  MetaCosm: vimgor, latex-suite
01:57  vimgor: An slightly-maintained, buggy, over-complicated plugin intended to make it easier to author (La)Tex files. Often, this is better served by using a standalone snippets plugin (like snipMate) to define the snippets you actually find useful as well as using the command ':compiler tex' to allow using Vim's quickfix feature when compiling TeX to an output format.
01:57  MetaCosm: Raging_Hog, the would be the only thing hg would really give you
01:57  cirwin: ezzieyguywuf: I found the easiest thing to do was just write a make file
01:57  mhi^: bosie: Maybe is ":TlistAddFiles **/*.pl" working?
01:57  b14ck: MetaCosm: whats the equivalent of `BufNewFile` for already existing files?
01:57  MetaCosm: the ability to deal with issues independantly on a single file
01:57  mhi^: bosie: And no idea, I never remove them, I just close Vim.
01:57  b14ck: I also need to apply the markdown syntax highlighting to already existing .md files i think in order for this to work.
01:57  cirwin: (though that's a slight lie as my make command executes Scons files, so I just wrote one of those)
01:58  ezzieyguywuf: I think I'll take homekevin 's advice and just use ctrl-z until I find time to get a make file worked out.
01:58  MetaCosm: b14ck, huh?
01:58  bosie: mhi^: i can't test hat cos i already have the aux-tags in
01:58  MetaCosm: look after the ,
01:58  b14ck: MetaCosm: Oh. Didn't see that, sorry :(
01:59  b14ck: :wq
01:59  mhi^: bosie: doesn't look like you can remove them easily
01:59  mhi^: b14ck: :x ;)
02:00  bosie: mhi^: wicked
02:00  b14ck: whoops
02:00  bosie: mhi^: any idea as to where the tags are actually stored? i always thought it is in the directoyr but it doesn't seem to be the case
--- Log closed Sat Nov 27 16:37:05 2010
--- Log opened Sat Nov 27 16:37:25 2010
16:37 --- Users 571 nicks [1 ops, 0 halfops, 0 voices, 570 normal]
16:37  LinuxMafia: sorry i got dc
16:38  pinkisntwell: don't ]], ][ etc. work in java files?
16:38 --- Channel #vim was synced in 88 seconds
16:44  DHulme: pinkisntwell: ]] jumps to the next { in the first column
16:44  DHulme: perhaps you want ]m
16:44  DHulme: or one of the similar commands (see :help ]m )
17:13 --- axiom is now known as majoh
17:36 --- _mathrick is now known as mathrick
17:51  zeltak: hya guys. was wondering if vim could leave 2 backup file every time i edit a file, and keep overwriting them by date?
17:52  cirwin: :help backup
17:56  zeltak: ok thx cirwin
18:06  argos-void: how can i change the split bar color in a vim theme file?
--- Log closed Sat Nov 27 18:16:08 2010
--- Log opened Sat Nov 27 18:16:32 2010
18:16 --- Users 580 nicks [1 ops, 0 halfops, 0 voices, 579 normal]
18:17 --- Channel #vim was synced in 94 seconds
18:21  shmup: I can't remember if this was something I experienced in gvim or another editor, but, is there something you can enable in the vimrc that will.. well for example
18:21  shmup: if my cursor is on <div>
18:21  shmup: it will highlight the closing </div>
18:21  shmup: the one that its paired with
18:22  abstrakt: anyone know where there's an ubuntu package for 10.04? a PPA somewhere?
18:25  mhi^: shmup: http://www.vim.org/scripts/script.php?script_id=39
18:25  shmup: thanks mhi^, i did find that earlier but was wondering if what it's explaining is similar to say..
18:25  shmup: well nvm, i'll just try it ;p
18:26  shmup: mhi^: have you used that before?
18:26  mhi^: shmup: well, no. But I believe it's often used for this purpose
18:26  shmup: oh interesting lol
18:27  shmup: vim by default will highlight the closing ) or }
18:27  shmup: i didnt even know that ;x
18:27  mhi^: thoug, it's not really highlighting the tag as in ":set matchpais", but you can jump with '%' to the other tag
18:27  mhi^: indeed :P
18:27  mhi^: *matchpairs
18:27  shmup: :set matchpairs ... wait
18:27  shmup: is that what is highlighting?
18:27  mhi^: jupp
18:28  shmup: so curious, if i'm working with nearly blank .vimrc in my /home/
18:28  shmup: where is it getting these other configs from?
18:29  mhi^: Default settings and stuff your distro set for you in /etc/vim
18:38 --- _Unode is now known as Unode
18:39  LinuxMafia: hi
18:39  LinuxMafia: i have this errors for when i start vim
18:39  LinuxMafia: http://www.vim.org/scripts/download_script.php?src_id=13661
18:39  LinuxMafia: sorry
18:39  LinuxMafia: http://paste.pocoo.org/show/296680/
--- Log closed Sat Nov 27 18:46:09 2010
