--- Log opened Fri Oct 22 00:00:26 2010
00:11 --- Users 575 nicks [0 ops, 0 halfops, 0 voices, 575 normal]
00:20  snow_ru: hi
00:21  snow_ru: hi
00:21  snow_ru: vim
00:21  jhaddad: can taglist be configured to only show functions and not every variable in a file?
00:21  snow_ru: have a question to vim :P
00:21  Rakko: hi
00:21  Rakko: go ahead and ask
00:21  Rakko: jhaddad: that should be in the man page for ctags
00:22  dsirijus: um, i'm having issue when exiting vim... there are some characters left before "user@machine #"
00:22  dsirijus: i can clear then they disappear, but still annoying
00:22  Rakko: Folks, I'm having trouble with the script at http://vim.wikia.com/wiki/Switch_color_schemes and the color sampler at http://www.vim.org/scripts/script.php?script_id=625
00:23  Rakko: dsirijus: vim must not be configured right for your terminal
00:23  jhaddad: raddo: not seeing anything there
00:23  jhaddad: rakko: ^
00:24  Rakko: my problem is that if I use F8 to go past "autumn", it picks "autumn2" (although the line still says "autumn"... and after autumn2 I can't advance at all
00:24  dsirijus: Rakko: xterm-256color, and vimrc http://pastie.org/1239381, using all those through putty
00:25  dsirijus: ah, we 21st century VIMers... it's all about appearance :)
00:26  dsirijus: Rakko: now that i've pasted vimrc, i've noticed that those characters are the ones appearing in that last if in vimrc
00:26  Rakko: jhaddad: no, I don't see it either... sorry
00:26  spiiph: dsirijus, you really shouldn't be setting cindent and smartindent, if you're using filetype indentation
00:27  dsirijus: spiiph: well, it works, haven't had issues with it
00:27  spiiph: dsirijus, it's just a matter of time.
00:27  Rakko: wait, how can you be using xterm256 and putty?
00:27  dsirijus: for a year now :)
00:27  dsirijus: Rakko: dunno, i've set some options in putty for xterm-256color
00:27  spiiph: vimgor, smartindent
00:27  vimgor: Don't you mean stupidindent? In all seriousness, 'smartindent' is an obsolete option for C-like syntax. It has been replaced with 'cindent', and setting 'cindent' also overrides 'smartindent'. Vim has indentation support for many languages out-of-the-box, and setting 'smartindent' (or 'cindent', for that matter) in your .vimrc might interfere with this. Use 'filetype indent on' and be happy.
00:28  Rakko: oh, I see
00:28  spiiph: dsirijus, the point is, smartindent does nothing, and may very well conflict with filetype indentation.
00:29  dsirijus: spiiph: gotcha, commented those two out
00:29  spiiph: Setting t_Co is also something that you shouldn't do. It doesn't even do anything if you're using a 256 color terminof.
00:29  dsirijus: now that you mention it, i think i did have a few issues
00:29  Rakko: Vladimir Fyodorovich Terminof
00:29  spiiph: haha
00:29  snow_ru: what is wrong with this : imap ^A diw\begin{^R"}<CR><CR>\end{^R"}<UP>
00:29  snow_ru:  ?
00:30  spiiph: snow_ru, you're using normal mode commands in an insert mode mapping?
00:30  snow_ru: spiiph, I want to define this map to \begin{sthing} \end{st}
00:31  snow_ru: spiiph, yes
00:31  spiiph: So why start the mapping with diw?
00:31  dsirijus: ah well, it's colorful enough as is
00:31  dsirijus: thanks, bye
00:32  snow_ru: spiiph, non of them work
00:32  spiiph: none of which?
00:33  spiiph: <C-a> is a useful keycombo in insertmode, btw.
00:33  snow_ru: spiiph, type equation Ctrl+A => no result ;)
00:33  spiiph: Well, how did you enter ^A?
00:33  snow_ru: yes, Ctrl +A
00:33  spiiph: ?
00:35  davidfetter: hello
00:36  snow_ru: spiiph, all I want to do is: typing equation + Control+ A => Then it gives me \begin{equation} \end{equation}
00:36  snow_ru: Ã 
00:36  snow_ru: I see
00:36  davidfetter: how do i say, "from the line containing blarg to the current one" when "the line containing blarg" is before the current one? i'm thinking /j, but there could be other use cases
00:38  fow: davidfetter, ?blarg?,.
00:38  snow_ru: hmm
00:38  spiiph: snow_ru, yes, I get that. I asked how you entered ^A
00:38  iaj: someone who's making use of that tidy here?
00:38  snow_ru: it doesnt work
00:38 --- chocoby is now known as CHOCOBY
00:38 * davidfetter tries it out
00:39  snow_ru: spiiph,  it gives me \begin{^R"}  ; what i want is to insert my first argument in to \begin{***}
00:39  spiiph: So how did you enter that ^R
00:40  Rakko: snow_ru: spiiph is asking whether you typed ^ followed by R, or whether you actually held Ctrl and pressed R
00:40  davidfetter: fow, thanks! :)
00:40  fow: you're welcome
00:40  snow_ru: Rakko, i type : equation^A
00:41  spiiph: snow_ru, you're still not answering the question.
00:41  snow_ru: spiiph, no, not ^R
00:41  Rakko: oh, it was ^A, not R
00:41  spiiph: ^A is ambiguous. It can mean either <C-a> or ^ and A
00:41  spiiph: Rakko, it's both, actually.
00:41  snow_ru: ok, my original problem is :
00:41  snow_ru: type
00:42  snow_ru: argument^R => autocomplete to \begin{argument} \end{argument}
00:48  tsolox: spiiph: CSApprox needs gui support - not loading.....
00:48  spiiph: tsolox, yes it does.
00:48  snow_ru: so .. ?
00:48  jerojasro: snow_ru: the vim-latex plugin lets you do that
00:48  snow_ru: jerojasro, I want to do the mapping myself
00:49  tsolox: spiiph: that's the error message i got...
00:49  fow: tsolox, you should get a message telling you to see :h csapprox-+gui
00:50  spiiph: snow_ru, you should be using <C-a> and <C-r> instead of ^A and ^R
00:50  tsolox: fow: spiiph E149: Sorry, no help for csapprox-+gui
00:52  snow_ru: spiiph, could you explain how it get the first argument to the {} ?
00:53  Rakko: vimscript doesn't allow you to call a built-in function without assigning its return value to something?
00:53  spiiph: I don't understand what you mean with "first argument"
00:53  spiiph: Rakko, sure it does.
00:53  fow: tsolox, did you run :helptags after installing CSApprox?
00:53  strull: Rakko: :he :call
00:53  Rakko: oh, call
00:53  Rakko: thanks
00:54  tsolox: fow: E471: Argument required
00:55  fow: tsolox, :helptags /path/to/the/CSApprox/docs/dir
00:59  snow_ru: seems to me that there is no solution then
00:59  fow: snow_ru, why don't you want to use a snippets plugin again?
01:00  snow_ru: fow, I want something that is pretty simple so that I can use every where ;)
01:00  rson: sjl: ping
01:01  fow: snow_ru, how is that different from a snippets plugin? :P
01:01  tsolox: fow: spiiph vim with GUI support, meaning vim with X ? (in contrast to gtk) ??
--- Log closed Fri Oct 22 01:08:11 2010
--- Log opened Fri Oct 22 01:08:33 2010
01:08 --- Users 565 nicks [0 ops, 0 halfops, 0 voices, 565 normal]
01:10 --- Channel #vim was synced in 120 seconds
01:10  Rakko: non-GTK gvim? *shudders*
01:12  iaj: How can I find out where 'equalprg' was last set.. I tried :verbose set equalprg   but its just giving me equalprg=""  even tho I got an entry in my after/ftplugin/html.vim  file
01:14  jamessan: iaj: ~/.vim/after/ftplugin/html.vim only matters if you have filetype plugins enabled (":filetype" shows plugin:ON) and you're editing an html filetype (":set filetype?" shows html)
01:15  iaj: jamessan: both true :\
01:15  jamessan: iaj: and you see the file in ":scriptnames" ?
01:15  iaj: can I do a grep over scriptnames?
01:16  jamessan: iaj: you can redirect it to a file and then grep that file -- :redir >>tmpfile   :scriptnames   :redir END
01:17  iaj: jamessan: ahh thanks.. its not in scriptnames :(
01:18  iaj: but filetype is html  and ftplugin is on :\
01:21  iaj: ah.. got it working now.. a reload fixed it :\
01:21  iaj: another problem occured tho.. I got setlocal makeprg=tidy\ -quiet\ -errors\ %
01:22  iaj: in my after/html.vim as well and when I try to make it yells:  can't open Desktop/test.html
01:24  tsolox: how do i un-install, this csapprox that i just extracted into my HOME/.vim folder?
01:25  iaj: tsolox: you have to remove the CSApprox.vim in $HOME/.vim/plugins and I guess the CSApprox.doc in $HOME/.vim/doc
01:39  iaj: is anyone familiar with tidy?
01:56  iaj: any way to locally have a file reloaded automatically when it got chnaged elsewhere?
01:58  KeeperOfTheSoul: iaj: sure, see :help autoread
02:00  iaj: thanks :
02:00  iaj: :-)
02:00  IznastY: is there a recommended plugin for code folding
02:01  deryni: For what language and do the default fold methods not work?
02:02 --- f00li5h is now known as F00LI5H
02:02  IznastY: for c
02:03  IznastY: i'm pretty much a beginner in vim, so not sure if this is included by default, I just know the basics so far.
02:04  deryni: :help ft-c-syntax
02:04  IznastY: thx
02:05  jhaddad: can I run a vim command from the command line, in order to have it execute a search & replace in a file, in a batch process?
02:05  jhaddad: so I don't need to open each file?
02:09  sente: yes, you can, but vim is probably the wrong tool for the job
02:09  sente: what's the regex you want?
02:13  KeeperOfTheSoul: sounds like you want sed
02:48 --- sjl_ is now known as sjl
02:58  kingfishr_: if i have foldmethod=syntax, how do I default my files to be unfolded?
02:58  kingfishr_: i.e. i want all folds open when the file is opened.
02:59 --- estragib_ is now known as estragib
02:59  fow: kingfishr_, :h 'fdl
02:59  fow: set it to some large number
03:01  kingfishr_: thanks fow
03:01  fow: you're welcome
03:02 * kingfishr_ is wondering if he'll ever have the misfortune to open a file with more than 999 levels of indentation
03:09  qiyong: what kind of vim users are? programmers?
03:09  qiyong: here
03:10  spiiph: That didn't make much sense
03:10  strull: and even if it makes sense. Why is it important?
03:11  qiyong: what's your profession? spiiph
03:11  qiyong: and you strull
03:11  strull: why is it important?
03:11  qiyong: i bet 99% here are programmers
03:11  qiyong: i didn't say it important
03:11  strull: well then ...
03:16  spiiph: I'm a programmer, yes.
03:18  jeffszusz: i just use vim to be cool
03:18  jeffszusz: it gets me ladies
03:18  jeffszusz: like you wouldn't even believe.
03:18  gkatsev: vim helps chasing tail
03:18  jeffszusz: they're all up in my grill like "what's that mad text editor jeff?"
03:18  fow: qiyong, while I do some programming, the majority of my Vim usage involves taking notes, doing homework, and editing configuration files
03:18  gkatsev: it's a fact
03:18  apetrescu: LOL
03:19 * jeffszusz is actually a novice programmer and web dev
03:19  jeffszusz: i still need to perfect a markup language for notetaking
03:20  gkatsev: LaTeX
03:20  gkatsev: also, markdown
03:20  apetrescu: If you're a hella-fast typer
03:20  gkatsev: use snipMate to save all the latex snippets you need/want
03:20 --- go|dfish is now known as GO|DFISH
03:30  jeffszusz: i figure reST and then use python's library to make it into latex.
03:35  gkatsev: http://en.wikipedia.org/wiki/Markdown
03:35  gkatsev: md is probably the easiest/fastest for notetaking
03:37  jeffszusz: yeah i've heard that
03:37  jeffszusz: not sure why it's any better than reST though
03:37  jeffszusz: confused by that.
03:38  gkatsev: ah, thats what reST is
03:38  gkatsev: i've used rst before
03:39  gkatsev: looks like it is mostly the same
03:41  gkatsev: though, at a first glance, md looks better because it seems slightly easier. Also, it is used by github, butbucket, reddit, posterous, so, I think it is more widely used online
03:41  gkatsev: but yes, they look pretty much equivalent
03:49  jeffszusz: cool
03:49  jeffszusz: didn't know so many ppl used reST
03:49  jeffszusz: oh
03:49  jeffszusz: it's md that's used so widely
03:49  jeffszusz: hm
03:49  jeffszusz: well
03:50  jeffszusz: to be fair, reST was intended mostly for python documentation
03:50  jeffszusz: markdown for web docs.
03:56  Rakko: Could someone give me some quick pointers as to how to profile in vimscript?
03:57  Rakko: I've got a function s:SetColors(args)
03:58  Rakko: and the end of my script is like this: http://www.pastey.net/141942
03:58 --- Tricia is now known as Guest44957
03:58  Rakko: the txt file I specified does get created, but it never has anything in it :(
04:00 --- Guest44957 is now known as Tricia
04:01  strull: Rakko: not sure. Did you try w/o the silent?
04:02  Rakko: hmm, no
04:02  zarac: I'm trying to add something to my path if it is a java file, but only if on a specific server. I've got this in my .vimrc but it doesn't get set, any ideas?
04:02  zarac:     if hostname() == "TWEEK"
04:02  zarac:         au BufRead *.java :setlocal path+="C:\Program Files (x86)\java\"
04:02  zarac:     endif
04:02  Rakko: strull: didn't help
04:02  zarac: or not a server, but yeah, whatever ; )
04:03  zarac: Is there peharps another way to do this? Maybe i'm just missing something?
04:04  ShexNivis: Hello, I just opened a file and at the end of each line there is a special character displayed as ^M is there a way to get rid of it all at once or do I have to delete then one by one?
04:06  strull: zarac: did you open a java-file?
04:06  ShexNivis: .cpp
04:06  strull: ShexNivis: try :set ff=unix
04:07  sir_lewk: if you run into a situation where you have to make that change a lot, you can look into the dos2unix utility too
04:07  ShexNivis: strull: nothing happened ; /
04:07  zarac: strull: Yes, i did
04:07  ShexNivis: sir_lewk: will take a look at that
04:07  strull: ShexNivis: oops, I meant :set ff=dos
04:08  zarac: strull: the if statement doesn't matter.. something's wrong with the autocmd. When i just have that line it stll doesn't work. I tried with set instead of setlocal as well, no luck.
04:08  sir_lewk: best to learn the vim solution of course, for better vim'ing ;)
04:08  ShexNivis: strull: same ; /
04:08  strull: mmmm
04:09  sir_lewk: ShexNivis: see this page: http://vim.wikia.com/wiki/File_format
04:10  strull: zarac: the statement looks good. What gives :au BufRead ?
04:11  zarac: strull: a million lines.. ; ) I found *.java setf java but not my entry, although i just scimmed through
04:12  strull: extend it to :au Bufread *.java
04:12  strull: if it doesnt show, then your if-statement might be the problem
04:13  zarac: strull: ah, thanks. I see it there now.
04:13  ShexNivis: sir_lewk: thanks found the answer there
04:14  strull: zarac: try :set vbs=9 and then open a .java-file
04:17  zarac: strull: It's hard to open with that high verbose level. Messages spam and i can't open.. ; ) hold on a second
04:18  strull: I know. Sure
04:20  esaym: is there anyway to pass ":set spell" when vim is started from the command line without having to type it in once vim is running or adding it to vimrc?
04:21  zarac: strull: Ok, there tons of lines, what exacltly am i looking for?
04:21  strull: esaym: :he -c
04:22  strull: zarac: well, obviously for the one that triggers your autocommand
04:23  zarac: strull: I don't think it's there.
04:24  zarac: Can't find it anyway.. read through it 3 times.
04:25  zarac: strull: Ok now i find it.. ; )
04:25  zarac: sorry
04:25  zarac: Executing BufRead Auto commands for "*.java"
04:25  zarac: and then my au setlocal ...
04:26  esaym: strull: how do I use that?
04:26  strull: just like the examples indicate
04:27  esaym: strull: n/m I see
04:27  esaym: ty
04:28  strull: zarac: try without the quotes ("), and use forward-slashes and quote the spaces
04:30  zarac: strull: How can i run two commands at the same time? So i can do :set vbs=9; :e SomeFile.java
04:30  zarac: ..or similar
04:30  zarac: that way it's easier to open.. : )
04:30  strull: :he :bar
04:31  strull: try w/o the vbs
04:32  zarac: strull: same result, i tried with tags+=taggar
04:32  strull: zarac: wasn't it path earlier?
04:34  zarac: strull: correct, i tried tags instead now
04:34  _numbers: how to change the background color of vim highlight?
04:37  fow: _numbers, with the :hilight command, the Search and IncSearch hilight groups
04:38  pastyhermit: How do I set the current working directory?
04:38  pastyhermit: Im running gvim for windows.
04:38  zarac: strull: i got it working now, no " and escape spaces with \ adds it
04:38  jeffszusz: :chdir or :cd, not sure
04:38  fow: pastyhermit, :cd
04:38  zarac: thanks
04:38  fow: jeffszusz, both!
04:38  strull: np, have fun!
04:39  jeffszusz: fow; are they identical or just similar?
04:39  pastyhermit: cool thanks! also how do I specify a font for set guifont?  I tried set guifont=Conslas 10 but that didnt work
04:39  fow: jeffszusz, the help for :chdir says "Same as :cd." and nothing else
04:39  fow: pastyhermit, it's easier to just use the menus :P But see :h 'guifont and :h option-backslash
04:40  jeffszusz: lol
04:40  pastyhermit: no cause the menus suck... they dont save your prefs I have to put it in ~/_vimrc
04:42  fow: pastyhermit, oh, then ignore that part of what I said
04:44  pastyhermit: got it
04:44  pastyhermit: set guifont=Consolas:h10
04:44  pastyhermit: sweet thanks all!
04:44  pastyhermit: now I can loose the cmd.exe window :D
04:44  pastyhermit: Is there a variable for the current file thats open?
04:45  pastyhermit: so I can go !c++ $currFile
04:46  fow: pastyhermit, you're welcome, and simply %
04:46  pastyhermit: thanks!!
04:46  pastyhermit: so rad...
04:46  pastyhermit: can I put comments in .vimrc?
04:47  gkatsev: yes
04:47  gkatsev: " is the comment char
04:50  pastyhermit: ok cool
04:53  thowe: I can't seem to figure out how to get more than one level of undo to work...
04:54  strull: thowe: try :set ul=1000
04:55  thowe: I have one machine that it "just works" on without any .vimrc options anywhere, but another machine it does not.  When I ":set undolevels=1000" it still only undoes and redoes a single action when I hit "u".
04:55  strull: thowe: try :set nocp
04:55  thowe: ul not undolevels?
04:55  thowe: what's nocp?
04:55  fow: thowe, :set cpo-=u
04:56  thowe: what's cpo-=u?
04:57  fow: Vim has the compatible and the cpoptions settings. compatible is sort of a catch-all for vi compatibility, while cpoptions selectively enables/disables things
04:57  thowe: hm
04:58  fow: Unless you're a hardcore vi user, you probably want to disable compatible (which should set cpo-=u come to think of it)
04:58  bdrewery: speaking of compat, in compat mode if you do 'cw' or 'C' it shows a $ at the end of the text you're editting. Is there a way to enable that in nocompat?
04:59  fow: bdrewery, one of the cpo flags does that
04:59  fow: apparently the $ flag, so set cpo+=$
04:59  bdrewery: nice!
04:59  bdrewery: thanks
05:01  jeffszusz: is there a way to map
05:01  jeffszusz: Ctrl+s+p
05:01  strull: jeffszusz: only in gvim
--- Log closed Fri Oct 22 05:07:23 2010
--- Log opened Fri Oct 22 05:07:47 2010
05:07 --- Users 561 nicks [0 ops, 0 halfops, 0 voices, 561 normal]
05:09 --- Channel #vim was synced in 117 seconds
05:10  jeffszusz: strull why is ctrl+s bad?
05:10  strull: because very likely your terminal will catch it. Same for ctrl-q
05:11  jeffszusz: ahhh
05:11  jeffszusz: well then
05:12  jeffszusz: for those four options, is there something more sensible i could use? i'm trying to avoid taking up four of the F keys.
05:12  Rakko: Hi folks
05:12  Rakko: Anyone able to direct me in profiling? So far I have this: http://www.pastey.net/141943
05:14  Rakko: I can't find any good resources on how to do this
05:16  jamessan: jeffszusz: anything that starts with <Leader>
05:16  jeffszusz: i can't get my leader to work properly...
05:16  sir_lewk: it seems backspace has started only deleting things that I entered during that particular insert session, how can I change this?
05:16  jeffszusz: i've got one mapped to
05:16  jeffszusz: ,ss
05:16  jeffszusz: and it does nothing
05:16  jamessan: sir_lewk: :help 'backspace
05:16  jeffszusz: but ,it does.
05:17  jamessan: jeffszusz: what does and ":map ,ss" shows something?
05:17  sir_lewk: thanks
05:17  jeffszusz: it says it's mapped to the right thing
05:18  jeffszusz: :set spell
05:18  jeffszusz: but typing :set spell works, and ,ss does not.
05:18  Rakko: jeffszusz: what are your timeout and ttimeout set to?
05:19  jeffszusz: i have no idea
05:19  strull: hehe
05:19  Rakko: :set timeout? ttimeout?
05:20  jeffszusz: what kind of output am i hoping for there?
05:20  jeffszusz: it repeats timeout and ttimeout
05:20  Rakko: oh, I'm sorry
05:20  Rakko: I meant :set timeoutlen? ttimeoutlen?
05:21  jeffszusz: 1000 and 200
05:22  Rakko: ok, so it's probably not timing out
05:22  Rakko: unless you wait more than a second after hitting ,
05:22  jeffszusz: naw, i hit it fast
05:22  jeffszusz: ,it and ,id and ,idt work fine
05:22  Rakko: ok. hmm :(
05:22  jeffszusz: ,ss and ,ev don't work though. so weird.
05:23  gMinuses: why do I always get this  "no lines in buffer" message when trying to edit an empty file? any ideas?
05:23  strull: gMinuses: because there are "no lines in buffer" ?
05:24  gMinuses: strull: I don't remember seeing such messages before, is it new to vim7.3?
05:24  strull: don't get confused. Just ignore it. It's a harmless message
05:24  Rakko: nothin' to see here!
05:25  gMinuses: strull: ok, thanks.
05:29 --- silence is now known as Guest79849
05:30  jeffszusz: http://paste.pocoo.org/show/278674
05:30  jeffszusz: that's what i have for my leader mappings
05:30  jeffszusz: for some reason... most don't work.
05:32 --- Guest79849 is now known as ajpiano
05:32  fow: jeffszusz, works for me (<leader>ss at least)
05:32  jeffszusz: would it be too much to paste my full vimrc?
05:33  gkatsev: pastebin
05:33  jeffszusz: well yes
05:33  jeffszusz: http://paste.pocoo.org/show/278675
05:37  strull: jeffszusz: you should try nnoremap instead of nmap
05:37  strull: esp. since you swapped : and ;
05:37  jeffszusz: ok
05:40  jeffszusz: you sir are a genius
05:40  jeffszusz: it all works now.
05:42  strull: you share your opinion with my boss
05:42  jeffszusz: lol
05:42  jeffszusz: what do you do?
05:42  strull: consulting
05:42  jeffszusz: ooo
05:43  jeffszusz: shitty consulting or fun consulting?
05:43  strull: i like it
05:44  jeffszusz: awesome
05:46  jeffszusz: hm
05:46  jeffszusz: how would one create a map with multiple lines?
05:46  jeffszusz: like making <F4> do several different things at once.
05:46  Rakko: use <Bar> between them
05:46  fow: jeffszusz, :foo <bar> bar <bar> baz
05:46  jeffszusz: <bar> or | ?
05:47  Rakko: must be <bar> for a mapping
05:48  strull: or <cr> (depending on context)
05:48  jeffszusz: hm
05:49  jeffszusz: if i'm opening a split
05:49  jeffszusz: *stops and checks help before he continues*
05:54  jeffszusz: is
05:54  jeffszusz: noremap <silent> <leader>pe :ConqueTermVSplit python <bar> :10split <bar> :ConqueTerm bash <bar> :NERDTreeToggle<CR>
05:54  jeffszusz: super wrong?
05:54  jeffszusz: it's not doing what I expect but I'm not sure why
05:55  Rakko: hmm, it looks OK
05:55  strull: jeffszusz: hint. Make your first tries w/o <silent>
05:55  Rakko: you don't strictly need : after <bar>
05:55 * strull had strange effects in the past with <silent>
05:56  Rakko: Is it supposed to be Conque and not Conquer?
05:56  jeffszusz: yeah
05:56  jeffszusz: ConqueTerm lets me open a terminal shell
05:56  Rakko: in vim?? cool
05:56  jeffszusz: it works for bash and for python etc.
05:56  Rakko: I was looking for such a thing
05:56  jeffszusz: so i'm basically opening up a vsplit
05:57  jeffszusz: with a python interpreter in it
05:57  jeffszusz: then splitting that horizontally and putting a bash shell in it
05:57  jeffszusz: i have it set up manually quite nicely
05:57  jeffszusz: i'm trying to make
05:57  jeffszusz: ,pe
05:57  jeffszusz: set it up automatically for me for future use.
05:58  Rakko: what happens when you hit ,pe?
05:59  jeffszusz: well now it tells me python isn't an executable
05:59  jeffszusz: previously it was just opening up the splits wrong.
05:59  Rakko: hmm, maybe not in your path
05:59  jeffszusz: oh... hm i wonder if autochdir is messing this up again.
05:59  agenteo: hi, I recently discovered relativenumber, how can I move to the 5th line before the current one?
06:00  Rakko: 5k
06:00  agenteo: easy
06:00  agenteo: thanks raccoon_
06:00  agenteo: thanka Rakko! :)
06:00  Rakko: hehe
06:00  Rakko: I didn't know there was another raccoon in here
06:02  jeffszusz: the crazy thing is
06:02  jeffszusz: when this exact map was on multiple lines in an external script
06:02  jeffszusz: and i sourced it
06:02  jeffszusz: it worked fine.
06:03  jeffszusz: but for some reason when it's in one line with <bar> instead of newlines, it does not work right.
06:07  jeffszusz: you know how in bash if you do
06:07  tuyetnga: hi vim
06:07  jeffszusz: command1 | command2
06:07  jeffszusz: command 2 takes command1's output as an argument?
06:07  jeffszusz: is there a vim equivalent to only doing command1; command2   ?
06:08  Rakko: | is ;
06:08  Rakko: it's not a pipe like in bash
06:08  jeffszusz: hm
06:08  jeffszusz: ok
06:08  jeffszusz: well for some reason this <bar> thing is giving me some troubles
06:08  Rakko: weird
06:08  Rakko: maybe I'll install conque (since I want to anyway) and try this
06:08  fow: What troubles?
06:09  Rakko: I'm wondering if I will want to kick myself later for installing so many extensions
06:10  strull: jeffszusz: then try <cr> instead of <bar>
06:10  jeffszusz: oh wait
06:10  jeffszusz: are you not supposed to put the : after the bar?
06:12  jeffszusz: k with <cr> instead of <bar> it goes a step further... but still doesn't go past the first <cr>
06:13  Rakko: the : after <bar> doesn't matter
06:13  Rakko: but after <CR> it does
06:14 --- CHOCOBY is now known as chocoby
06:14  tuyetnga: what <CR> means ?
06:15  jeffszusz: <CR> is carriage return (enter)
06:15  tuyetnga: ok
06:15  jeffszusz: <CR> makes the first command work, but ignores the second.
06:15  jeffszusz: erf
06:17  Rakko: yeah, I get a Python shell but nothing else
06:18  Rakko: it makes a beep like something's wrong but I can't tell what
06:21  jeffszusz: oh you CAN define functions in vim
06:21  jeffszusz: sweet
06:23  Rakko: yes
06:24  jeffszusz: to do a command is it execute "command" ?
06:27  Rakko: execute is used for executing commands stored in a string
06:27  Rakko: otherwise you can just type the command
06:27  jeffszusz: ok
06:27  jeffszusz: and how do i call the function from a keymap?
06:27  jeffszusz: :call doesn't highlight
06:28  Rakko: yes, call
06:28  Rakko: doesn't highlight?
06:29  jeffszusz: nevermind, none of hte :commands highlight
06:29  jeffszusz: noremap <silent> <leader>pe :call pythonIDE()
06:29  jeffszusz: that close?
06:30  jeffszusz: piece of...
06:32  Rakko: yeah
06:32  Rakko: I see that ConqueVSplit goes into insert mode
06:33  jeffszusz: oh
06:34  Rakko: this is pretty screwy
06:34  jeffszusz: lol
06:35  Rakko: it keeps beeping and I don't know why
06:36  jeffszusz: hm
06:36  Rakko: and the python window doesn't show anything until I go into insert mode
06:36  jeffszusz: if i record a macro as i set it up
06:37  jeffszusz: can i then output the macro in text form instead of playing it with the @ symbol?
06:39  jeffszusz: erf, apparently , as a leader means macros are broken hah
06:40  Rakko: try noremap <leader>pe :ConqueTermVSplit python<CR><Esc>:10split<Bar>ConqueTerm bash<CR>
06:40  Rakko: I'm not sure about that
06:40  jeffszusz: yeah i'm trying that one
06:41  strull: what is this ConqueTerm thing?
06:42  jeffszusz: ConqueTerm is a script that opens a shell inside vim
06:42  jeffszusz: bash, python, sh
06:42  jeffszusz: whatever
06:42  jeffszusz: technically you can execute any shell command that has interactivity
06:43  jeffszusz: so theoretically you could open, say, emacs inside of vim O_o or something
06:43  jeffszusz: ahahahaha
06:43  jeffszusz: emacs inside of vim works.
06:44  gkatsev: yeah, the command to run emacs in vim is :qa!eamcs<CR>
06:44  gkatsev: :qa!emacs<CR>
06:44  gkatsev: you have to remember to spell emacs correctly or RMS will yell at you.
06:44  gkatsev: also, you wont be able to use it in vim
06:45  jeffszusz: yeah the key combos will be messed
06:45  jeffszusz: but it runs
06:46  jeffszusz: wait are you saying...
06:46  jeffszusz: ok
06:46  jeffszusz: bash doesn't work with :qa!bash
06:47  gkatsev: lol
06:47  gkatsev: silly me, I forgot a keystroke
06:47  gkatsev: :qa!<CR>emacs<CR>
06:48  jeffszusz: that quit the window
06:48  jeffszusz: oh
06:48  jeffszusz: JOKES
06:48  strull: mmm ... the docs look promising. I'll recompile my vim and enable python and try
06:48  gkatsev: lol
06:48  jeffszusz: strull you don't have
06:48  jeffszusz: to
06:48  jeffszusz: it just uses the python interpreter that would be executed in your terminal.
06:48  gkatsev: vim comes +python by default, usually.
06:48  gkatsev: unless you are on windows
06:49  strull: gkatsev: I have my own-compiled version
06:49  gkatsev: ok
06:49  strull: and mine has +perl (and no other interface so far)
06:49  jeffszusz: strull: still don't think you'd need to compile python in if you just want to use ConqueTerm python
06:49  jeffszusz: oh wait
06:49  strull: the docs say so
06:49  jeffszusz: does ConqueTerm itself use python? hm
06:50  gkatsev: you do
06:50  strull: I guess yes. vimscript is not powerful enough :)
06:51  strull: this script has a good karma. I'll sure try it
06:51  Rakko: jeffszusz: did you try the mapping I gave?
06:51  Rakko: I left off nerdtree because I don't have that
06:52  jeffszusz: i did rakko
06:53  jeffszusz: let me double check
06:54  jeffszusz: wow
06:54  jeffszusz: i had it wrong
06:54  jeffszusz: it works!
06:55  strull: well. thinking about it. I probably don't recompile. Now I remember, why I didn't enable python
06:55  Rakko: yay
06:55  strull: I quote : # NOTE: Using this together with Perl may cause a crash in initialization.
06:56  Rakko: I wish I could make conque stop beeping at me when splitting
06:56  jeffszusz: lol
06:58  Rakko: and also I don't get why the text in the python window goes away when I use \pe, but not when I do it manually
06:58  jeffszusz: lol
06:58  jeffszusz: ahhh
06:58  jeffszusz: well
06:58  jeffszusz: do \pe
06:58  jeffszusz: then go into insert mode in the python split.
06:58  jeffszusz: i think it's just hiding until you go into insert.
06:59  Rakko: yeah
06:59  Rakko: but if i type the commands myself it's not hidden
06:59  jeffszusz: yeah so weird
06:59  Rakko: now I have 16 pythons running :(
07:00  jeffszusz: LOL
07:00  jeffszusz: why?
07:00  Rakko: I kept opening them to test
07:00  Rakko: and then just doing :q didn't close them
07:02  jeffszusz: lol
07:02  jeffszusz: i just realized something...
07:02  jeffszusz: you could probably use a simple IRC client in ConqueTerm
07:02  jeffszusz: if there's one with no conflicting keybindings
07:04  Rakko: yeah
07:05  Rakko: speaking of key bindings, ctrl-d in python triggers an error
07:06  jeffszusz: lol
07:06  Rakko: not cool
07:13  jeffszusz: the only thing i don't like is that python seems to take up the entire height of the column
07:22  Rakko: not on mine
07:25  jeffszusz: is there a way to dump a recorded macro as text instead of running it?
07:25  Jerub: it's stored in a register
07:25  Jerub: "Xp
07:25  Jerub: where X is the register you saved it to
07:26  jeffszusz: sweet
07:26  jeffszusz: wow what a mess XD
07:28 --- chocoby is now known as CHOCOBY
07:30  strull: mmm ... pretty funny, this ConqueTerm. But not working too well for me
07:30  Rakko: I have vim in vim in vim
07:30  Rakko: nor me
07:30  jeffszusz: aha
07:30  strull: still promising. I'll look again in a year or so :)
07:31  jeffszusz: strull, bash seems to work fine and python is mostly fine
07:31  Rakko: yeah, it's the vim parts of it that seem problematic
07:32  Rakko: speaking of terms in terms, I've been hatching this evil scheme to emulate a smart terminal using a dumb terminal
07:32  Rakko: just for fun
07:33  Rakko: most operations would cause the whole thing to scroll up a screen... fun stuff
07:35  strull: jeffszusz: maybe my setup is too complex. But it's not working too well for me
07:36  strull: for one, it seems to emulate a vt100
07:36  strull: I'm still surprised of what the author already achieved
07:44  ChrisBuchholz: Hey guys. I use a plugin called unimpaired to do some text-bubbling, and i have mappings like 'nmap <C-up> [e' ind my .vimrc. If i just type [e in normale mode, it works, but using my mapping, it doesnt.
07:45  Rakko: text-bubbling?
07:45  Rakko: ChrisBuchholz: do you use vim in a terminal?
07:45  ChrisBuchholz: yeah, you know, moving some text up and down through the restof the document
07:46  Rakko: oh
07:47  ChrisBuchholz: Rakko: yeah, in a terminal. The mappings have worked for me before, but then i have had lots of troubles with screen vs vim and now it doesnt work (and this is out of screen - it doesnt even react to the key-combo in screen, so thats an issue i'll have to talk with folks at #screen about) :P
07:47  pgib: hmm I just use d and p
07:47  strull: jeffszusz: it's not totally useless for me though. It solves a problem I had no solution for w/o this plugin
07:47  strull: but for everyday work it does not suit me
07:47  Rakko: hmm
07:47  ChrisBuchholz: pgib: d and p is cool - but the thing is - i also have 'vmap <C-Up> [egv' which makes me do it with whole blocks of text.
07:48  Rakko: so the terminal does send a C-Up that Vim understands?
07:49  ChrisBuchholz: Rakko: it indeed looks like it, of course it doesnt work so i am not sure, but when i do it in screen, it changes modes and do crazy stuff. Here it just does nothing really
07:50  Kismet010: morning
07:51  Rakko: hi
07:51  ChrisBuchholz: Rakko: i just changed the shortcut to C-k/j and that works
07:51  Rakko: good
07:51  ChrisBuchholz: that is also move vim like, so i guess i'll just stay with that
07:53  ChrisBuchholz: thanks guys
07:53  Rakko: wish we could help get c-up working though
07:53  ChrisBuchholz: Oh yeah! with j/k keys, it also fixed the issue in screen :P
07:54  ChrisBuchholz: Rakko: yeah - would be cool to know what was going on, because it has worked before, and i have not modified my .vimrc since it worked
--- Log closed Fri Oct 22 08:48:45 2010
--- Log opened Fri Oct 22 10:55:19 2010
10:55 --- Users 560 nicks [0 ops, 0 halfops, 0 voices, 560 normal]
--- Log closed Fri Oct 22 10:55:26 2010
--- Log opened Fri Oct 22 10:55:33 2010
10:55 --- Users 560 nicks [0 ops, 0 halfops, 0 voices, 560 normal]
10:55  bairui: Patric3: I didn't... ah, that's a long story... And it ends with IRC being the polish anyway...
10:55  bairui: LaoLang_cool: did you try     g`"        ?
10:56 --- Channel #vim was synced in 73 seconds
10:57  the_isz: Patric3: for your search problem: you could also call the underlying function directly:   :call search("expr")
10:57  LaoLang_cool: bairui: that's it, thank you!
10:57  bairui: LaoLang_cool: ur welcome :)
10:57  the_isz: Patric3: there, expr may include / as a normal character unescaped
10:57  Patric3: the_isz: Thanks :-)  Along with "*" I presume ?
10:57  the_isz: Patric3: but then you have to escape \ :(
10:57  the_isz: Patric3: yeah, think so
10:58  Patric3: (My file must be a bad example.  I also want to search for five asterisks
10:58  Patric3: My file must have anti-VIM technology
10:59  the_isz: Patric3: :P
10:59  Patric3: Any easy way to kill "whitespace" blank lines from the cursor ?
10:59  Patric3: errr... Is there ?
11:00  Patric3: (Forgive my Yoda speak)
11:00  bairui: :g/^\s*$/d
11:00  Patric3: ah - nice
11:00  bairui: help you, we can
11:01  Patric3: Why not just :g/^$/d
11:01  Patric3: (I don't know much about regexp...)
11:01  bairui: that has no whitespace...
11:01  bairui: that's just an empty line
11:01  the_isz: Patric3: that'd only kill empty lines
11:01  Patric3: ah - actually that's what I was meaning... "Vertical" whitespace
11:01  bairui: whitespace has horizontal friends too, you know
11:01  Patric3: :-)
11:02  Patric3: empty lines a better description it was
11:02  bairui: yoda's back :)
11:02  the_isz: no spoon, there is
11:04  bairui: the_isz: are you mixing Star Wars and The Matrix there? ;)
11:04  the_isz: indeed :)
11:04  bairui: cool! :)
11:05  the_isz: new style cocktail
11:05  the_isz: i am your father, mr anderson!
11:05  bairui: haha!
11:05  Patric3: Agent Vader
11:05  the_isz: :D
11:05  the_isz: yeah
11:05  the_isz: that one
11:06  bairui: funny... :D
11:08  jorrit: Hi
11:19  iaj: someone in here doing Java Coding :-) ?
11:23  the_isz: iaj: i used to during the first 2 years at university. but i wasn't using a decent editor at that time...
11:23  bairui: Java?! urgh... :-/
11:24  the_isz: it's not that bad. it's like a compiled python i think.
11:24  bairui: no. Java is bad.
11:24  the_isz: not that much functional-programming, but, you know, portable and garbage-collected
11:24  the_isz: since oracle baught it you mean?
11:24  the_isz: s/baught/bought/
11:25  bairui: no. since ever.
11:25  bairui: they probably baught it too ;)
11:25  the_isz: i wouldn't say that
11:26  the_isz: what's 'baught'? or is it just you think they did everything conceivable to it so it also includes 'baught', whatever it may mean?
11:26  bairui: indeed :)
11:27  GDG: I have no idea why, but vim changed behavior... now in insert mode I cannot go with the cursor through a word, it stops at the beginning...
11:27  bairui: going along the rhyming    borked    :)
11:27  GDG: I have to switch to the command mode
11:27  bairui: GDG: stop navigating in insert mode.
11:27  bairui: and you mean 'normal' mode.
11:27  GDG: sorry
11:27  bairui: not a problem
11:27  GDG: but why it changed
11:27  bairui: karma?
11:28  GDG: previously it worked without such a problem
11:28  the_isz: lol @ bairui
11:29  the_isz: in that case GDG should probably remove the karma.vim plugin which keeps punishing him for moving in insert mode
11:29  bairui: GDG: (I don't know why I'm pursuing this, but...) what do you mean you can't go through a word with the cursor in insert mode? You're using the arrow keys, I take it?
11:29  bairui: the_isz: :)
11:29  GDG: yes
11:29  GDG: arrow keys
11:30  GDG: and I do not have bad karma :D
11:30  bairui: GDG: seriously, though, don't. Don't navigate in insert mode. Return to normal mode to navigate.
11:30  bairui: :p
11:30  GDG: but why not in insert mode
11:30  bairui: it kills kittens
11:31 * bairui doesn't have a clue where he put the vimgor cartoons :-/
11:31  GDG: come on
11:31  bairui: GDG: there are MUCH more useful ways to navigate in Vim
11:31  bairui: vimgor navigation
11:31  vimgor: Wish I knew.
11:31  bairui: bugger...
11:31  bairui: vimgor movement
11:31  vimgor: In normal mode, all of these keys can move the cursor: ` # $ % ^ * ( ) 0 _ - + w W e E t T I o O { } [[ [] ][ ]] [m [M ]m ]M [( ]) [{ ]} | A f F ge gE gg G g0 g^ g$ g, g; gj gk gI h H j k l L ; ' z. z<CR> z- zz zt zb b B n N M , / ? <C-b> <C-d> <C-e> <C-f> <C-h> <C-i> <C-o> <C-t> <C-u> <C-y> - learn to use all of them
11:32  the_isz: jackpot :P
11:32  bairui: GDG: it's just really inefficient... but, let's see... what actually happens - does the cursor just stop moving? does something else happen?
11:32  GDG: nothing else
11:33  GDG: example:
11:33 --- raorn_ is now known as raorn
11:33  GDG: hello                   world
11:33  bairui: ?
11:33  GDG: I can run through the white spaces, but it stops at w
11:33  GDG: I have to swithc to normal mode
11:34  bairui: what does    :imap <Right>   say?
11:34  bairui: are you on Windows?
11:34  GDG: <Right>      @<C-R>=sqlcomplete#DrillIntoTable()<CR>
11:34  GDG: ok
11:35  GDG: it is a sql syntax
11:35  GDG: issue
11:35  GDG: really I am editing sql files
11:35  GDG: can I disable this? how can I remap <Right> arrow?
11:36  bairui: GDG: don't - I was just checking that that hadn't already happened.
11:36  bairui: you could try   :set ft=text    but that'd just be to see if the problem goes away - hardly a solution...
11:37  mortehu: I'm unable to find out how I stop VIM from keeping files open after I close the tab.  This behavior started with a recent version of VIM in Debian.  My problem is that when I open a file in another terminal, I get the "[O]pen Read-Only, (E)dit anyway"-thing, even if the file appears closed in the first VIM instance.
11:37  bairui: ah - well, there you go - sorry, I didn't read back far enough (afk)
11:37  GDG: it remains
11:37  GDG: i  <Right>      @<C-R>=sqlcomplete#DrillIntoTable()<CR>
11:37  bairui: GDG: you can disable that <Right> imap     :iunmap <Right>
11:37  GDG: ok
11:38  bairui: mortehu: you need to use   :bd   to remove the buffer
11:38  mortehu: Is there no option to make this the default behavior?  I don't  want to press that many keys to close a buffer.
11:39  mortehu: I.e. I prefer ZZ
11:39  bairui: mortehu: you shouldn't be using Tabs as buffer holders, but that's another discussion altogether...
11:40  mortehu: I don't understand.  I just create a tab and open files in it with :e.  Is there another way?
11:40  bairui: opening your files in the one... "tab page" (for want of a better word)
11:40  bairui: vimgor tabs
11:40  vimgor: Tab pages are not buffers, don't try to force them to act like buffers. Consider tab pages like viewports, layouts, or workspaces. Trying to setup 1 tab page == 1 buffer is an exercise in futility. Do ':set hidden' and get started. Get FuzzyFinder, LustyExplorer or BufExplorer to make getting around your buffers easier. See http://vim.wikia.com/wiki/Category:Tabs for more info.
11:40  tuyetnga: hi
11:41  mortehu: In general I never want a file with zero views to remain open.
11:41  tuyetnga: . w perturbation
11:43 --- RichiH is now known as RICHIH
11:44  bairui: mortehu: sorry, mate, I can't help any further on that one - I almost *never* use tabs... and certainly not for this purpose. If I really want to unload a buffer, I use :bd, otherwise, I let it sit in my buffer list and come back to it whenever I need to edit that file again.
11:44  mortehu: This problem is unrelated to tabs.  I should have said views.  If I open a second file in split view, then close the view using ZZ, the file remains open.
11:44  the_isz: mortehu: that's intended
11:44  mortehu: But it's a new behavior and I want the old one.
11:45  bairui: Well, lads... time to make dinner. Falafal tonight. :) Good night, all.
11:45  the_isz: mortehu: it allows for better switching with like  :b <partial file name>
11:45  the_isz: bairui: have a nice evening!
11:45  the_isz: mortehu: i don't think it's new, either.
11:45  bairui: cheers, the_isz :)
11:45  mortehu: the_isz: Okay.  This behavior was previously not the default behavior in Debian, now it is.
11:46  d0ugal: So, D delete's the rest of the line - how do I delete the start of the line? (i.e. the opposite of D)
11:47  mortehu: d0ugal: Is d^ okay?
11:47  the_isz: mortehu: the idea is that if you changed a file once, you're likely to change it again soon.
11:47 --- niko is now known as NIKO
11:47  mortehu: the_isz: Yes.  I can see how it would be useful to some people, but I don't want it.
11:47  d0ugal: mortehu: Oh of course, I didn't even think about it like that
11:48 * d0ugal might even prefer d$ to D
11:48  the_isz: mortehu: sorry, mate, i don't know how to disable this behaviour or if it is possible.
11:48  mortehu: Thanks anyway
11:48  mortehu: I guess I'll just read the source.
11:49  Walt: use the source
11:49  Walt: mortehu-luke
11:50 --- bburhans is now known as BBURHANS
11:59 --- CHOCOBY is now known as chocoby
12:06  mortehu: The solution was ":set bufhidden=unload".  This does not disable the :b functionality.
12:06  mortehu: No more [O]pen Read-Only. \o/
12:07  mgedmin: how about the undo stack?
12:07  mortehu: Cleared.
12:07  mgedmin: also, did you notice the bit about CAREFUL: when "unload", "delete" or "wipe" is used changes in a buffer are lost without a warning.
12:08  umarsheikh: hi
12:08  mortehu: I cluse using ZZ, so that doesn't apply.
12:08  mortehu:     o
12:09  mgedmin: why do you have 'hidden' set then?
12:10  mortehu: I don't know.
12:10  mgedmin: :set nohidden ought to what you want without the treacherous 'oh, I'll discard all the changes you've made' ibt
12:10  mgedmin: s/ibt/bit/
12:10  mortehu: Aha
12:11  Silex: TODAY IS CAPSLOCK DAY!
12:11  mortehu: How do you close windows?  I can't imagine how that would be a risk.
12:17  the_isz: mortehu: vim file1    <do some changes without saving>        :e file2
12:17  mortehu: Right.  Clearly my imagination isn't up to par.
12:19  mortehu: Also "hidden" is not a default in Debian.  I made the change myself, and forgot about it.
12:20  mortehu: Thank you all for your time.
12:24  hokapoka: I'm using scp://host//path/to/file.ext to edit a file over scp, but everytime I save the file, via :w<Enter>, I have to re-hit enter for it to load the file again. Any ideas on how to get arround this?
12:49  pk4r: Hello, how do I ignore certain *.type files with NerdTree ?
12:50  kongo: pk4r: :h NERDTreeIgnore
12:52  pk4r: Thanks kongo, did it in seconds..
14:04  Shapeshifter: how can I fix the indentation on a whole .h file? I read about =B =3b etc but they just work on small blocks.
14:04  rson: Shapeshifter: gg=G ?
14:04  the_isz: Shapeshifter: gg=G
14:05  Shapeshifter: ??
14:05  the_isz: type these keys
14:05  Shapeshifter: that doesn't do much. gg goes to the beginning of the doc, =G does nothing
14:05  Shapeshifter: oh wait
14:06  Shapeshifter: nevermind, thanks :) I entered gg=g
14:06  the_isz: Shapeshifter: then the file is already indented
14:06  the_isz: ah :)
14:06  rson: Shapeshifter: :)
14:06  FernandoBasso: :)
14:06  the_isz: reindinting from the beginning of the file to the beginning of the file indeed doesn't do much :)
14:14  Nickwiz: i have set lines=777 in vimrc, but it does not hold up. It looks like it start out with max height, but then there are some flickering and things going on downmost. When it end / all ready - the height is about 73 insetad of  max: 77 lines
14:14  Nickwiz: I also have set guiheadroom=0
14:17  Nickwiz: what could be wrong?
14:19  Nickwiz: if I enter :set lines after startup, the height get maxed.
14:50 --- _mathrick is now known as mathrick
15:13  foocraft: so guys
15:13  foocraft: how can I move a buffer up the buffer list?
15:13  graywh: you can't change the number of a buffer
15:13  foocraft: like when I :ls I see 1 2 3 4 etc. and I want to swap 4 and 2
15:14  graywh: you can exit vim and open your files in the new order
15:14  graywh: that's it
15:14  foocraft: well it's equivalent to closing 3 and 2, and opening them again
15:14  graywh: vim remembers
15:18  the_isz: foocraft: may i suggest that you use :b's great power of guessing what you mean? -->   :b <partial file name><Tab>
15:19  the_isz: foocraft: this way you don't need to worry about what number vim gave your files
15:19  the_isz: s/files/buffers/
15:19 * capitalist or use buffer explorer which has some sort options
15:21  Zolrath: Lurking here is the best
15:22  Zolrath: I am teaching myself vim right now and had no idea :b could just be used for filename switching
15:26  the_isz: Zolrath: yeah, i love hanging out here, too. there are so many people knowing exactly what they do and being polite and helpful as well.
15:30  posey: dudes im on windows using nerdtree and after about 10-15 minutes of working on stuff when i go to open a file from the nerdtree window it opens it but the path to it is all lower case
15:30 * capitalist posey: shouldn't matter though right? the windows file sys is not case sensitive
15:30  posey: the files case is correct but since the entire path to it is not correctly cased its causing another plugin to fail, i dont know what started causing that
15:31  posey: yeah it doesnt matter as far as editing the file and stuff but we use cleartool here for version control and it is case sensitive in windows
15:32 * capitalist gotcha - i'm not on windows but have never had nerdtree do that, think it could be something else?
15:32  posey: its really strange i dont know why this started happening all of a sudden
15:33  posey: let me try to remove a plugin that i just added and see if that is somehow affecting it
15:34  the_isz: capitalist: FYI: ntfs is not case-sensitive, but case-preserving, so it _can_ make a difference.
15:34  posey: alright no that plugin i just added has no effect, its once i open a file from a different directory from the original directory that nerdtree was looking at
15:38  posey: well no just opening some files in my C: root in nerdtree will causes the drive letter that displays at the very top of vim to go to "c:\" instead of "C:\"
15:44  posey: let dir = b:NERDTreeRoot.path.str({'format': 'UI'}) . dir
15:45  posey: thats what it recursively does to build the full path, not sure where to find out why that would be getting its case changed
15:50  posey: another strange thing is that in the nerdtree window all the directories are listed in the correct case, its just when the file is opened the case is wrong
15:55  errordeveloper: hi ..
15:56  errordeveloper: is there a way of doing what vim -d does, but comparing two C function definitions?
15:56  errordeveloper: also .. I need to find out how can I save all the folds that I got right now ..
15:57  errordeveloper: I am just going trough quite large peace of C code which have some differences, but a lot of it is common
15:57  errordeveloper: different versions of the same code (to some extend)
16:03  posey: alright looks like it was an issue with this patched version of vim i dl'd for win32 that had python support, dude mustve patched it with some weird shit everythings ok now
16:05  the_isz: posey: good to hear.
16:05  posey: the_isz: i needed python for this other plugin that uses it, is there any way to get an official build with python support? or do you have to build those on your own?
16:06  the_isz: errordeveloper: i don't know a way to diff parts of files directly, but you might want to write the different versions of the parts into separate files and diff those maybe?
16:06  posey: i use that plugin way less than the one that was getting broken by the filename case thing though so this is ok would just be cool to have both working
16:07  mgedmin: errordeveloper, you'll need to write those C functions into separate temporary files to diff them
16:07  mgedmin: you can use views to save folds, afaik
16:07  mgedmin: I don't use manual folding myself
16:09  the_isz: posey: well, are you sure the official version is lacking python support? cause i can't imagine it does...
16:09  the_isz: posey: have you had a look at the output of  :version  already?
16:10  posey: sigh hold on im a moron LOL
16:11  posey: duh, its built into the standard sorry i just didnt have python installed on my system
16:11  the_isz: posey: :D
16:11  the_isz: posey: would've been my next question
16:11  posey: works fine with official 7.3 version, thanks dude LOL :-|
16:11  the_isz: posey: no biggie
16:12  posey: this is the most helpful channel ever, someone is always able to help. really great
16:16  seemawn: hi
16:17  seemawn: which command is to disable or to enable to avoid wrapping the cursor to next/previous line when I am at the end and press h or l?
16:18  deryni: :help 'ww
16:18  seemawn: :help 'seemawn
16:18  errordeveloper: I see, yeah ..hm, ..would be nice if you could actually just diff it that way ..
16:19  seemawn: I mean, when I am at the beginning of a line and I press h, the cursor wraps to the end of the prvious line. I dont want that.
16:19  deryni: seemawn: Right, see the result of :help 'ww in vim.
16:19  seemawn: deryni:
16:19  seemawn: ic
16:21  seemawn: deryni: thx a lot
16:22  seemawn: i found it
16:28  mgedmin: snipmate's :help is inadequate
16:29  mgedmin: it doesn't mention that you can put your custom snippets in 'snippets/<filetype>-<arbitrarysuffix>.snippets' so they won't be overwritten when you upgrade
16:29  iaj: someone in here using tidy with makeprg and evalprg settings?
16:29  mgedmin: and it doesn't say what to do to get snipmate to notice when you add/edit a snippet
16:31  FernandoBasso: mgedmin: What?! You mean my *custom* snippets in $HOME/.vim/snippets/php/* will be overwritten?
16:31  mgedmin: no, I mean 'snippets/<filetype>.snippet' should not be edited directly
16:32  mgedmin: is what the web page said
16:32  FernandoBasso: mgedmin: Oh! Whew!!
16:32  mgedmin: when it suggested <filetype>-<something>.snippet
16:32  FernandoBasso: I don't use the default snippets.
16:32  mgedmin: and I'm grumbling that :help doesn't mention that possibility
16:33  FernandoBasso: mgedmin: You could suggest it to the author of the plguin...
16:33  FernandoBasso: Although he should have thought about that himself...
16:33  mgedmin: yak shaving, ever heard of it?
16:34  FernandoBasso: No. I haven't.
16:34 --- chocoby is now known as CHOCOBY
16:34  the_isz: sounds sexy ;P
16:36  mgedmin: http://sethgodin.typepad.com/seths_blog/2005/03/dont_shave_that.html
16:37  mgedmin: I'm implementing a feature, for which I need to write some tests, for which I wanted to define a new snipmate snippet, and now I need to find out how to get snipmate load it without restarting vim
16:37  mgedmin: so I'm reading the help and if I start sending well-crafted enhancement suggestions to the author, my stack'll overflow
16:37  mgedmin: http://code.google.com/p/snipmate/issues/detail?id=118&colspec=ID%20Type%20Status%20Priority%20OS%20Summary
16:40  Silex: mgedmin: call ReloadAllSnippets() ?
16:40  rson: i hate that the default python snippets in snipmate have . defined as self., meaning i can't use shipmate and supertab together for omnicompletion because foo. expands to fooself. :/
16:40  mgedmin: is there such a function?
16:40  mgedmin: (no)
16:40  Silex: mgedmin: yes, it's mentioned in the docs iirc
16:40  Silex: there's all REloadSnippets('cpp')
16:40  mgedmin: :call Relo<tab>
16:40  mgedmin: :call R<tab> shows that there's just ResetSnippets()
16:40  mgedmin: do you use a new, unreleased version?
16:40  Silex: no
16:41  rson: mgedmin: i use it from the git repo and I have those functions defined.
16:41  Silex: I use the latest one, :h ReloadAllSnippets() even shows me doc for it
16:41  deryni: The default python snippets define an abbr/map for . by itself??
16:41  Silex: hum true, maybe that's only in git
16:41  Silex: I use vim-addon-manager so not sure where pulls it from
16:41  Silex: probably git
16:41  rson: deryni: yeah there is a snippet defined for .
16:41  rson: annoying
16:42  mgedmin: yak shaving! yak shaving!
16:42  deryni: That sounds horrifying.
16:42  Silex: mgedmin: this yak shaving story was nice tho
16:43  Silex: mgedmin: but yeah, just use the latest version, or use MarcWeber's snipmate version which reloads automagically
16:43  mgedmin: aaaaaugh
16:44  mgedmin: now I've got to go google for random forks of unreleased snipmate versions
16:44  mgedmin: do you have a url?
16:44  Silex: hold on
16:45  mgedmin: 117 forks on github
16:45  mgedmin: insanity
16:45  Silex: the snipmate I use is git://github.com/msanders/snipmate.vim.git
16:45  Silex: it's the official github repo
16:45  Silex: this one has ReloadAllSnippets() etc
16:45  Silex: I guess that is enough, if you want MarcWeber's one which automagically reloads them ask me
16:46  mgedmin: I'll try this one first
16:46  Silex: http://github.com/msanders/snipmate.vim for the website
16:48  Silex: and yeah, he added the functions after 0.83.. http://github.com/msanders/snipmate.vim/commit/504fcdf50b9ad75a7936d1cb3b46fcbd0ceb3eed
16:48  Silex: btw, a simple google for "snipmate reload snippets" link to this
16:49  mgedmin: was it yesterday? when someone complained that people google for vim tips instead of using :help
16:49  Silex: what was yesterday?
16:49  mgedmin: someone complained that people google for vim tips instead of using :help
16:49  Silex: I don't know
16:49  mgedmin: (only I'm not sure about yesterday, hence the confusing ?)
16:49  mgedmin: (might have been two days ago)
16:49  Silex: I just know that using :h and not finding what you want there doens't mean you should start implementing your own solution
16:50  Silex: it means you'd start searching differently, e.g with google
16:50  mgedmin: or you go on irc and vent
16:50  mgedmin: because you haven't had lunch today
16:50  mgedmin: hypothetically speaking
16:51  Silex: personally I use :h for simple things, then I go on google for anything more complicated
16:51  mgedmin: although hey, I haven't had lunch today, actually
16:51  Silex: but my google-fu is strong
16:53  mgedmin: thanks for your help, Silex!
16:56  Silex: you're welcome
16:56  Silex: mgedmin: consider using vim-addons-manager... saves you some trouble of figuring where to pull from
16:56  skered: Silex: URL?
16:56  mgedmin: an apt-get equivalent for vim plugins would be awesome
16:57  skered: Is that something that runs inside of vim?
16:57  Silex: http://github.com/MarcWeber/vim-addon-manager
16:57  mgedmin: what discourages me from trying vim-addons-manager is the name clash with vim-addons-manager
16:57  mgedmin: see? confusing
16:57  Silex: yeah the name ought to change eventually
16:57 * mgedmin wants to :!vim-get install SnipMate
16:58  Silex: well, here it's :ActivateAddons SnipMate
16:58  Silex: with autocompletion for the possible plugins
16:58  mgedmin: eh?  I can't use it from shell?
16:58  Silex: and automatic plugins dependencies
16:58  Silex: no it's a vim plugin
16:58  Silex: like pathogen if you want
16:58  Silex: but much better
16:59  Silex: MarcWeber: do I get a commission for advertising your plugin? :P
17:00  mgedmin: looking at pathogen is on my to-do list
17:00  gkatsev: Silex: you can get a 100% comission, i'm sure.
17:01 * mgedmin maps ,SE :e $HOME/.vim/snippets/<C-R>=&ft<CR>-mg.snippets<CR>
17:01 * mgedmin maps ,SS :call ReloadAllSnippets()<CR>
17:02  mgedmin: ooh, snipmate is smart
17:02  mgedmin: .<tab> -> self. is Bad when you need to write '...    ' in a doctest
17:02  mgedmin: but adding a snippet ... -> ... fixes that
17:02  mgedmin: and leaves old behaviour for standalone .<tab>
17:03  mgedmin: this should be in the default python.snippets
17:03  mgedmin: hm, maybe not
17:03  mgedmin: ... -> ...\t should be
17:03  Silex: mgedmin: I recommand vim-addons-manager over pathogen. Pathogen is easier to setup but cannot install vimballs. Also with Pathogen *you* have to go and fetch the zips and figure out where the latest version is, vim-addons-manager uses a list at http://github.com/MarcWeber/vim-addon-manager-known-repositories to figure out where to get the plugins and their dependencies
17:04  Silex: and you can tell to update that list, kinda like apt-get update
17:04  gkatsev: that's pretty cool.
17:05  gkatsev: now if only NERD commenter stopped working everytime I close vim or disconnect from the internet. Stupid networked homedir
17:08  gkatsev: ah, much better.
17:08  gkatsev: since when did vim require it to be vimfiles on windows?
17:08  gkatsev: I guess I just never noticed
17:17  graywh: gkatsev, long as i can remember
17:39  flipmoe: is it possible to access vimrc vars through python in a plugin?
18:26  mengu_: hi. whats the best plugin for auto closing quotes, brackets, etc.
18:27  rson: when i used a plugin for that, i used delimitmate
18:29  graywh: i think "delimate" would be a good portmanteau name
18:31  Raimondi: Silex: YOu can use vimballs with pathogen, see :h g:vimball_home
18:31  Silex: Raimondi: hum, interesting. A bit late tho :)
18:32  Raimondi: Better late than neevr ;)
18:33  rson: speaking of delimitmate, hey Raimondi :)
18:35  Silex: Raimondi: sure, but I'm using vim-addons-manager now :) I'm actually happy I thought pathogen didn't handle vimballs because it made me move to it
18:36  mcantor: Howdy pardners.
18:40  itmorr: Hi.  Got a question.  I've asked previously so this is a repeat.  The question is:
18:41  itmorr: NetBeans has functionality for uploading and downloading files in such a way that you can have local copies of all files on your local machine, and when you edit them and save them, they can automatically upload to the server, and then you can tell it to download the latest version of a file.  How can I do this with vim?
18:41  mcantor: itmorr: What about Dropbox?
18:41  spiiph: I don't think that's what he's after.
18:41  rson: itmorr: read about netrw, it's similar
18:41  itmorr: I've looked into netrw and it supports vimming into files that are remote, but not download and upload of files in this way.  I'd like the files to exist on my local machine.
18:41  spiiph: itmorr, Vim has a netbeans interface.
18:42  mcantor: spiiph: It was worth a shot!  :->
18:42  rson: itmorr: they do, it stores the file in /tmp somewhere so they are indeed local
18:42  itmorr: mcantor, Dropbox would not fit as I do not have shell access to the remote server.
18:42  Silex: itmorr: why do you need the file to be local?
18:43  itmorr: rson, I looked into netrw, and I don't think it would fit because I need all the files to exist locally in my home directory or a directory inside my home directory on my local machine.
18:43  Silex: itmorr: what about using git?
18:43  itmorr: spiiph, what's the netbeans interface?
18:43  spiiph: :h netbeans
18:43  spiiph: I'm not sure how relevant it is.
18:44  itmorr: Silex, The file needs to exist locally because I am not familiar with navigation of directory structures from within vim and also I need to be able to commit changes to a repository via SVN from my local machine
18:44  Silex: itmorr: well, why not use svn then?
18:44  Silex: because you can't install it?
18:44  rson: itmorr: i thought it might have an option, but it doesn't seem to.
18:44  itmorr: Spiiph, I think I've seen the vim interface for netbeans.  Is it a plugin for netbeans?  It's not fully featured and would not be ideal..
18:45  hokapoka: Can Nerdtree display content voer scp?
18:45  mcantor: itmorr: Wait... the remote files are in a subversion repo?
18:45  hokapoka: s/voer/over
18:45  itmorr: mcantor, yes
18:45  itmorr: Silex, yes
18:45  hokapoka: Actually, I could just mount the remote path via sshfs.
18:45  mcantor: itmorr: You can't just use subversion...?
18:46  itmorr: mcantor, no because it would require pushing the repository to the server every time I make a change.
18:46  mcantor: itmorr: Isn't that the point...?
18:46  Silex: itmorr: you can probably script vim to automatically upload/download a file using netwrc or curl
18:46 --- keitaro62 is now known as keitaro62`miam
18:47  Silex: the rest is configuration
18:47 --- keitaro62`miam is now known as keitaro62
18:47  itmorr: Silex, that's what I was recommended previously the last time I asked about it.  I'm not sure how to do that.  What's the best way to learn how to do it?
18:47  itmorr: Silex, scripting it to automatically upload on save and download on open would be ideal
18:48  mcantor: itmorr: Look into autocmd
18:48  mcantor: I'm pretty sure there are events it can plug into to auto-upload and download.
18:48  rson: BufWritePost
18:49  itmorr: and BufReadPre?
18:49  mcantor: itmorr: But, if your scripts are auto-committing every time you save, what will you do when there's a conflict?
18:49  mcantor: Also, having empty commit messages in subversion is a bit of an anti-pattern.
18:49  itmorr: mcantor, it should not auto-commit on every save.  I will commit manually and need it to automatically upload when there's a save
18:49  itmorr: mcantor, the server and the repository are two different locations (clarification)
18:50  mcantor: itmorr: Ah, I'm sorry--I thought that you were using "upload" and "commit" interchangeably.
18:50  mcantor: It sounds like you have a bit of an architectural problem, man... ;-)
18:51  itmorr: Tell me about it..np...autocmd looks like the way to go!  I'm not sure how to write vim scripts.  How can I find out how to write them?  / what's a good starting point
18:51  Raimondi: rson: Did you stop using delimitMate for any special problem with it?
18:51  jerojasro: itmorr: :help usr_41.txt
18:52  rson: Raimondi: just decided that autocompleting the delimiters was actually more annoying than having to complete them myself
18:52  rson: Raimondi: but for what it does it works great
18:52  mcantor: itmorr: Also, if you prefer, vim can be compiled with a baked-in Python/Ruby/Lua/etc. interpreter, and you can write scripts that way.
18:52  Raimondi: Silex: Well, I like how vim addon manager does what its name says, but I prefer pathogen to handle my runtimepath...
18:53  itmorr: Thank you!  This gives me a great place to start and I'll continue on the scripting route
18:53  Raimondi: rson: Yeah, sometimes I'n ambivalent about completing delimiters too :)
18:54  rson: Raimondi: acutally the part that i miss is the adding delimiters to visually selected text part.
18:54  Raimondi: rson: Have you tested surround.vim?
18:55  Raimondi: I like it better thatn delimitMate for that, I just removed that functionality from it.
18:55  mcantor: Is vim actually aware of the concept of "code blocks"?  Like, "a Proc definition" in Ruby, or "everything between a pair of curly braces" in C, or "a chunk of code with the same indent level" in Python?
18:55  rson: Raimondi: i used it in the past but it seems wayy too complex for my use case.  I never need to add arbitrary things around text, just quotes, parens and such.
18:56  rson: Raimondi: actually it seems i still have delimitmate installed.. i wonder what i have it doing
18:56  rson: i may be using it and not thinking about it
18:56  rson: mcantor: yes
18:56  Raimondi: I use it just for that, and it works fine. I haven't used for tags.
18:56  rson: mcantor: well except for maybe that last part
18:56  graywh: mcantor, i{ a{ % cover ruby/c
18:57  mcantor: rson: What about using do/end in Ruby, and not curly braces?
18:57  graywh: matchit.vim
18:57  mcantor: graywh: ^---
18:57  mcantor: Hmm
18:57  mcantor: Thanks
18:57  graywh: ships by default, not enabled
18:57  graywh: :h matchit-install
18:57  graywh: highly recommended
18:57  rson: Raimondi: i'll look into it again.. first i'm going to see what i have delimitmate doing again :D
18:58  mcantor: How often are vim plugins considered for patching into the source?
18:58  Raimondi: Yeah, I had to do a plugin purge some time ago, too much magic around didn't let me work :)
18:58  mcantor: (popular ones)
18:59  djanowski: hello everyone. i accidentally overwrote a file from another process, then chose to 'Load' it when vim asked me. is there a way to recover the old buffer?
18:59  rson: Raimondi: ah i see, i'm using it to go ()| -> (|) when i enter the second delimiter.  expand_cr doesn't seem to be working for me though, i'll have to look into that.
19:00  agib: Does anyone know how I can easily enter "{{" while using autoclose.vim? I have a template language that uses double squiggly brackets but every time I hit the second bracket autoclose makes a new line
19:00  graywh: ctrl-v
19:01  agib: ctrl-v?
19:02  gkatsev: {<c-v>{
19:04  agib: gkatsev: ahh cool
19:04  agib: thank you
19:05  gkatsev: you can also do {<Esc>i{
19:08  mcantor: agib: You could also define an autocmd that disables the mapping for those files
19:10  agib: mcantor: ah true -- how could I create an autocommand that expands "{" to "{{}}" with the cursor in the middle
19:11  gkatsev: inoremap { {{}}<Left><Left>
19:13  kapu: having a bit of trouble finding info in man about switching between screen split
19:14  graywh: screen? or vim?
19:14  pgib: C-W then a direction is the easiest way I've found
19:14  kapu: did vim diff blah blah
19:14  pgib: C-W j,k,h,or l
19:14  kapu: tytyty
19:14  graywh: yeah, the vim man page doesn't have much
19:14  agib: gkatsev: awesome thank you again
19:15  graywh: :help is the best place for info
19:15  pgib: C-W also has subcommands for rotating the splits etc..
19:15  kapu: thanks again
19:15  graywh: :h window-move-cursor
19:15  kapu: thats capital w right?
19:15  graywh: no
19:15  kapu: eek k
19:15  pgib: Ctrl-w, sorry
19:15  kapu: no biggie
19:16  graywh: your term and vim don't distinguish between ctrl-w and ctrl-shift-w
19:16  kapu: ok
19:16  gkatsev: gvim may, though
19:16  graywh: gvim doesn't
19:16  kapu: im in curses
19:16  kapu: no x i mean
19:17  gkatsev: graywh: it doesn't but since it isnt curses means it has the ability to do so if it so wished
19:17  gkatsev: no?
19:17  graywh: yes, it could
19:17  gkatsev: that's what i meant
19:18  graywh: gvim does handle ctrl-tab, shift-tab, ctrl-shift-tab (xterm usually does shift-tab, tough)
19:33  mcantor: Anyone know where to read up on what the --with-features=huge/small/etc. compile flag actually changes?
19:35  kapu: ajpiano: interesting res.rr.com you must be an employee?
19:35  ajpiano: nope
19:35  mcantor: Ahhh.  it's in various.txt
19:35  ajpiano: i think the "res" stands for "residential"
19:35  kapu: ajpiano: none o my beezwax anywho
19:36  ajpiano: hehe :)
19:36  kapu: oic
19:36  kapu: never sav that on a cpe but nyc is their own entitu kinda
19:43  stephenp: what on earth am I doing wrong:  vimgrep ClassFactory *.rb -> "No such file *.rb"
19:45  systemfault: I'd use :vimgrep /ClassFactory/j *.rb
19:45  systemfault: Probably prefixed with noautocmd
19:46  stephenp: well, that gets me "*.rb" [New File] cannot open file *.rb"
19:46  systemfault: I'd use :noautocmd vimgrep /ClassFactory/j **/*.rb
19:46  systemfault: Are you sure your in the relevant directory?
19:46  systemfault: *you're
19:47  systemfault: :pwd   if you want to know.
19:48  stephenp: ahh - **.
19:48  stephenp: still getting used to that kind of thing.
19:48  stephenp: thanks.
19:49  systemfault: ** == recursive
19:50  mcantor: Do :compiler, :make and quickfix all work together?  quickfix.txt isn't very clear on how they interact.
19:52  mcantor: Ah... usr_30.txt makes it a little clearer.
19:55 --- NIKO is now known as niko
19:56  ReinH: mcantor: yes
19:56  ReinH: :compiler sets your makeprg and errorformat
19:56  ReinH: :make runs your makeprg and scans the output using your errorformat
19:57  ReinH: and uses this to populate the quickfix list
19:58  mcantor: badass.
19:58  ReinH: yep
19:58  ReinH: so badass that I wrote this http://github.com/reinh/vim-makegreen
20:00  ReinH: the readme might be useful in understanding make and compilers
20:10  Nickwiz: i have set lines=777 in vimrc, but it does not hold up. It start out with max height, but on load end / all ready - the height is about 73 insetad of  max: 77 lines. What could be the hickup?
20:11  fow: Nickwiz, it doesn't work if you don't set lines at all?
20:14  Nickwiz: fow, - I'll check. But need to reboot frist :( (double reboot) ... , - on the other hand, what do you mean. If I do not set lines; would not the height be set by x window manager?
20:15 --- niko is now known as NIKO
20:15 --- Silex is now known as silex
--- Log closed Fri Oct 22 23:11:39 2010
--- Log opened Fri Oct 22 23:12:02 2010
23:12 --- Users 582 nicks [0 ops, 0 halfops, 0 voices, 582 normal]
23:13 --- Channel #vim was synced in 78 seconds
23:14  kapu: when in the command mode in gvim, or any vim for that matter, how can I paste the "clipboard" of microsoft windows without the mouse?
23:14  kapu: like :^v
23:15  kapu: and the clipboard pastes :<clipboard contents>
23:15  deryni: :help "*  :help "+
23:17  Kuukunen: kapu: I've only figured you can used the Edit menu in gvim >_>
23:17  kapu: damn
23:17  kapu: me too
23:17  kapu: i bet its some keystroke
23:17  deryni: Yes, using the help items I just mentioned.
23:18  kapu: they kinda puzzled me deryni, the * and + i mean
23:18  deryni: "* and "+ not * and +
23:18  Kuukunen: deryni: but they don't say anything about command-line mode
23:18  deryni: Those were literal commands.
23:18  kapu: ok
23:18  deryni: :help c_ctrl-r
23:19  kapu: i'm in a terminal, will they work in vim
23:19  kapu: as opposed to gvim
23:19  deryni: If it can talk to the X server.
23:19  kapu: nvm
23:19  Kuukunen: deryni: ah, now we're talking
23:23  kapu: deryni: kudos
23:23  kapu: the force is strong in you
23:23  kapu: lol
23:24  deryni: Those both come up a lot.
23:26  kapu: what a relief to finally have it. Its one of those things I just never had the time to look up when i needed it
23:27  kapu: I detest having to use the mouse
23:28 --- Guest30629 is now known as sanguisleft
23:28 * mgedmin likes his trackpoint
23:29  kapu: one other thing I always wondered is, is it possible, again from the command mode, to issue ...
23:29  mgedmin: right there in the middle of the home row
23:29  kapu: love ibm
23:29  kapu: something like cat ~/vimojo
23:29  sanguisleft: can some one help me figure out why when the syntax is set to xhtml ggVG= will not indent netested tags my rc is http://pastebin.ca/1970367
23:30  kapu: i have a x60s with one of those
23:30  kapu: love it
23:31  agib: If I have a rectangular visual block selected is there a way for me to delete the select and immediately go into visual block insert mode such that when I hit escape all the lines will contain the new text?
23:32  agib: I'm doing C-v, select, delete, C-v, select, I
23:32  agib: seems excessive
23:32  okayzed: agib: press 'c'
23:32  kapu: a better way to phrase my question.
23:32  kapu: after hitting the esc colon
23:32  agib: okayzed: perrrrfect, thank you
23:32  agib: what does "c" stand for?
23:32  okayzed: kapu, do you want to read it into file or just execute it? :!<command> will run the command
23:32  okayzed: while :r!<command> will insert the command into the buffer
23:33  okayzed: agib, 'change', i think
23:33  kapu: can you then issue a command to the shell, and pipe the output to vim?
23:33  okayzed: you can use it just like 'd' but it leaves you in insert mode and counts as one 'transaction' instead of two
23:33  agib: okayzed: sweet, thanks again
23:33  okayzed: kapu, :r!<command> pipes it into vim
23:33  kapu: okfn beautiful
23:34  kapu: i'm loving it
23:34  kapu: ty i'm done asking stuff now :-P
23:42  iaj: how can I get the word under the cursor to the comamndline?
23:42  DHulme: ctrl-r ctrl-w
23:42  DHulme: see :help c_ctrl-r for more things you can get onto the commandline
23:43  iaj: DHulme: gracias!
23:44  kapu: +1
23:52 --- deco is now known as DECO
23:58 --- NIKO is now known as niko
--- Log closed Sat Oct 23 00:00:14 2010
