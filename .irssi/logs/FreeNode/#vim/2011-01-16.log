--- Log opened Sun Jan 16 00:00:51 2011
--- Log closed Sun Jan 16 00:10:19 2011
--- Log opened Sun Jan 16 00:10:39 2011
00:10 --- Users 585 nicks [0 ops, 0 halfops, 0 voices, 585 normal]
00:11 --- Channel #vim was synced in 86 seconds
00:30 --- tonymec is now known as tonymec|away
01:06  peth: if there are dmenu users on here could you confirm for me that ctrl+y in dmenu works for other apps but not from vim?
01:07  peth: term vim that is. gvim works too.
01:08  peth: oh, must be in my vimrc. works with -u NONE. o_O
01:09  bairui: peth: you could try   :verbose map <c-y>
01:09  peth: bairui: ah, no. i visually select in vim expecting it to fill my primary x selection, then ctrl+y to paste in dmenu.
01:10  peth: so the <c-y> is not for vim.
01:11  bairui: right, but your <c-y> works when no vimrc or plugins are loaded, so I was thinking there might be a vim map for <c-y> in there somewhere.
01:11  peth: but... vim doesn't have the focus :)
01:11  bairui: yeah - it's probably errant thinking :)
01:12  bairui: why would vim not have the focus if you just created a visual selection...?
01:12  peth: because i then opened dmenu (which grabbed the focus) and i'm trying to paste there
01:12  bairui: meh, i don't know what dmenu is, so I'll just hush up. :)
01:12  bairui: ok
01:12  peth: it's another program to show user menus/execute commands
01:13  bairui: so - dmenu's ctrl-y pastes from.... what? the primary X or the clipboard?
01:13  peth: primary afaik but i tried both anyway
01:13  peth: must be something in my vimrc that changes where my selection goes
01:14  bairui: you might have 'clipboard' set
01:14  bairui: Have a look at section 13 in :options
01:15  bairui: or 'mouse'
01:15  bairui: (section 9)
01:15  peth: i'm on it, thanks. it's weird really, i pretty much know by heart what i have in there and can't think of anything...
01:17  bairui: so, peth, you might know what's in your vimrc, but   -u NONE   also skips plugins.  Try   -u NORC
01:18  peth: ah, didn't know about that one. but no, works too. so it's definitely my fault. :)
01:18  bairui: hehe
01:19  bairui: binary search...? :-/
01:22  peth: how odd. i think i'll have to start commenting out.
01:23  bairui: hence the binary search
01:26  peth: wasn't sure if you meant that, but seems to be the way now. :/
01:35 --- ml|_ is now known as ml|
01:39 --- fedesilva_ is now known as fedesilva
01:47  peth: something is very wrong here. it *is* "set mouse=a"... clipboard is on the default setting ("clipboard=autoselect,exclude:cons\|linux") though.
01:48  peth: weirder still, i *can* select in the same vim and paste to an arbitrary other app. just not dmenu. then selecting the just pasted text, i *can* paste that in dmenu.
01:48  peth: i don't get it.
01:48  bairui: with the mouse option, vim takes over the management of the mouse. :help clipboard and read the last paragraph. Maybe that will help?
01:50  peth: you mean the "Note:" one?
01:50  bairui: no - the one below that
01:50  peth: oh, read them as one cough
01:50  bairui: :)
01:57 --- Caelum_ is now known as Caelum
02:01  Blazento: is there any way with the :%s/this/that/g method to mimic case in the substitution string? for instance, if This, sub That, if this, sub that
02:02  Raimondi: Blazento: :h sub-replace-expression
02:03  MarcWeber: or do this -> FOO, that -> this, FOO -> that. sub-replace.. is better though
02:03  bairui: there are some plugins that try to help here, like... keepcase?
02:03  Blazento: thank guys!
--- Log closed Sun Jan 16 02:10:38 2011
--- Log opened Sun Jan 16 02:11:01 2011
02:11 --- Users 569 nicks [0 ops, 0 halfops, 0 voices, 569 normal]
02:12 --- Channel #vim was synced in 83 seconds
02:39 --- RobotCow is now known as RTFM
02:40 --- RTFM is now known as Guest26652
02:40 --- Guest26652 is now known as RobotCow
02:46  mopd: in snipmate sub<TAB> and then the func name, so to get to the body, what is the quickest way? Arror keys?
02:46  mopd: an nm, Esc takes you to it
02:51  fow: mopd, it depends on how you define the snippet. you can define it so that, say, pressing tab a second time will take you to the body
02:51 --- remedy|ravensftw is now known as remedy
02:52  mopd: fow oh! nice! thanks :)
02:53  fow: you're welcome
03:09 --- peth_ is now known as peth
03:16  jdhore: how would i delete everything on a line after the first space?
03:17  spiiph: :s/\s.*//
03:19  jdhore: spiiph, Yep, I got it, thanks though
--- Log closed Sun Jan 16 12:29:55 2011
--- Log opened Sun Jan 16 12:30:16 2011
12:30 --- Users 576 nicks [0 ops, 0 halfops, 0 voices, 576 normal]
12:31 --- Channel #vim was synced in 82 seconds
12:56  quantumelixir: How do I break up long lines using "\" at the end of the lines?
13:15  Chib: not sure what you mean there
13:24  quantumelixir: I want to split a single long line across several lines (like say, break at around 80 characters) using "\" at the end of the line
13:24  quantumelixir: by "break around" I mean break at the end of words only
13:25  quantumelixir: I think this is a common requirement in languages that use \ as the line continuation character
13:33  airborn: any info about why pagination isn't included in 3.1?
13:33  airborn: ups
13:33  airborn: wrong # sry
13:41  FernandoBasso: quantumelixir: I have a simple mapping to do that.
13:42  FernandoBasso: map รง 072lf i \\<Esc>r<Return> <-- it inserts a \<Return> on any white space that is after the column 72.
13:42  FernandoBasso: I use รง as the trigger for the mapping.
13:43  quantumelixir: yep I wrote something similar for myself too
13:43  quantumelixir: thanks though
13:45  Hoyt: hi anyone using vim with gpg ?
13:48 --- chrischambers_ is now known as chrischambers
13:49  FernandoBasso: vimgor: anyone
13:49  vimgor: Please do not ask if anyone uses, knows, is good with, can help you with or is a guru/expert of <some program>. Instead, ask your real question. You'll probably get help faster that way.
14:14  marinosi: hello all. trying to enable a colorscheme inside a colored terminal (256) fails and I have completely uncolored buffers(the setup works fine with gvim). Any ideas? What I should check first?
14:17  wooden: marinosi: Is it a 256-color colorscheme, or a gvim colorscheme?
14:19  marinosi: wooden: both -- it's popular molokai it has a condition to apply to 256 color terminals too.
14:19  marinosi: it works in linux, but not in my fbsd -- no idea what to check first
14:22  wooden: marinosi: What is $TERM?
14:23  marinosi: wooden: by default it gets rxvt although it should get rxvt-unicode-256color. I;ve manually set the latter and xterm-color. ls coloring works with all except rxvt-unicode-256color(strange eh?)
14:25  wooden: marinosi: What is your $TERM under Linux where this all works?
14:25  marinosi: rxvt-unicode-256color
14:34  wooden: marinosi: Maybe your BSD terminfo doesn't have an rxvt-unicode-256color entry.
14:35  wooden: marinosi: Messing with $TERM is never a good idea, but try setting it to xterm-256color.
14:40  lucs: When running some vim code, I sometimes (often :) get errors, and an error message is displayed for a short instant at the bottom of the screen.
14:41  lucs: How can I make that instant longer?
14:41  strull_: lucs: you can review them with :messages
14:42  lucs: Ah, Hmm... A lot of stuff I have to scroll past there...
14:43  strull_: type G to scroll to the end
14:43  lucs: Ok, that's not too bad.
14:44  lucs: Still, is there any way to control the message duration?
14:44  lucs: Or even, to have it remain there until I press Enter or something.
14:45  lucs: (When I get an error, most of the time, I need to take the time to read it, eh.)
14:45  strull_: lucs: try :set ch=2
14:45  lucs: Hmm...
14:46  lucs: I get more lines of errors, but they disappear just as quickly :(
--- Log closed Sun Jan 16 14:52:29 2011
--- Log opened Sun Jan 16 14:52:49 2011
14:52 --- Users 593 nicks [0 ops, 0 halfops, 0 voices, 593 normal]
14:54 --- Channel #vim was synced in 83 seconds
15:08  marinosi: wooden: just for the history I had set term=builtin_ascii for the hhk keyboard. that worked on linux but not in bsd -- different vim versions
15:25  ormaaj: is there a setting to group buffers by tab so that :ls shows the local collection of buffers and :bn/:bp cycle through a per-tab buffer list?
15:40  spiiph: No
15:40  spiiph: Buffers and tabs are completely disconnected
15:40  spiiph: Buffers do not belong totabs.
15:40  strull_: the whole tab-handling is very rudimentary
15:40  ormaaj: heh
15:41  ormaaj: so tabs are essentially useless unless you happen to have lots of window arrangements to keep track of
15:41  spiiph: No
15:41  spiiph: Tabs are excellent when you want two separate views into a project
15:42  ormaaj: views?
15:42  spiiph: Great for diffing as well.
15:43  spiiph: Yes, say you have your source files viewed mainly in one tab, and in another one you use for, say, resource files
15:43  ormaaj: But only one buffer can be bound to a window at a time so unless you have loads of splits in each tab it doesn't let you group those
15:44  spiiph: I always have at least two windows, often 3-6
15:45  spiiph: In each tab
15:55  mopd: is there any way to autoinstall plugins merely by specifying the name.. kind of like cpan for perl?
16:00  spiiph: There are som attempts in that direction
16:02  spiiph: https://github.com/MarcWeber/vim-addon-manager
16:02  ormaaj: mopd: Nope, vim plugins are a totall disorganized mess unless they happen to be managed by your PM. Best bet is to find em on github and pathogen
16:03  ormaaj: I symlink em into a directory sourced by vim-pathogen so they're easy to toggle like that.
16:03  mopd: yeah github would have been awesome except that one or two plugins aren't on it eg:vim-aglist
16:03  mopd:  err taglist
16:03  spiiph: mopd, vim-addon-manager handles more than just github
16:04  mopd: ah! let me check it out. thanks guys!
16:31  whitedragon: Hey folks. How does the rating of scripts  on vim.org work? What does 1782/600 mean?
16:35  strull_: 1782 point from 600 voters
16:35  strull_: which is quite a lot
16:37  whitedragon: strull_: and how many points are 'Life Changing', 'Helpful' and 'Unfulfilling'?
16:47  esc: how do i generate a null-byte with vim?
16:48 --- Bucciarati_ is now known as Bucciarati
16:55  tonymec: esc: see ":help NL-used-for-NUL", ":help i_CTRL-V_digit" etc. ((without the quotes of course)
16:56  philluminati: Where do I start trying to figure out why syntax highlighting isn't working? I'm using vim 7.5, and my .vimrc has "syntax enable" and "filetype on"
16:56  squeeky: I've messed up my vim config and now every newline is ending in $. What the hell have I done and how do I unbork it?
16:57  philluminati: squeeky: Try :set nolist
16:58  philluminati: if that unborks it, then you have :set list somewhere in your .vimrc
16:58  squeeky: ah! that fixed it
16:58  squeeky: cheers.
17:00  tonymec: philluminati: what is the answer to ":verbose setlocal filetype? syntax?" (without the quotes) in the file without highlighting?
17:01  philluminati: E519: Option not supported: filetype?
17:01  philluminati: and if I remove filetype then the same thing for syntax
17:01  philluminati: ...wait I don't have a ~/.vim folder just a .vimrc and .viminfo
17:03  tonymec: philluminati: I suspect your Vim is a feature-poor version. What does it answer to ":echo has('syntax')"? (without the quotes)
17:04  philluminati: The status bar changes to 1
17:05  philluminati: I tried :no cp as I thought It may have been in vi compatibility mode but it definitely isn't. I'm going to reinstall the package, remove my vim config files and restart it to see what happens
17:05  tonymec: philluminati: oh. I would have expected 0. And to ":echo has('autocmd')"?
17:06  esc: tonymec: thanks
17:07  philluminati: tonymec: nothing. the cursor just returns to the document, still in command mode
17:08  philluminati: It's version 7.3.55, sorry not 7.5. Let me reinstall first and see what happens
17:08  tonymec: philluminati: make sure to install a Big or Huge version
17:10  tonymec: philluminati: near the top of the output of ":versio" it says if it's Tony, Small, Normal, Big or Huge
17:10  strull_: really? there is a Tony version?
17:11  strull_: never tried it :)
17:11  tonymec: strull_: typo: Tinu
17:11  strull_: never tried Tinu either :)
17:11  tonymec: I meant Tiny. Fingers go wrong today
17:11  strull_: funny thoug
17:12 * tonymec is going to make some strong tea
17:15  philluminati: Hmmmm, it's fixed now
17:16  philluminati: just uninstalled and reinstalled the same package, fedora 13's vim-enhanced package.
17:16  philluminati: version is "huge" and syntax highlighting is working
17:17  philluminati: Alright, well I'm happy. Thank you tonymec
17:39  nicark: Is it possible to set up omnicompletition so that you don't have to press ctrl+n i.e. apply omnicompletition on the fly as you write code. Is it a bad idea to set it up like that?
17:43  _rane: how would it work then?
17:48  nicark: I meant completition perhaps, sorry. I think that in textmate as you write a menu shows up showing possible completitions i.e. you write for and it shows up a menu with options for, format_arg, etc. Is it possible to do this in vim? I'm just wondering, actually I'm fine with just using ctrl+n.
17:49  _rane: textmate doesn't do that
17:50  peth: well, there are IDEs that do it. it was always the first thing i turned off.
17:51  yogione: where can I get some free images - buttons, arrows etc ..
17:52  yogione: sorry wrong channel
17:53  nicark: that's what I meant, completition like the IDEs do it. I'm just interesting in completition on the fly while writing html and css.
17:55  nicark: hm, I think I'll try supertab instead.
17:58  philluminati: nicark: http://arstechnica.com/open-source/guides/2009/05/vim-made-easy-how-to-get-your-favorite-ide-features-in-vim.ars
18:33 --- fedesilva_ is now known as fedesilva
--- Log closed Sun Jan 16 18:52:39 2011
--- Log opened Sun Jan 16 18:53:02 2011
18:53 --- Users 605 nicks [0 ops, 0 halfops, 0 voices, 605 normal]
18:54 --- Channel #vim was synced in 82 seconds
18:58  shurane: So if I can't undo/redo, go to bottom of history with G (which is mainly why I want vi-mode), what other reasons should I use 'set -o vi' in bash? Is there say.. a more complete vi interpretation, or is that something I don't want?
18:59  peter_w: what are you talking about
19:00  Raimondi: shurane: You might get some good answers in #bash
19:26 --- JusticeFries_ is now known as JusticeFries
19:44  nvictor: hello
19:45  nvictor: hmm what was that command that brings up a small window in which you can actually paste the command you want to type?
19:45  cdsboy: Quick question: I'm using vim on ubuntu using gnome-terminal. I have my background set to a dark gray, but sometimes when I scroll up or down the background after the end of text on a line turns black. Is this a known problem? I've found nothing on google about it.
19:46  Raimondi: nvictor: Not sure what you want, but try  q:
19:46  nvictor: Raimondi: you nailed it
19:51  iaj: do you guys use \v in search, or do you recommen to get along with vims normal mode?
19:53  Raimondi: I use the regular magic, but some times I use \v for clarity, it depends on the use/pattern.
19:53  nvictor: Raimondi: another question :)
19:53  nvictor: Raimondi: i have many commands and only the last one in the lines i pasted was executed
19:54  nvictor: they are substititions commands, is there a way to chain?
19:54  Raimondi: That's how it works. See :h :bar
19:54  Raimondi: nvictor: ^
19:54  strull_: or put them in a script and source this
19:54  nvictor: ohhh
19:55  Raimondi: nvictor saw the light :)
19:55  Raimondi: sought?
19:55  Raimondi: saw it is
19:56  nvictor: :)
19:56  iaj: Raimondi: thanks :) I'm going to start with python soon - will I be ok, if I just use the normal regexp searching or should I switch over to \v ?
19:57  Raimondi: I don't play with Python, so no idea, sorry.
19:58 * mgedmin lives without \v
19:59  mgedmin: vim's regexps are different from anything else, making them superficially more similar with \v is just going to cause subtle confusion when you attempt to use more advanced features
20:01  iaj: mgedmin: hm, yeah , thought there are some drawbacks with \v
20:02  iaj: another thing, how would you guys quickly insert a new line below.. without going to insert mode?
20:02  Raimondi: iaj: With a mapping :)
20:03  mgedmin: iaj, press o<esc> really really quickly, so you don't notice the going into insert mode part :)
20:03  Raimondi: :put_
20:03  mgedmin: actually, I yank a blank line somewhere and use p to paste it where I want
20:03  mgedmin: when I want to insert blank lines in multiple places
20:03  fow: mgedmin, wouldn't o<esc> and then . be easier?
20:04 * mgedmin shrugs
20:04  mgedmin: same number of keystrokes
20:04  fow: I suppose, assuming a blank line is near
20:04  spiiph: You could have a dedicated seldom used register for blank lines
20:05  spiiph: And just do 10"lp for instance
20:05  iaj: Raimondi: which mapping? =)
20:05  iaj: spiiph: hmm nice idea.. but 10o<esc> would do the same no?
20:06  spiiph: True
20:38 --- jhoepken_ is now known as jhoepken
--- Log closed Sun Jan 16 20:59:03 2011
--- Log opened Sun Jan 16 21:12:11 2011
21:12 --- Users 603 nicks [0 ops, 0 halfops, 0 voices, 603 normal]
21:12  yogione: is there a html-tidy plugin for vim
21:12  jsvana: found it.  I mapped <space> to za.  apparently it only does it in insert mode.
21:13  Nyoxi: yogione: I don't know, but you can filter the buffer through xmllint to do that (you most likely have that one on linux)
21:13  jsvana: Raimondi, peter_w: thanks for the help
21:13  rson: peter_w: yeah, it would be enormous and probably very slow
21:14  yogione: Nyoxi: thanks. will try that
21:16 --- Channel #vim was synced in 404 seconds
21:17 --- jagguli_ is now known as jagguli
21:19  Nyoxi: yogione: I also recall tidyhtml app for that purpose
21:20  bdesham: hi all! I've been using the VimClojure plugin, and whenever I type o (lowercase oh) in normal mode, Vim hangs for a second as if it's expecting another keypress. doing ":nmap o" didn't show any mappings though. how can I find out what's going on here?
21:22  walt: vim.
21:22  homekevin: bdesham: how about just place :map?
21:22  AzaToth: I usually got a number of viewports active when I work, and I mostly uses gvim; though I have a habit of open any new document in an new gvim instance, which might become cumbersome after a time. I've looked for solutions to allow opening new files into existing buffer, but none I've found have handle the posibillity to open in the instance in the current viewport, nor without adding some extra arguments when launching. Does anyone (if you understand my
21:22  AzaToth: question) have any suggestions?
21:24  homekevin: AzaToth: I assume by "viewports" you mean windows, and by "buffer" you mean something other than a buffer.
21:24  homekevin: Opening a file into an existing buffer is sort of doable, (:r filename) but probably not what you wante.
21:25  AzaToth: homekevin: whatever the "windows" are called ub xfce or gnome ใ
21:25  bdesham: homekevin: hmm, nothing with just :map either
21:25  AzaToth: homekevin: I want when I run "gvim foo.c" to open it in existing instance in existing windows if exists
21:26  homekevin: AzaToth: I don't know of a way to do that.
21:26  AzaToth: ok
21:26  peter_w: --remote?
21:26 --- y3llow_ is now known as y3llow
21:26  homekevin: Yeah, maybe something with the vim server stuff, but I know nothing about that.
21:27  AzaToth: peter_w: without extra arguments hopefully, and without the need to know if instances exists allready
21:27  homekevin: bdesham: maybe you have something weird in your termcap settings.
21:27  bdesham: homekevin: I'm using gvim on OS X, if that helps
21:27  peter_w: AzaToth: alias it?
21:27  homekevin: bdesham: There's not much that it can be other than a mapping or a keycode.
21:27  AzaToth: and if I'm in viewport 7, I dont want my text to pop up under the vmware instance at port 1 as I probably had an gvim instance running there from last week
21:27  bdesham: homekevin: is termcap relevant for GUI vim?
21:28  homekevin: bdesham: Not the keycodes, as far as I know.
21:28  bdesham: homekevin: hmm. ok, thanks, I'll look into it
21:28 --- cuba33ci_ is now known as cuba33ci
21:28  AzaToth: peter_w: I've hoped for some automagic ใ
21:28  peter_w: AzaToth: are you talking about workspaces in your window manager?
21:28  AzaToth: peter_w: aye
21:29  peter_w: vim doesn't know about your workspaces
21:29  AzaToth: vim I understand doesn't, but gvim could be able to
21:29  AzaToth: that's why I ask
21:29  peter_w: it doesn't
21:29  AzaToth: ok
21:31  peter_w: you can probably do it but it would be a bit of work
21:31  AzaToth: yea
21:33  kongo: AzaToth: you could try to write a wrapper that determines your current viewport and launches gvim --remote-silent <viewportid>
21:34  AzaToth: kongo: yea, just having to figure out the current workspace ใ and which workspace is related to with remote ใ
21:36  kongo: AzaToth: you can give the names of the remotes by yourself, so there only remains the problem of getting the current workspace :)
21:40  AzaToth: aha
21:40  AzaToth: that's a small problem ใ
21:53 --- cascalheira is now known as cascalheira|away
21:54 --- cascalheira|away is now known as cascalheira
22:03  iaj: mh is there some way to have expandtab set - and then be able that theres a fix tabrange.. at the moment when I hit <space> then tab.. it gets to another position than just <tab> without the space prior.
22:05  fow: iaj, that's how <tab> works for me now. I have :set et ts=8 sts=4 sw=4
22:07  elm2: ":Man open" does not work at me.What can I do or what is wrong about it?Why or how can I not simply paste the content of a manpage with :r into a buffer of my desire?
22:07  iaj: fow: i got ts=sts=sw =4
22:09  iaj: fow: nevermind somehow it works with ts 8.
22:09  fow: strange
22:11  mgedmin: elm2, define "does not work", please
22:12  elm2: no editor command: Man open
22:12  mgedmin: if you get E492: Not an editor command, you need to :runtime ftplugin/man.vim
22:14  elm2: what is the difference between :source *.vim and :runtime *.vim?
22:14  elm2: I have always been using :source.
22:14  iaj: how can I get the last command line to my inserting buffer...?
22:15  homekevin: Hey, that :Man thingy is kind of cool.
22:15  mgedmin: :source takes a path relative to $PWD
22:15  mgedmin: :runtime looks in vim's runtime directories
22:15  mgedmin: (all of them)
22:15  njbair: when doing a search/replace in vim, how do I specify a line break?
22:15  homekevin: njbair: \r
22:15  mgedmin: njbair, \n in the search pattern, \r in the replacement string
22:15  homekevin: njbair: Wait, for the search part or the replace part?
22:16  njbair: replacement
22:16  njbair: i thought \r was a windows line break
22:16  elm2: only difference? the doku says: read ex/vim commands: what is the difference betw. ex & vim commands?
22:16  elm2: \r makes the cursor return to the first column
22:17  walt: njbair: \r\n is windows. \r was MacOS, \n is unix
22:17  walt: afaik
22:17  Araxia_: iaj: q:kyy<C-c><C-c>p
22:17  elm2: \r is the ctrl character produced by the return key
22:17  homekevin: njbair: Not relevant to Vim.
22:17  njbair: ok
22:17  mgedmin: the topic of \r and \n is a long and complicated one
22:17  mgedmin: I don't have the energy to go into it on a sunday night
22:18  walt: njbair: a newline can be written by pressing Ctrl-r, then return
22:18  elm2: line breaks: windows: \r\n, Linux: \r
22:18  elm2: Linux \n
22:18  homekevin: njbair: Vim doesn't care about the linebreak style until it's writing the file. Internally it stores individual lines without any specific breaks.
22:18  elm2: I mean
22:18  iaj: Araxia_: haha.. ok.. i tried <C_R>:  but that was something else :)   i don't wanna fall into the C-c habit tho:)
22:18  Araxia_: iaj: in this case, it's just to dismiss the cmdline-window.
22:19  iaj: Araxia_: hehe:)
22:19  Araxia_: iaj: you could use j<CR> instead.
22:20  iaj: thnx!
22:20  Araxia_: instead of <C-c><C-c> in that sequence, just to be clear. :-)
22:26  tonymec: To insert the latest ex-command (without the colon) at the normal-mode cursor:       ":p     or for insert mode:      ^R:    where ^R means "hit Ctrl-R". See ":help registers", ":help quote_:" ":help i_CTRL-R" etc.
22:27  Araxia_: tonymec: ah, that's so much better. knew there must be a more efficient way.
22:28 --- batrick_ is now known as batrick
22:29  iaj: tonymec: hmm.. that's strange i tried C_r : actually - but it got me the excommand BEFORE the current one -_-
22:30  Araxia_: well, the cmdline-window method lets you pick and choose. you could even grab a few lines of history.
22:30  tonymec: iaj: in command-line mode, the ex-command you are now typing isn't yet stored -- is this what you mean?
22:31  iaj: tonymec: actually I hit <CR> after the ex mode.
22:33  tonymec: iaj: well, in Insert mode (when editing text in a file) Ctrl-R followed by colon should insert the latest ex-command without its colon. In command-line mode (when typing an ex-command after the colon), Ctrl-R followed by colon should insert the latest *complete* ex-command you executed before the one you're in the process of typing.
22:36  tonymec: ...still without its colon. By "complete" I meant: "which you already executed by hitting Return at its end.
22:38  tonymec: an empty ex-colon (i.e. hit colon then Enter in Normal mode) doesn't count./
22:38  tonymec: s/ex-colon/ex-command
22:40  papaganoush: Good day. I am going to try vim for the first time in ages (as a possible replacement for textmate). after I finish the :help tutor what should be the next thing(s) I do?
22:40  iaj: hmm yeah.. I got that command to excommand by hitting : <C-P> a few times - mb that's the problem
22:43  Araxia_: papaganoush: there are a fair number of blog posts about switching from textmate to vim. might be worth looking at some of those for ideas. there are quite a few plugins that provide textmate-like capabilities, e.g. command-t.vim and snipMate.vim.
22:44  Araxia_: papaganoush: what are you going to be editing primarily?
22:45  papaganoush: ruby
22:45  tonymec: iaj: ah, I see. To insert an arbitrary ex-command from history, open the command-line window by    q:    , yank the line you want, close the cmdline-window (e.g. by    :q    ) and put it wherever you want it.
22:45  Araxia_: papaganoush: you'll want to grab some of the excellent ruby plugins, too, then.
22:46  fow: you might like this, papaganoush http://stevelosh.com/blog/2010/09/coming-home-to-vim/
22:46  fow: I think the author occasionally visits this channel as sjl
22:46  iaj: tonymec: that's Araxia_'s post as well
22:46  iaj: fow: damn! I like that post, and was just crawling through my bookmarks :(
22:46  Araxia_: heh. the circle completes.
22:46  fow: haha
22:48  tonymec: one difference apparently is that Araxia_ closes the cmdline-windo by Ctrl-C, I use :q instead.
22:49  Araxia_: tonymec: that's partly a habit of using <C-c> for <Esc> in most cases.
22:49  Araxia_: and in this case <Esc> wouldn't work. :-)
22:51 --- jlewis_ is now known as jlewis
22:52  papaganoush: thanks! I look at the coming home to vim and see what ruby plugins I can find.
23:09  rindolf: https://wincent.com/products/command-t - this looks cool. I've watched the first screencast.
23:09  Araxia_: rindolf: yeah, it works pretty well.
23:12  Araxia_: my only complaint about it so far is that there is not a native way to hjkl navigate the completion list.
23:27  rindolf: Araxia_: it crashed. :-D
23:27  rindolf: Araxia_: I mean vim with command-t.vim.
23:27  gma: can anybody give me a hint with these mappings โ http://pastebin.com/2EPMhBY7
23:27  rindolf: I'll see if I can reproduce it.
23:27  gma: I want to modify splits as well as resize the window (in macvim)
23:27  Araxia_: rindolf: ugh. never had that happen to me. which vim version?
23:28  rindolf: Araxia_: latest hg.
23:28  rindolf: 7.3.x
23:28  Araxia_: rindolf: so just in the console, then?
23:28  rindolf: Araxia_: no, gvim.
23:28  Araxia_: rindolf: platform?
23:29  rindolf: Araxia_: Linux x86 (P4-2.4GHz)
23:29  rindolf: Araxia_: can no longer reproduce it.
23:29  Araxia_: rindolf: yay. an intermittent crash.
23:30  rindolf: But I don't recall exactly what I did.
23:31  Araxia_: gma: it might be a bit tricky to preserve the same custom proportions in your splits when you resize the windows. you could use :wincmd = to redistribute space evenly to the splits after the window resize, though.
23:32  rindolf: Araxia_: OK, I got it to crash again.
23:32  gma: Araxia_: thanks, I didn't know about that. I'm struggling at the moment to get the ,2 to actually introduce a split though. my first paste had <leader>w o, which I've now realised should have been <C-w> o, but it still isn't doing anything
23:32  gma: (paste updated)
23:32  gma: http://pastebin.com/iT1XG5kn
23:33  Araxia_: gma: you need to get ride of the spaces after the <c-w>s
23:33  gma: ah!
23:33  Araxia_: and after the <CR>
23:33  Araxia_: maps are very literal.
23:33  Araxia_: well, vim is, really.
23:33  gma: Araxia_: brilliant, that works. thanks muchly!
23:39  iaj: hmm. i got a problem after some text editing - my CR key ain't working anymore.. when I check on my commandline and hit <CR> there I see the following: <SNR>47_onCommandPre()
23:39  iaj: where's that thing coming from :\
23:40  Araxia_: iaj: :verbose map <CR>
23:40  danielsh: iaj: :scriptnames and look for number 47
23:40  iaj: no mapping found Araxia_ :(
23:41  iaj: oh.. cmap had it - lustyjuggler :\
--- Log closed Mon Jan 17 00:00:47 2011
