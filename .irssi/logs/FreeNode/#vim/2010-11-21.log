--- Log opened Sun Nov 21 18:48:51 2010
--- Log closed Sun Nov 21 18:48:54 2010
--- Log opened Sun Nov 21 18:49:12 2010
18:49 --- Users 571 nicks [0 ops, 0 halfops, 0 voices, 571 normal]
18:49  homekevin: FernandoBasso: Although, maybe you should clarify what you want to do.
18:49  homekevin: I mean, you can delete column-wise by doing, say, 10dl
18:50  homekevin: Er, nevermind.
18:50 --- Channel #vim was synced in 66 seconds
18:50  FernandoBasso: homekevin: Suppose I want to replace a word, in n lines, just between the colums 10 and 20.
18:50  homekevin: Yeah, the first thing I said.
18:50  homekevin: You need the \%c or \%v patterns
18:51  FernandoBasso: homekevin: Thanks.
18:51  homekevin: To do it over a range of lines is just like usual: give a range to :s.
18:54  homekevin: I'm leaving, if paissad comes back someone else will have to help him. But Vim seems to display NBSP just fine for me. Looks like a normal space.
18:54 --- kermit is now known as kermit__
18:54  paissad: homekevin, i think the problem is not vim actually
18:55  paissad: homekevin, when i change the value using tr or sed for example, there are some weird characters in the results ... it's not the source file
18:55  paissad: thanks anyway
19:02  FernandoBasso: I could not understand the help for \%c.
19:02  FernandoBasso: How could I use a range of coluns, and a replace pattern?
19:03 --- kermit__ is now known as mavs
19:04 --- mavs is now known as kermit
19:07  jamessan: FernandoBasso: :%s/\%>10c.*\zsword\ze.*\%<20c/foo/
19:08  FernandoBasso: Ah. I was trying :\%0c,\%11csubstitute/etc...
19:08  FernandoBasso: jamessan: Thanks.
20:20  peper: ok, this one is strange. Any idea what could cause gvim to freeze during startup unless it's run via gdb or strace?
20:23  peper: by freeze I mean an unresponsive windows which looks like http://ompldr.org/vNjk5cw
20:24  johnnyfive: is the line "filetype plugin on" redundant if you have "filetype plugin indent on" in your vimrc?
20:25  qfr: peper that sounds messed up hmm
20:25  peper: gvim -f also works fine
20:25  qfr: Have you tried renaming your vimrc temporaril?
20:26  qfr: y*
20:27  peper: qfr: yeah
20:27  qfr: And still the same?
20:27  qfr: :|
20:28  peper: Yeah
20:28  peper: Puzzling
20:40 --- ajpi is now known as ajpiano
20:41  Raimondi: peper: HAve you tried  gvim -u NONE -U NONE -i NONE
20:43  peper: Raimondi: just did, freezes in the same way
20:43 --- isaacs is now known as isaacs[away]
20:43  peper: unless I pass -f as well
20:45  Raimondi: No idea, sorry.
20:55  rindolf: peper: it may be a bug with gvim's gtk+ interface.
20:55  rindolf: peper: I reported something similar in the Mandriva bugzilla.
21:01  rindolf: peper: see https://qa.mandriva.com/show_bug.cgi?id=44925
21:04  qfr: rindolf has that stuff been fixed now?
21:04  qfr: Because I intend to use gvim on my Linux notebook, too
21:04  rindolf: qfr: well, now on Mandriva gvim defaults to gvim -f
21:04  rindolf: qfr: I have a custom build gvim.
21:05  rindolf: Possibly with the workaround of getting rid of canberra.
21:10  peper: rindolf: thanks
21:18  johnnyfive: how can I tell if omnicomplete has been loaded for my file?
21:18  malfy: it's always loaded?
21:18  johnnyfive: it is? doesn't it need to load certain plugins depending on language type?
21:19  Raimondi: johnnyfive: :scriptnames
21:20  Raimondi: I asume you're refering to a plugin that helps with omnicompletion.
21:20  johnnyfive: Raimondi, hm, ok, so if /vim72/syntax/plugin.vim is loaded.. that's for omnicomplete? I assume?
21:20  cryptic0: can I set vim to wrap text at a width smaller than that of the window?
21:20  johnnyfive: I don't see an omnicomplete.vim or anything though
21:21  Raimondi: cryptic0: :h 'wm'
21:27  cryptic0: Raimondi:  :set wm=10 is not working.  :set textwidth=70 is not working either.  I use mvim
21:27  Raimondi: johnnyfive: It should be set by a filtetype plugin
21:27  Raimondi: cryptic0: What's the output of  :set wrap?  include the ?
21:28  cryptic0: Raimondi:  returns just "wrap"
21:28  Raimondi: You're using soft wrap, that won't work.
21:28  cryptic0: so how do I set hard wrap?
21:28  Raimondi: :Set nowrap
21:29  Raimondi: Oops!  :set nowrap
21:29  cryptic0: ok and then?
21:30  Raimondi: :h ins-textwidth
21:31  johnnyfive: Raimondi, I think I got it, thanks!
21:31  Raimondi: Good :)
21:32  johnnyfive: just setup VIM using the "all one ide" or whatever tutorial, and so far i'm loving it. It's got a learning curve definitely, but i'm in <3
21:33  cryptic0: Raimondi:  still, :set textwidth=72 doesn't do what I need it todo
21:33  cryptic0: weird
21:33  Raimondi: WHat do yo need to do?
21:35  Raimondi: Usually, it's not weird, just some option with the wrong value... or a command you don't know yet...
21:35 --- squiggy_ is now known as squiggy
21:36  cryptic0: Raimondi:  I want to set the linewidth to a certain number of characters and I want it to stay that way even if I dragged the vim window to a larger size
21:36  cryptic0: basically, I always want some space after the end of every line
21:37  cryptic0: also, does mvim read parameters from ~/.vimrc?
21:38  Raimondi: So, you want all the text to be automatically formatted everytime you change the window size?
21:39  cryptic0: Raimondi:  I want it to stay within the character wrap limit I have set.
21:39  cryptic0: I don't wnat the lines to get longer if I made the windows larger
21:40  cryptic0: can you tell I am tired of looking at very long lines.
21:40  Raimondi: OK, now that you have set textwidth, what happens when you type a line longer that 72 characters?
21:41  walt: black hole
21:41  walt: don't do it
21:41  walt: you'll kill us all
21:41  homekevin: Do it! Do it!
21:41  walt: it's somewhat of a nasty bug
21:42  homekevin: I like living, but I like being contrary even more.
21:42  cryptic0: I am trying to apply these changes to a file that already exists
21:42  cryptic0: but wth, I will go ahead and type one out
21:42  Raimondi: cryptic0: First, I'm trying to find out if it works :)
21:43  kongo: cryptic0: you can reformat already existing lines with gq
21:44  cryptic0: Raimondi:  typing the line breaks it at 72 characters now, just as I had set. thanks.
21:44  cryptic0: kongo:  just type gq?
21:44  cryptic0: seems strange
21:45  kongo: cryptic0: no, you have to define a range of course
21:45  cryptic0: :5,20 gq?
21:45  kongo: cryptic0: see :h gq
21:45  cryptic0: ah ok
21:47  kongo: cryptic0: maybe you want to have a look at :h auto-format as well
21:48  homekevin: gq sucks. Use gw.
21:50  cryptic0: *gqap worked on one paragraph, but when I tried to repeat that to further paragraphs, it wouldn't
21:52 --- walt is now known as waltiot
21:54  Raimondi: :h gqq
21:54  Raimondi: or :h gww
22:17  writer: Hi
22:17  writer: Is there any way to specify all lines (matching a regex) in a range ?
22:18  writer: okay, got it, have to use :g
22:26  mfilipe: hi! anyone knows use vim-ruby-debugger?
22:26  mfilipe: I execute the :Rdebugger but I can't see the page
22:26  mfilipe: I don't know how I do to communicate server and debugger
22:33  mdance: how do i jump from word to word in insert mode?
22:33 --- sh1m_ is now known as sh1mmer
22:33  fow: mdance, you don't
22:34  mdance: there is no cntrl+{left,right} equivalent?
22:34 --- cuba33ci_ is now known as cuba33ci
22:34 --- y3llow_ is now known as y3llow
22:35  athit: mdance: ^ow
22:37  mdance: which key is ^ again?
22:38  deryni: ctrl?
22:38  mdance: thats what i thought, for some reason the ^ow isnt working
22:38  athit: mdance: yes CTRL O + w to move one word forward
22:38  mdance: im using gvim
22:38  athit: in insert mode
22:39  mdance: wow thats brutal
22:40  athit: CTRL-O          execute one command, return to Insert mode
22:40  athit: i just changed my ^o binding in screen to use it in vim!
22:41  athit: you can try ^o$ to get to the end to line
22:41  mdance: which is the leader key by default \?
22:42  deryni: Yes. :help <leader>
22:42  athit: :echo mapleader
22:49  waltiot: follow the leader
22:49  waltiot: sorry, follow the <leader>
22:50  mhi^: ..
22:55 --- sec^nd is now known as BobMarley
23:15  sh1mmer: when I have spell set on XML document it's only checking inside tags
23:15  sh1mmer: e.g. the tags themselves rather than the text nodes
23:15  sh1mmer: anything I can do to fix that?
23:17  singlecore: dudes
23:17  Raimondi: Are there any gals here?
23:17  singlecore: is it possible opening multiple gvim windows
23:17  singlecore: ?
23:17  singlecore: within the same gvim process?
23:17  spiiph: Sure, fire up another instance of gvim
23:17  spiiph: No
23:17  singlecore: hmm
23:18  singlecore: kk
23:18 --- zorzar is now known as zorzar_away
23:19  SplinterOfChaos: My filesystem is still readonly, but i'm thinking i'll recompile the kernel with only ext4 and see if it works.
23:19  yacoob: Hello there. How can I check for value/presence of environment variable in .vimrc?
23:20  spiiph: :echo $VAR
23:20  SplinterOfChaos: yacoob: "cat ~/.vimrc | grep var"
23:21  spiiph: That's not what he asked. :)
23:21  spiiph: yacoob, if you want to check the value, you could do e.g. if $SHELL == "/bin/sh" | ... |endif
23:21  SplinterOfChaos: Oh, wrong window.
23:22  SplinterOfChaos: I thought i was in an entirely different channel, sorry.
23:22  Raimondi: yacoob: For presence  if exists('$VAR')
23:23  yacoob: Cool. Is there a case instruction in vim scripting?
23:24  Raimondi: no
23:24  flipmoe: i'm writing my first plugin with python, how can i set and access options from vimrc?
23:27  henux: Hey.  How do I set the syntax highlighting for the currently editing file to be C programming language? Thanks.
23:28  Raimondi: henux: :set ft=c
23:28  henux: Thank you!
23:33  Raimondi: flipmoe: I'm not sure what you want, do you want to set a Vim option from python?
23:33  bairui: it's off topic to mention this here, but   cat foo | grep bar   is redundant. Use:   grep bar foo
23:33  Raimondi: Good motning, bairui :)
23:33  bairui: g'day, Raimondi :)
23:33  Raimondi: morning*
23:34  flipmoe: Raimondi: no i want to access a custom set option, for example the path to a specific file
23:34  henux: Is there a way to set some file with a random file extension to use the C programming language syntax highlighting?  There were these things known as modelines or something.
23:34  Raimondi: flipmoe: from Python?
23:34  flipmoe: Raimondi: yes
23:35  henux: Was it like: /* :set ft=c */   ?
23:35  deryni: :help modeline
23:35  Raimondi: flipmoe: No idea.
23:35  flipmoe: Raimondi: ok, and in general without python?
23:36  lumgwada: flipmoe: :he python-vim most likely you want vim.eval('&option_name')
23:36  Raimondi: To access an option precede its name with a &, let a = &filetype
23:36  bairui: henux: and you could try an autocmd in your ~/.vimrc for all files of that type/name/etc.  :help autocmd  and  :help 40.3
23:37  flipmoe: lumgwada: and how can i enable custom plugin options? for example TTpathtofile='test'
23:37  flipmoe: ?
23:37  henux: I have /* vim:ft=c */ but it doesn't work
23:37  deryni: You want to let the user set options that your plugin will read? They are just settings that your plugin reads, nothing magic.
23:37  flipmoe: ok
23:38  henux: Do I need to enable some mode to allow modelines?
23:38  deryni: :help 'modeline
23:38  deryni: vimgor: securemodelines
23:38  vimgor: Dunno, deryni.
23:39  lumgwada: eg in .vimrc  ... let  g:myplug_variable = 'foo' ..in python.. foo = vim.eval('g:myplug_variable')
23:40  flipmoe: deryni: like so: let TTtest='test' ?
23:40  yacoob: eh, setting guifont under macvim is rather... hit and run
23:41  deryni: That would set TTtest to the string 'test', yes. Though I'm not sure what the default scope of a variable is.
23:41  lumgwada: flipmoe: just use global g:varname for now
23:44  flipmoe: lumgwada: so in my vimrc: g:TTtest="test" ?
23:44  qfr: Is there any way to make pageup go as far as the beginning of the file? I want the cursor to actually go to the beginning of the file when I keep on hitting pageup
23:44  LeoNerd: gg
23:45  qfr: But right now it just stops as soon as the first line gets into my sight :[
23:46  Raimondi: qfr: See LeoNerd's answer ^
23:47  deryni: You could probably write a function to do that if you really wanted to.
23:47  flipmoe: lumgwada: Unknown option, let g:TTtest='test'
23:48  strull_: qfr: or you could try :map <pageup> <c-u>
23:50  qfr: strull_ that does the same thing in insert mode hm
23:50  qfr: However, in normal mode it actually works, as I just noticed
23:52  strull_: it's a bit different though
23:55 --- BobMarley is now known as sec^nd
23:57  lumgwada: flipmoe: vim.eval() is for getting vim.command() can do setting. You'll probably want to read :he python-vim and :he vim-script-intro
23:58  flipmoe: lumgwada: ok thx
--- Log closed Mon Nov 22 00:00:51 2010
