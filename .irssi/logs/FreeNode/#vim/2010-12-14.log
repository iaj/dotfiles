--- Log opened Tue Dec 14 11:47:24 2010
--- Log closed Tue Dec 14 11:47:24 2010
--- Log opened Tue Dec 14 11:52:47 2010
11:52 --- Users 569 nicks [1 ops, 0 halfops, 0 voices, 568 normal]
11:54 --- Channel #vim was synced in 86 seconds
12:26  Silex: any idea how to hide the | in nerdtree?
12:27  Silex: I think it'd look much better without them, removing them in the source yields all sorts of problem because they're counted to know the indent level
12:27  Silex: maybe I could hide them with syntax magic, as there seems to be a syntax group for them
12:30  Silex: ah, adding an invisible highlight worked!
12:31  Syniq: Hey, I'm converting a massive file from one format to another, and I'm wondering if it's possible to get /thing\(repeating-group\(sub-group\)\)+other-thing/ to replace to thingsub-groupsub-group-subgroupother-thing or thingsub-groupother-thing?
12:31  Syniq: Hmm... I havne't explained that very well. >.<
12:31  veg^: Silex: can u show a coomand?
12:32  Silex: hi treePartFile guibg=#3f3f3f guifg=#3f3f3f gui=none cterm=none
12:32  Silex: replace with teh color you want
12:32  Silex: also, maybe you need to set treePart instead of treePartFile
12:32  Silex: play with it
12:34  veg^: Silex: thx
--- Log closed Tue Dec 14 12:41:36 2010
--- Log opened Tue Dec 14 12:52:01 2010
12:52 --- Users 574 nicks [0 ops, 0 halfops, 0 voices, 574 normal]
12:53 --- Channel #vim was synced in 88 seconds
12:56 --- daniel_ is now known as daniel
13:16 --- _mathrick is now known as mathrick
13:23  FernandoBasso: The dark side has fallen upon #vim.
13:52 --- DestinyAwaits1 is now known as DestinyAwaits
14:00  scorp007: what causes vim to jump by words when you hit ctrl-space?
14:01  scorp007: is this the default behavior? Because I don't think I mapped anything to make it do that.
14:01  scorp007: i.e. i made a different mapping to act on ctrl-space but if you delay a bit, it will jump a word.
14:04  the_isz: scorp007: it does the same for me, but i don't know why either...
14:05 * scorp007 wonders if i can disable it
14:05  deryni: vim or gvim?
14:05  the_isz: deryni: gvim for me
14:05  the_isz: vim doesn't do that...
14:06  scorp007: gvim here
14:06  Kuukunen: scorp007: what about vim?
14:06  scorp007: also does it
14:07  Kuukunen: hurr
14:09  fow: hmm it doesn't happen for me in terminal Vim but it does happen in gvim. you can disable it with :nmap <C-Space> <Nop>, but I do find it curious that that's not documented anywhere and isn't a map
14:10  scorp007: well if I mapped it to nop, that'd presumably kill my other mapping for c-space, that i would like instead
14:10  FernandoBasso: I had just said, the dark side has fallen.
14:11  nate-: what do you mean FernandoBasso ?
14:11  bars0: Hi all! Because vim is so amazing software I suppose that there is such command like 'move to the next blank line'? Could anybody give me a hint?
14:12  FernandoBasso: I mean that the dark side has fallen. We are doomed.
14:12  nate-: oh
14:12  fow: scorp007, if your mapping was in normal mode, the default behavior wouldn't happen, and if your mapping isn't in normal mode, a normal mode mapping won't affect your mapping
14:12  nate-: well that clears that up
14:12  foocraft:  /\n\n
14:12  foocraft: and then keep pressing "n" to move to the next blank line
14:12  Ulfalizer: is there some native functionality/plugin that allows me to do something along the lines of :e foo<tab> and have foo be completed with files from subdirectories as well as files in the current directory?
14:13  FernandoBasso: nate-: I had made a very, very, funny comment because the channel had been quiet for some time.
14:13  scorp007: fow, my mapping is in normal mode, and the default behavior /does/ happen, but only if I "take too long"
14:13  foocraft: Ulfalizer, that's already there
14:13  nate-: bars0, /^\n
14:13  nate-: FernandoBasso, ah i see
14:13  FernandoBasso: And then, casually, someone points about this C-Space mystery.
14:13  fow: scorp007, oh, is your mapping like <C-Space>someotherstuff ?
14:13  Ulfalizer: foocraft: remember how to use/set it?
14:13  scorp007: yes
14:14  jamessan: bars0: }
14:14  fow: scorp007, mapping just <c-space> to <Nop> won't affect that then
14:14  Ulfalizer: i usually just use exuberant ctags with the option of generating tags for files, but that doesn't work for non-source files
14:14  scorp007: oh, goodie!
14:14  deryni: Ulfalizer: You mean where "foo" is part of the filename in the subdirectory and not the subdirectory name itself?
14:14  Ulfalizer: deryni: yes, e.g. sub/foobar
14:14  foocraft: Ulfalizer, will ectags work with java files as well?
14:14  bars0: jamessan, nate: tkanks!
14:14  Ulfalizer: foocraft: yes
14:15  jamessan: Ulfalizer: I hear people use FuzzyFinder for that
14:15  nate-: nps bars0, jamessan's was better
14:15  Ulfalizer: jamessan: i'll take a look. thanks.
14:15  foocraft: nice :)
14:16  foocraft: thanks for the tip Ulfalizer
14:16  scorp007: fow, works, thanks!
14:17  Ulfalizer: foocraft: if you generate file tags you can do :tag my_sou<tab> -> :tag my_source.java to jump to files
14:17  Ulfalizer: it's not on by default though
14:17  foocraft: and then <ctrl>p would just pop up a list with all the keywords right?
14:17  fow: scorp007, you're welcome
14:18  Ulfalizer: foocraft: yeah, if something else matches my_sou
14:18  Ulfalizer: it's just an ordinary tag that happens to refer to the beginning of a file
14:25  sgronblo: Hey I tried coming up with a match to show whitespace at the end of lines, like this: match Error /\S\+\zs\s\+$/
14:25  Ulfalizer: sgronblo: what language?
14:25  sgronblo: However it seems it's not compatible with multiple windows
14:25  Ulfalizer: if it's C or Python you should look at the syntax highlighting options
14:25  sgronblo: it only shows the whitespace in the rightmost window
14:25  nate-: sgronblo, there's plugins that do this for you already
14:25  fow: sgronblo, why not :se list lcs+=trail:.
14:26  fow: or make the trailing character just a space and change the hl group associated with the trailing character
14:26  nate-: https://github.com/bronson/vim-trailing-whitespace sgronblo
14:26  sgronblo: fow hmm, maybe I should start using list more cleverly
14:26  nate-: also has  :FixWhitespace command
14:27  Ulfalizer: for c/c++ you can just enable c_space_errors
14:29  sgronblo: https://github.com/bronson/vim-trailing-whitespace/blob/master/plugin/trailing-whitespace.vim#L7 could someone remind me what the crap at the end of the pattern is?
14:32  bairui: sgronblo: :help \@<!
14:33  fow: sgronblo, :h /\%# :h /\@<! -- match end of line only if the cursor is elsewhere, I think. I just set nolist when entering insert mode to avoid that problem
14:33  fow: hmm I suppose I could remove trail from lcs on InsertEnter
14:34  sgronblo: at least the plugin nate suggested seems to work better than my attempt at making a pattern
--- Log closed Tue Dec 14 15:03:14 2010
--- Log opened Tue Dec 14 15:13:38 2010
15:13 --- Users 586 nicks [0 ops, 0 halfops, 0 voices, 586 normal]
15:13 --- Server: [brown.freenode.net] [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
15:14  Silex: :s/also //<Esc>Ga instead<Esc>
15:14 --- Channel #vim was synced in 88 seconds
15:15  Silex: s/Ga/A/
15:19  strull_: and even more use none of them
15:21  exDM69: pathogen is pretty nice
15:22  exDM69: although it could put the helptags in a nicer location
15:22  exDM69: to stop showing dirty subrepos in git
15:32  Silex: vim-addon-manager is what I use
15:36 --- fddfoo is now known as fdd
15:38  ch077179: after a recent reinstall the toolbars in the top of gvim's window are gone, how can I get them back?
15:38  rson: ch077179: :help 'guioptions'
15:38  darkwise: Silex: do you use git version or your distro one ?
15:42  ch077179: sorry, no help for guioptions
15:45  strull_: ch077179: sorry, no vim then
15:46  naquad: i've got vim with AutoComplPop and AutoClose and it lagggssssss in some insane way on ruby files, especially in classes definitions. can i somehow speed it up?
15:47  ch077179: strull_, frankly, I think that is a very useless answer
15:48  fow: ch077179, you really should install the Vim help files, but :se guioptions+=T should fix it
15:48  ch077179: I've installed gvim from a checksummed fedora dvd, why would it come without guioptions?
15:49  fow: you definitely have guioptions if you have gvim, but apparently you don't have the help files. I guess it was to save space on the DVD
15:49  fow: or maybe the help's in a different package. I don't know. maybe ask #fedora
15:50  tangledhelix: exDM69: on dirty subrepos, you can use ~/.gitignore to stop that problem with tags files
15:51  thumbs: et: who would that user be?
15:54  exDM69: tangledhelix: as in $HOME/.gitignore?
15:54  giallu: uhm. I'm on Fedora 14 and ":help 'guioptions'" definitely works
15:54  et: thumbs: maek, asked in #ruby-lang, i redirected him to #httpd already
15:54  tangledhelix: exDM69: `git config --global core.excludesfile ~/.gitignore` and then put what you want in ~/.gitignore. here is my global gitignore: https://github.com/tangledhelix/dotfiles/blob/master/gitignore
15:54  ch077179: giallu, not here, what package is it? I have -common, -enhanced and -X11 installed
15:54  tangledhelix: exDM69: ignores vim swp files, tilde files, vim tag files, in repos and subrepos
15:54  exDM69: tangledhelix: thanks, that did the trick
15:54  tangledhelix: exDM69: naturally the caveat is that it will affect *all* of your use of git. so don't go wild with it
15:54  naquad: are there any autocompletion scripts for vim?
15:54  giallu: ch077179, I have -filesystem -enhanced -common -minimal and -X11
15:54  exDM69: tangledhelix: yeah, I only put ~/.vim/bundle/*/doc/tags
15:54  exDM69: for now
15:54  giallu: not sure which one provides help files (guess I could check by knowing a filename)
15:55  exDM69: I usually have .swp, etc in per-repo .gitignores to keep others in the project doing the same mistakes
15:55  ch077179: I forgot to add -minimal, -filesystem and -latex
15:55  ch077179: I really don't think it is an installation issue
15:55  tangledhelix: exDM69: i do that too but i use a bunch of subrepos that i have no write access to, so ~/.gitignore is still useful
15:55  giallu: ch077179, found: it's in -common
15:56  exDM69: tangledhelix: thanks for the tip, saved me some PITA
15:56  rson: just to offer a different solution to the gitignore stuff with subrepos, I actually put ignore = untracked in the .gitmodule config for each submodule instead, does the trick for me.
15:57  ch077179: giallu, yum reinstall vim-common fixed the problem.. weird
15:57  ch077179: I suspect gnome of having messed with my gui...
16:02  Geralt: Is it possible to search the output of :hi? Or get it somehow in a buffer?
16:02  Silex: yes
16:02  Silex: see :redir
16:03  Silex: or install the Decho plugin and have it easier
16:08  naquad: can i somehow say that keyword for this type of file has ?,!,@ in the end of a function or variable and : in the beginning of some variables?
16:09  Silex: naquad: I don't understand the question. Are you trying to create a regex?
16:11  naquad: Silex, no, i need to make vim completion to consider ?! piece of keyword if the exist. so some_object.xyz? - some_object - keyword, xyz? - keyword too, but atm with defaults xyz? is xyz w/o ? mark in the end
16:12  Geralt: Silex: cool, thanks
16:12  Silex: Geralt: y
16:12  Silex: *yw
16:13  Silex: naquad: it looks like you want ruby autocompletion in which case you'd consider using an existing plugin?
16:13  naquad: Silex, read the message again...
16:19  Silex: naquad: :h is_keyword
16:19  Silex: s/_//
16:20 * Silex rests his case about using teh rugy omnicompletion would work better
16:20  Silex: s/g/b/
16:20  naquad: Silex, tried that, but that thing doesn't make any difference between method_name? and bull?!!?shit! those ? and ! can be only in the end of method name
16:29  ozzilee: Is there a way to have vim add an ellipse after folded lines?
16:30  fow: ozzilee, :se foldtext=foldtext().'...'
16:30  ozzilee: fow: Ah, thanks.
16:31  fow: you're welcome
16:44  ozzilee: Is there a way to hide modlines? Google is failing me again.
16:44  ozzilee: *modelines
16:46  akahn: Is there something like :bdelete, but that will not close the window if it's the only window open?
16:46  akahn: Sometimes I want to delete the current buffer, and just wind up with a blank window in which to open a new file to edit.
16:48  rson: akahn: there are a few plugins that provide this but their names escape me right now.
16:49  rson: bufkill i think is one of them
16:50  akahn: ah yes
16:52  fow: ozzilee, disable them or prevent them from appearing in your buffer?
16:52  ozzilee: fow: Prevent them from appearing. I think I'm just going to use a custom extension though.
16:52  fow: ah
16:53  rson: ozzilee: i've seen some trickery using vim's conceal feature to hide modelines
16:53  rson: i'll see if i can find it again if you're interested
16:53  ozzilee: rson: I've already got it working with a custom extension, thanks though. Sounds interesting.
17:00  Tux^verdreifelt: hio :)
17:01  Tux^verdreifelt: is there a way to "rename" tabs in vim? like, when i open a new tab and paste stuff into that by script, that the tab says "mytab" instead of "unknown" or whatever?
17:02  tangledhelix: for the vimscripters: can one nest a "x ? y : z" conditional? e.g.: a:str=="foo" ? "bar" : "baz" but i need to nest another one inside, e.g.: a:str=="foo" ? "bar" : a:str="bar" ? "abc" : "def" : "foobarbaz" ... tried parens to enclose the nested expression but that throws an error
17:04 --- Guest44131 is now known as Tricia
17:09  tangledhelix: never mind, i figured it out. stupid typo.
17:09  tangledhelix: but if anybody fluent in endwise.vim is interested, i have an odd issue with an expansion i'm adding.
17:23 --- altamic_ is now known as altamic
17:23 --- torio_ is now known as torio
17:23 --- kisielk_ is now known as kisielk
17:28 --- forneus_ is now known as forneus
17:33  ckoehler: can i somehow show where a certain key mapping comes from?
17:33  ckoehler: C-N does something funky, and I don't know why
17:33  ckoehler: it goes back one char and puts me in insert mode
17:37  Silex: ckoehler: :verbose nnoremap
17:37  Silex: change nnoreamp to imap nmap whatever you need
17:38  ckoehler: Silex: awesome, thanks!
17:38  Silex: yw
17:42  c3l: I know you can paste old deletes via "2p, but is there a way to show the most rescent deletes, similar to how yankring can show the last yanks?
17:43  Silex: :reg
17:43  Silex: yankring can show last deletes too btw
17:47  c3l: Silex: wow, reg was useful! how can yankring do this?
17:47  Silex: c3l: my understanding of yankring is that by default it makes a ring of all deletes/yanks
17:47  Silex: so when you show the contents it shows them all intermixed
17:49  c3l: Silex: oh, thats very true, it actually does. I missed that entirely, but its much better like this. thank you
17:49  Silex: yw
17:49  Silex: I actually never use :YRShow
17:49  Silex: only ^N/^P
17:49  Silex: until I get the shit I want
17:49  Silex: :)
18:13  maodun: how do I delete the first 7 characters of every line including and below the line where the current cursor is?
18:14  fow: :.,$s/^.\{7}//  " is one way
18:14  maodun: thanks fow
18:37  naquad: how do i make php mode to align opening tags according to offset of parent element when editing html?
--- Log closed Tue Dec 14 21:42:32 2010
--- Log opened Tue Dec 14 21:42:55 2010
21:42 --- Users 593 nicks [0 ops, 0 halfops, 0 voices, 593 normal]
21:44 --- Channel #vim was synced in 86 seconds
21:49  seku: wow. i didn't remember the tutorial was that long
21:52  homekevin: Me neither. I suspect I never actually finished it. :)
21:52  seku: i dont remember did i
21:52  homekevin: I started reading help files instead.
21:53  homekevin: Plus just using Vim every damned day
21:53  seku: maybe skim through tutorial, do the excercises quickly and use a cheat sheet
21:53  seku: theres not that much to learn :D
21:53  homekevin: Yeah, I learned all the keys on the visual cheat sheet, and occasionally bugged my coworkers with questions.
21:54  homekevin: There's *tons* to learn! You just don't necessarily need it alll.
21:54  seku: well, if you dont need it, then you dont need it
21:54  homekevin: I still learn new things almost every day.
21:55  PhilB: I've been using vim exclusively since 1996.  I still learn new stuff all the time.
21:55  seku: but you find your way around help files, and doing things is not difficult
21:55  homekevin: It's true, learning how to find what you need is more important than learning everything else.
22:02  c3l: hi, im not very good at vim code, so how would I make a mapping that surrounds the selected text with for example \textbf{ <the text goes here> }. nmap <Leader>bf :'<,'> I know this would be using the marks for the selected text, but now, how do I insert what I want at the beginning and end of the marks?
22:03  deryni: Use the surround plugin?
22:04  c3l: deryni: hm, that looks interresting, thanks
22:05 --- xybre_ is now known as xybre
22:06  imperator: How can I map <ALT-l> to a literal lambda?
22:09  sleepynate: imperator: inoremap <A-l> λ
22:09  sleepynate: (assuming you want it it insert mode)
22:15  imperator: sleepynate, thanks!
22:17  xybre: Which if the remap commands do I use to remap keypresses in command mode?
22:17  xybre: of^
22:17  rudi_s: xybre: :h:cmap
--- Log closed Tue Dec 14 22:21:34 2010
--- Log opened Tue Dec 14 22:36:57 2010
22:36 --- Users 595 nicks [0 ops, 0 halfops, 0 voices, 595 normal]
22:37  xybre: Works in screen, bash, over ssh into either of those, and well, everythign except vim.
22:37  homekevin: xybre: Personally I'd try to get to the root of the problem to fix it.
22:37  xybre: Thats what I'm trying to do now :)
22:37  homekevin: xybre: What terminal?
22:37  graywh: xybre, what does :set t_K6? show?  ^[Ol ?
22:37  homekevin: xybre: And can you verify the escape codes both inside Vim and at the command prompt?
22:38  homekevin: * I mean, the shell prompt
22:38 --- Channel #vim was synced in 81 seconds
22:38  homekevin: xybre: And rather than :set t_K6, I'd ask you to get all of :set termcap and pastebin it for us
22:39  xybre: homekevin: same for all my terminals, I think its because osx is doing something unexpected, but bash, screen, and irssi all seem to be okay with it.
22:39  xybre: My term is set to xterm-256.
22:40  homekevin: xybre: But what is the terminal?
22:40  xybre: iTerm, Terminator, Terminal?
22:40  homekevin: Does OSX use terminfo?
22:41  graywh: yes
22:41  graywh: xybre, for Terminal.app, TERM=dtterm is recommended
22:41  xybre: There are terminfo files in the system /usr/share
22:41  homekevin: xybre: Unless they all have exactly the same codes you should only be considering one at a time
22:42  homekevin: And of course you need the right TERM for each, not one TERM for all of them. Unless they are exactly the same.
22:42  homekevin: I'm not familiar with OSX or those terminals
22:42  xybre: I thought you were asking if it was terminal specific, so assume I'm using iTerm then.
22:43  xybre: Most apps don't really like it if I tell them anything other than xterm-256, including vim. Since, I think thats the only term that "supports" 256 colors.
22:44  deryni: urxvt has a 256 color mode, gnome-terminal supports it, konsole supports more colors than that.
22:45  xybre: I'd really like to just tell my apps what featureset I want, the predefined sets seems clunky, incorrect, and outdated. My terminals support multiple modes and terminfos, so eh.
22:47  homekevin: xybre: That's sort of not the way it works.
22:47  homekevin: The terminfo is supposed to give the feature set, the TERM is supposed to give the terminfo entry.
22:48  homekevin: Granted, terminfo is often wrong, incomplete, or options-specific.
22:48  homekevin: But in that case I think the "right" think to do is fix terminfo's database.
22:48  xybre: http://pastebin.com/k7qK2SqF
22:48  homekevin: Unfortunately some apps (like Vim) have begun to ignore some of what's in terminfo because it's problematic
22:49  xybre: homekevin: I understand, I'm just not in the right position to fix all those issues right now :)
22:49  xybre: The pastebin is my termcap btw.
22:52  homekevin: xybre: And which keys aren't working? The keypad numbers?
22:52  homekevin: I think that's <k0> ... <k9>, which aren't in your termcap at all.
22:52  xybre: Thats correct. I haven't noticed anything else not working, but I will test some other keys now to make sure.
22:52  xybre: The whole keypad, not just the numbers is resulting in escape sequences.
22:53  homekevin: xybre: You should be able to set them with :set <k0>=^[blah
22:53  homekevin: Also :set <kPlus>=  :set <kEnter>= etc.
22:54  homekevin: But those should probably be in the terminfo, and if they aren't you might want to add them there instead of messing with vim
--- Log closed Tue Dec 14 23:02:17 2010
--- Log opened Tue Dec 14 23:07:41 2010
23:07 --- Users 589 nicks [0 ops, 0 halfops, 0 voices, 589 normal]
23:07  homekevin: Leading 0s shouldn't be necessary, I think
23:07  Raimondi: ok
23:07  homekevin: :sort n can handle it
23:08  Raimondi: Yep, just tried it.
23:08  sir_lewk: yeah, doing that with awk is my backup plan I guess
23:09 --- Channel #vim was synced in 87 seconds
23:09  homekevin: This worked quite well: :%s/^/\=len(getline('.')) . "|"
23:10  homekevin: I'm a bit surprised that getline('.') got the right line.
23:10  homekevin: I expected it to return the cursor line each time.
23:11  gkatsev: welp, looks like vim has arrived. You can check your gmail account from vim: http://danielchoi.com/software/vmail.html
23:15  Raimondi: I'll wait until it supports imap...
23:15 --- forneus_ is now known as forneus
23:19  jerojasro: :imap ? XD
23:19  Raimondi: :)
23:20  homekevin: Obviously what we really need is an elisp scripting engine in Vim.
23:21  spiiph: Obviously.
23:21  homekevin: Then you can have all that and more.
23:31  jerojasro: homekevin: I don't see how having elisp here would give us any advantage, over vimL
23:32  jerojasro: what we need is some way of interacting properly with external processes; controlling them through threads
23:33  jerojasro: I do know that there is infrastructure to do that to some extent, via the netbeans "interface"
23:33  jerojasro: but in the end, I'm not really sure all that would be really worth the trouble...
23:37  bcardarella: Isn't there a way for me to go back to a previous state of my buffer based on time? Like, go back 1 hour?
23:38  WakiMiko: :earlier 1h
23:38  bcardarella: sweet, thanks!
--- Log closed Wed Dec 15 00:00:31 2010
