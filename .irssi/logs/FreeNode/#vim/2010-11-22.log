--- Log opened Mon Nov 22 00:00:51 2010
00:23  singlecore: i just had a cup of some excellent tea
00:24  singlecore: indeed, it was so nice that im gonna go to the kitchen and make me another cup
00:31  qfr: How do I paste text in normal mode?
00:34  xtagon: qfr:    :help p
00:36  qfr: xtagon I don't get it, I don't see anything which allows you to paste stuff into the :line down there
00:36  qfr: I want to enter /<pasted content here>
00:36 --- sh1m is now known as sh1mmer
00:37  qfr: Hitting p there obviously doesn't do anything
00:37  qfr: I am also not certain what the "x prefix is supposed to mean
00:38  xtagon: You can paste from different registers. "x speficies pasting from register x (which can be any letter a-z)
00:38  deryni: :help c_ctrl-r
00:38  qfr: Well typing /"xp obviously doesn't paste anything so I still don't get it
00:39  xtagon: You said you wanted to paste in normal mode
00:39  qfr: I want to paste text into the command line
00:39  qfr: Not into the document
00:40  frogonwheels: qfr:  did you try it?
00:41  deryni: qfr: My help command was to you.
00:42  qfr: Ahh <c-r><+> does the trick, thanks
00:56  homekevin: See, that's what happens when you try to jump to the next window but Vim doesn't have the focus.
00:58  qfr: lol homekevin, I keep on hitting c-w in X-Chat
00:59  qfr: Because I haven't gotten used to my multi screen setup
00:59  qfr: So I frequently don't notice when my editor doesn't actually have focus
00:59  qfr: Browser, too
01:00  qfr: So, what's a nice way to map something that is supposed to execute a line in normal mode but it is supposed to work in any mode?
01:01  qfr: So far my mappings are hard coded to work in insert mode only with esc etc
01:01  qfr: Which is quite silly
01:02  spiiph: Yes, since you shouldn't run commands from insert mode. :)
01:03  qfr: No, the silly part is that it breaks in normal mode
01:03 --- purple is now known as Guest50973
01:09  singlecore: any1 know a possible reason for eclimd completion slowing down?
01:10  singlecore: gave it already double the heap
01:10  singlecore: though that wont make a difference on speed
02:12  foocraft: eclimd?
02:12  foocraft: vimgor, eclimd
02:12  vimgor: No idea!
02:20  singlecore: foocraft, vimgor nm the machine healed itself
02:21  Raimondi: singlecore: vimgor is a bot.
02:21  singlecore: btw eclimd: http://eclim.org/
02:21  singlecore: Raimondi, ups
02:21  singlecore: ^^
02:22  singlecore: vimgor, stfu
02:22  vimgor: No idea!
02:22  singlecore: aye
02:28  Eiler: how do i properly set the tab size?
02:28  frogonwheels: Eiler: :help 'sts  :help 'et  :help 'sw  :help 'ts   :help modeline
02:29  frogonwheels: Eiler: Otherwise some more info on what you want to achieve would help
02:29  Eiler: well the thing is there seems to be several things related to tabs
02:30  Eiler: i set tabstop to 4 but still some autoindentation uses 8, or actually 2 tabs
02:32  fow: you should probably leave ts alone and probably set sts and sw to 4, and optionally use et
02:32  frogonwheels: Eiler: again - depends on what you want to achieve
02:32  Eiler: how come, i've heard of all of them, shouldnt i set all three?
02:32  frogonwheels: Eiler: autoindent uses the 'shiftwidth'  ('sw') setting
02:33  frogonwheels: Eiler: depends on what you want to acheive.
02:33  frogonwheels: Eiler: you want spaces or tabs?
02:33  fow: Eiler, read the help on them that frogonwheels pointed you to. The help should clear things up
02:34  Eiler: i get what shiftwidth is, but how do you distinguish between tabstop and softtabstop?
02:34  frogonwheels: Eiler: did you read?
02:34  Eiler: softtabstop seems to be when you press the tab button
02:34  Eiler: yes i did
02:35  frogonwheels: ok - yes.. sts is  for the tab button,  sw is for autoindent >> etc
02:35  frogonwheels: Eiler:  And ts defines now many spaces a <tab> character takes up
02:37  Eiler: so, then why should i only set sts and sw, and not ts?
02:37  Eiler: shouldnt all be set then, of maybe the desired effect is achieved anyway
02:37  frogonwheels: Eiler: Changing ts is ok - but be aware that some people demand that ts=8  and so you should possibly distinguish between indent and alignment
02:37  frogonwheels: Eiler: it depends on the desired effect
02:38  frogonwheels: [09:33] <frogonwheels> Eiler: you want spaces or tabs?
02:39  frogonwheels: Eiler: http://vim.sourceforge.net/scripts/script.php?script_id=231
02:40  Eiler: which of them distinguishes between spaces or tabs?
02:42 * frogonwheels refuses to answer that on the grounds that it indicates failure to read the :help references provided.
02:43  Eiler: why even have an irc channel, just redirect everyone to :help
02:44  frogonwheels: Eiler: I redirected you to specific pages on help.
02:44  frogonwheels: Eiler: which is usually 1/2 the battle
02:47  frogonwheels: vimgor: :help
02:47  vimgor: Rumor has it :help is the only Vim reference you need: it contains everything there is to know about Vim, it's updated when you install plugins or upgrade Vim, and it is always right., frogonwheels
02:47  frogonwheels: :)
02:48  Eiler: it seems to be expandtab that makes it to spaces instead, that one wasnt even mentioned?
02:48  frogonwheels: 09:28] <frogonwheels> Eiler: :help 'sts  :help 'et  :help 'sw  :help 'ts   :help modeline
02:48  frogonwheels: :help 'et
02:49  Eiler: ok
02:50  frogonwheels: .. so if  you have  noet  then   what you set ts to becomes important.
02:50  et: why would anyone set noet :(
02:51  frogonwheels: so they have tab characters in their source.  why not?
02:51  et: you're missing the point ;)
02:51 * et <-
02:52  frogonwheels: ok so  :set et sts=4 sw=4
02:58  b14ck: Hi all. I've got a quick question. I'm trying to configure vim to be PEP-8 compliant (for python), which means I need to use 4-spaces as a tab. I've already configured that, but I'm having problems treating 4 spaces as a tab while I'm editing.
02:58  b14ck: EG: I'd like to be able to move 4 spaces over using a single l keystroke, isntead of 4 of them.
02:58  b14ck: Does that make any sense?
02:59  frogonwheels: b14ck: :set et sts=4 sw=4
02:59  frogonwheels: b14ck: :help sw
03:00  b14ck: The help page for sw doesn't really show anything.
03:00  b14ck: SW is shiftwidth right?
03:00  b14ck: In my vimrc I already have `expandtab; tabstop=4; shiftwidth=4`
03:00  b14ck: So when I tab it creates 4 spaces.
03:00  b14ck: But my problem is, let's say I'm editing code and I'm on the first character of a line that is already indented 4 spaces over.
03:01  b14ck: I want to move right without having to hit the 'l' key 4 times.
03:01  b14ck: When I use tabs, it treats the tab as a single character, so its quicker to move around.
03:01  b14ck: But with spaces, I can't do that. That's what I'm trying to remedy.
03:01  fow: Well, there's ^, but I don't think you can do that without some magic. Perhaps you could use literal tabs while editing and convert to spaces when saving or something
03:01  frogonwheels: b14ck: oh. sure - that's a job for a mapping
03:02  b14ck: Mapping? Got a link to anywhere that would describe that process?
03:02  b14ck: My google results are probably too ambiguous: "how to treat spaces as tabs in vim" doesn't bring up anything useful
03:02  frogonwheels: b14ck: :help :map
03:02  b14ck: Oh, ok!
03:02  b14ck: Thanks D:
03:02  b14ck: I'll read that first.
03:02  frogonwheels: b14ck: but you'd have to find a key to bind it to
03:03  frogonwheels: b14ck: and it's probably better to use a map-<expr>
03:03 * fow thinks map-<expr> is magic
03:03  b14ck: What would I be trying to bind?
03:03  frogonwheels: b14ck:  <tab> already has a use in normal mode btw
03:04  b14ck: I think I'm fuzzy on--what am I trying to override here to do it right?
03:04  frogonwheels: b14ck: I guess you could bind the cursor keys - but I wouldn't bind hjkl
03:04  b14ck: I just want vim to pretend like 4 spaces are tabs while I'm editing.
03:04  b14ck: But still keep them as spaces.
03:04  frogonwheels: b14ck: sure.. but vim doesn't allow that - so the alternative is a mapping.
03:04  b14ck: Ok, but what would the mapping do for me?
03:05  frogonwheels: b14ck: press l <n> times as required
03:05  b14ck: Oh, I see.
03:05  b14ck: Hrm, that's kinda inconvenient thoguh :(
03:05  b14ck: I'd have to teach my hands to use an alternate key only when moving over space characters.
03:06  frogonwheels: b14ck: sure. but I seriously wouldn't remap hjkl  for the sake of plugins.
03:06  frogonwheels: b14ck: but mapping <left> <right> would be ok
03:06  frogonwheels: mostly
03:06  b14ck: Right now I have left and right disabled, to force me to learn the normal keys =p
03:07  fow: Personally I like the autocommand approach :au BufLoadPost,BufWritePost *.xx setl noet | retab!   and    :au BufWritePre *.xx setl et | retab
03:07  frogonwheels: b14ck:  I'd learnt to use w e b  &c
03:08  frogonwheels: b14ck: what's a workflow where this 'treat spaces as tabs for movement' behaviour is actually useful?
03:08  fow: frogonwheels, wouldn't plugins use :normal! and the like in order to avoid user mappings anyway?
03:08  b14ck: Well, it's because I mostly do python programming, and PEP-8 (the python style conventions) recommend using 4 spaces instead of tabs.
03:08  frogonwheels: fow: they _should_ but often don't
03:09  b14ck: I've been using tabs all along because they're convenient, but I'm trying to make myself adhere to the standards now.
03:09  fow: ah
03:09  b14ck: But it's just a pain.
03:09  frogonwheels: b14ck: that's fine ..  but seriously, learn to use other movement commands.
03:09  frogonwheels: rather than cursoring over whitespace
03:09  b14ck: frogonwheels: yah. I mean, I can do w, etc.
03:09  b14ck: That's OK.
03:12  Eiler: http://lh6.ggpht.com/_ZzOZmj1dP0c/Sl3XVwnZOwI/AAAAAAAAAlc/aRIYBuE5Jhc/s800/vim.png how can you get the window to the left there that lists directories? and also the linenumbers in the main window?
03:13  dindinx: Eiler: the left window looks like the nerdtree plugin.
03:13  Raimondi: The window to the lef tis NERDTree plugin, :set number   for the line numbers
03:13  dindinx: for the line numbers, see :he nu
03:14  Eiler: ok
03:36  singlecore: gn8 fellas
03:52  Eiler: i start nerdtree with :NERDTree, but in my .vimrc, would i just put: NERDTree there?
03:53  Raimondi: Eiler: That won't work, the vimrc is sourced before any plugins, so NERDTree commands would not be available.
03:54  Eiler: aha
03:54  Eiler: so cant i make it start automatically with gvim then?
03:54  Raimondi: YOU can use an autocmd:  au VimEnter NERDTree
03:55  Raimondi: Wrong:   au VimEnter * NERDTree
03:55  Eiler: im not sure what that is, but i'll just type that into my .vimrc?
03:56  Raimondi: Yes, but you should read  :h autocommand
03:56  Eiler: why, is it something dangerous?
03:56  Eiler: it seems to work at least
--- Log closed Mon Nov 22 11:20:31 2010
--- Log opened Mon Nov 22 11:20:52 2010
11:20 --- Users 565 nicks [0 ops, 0 halfops, 0 voices, 565 normal]
11:21 --- Channel #vim was synced in 67 seconds
11:27  singlecore: howdy all
11:45  sitaktif: Any way to have completion with %:r and %:h ? If not, I think it could be a nice feature.
11:48  mgedmin: sitaktif, could you elaborate of that?  :e %:r<tab> works for me
11:49  sitaktif: it does not for me :|
11:49  sitaktif: probably old version or bad conf
11:50  mgedmin: old versions didn't have completion for %
11:50  mgedmin: I don't remember when exactly it was added
11:50  sitaktif: got a 7.2
11:50  mgedmin: 7.2.something, probably
11:50  sitaktif: mmh
11:51  sitaktif: I'll investigate that
11:51  sitaktif: thanks
11:52  mgedmin: 7.2.313
11:52  mgedmin: according to :h version7.txt
12:03  sitaktif: cheers, I'll correct that
12:14  qfr: This file contains Windows line endings, I checked in a hex editor but I see no ^Ms, what is up with thath?
12:14  qfr: Do I need to turn on something in my vimrc first?
12:14  FernandoBasso: What do you want to do?
12:14  FernandoBasso: To remove them?
12:15  qfr: I want them to become visible in vim
12:15  qfr: It is concealing them
12:15  qfr: It looks like a regular UNIX line ending file atm
12:15  qfr: Without the ^M symbols
12:15  spiiph: Vim won't display that in the file. You'll have to look at the file format.
12:16  fow: qfr, :e ++ff=unix
12:16  spiiph: Or do that
12:16  fow: (feels hackish to me)
12:16  spiiph: Yes, there's really no reason to do that
12:17  qfr: Ah, nice
12:17  qfr: Well otherwise I won't notice that a file is broken until I see it in the git diff
12:17  fow: qfr, why do you want to see them anyway? Vim should tell you when you're using line endings not native to your system, and you can always check with :se ff?
12:17  qfr: Some Windows moron corrupted this file and committed the changes
12:17  qfr: And I didn't even notice until now
12:18  qfr: I told the dev to fix his gitconfig
12:18  qfr: And his editor
--- Log closed Mon Nov 22 12:38:06 2010
--- Log opened Mon Nov 22 12:38:33 2010
12:38 --- Users 570 nicks [0 ops, 0 halfops, 0 voices, 570 normal]
12:39  spiiph: It's always in "0
12:39 --- Channel #vim was synced in 71 seconds
12:40 * mgedmin loves "0
13:03  Eiler: how does spellchecking work in vim, can it work with all languages and do i need to download a dictionary or something?
13:05  mgedmin: you :set spell
13:05  mgedmin: and probably :set spelllang=en or some other language of your choice
13:05  mgedmin: if vim doesn't find a dictionary, it'll prompt to download one
13:05  mgedmin: (into ~/.vim/spell, which it creates automatically)
13:06  Eiler: aha
13:07  Eiler: whats the difference between set and setlocal?
13:07  mgedmin: :h :setlocal explains that
13:07  mgedmin: or, rather, :h local-options
13:22  the_dark_warrio: how can I do my own mapping that supports a count? For instance, the 'w' to move a word supports a count
13:23  mgedmin: call a function that does something with v:count
13:23  the_dark_warrio: mgedmin: thanks !
13:39  Eiler: anyone using vcscommand plugin? does it work good with git?
13:40  Eiler: or is there a better git plugin?
13:41  mgedmin: people in this channel have been mentioning 'fugitive'
13:41  mgedmin: I think vcscommand works too; I rarely use git
13:42  mgedmin: and I use a small subset of vcscommand's features: basically only annotate and vimdiff
13:42  Eiler: fugitive doesnt seem to be in portage
13:42  Eiler: hmm how do you start vcscommand? is it just to type :vcscommand ?
13:43  mgedmin: it has a bunch of :VCSxxx commands
13:43  mgedmin: a bunch of mappings, I think
13:43  mgedmin: and a GUI menu
13:43  Eiler: aha
13:46  Eiler: how can i set the color of the linenumbers?
13:48  mgedmin: :h 'number'
13:48  mgedmin: tells me
13:49  mgedmin: to use the LineNr highlighting group
14:09  Eiler: i click on hl LineNr but it does give me much
14:23  LiTuX: Hey guys, I've got a problem about Vim. When there are loooong lines in a file, use vim to open it with the wrap flag on, Vim
14:25  LiTuX: Hey guys, I've got a problem about Vim. When there are loooong lines in a file, use vim to open it with the wrap flag on, Vim always show every line and there are lots of @@@.
14:25  mgedmin: I'm not sure what the problem is
14:26  mgedmin: are you perhaps searching for :set display=lastline ?
14:27  LiTuX: Is there any way for Vim to behave like most other editor, e.g. notepad or whatever, do not try to show the whole line in one time?
14:27  mgedmin: you mean, disable wrapping? :set nowrap
14:28  LiTuX: no
14:29  LiTuX: set wrap and use gj/gk can move up through the display line, but when a nature line is gone, vim will jump a lot display lines
14:29  bosie: is there a way to open a URL (under the cursor) in the browser?
14:30  LiTuX: But other editors won't behave like that, when a display line disappear, the screen only scrolls one line.
14:30  mgedmin: LiTuX, vim always tries to make the current line fully visible, and there's no way to change that
14:31  mgedmin: the only advice I can come up with is "avoid long lines"
14:31  _rane: i'm pretty sure vim doesn't show fully lines for me because i've set wrapping off
14:31  LiTuX: Be sure that no solution?
14:31  LiTuX: what a pity.
14:32  mgedmin: bosie, I use the clipboard; I don't know if there's a better way
14:32  mgedmin: something like :!xdg-open <CWORD> might work, if the url is surrounded by spaces
14:34  bosie: mgedmin: right
14:34  LiTuX: But when set display=lastline, the lastline is not fully visible, why can't the firstline then?
14:35  mgedmin: someone would have to write a patch to implement this, I guess
14:37  LiTuX: OK, thank you mgedmin. Maybe we can wait for it. :) BTW, in fact I hate looong lines! :p
14:37  mgedmin: gggqG is a nice way to wrap them all
14:38  mgedmin: and then you can :set tw=9999 and gggqG again to unwrap back into long lines
14:38  mgedmin: assuming there's a blank line between paragraphs
14:38  LiTuX: Or just undo the gq :)
14:40  mgedmin: (assuming you're not editing the file in between)
14:40 --- Natch is now known as Natch|
14:48 --- SomeOne is now known as Guest83622
15:00  Eiler: what is folding code? like foldmethod=syntax?
15:15  rindolf: Eiler: hi.
15:15  rindolf: Eiler: folding is creating a part of the document that still exists but is hidden.
15:15  rindolf: Eiler: and can be expanded.
15:15  rindolf: Eiler: like folding a paper, and hiding part of it.
15:16  _rane: cool analogy!
15:18  Eiler: aha
15:27  djh: hi all. I want to have a setting in my vimrc to use F5 to toggle the navigation keys between being 'simple' up and down by line; or up and down a wrapped line, gj/gk style. I can't figure out how to 'phrase' this setting tho. Anyone able to help?
15:35  mgedmin: djh, you could have a variable that you toggle
15:36  mgedmin: or you could have your <f5> mapping remap <f5> as well as j/k
15:36  djh: mgedmin: Haven't encountered variables in vim so far - I'll look them up. Ty
15:57  tlonim: for python completion what is recommended generally -- i checked pydiction and now checking ropevim .. looks nice
--- Log closed Mon Nov 22 16:05:28 2010
--- Log opened Mon Nov 22 16:11:23 2010
16:11 --- Users 594 nicks [0 ops, 0 halfops, 0 voices, 594 normal]
16:11 --- Server: [pratchett.freenode.net] [freenode-info] if you're at a conference and other people are having trouble connecting, please mention it to staff: http://freenode.net/faq.shtml#gettinghelp
16:12  denysonique: PHP Parse error:  syntax error, unexpected $end in index.php on line 250 — is there an easy way to check for unbalanced <,(,{, etc in vim?
16:12  malesca: If I want to select say row 123 to 456, is there some nice invocation to do it?
16:12 --- Channel #vim was synced in 120 seconds
16:12  malesca: Other than jumping to 123 and then selecting downward the right number of rows
16:13  mgedmin: malesca, 123GV456G
16:13  dindinx: malesca: why selecting?
16:13  malesca: dindinx: To indent
16:13  mgedmin: but usually you can do stuff without entering visual mode
16:13  dindinx: malesca: no need to select then
16:13  mgedmin: :123,456>
16:14  dindinx: 123G333>>
16:14  dindinx: or :123,456>
16:14  malesca: dindinx: mgedmin: Nice, thanks both.
16:23  tfidf: how do i specify width in vim regex
16:24  tfidf: i just want to put line breaks after every 70 chars
16:26  mgedmin: :h pattern has the answer
16:26  the_isz: tfidf: try:  s/.\{70}\zs/\r/
16:27  tfidf: ok thanks i am trying
16:28  mgedmin: and if you don't want to insert line breaks in the middle of the word, use :set tw=70 and gggqG
16:28  mgedmin: s/the word/a word/
16:30  tfidf: awesome thanks it worked
16:30  tfidf: i didn;t have the middle of the word problem
16:30  tfidf: but good to know
16:31  mgedmin: (gq will also join lines shorter than 'tw', fwiw)
16:31  mgedmin: (unless separated by blank lines)
16:34  tfidf: how does gggqG work?
16:34  tfidf: which documentation should i look at ?
16:34  mgedmin: :h gg, :h gq, :h G
16:34  imganquan: hi all. how to remove the hilight after I use # on a word
16:35  tfidf: :noh
16:35  graywh: vimgor, nohl
16:35  vimgor: :nohl will disable current search highlighting until the next search is performed. A common map to avoid typing :nohl is ':nnoremap <silent> <C-l> :nohl<CR><C-l>'. See also, :help 'incsearch' and :help 'hlsearch'
--- Log closed Mon Nov 22 16:41:52 2010
--- Log opened Mon Nov 22 16:42:11 2010
16:42 --- Users 599 nicks [0 ops, 0 halfops, 0 voices, 599 normal]
16:43 --- Channel #vim was synced in 68 seconds
16:47  qfr: What is the difference between p and c-r +?
16:49  mgedmin: p pastes from " and works in normal mode
16:49  mgedmin: c-r + pastes from "+ and works in insert mode
16:49  qfr: Those access different buffers and p can obviously not be used for like pasting stuff to the command line in normal mode
16:49  qfr: Hmm
16:49  mgedmin: I think you mean 'registers'
16:49  qfr: Registers, alright
17:00  denysonique: should vim highlight unmatched {,?
17:00  denysonique: in php?
17:00  denysonique: unmatched '{'
17:07 --- FernandoBasso is now known as Athunye_Skywalke
17:14  orm_: hey, what's the command to delete a character but /not/ store it on the clipboard? because it's a bit of a pain when I copy something, remove a bunch of characters, then have to re-copy because the deleted stuff was on the clipboard
17:15  graywh: orm_, learn how to use the registers
17:16  orm_: ok, i'll look them up
17:16  orm_: or rather, it
17:17  mgedmin: "0 always has the last thing you copied, deletes don't overwrite it
17:17  mgedmin: and the thing you were looking for is the blackhole register,"_
17:18  mgedmin: reading :h registers, as graywh suggested, can be useful and educational
17:18  orm_: yeah, i was just reading that now
17:18  orm_: thank you
--- Log closed Mon Nov 22 17:41:43 2010
--- Log opened Mon Nov 22 17:42:07 2010
17:42 --- Users 599 nicks [0 ops, 0 halfops, 0 voices, 599 normal]
17:43 --- Channel #vim was synced in 70 seconds
17:52  consumerism:  #github
17:52  consumerism: oops.
18:08  gernot: Hi, I'm trying to substitute a quote (") with two apostrophes ('') using a vim ex command from the command line. %s/"/''/ works from within Vim, but not from the command line because the command itself has to be enclosed in quotes (right?). What can I do about this?
18:10  gkatsev: don't do it from the command line?
18:10  gkatsev: use sed instead?
18:10  gkatsev: oh, but that might have the same problem, hm...
18:10  Raimondi: gernot: escape the quote \"
18:12  Raimondi: gernot: On second reading, I?m not sure what you're trying to do...
18:12  gernot: Raimondi, thanks. escaping the quote (") and also enclosing the command in quotes works. Escaping the single quote and enclosing the command in single quotes didn't. Curious. :)
18:13  gernot: Raimondi, I'm trying to convert text in which speech is indicated by quotes to latex syntax: ``Foo'' instead of "Foo".
18:14  gkatsev: but why do it via vim in the commandline?
18:15  gernot: gkatsev, I'm looking at several tools right now. My usual pick is sed but as I ran into trouble with the single quotes I started looking for other options. Oh, and I want to do it from the command line to be able to save the solution as a script.
18:16  gkatsev: I would assume sed will work with the escape trick as well
18:18  gernot: gkatsev, indeed it does. Funny how I've been trying to escape the single quote this whole time.
18:20  gernot: Now, does somebody know a magic regex to convert quotes to latex syntax? :) My problem is that there can be several pairs of quotes in one line, so .* doesn't cut it.
18:20  gkatsev: what's latex syntax?
18:21  qfr: gernot just write a Python/Ruby script to do the job
18:21  mhi^: gernot: vim +"%s/\"/''/g" +x blubb.tex
18:22  qfr: I'm not sure it would be comfortable with RE
18:22  qfr: Since you need alternation/state
18:22  justinxreese: the g flag on :s works backward for me. anyone have suggestions what to look for to fix this?
18:22  gernot: qfr, thanks for pointer. I'm not yet familiar with those languages, but it's good to have a reason to start looking into it.
18:22  gkatsev: justinxreese: might be a setting somewhere
18:23  gkatsev: you can also use javascript for that via node.js :P
18:23  gernot: mhi^, that's not good enough. The opening/first quote has to be changed to ``, the closing/second one to ''.
18:24  gkatsev: s/"\(\w*\)"/``\1''/ something like that
18:24  mmpf: hey guys. is there any way to indent with hard tabs
18:24  gkatsev: but not exactly
18:24  mmpf: then have inline tabbing as spaces automatically?
18:25  gkatsev: mixing tabs and spaces?
18:25  fow: mmpf, inline tabbing? as in pressing tab when not at the beginning of a line?
18:25  mmpf: fow: yes
--- Log closed Mon Nov 22 18:31:26 2010
--- Log opened Mon Nov 22 18:31:48 2010
18:31 --- Users 606 nicks [0 ops, 0 halfops, 0 voices, 606 normal]
18:31  qfr: Watch out for missing " though
18:31  qfr: It can't fix those
18:32  gkatsev: I should probably take a look at ruby at some point.
18:32  qfr: And then it will do ''this``
18:32  qfr: I think Python is easier for starters
18:32  qfr: But I switched to Ruby because it provides more funky functional stuff etc
18:32 --- Channel #vim was synced in 69 seconds
18:32  gkatsev: js ftw!
18:34  gkatsev: I like javascript, it's nice and functional and now with node it is even awesomer because you can script stuff and you can use it as a server as well
18:34  gernot: qfr, it does do ''this`` with a very basic example (1 line, 2 pairs of quotes). :/
18:35  qfr: I only use it for web dev stuff
18:35  qfr: gernot oh lol did I mix up the order
18:35  gernot: qfr, fixed it by changing the order.
18:35  qfr: Ok cheers lol
18:35  gernot: qfr, well this is keeper. Thanks again! :)
18:36  gkatsev: gernot: well, there's your first foray into ruby :P
18:36  qfr: No problem lol
18:37  qfr: gkatsev do you actually use JS for general purpose scripting like others use Python etc?
18:37  gkatsev: I personally have not yet, but with node you can.
18:37  qfr: Is there even any library which provides like IO and sockets and SSL stuff etc for JS?
18:37  qfr: I see
18:37  gkatsev: yep
18:38  gkatsev: talked with a guy in #node.js that has a node script running that watches latex files and when they are changed it rebuilds the latex into pdfs
18:38  qfr: Nice
18:39  gkatsev: yeah, node is really cool and have a HUGE amout of addons
18:39  qfr: Even then I don't think I'd use JS because I don't like the {}; stuff (I also hate the end keyword in Ruby btw) and I am unhappy with the way you do OOP in JS with the functions hm
18:39  gkatsev: you don't like prototypal OO? so easy to use
18:40  qfr: It just feels so unstructured altough I know it can do the same and is quite flexible obviously
18:40 --- Remear_ is now known as Remear__
18:41 --- Remear__ is now known as Remear|iMac
18:48  dunpeal: Hi. I have the following setting in my .vimrc:
18:48  dunpeal: augroup text
18:48  dunpeal: Unfortunately, when I have two or more windows open, that causes the function Txtmode() to be triggered every time I re-enter the matching *.txt window. How can I avoid that function re-running?
18:48  dunpeal: err, here's the setting again: augroup text; autocmd Bufenter *.txt call Txtmode(); augroup END
18:51  fow: dunpeal, you mean you want to use BufLoad instead of BufEnter or something?
18:55  dunpeal: fow: maybe... I'm asking you what I want :)
18:56  dunpeal: fow: I basically want this function to run once per buffer.
18:56  dunpeal: when it's created or something
18:56  gkatsev: bufload sounds right
18:58  dunpeal: E216: No such group or event: BufLoad *.txt call Txtmode()
19:01  dunpeal: fow, gkatsev: doesn't look like the bufload event exists?!
19:01  fow: dunpeal, err, BufLoad doesn't exist. my bad. Use BufRead,BufNewFile
19:03  SeanInSeattle: Hey all.  I've posted a question on serverfault.com.  Would someone be able to help me with it?  Its related to color scheme installation issues:  http://serverfault.com/questions/204806/vim-color-scheme-issues
19:08  graywh: SeanInSeattle, it's wrong to :set t_Co=256
19:09  dunpeal: fow: thanks, that works.
19:09  qfr: I have the following text: "abc\ndef". I want to get the second line to the end of the first line. Now, assume that my cursor is at the end of the first line. I a conventional editor I would simply hit del to achieve this - however this does not work in vim. What is the vim way of achieving this?
19:10  qfr: Don't say <right><bs>
19:10  gkatsev: J
19:10  qfr: <esc><shift down><j><shift up>? Oh boy :/
19:11  graywh: qfr, you didn't say you were in insert mode...
19:11  gkatsev: no, just J in normal mode
19:11  qfr: Oh and i to get back
19:11  qfr: Of course I'm in insert mode!
19:11  gkatsev: what do you mean of course?
19:11  gkatsev: you should only be in insert mode when you are INSERTing text
19:11  MarcWeber: qfr: You can use J even on multiple lines
19:12  qfr: Hmm J is nicer though actually, neverminf
19:12  graywh: qfr, isome<Space>text<Esc> is a single command
19:12  qfr: Since it works at any poiunt
19:12  qfr: On that line
19:12  gkatsev: yep
19:12  graywh: and if delete/backspace don't work like you think they should, check :set bs?
19:12  qfr: I already fixed the BS the way I like it
19:13  qfr: But del is still different
19:13  qfr: indent,eol,start for the BS
19:13  qfr: But del is not affected by that option
19:13  graywh: yes it is
19:14  Fandekasp: hi
19:14  graywh: then maybe your delete key sequence isn't being recognized
19:14  qfr: When I hit del at the end of a line it makes a beep and deletes backwards.
19:15  Fandekasp: In the statusline (.vimrc), how can I specify an element to be positionned relative to the right ?
19:15  graywh: Fandekasp, :h 'stl'
19:15  Fandekasp: thx graywh :)
19:16  qfr: Ohhh this was caused by a nasty function mapping, nevermind, it works fine now, cheers
19:16  Fandekasp: graywh this is the doc of statusline ... I am already on it
19:16  qfr: It was doing inoremap <silent> <DEL> <C-o>: call Smart_delete()<CR>
19:16  qfr: How can I get rid of that mapping now?
19:16  qfr: I want the regular del behaviour nopw
19:17  qfr: I got so many files open in vim it would be painful to restart it now
19:17  gkatsev: :mksession
19:17  gkatsev: :source Session.vim
19:17  graywh: :iunmap
19:17  graywh: Fandekasp, did you read it?
19:18  qfr: The iunmap did the trick, thanks
19:18  qfr: I already have F12 bound to reload my config, haha
19:18  qfr: I use it quite frequently
19:19  Fandekasp: yes graywh I read it. I can left or right justify an element related to its neighbours elements, but I can't justify it related to the window
19:21  graywh: then you missed something
19:21  graywh: it's there
19:22  Fandekasp: ok thank you, you're very helpful ...
19:23  SeanInSeattle: graywh:  Sorry for the late response, I got interrupted.  Why is it wrong to set t_Co=256?
--- Log closed Mon Nov 22 19:41:31 2010
--- Log opened Mon Nov 22 19:41:52 2010
19:41 --- Users 620 nicks [0 ops, 0 halfops, 0 voices, 620 normal]
19:42 --- Channel #vim was synced in 67 seconds
19:44  graywh: not every terminal can use 256 colors
19:50  SeanInSeattle: Ah, I see.  It was, however, set to 256 anyway.
19:53  graywh: SeanInSeattle, posted an answer
19:53  graywh: SeanInSeattle, also, read this:
19:53  graywh: vimgor, csapprox
19:53  vimgor: CSApprox is a plugin written by godlygeek to make GUI-only colorschemes Just Work in 88-/256-color terminals. It can be downloaded at http://www.vim.org/scripts/script.php?script_id=2390
19:54  qfr: Hmm why does > increase my indentation by two tabs?
19:54  qfr: Err >>
19:54  graywh: qfr, "tab" can mean different things
19:54  fow: qfr, >> uses 'sw'
19:55  graywh: vim distinguishes those different things with 'tabstop', 'shiftwidth', and 'softtabstop'
19:56  KeeperOfTheSoul: there's a pretty good vimcast on the subject of tabs and spaces http://vimcasts.org/episodes/tabs-and-spaces/
19:59  qfr: Any idea how to get cool \t and \n symbols like that?
19:59  qfr: :set list! doesn't quite cut it
20:01  Raimondi: qfr:  :h 'listchars'
20:03  qfr: Oh no, a typo in the helpfiles!
20:03  qfr: "When omitted, a tab is show as ^I."
20:05  fow: What's the typo?
20:06  fow: oh, shown
20:06  gkatsev: email bram?
20:07  Raimondi: You can be sure there is more than one, just make sure you do what gkatsev suggests :)
20:14  qfr: Damn, I'd like to find some nice Unicode symbols like the ones he used but gvim doesn't support the ones I wanted lol
20:14  graywh: gvim doesn't, or your font doesn't?
20:15  qfr: It depends on how it's rendered
20:15  qfr: Firefox and X-Chat use fall back rendering in other fonts afaik
20:16  qfr: My X-Chat uses Lucida Console, yet ◡ works fine
20:16  qfr: In gvim it doesn't, with the same font
20:17  gkatsev: are you sure you are using the right font?
20:17  qfr: gkatsev well most fonts don't support this stuff, in browsers it's always rendered with fallback then, no"
20:18  qfr: ?
20:18  gkatsev: do you have a font that you know supports the unicode chars?
20:18  qfr: None of those are available in gvim because they are not monospace fonts
20:20  qfr: http://en.wikipedia.org/wiki/%E2%97%A5#Font_coverage
20:21  qfr: I guess that would only work if I used vim in a regular terminal then
20:21  gkatsev: there is dejavu mono
20:21  qfr: Instead of gvim
20:24  qfr: Any idea what the colour group for the list lcs tab symbols is?
20:25  qfr: Trying to alter their colour to something that blends in more with the rest of the stuff
20:25  fow: qfr, it's at the end of :h 'lcs
20:26  mhi^: Hmm, now that I had a look at Vim's Perl API, I don't know what I could write :]
20:26  qfr: Ah thanks
20:49  mdance: how can i expand all folds?
20:50  mhi^: zR
20:53  bosie: mhi^: i thought it was zO ?
20:53  bosie: ah
20:53  bosie: cool
20:53  gkatsev: all in the help :P
20:54  bosie: gkatsev: yea, it has always worked the way it should, never read up on it ;)
20:54  gkatsev: lol
20:54  gkatsev: ok
20:54  gkatsev: idk why, but i dont really use folds in vim
20:54  mhi^: :O
20:54  gkatsev: I probably should read up on it sometime
20:55  gkatsev: especially since ive been getting a good plugin/feature set together for my vimfiles
20:55  bosie: only thing about folds that bugs me is that they don't seem to come automatically
20:55  mhi^: I don't use it for programming either, since I have tags, but I need folding for big configuration files and the like
20:55  gkatsev: like conque
20:55  gkatsev: conque is so awesome
20:55  bosie: mhi^: do you have tags for your entire project?
20:56  bosie: mhi^: i tried to get taglist to work with multiple latex files in my 'project' but that didn't work. at all.
20:59  mhi^: bosie: does that even work? I like that it only shows tags for the current file, otherwise it would be pretty confusing for bigger projects
20:59  bosie: mhi^: i am used to it in Intellij IDEA
21:00  bosie: mhi^: it generates the tags for the file, so why not show it?
21:05  fow: bosie, folds can be created automatically using fdm=syntax or indent or expr. For example, I took this from godlygeek's vimrc to create folds based on the number of initial "s in a comment (""" is one fold level, """" is two, etc.): fde=getline(v\:lnum)=~'^""'?'>'.(matchend(getline(v\:lnum),'""*')-2)\:'='
21:07  bosie: lets have a look at godlygeek's vimrc
21:07  bosie: fow: by automatically you mean during the typing?
21:07  bosie: fow: it works when i open it, just not when i type it
21:08  bosie: newly created content doesn't seem to be folded
21:08  fow: bosie, did you set fdm=expr ?
21:09  bosie: fow:  syntax
21:09  fow: you need fdm=expr fde=<what I pasted earlier>
21:11  bosie: lets try it
21:13  bosie: fow: when i set fde via the command line, set fde? returns only the first part till the ^
21:16  mhi^: bosie: you should read taglist.txt
21:17  fow: bosie, oh, I copied that from a modeline. you don't need to escape : with :set but you do need to escape "
21:17  fow: bosie, fde=getline(v:lnum)=~'^\"\"`?'>'.(matchend(getline(v:lnum),'\"\"*')-2):'='
21:17  bosie: lets try it escaped
21:18  bosie: though to be hoenst, i don't know where this is leading
21:18  bosie: wouldn't you have to do this for every possible thing?
21:19  fow: every possible thing?
21:19  bosie: file types at least
21:20  fow: modelines, autocommands, ftplugins. do it once and forget :)
21:28  bosie: why does 'vis' select the dot after the sentence?
21:29  bosie: vi} doesn't select the }
21:30  fow: That's like asking why viw selects the first and last character :P For words, WORDS, sentences, and paragraphs, the difference between the the inner and not inner is about whitespace
21:31  gkatsev: see :h sentence
21:32  bosie: gkatsev: exactly why i don't expect the . to be selected
21:32  bosie: gkatsev: it ends at a . not a whitespace
21:32  bosie: fow:  whitespace of what?
21:33  fow: whitespace following the object (assuming there is whitespace, of course). compare viw and vaw
21:33  bosie: fow: the help says "A sentence is defined as ending at a '.'"
21:33 --- WebDragon|laptop is now known as WebDragon
21:33  bosie: foo. foo bar.] foo would delete both the . and the ]
21:33  gkatsev: bosie: it says it ends with a . and then is followed by whitespace. so, vis selected up to and including the ., and vas will select the whitespace as well.
21:34  gkatsev: which is how w and W differ as well
21:34  bosie: gkatsev: no it doesn't. it says that any number of closing may appear after the '.'
21:34  fow: I suppose the wording's a little ambiguous, but as you can see based on how it works, it includes the punctuation
21:35  bosie: gkatsev: vas works even less IMO
21:36  bosie: gkatsev: vas would delete everything from the next sentence too
21:36  bosie: which i don't understand why?
21:37  mhi^: than something is broken
21:38  gkatsev: idk, for me vis selects the sentence including the punctuation but not whitespace leaving to next sentence, while vas selects up to and including that whitespace
21:39  bosie: gkatsev: try this sentence "foo bar. foo bar2.] foo1 foo2d nice. foo bar." put the cursor to the b of bar2
21:40  bosie: difference between vis and vas is not just the whitespace
21:41  gkatsev: looks like it to me
21:42  graywh: vas is selecting 2 sentences for me
21:42  graywh: but (/) navigation isn't fooled
21:43  gkatsev: selecting only one sentence for me
21:43  graywh: 7.3.35
21:43  bosie: gkatsev: two for me
21:43  gkatsev: weird
21:45  rolnxyz: How can I go to the next line that has more than 80 columns?
22:28 --- Araxia_ is now known as Araxia
22:37 --- ozmart_ is now known as ozmart
22:37  lamdk: is there a key or plugin to jump back to the last tab you were on?  like if i was on tab 1, and type 4gt,  i dont want to type 1gt again to jump back to the previous tab
22:38 --- second is now known as sec^nd
22:38  gkatsev: you can go to the last buffer with <C-^>
22:39  jamessan: vimgor: buffers
22:39  vimgor: For a quick intro to vim's windows, buffers, and tabs, see http://img200.imageshack.us/img200/9031/windowsv.png and http://vim.pastey.net/115548 See also ':help tab-page-intro' and ':help windows-intro'
22:41  lamdk: i know about ctrl-6, i wanted to write a function or something to do it with tabs -_-
22:41  lamdk: dunno if its possible
22:41  gkatsev: should be
22:43  mhi^: jamessan: did you see the 'vas' bug that was discussed earlier?
22:45 --- isaacs1 is now known as isaacs
22:45  jamessan: interesting
22:46  mhi^: Yup
22:46  jamessan: all because of the ]
22:46 --- WebDragon|laptop is now known as WebDragon
22:46  jamessan: vis works fine
22:46  mhi^: or ) or }
22:47  mhi^: happens only when a . or ! etc. is followed by some kind of paren immediately
22:48  mhi^: "Hello, world. } This works." works as intended
22:48  mhi^: and so does "Hello, world.}  .  This works, too."
22:49  jamessan: that's actually documented: Any number of closing ')', ']', '"' anad ''' characters may appear after the '.', '!' or '?' before the spaces, tabs or end of line.
22:50  mhi^: Yea, so it should highlight something like "(This is a nice sentence.) But this got highlighted, too."
22:51  strull: for me it doesn't matter if its a paran. e.G Hello, world.This fails.
22:51  jamessan: strull: no, that's expected behavior
22:51  jamessan: you have no whitespace after the .
22:52  jamessan: there has to be whitespace after the punctuation, but there can be ), ], etc. between the . and the whitespace
22:52  strull: well, ok. Just don't see the difference between } and any other character
22:52  jamessan: so the bug is that the as text-object isn't handling those extra characters properly
22:53  jamessan: strull: "Foo bar.} Baz qux."  put the cursor on bar and vis only selects the first sentence but vas selects both
22:54  strull: both vis and vas select both sentences for me
22:55  jamessan: strull: oh, change the } to ]
22:55  strull: yes, I see it now
22:56  graywh: mhi^ incorrectly listed }
22:56  mhi^: Hmm, I thought I tested it.. so, ) and } seem to work fine. I guess somone just forgot the ']' in some if condition or so :-P
22:58  jamessan: ) and ] behave the same
22:58  jamessan: in that vis works and vas doesn't.  } works in that it makes the preceeding . not signify the end of a sentence for either vis or vas
23:00 * mhi^ nods
23:00  lamdk: is there a key to paste the value of some setting into the buffer?  like the function name in 'set indentexpr?'
23:00  jamessan: lamdk: :help expr-option
23:00  MarcWeber: lamdk: <c-r>=vim-expr
23:02  lamdk: thx thx
23:03  s34n: How can I see hat is controlling the vim setting for a particular file extension?
23:03  s34n: s/hat/what/
23:04  lamdk: isnt it :verbose set <setting>
23:04  Balli: Hi, how to find the history commands while im in search mode, any help plz?
23:04  jamessan: lamdk: don't forget the question mark
23:05  strull: Balli: pardon?
23:07  Balli: Im really annoyed typing a certain regex again and again, so i jus want to know if there is history while im in search mode?
23:07  elik: Balli: try up/arrow
23:07  strull: Balli: like /<up>  ?
23:07  gammy: guys, I've been trying to solve this for bloody hours, i BEG of you to help me out: I want to enable some bloody features such as "+clipboard" and "+xterm_clipboard" - HOW is this done? I', building with --with-features=huge and have attempted to
23:07  gammy: enable other options by "--enable-<option>" to no avail whatsoever. I've goodled everywhere; I can't find any material!
23:08  jamessan: gammy: you need X support.  --with-x should do it
23:08  Balli: Thanks elik n strull
23:08  gammy: jamessan: I'm doing that too
23:08  gammy: no change
23:09  lamdk: gammy: you prolly dont have the X -devel package installed maybe
23:09  elik: gammy: what distro are you on?
23:09  gammy: lamdk: wait a minute, I just found something
23:09  lamdk: after you do ./configure,  there should be a line that says 'with X?' or something, if it says no then you gotta install some package
23:09  gammy: this dodgy build file has TWO configure lines
23:09  gammy: I only included it in one. Perhaps the other is for gvim
23:10 * gammy slaps forehead
23:10  gammy: elik: slackware
23:10  gammy: yeah I think this is it. I didn't see the second configure line
23:10  gammy: god
23:13  gammy: yep, that was it
23:13  gammy: thank f* for that
23:13  gammy: jesus
23:14  gammy: thanks guys. Not that you provided me with new info, but for triggering my brain to notice this.
23:14 * gammy bows
23:14  s34n: I have a filetype plugin (I think) that I would like to remove or deactivate, but I don't know what it is.
23:14  Balli: Hi im a newbie to vim n regex. I jus want to know how to search a 3 digit word? I tried tis regex \<[0-9]{2}\> in search mode but it fails.
23:15  s34n: How can I find out what things are loaded based on filetype?
23:15  jamessan: Balli: \<\d\{3}\>
23:15  Balli: btw is this the right channel to get such basic helps?
23:15  s34n: it seems to be a system-wide setting, not just my user
23:15  jamessan: Balli: you need to escape the leading {
23:15  jamessan: s34n: if you know the specific option that got changed, ":verbose set option?" will tell you what script changed it
23:16  Balli: Jamessan: Yup, it works. Thanks
23:17  Balli: Jamessan: Strull: Am i allowed to ask such lame questions here :D or is there is any vim irc channels for beginners like me?
23:18  strull: Balli: you can ask any vim-related question here
23:18  Balli: ok thanks
23:18  MarcWeber: Balli: of coures are you allowed to ask stupid questions. You should try to ask them once only though :) You can later give back by helping others *g*
23:18  strull: every advanced user started as a newbee once
23:19  tpope: Maahes: sl?
23:19  Balli: MarcWeber: Sure. Hopin i wud help someone one day :)
23:32  mhi^: jamessan: do you have any idea where this text-object stuff gets handled in the Vim sources? Can't find it in eval.c/edit.c :)
--- Log closed Mon Nov 22 23:41:24 2010
--- Log opened Mon Nov 22 23:41:49 2010
23:41 --- Users 597 nicks [0 ops, 0 halfops, 0 voices, 597 normal]
23:41  strull: hakunin: try ctrl-6
23:42  jamessan: hakunin: you're just viewing another buffer in the current window and strull's shortcut is the typical way to toggle between the two most recently viewed buffers
23:42  jamessan: vimgor: buffers
23:42  vimgor: For a quick intro to vim's windows, buffers, and tabs, see http://img200.imageshack.us/img200/9031/windowsv.png and http://vim.pastey.net/115548 See also ':help tab-page-intro' and ':help windows-intro'
23:42  hakunin: jamessan: ahh, window, not buffer. mixed it up
23:42 --- Channel #vim was synced in 71 seconds
23:43  mhi^: jamessan: Ah, thank you!
23:43  hakunin: strull: jamessan: any alternative to ctrl+6?
23:43  strull: :bu #
23:43  hakunin: (it's globally mapped on my system)
23:44  hakunin: strull: cool, reading :help bu
23:44  hakunin: strull: jamessan: thanks for clarifications
23:47  ReinH: Hmm, why would my eruby files not be indenting properly? /cc tpope
23:47  ReinH: I'm on the latest HEAD of the vim-ruby files
23:49 --- fedesilva_ is now known as fedesilva
23:57 --- fedesilva_ is now known as fedesilva
23:59  EspadaV8_W: morning vimers
--- Log closed Tue Nov 23 00:00:02 2010
