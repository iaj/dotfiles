--- Log opened Thu Nov 11 00:00:39 2010
00:02  melusinechan: estragib: i use the plugin NerdCommenter
00:03  melusinechan: estragib: i try to comment a line, and to do i need to tap <leader>cc on my keyboard
00:03  mgedmin: when will I learn that 'd' doesn't toggle directory names in bufexplorer?
00:03  melusinechan: estragib: but i don't figure out what leader key is O o
00:03  mgedmin: melusinechan, \ by default
00:03  mgedmin: if you don't know, this means you haven't changed it
00:03  melusinechan: mgedmin: is it the leader key ?
00:03  mgedmin: (unless you copied someone's vimrc)
00:03  melusinechan: mgedmin: nope
00:03  mgedmin: yes, <leader> is \ by default
00:04  melusinechan: mgedmin: oh thank you ^^
00:04  mgedmin: you can change it to any key you like, if you find \ difficult to find
00:04  melusinechan: mgedmin: to me it's a backslash ^^
00:04  melusinechan: mgedmin: nope very easy on my macbook ^^
00:04  melusinechan: mgedmin: but is ND to nerdtree ^^
00:04  melusinechan: :ND
00:05  melusinechan: mgedmin: you right i'm going to change it, on mac leader = alt + maj + :  ...
00:09  mgedmin: you seem to be very exuberant :)
00:10  melusinechan: mgedmin: sorry just come out of 4 days of full dev, i'm kind messy in my head right now ^^
00:11  mgedmin: heh
00:11  mgedmin: it's 1 am, I'm trying to wrap up my work day (which, granted, started at about 6 pm) myself
00:12  melusinechan: mgedmin: i don't want to compare ^^, (that's probably because you drink cofee, and i not ^^)
00:12  melusinechan: s/not/don't
00:13  melusinechan: i love this new plugin by the way
00:14 * mgedmin is a tea drinker
00:14  melusinechan: everyone: Thank thank you vim community !
00:14  melusinechan: mgedmin: that does count ^^
00:14  melusinechan: mgedmin: i use chocolate ^^
00:18  dsirijus: um, i cannot seem to input foreign chars through vim via putty
00:18  dsirijus: i can do in tty
00:18  lamdk: hmm i have a XML file where all its elements are on one line,  is there an editor plugin or something that will format it nice?
00:19  _rane: good question
00:20  jamessan: :s/>/&\r/g | normal! gg=G
00:21  lamdk: lol whoa pretty cool
00:21  sjl: What's the recommended testing framework to use if I want to add some unit tests to my Vim plugin?  http://code.google.com/p/lh-vim/wiki/UT ?
00:21  _rane: that didn't quite work, though...
00:22  lamdk: yeah it dosent set indentation, but that one regex works pretty well -_-
00:22  _rane: http://uucode.com/blog/2005/06/15/indenting-xml-in-vim/
00:22  jamessan: that's what the gg=G should do
00:23  mgedmin: dsirijus, charset issue most likely
00:23  mgedmin: in vim check :echo &tenc
00:23  mgedmin: what is it?
00:23  mgedmin: then in putty settings check the terminal encoding
00:23  mgedmin: what is it?
00:23  _rane: lamdk: tested that thing on my link, works pretty well
00:23  mgedmin: make sure they're the same
00:23  mgedmin: most likely all you need to do is tell putty to use utf-8
00:23  dsirijus: mgedmin: i'm installing vim-full vim-python and build-essential
00:24  dsirijus: yeah, i set the translation utf-8
00:24  mgedmin: did I ask what you were installing?
00:24  dsirijus: no, just i cannot access the term right now
00:24  jamessan: dsirijus: you don't need both vim-full and vim-python and build-essential will have nothing to do with how Vim behaves
00:25 * mgedmin just cannot understand why people go ask for help at a time when they have no way of applying the advice they receive
00:25  dsirijus: mgedmin, well i tried this after my question and before your answer
00:25  dsirijus: be cool, man :)
00:25  dsirijus: i'll try your suggestions, just a sec
00:25  lamdk: _rane: whoaa that vimtip owns
00:26  lamdk: xmllint ftw
00:26  mgedmin: ah, so the "translation utf-8" was a putty setting, not vim setting?
00:26  dsirijus: yeag
00:26  dsirijus: h
00:26  mgedmin: actually, you can run vim -- vim.tiny, to be precise -- while vim-full is being installed
00:27  dsirijus: yeah, i don't how to push whatever's running to background
00:27  mgedmin: or you could see what 'locale charmap' prints when you run it inside a putty session
00:27  mgedmin: why not open a new putty window?
00:27  dsirijus: oh, a single user can be logged from multiple terminals? didn't knew that
00:27  mgedmin: this is not Windows Home Edition, there are no limits to how many times a user may be connected ;-)
00:28  dsirijus: :echo &tenc doesn't output a single thing
00:28  _rane: lamdk: yep
00:29  jamessan: dsirijus: then it's using whatever ":echo &enc" says
00:30  dsirijus: &enc is latin-1 and charmap is ANSI_X3.4-1968
00:30  dsirijus: everywhere i was able to, i've put UTF-8
00:30  mgedmin: woot omg
00:30  mgedmin: what OS is this?
00:30  dsirijus: debian
00:31  dsirijus: 5.0
00:31  mgedmin: what does 'locale' print?
00:31  dsirijus: vanilla install, several minutes ago
00:31  mgedmin: LC_CTYPE is the only important one
00:31  mgedmin: well, that and LC_ALL, I suppose, since LC_ALL overrides LC_CTYPE
00:31  dsirijus: POSIX
00:31  dsirijus: LANG and LC_ALL are empty
00:31  jamessan: then you'll probably need to install the locales package and then run "dpkg-reconfigure locales" (as root) to select which locales are available
00:31  dsirijus: done that
00:32  dsirijus: selected all en_US and all hr_HR
00:33  jamessan: you can specify a default value for LANG in /etc/default/locale
00:33  dsirijus: there's LANG=hr_HR.UTF-8 in my .bashrc that enabed me to have our freaky chars in tty
00:34  jamessan: that works too
00:34  dsirijus: jamessan: oh, i shouldn't put that in bashrc?
00:34  dsirijus: oh
00:34  dsirijus: ok then
00:34  jamessan: it just depends on whether you want the default system-wide or for your user
00:34  dsirijus: there's only me, no one cares
00:35  dsirijus: still freaky things in vim
00:35  jamessan: dsirijus: ok. then you can either re-login to your system or "export LANG=hr_HR.UTF-8" in your current shell so Vim knows about it
00:36  dsirijus: i could set it up in, where you said, /etc/default/locale ?
00:37  jamessan: yup
00:37  dsirijus: jamessan: will this bring up all the freaky translations in my language where available?
00:37  dsirijus: i hate those
00:38  mgedmin: if you set LC_MESSAGES, yes
00:38  mgedmin: if you only set LC_CTYPE, then no
00:38  mgedmin: if you set LANG, yes, again
00:38  dsirijus: mgedmin: where can i unset LC_MESSAGES?
00:38  mgedmin: just don't set it, that's all
00:38  mgedmin: and don't set LANG, set LC_CTYPE
00:38  dsirijus: yeah, but i set lang
00:38  dsirijus: ok
00:39  jamessan: yeah, what you set all depends on what you want affected
00:39  mgedmin: the .bashrc thing -- by default it's used for non-login sessions only, or does debian's ~/.bash_profile source ~/.bashrc by default?
00:39  dsirijus: there's no .bash_profile
00:39  dsirijus: there's .profile that gets overwritten by those
00:39  dsirijus: and .bashrc
00:39  dsirijus: on my sys
00:40  jamessan: there's a .profile which looks for .bashrc and sources it
00:40  mgedmin: maybe ~/.profile sources ~/.bashrc, if it sees that the shell is bash
00:40  jamessan: right
00:40  mgedmin: anyway, if you're going the /etc/default way, .bashrc is irrelevant
00:40  lamdk: is there a way to insert a tab even when i have expandtab on?
00:40  mgedmin: I was just wondering why 'locale' said POSIX if you had it set to something else in your bashrc
00:40  jamessan: lamdk: <C-v><Tab>
00:40  mgedmin: lamdk, ctrl-v <tab>
00:41  dsirijus: so just LC_TYPE if the only thing i'm interested in correct input/output of chars only?
00:41  jamessan: LC_CTYPE
00:41  dsirijus: yeah, yeah :)
00:41  dsirijus: oh, how convenient, it doesn't work
00:41  jamessan: what doesn't work?
00:42  dsirijus: i get bell when i try to input those freaky chars in term and same thing in vim now
00:42  sjl: Is there a way to point vim to a different ~/.vim directory?
00:42  mgedmin: have you logged out and logged back in?
00:42  jamessan: dsirijus: how are you trying to input them?
00:42  dsirijus: rebooted server
00:42  dsirijus: with just LC_TYPE=hr_HR.UTF-8 in locales
00:42  mgedmin: ok, what does 'locale' print for LC_CTYPE?
00:42  jamessan: this isn't windows. you don't have to reboot
00:42  dsirijus: :D
00:43  dsirijus: um yeah... i wrote LC_TYPE :D :D :D
00:44  mgedmin: it stands for "LoCale_Character TYPE" if that helps you remember
00:45  dsirijus: yeah, now there's # File generated by update-locale\nLC_CTYPE=hr_HR.UTF-8 there
00:45  dsirijus: and it doesn't work by the definition of doesn't work i provided i last time :)
00:45  jamessan: dsirijus: how are you trying to input them?
00:45  dsirijus: um, by typing?
00:46  jamessan: by typing what?
00:46  dsirijus: them
00:46  dsirijus: :D
00:46  dsirijus: hm...
00:46  jamessan: if you do "vim -u NONE -N" does it work?
00:46  dsirijus: no, i'm just talking about term now
00:46  dsirijus: vim's still broken
00:47  dsirijus: just a sec there, locale still gets me LC_CTYPE="POSIX"
00:47  dsirijus: even though i edited /etc/default/locale
00:48  mgedmin: while a reboot is not necessary, logging out and back it may be necessary
00:48  mgedmin: this is unix, changing environment of running programs (including shell) can't be done
00:48  mgedmin: from outside those programs
00:48  zarac: Anyone around using eclim?
00:48  dsirijus: rebooted, logged out, update-locale
00:48  mgedmin: and?  locale charmap should be 'UTF-8', locale should print LC_CTYPE=hr_HR.UTF-8
00:49  mgedmin: if not, your locale support is incomplete
00:49  mgedmin: you can run locale -a to see if hr_HR.utf8 is supported or not
00:49  dsirijus: it's hr_HR.utf8 in output of that command
00:50  jamessan: which doesn't matter
00:50  dsirijus: seems so
00:52  dsirijus: setting LANG in /etc/default/locale doesn't help either
00:52  jamessan: it'll only help if your shell (or pam) is setup to source it
00:53  dsirijus: jamessan: how to do that?
00:54  jamessan: it should happen automatically, but this has gone outside of #vim topics and into #debian
00:54  dsirijus: yeah, i'm there
00:54  dsirijus: BUT i'll be back
00:54  dsirijus: :)
00:58  dsirijus: a known bug, it seems http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=330500
00:59  dsirijus: and #debian has gone sour since last time i was there... they seem to talk only about window managers now :D
01:00  jeffszusz: is there a way to target a line of text as a text-object? i can find how to target an HTML tag block but i just want to target a single line of text at a time
01:00  jeffszusz: (for the change surroundings functionality, not just to delete it etc)
01:02  mgedmin: dsirijus, back to .bashrc it seems
01:02  mgedmin: export LC_CTYPE=...
01:03  mgedmin: aieee!
01:03  dsirijus: hmmm, whaaat?
01:03  dsirijus: now vim works too
01:03  mgedmin: closing CommandT with <C-W>q leaves my cursor invisible
01:04  mgedmin: :set guicursor& doesn't help
01:04  dsirijus: setting LANG worked for term but not vim, setting LC_CTYPE worked for both
01:04  dsirijus: mgedmin, jamessan, you guys rock, thanks
01:04  dsirijus: you don't rock as much as MarcWeber tho
01:04  dsirijus: :P
01:05  dsirijus: now...
01:05  dsirijus: 256 color support
01:05  dsirijus: :)
01:05  dsirijus: set t_Co=256? that should be it=?
01:05  dsirijus: bah, will google that
01:05  jamessan: no, don't set that manually
01:05  dsirijus: oh
01:05  dsirijus: then how?
01:05  jamessan: it's your terminal's job to tell vim how many colors it supports
01:06  dsirijus: term's set to xterm-256color, that enough?
01:06  jamessan: if you have the ncurses-term package installed, yes
01:06  jamessan: and you're using xterm
01:07  dsirijus: it's through putty, does that ok?
01:07  dsirijus: *is
01:07  James147: is there anyway to add a new line without going into insert mode?
01:07  dsirijus: p?
01:08  dsirijus: it's either from the buffer or you type it man
01:08  dsirijus: :)
01:08  jamessan: dsirijus: then use putty-256color
01:09  dsirijus: jamessan: can i check is there sucha term somewhere?
01:10  jamessan: dsirijus: tput -Tputty-256color colors
01:10  jamessan: if that doesn't error, the system knows about that terminal
01:10  dsirijus: 256 :)
01:10  dsirijus: you guys soooo rock
01:10  mgedmin: I'm removing 50% ♥ points from command-t for https://wincent.com/issues/1733
01:15  spiiph: putty-256color lacks some features that xterm-256color has, even though the putty itself seems to support them. This can be seen if you set the colour of screen's infoline to a colour other than the 8 basic ones. (I think that's what does it.)
01:16  spiiph: Or it might be a feature of changing the RGB values of the 8 basic colours.
01:22  dsirijus: well, that popular 256color perl script doesn't work when putty-256color runs
01:22  dsirijus: only with xterm-256color
01:22  dsirijus: oh yeah, do you guys usually put .vim folder in home or somewhere else?
01:22  spiiph: dsirijus, probably the same thing.
01:22  pippijn: hi all
01:22  pippijn: how can I remove the newline at the end of a file in vim?
01:22  dsirijus: where's that desert256 now? :)
01:22  pippijn: it added one, but I don't want it
01:22  pippijn: because I'm comparing that file to the output of a program which doesn't output a newline at the end
01:22  VirginiaSteaks: hi folks, when yanking one line and pasting it, after pasting it, the line isn't in the buffer anymore. how can i paste the same line >1 times?
01:24  spiiph: pippijn, it didn't add a newline, it added an EOL at the end of the last line. That's what all text files should look like.
01:25  pippijn: yes
01:25  pippijn: how can I prevent that?
01:25  pippijn: or how can I remove it?
01:25  spiiph: You shouldn't.
01:25  spiiph: You should fix the program that does the output instead.
01:25  pippijn: it's not my program
01:26  spiiph: Then tell its author to fix it. What's the problem anyway, if one EOL differs?
01:26  pippijn: diff returns EXIT_FAILURE
01:28  spiiph: OK, but why change the file with Vim in the first place?
01:28  pippijn: I wanted to update it to reflect some changes in the program's output
01:28  spiiph: Alright. Well, there is one workaround, and that is :set binary noeol
01:29  spiiph: :h 'binary, :h 'eol
01:29  pippijn: thanks
01:29  homekevin: Surely this is a FAQ
01:29  spiiph: ...but really, make something about that output. Vim won't be the only thing that fails.
01:29  pippijn: well
01:29  pippijn: vim didn't fail
01:29  pippijn: you just gave me the solution
01:29  homekevin: Vim fails at nothing!
01:30  spiiph: pippijn, it's still a bad solution.
01:30  homekevin: Vim walks my dog and makes me grilled cheeses sandwiches!
01:30  spiiph: homekevin, well, there is help.
01:30  spiiph: There is some FAQ available online as well.
01:30  pippijn: the program can't be fixed, many programs rely on its behaviour being exactly this
01:31  spiiph: :/
01:43  hornairs: is there a way to undo a cursor position move?
01:43  hornairs: or jump back to the previous position?
01:43  spiiph: Try <C-o>
01:43  hornairs: sweet thanks
01:44  isaacs: Hey, is there a way to open a shell in a split window?
01:44  spiiph: :h shell-window
01:45  isaacs: nice
01:45  sjl: isaacs: Check out http://code.google.com/p/conque/
01:45  spiiph: vimgor, conque
01:45  vimgor: Conque is a Vim plugin allowing users to execute and interact with programs, typically a shell such as bash, inside a buffer window. - http://code.google.com/p/conque/
01:46  spiiph: Ah, good. There was such an entry already.
01:49  isaacs: conqueterm is trippy
01:53  isaacs: hm... maybe i should dust off tmux...
02:06  frogonwheels: isaacs: that is the preferred method :)
02:06  isaacs: frogonwheels: the issue there is that i really wanna have like 3 files open, and one little corner with a shell.
02:07  isaacs: frogonwheels: and vim windows are nicer than tmux windows to navigate around
02:15  fruight: spiiph: is there a command that cycles in the opposite direction as <C-o> ?
02:16  spiiph: <C-i> or <Tab>
02:16  fruight: spiiph: nice, thx
02:16 --- MikhX_ is now known as MikhX
02:19  jeffszusz: i can't figure out why when i type </ in my html
02:19  jeffszusz: it doesn't finish the closing tag like it did 20 minutes ago
02:19  jeffszusz: *grumble*
02:30  Bilz: hello. I'm new to vim. I installed the cvim plugin which works fine, and i was trying to set up the autoidentation. however i've told that I should put the commands :set cindent etc in my c.vim file. but where abouts do i put it? i tried at the end it didnt work. when i put it in a file called .vimrc it works fine
02:31  spiiph: You shouldn't do that.
02:31  spiiph: You should use :filetype plugin indent on
02:31  Bilz: http://stackoverflow.com/questions/97694/auto-indent-spaces-with-c-in-vim is where i took it from
02:31  Bilz: filetype being cc? plugin being cvim?
02:32  spiiph: Yes, that's wrong.
02:32  Bilz: okay
02:32  Bilz: so I should put :cc cvim indent on in my .vimrc file?
02:32  spiiph: ?
02:33  spiiph: You should put 'filetype plugin indent on' in your .vimrc
02:34  spiiph: ($VIMRUNTIME/ftplugin/c.vim already sets cindent)
02:36  Bilz: mmm okay
02:36  Bilz: but the cindent is too big
02:36  Bilz: i want to use :set shiftwidth=2
02:37  spiiph: For the record, neither google nor StackOverflow aren't particularly good at answering questions about Vim
02:37  Bilz: fair enough, its generally my first place i go to solve a problem (google lead me to stackoverflow
02:37  Jerub: hehehe stackoverflow.
02:38  spiiph: Bilz, you can either set that using an :autocmd or put such settings in ~/.vim/after/filetype/c.vim
02:38  spiiph: StackOverflow is a good place for questions that don't have extremely good and focused user forums, which Vim does.
02:38  Bilz: mmm
02:39  Bilz: should i already have a after directory
02:39  Bilz: as that doesnt exist
02:39  spiiph: Nope
02:39  spiiph: You'll have to create those.
02:39  spiiph: I just set shiftwidth for all files to 2 as a default
02:39  Bilz: okay, and whats an :autocmd for future
02:40  spiiph: :h :autocmd
02:40  spiiph: It'll allow you to do stuff on events
02:40  Bilz: how am I supposed to put this commands in?
02:40  Bilz: the colon? n stuff
02:40  Bilz: i know these are all very daft questions
02:41  Bilz: but coming from using editors already set up for me i generally dont need to d othis
02:42  Bilz: (btw, that didn't work, putting the command in that directory i just made
02:47  Bilz: ugh how do i get into command mode
02:47  isaacs: Bilz: escape
02:48  Bilz: thanks
02:52  ormaaj: vim has a forum?
02:54  spiiph: ormaaj, several. There's this one, there's the vim_use/vim_dev mailing lists, and there's the wiki
02:55  spiiph: Bilz, if you don't know how to navigate between Vim's different modes, you should really run vimtutor and learn more about the editor before you start making rather advanced changes to your setup
02:56  huseby: A
02:56 * ormaaj checks out user list
02:57 --- estragib_ is now known as estragib
03:05  strull: new patchlevel is 7.3.55
--- Log closed Thu Nov 11 03:21:38 2010
--- Log opened Thu Nov 11 03:27:02 2010
03:27 --- Users 552 nicks [0 ops, 0 halfops, 0 voices, 552 normal]
03:28 --- Channel #vim was synced in 107 seconds
04:06  alecstory: real quick question: I hit # by accident and it highlighted all the instances of whatever was under the cursor at the time.  How do I un-highlight them?
04:07  tmr: vimgor, nohls
04:07  vimgor: See nohl.
04:07  tmr: vimgor, nohl
04:07  vimgor: :nohl will disable current search highlighting until the next search is performed. A common map to avoid typing :nohl is ':nnoremap <silent> <C-l> :nohl<CR><C-l>'. See also, :help 'incsearch' and :help 'hlsearch'
04:07  alecstory: tmr: thanks!
04:18  godlygeek: alecstory: and, it didn't just highlight them - it searched backwards for the word under the cursor.  see :help #
04:18  godlygeek: it's a really useful motion...
04:25  alecstory: godlygeek: I know what it does, but I didn't want to press it at the time...
04:50  unkanon: when I do /\v to start searching very-magically, how can I have it highlight all the matches instead of the first one, as I type?
04:51  unkanon: I already have hlsearch set
04:52  Rakko: hi
04:52  Raimondi: Hello, Rakko
05:09  frogonwheels: unkanon: sorry - no can do. just the first one
05:09  unkanon: frogonwheels: you sure?
05:11  frogonwheels: unkanon: yeah - not unless it's magically appeared in 7.3 :)   hmm..
05:12  godlygeek: nope, i would have seen the patch on the ML  :-p
05:16  unkanon: is it impossible to the point that no plugin could be written to do it?
05:16  frogonwheels: yeah - you could do this:   :cmap <m-a> <-cr>=setreg('/',getcmdline())<CR>BS>
05:16  frogonwheels: - you could do this:   :cmap <m-a> <c-r>=setreg('/',getcmdline())<CR>BS>
05:16  frogonwheels: then pressing alt+a  would trigger them to show.
05:16  frogonwheels: arg.. that's a <BS> at the end
05:17  frogonwheels: unkanon: ^^
05:17  unkanon: frogonwheels: would trigger them to show while i'm at the console typing the regex?
05:17  frogonwheels: exactly
05:18  frogonwheels: unkanon: you could probably do something more complex with addmatch()  but best within a function
05:18  unkanon: frogonwheels: I will try that, but i gotta say it's pretty awesome that we went from "no can do" to "here's how to do it"  :D
05:18  frogonwheels: well doing it 'as-you-type'  isn't as easy :)
05:18  unkanon: in a few lines
05:18  unkanon: oh i see
05:19  frogonwheels: but this will be a good second
05:19  frogonwheels: it would be a 'show me what I've got now'  button
05:20  unkanon: frogonwheels: newb question: I type that inside vim, of course, but if I wanted it in my vimrc file then do i start it as cnoremap <m-a.... etc?
05:20  frogonwheels: unkanon: exactly .. I guess you can use cnoremap  just to be safe.
05:21  frogonwheels: unkanon:   goo  thing is that : is ignored in vimrc
05:21  frogonwheels: (at the start)
05:21  unkanon: oh ok
05:23  godlygeek: you could do it without the <BS> by doing   <C-r>=setreg('/', getcmdline())?'':''<CR>
05:23  godlygeek: not sure if it would ever make a difference, though... might prevent scrolling when you're near EOL, but maybe not...
05:24  unkanon: so it's
05:24  godlygeek: definitely faster, but most terminal emulators can handle two bytes of input pretty quickly, haha
05:24  unkanon: :cnoremap <m-a> <c-r>=setreg('/',getcmdline())<CR><BS>
05:24  unkanon: or
05:24  unkanon: :cnoremap <m-a> <C-r>=setreg('/', getcmdline())?'':''<CR>
05:24  godlygeek: yep, either of those should do the trick.
05:25  unkanon: lemme try now
05:25  frogonwheels: godlygeek: of course -
05:27  unkanon: i'm having trouble pressing Alt in this macbook
05:27  unkanon: it writes å
05:29  unkanon: yeah I can't type alt-a for the life of me
05:29  godlygeek: are you trying to use the right alt key or left?
05:29  unkanon: left
05:30  unkanon: also, i think it's not taking it because when I do :unmap <M-a> it says "no such mapping"
05:30  frogonwheels: unkanon: did you :so your vimrc, or restart?
05:30  godlygeek: hm.  weird.  try <F1> instead, perhaps?  or <C-L> maybe...
05:31  unkanon: I'm typing :cnoremap <m-a> <C-r>=setreg('/', getcmdline())?'':''<CR>  in vim
05:31  unkanon: I don't know what :so does
05:31  unkanon: I guess it sources .vimrc
05:31  unkanon: but i didn't edit my vimrc
05:32  unkanon: godlygeek: hehe right now my C-L does :nohl and then redraws :)
05:32  unkanon: lemm try f1
05:32  godlygeek: in normal mode, i'd imagine.
05:32  godlygeek: in command-line mode, you can have it do something completely different.
05:33  unkanon: oh i need it to work in command line mode
05:33  unkanon: that's why i'm doing cnoremap
05:33  godlygeek: i mean - you can have <C-L> :nnoremap'ed to :nohl<CR><C-L> but :cnoremap'ed to this search hilight hack
05:35  unkanon: oh sorry, yes I get it now
05:35  unkanon: i'll try that because f1 didn't work
05:35  unkanon: it invokes some kind of help file from macvim or something
05:36  godlygeek: you are pressing this halfway through typing in a /search, right?  not in normal mode?
05:36  unkanon: yay it works fine
05:36  godlygeek: cause <F1> is supposed to bring up :help in normal mode.
05:36  unkanon: I'll keep it on C-L :)
05:38  Rakko: I have C-L currently set to "move one word left"
05:38  unkanon: frogonwheels: godlygeek:  thanks, guys!
05:38  Rakko: oh wait... "move one word right"
05:38  unkanon: Rakko: hmm I'm not ready yet to start modifying the basic movement keys
05:39  godlygeek: i don't recommend ever modifying basic movement keys, frankly...
05:39  Rakko: I didn't modify a basic movement key
05:39  godlygeek: Rakko: nah - but i use <C-Right> for that, heh
05:40  Rakko: I use that too
05:40  Rakko: whichever I feel like
05:40  Rakko: but I might get rid of C-HJKL
05:41  godlygeek: <C-h> is risky to remap, lest you wind up in terminal vim on a non-linux unix unable to backspace...
05:41  godlygeek: and <C-j> is impossible to remap in terminal vim, essentially
05:41  Rakko: yeah, that's one of the problems that's leading me to reconsider
05:41  Rakko: C-J? not at all
05:42  godlygeek: yeah - <C-j> == <CR>
05:42  Rakko: no, that's C-M
05:42  Rakko: at least in every terminal I've used
05:42  godlygeek: er, hm.  yeah, you're right.
05:43  godlygeek: <C-j> is linefeed, <C-m> is carriage return...
05:43  godlygeek: so <CR> sends a ^M character, which results in a ^J being written into the text file.  >_>
05:44  Rakko: on unix
05:44  godlygeek: yeah - all of that is on unix.
05:45  Rakko: and to make things more confusing, vim internally stores CR as ^@
05:45  godlygeek: and ^@ as ^J (not ^M)
05:45  Rakko: so weird
05:46  godlygeek: haha, so yeah - <C-j> should be fine to remap.  :)
05:46  godlygeek: -but- ... if you don't remap it, it will behave the same as <CR> by default  :)
05:47  unkanon: I would never remap c-j and c-h, I use those instead of enter and bs
05:47  unkanon: f-j is LF then?
05:48  unkanon: hmm i'll look that up to find out which one i should be using
05:48  godlygeek: <C-j> is, yeah
05:49  unkanon: which one should i be using on my mac and then on my ubuntu? 'cause linux uses LF, windows CRLF and mac CR, isn't that right?
05:50  Rakko: it doesn't matter
05:50  unkanon: yeah i got that right (just checked)
05:50  unkanon: why?
05:51  Rakko: only the actual file format (:set ff) matters
05:51  Rakko: vim converts it to that
05:51  unkanon: Rakko: awesome so i'll just pick one and use across platforms
05:52  Rakko: oh, and mac uses LF now
05:52  unkanon: Rakko: where did you read that (or where can I read about it?)
05:53  Rakko: which part?
05:53  unkanon: oh found it already. mac only used cr up until mac os 9
05:54  unkanon: i believe this is one thing that windows got right. a new line really should be crlf. even unix knows that (wikipedia says it uses crlf for tty raw mode)
05:54  unkanon: for output
05:55  Rakko: I've thought about that some... it does seem sort of reasonable to use cr lf, since they were originally codes for separate functions
05:55  Rakko: but they almost always get used together, so you save a byte per line
05:57  unkanon: they get used together because their functions are not defined separately in computers
05:57  unkanon: for instance
05:57  unkanon: blabla<CR>WWWWWW should write WWWW over blabla on the same line
05:57  Rakko: it does in terminals
05:57  unkanon: and 123<LF>456 should print:
05:57  unkanon: 123
05:57  unkanon: ___456
05:58  unkanon: where underscores are spaces
05:58  Rakko: at least back when I used dialup modems it did
05:58  unkanon: that's good then, but nowadays it doesn't anymore I guess
06:00  unkanon: happpy new day everybody
06:03  Rakko: hehe
06:10  unkanon: C-e in insert mode does something very weird
06:10  unkanon: it copies charby-char the line below
06:18  nate-: unkanon: that's pretty awesome actually
06:18  unkanon: did you find a use for it?
06:19  nate-: i'm sure i will one day
06:19  unkanon: lol
06:20  unkanon: you might also like c-w (kill word) and c-u (kill line)
06:20  unkanon: i'm looking for others
06:20  nate-: actually, C-u is pretty rad
06:20  unkanon: i wishe c-a and c-e worked as they do in the terminal
06:20  nate-: could see myself using that a fair bit
06:22  unkanon: i don't like doing $ and ^ to go to end and beginning of a line, because i have to leave the home row
06:22  unkanon: i want something with C-something that will work in both normal and insert mode
06:23  Rakko: unkanon: oh, cool! I knew about C-y in insert mode, but not C-e
06:23  Rakko: is there a way to copy all the characters from the previous line or next line, up to the current cursor position?
06:24  Rakko: unkanon: you can make mappings for those.
06:24  Rakko: I've always been befuddled at the use of ^ and $... it would make sense if ^ were to the *left* of $
06:25  unkanon: c-y in insert mode does nothing for me, Rakko
06:25  tmr: I won't even start guessing what layout was used when those first started to appear.
06:25  unkanon: lol
06:26  unkanon: Rakko: i've pondered that too
06:26  Rakko: c-y copies from the line above.
06:26  unkanon: Rakko: oh, i was trying it on a line whose line above was empty :)
06:27  Rakko: I like C-u, but I wish C-y restored the text cleared by C-u, like in the terminal (and emacs, I'm guessing)
06:27  unkanon: i'm thinking up some mappings for go-to-beginningofline and go-to-eol
06:28  unkanon: mappings that make sense
06:28  Axioplase_: unkanon: ^ $ ?
06:28 * Axioplase_ reads the previous lines.
06:28  unkanon: Axioplase_: those are not in the home row
06:28  unkanon: we are trying to do everything without moving away from the home row
06:29  unkanon: it's too cumbersome to type dollar sign and caret
06:29  Axioplase_: I and A, then <Esc>
06:29  unkanon: i'd rather write them, lol
06:29  Axioplase_: and you remapped <Esc> to <CapsLock>, so you're done :)
06:30  unkanon: remap esc to capslock? such aberration!
06:30  unkanon: mine is mapped to control like the original keyboards
06:30  Axioplase_: Well, in my case, CapsLock is "f" :)
06:30  unkanon: ?!
06:30  Axioplase_: (but I have 1/ A weird keyboard, 2/ a weird layout on top of it)
06:30  unkanon: i won't even ask :)
06:31  Axioplase_: I think that "A" and "I" are the closest things to ^ and $ on a qwerty layout.
06:31  Axioplase_: But they don't compose, as they change the mode.
06:32  unkanon: yeah those wont do
06:33  unkanon: btw about the esc, i will map my jj to press escape for me
06:33  unkanon: so i wont ever need to do ctrl-[
06:33  unkanon: which i hate doing
06:33  Axioplase_: If you have a good status bar, you may use C-G for either b-o-l or e-o-l
06:33  Axioplase_: (since C-G is quite useless then)
06:34  Axioplase_: You may *even* have a "circular remapping" that will map C-G to e-o-l *and then* b-o-l, and so on…
06:35  unkanon: wow that;s pretty powerful
06:35  unkanon: and yeah my c-g right now is useless, as i have a status bar
06:35  Axioplase_: Or have map a function which goes to e-o-l if given true, and to b-o-l if given false
06:36  Axioplase_: and then, I think that a mapping may read parameters, so you'd do, say "C-G" for e-o-l, and "1C-G" for b-o-l
06:37  unkanon: i like the circular remapping idea better
06:38  unkanon: as it's faster for me to do c-g twice then to go type a number
06:38  unkanon: i want to avoid numbers at all cost
06:40  unkanon: you guys are fun, i'll catch you all tomorrow
06:41  unkanon: nighty night
06:45  Axioplase_: http://pastebin.com/JHT2k00H does the job.
07:07  sontek: Where does "*y put the copy? My middle click doesn't paste it, so I don't think its putting it in there
07:08  sontek: I want to copy into x clipboard
07:13  Rakko: sontek: try "+y
07:15  sontek: Rakko: didn't work
07:16  Rakko: hmm, I dunno then
07:16  Rakko: I have seen some settings dealing with X selection and clipboard, but I don't remember them now
--- Log closed Thu Nov 11 07:22:24 2010
--- Log opened Thu Nov 11 07:22:43 2010
07:22 --- Users 543 nicks [0 ops, 0 halfops, 0 voices, 543 normal]
07:24 --- Channel #vim was synced in 101 seconds
07:24  Axioplase_: sontek: shift+middle click?
07:25  Axioplase_: Rakko: http://www.jwz.org/doc/x-cut-and-paste.html
07:26  Rakko: I meant in vim, Axioplase_
07:26  Rakko: I'm arguing with someone about y2k
07:27  Rakko: he says he never fixed his computer to be y2k-compliant, therefore the whole thing was a hoax
--- Log closed Thu Nov 11 09:02:32 2010
--- Log opened Thu Nov 11 09:02:55 2010
09:02 --- Users 546 nicks [0 ops, 0 halfops, 0 voices, 546 normal]
09:04 --- Channel #vim was synced in 109 seconds
--- Log opened Thu Nov 11 09:11:20 2010
09:11 --- Users 546 nicks [0 ops, 0 halfops, 0 voices, 546 normal]
09:12 --- Channel #vim was synced in 72 seconds
09:32  jergason: how can i run the contents of the buffer in python?
09:35  the_isz: jergason: if you saved it: :!python %
09:35  jergason: sweet, thanks
09:36  the_isz: jergason: that's running python on the cmd line and passing it the file's name. if you need something else, don't be afraid to ask :)
09:36  jergason: so the % is the name of the file in the buffer?
09:38  iaj: current file name, so to say, yeah:)
09:42  the_isz: jergason: yes, % is the file name of the current file
09:48  tlonim: when i have multiple tabs open, can i tell vim to switch to an existing tab based on a pattern(file pattern)
09:54  duxbuz: hiya. how do i search and replace a file path e.g /etc/folder/path to /etc/folder/diff/path
09:55  Mnemonic^: Hi.. How can I run a command through VIM and use the name of the file I am editing? Is there a var I can use. Ex: I want to compile the file I am editing "!g++ -Wall -g -o <filename>.o <filename.cpp>"
09:55  KRF: duxbuz: :%s/string/replacement/
09:55  FernandoBasso:  :%s:/etc/folder/path:/etc/folder/diff/path:g
09:56  Raimondi: Mnemonic^:  :!cat %
09:56  duxbuz: ok. why the %
09:56  KRF: FernandoBasso: that won't work, you need to escape "/"
09:56  Mnemonic^: Raimondi: Do % is var for the current file?
09:56  duxbuz: some of the examples do not have this
09:56  Mnemonic^: Do = So
09:56  duxbuz: ok
09:56  Raimondi: Yes
09:56  FernandoBasso: KRF: I used : as delimiters.
09:56  duxbuz: thought the forward slash was special character
09:56  Mnemonic^: Thanks.
09:56  KRF: FernandoBasso: right. sorry
09:57  Raimondi: duxbuz: % mans the whole file
09:57  Raimondi: means*
09:57  kmq: n00b question: I found a script (http://cedric.bosdonnat.free.fr/wordpress/?p=183) that defines a mapping 'noremap <leader>;xp :call Xpath()<cr>'
09:57  duxbuz: how do i escape /   \/ ??
09:58  FernandoBasso: Correct.
09:58  kmq: what I expected was to type "\" "x" "p" , one after the other to activate it, but It does not seem to work
09:58  FernandoBasso: duxbuz: Sometimes it is just easier to use another character as a delimiter.
09:58  duxbuz: i bet. how do i change the delimiter
09:59  FernandoBasso: duxbuz: Like in the example I showed. Use : instead of /
09:59  FernandoBasso: Or use + instead of /
09:59  duxbuz: ok
10:00  kmq: it just deletes the current char and pastes it again, as it would w/o adding '\'
10:00  FernandoBasso:  :%s+this+that or :%s:this:that
10:00  kmq: I think my question is: how do I use the <leader> metakey ?
10:01  FernandoBasso: kmq: Just hit \ and quickly something else.
10:02  FernandoBasso: kmq: Do you have <Leader> defined to something else?
10:02 --- Natch is now known as Natch|
10:02  kmq: FernandoBasso: no. I checked
10:03  duxbuz: thanks FernandoBasso
10:03  FernandoBasso: The map is <Leader>;xp. Are  you typing the ; ?
10:04  duxbuz: how come the : works like the / sithout having to change anything in vim
10:04  duxbuz: without
10:04  FernandoBasso: duxbuz: Vim is smart.
10:04  duxbuz: good
10:04  duxbuz: i am not
10:04  duxbuz: cheers for that
10:04  kmq: FernandoBasso: d'oh! of course I didn't, thx
10:04  FernandoBasso: duxbuz: / is not the only delimiter. The only thing is that 99% of the examples use /.
10:05  duxbuz: i see
10:05  Raimondi: duxbuz:  :h E146
10:05  duxbuz: wahts taht
10:06  duxbuz: help. tahtnks
10:07  duxbuz: weird taht i search google and didint find much help with this. thaks for irc
10:07  duxbuz: cheers
10:08  FernandoBasso: Everything is in the help. Hard to know exactly where.
10:09  mavrc: Hello.
10:09  Raimondi: Hi, mavrc
10:14  Mnemonic^: I wanna map this command to a alias or a key in VIM: !basename=`echo % | cut -d "." -f 1`; g++ -Wall -g -o $basename.o % ; ./$basename.o How can I do that?
--- Log closed Thu Nov 11 10:15:57 2010
--- Log opened Thu Nov 11 10:16:20 2010
10:16 --- Users 562 nicks [0 ops, 0 halfops, 0 voices, 562 normal]
10:17  Raimondi: Mnemonic^:  See  :h mapping
10:18 --- Channel #vim was synced in 127 seconds
10:33  Mnemonic^: Raimondi: Yes I know but it does not seam to work. I dont think it likes the "`" marks.
10:34 --- daniel__ is now known as daniel
10:46  pinkisntwell: is there some solution to parse xml and html in java without going through the sax hell?
10:59 --- ml|_ is now known as ml|
11:10  cheater99: hi
11:10  cheater99: i have an indented line and below it another indented line. i want to join the two lines. what do i do?     it sort of looks like:  "      line1\n      line2"  and my cursor is on the digit 2.
11:14  dindinx: cheater99: kJ
11:15  cheater99: let me try that
11:33 --- Kirok is now known as RecQuery
11:36  KeeperOfTheSoul_: is there a way to match and move to the start of the line the match was on?
11:37  KeeperOfTheSoul_: but still preserve n/N for navigating matches?
11:37  KeeperOfTheSoul_: /foo/s-999 and /foo/;/^/ didn't quite work
11:43  the_isz: KeeperOfTheSoul_: i don't know if i got your question right, but does  :he last-pattern  answer it maybe?
11:57  KeeperOfTheSoul_: was more looking for an offset that would represent the start of the line
11:58  the_isz: KeeperOfTheSoul_:  :he {offset}  ?
11:59  KeeperOfTheSoul_: yeah, but offset doesn't have "start of line"
12:01  the_isz: KeeperOfTheSoul_: hmm... then i don't know. maybe you need to map n/N so that they do what you want, but I don't know with what that'd interfere...
12:02  KeeperOfTheSoul_: yeah, /^.*foo/ works, but I just often have that where I have a search then I just want to tack something on to leave the cursor in a specific position
13:03  rson: KeeperOfTheSoul_: /foo/;?^
13:24  kurkale6ka: KeeperOfTheSoul: :/foo
13:24  kurkale6ka: no, sorry :)
13:29 --- OuLouFu is now known as orafu
14:14  ishish: hello!
14:14  ishish: i have a problem
14:15  ishish: when i use my arrow keys to move aruond in vim, it moves by text-objects, not single characters
14:15  ishish: how can i change it?
14:16  the_isz: ishish: first of all: you shouldn't be using arrow keys in vim at all. second: was does  :map <Right>  give you?
14:16  LeoNerd: I use arrow keys allll the time. They're most useful
14:17  the_isz: LeoNerd: i doubt that, but you're not complaining here, so i guess it's allright for you :)
14:18  ishish: No mapping found
14:18  ishish: =)
14:19  the_isz: ishish: hmm... that's strange. what terminal are you using?
14:19  ishish: i entered it in vim
14:19  ishish: i use xterm
14:20  LeoNerd: That sounds most strange indeed...
14:20  LeoNerd: When you say "text objects"... what object?
14:20  the_isz: ishish: oh and can you try in gvim, too, if you have that at hand?
14:20  ishish: word
14:21  ishish: sec
14:21  the_isz: ishish: do you have caps-lock on maybe?
14:21  the_isz: ishish: forget that...
14:21  the_isz: ishish: you wouldn't be typing small letters here then
14:22 * LeoNerd can't offhand work out why capslock would matter...
14:22  LeoNerd: X's arrow key handling isn't subject to capslock
14:23  ishish: well i had the same problem on my other system
14:23  ishish: i use gentoo right now
14:23  ishish: and i was using sabayon
14:24  the_isz: LeoNerd: for me, <s-Right> jumps word-wise, therefor i asked
14:25  LeoNerd: Caps lock != Shift
14:25  LeoNerd: It's a totally different modifier, with totally unrelated effect
14:25  the_isz: LeoNerd: ok, didn't know that...
14:25  docelic: Hey folks, I run vim in a terminal, but it recognizes my mouse and allows me to click around and move. How can I turn this off and make mouse behave like in a plain terminal with no app-specific behavior?
14:26  LeoNerd: :set mouse=
14:26  LeoNerd: (i.e. = empty string)
14:26  docelic: LeoNerd, awesome, thanks
14:26  mrcarrot: how do i delete all empty lines?
14:27  the_isz: mrcarrot:  :g/^$/d
14:27  mrcarrot: thanks
14:27  the_isz: mrcarrot: you're welcome
14:29  ishish: i found that vim behaves like this only sometimes
14:29  ishish: i thought i accidentaly issued some kind of command
14:30  the_isz: ishish: sorry, i'm out of ideas here :( have you tried whether the problem persists in gvim, too? if not, it could be a terminal problem...
14:31  rical: can anyone please help me with this? my match cases are overwriting eatch other: http://pastebin.com/NLfZ14Ae
14:31  ishish: i'm compilling it :)
14:31  rical: please, please, been struggeling with this for hours now :/
14:40  rical: anyone? why is my match's overwriting each other?
14:40  spiiph: rical, :h :match
14:41  spiiph: rical, you want to use :h matchadd(
14:42  rical: spiiph: thanks, I will have a look at it
14:45  ishish: the_isz gvim moves by characters, just like i want it to
14:45  ishish: :/
14:45  ishish: brb
14:46  the_isz: ishish: hmm... then i guess it really is a terminal problem. but it's really more guessing than knowing, i must admit. check out your terminal's settings, maybe you can find a hint there.
14:47  ishish: okay, thanks
14:48  rical: keep getting: Not an editor command: matchadd(
14:48  rical: spiiph:
14:49  spiiph: No, it's a function, you have to call it.
14:52  myosui: Hello
14:52  myosui: Is there anyway to load .vimrc settings while keeping vim opened?
14:53  estragib: myosui: :source ~/.vimrc
14:53  the_isz: myosui: but that _can_ have side-effects i suppose
14:53  myosui: the_isz, As what?
14:54  the_isz: myosui: don't know. multiply loaded plugins, overwritten variables, something like that i'd imagine
14:54  estragib: if in your vimrc you don't explicitly unset previously set vars, they stay the same for example
14:55  rical: sipior: I tried: how do I call a function? I did: matchadd('Search', '\%<81v.\%>77v', -1)
14:55  myosui: estragib, And how can I unset them?
14:55  myosui: estragib, because that is exactly what is happening.
14:56  estragib: if you had previously set hls, you'd set nohls
14:57  estragib: but i personally wouldn't want that cruft in my vimrc. i try to only keep in there what differs from the defaults
14:58  myosui: Yes but would be impossible to do to every new change that I do, isn't it. It should be a command that did exactly what the program do when it restarts.
14:58  myosui: estragib, It should clean all the settings and reload it. There is no way to do that?
14:59  estragib: not that i'm aware of
15:00  rical: I solved it, thanks sipior
15:00  estragib: myosui: setting cp/nocp resets a bunch, but not all by far
15:02  estragib: myosui: but really, general settings don't change so frequently that restarting is that much of a hassle imo. and for frequently changed ones you'd explicitly toggle them anyway
15:03  myosui: estragib, Yes. I get it. For one case we should restart. For the others just source. copy. Thanks.
15:04  estragib: :)
15:05  myosui: estragib, I just was hoping that there would be a way to allow me to don't restart because I use to work with a lot of opened tabs and buffers. I guess I should implement the sessions.
15:07  ch077179: what's the pattern for any number of whitespaces \w?
15:07  estragib: ch077179: *any* number: \s* -- at least one: \s\+
15:08  ch077179: estragib, ty very much
15:09  estragib: myosui: you could try fiddling with mksession and 'sessionoptions', but i dont't know if that'd work or if it's worthwhile
15:24  pinkisntwell: does anyone here use eclipse? is it possible to use vim with it? i'm not talking about vim keybindings, i mean real vim
15:30  ds187: pinkisntwell: like this? http://eclim.org/
15:41 --- EselTheo_ is now known as EselTheo
15:53  plwert: :Ex (netrw) shows outdated information until I change the sort order with "i". Why?
15:55  schweizer: hi
15:56  schweizer: whats the best fuzzy finding type extension for vim? is there something better then :b $STRING <tab> ?
16:00  Raimondi: schweizer: Command-T and FuzzyFinder are the two more popular.
16:11  creidiki: i like LustyExplorer
16:12  creidiki: Command-T annoys me
16:14  tlonim: talking of fuzzy finding
16:14  tlonim: is there a tab opener based on globbing ?
16:15  tlonim: like :fuztabopen *fgh* opens already-open tab with file abcfghijk
16:15  creidiki: tab opener?
16:16  creidiki: most of the buffer explorer stuff can open buffers in a new tab, amd im sure some will switch to the tab if its already open in a tab
16:16  creidiki: dont know, i hardly ever use them tbh
16:23  tlonim: creidiki: i wanted something like -- tabopen filex if it is not open already if open switch to that filex's tab
16:23  saimon_: Hi..I have a file encoded in utf-8 that contains both english and japanese characters. I can see the english but not the japanese (textmate shows it fine). I'm using terminal.app (which is set to use utf-8) on osx sl and I have LC_TYPE=es_ES.UTF-8 in bash_profile and the following set in vimrc => enc=utf-8, fenc=utf-8, fencs=iso-2022-jp,euc-jp,cp932 Not sure what I'm missing here.
16:24  tlonim: question is how do i say switch to filex's tab
16:27  rson: tlonim: i don't know of a way to do this, but then again, i don't use any plugins for opening/finding files, nor do i use tabs.  nothing in :help tab-page seems relavent though.
16:34  Raimondi: saimon_:  Are you using the default vim?  is that file available online for me to open it?
16:35  saimon_: Raimondi: yes..I'm using default vim (i.e. not macvim). unfortunately not and I can't make it available but let me just find one online to test.
16:36  Raimondi: That version is a bit outdated, have you considered installing MacVim?
16:39  saimon_: Raimondi: http://pastie.org/1290065 .
16:39  saimon_: Raimondi: I could try macvim but I'd like to get used to the terminal version...
16:40  Raimondi: MacVim can be used from the terminal
16:42  Raimondi: saimon_: http://imagebin.ca/view/MaJrQdM.html
16:42  Raimondi: That's with the current version of MacVim from the terminal.
16:43  saimon_: Raimondi: I'll try it out now but I'm still piqued by why the normal version can't display the jp characters
16:43  Raimondi: That version is outdated, it might easily be some that some bugs were fixed.
16:44  tlonim: 7.3.050 == Included patches: 1-50  in vim --version right ?
16:44  Raimondi: Once you open MacVim see  :h mvim  to see how to make it work from the terminal. brb.
16:44 --- shikamaru is now known as Guest37136
16:44  saimon_: Raimondi: ok thx
16:45 --- silex is now known as Silex
16:47  Silex: I'd like to record a macro that does this:
16:47  Silex: gf (go to file under cursor)
16:47  Silex: then executes this: !git mv expand('%') expand('%').vim
16:47  Silex: how should I go about this?
16:48  Silex: add some ` somewhere?
16:48  gkatsev: qagf!git mv expand('%') expand('%').vimq
16:48  gkatsev: also, probably a script would be better.
16:48  Silex: does the expand() like this work?
16:49  saimon_: Raimondi: ok got macvim to run inside the terminal but I'm still not seeting those japanese characters
16:49  Silex: I strongly doubt it will be evaluated before being passed to !git mv
16:49  gkatsev: yeah, I'm guessing it doesn't
16:50  Silex: ah, I think :exec is the way
16:50  Silex: :exec '!git mv ' . expand('%') . 'etc'
16:50  Silex: let's try
16:50  gkatsev: anyway, a script is probably what you want rather than a macro
16:50  Silex: for this particular thing I want a macro
16:50  Silex: it's a one shot thing
16:50  Silex: and I'm under windows
16:50  Silex: so no bash script
16:51  gkatsev: a scrip that grabs the thing under the cursor and then does git mv {thing under cursor} {thing under cursor}.vimq
16:51  gkatsev: Silex: not bash script, vimscript.
16:51  gkatsev: or whatever other language you want that vim supports
16:51  Silex: it's for a one shot
16:51  Silex: the idea is to make it quick & dirty
16:52  gkatsev: ah, then why the hell do you even need a macro then?
16:58  Silex: gkatsev: I did :r !ls
16:59  Silex: testing it works on one file
16:59  Silex: then repeat on all the others
17:14 --- Eclipser is now known as Zharf
17:15  Raimondi: saimon_: Maybe the font? I just ran  vim -u NONE -N /path/to/file
17:23 --- Silex is now known as silex
17:33  saimon_: Raimondi: It appears to be a font-related issue. I'm using the default monaco font but it doesn't display japanese characters. If I use osaka font I can see them but it's awful looking. I've yet to find a decent font that can display japanese. What font are you using?
17:41  sec^nd: hi
17:41  sec^nd: I installed nerd_tree but the help won't open
17:41  sec^nd: and tab complete acts as though nerd tree isn't installed
17:46  sec^nd: didn't run help tags ;)
17:50  resixian: is there built in insertion combination for the current date/time?
17:51  resixian: like, '^r' then '%' inserts filename?
17:52  kongo: resixian: use ^r and the expression register with strftime()
17:53  resixian: kongo: thanks
18:01 --- altamic__ is now known as altamic
18:01 --- Eclipser is now known as Zharf
18:09  TheBrayn: howdy folks
18:18  TheBrayn: is it possible to define a macro or abbreviation to put a character at the n-th position in a line?
18:19  estragib: s/\%nc/<char>
18:21  TheBrayn: what is %nc?
18:22  spiiph: n is the column
18:22  estragib: your n-th pos. s/\%10c/X puts 'X' at col 10
18:23  TheBrayn: abbr #es s/\%10c/* <- this does not work though
18:24  sitaktif: TheBrayn: you don't want an abbreviation, you want a map
18:24  TheBrayn: ok
18:24  sitaktif: :h :map
18:30  witquicked: so, where can I find a good tutorial on window/buffer management?
18:30  spiiph: vimgor, buffers
18:30  vimgor: For a quick intro to vim's windows, buffers, and tabs, see http://img200.imageshack.us/img200/9031/windowsv.png and http://vim.pastey.net/115548 See also ':help tab-page-intro' and ':help windows-intro'
18:31  softdrink: Does anyone have any web developer type plugins that you just can't live without?
18:31  witquicked: spiiph, thanks...
18:35  spiiph: softdrink, not that I do web development, but I suspect surround.vim
18:35  spiiph: vimgor, surround
18:35  vimgor: surround.vim is a plugin written by tpope for dealing with pairs of surroundings. It can be downloaded at http://www.vim.org/scripts/script.php?script_id=1697 or http://github.com/tpope/vim-surround
18:35 --- Eclipser is now known as Zharf
18:35  softdrink: heh pretty much all of tpope's plugins are gold
18:36  evident: hi everybody... I am having problems setting up my vimrc profile on my ubuntu system... I cloned the mercurial repository with settings from a friend and "ln -s .vim/vimrc .vimrc" the vimrc to my home folder... but when I start gvim or vim from my terminal it still shows up the normal way, with white bg and all those nasty icons...
18:37  evident: do I need to tell vim/gvim to use that config? If so, how?
18:37  spiiph: evident, check :scriptnames to see if your .vimrc has been loaded.
18:37  spiiph: No, if you have a ~/.vimrc you should be fine
18:39  evident: well it seems to load the /home/florian/.vimrc there...
18:40  evident: at least theres a line there saying so... ;-)
18:41  evident: but it's not showing up the way it should... and the way I am used to...
18:41  spiiph: And you don't have any load guards in your .vimrc, that would prevent some settings from being applied correctly?
18:41  evident: dunno... I am going to check and see if somethings wrong there...
18:41  mgedmin: evident, is there a .vim/gvimrc?
18:42  evident: unfortunately I gotta go now...i'll check later...  gdbye
18:42  mgedmin: if so, you need to symlink it too
18:42  evident: but I'll come back with the problem^^
18:49  vinilios: is it possible to make completion to not insert automatically the first result found so that i can keep writing text from the place i asked for completion
18:50  strull: vinilios: type ctrl-e if the completion is wrong
18:53 --- Guest37136 is now known as shikamaru
18:53 --- revans is now known as revans|away
18:58  azm: Hello. How do I turn on some C++ sensitive editing please?
18:58  azm: or any code written generaly
19:00  dindinx: azm: what is "sensitive editing"?
19:00  azm: dindinx, eg. left margin
19:02  spiiph: azm, you mean indentation?
19:02  spiiph: azm, add 'filetype plugin indent on' to your .vimrc, and read this:
19:02  spiiph: vimgor, indent
19:02  vimgor: For a quick overview of Vim's indentation settings, see http://vim.wikia.com/wiki/Indenting_source_code
19:03  azm: spiiph, yes! thank you :)
19:07  ceej: is there a way to stop vim plugins changing my tab preferences?  It keeps changing them from spaces to tabs :/
19:08 --- revans|away is now known as revans
19:09  spiiph: ceej, what plugin does that?
19:11  ceej: a couple I think
19:11  ceej: supertabs/pdv ......
19:12  ceej: that's why I was wondering if there was a way to force it to stay as spaces
19:13  ceej: gets annoying having to do set expandtab whenever it changes back to tabs :/
19:13  spiiph: No, the solution is not to use badly written plugins.
19:13  ceej: lol
19:17  spiiph: No joke.
19:23  ceej: spiiph: they work really welll other than that :/
19:24  spiiph: Doesn't supertab just do completion, btw? Or is this a different plugin? What is pdv?
19:27  mgedmin: I'd like tag lookup to prefer tags defined in my application to tags defined in 3rd-party libraries
19:27 * mgedmin reads :h tag-priority
19:27  mgedmin: there's just a difference between current file and another file
19:27  mgedmin: plus global/static
19:27  mgedmin: can I fudge it somehow?
19:28  mgedmin: declare that all tags in 3rd-party packages are "static"?
19:29  mgedmin: sounds complicated :(
19:31  gdoteof: what is the command for doing something to every line?  i thought it was something to do with g
19:31  gdoteof: for example i want to add 'foo' to the beginning of every line
19:31  ormaaj: gdoteof: :%s/^/foo/
19:31  mgedmin: gdoteof, it is :g, but adding foo to the beginning of every line is easier with :%s
19:32  gdoteof: oh duh.  that make sense
19:33  gdoteof: can i copy things out of vim into my system clip board
19:33  ormaaj: :g is really useful
19:34 --- dive is now known as junius
19:34  gdoteof: like, y only yanks internally to vim
19:34  ormaaj: it's basically filter
19:34 --- junius is now known as dive
19:34  gdoteof: ormaaj: /help g doesn't really describe whats going on
19:35  ormaaj: gdoteof: try :h :g
19:35  DHulme: gdoteof: "+y
19:35  ceej: spiiph: pdv adds doc commenting to the top of your function
19:36  gdoteof: ormaaj: ah.
19:36  gdoteof: DHulme: that doesn't appear to be working
19:37  gdoteof: DHulme: maybe i did it wrong.  i 'highlighted' everything in visual mode
19:37  DHulme: are you using GUI Vim or Vim in a terminal
19:37  gdoteof: in a terminal
19:37  DHulme: install a version of Vim that's compiled with X11 support
19:38  gdoteof: DHulme: will I be able to ssh into a machine and run vim from there and grab text that way?  i know I could just mount the drive
19:38  DHulme: only if that Vim is compiled with X11 support and you have X forwarding enabled in ssh
19:39  gdoteof: ah.  ok
19:39  ormaaj: eh don't use gvim over ssh
19:42  Dynetrekk: ormaaj: why not? (though I guess regular vim in the terminal is faster)
19:42  DHulme: ormaaj: it doesn't have to be in the GUI, just as long as it's compiled with X11 support
19:44  ormaaj: Dynetrekk: Yes terminal vim is faster and IMO more generally useful to get used to since it's living inside the terminal and can be used along with screen and easily over ssh.
19:45  Dynetrekk: ormaaj: all valid points. I tend to prefer macvim just because it looks slightly more comfortable :-)
19:48  abstrakt: how can I map my OPTION/ALT key on mac?
19:49  ormaaj: DHulme: Yea unfortunately Gentoo does the whole separate binaries thing so I have gvim -v aliased to vim  for running with csapprox
19:54  danielsh: using 7.3.50, in :ls, I see two buffers with the same name
19:54  danielsh: I found this when I tried to ":b lock<tab><enter>" and it complained of multiple matches
19:55  danielsh:   1      "subversion/libsvn_fs_fs/lock.c" line 588
19:55  danielsh:  10      "subversion/libsvn_fs_fs/lock.c" line 1
19:55 --- altamic_ is now known as altamic
20:02  danielsh: AFAIK that should be impossible, correct?
20:07  abstrakt: how do I get the value/status of an option?
20:07  abstrakt: I want to have a key to toggle between nu and rnu
20:07  mgedmin: echo &optionname
20:07  abstrakt: ok
20:07  deryni: rnu?
--- Log closed Fri Nov 12 00:50:48 2010
