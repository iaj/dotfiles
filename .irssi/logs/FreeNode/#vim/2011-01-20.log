--- Log opened Thu Jan 20 08:34:25 2011
--- Log closed Thu Jan 20 08:37:26 2011
--- Log opened Thu Jan 20 08:37:45 2011
08:37 --- Users 574 nicks [0 ops, 0 halfops, 0 voices, 574 normal]
08:37 --- Server: [card.freenode.net] [freenode-info] if you're at a conference and other people are having trouble connecting, please mention it to staff: http://freenode.net/faq.shtml#gettinghelp
08:38 --- Channel #vim was synced in 73 seconds
08:40 --- the_isz is now known as robot
08:40 --- robot is now known as the_isz
08:56 --- dive is now known as Guest47496
09:47  nawk: :,$s/foo/bar/g
09:47  nawk: if I don't specify the starting position, it means current line right?
09:47  bairui: yep
09:48  nawk: bairui, thanks
09:48  bairui: np
09:52 --- EselTheo_ is now known as EselTheo
09:54  rindolf: Hi all.
09:55  bairui: howsit
10:06  bairui: snowing beautifully here; glad i'm indoors
10:33  iaj: go for a snowman!
10:50  elik: bairui: snow ain't gonna kill you...
10:50  elik: hi rindolf
10:50  rindolf: Hi elik
10:53  bairui: it might... :(
10:54  oxman: What do you think of pathogen ? Is it the best solution to have a clean vim ?
10:54  elik: bairui: how much snow do you usually get?
10:55  elik: oxman: a lot of people use it to make [de]activating plugins easier
10:55  bairui: me, personally, none. I usually head to the tropics in winter. This year, we decided to stick around. I'll be ok - if I stay inside.
10:55  oxman: ok elik thanks :)
10:55  elik: oxman: or to put the plugins on vcs
10:56  elik: oxman: there is vim-addon-manager that looks interesting
10:56  elik: depending on your definition of clean
10:58  oxman: ok
11:01  edgimar: given that no two (g)vim instances should edit the same file at the same time, I'd like to find a way to run every vim instance with a unique servername, and to look-up the servername of the instance editing file x.  Any ideas? (simpler is better ;).
11:03  elik: edgimar: why multiple instance of (g)vim at the same time in the first place?
11:04  edgimar: You might have multiple shells open on your machine, and be editing different files in them. ?
11:04  elik: why multiple shells int he first place? :)
11:05  edgimar: To view multiple files simultaneously (e.g. on a multi-monitor setup).
11:06  elik: edgimar: all I'm saying is, if you try to have 1 vim = 1 file, you're missing a big part of vim
11:07  edgimar: I use vim split-screen quite regularly.  Now, onto my question -- is what I wrote possible by any "easy" means?
11:11  elik: edgimar: sorry, I don't know much about the vim server side of vim
11:13  elik: edgimar: but split-screen is not as good as vim gets concerning multiple files edition... it all starts with :h 'hidden, and there are many tools to make navigation easier, such as fuzzyfinder
11:30  industrial: Vim is highlighting matching brackets, I want to turn that off but can't find what's causing it .. https://gist.github.com/52e7cf0bce741269658b
11:36  guns: industrial: help matchparen
11:43 --- EselTheo_ is now known as EselTheo
12:09  hendry: i'm trying to work out how to remove an attribute and it's value in a vim buffer. e.g. for="DOM Traversal"
12:10  hendry: i'm trying to work out how to remove an attribute and it's value in a vim buffer. e.g. for="DOM Traversal" // :%s,for=".*",,g is too greedy
12:15  hendry: xmlstarlet ed -d "//test/@for" foobar.xml // does the trick
12:31  kurkale6ka: Anyone knows a way to force short file names while completing with tab in wildmenu mode? ex: :b <tab> shows fstab Vs /etc/fstab
12:32  spiiph: No, that won't work
12:32  spiiph: You need the full path for uniqueness
12:34  kurkale6ka: a pity...
12:34  MetaCosm: kurkale6ka, I think you might like fuzzy finder
12:34  MetaCosm: it lets you use partials
12:34  MetaCosm: I swear by it
12:35  spiiph: kurkale6ka, uh, a pity that you need the full path name to determine uniqueness? How would you have it otherwise? Anyway, what problem are you trying to solve?
12:35  spiiph: Since :b allows partials too.
12:36  kurkale6ka: I actually use it MetaCosm but I have tried only for tags so far... that may be a solution...
12:38  kurkale6ka: spiiph: it is only a display thing often my file names are unique and I wanna see the last part only because sometimes a single file only fits in the screen and the <tab>ing is really annoying. what do you mean about :b
12:38  spiiph: Just that it allows matching on partial file names
12:38  MetaCosm: kurkale6ka, I use it for buffers as well
12:39  MetaCosm: kurkale6ka, it can be done with :b as well -- I just like the filter as you go visual and multi-match fuzzy-finder semantics
12:39  spiiph: I seldom have directory depths of more than 3 levels. Can't you change to a more appropriate directory when this is a problem?
12:40  MetaCosm: fuzzy-finder works well with exceptional duplicated tree structs
12:40  MetaCosm: ie:   /unique_bit/(lots of duplicated bits)/unique_bit
12:41  kurkale6ka: spiiph: not really. most of the time I have more than 10 files opened and in different directories so :b sometimes gives :b file1 /q/w/e/r/t/y/file2 /a/file3...
12:41  spiiph: Right
12:41  kurkale6ka: MetaCosm: cheers, I will try that
12:41  MetaCosm: kurkale6ka, yeah, sounds like it will be a good fit
12:42 * iaj agrees.
12:42  MetaCosm: QT in Gnome has me a little excited.
12:42  flavius: I am using autocmd   FileType py source ~/.vim/py.vim to load python-specific settings, but it doesn't seem to work. How could I test it?
12:43  flavius: MetaCosm: Qt in Gnome? Do you have a link?
12:45  iaj: flavius: enter :scriptnames after loading up a python file and see if its there
12:46  MetaCosm: flavius, http://arstechnica.com/open-source/news/2011/01/inclusion-of-qt-in-ubuntu-1110-is-a-win-for-developers.ars
12:47  flavius: Oh that one, ubuntu, not gnome
12:47  flavius: i've read it on feedly
12:49  MetaCosm: flavius, once it is integrated -- it will explode.
12:49  MetaCosm: flavius, I am excited, I think it is a great thing for linux as a platform, but a huge power-play against KDE
12:50  spiiph: flavius, why not use ~/.vim/ftplugin/python.vim ?
12:50  spiiph: sorry
12:50  spiiph: flavius, why not use ~/.vim/after/ftplugin/python.vim ?
12:51  flavius: spiiph: how would I do that? just drop it in?
12:51  spiiph: Yes
12:53  flavius: spiiph: wow great thanks
12:54  flavius: MetaCosm: I agree, libraries should be shared across DEs :-)
12:57  MasseR: Can I set buffer local QuickFixCmdPost make? (Afaik :au QuickFixCmdPost make call foo(), pattern matches make and is called only when :make is invoked)
12:58  MasseR: :au QuickFixCmdPost make <buffer> foo doesn't work, as it doesn't recognize the <buffer> as buffer local argument
12:58 --- MinceR_ is now known as MinceR
12:58  MasseR: :au QuickFixCmdPost <buffer> make foo causes an infinite recursion
12:58  MetaCosm: flavius, I am just an old QT hack -- comfy with slots and signals -- so I like the idea of linking it to GTK/Gnome
12:59  MetaCosm: if it works well
--- Log closed Thu Jan 20 14:12:25 2011
--- Log opened Thu Jan 20 14:17:34 2011
14:17 --- Users 597 nicks [0 ops, 0 halfops, 0 voices, 597 normal]
14:18  rindolf: whitedragon: do j and k work?
14:18 --- Channel #vim was synced in 73 seconds
14:19  rson: bairui: it's in a bit of a broken state atm, give me a bit to fix it up
14:19  bairui: np
14:20  whitedragon: rindolf: no, j and k would only insert 'j' and 'k'
14:21  rindolf: whitedragon: oh.
14:24  Zathrus: you can make them do that
14:24  eniac: By default vim searches case insensitive. You can change that by running :set noic. But isn't there a way to use / and add some params or something so it search case insensitive or not ?
14:25  mgedmin: /\ccaseinsensitivesearch
14:25  Zathrus: :inoremap <expr> j pumvisible() ? "\<Down>" : "j"
14:26  Zathrus: eniac: :h 'smartcase    or :h :s_flags   (which also apply to / as appropriate)
14:28  Zathrus: whitedragon: see above
14:29  whitedragon: Zathrus: Thanks for that idea, but i still want to be able to type j or p. If there is no standard way to go i just will create my own mappings. ctrl-j/k should work fine.
14:30  Zathrus: whitedragon: you can still type j or k or whatever, just not while in the popup menu.
14:30  massimo: Hi. CTRL-X usually is for decrementing numbers. Any plugin here has changed the CTRL-X binding. How can I reconfigure the usual behaviour via :nmap in my .vimrc ?
14:30  Zathrus: massimo: wha?
14:31  whitedragon: Zathrus: Yes, i should have said: i still want to be able to type j oder p while there is a popup-menu.
14:31  massimo: Zathrus: Yes;     Currently there is   no <C-X>       * :call UnCommentLine()<CR>
14:32  mgedmin: massimo, .vimrc is executed _before_ the plugins, so you'd need to add an autocommand on VimEnter to :unmap <C-X> or something
14:32  Zathrus: massimo: :verbose map <C-X>   will tell you what did that.
14:32  mgedmin: might be simpler to convince the plugin not to map <C-X> in the first place
14:32  Zathrus: s/might be //
14:33  massimo: Ok. Done by .vim/plugin/comments.vim   So I'll have to modify that.
14:33  kurkale6ka: use NERDCommenter instead
14:36  Zathrus: whitedragon: then yeah, you'll have to use your own maps.
14:36 * Zathrus wishes bram had added a completion mode map
--- Log opened Thu Jan 20 14:41:21 2011
14:41 --- Users 603 nicks [0 ops, 0 halfops, 0 voices, 603 normal]
14:42 * whitedragon wishes that, too.
14:42 --- Channel #vim was synced in 95 seconds
14:42  whitedragon: Zathrus: Yeah, but thanks!
15:03  wald0: how i can "sort" and "uniq" for a selection of lines ?
15:05  Geralt: wald0: Use V to mark them, then :sort u
15:06 --- ziro` is now known as Guest17674
15:12 --- gaveen_ is now known as gaveen
15:12  djszapi: How can I replace the leading whitespace spaces to tab in a kernel patch, modification with one-liner ?
15:15  LeoNerd: :retab
15:21  djszapi: ty
15:21  djszapi: will it not cause any other issue ?
15:22  rindolf: djszapi: are you a DJ?
15:29  prizm: I've been converted to the dark side folks.
15:29  prizm: VIM.
15:29  mgedmin: as they say, you cannot spell evil without vi
15:29 * mgedmin loves it
15:29  prizm: I never liked emacs
15:29  prizm: I always used nano.
15:30  prizm: However, thanks to GVim I have a new respect for Vim and friends.
15:31  kurkale6ka: vim, gvim, it's all good
15:33  rindolf: prizm: welcome to the dark side!
15:34  prizm: It does need :ee butterfly though
16:05  anon33_: Man, 'rnu' is probably my favorite feature of 7.3 (so far)
16:08  sleepynate: prizm: i love emacs... planner mode and org mode are fantastic.
16:09  sleepynate: doesn't make it a good editor ;)
16:12  the_isz: sleepynate: have a look at vimwiki
16:13  prizm: I have a good calendar and palnner is y head
16:14  sgronblo: Not that I've used it (or the emacs original) but isn't some guy working on an org mode for vim atm
16:14 --- Geralt is now known as Ger
16:14  prizm: it seems like vim might be becoming emacs with :q!
16:14  sleepynate: the_isz: i have.. and the two new implementations of org mode in vim... and vimoutliner
16:15  sleepynate: the_isz: none of them are quite as nice
16:15  sgronblo: sleepynate: ah
16:16  the_isz: sleepynate: ok then. i just found vimwiki to be rather nice, didn't know you already investigated :)
16:17  sleepynate: the_isz: yea. it's funny too -- i'm one of the few lispers i know who's like -- "Yo dawg, vim"
16:18  the_isz: sleepynate: i bet. hear slime is quite the argument for lisp development in emacs. though that doesn't say anything against using vim for all other cases :)
16:18  the_isz: sleepynate: say, is there a new implementation of vim-outliner or have you been using the 2006 version?
16:19  sgronblo: Could someone good at vimscripting explain to me where this ^l would come from https://github.com/mileszs/ack.vim/blob/master/plugin/ack.vim#L38
16:19  sleepynate: the_isz: slime is actually only really nice if you're using elisp
16:20  sleepynate: the_isz: if you want consistency with common lisp, slime is *supposed* to work, but ends up being a royal pain
16:20  the_isz: sleepynate: wow... another reason less to use emacs then, huh?
16:20  mgedmin: sgronblo, huh?  from https://github.com/mileszs/ack.vim/blob/master/plugin/ack.vim#L60
16:21  sleepynate: the_isz: well, again emacs to me is the equivalent of a "live ncurses session"
16:21  sgronblo: mgedmin: doh
16:21  sgronblo: I guess I should start going home now :)
16:22  sgronblo: I didn't realize ^ was the beginning of the line
16:22  sgronblo: And my mind still was thinking about that other pattern where the $ was used at the end
16:22  sgronblo: Summary I'm tired and stupid
16:22  sleepynate: the_isz: it's a great platform to write useful information management applications, but it's silly to use as an editor
16:23  sleepynate: the_isz: http://bike-nomad.com/vim/vimoutliner.html <--- this is the vimoutliner i used
16:24  sleepynate: neither of them look very current thuogh
16:25  the_isz: sleepynate: indeed
16:25  sgronblo: I finally decided I should learn lisp and started with clojure, but installing that vimclojure seemed like a lot of work
16:28 --- Ger is now known as Geralt
16:48  sgronblo: Ouch, so there is no way to figure out if a visual selection is active from a function called by a command?
16:49  rson: sgronblo: if the function is defined using the "range" paramager you get a:firstline and a:lastline variables to toy with
16:49  rson: i suppose that might suffice
16:50  mgedmin: function?
16:50  rson: paramater*
16:51  mgedmin: cool
16:51  mgedmin: I only knew about commands supporting ranges
--- Log opened Thu Jan 20 17:07:18 2011
17:07 --- Users 617 nicks [0 ops, 0 halfops, 0 voices, 617 normal]
17:07  cmolenda: i don't believe so.  I used a tutorial to set the yank buffer to something other than the standard and it didn't work out for me.  its been a while since i tried that so i can't remember the exact commands I used.  How does one issue a yank command and paste command other than using the 'y' key or the 'p' key?
17:07  spiiph: Pendrag0n, get vim 7.3 and activate 'undofile'
17:07  spiiph: cmolenda, you hit the keys "+y
17:07  cmolenda: ah gotcha
17:07  spiiph: cmolenda, :h registers
17:08  spiiph: cmolenda, and the option you used was :h 'clipboard
17:08  Pendrag0n: spiiph: I have 7.1.242 and it isn't my box, I have no way of updating
17:08 --- Channel #vim was synced in 77 seconds
17:08  prizm: COuld you compile a copy to run in userspace?
17:08  Pendrag0n: and if so, can I store a "session" var of some sort? so that I can do Y, N, and A as in always for the remainder of this vim session?
17:08  Odd_Bloke: spiiph: Is it not ":se[t] {option}={value}" ?
17:09  spiiph: Pendrag0n, pity. You could possibly :cmap wq to do something different
17:09  spiiph: Odd_Bloke, yes, but you used spaces for the value.
17:09  spiiph: Err
17:09  spiiph: quotes.
17:09  Pendrag0n: spiiph: Yes, I'd like it to write, then say prompt for a Y=yes quit, N=no don't quit, or A=always quit for the remainder of this vim session
17:11  Odd_Bloke: spiiph: So just "set makeprg=make"?
17:11  Geralt: Why don't you just map :wq to :w and if you really want to save and quit use :w|q ?
17:11  spiiph: Odd_Bloke, yes
17:12  cmolenda: @spiiph  Hmm. hitting '+y' isn't getting me a yank to the clipboard and doing a :h 'clipboard' seems to take me to the help page for the clipboard
17:12  spiiph: cmolenda, you missed the "
17:12  Pendrag0n: Geralt, that is a great idea, can you tell me how to do that in my .vimrc easily? I am a terribly busy noob, who could really use the help cheating this time, otherwise I'd google it
17:13  spiiph: Google isn't very good at Vim anyway.
17:13  sgronblo: I tried using let a:args = expand("<cword>") in a function to assign the current word as a default parameter if none is provided, but "it doesnt work"
17:14  spiiph: sgronblo, a:args is a list? Also, I don't think you can assign to it. Use another variable.
17:14  Odd_Bloke: spiiph: Still ending up with "makeprg=latex -interaction=nonstopmode $*" in :set.  I've added a history=51 line, and I'm seeing that taking effect, so the file is definitely being read...
17:14  sgronblo: spiiph: nah it would just be a string
17:14  sgronblo: spiiph: ok i'll try that
17:14  spiiph: sgronblo, still doubt it's possible to assign.
17:14  Geralt: Pendrag0n: cmap wq w in the command prompt, but note it will replace wq with w as soon as you type q, so don't be confused
17:15  spiiph: Odd_Bloke, I suggest you disable latex-suite entirely, or read its manual (or code) on how to disable the makeprg for latex.
17:15  Odd_Bloke: spiiph: OK.  Thanks for your help. :)
17:15  cmolenda: @spiiph: Heh well, apparently i'm not good at following VIM directions.  So you want me to do :h "clipboard" ?
17:15  spiiph: No, :h 'clipboard
17:16  spiiph: In here, every character matters.
17:16  Geralt: Pendrag0n: actually you better use 'cnoremap wq w' in your vimrc, then you can still use wq if you type q twice
17:16  cmolenda: Gotcha.  i'm typing in exactly whats between the double quotes here: ":h 'clipboard" and its taking me to the help section for clipboard which isn't too informative.
17:16  Pendrag0n: howso?
17:16  Pendrag0n: like what do you mean by typing it twice?
17:16  sgronblo: spiiph: yeah it didnt seem to work, any idea how i would get the cword in a function, i mean it has to be possible somehow
17:17  Pendrag0n: like wqq?
17:17  Geralt: Pendrag0n: yes, wqq
17:17  Pendrag0n: geralt: okay, so what EXACTLY do I type into my vimrc file?
17:17  Pendrag0n: and where do I stick it?
17:17  cmolenda: @spiiph it actually talks about the unnamed register which is what one of the tutorials was hving me set my register to
17:19  Geralt: Pendrag0n: put on a new line everything that follows the colon: cnoremap wq w
17:19  cmolenda: @spiiph  Oh well.  I'll try again some other time when i've got a bit mroe freetime.  I appreciate the help though, the register's command should help me figure this out.
17:20  sgronblo: why is vimscript so crappy
17:21  Pendrag0n: Ok, Ill try that
17:22  Pendrag0n: O NARLY!  I can actually do a :wq if I wait 2 seconds
17:22  Pendrag0n: or like 1 full second
17:22  Pendrag0n: but it doesn't allow for a super fast :wq
17:22  spiiph: sgronblo, assign it to a different variable?!
17:22  Pendrag0n: as in a typo
17:22  Pendrag0n: THANK YOU SOOOOO MUCH
17:22  Pendrag0n: both of you
17:22  spiiph: You can't have everything
17:23  Geralt: Pendrag0n: yw
17:23  sgronblo: spiiph: it didn't work
17:23  spiiph: I don't believe that.
17:24  Combatjuan: Pendrag0n: vim 7.3 has undo support across vim sessions.  If you enable it, you won't lose your undo history even if you do manage to close your file.
17:24  Pendrag0n: Combatjuan, it isn't my box, I don't have admin, it has vim 7.1.x on it
17:24  Combatjuan: Pendrag0n: Bummer.
17:24  Pendrag0n: hey guys, in bash I can do a source .bashrc
17:24  brugidou: Combatjuan: how do you activate that
17:25  Pendrag0n: is there a way to reload my vimrc in an active vim session?
17:25  Combatjuan: brugidou: set undofile
17:25  mgedmin: Pendrag0n, the closest you can get is :source ~/.vimrc
17:25  Geralt: Pendrag0n: source ~/.vimrc
17:25  Pendrag0n: but I type that in vim?
17:25  Combatjuan: brugidou: Also, you probably want to set undodir to somewhere like "~/backups" otherwise it uses the current dir.
17:25  Pendrag0n: or do I CTRL+z background it
17:25  Pendrag0n: and type that?
17:25  Geralt: in vim
17:25  Geralt: :so ~/.vimrc
17:26  Pendrag0n: or do I type :!source ~/.vimrc
17:26  brugidou: ok thks
17:26  sgronblo: spiiph: well it might be that I'm getting too tired to proofread my own code but this is what I was trying to do, http://pastebin.com/qh4GYeza
17:26  Pendrag0n: Geralt, thanks yet again
17:27  cmolenda: @spiiph Hah, I went back and took a second look at what you told me.  Yes: "+y   worked.  Thanks!
17:27  spiiph: sgronblo, I can't find a reference to a:args anywhere in the help?
17:27  Combatjuan: brugidou: And I'll throw in a plug for a script I discovered this week: gundo -- it shows the undo tree as a navigable graph with a diff window.  Very awesome.  Like having source control with every file edit as a commit.
17:28  cmolenda: Now if only I could remember the immediate reason I needed to use it.
17:28  spiiph: Did you mean a:000 or a:0?
17:28  SpookyET: Hello. I am experiencing unwated behaviour with global search and replace. %s/foo/bar/g does traverse the entire document but only replaces the first occurrence on a given line.
17:28  sgronblo: spiiph: args is just a parameter to the function where this if is located, aren't parameters supposed to be prefixed with a:?
17:28  spiiph: Ah, sorry. I misunderstood.
17:29  spiiph: Well, you'll have to set a breakpoint and inspect what happens then, I think.
17:29  brugidou: Combatjuan: interesting
17:30  spiiph: sgronblo, I think :h empty( might help. :)
17:30  spiiph: Hmm, no, maybe not.
17:30  spiiph: No, sorry, that should work.
17:31  sgronblo: yeah the empty thing works
17:31  sgronblo: but in my googling so far I've only seen expand("<cword>") used on the ex line
17:32  spiiph: What happens if you run :echo expand("<cword>") on the command line? (On a representative position)
17:32  sgronblo: it worked fine on the command line
17:33  spiiph: Hmm, I have no idea then. Did you try debugging it?
17:33  sgronblo: not sure what I would debug, I know which line it explodes on
17:33 --- wtfness is now known as foocraft
17:33  sgronblo: or I can guess
17:34  sgronblo: it's because of the expand inside a function
17:34  sgronblo: doh
17:34  spiiph: You could see if expand() finds the word you expect
17:38  sgronblo: ok now i got it to work
17:38  sgronblo: the error was on a completely different line X_X
17:39  sgronblo: i had forgotten I was in the middle of messing with the definition for a :Command
18:04  parsifal_: does vim have support for macros? that is, can I record a macro, save it, and replay it later by name?
18:04  parsifal_: I know I've entered 'recording' mode before, but dunno what that is
18:04  parsifal_: actually I may not want to do that... is there a way to save a group of substitutions and run them all at once over an area?
18:06  rson: parsifal_: yes. :help recording
18:06  rson: er, to your first question
18:06  rson: for your second question, do you mean a group of :s commands?
18:07  parsifal_: rson: thanks
18:07  parsifal_: oh
18:07  parsifal_: yes I do
18:08  rson: parsifal_: you can chain commands on the command line by separating them with a '|', so you could write all the substitutes on one line if you so wish, then it's only one command to rerun that set of substitutes
18:09  sleepynate: in no way vim related... Does anyone speak fluent IMAP ?
18:09  parsifal_: good to know
18:09  parsifal_: thanks rson
18:09  rson: parsifal_: np
18:10  Combatjuan: parsifal_: Your macros don't stay between vim sessions.  If you have something you commonly do, consider making a function for it and putting that in a vim file somewhere (like your .vimrc).
18:12  parsifal_: Combatjuan: sounds like a great idea.. I should learn how to do that anyway
18:12  parsifal_: next step in my vim mastery :P
18:13  Combatjuan: parsifal_: :help function
18:13  kurkale6ka: it's a pity we can't move selected text with the mouse (ie: drag the text)...
18:14  prizm: cut and paste
18:14  kurkale6ka: and bend the light
18:15  parsifal_: Combatjuan: ty
18:15  al79: Is there a way to move to end of line in insert mode without using the end key?
18:15  kurkale6ka: ^oA al79
18:17  homekevin: Or <C-O>$
18:18  al79: thanks.. I guess I will need to map that
18:18  spiiph: ...or change your editing habits?
18:19 --- jhoepken_ is now known as jhoepken
18:19  Araxia_: <C-c>A requires moving my fingers about 20mm
18:23  homekevin: Stretching to reach Ctrl is harder than reaching Esc for me.
18:23  Araxia_: homekevin: remap capslock to control.
18:23  homekevin: No.
18:23  homekevin: Araxia_: That doesn't really help much.
18:24  homekevin: There's only a Caps on one side of the keyboard.
18:24  Araxia_: uh, yeah, it does quite a bit.
18:24  homekevin: Besides, I have caps mapped to Esc
18:25  scp1: What's the most important thing to add to a modeline, to make it easier for other people to hack on my code?  ts, expandtab, shiftwidth, do I also need autoindent and smartindent perhaps?
18:25  spiiph: Uh, no, don't add indentation settings.
18:25  homekevin: scp1: I don't use modelines, but I would think setting auto or smart would be bad.
18:26  spiiph: They have nothing to do with how your code looks.
18:26  homekevin: Smartindent is stupid anyway.
18:26  scp1: okay.
18:26  scp1: It is?
18:26  mgedmin: vimgor, smartindent
18:26  homekevin: Yes, it is.
18:26  homekevin: If vimgor were working he'd tell you all about it.
18:27  scp1: I like it, I think
18:27  spiiph: et, sw=N, sts=N you use et, noet sw=N, ts=N if you use noet
18:27  spiiph: scp1, for what filetype?
18:27  Araxia_: homekevin: ooc, do you remap capslock to esc universally, or just in vim?
18:27  homekevin: scp1: It's an obsolete feature for C-like syntax superseded by cindent
18:27  scp1: spiiph, 99% Perl
18:27  spiiph: Then use filetype indenting
18:27  al79: regarding editing habbits, where I have needed to jump to end mostly is that I have autocomplete on ( or " etc and it autocomplete and puts me in the middle of the code or paranthesis... so I need to get to the end of the line to continue
18:28  al79: using end key is fast but bad for my wrist
18:28  homekevin: Araxia_: I map it that way universally on my laptop. It doesn't really matter anywhere else because I use weird keyboards.
18:28  Araxia_: heh. fair enough.
18:28  spiiph: al79, this is why autocompletion of parens sucks. :)
18:28  al79: :)
18:29  scp1: spiiph, how sure what you mean with sts, 'splits the window for selected tag'?
18:30  spiiph: :h 'sts
18:31  homekevin: The indent/tab settings are the only ones I bother to know and use the abbreviations for.
18:31  scp1: No I need that? I dont have that set at all
18:31  scp1: Do*
18:31  homekevin: If you are doing space indents you really should use sts.
18:31  scp1: I remember when I started with vim 2 years ago, this spaces vs tab thingy took a couple of weeks to sort out heh
18:32  spiiph: That depends, if you use tab for indentation, you should.
18:32  scp1: uh...
18:32  homekevin: spiiph: You mean the Tab key?
18:32  spiiph: Tes
18:32  spiiph: Eh
18:32  spiiph: Yes
18:32  homekevin: It never really occurred to me to do otherwise.
18:33  scp1: Sounds like this will break allready written code
18:33  homekevin: I don't see how.
18:35  homekevin: scp1: The notes under :h 'ts' might be helpful in sorting out intents.
18:35  homekevin: *indents
18:36  scp1: Another thing; I've started to use templates. Is it possible to somehow, when starting a new file, to automagically jump to line 42?
18:36  scp1: okay, thanks
18:36  spiiph: scp1, :h BufNewFile
18:39  scp1: I have autocmd! BufNewFile * silent! 0r ~/configs/vim/templates/template.%:e   , but I'm not sure how I'd execute 42gg
18:40  scp1: The thing is, I need no jump to different line numbers depending on the filetype ( template )
18:40  scp1: Wouldn't it be possible to somehow embed some command in the template file that Vim could read and execute?
18:40  Lord_Khelben: if you use | it doesnt work ?
18:41  Lord_Khelben: for example autocmd bufnewfile * cmd1 | cmd2
18:41  Lord_Khelben: you can also use \ to split long lines
18:41  scp1: 'not an editor command "40gg"'
18:42  Lord_Khelben: with normal ?
18:42  scp1: yeah
18:42  Combatjuan: Is there a default command like Ctrl-] but open the tag in a new tab?
18:44  rson: anyone know if I can emulate <CR> in insert mode from a script?  I have execute "normal! a\<CR>", however things like comment continuation don't get triggered
18:45  scp1: rson, I have a solution if you're not afraid of using an external script
18:45  Araxia_: rson: you might look at :help feedkeys()
18:46  peter_w: rson: example?
18:46  peter_w: rson: seems to work fine here
--- Log closed Thu Jan 20 19:27:59 2011
--- Log opened Thu Jan 20 19:28:53 2011
19:28 --- Users 630 nicks [0 ops, 0 halfops, 0 voices, 630 normal]
19:30 --- Channel #vim was synced in 90 seconds
19:48  rson: anyone know why "autocmd QuickfixCmdPost * copen" wouldn't leave my cursor in the qf window?
19:48  rson: :copen manually moves my cursor there..
--- Log closed Thu Jan 20 19:55:25 2011
--- Log opened Thu Jan 20 19:55:49 2011
19:55 --- Users 624 nicks [0 ops, 0 halfops, 0 voices, 624 normal]
19:56 --- Channel #vim was synced in 74 seconds
--- Log opened Thu Jan 20 20:01:20 2011
20:01 --- Users 623 nicks [0 ops, 0 halfops, 0 voices, 623 normal]
20:01  sako: any way to make everything lowercase in vim?
20:02  mgedmin: ggguG
20:02 --- Channel #vim was synced in 75 seconds
20:03 --- prizm|afk is now known as prizm
20:06  fragOnly: can you do a C-w r from .vimrc?  for an example of what i am trying to accomplish:  i have nerdtree and taglist, however i want taglist on the right most window, nerdtree on the leftmost window with the default window inbetween on start
20:07  agruman: which "snippet" script would you guys recommend ultisnips, xptemplate, snipmate, snippetemu or some other? (wasnt able to find a good comparison between them)
20:07  zk: i like snipmate a lot
20:08  zk: hadn't heard of ultisnips
20:10  al79: fragOnly: for TList on right, put this in your vimrc "let Tlist_Use_Right_Window = 1
20:10  al79: "
20:13  fragOnly: al79: thanks that works nicely
20:30  iaj: is snipmate able to insert snippets into snippets?
20:42  lduros: if I have two windows split horizontally, how do I reposition them to be vertically next to each other? I can't seem to find this :-)
20:43  spiiph: <C-w>L, for instance
20:44  lduros: thanks
20:49  _JusSx_: Hi i run gvim and I would like to use Terminus font. so I run :set guifont=Terminus\ 9. Font is too large and it's awful. I'm using Terminus font with urxvt and it seems ok. what should I do?
20:50  rson: _JusSx_: :set guifont=* and select your font that way, see if that works any bettetr
20:50  rson: better*
20:52  _JusSx_: rson: I run :set guifont=* but terminus font are not listed there why? I'm using with urxvt
20:52  _JusSx_: event Insonsolate and ProggyFont are not listed there
20:53  behelit: hi. is it possible to have linebreaks in abbreviations?
20:53  _JusSx_: even*
20:53  _JusSx_: Inconsolata*
20:53  rson: _JusSx_: i'm not sure why fonts would not show up there.  How did you install those fonts?
20:54  _JusSx_: rson; from gentoo portage
20:54  rson: behelit: try defining them like this: iabbrev foo foo
20:54  rson: behelit: ooops, just a sec
20:54  _JusSx_: rson: and i can use them with firefox for example
20:54 --- Guest17674 is now known as ziro`
20:55  rson: behelit: iabbrev foo foo^V^Mbar^V^Mbaz^V^M where ^V is a literal Ctrl-v and ^M is a literal Ctrl-m
20:55  lduros: I'm using vtreeexplorer and trying to set it vertically. in the help it says to set this variable in vimrc: treeExplVertical -- Does this mean i enter in .vimrc: set treeExplVertical -- i get an error later when i open vim after I enter this. thanks
20:56  rson: _JusSx_: i'm really not sure, sorry.
20:56  aep: hmpf. I wish vim would have async process apis for plugins :/
20:56  rson: lduros: it probably means something like: let g:treeExplVertical = 1
20:56  rson: aep: someone is working on something like that
20:56  rson: aep: i believe
20:56  rson: see recent vim_dev mailing posts
20:56  lduros: rson: I enter in vimrc: let g:treeExplVertical = 1
20:56  aep: hehe yeah, probably 10 different people in 10 different dead repos :P
20:56  lduros: ?
20:57  rson: lduros: that's my guess
20:57  aep: I'm not on vim_dev
20:57  lduros: rson: let me try then :-) it can't hurt
20:57  rson: aep: you can view it on google groups, just a sec
20:57  aep: rson: got a topic: line to search for?
20:57  aep: cool
20:57  _JusSx_: rson: xfontsel is not included in vim --config
20:57  behelit: rson: nice. that almost works for me (the text is indented somehow, but i can take it from here). thanks!
20:57  _JusSx_: rson: xfontsel is not included in vim --version.
20:57  lduros: rson: it worked indeed
20:58  lduros: rson: well I don't see how a novice could have figured this one out
20:59  rson: aep: i think this is the only thing i've seen recently, there may be a thread on vim_use too, i'm not sure: http://groups.google.com/group/vim_dev/browse_thread/thread/5a4d0e55fb6c4437/c4bb1d41c3c493bc?lnk=gst&q=async#c4bb1d41c3c493bc
21:00  rson: lduros: poor documentation on the plugin's part.  that's how plugin options are normally set though
21:00  aep: rson: that helps, thanks!
21:01  rson: aep: oh my god, that is a year old
21:01  rson: aep: let me find the right one
21:01  aep: yeah and the patch wasnt usefull, sadly
21:02  aep: i think i should get on vim_dev. looks like a bunch of people care about this
21:02  rson: aep: http://groups.google.com/group/vim_use/browse_thread/thread/88336f2868fb3e3b/9929a6ed9e6dfef1?lnk=gst&q=vim-addon-async#9929a6ed9e6dfef1 (it was on vim_use ... oops)
21:03  rson: same author, that's what had me confused
21:03  aep: cool
21:12  bisco77: hey all...i've just been handed some python code that goes way beyond tw=79...is there a way to have vim go through the file and wrap any lines exceding tw=79?
21:13  rson: bisco77: because of python's indentation rules, I don't know that I'd trust vim to wrap at the proper points for python to not break.
21:14  rson: bisco77: btw, i feel your pain.  i've come across lines in our codebase at work that are > 273 characters :(
21:14  bisco77: rson: dang...i was hoping vim could save me (yet again)...
21:14  fragOnly: in taglist is it possible to hide the variable definition?
21:14  bisco77: that's about what i'm dealing with right now :(
21:15  rson: bisco77: the problem is that vim doesn't know how to continue python code.  for instance you could just put parens around it then break it wherever you want, but vim doesn't know that
21:15  fragOnly: 273 characters? thats insane
21:15  rson: and that may not be what you want in that case, since there are other ways to make it look better
21:15  rson: fragOnly: yeah, tell me about it
21:15  bisco77: rson: good point
21:15  pattern: aren't there any python code beautifiers you could use?
21:16  bisco77: pattern: haven't really looked...but i'm on the way to google...
21:16  pattern: in C you could use a program called "indent", and it has a bunch of options including when to wrap lines
21:16  pattern: though, of course, in C you could indent any which way you like and not affect the meaning of the program
21:17  pattern: so the python beautifier you use has to be smart..
21:17  rson: there is a python-tidy
21:17  rson: it seems
21:17  rson: last update in march of 2010, it may work
21:18  bisco77: http://goo.gl/mHvVu ...i like the top result here
21:20  rson: bisco77: you should try it (on a copy of the file!!) and report back ;)
21:20  bisco77: rson: will do...
21:28  BrandLeeJones: Hi! I came on it by chance that vi has a completion menu. but i can't remember the keys to get it again. can someone help me?
21:35  jerojasro: BrandLeeJones: :help completion
21:37  subsume: how do I find the 5000th character of a file?
21:37  jerojasro: subsume: do newlines count?
21:37  subsume: I think so, yse
21:39  BrandLeeJones: jerojasro: thank you
21:40  jerojasro: subsume: mmm, I don't think you can do that with vim out of teh box
21:40  subsume: jerojasro I will replace newlines with X
21:40  subsume: I can also strip them out
21:40  subsume: I just need to get the 5000th character regardless. =)
21:45  subsume: :goto ftw
21:48  jerojasro: subsume: yeah, was about to suggest that, but lost my internet connection :)
21:48 * jerojasro tries to steal the credit...
21:49  subsume: =D
--- Log closed Thu Jan 20 21:55:02 2011
--- Log opened Thu Jan 20 21:55:27 2011
21:55 --- Users 626 nicks [0 ops, 0 halfops, 0 voices, 626 normal]
21:56 --- Channel #vim was synced in 75 seconds
22:04  SpookyET: Hello. I am experiencing unwated behaviour with global search and replace. %s/foo/bar/g does traverse the entire document but only replaces the first occurrence on a given line.
22:07  mr_mustard: pPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpP
22:07  mr_mustard: pPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpPpppPpppPpP
22:08 * bisco77 thinks keyboard kitty strikes again???
22:09  fragOnly: thats a lot of suspicious p's
22:09  Raimondi: SpookyET: See :h 'gd'
22:10  wald0: its a secret algorithm !
22:10  fragOnly: and its duplicated
22:12  SpookyET: Raimondi, I fail to see what search and replace has to do with declarations.
22:12  Raimondi: SpookyET: declarations?
22:13  SpookyET: Raimondi, nevermind, looking at the wrong thing. :)
22:13  Raimondi: :)
22:13  SpookyET: Raimondi, thanks.
22:13  Raimondi: SpookyET: np
22:22 --- torio_ is now known as torio
22:27  fourcolors: hi, how can i jump to the left side of a sentence in vim?
22:28  Araxia_: fourcolors: (
22:28  fourcolors: thats not a happy face
22:28  Araxia_: not sure that's really what you're wanting, though.
22:28  fourcolors: thats a sad face
22:29  Chatov: :help
22:29  Araxia_: fourcolors: :help (
22:29  Chatov: I suck... had to try it
22:30  fourcolors: ok thanks
22:31  fourcolors: oh the command is
22:31  fourcolors: 0
22:32  Araxia_: yeah, didn't think you really wanted "sentence".
22:35  ntiy: can you please tell me why would keywords blink in vi?
22:35  spiiph: Your terminal is craaaaaaaaaaaaaaazy
22:35  spiiph: :)
22:35  homekevin: Keyword blinking is a feature, of course.
22:36  ntiy: sure :)
22:36  ntiy: how do you turn it off?
22:36  Araxia_: when netscape got rid of the blink tag they had to put it *somewhere*.
22:36  homekevin: Oh, it's not one of those features you can turn off.
22:36  homekevin: I don't think it ever occurred to anyone that you'd ever want to turn it off.
22:36  ntiy: so conclusion should be that "vi sux"?
22:36  homekevin: ntiy: In all seriousness, fix your terminal.
22:37  spiiph: ntiy, no, fix your terminal, or use a different colour scheme
22:37  ntiy: i understand. question is how?
22:37  spiiph: What terminal are you using?
22:37  homekevin: ntiy: Make $TERM something that's actually correct for the real terminal you are using, don't mess with Vim's 'term' and 't_Co" settings.
22:37  ntiy: i actually go to remote machine via ssh
22:37  spiiph: The question remains the same.
22:38  ntiy: echo $TERM
22:38  ntiy: xterm-256color
22:38  homekevin: ntiy: That's not an answer
22:38  spiiph: And are you using xterm?
22:38  ntiy: and i use terminal.app on osx
22:38  homekevin: That's a $TERM value, but whether or not it's correct depends on what your actual terminal is
22:38  homekevin: ntiy: Rumor has it Terminal.app should use dtterm
22:39  ntiy: hmm... let me try
22:39  homekevin: I cannot confirm this, because I hate all things Apple.
22:39  spiiph: I would install xterm.
22:40  ntiy: ok, now it seems to work just fine
22:40  ntiy: thanks
22:40  ntiy: take my words back -- vi does not suck, I do...
22:40  spiiph: :)
22:42  homekevin: Well, most terminals and almost all terminal configurations suck.
22:42  spiiph: xterm is nice, putty is nice.
22:42  homekevin: Relatively nice.
22:42  spiiph: putty's full screen mode is awesome.
22:42  homekevin: I wish putty would support OSC 4
22:43  spiiph: osc4?
22:43  homekevin: Yeah, for changing the color palette.
22:43  ntiy: I am not really sure that I understand what is "turminal" here. when i put in settings "declare terminal as dtterm" what do I really do?
22:43  spiiph: Ah
22:43  homekevin: ntiy: I imagine that changes the $TERM environment variable.
22:44  homekevin: ntiy: $TERM is a way of telling applications what the terminal's capabilities are.
22:44  spiiph: homekevin, well, it supports some palette changing? The putty-256color terminfo doesn't support it, but if you're evil and use xterm-256color like me, it works.
22:44  ntiy: you're right. now my TERM is "ansi"
22:45  homekevin: ntiy: and the value of $TERM is just something that applications can use to look up a description of the terminal in the terminfo database (which is also typically inaccurate)
22:45  spiiph: Yes, it's all a huge mess.
22:45  ntiy: and what is "terminfo database"?
22:45  homekevin: spiiph: I could be wrong, but I don't *think* it supports redefining the palette colors.
22:46  ntiy: sorry for noob questions
22:46  homekevin: ntiy: It's a database of terminal descriptions.
22:46  homekevin: Usually it's supplied with the ncurses package
22:46  spiiph: homekevin, well, all I know is that if I run screen with putt-256color, I can't change the colour of its status lines, whereas I can if I use xterm-256color
22:47  ntiy: :)... then what is a terminal description? is that what sets up colors for example?
22:47  graywh: ntiy, you don't suck, terminal.app does
22:47  homekevin: spiiph: That's probably not the palette being changed, though. Just the characters' fg and bg colors.
22:47  spiiph: But then it would just be dependent on the amount of colours you have.
22:47  spiiph: And that's the same for both terminfos.
22:47  homekevin: spiiph: putty-256color should obviously support setf/setaf and setb/setab, but the terminfo is probably not up to date.
22:48  spiiph: Well, it could be that.
22:48  spiiph: Been meaning to look into that some day.
22:48  spiiph: And update it
22:51  jhaddad: anyone use the php documentor for vim plugin?
22:56  prizm: How do I make settings change persist?
22:57  fow: prizm, stick it in your vimrc
22:57  prizm: right....
22:59  fow: ?
22:59  homekevin: fow: Maybe you won a prize?
23:00  homekevin: You know, for getting the right answer.
23:00  fow: sweet
23:04  homekevin: vimgor: Are you working yet?
23:04  homekevin: He's been down for about a full day now.
23:04  homekevin: I miss him so much it hurnts
23:04  homekevin: hurnts is like hurts, but even more so.
--- Log closed Thu Jan 20 23:14:16 2011
