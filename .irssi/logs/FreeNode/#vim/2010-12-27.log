--- Log opened Mon Dec 27 00:00:04 2010
00:09 --- Araxia_ is now known as Araxia
00:10  gucko: hi guys
00:10  gucko: why Vim doesn't support Arabic?
00:10  gucko: when I open Arabic text files, they look revered
00:11  gucko: I guess it's something has to do with bidi algorithm
00:12  peter_w: are you saying vim's bidi support is broken or did you just not set the right option?
00:12 --- Bucciarati is now known as Buccia`27C3
00:13  gucko: I don't know, is there an option to do?
00:14  gucko: I guess a text editor should shows up text correctly without messing with options. So I guess it's vim's bidi support that's broken
00:14  peter_w: try :set rl
00:15  peter_w: I'm not sure how vim would detect that you're using a right to left language
00:15  gucko: doesn't work
00:16  peter_w: doesn't work how
00:24  gucko: peter_w: your option doesn't work
00:24  gucko: the characters are still reveresd
00:27  peter_w: gucko: hmm, maybe you can see if anything in :he rileft.txt explains your problem, looks like bidi support is limited
00:27  peter_w: but since I don't know any right to left languages that's all I can say about it :)
00:29  fholgado: guys, how can I tell if Vim is running on a Win32 platform?
00:30  sir_lewk: look at the taskbar?
00:30  fholgado: lol... I need to know for a plugin
00:31  sir_lewk: whatever the windows version of ps|grep is I guess.  dunno
00:31  peter_w: fholgado: check for the win32 feature
00:31  fholgado: peter_w: ah, let's see...
00:31  sir_lewk: ah
01:03  homekevin: I have a new plugin that I think is pretty sweet. It's not really complete yet, but it's pretty usable (I'm using it regularly): https://github.com/KevinGoodsell/vim-csexact
01:03  homekevin: Oh, and there's no README yet, so you'll need to read the notes at the top of the plugin file for all the info.
01:06  walt: vim.
01:07  walt: homekevin: isn't there already one like that?
01:08  homekevin: Like what?
01:09  walt: homekevin: liek yours
01:09  walt: maybe that is the one I have seen
01:09  walt: I just know I saw a plugin for using gvim gui themes in terminal a while ago
01:09  homekevin: I think you might be unclear on what exactly mine does.
01:10  homekevin: There is another one that lets you use GUI themes in terminal Vim, yes.
01:10  homekevin: But it's not exactly "like" mine.
01:11  homekevin: There's CSApprox, which approximates color schemes.
01:11  walt: that's the one
01:29  b14ck: Hi all. I'm trying to get pathogen working, along with pyflakes. I've *never* used any vim plugins before. I'm running ubuntu 10.10 with vim 7.2 (cli version). My issue is:
01:29  homekevin: Your issue is nothing. Everything is good. Yay!
01:30  b14ck: I've installed pathogen to ~/.vim/autoload/pathogen.vim, and in my vimrc I've added `filetype off; filetype plugin indent on; call pathogen#runtime_append_all_bundles()`, and in my ~/.vim/bundle/ I have added `vim-pyflakes` folder.
01:30  b14ck: However, I'm not sure how to activate pyflakes, or even how to tell if pathogen is working.
01:30  b14ck: Could someone tell me how to tell if (1) pathogen is working, and (2) if pyflakes is working?
01:31  homekevin: b14ck: Sounds like your issue is not knowing how to use pyflakes. Did you read the documentation?
01:31  homekevin: I can't tell you how to know if it loaded, or how to use it, but the docs should.
01:32  b14ck: Yah I did. On the site (http://www.vim.org/scripts/script.php?script_id=2441) it tell syou to make sure that `filetype plugin indent on` is set, (which it is).
01:32  b14ck: But that's really all I have :o
01:33  b14ck: I'm a total noob with vim scripts and plugins, I'm trying to learn how to use them.
01:33  b14ck: I'm embarassed to have been coding all these years without really learning my editor.
01:33  b14ck: =/
01:34  homekevin: Well, from the description I guess you should edit some python code, and make mistakes.
01:34  b14ck: I've tried, however I get nothing.
01:34  b14ck: I just want to see if it is loaded at all.
01:34  b14ck: I have a feeling it isn't.
01:34  homekevin: It's not very clear, but presumably you had some idea of what should happen.
01:34  homekevin: Although, I think you messed up the filetype stuff.
01:35  b14ck: Oh ya?
01:35  homekevin: Presumably :filetype on should *follow* the activation of pathogen.
01:35  homekevin: But you should go by what the documentation says.
01:36  b14ck: Ok, better question:
01:36  b14ck: Are there any really simple plugins I could install to check and see if I've got pathogen working right?
01:36  b14ck: I'll install anything, just want to make sure something is working here.
01:37  homekevin: b14ck: let g:foo_loaded = 1
01:37  homekevin: That's a simple plugin
01:37  homekevin: Put it in bundle/foo/foo.vim
01:37  b14ck: ok
01:37  b14ck: done
01:38  homekevin: Restart, type :echo get(g:, "foo_loaded", "BROKEN")
01:38  b14ck: I get "BROKEN"
01:38  homekevin: Well that sucks.
01:39  b14ck: Here--let me start this from scratch.
01:39  b14ck: I'll wipe my vimrc.
01:39  b14ck: And start over.
01:39  b14ck: I guess I mucked something up.
01:39  homekevin: Well, I get BROKEN also.
01:39  codeboy: hey guys, I have an eruby file with javascript code in it... how do I get it to indent the javascript properly?
01:40  b14ck: Well, that's no good then =p
01:40  homekevin: b14ck: I screwed up the instructions.
01:40  homekevin: The file needed to be bundle/foo/plugin/foo.vim
01:40  b14ck: OK, let me try that
01:41  b14ck: homekevin: now I get 1
01:41  b14ck: I guess that is good.
01:41  homekevin: b14ck: Yeah, should be working.
01:41  homekevin: b14ck: You can also check :set runtimepath?
01:42  b14ck: runtimepath=~/.vim,~/.vim/bundle/foo,~/.vim/bundle/pyflakes-vim,/var/lib/vim/a
01:42  b14ck: ddons,/usr/share/vim/vimfiles,/usr/share/vim/vim72,/usr/share/vim/vimfiles/after
01:42  b14ck: err
01:42  b14ck: sorry
01:42  b14ck: http://pastie.org/1407565
01:42  homekevin: That looks right.
01:42  b14ck: Here's something weird.
01:43  homekevin: Remember to nuke foo
01:43  b14ck: Inside my ~/.vim/bundle/pyflakes-vim folder, I have one file and one folder: `pyflakes.vim` and `pyflakes`/ folder.
01:43  b14ck: Would that be messing up the loading? Since the foo plugin needed a plugin directory in there?
01:43  homekevin: b14ck: That looks wrong.
01:44  b14ck: What the heck
01:44  homekevin: You might need to double-check the installation instructions for pyflakes.
01:44  b14ck: Ok.
01:44  b14ck: I'm going to nuke that and start from scratch.
01:44  b14ck: At least I know that pathogen is working though.
01:44  b14ck: Thanks so much :)
01:44  walt: b14ck: each folder under bundle is it's own vimruntime. So you need a plugin directory inside thet
01:44  walt: that*
01:45  b14ck: I see.
01:45  homekevin: Not in this case.
01:45  walt: b14ck: so, ~/.vim/bundle/pyflakes-vim/plugin/pyflakes.vim
01:45  homekevin: It's a ftplugin, so he needs a ftplugin directory.
01:45  walt: homekevin: hm?
01:45  walt: ah yes
01:45  walt: ok
01:45  walt: an ftplugin dir then
01:45  b14ck: homekevin: in the pyflakes installation instructions it says NOT to put it into ftplugin directory if you're using pathogen
01:45  b14ck: Although, I'm not sure if those instructions are right :(
01:46  b14ck: https://github.com/kevinw/pyflakes-vim
01:46  homekevin: b14ck: That would be a misunderstanding, I think.
01:46  b14ck: In teh `quick installation` section on that page.
01:46  b14ck: It says in step 3 how to do it with pathogen.
01:46  b14ck: But I think that is wrong.
01:46  b14ck: If you're using pathogen, unzip the contents of pyflakes-vim.zip into its own bundle directory, i.e. into ~/.vim/bundle/pyflakes-vim/.
01:46  homekevin: It definitely goes in an ftplugin folder, just not the *main* ftplugin folder.
01:46  b14ck: Oh.
01:46  b14ck: That would explain it!
01:46  b14ck: I think I can get it working now.
01:46  b14ck: That was confusing for me
01:46  homekevin: b14ck: But to be clear, it should *already* contain an ftplugin folder inside the zip.
01:47  b14ck: Right, it does.
01:47  b14ck: I saw that, and thought it was weird, so I moved it out of there.
01:47  b14ck: I thought that only applied if you weren't using pathogen.
01:47  homekevin: So you should unzip into bundle/pyflakes-vim/ and that should give you a bundle/pyflakes-vim/ftplugin folder
01:48  homekevin: What pathogen does, is make every folder inside of 'bundle' act like a separate .vim folder.
01:48  b14ck: Oh.
01:48  homekevin: The subfolders of each bundle mirror the subfolders of .vim
01:48  b14ck: I see.
01:49  b14ck: That makes much more sense in my head now.
01:53  b14ck: Cool, pyflakes works now.
01:53  b14ck: :)
01:54  b14ck: That's pretty handy,
01:54  b14ck: Now time to revise my normal vimrc and learn how to actually do stuff!
01:54  mail: http://stackoverflow.com/questions/2974192/how-can-i-pare-down-vims-buffer-list-to-only-include-active-buffers/3180886#3180886
01:54  mail: love that guy
02:12  homekevin: So, I don't know if I can convince anyone else to care about this, but I was looking through the colorschemes in the SamplePack today....
02:13  homekevin: And out of 137 plugins, I counted 9 that actually have licenses allowing redistribution.
02:13  homekevin: Another 7 (I think) claim to be "public domain"
02:14  homekevin: And one lists "gpl" without actually including any of the necessary text.
02:16  homekevin: I think people who care about Free Software should care about copyright and licensing, and that includes both having that information in anything they distribute, and respecting other people's copyrights.
02:17  homekevin: As it stands, only a small percentage of the ColorSamplePack can be distributed without infringing copyright.
02:20  rson:  this might be worth bringing up on the mailing list, you'd likely reach more people and get more responses there
02:22  rson: I've never thought about that before personally.  Makes me wonder if I should remove my modified scheme from my github repo
--- Log closed Mon Dec 27 02:33:50 2010
--- Log opened Mon Dec 27 02:39:17 2010
02:39 --- Users 520 nicks [0 ops, 0 halfops, 0 voices, 520 normal]
02:40 --- Channel #vim was synced in 66 seconds
03:00  tappi: can i somehow reference the selected text of visual mode in the commandline
03:01  tappi: like if i wanted to quickly do a substitution on some text, i'd want to select it instead of writing it
03:02  Raimondi: Vim automatically inserts the range of the visual selection when you press : , it appears like :'<,'>
03:03  tappi: but that's just a range?
03:03  tappi: i mean i've used it to define the lines that i want the substitution to work on, but what if i wanted to actually reference the selected text, or does that work as well?
03:04  tappi: ie. s:\('<,'>\):_\1: for instance to add a _ to the selected text
03:05  Raimondi: tappi: :h \%V
03:05  tappi: thanks
03:06  Raimondi: tappi: You might want to read  :h /\_.
03:06  tappi: umm
03:07  tappi: this doesn't help me one bit
03:08  tappi: i mean \%V is functionally the same as just using the visually selected are as a _range_
03:08  tappi: i don't want a _range_, i want the selected text
03:09  tappi: as in, i want to reference the selected text to so a substitution on _all_ items that match the text for instance
03:09  tappi: s/so/do/
03:10  homekevin: tappi: You familiar with *?
03:10  tappi: in regex, yeah?
03:10  homekevin: No.
03:10  homekevin: As a normal mode command.
03:10  homekevin: :h star
03:11  homekevin: If you are visually selecting when you can be *ing, you're wasting a lot of effort.
03:11  tappi: if i'm stomping a key instead of just doing a regex i'm wasting a lot of effort
03:11  homekevin: But, if that doesn't work for what you are doing, you can also search for the thing, then use :s//<replacement>
03:12  tappi: again
03:12  tappi: i don't want to write it
03:12  homekevin: I don't think you understood * if you think it's harder than a regex
03:12  tappi: also, visually selecting a unit takes exactly one key more
03:12  tappi: than *
03:13  Raimondi: tappi: I'm not sure what you need, maybe yank the visual selection and do something like  :%s/pattern/\=@"/
03:14  tappi: what does =@ do?
03:15  Raimondi: tappi: :h sub-replace-\=
03:15  homekevin: I think he wants to make the visual selection into the search term for substitute.
03:15  tappi: yeah
03:15  homekevin: I'm suggesting making it the search term first (possibly with * if it's a word), then :s//<replacement>
03:15  tappi: oh
03:15  tappi: does that work?
03:15  tappi: sorry, i didn't know that :P
03:16  homekevin: I don't know of an easy way to put the visual selection into "/
03:16  tappi: i assumed you meant doing something like cw "string" ctrl-n . repeat
03:16  homekevin: I mean, it's easy enough to *do* that, but the meaning of it will be wrong in many cases.
03:16  Raimondi: Well, yank it and insert it with Ctrl-R
03:16  Raimondi: A mapping would help
03:16  homekevin: Raimondi: Yeah, but that has the same problem I hinted at. It's not a pattern, but will be interpretted a one.
03:17  homekevin: *as one
03:17  homekevin: So if it has magic characters in it, weird things will happen
03:17  tappi: homekevin can i reference the hilighted pattern in that
03:17  tappi: because i'm not actually changing it to something static, i'm just adding stuff actually
03:20  Raimondi: tappi: :%s/\%V\_.\%V/x&/  will prepend an x to the selection, is that what you want? if not I'll just shut up
03:20  homekevin: tappi: I don't know what you mean. The best thing you can do probably is yank the selection. The you can use it wherever you need to.
03:20  homekevin: There's really not a lot else you can do with a visual selection.
03:21  homekevin: Other than the various visual mode commands, or yank
03:21  Raimondi: tappi: Correction  :%s/\%V\_.*\%V/x&/
03:22  tappi: sadly %V restricts the substitution to the selected area, i want it to effect any range i define
03:22  tappi: *affect
03:22  tappi: really i don't care which way i do it, but i don't want to write the frigging variable name i'm chaning, i'm getting tired of it :P
03:23  tappi: if i don't find a solution i'm gonna have to get a refactoring addon
03:23  Raimondi: tappi: Why don't you paste a sample and tell us how do you eant to change it?
03:23  homekevin: tappi: So what's the problem with this scenario: 1) Visually select 2) yank 3) enter :s/<CTRL-R>"/<replacement>
03:23  Raimondi: want*
03:23  tappi: i tried that when you mentioned that but i don't think ctrl-r is doing the same thing on my end than it is on yours
03:24  tappi: "Redo [count] changes which were undone."
03:24  homekevin: Did you map it weirdly?
03:24  tappi: that's from my help file
03:24  homekevin: tappi: :h c_CTRL-R
03:25  tappi: oh right
03:26  tappi: homekevin, thanks, that'll do
03:26  homekevin: Raimondi suggested it first
03:27  tappi: yeah, i tried it when he suggested it but i didn't know how to use ctrl-r
03:28  tappi: anyways, thanks for both of you for helping
03:33  Raimondi: You got it working then, good :)
05:28  fholgado: guys, I am using the split() function and passing it a variable as the separator, and it does not seem to be working properly. Any ideas why?
05:28  fholgado: I am declaring the variable as such: let s:separator = '/'
05:29  fholgado: and calling it here: 	    let s:separator = '/'
05:29  fholgado: whoops
05:29  fholgado: split(l:bufPath,s:separator,0)
05:29  fholgado: it doesn't throw any errors, but it does not split the string properly
05:30  fholgado: it works fine when I call it like this: split(l:bufPath,'/',0)
05:38  homekevin: fholgado: Can you give a real example? Most likely you are making a mistake that we can't see from what you've given us.
05:38  fholgado: homekevin: let me show it to you in context
05:41  fholgado: http://vim.pastey.net/144316
05:42  fholgado: homekevin: it's relatively straightforward,..
05:45  homekevin: Why does the Vim pastebin have to be the worst one on the net?
05:46  fholgado: jeez... I know
05:46  gkatsev: use whatevre pastebin you want.
05:48  homekevin: fholgado: Given that it's still not a complete example, I don't know what to tell you other than "it works with variables."
05:48  homekevin: http://paste.pocoo.org/show/310166/
05:49  fholgado: homekevin: thanks for the verification, let me give you the full thing
05:50  homekevin: I'd rather have a minimal example. If it's a shitload of stuff I can't be bothered to decode it all.
05:50  homekevin: Plus, you'll most likely figure out the problem in producing a minimal example.
05:50  fholgado: homekevin: yeah, that's what I tried to do earlier
05:51  fholgado: homekevin: at least I know it works now, I've got to be doing something dumb that's keeping it from working
05:51  homekevin: The obvious problem would be that the variables don't have the values you think they do.
05:52  fholgado: homekevin: yeah, I have put in some debugging code to see what's being shoved in there...
05:52  homekevin: ...which is when the debugger, lame as it is, comes in handy.
05:52  fholgado: homekevin: here is the full function: http://paste.pocoo.org/show/310167/
05:52  homekevin: fholgado: But you probably won't see if there's, say, a space on the end.
05:55  fholgado: homekevin: ha... it looks like spaces it is!
05:56  homekevin: I don't see where an extra space is added.
05:57  homekevin: But I do see debug statements that report *old* values of a variable.
05:58  fholgado: homekevin: it looks as if because the code is being executed many times throughout the loop, it's causing problems
05:58  fholgado: homekevin: I am going to move it outside of the loop and see if that fixes it
--- Log closed Mon Dec 27 06:32:37 2010
--- Log opened Mon Dec 27 06:37:58 2010
06:37 --- Users 498 nicks [0 ops, 0 halfops, 0 voices, 498 normal]
06:39 --- Channel #vim was synced in 68 seconds
06:59  wooden: berserkerxiii: :w <somepath>
07:03 --- Araxia_ is now known as Araxia
07:06  berserkerxiii: wooden: is there a way to set it so that vim always saves to some predetermined folder?
07:10  wooden: berserkerxiii: Try reading :help write
07:12 --- Araxia_ is now known as Araxia
07:14  berserkerxiii: wooden: thank you that was interesting. i did not find the answer to my question but that's ok.
07:18  wooden: berserkerxiii: Sorry.  I'm sure there's some way.  The way it works by default is it saves to the directory you launched vim from.  Or, if you opened a file by supplying it as an argument to vim, it will save it back to that path.
07:19  berserkerxiii: wooden: i thought it just saves to home. interesting. typing out the path is not a big deal for me though. im glad i have the option
07:35  TzilTzal: Hi
07:38 --- Araxia_ is now known as Araxia
07:50  homekevin: berserkerxiii: Your request is extremely strange
07:50  homekevin: Vim saves where you tell it to save, as any application should.
07:51  berserkerxiii: homekevin: vim is like a woman. i feel i shouldn't have to tell it twice.
07:51  zomg: Sounds like he wants a default location for when he doesn't specify the file when opening vim
07:51  zomg: eg. if you are in /foo/bar and type "vim", it'll save to ~
07:51  zomg: but if you type "vim baz.txt", it'll save to /foo/bar/baz.txt
07:52  zomg: I mean in the first case it'll default to saving to a file under ~ instead of the current path
07:52  zomg: iirc anyway
07:52  homekevin: That doesn't make any sense.
07:53  homekevin: Relative paths are relative to the current directory, not something arbitrary like $HOME.
07:53  homekevin: And a filename by itself is a relative path.
07:53  zomg: Must be something gvim does on windows then =)
07:53  homekevin: Vim works with filenames exactly the way a shell does, or any sane application.
07:54  homekevin: No, I really doubt that.
07:54  homekevin: It may *start* with a particular current directory.
07:54  zomg: No idea where I got the idea then
07:54  zomg: but tbh berserkerxiii's problem doesn't make much sense if it doesn't
07:55  homekevin: If it doesn't what?
07:55  homekevin: I mean, if you want to save files to ~ then :cd ~
07:56  homekevin: Then you can :w somefile all you want and it will go in ~/somefile.
08:05  TzilTzal: Is it possible to communicate with a plugin through a socket?
08:06  homekevin: Only if the plugin is willing
08:06  TzilTzal: ?
08:07  homekevin: Maybe you should clarify your question.
08:08  homekevin: It should be somewhat obvious that a plugin defines its own interface, and few if any include a socket as part of that interface.
08:08  homekevin: At least as far as I know.
08:09  TzilTzal: well, most plugins are vim scripts.
08:09  homekevin: But if the question is whether it is theoretically possible to write a plugin that can send and receive data over a socket, I don't see why not. But it wouldn't necessarily be easy.
08:10  TzilTzal: well, I'd like to be able to access the text in a buffer.
08:11  TzilTzal: or know what changes have been made to the text.
08:20 --- sacho_ is now known as sacho
09:10  ns5: Is it possible to put something in a file so that whenever vim opens this file tab is set to 4 spaces?
09:11  Random832: # vim:ts=4
09:11  Random832: :help modeline
09:12  ns5: Random832: Cool, thanks
09:43  TzilTzal: how can I tell what options was vim compiled with?
09:44  tvm: vim --version
09:47  TzilTzal: thx
10:16  sudonotplease: Is there a shortcut to save every open buffer?
10:16  sudonotplease: Command, I suppose.
10:18  abbe: sudonotplease, :wa ?
10:18  sudonotplease: Thanks abbe :)
10:20  FernandoBasso:  /\.$ matches a dot at the end of line. /\.$\_s* that should match the end of line, plus a line break followed by any number of white spaces does not work. What is wrong there?
--- Log closed Mon Dec 27 10:32:22 2010
--- Log opened Mon Dec 27 10:37:49 2010
10:37 --- Users 516 nicks [0 ops, 0 halfops, 0 voices, 516 normal]
10:38 --- Channel #vim was synced in 66 seconds
10:55  bairui: FernandoBasso: lose the $
10:55  FernandoBasso: bairui: Then it matches dots in other places.
10:55  FernandoBasso: I tried.
10:56  TzilTzal: how can the completion popup menu be invoked from normal mode?
10:56  bairui: FernandoBasso: what are you trying to achieve?
10:56  mosno: is it worth learning nvi first, ie. to nail the important subset of vim commands?
10:56  bairui: TzilTzal: Insert completion from within normal mode would be a bit counterintuitive...
10:57  bairui: mosno: no
10:57  TzilTzal: bairui - can't it be invoked by a script?
10:57  zomg: mosno: I just started using vim and learned as I went
10:57  FernandoBasso: bairui: I am learning. bairui Please, look at the final example in 27.8. Even that one is not working here.
10:57  zomg: I had no previous experience with vi or any other editor like it
10:58  bairui: TzilTzal: :help function-list   and search for   completion   <-- but, I don't think so.
10:58  FernandoBasso: mosno: vimtutor, and help usr_3.txt/usr_4.txt is a very good start. Indeed.
10:58  complete: Good Morning from Hamburg!
10:59  bairui: FernandoBasso: this one?    /"\_[^"]*"
10:59  FernandoBasso: complete: Good morning from Brazil.
10:59  complete: I wonder: When you search through your code, say for all occurances of the function hello() - how do you do it? do you just grep -r? Or do you use some tools?
10:59  seku: mosno: just do vimtutor, and after that check things up when you wish something could be done easier
10:59  FernandoBasso: bairui: Yeah. I use a line like "lorem ipsum (new line here) dolor sit amet" and it does *not* match.
10:59  bairui: complete: the   :grep   (Vim internal) command is useful for that.   :help :grep
11:00  FernandoBasso: Isn't that example supposed to work on a line like the one I just mentioned?
11:00  complete: bairui: it searches whole directories with subdirectories?
11:00  mosno: bairui & zomg & FernandoBasso & seku: okay. note that i've gone through the manual before, but i just feel that there's a lot to remember, and that if i had a simpler vi implementation then i wouldn't get distracted by the non-core stuff.
11:02  FernandoBasso: mosno: When you read the manual, just note down the things you feel you'll possible use.
11:02  bairui: FernandoBasso: works for me
11:05  FernandoBasso: bairui: I tried mv ~/.vimrc{,.bkp} but nothing changed. Let me see. Clearly something is wrong.
11:05  bairui: complete: you can use recursive globs (:help starstar)  So, something like:   :vimgrep pattern **/*     will find pattern in all files from here down.
11:06  complete: bairui: ok. i currently use custom scripts that are based on grep. i think i will continue to do so.
11:07  TzilTzal: what does &cp stand for?
11:07  bairui: complete: fair enough. The up side to using Vim's internal :vimgrep is that the results go to the quickfix window, which is another nifty tool.   :help quickfix
11:08  FernandoBasso: mv .vimrc{,.bkp} does not change anything either. :/
11:08  bairui: TzilTzal: the value of option 'cp' / 'compatible'
11:09  bairui: and, FernandoBasso, you don't have a nasty session file lingering?
11:09  FernandoBasso: bairui: Aha! vim -u NONE works!
11:09  bairui: so, I'd look for a session file
11:10 * bairui hates session files
11:10  complete: bairui: i tried ":vimgrep pattern **/*" no what do i do to jump through the hits?
11:10  bairui: complete: try    :copen
11:11  FernandoBasso: bairui: I am getting frustrated with session files. The don't save some unlisted buffers. If I reopen with -S, it creates a [No name] buffer for every :help buffer I have open.
11:11  complete: bairui: ok. i have a window on the bottom of the screen with the files now. each time i select on, the cursor is in the upper window at the hit. interesting.
11:12  bairui: complete: learn to love the quickfix window. Read up on how to use it - it will increase your vim awesomeness. :)
11:12  bairui: FernandoBasso: yeah...
11:12  FernandoBasso: bairui: viminfo is showing ~MSle0~/"\_[^]*" <-- Isn't this related with magic, etc?
11:12  complete: bairui: is it possible to exclude directories from :vimgrep?
11:12  FernandoBasso: It is a lingering session in .viminfo, I think. Let me try.
11:13  TzilTzal: how can I check from within a script if vim has +python? (i.e. was compiled with python support)
11:13  bairui: complete: dunno... read the docs, see how you go. You could always use Vim's search within the quickfix window to find what you're after...
11:13  bairui: TzilTzal:     if has('python')
11:14  bairui: so, TzilTzal, :help has(
11:14  TzilTzal: thx
11:14  bairui: np
11:14  TzilTzal: was trying has_python :)
11:14  bairui: so close! ;)
11:14  TzilTzal: at least I was close :P
11:14  TzilTzal: hehe
11:14  FernandoBasso: bairui: Sessions would be great if they worked better. They need to work more on this.
11:14  complete: bairui: the thing is my custom search scripts exclude some huge stuff like the framework which speeds things up
11:15  bairui: complete: well, I only mentioned :vimgrep (well, not really), but there is also :grep and the magical 'grepprg' option. Look into it. :)
11:15  complete: bairui: ok
11:16  bairui: FernandoBasso: I'm not sure what the gods think of sessions, but I have long avoided them. They seem to cause more grief than they're worth.
11:16  FernandoBasso:  bairui I removed ~/.vim/backup/* and cleaned .viminfo. Seems to be working now. Thanks.
11:16  bairui: np
11:16  FernandoBasso: bairui: Do you use any thing to 'reopen' you 'entire project'?
11:17  FernandoBasso: Even restoring cursor position is already of great help.
11:17  bairui: ah... that nice little session has worked up an appetite! Time for dinner! :D   (FernandoBasso, I use the Project plugin for that).   Later, lads.
11:20  mosno: FernandoBasso, that could work i guess. one more reason to get this wiki up and running i suppose
11:22  FernandoBasso: mosno: I am learning vim myself. I read on a site with vim tips: "15 years of vi, 7 years of vim and still learning"..
11:22  FernandoBasso: mosno: http://www.rayninfo.co.uk/vimtips.html
11:23  peter_w: if he used vi until 7 years ago his brains are probably severely damaged :)
11:25  mosno: i have been using vim for years
11:25  mosno: i just eternally suck at it ;)
11:27  FernandoBasso: Well, I think one should learn at least half a help section a day, starting from usr_01.txt, and make notes and *test*. One year doing that would make wonders.
11:27  FernandoBasso: Too bad we can't always do this.
11:37  seku: o.0
11:38  FernandoBasso: seku: O.o
11:38  seku: i just did vimtutor and started using it
11:39  FernandoBasso: vimtutor is very good. Indeed.
11:39  seku: i wouldn't learn all the motions etc in one go, of course. I'd check back when i thought i was doing something the hard way
11:40  FernandoBasso: Sure.
11:40 * seku wants to write and not learn to spell out vim manual
11:40  FernandoBasso: According to many studies, review is the key for learning anything.
11:40  seku: knowing the contents roughly is enough ;)
11:41  FernandoBasso: Brian Tracy talks about that in "Accelerated Learning Techniques".
11:41  seku: its not accelerated. Trying to read a manual like a book is like Slowed Down Learning Technique.
11:42  seku: books too... First go to excercises, and start doing them
11:42  seku: and use the book as a source to solve them
11:43  FernandoBasso: seku: I my humble opinion, whe should read, apply *immediately*, make changes, create our own examples, and make notes. Just reading helps too littel.
11:44  seku: sure ;) everyone in their way
11:44  seku: i just do like that
11:45  FernandoBasso: :)
11:45  seku: oops... i wrote that like i was telling someone to do something ;) That wasn't my intention
11:46  FernandoBasso: I din't understand it like what you just stated.
11:48  FernandoBasso: I mean, I understood it like that was you opinion. Not an order.
11:48  FernandoBasso: :D
11:51  nimred: whet's wrong when spaces are displayed as "?" ?
11:52  FernandoBasso: nimred: Perhaps the file encoding?
11:53  FernandoBasso: I've never seen this, though.
11:56  FernandoBasso: That 'Project' plugin has not been updated since 2006.
12:00  TzilTzal: s there a way to specify that an argument to a function must be in integer?\
12:00  Axioplase_: add 1 to it :)
12:01  TzilTzal: ?
12:09  nimred: FernandoBasso: http://metabox.it/GgoYr
12:11  FernandoBasso: nimred: xmonad?
12:12  nimred: FernandoBasso: yes
12:14  FernandoBasso: Cool! I used it for about two months. Very nice. It is a mouseless WM. Exelent with a mouseless editor like vim!
12:14  FernandoBasso: Mouseless if we want, of course.
12:14  akira42: FernandoBasso: what WM?
12:15  FernandoBasso: xmonad
12:15  nimred: FernandoBasso: i use mouse the less as possible
12:15  nimred: i hate it
12:15  FernandoBasso: nimred: Me too.
12:16 * akira42 uses ratpoison as his WM
12:16  akira42: also usable without a mouse
12:16  akira42: and behaves leike GNU screen
12:17  FernandoBasso: akira42: A very good one, as well.
12:17  akira42: s/leike/like/
12:17  akira42: and tmux is a very good "WM" for the console
12:21  FernandoBasso: akira42: Sure.
12:22  nimred: FernandoBasso: so which to oslve my fucking space problem ?
12:22  FernandoBasso: nimred: Try: :edit ++ff=unix
12:23  FernandoBasso: By the way, where did this file came from?
12:24  FernandoBasso: Also, :h 'encoding' and 'fileencoding' might help.
12:25  nimred: FernandoBasso: file format already is unix as shown on http://metabox.it/GgoYr isn't it ?
12:25  FernandoBasso: Try setting encoding and fileencoding and then save the file.
12:26  nimred: FernandoBasso: which way ?
12:27  FernandoBasso: nimred: Are you sure they are spaces?
12:28  nimred: FernandoBasso: yes. I checked editing using another sditor
12:28  FernandoBasso: Why there are ???? only on those lines?
12:28  nimred: spaces or tabs perhaps
12:28  peter_w: looks like tabs
12:29  FernandoBasso: nimred: With the cursor over one of them, do ga and compare with a ga on a wite space or a tab.
12:29  peter_w: because you have plenty of whitesplace which is not ?
12:29  peter_w: anyway, :he 'list
12:30  nimred: they are tabs
12:30  nimred: any tabs or spaces i do not want it to be diisplayes as "?"
12:30  nimred: >??? = one tab
12:33  FernandoBasso: nimred: Try :211,219s/.\{4}/    /
12:34  FernandoBasso: Or :211,219s/.\{4}/\t/ and see what happens.
12:34  peter_w: that is unlikely to do what you expect it to do
12:36  FernandoBasso: Why?
12:37  nimred: here is what is happening : http://metabox.it/LXKK3
12:37  nimred: ...
12:37  nimred: using :211,219s/.\{4}/\t/
12:37  peter_w: because you didn't expect that :)
12:38  peter_w: but if he doesn't want to read :he 'list he can't be helped
12:38  nimred: 211,219s/.\{4}/    / whell replaces tabs
12:38  nimred: but what is the yellow appearing ?
12:38  FernandoBasso: nimred: So, it highlighted everything? How, if just some lines were used in the range?
12:39  nimred: FernandoBasso: it now highlights every file i open
12:40  FernandoBasso: :/
12:41  nimred: FernandoBasso: sure. Here is my ~/.vimrc --> http://sprunge.us/LcMQ
12:41  nimred: can you have a look please ?
12:41  nimred: indulgence i am a vim nb !
12:43  FernandoBasso: nimred: It is not opening. Loading forever...
12:44  FernandoBasso: I think Brazil is blocked on sprunge. I remember other times I could not open pages there.
12:44  peter_w: it's just slow
12:46  FernandoBasso: Twhttp://metabox.it/sNfZw <--
12:46  FernandoBasso: More than two minutes, and that is the progress.
12:48  nimred: FernandoBasso: why do you live in brasil too !
12:48  nimred: go to china !
12:48  FernandoBasso: Still loading at 0%. Damn it!
12:49 --- shai_ is now known as shai
12:49  peth: nimred: do you want tabs to display as ">???" ?
12:49  shai: Hi :) while I have a lot of color schemes installed in my ~/.vim/colors ; I tried using this script (http://vim.wikia.com/wiki/Switch_color_schemes) to use my F8 key to switch between them. It begins to switch and stops after just 10 (out of a hundred themes). Is there anything else I can do to switch between them so I can easily decide which one I want?
12:50  nimred: FernandoBasso: http://paste.pocoo.org/show/310271/
12:50  FernandoBasso: shai: There are some plugins.
12:50  nimred: peth: sure not
12:50  nimred: peth: and that's why i am askiing here
12:50  peter_w: and that's why you have to read :he 'list
12:50  peth: then you should not set your listchars to >?
12:51  FernandoBasso: nimred: yeah. You have some listchars settings in .vimrc
12:51  shai: FernandoBasso, where?
12:51  nimred: FernandoBasso, peth: ah yes
12:51  nimred: sorry for noising
12:52  FernandoBasso: shai: This is one http://www.vim.org/scripts/script.php?script_id=1488
12:56  shai: FernandoBasso, Perfect !!!
12:56  shai: Thanks man :)
12:56  FernandoBasso: shai: :) What if I am a woman?
12:57  FernandoBasso: Or eve a heman?
12:57  shai: In that case ... I'll rephrase that..
12:57  shai: Thanks FernandoBasso :)
12:57  FernandoBasso: Okay. Make your sentences reusable. Like code.
12:58  FernandoBasso: hehe
12:58  shai: ;)
13:03 --- RichiH is now known as RichiH_27c3
13:13  imme: hey, is there a command to delete backwards all space-chars except for the first one in the backward-row ?
13:18  mlq: hello, i installed vim-ruby (https://github.com/vim-ruby), but the syntax highlighting does not work for me - has someone eventually an idea what might be wrong?
13:19  imme: To delete backwards i now have: :nmap db BElldw
13:21  FernandoBasso: Is \_ an similar to an OR operator?
13:21  peter_w: imme: and the problem is?
13:22  imme: mlq: When you have the ruby file open, what does :se ft say?
13:22  imme: peter_w: nothing, just wondering if there's a standard vim-style instead of my own mapping.
13:23  imme: peter_w: 'cause if there is, it might be better to learn to do it like that, so i don't have to put my mapping on another computer when i work in vim there.
13:25  peter_w: imme: well, there's not a single command for something that specific
13:25 --- raorn_ is now known as raorn
13:25  mlq: imme: filetype=ruby
13:35 --- wtfness is now known as foocraft
13:36  minikomi: hi
13:36  rindolf: Hi minikomi
13:37  minikomi: i turend on control characters with :list...
13:37  minikomi: sorry "turned"
13:37  minikomi: but they are too prominent.. is there a way to adjust them to be more like the bg color?
13:37  minikomi: sorry im not sure of the exact syntax to put in my colorscheme...
13:38  imme: mlq: and :se syn ?
13:39  minikomi: hi Tag not working im afraid ..
13:42  imme: minikomi: maybe this can help:?  :sy li Spe<Tab>
13:43  minikomi: hmm
13:43  minikomi: invalid syntax ..
13:43  minikomi: list?
13:43  imme: minikomi: yup :p
13:44  minikomi: sy list Spe<Tab> -> no such hilgjight group name
13:44  imme: minikomi: I thought it would work, 'cause tab-completion worked :p
13:44  minikomi: ah
13:44  minikomi: heheh
13:44  imme: minikomi: Then try without Spe, only <Tab> it will probably/hopefully give a long list.
13:44  minikomi: i just cut n pasted
13:44  imme: minikomi: doh! :p
13:47  prodigel: hi all. I've just discovered FuzzyFinder plugin, it's really great if you work on several files organized in a deep folder structure. My problem is that if I use FufFile **/ it takes some good seconds before I can search for a file, and that's probably because it crawls the vendor library folders, which I'm not touching usually. Can I specify an exclusion path somehow? like **/ and NOT(vendor) ?
13:47  minikomi: grr
13:47  mlq: imme: same, also ruby
13:47  minikomi: no luck..
13:48  imme: minikomi: you don't see any words or not the ones you're looking for?
13:48  minikomi: tried all the tab related ones but no changes
13:50  minikomi: set list
13:50  minikomi: set listchars=tab:▸\
13:50  minikomi: comes up fine.. looks good but is a little too distracting
13:52  imme: minikomi: these( tab:⤜┈ ) are much nicer :p , perhaps just try a different colo ?
13:52  minikomi: hrm..
13:53  minikomi: i like molokai a lot but just would like to dim the "list chars"
13:53  minikomi: wonder what syntax they fall under..
13:55  imme: minikomi: think i found it, :verbose hi NonText
13:57  minikomi: doh
13:57  minikomi: nope
14:01  minikomi: got it!
14:01  minikomi: SpecialKey
14:02  durexlw: Anyone here uses VIM to debug ruby?
14:03  minikomi: imme: SpecialKey
14:04  imme: minikomi: yup, congratZ!   :p
14:04  imme: minikomi: next time it occurs, it's explanation is in :he highlight-groups
14:04  imme: minikomi: Just found that one...
14:04  minikomi: cool
14:05  minikomi: knew it would be there somewhere...
14:05  minikomi: had a little fun turning my scheme into patchwork trying a bunch though haha
14:05  rindolf: durexlw: I only use it to write Ruby and other languages, not to debug them.
14:06  durexlw: rindolf: you never use a debugger then?
14:06  rindolf: durexlw: I do.
14:06  rindolf: durexlw: from the command-line.
14:06  rindolf: durexlw: I also have automated tests.
14:07  durexlw: got it... is there somewhere I can read up on the command line debugger?
14:07  rindolf: durexlw: well, they vary from language to language.
14:08  rindolf: durexlw: try searching for "ruby debugger"
14:08  durexlw: alraedy there :) thanks man
14:09  rindolf: durexlw: see http://community.livejournal.com/shlomif_tech/15203.html
14:10  durexlw: Rubymine works fine by the way on the debug department. Just seems worth learnign vim
14:28  imme: mlq: do other syntax-highlightings work ?
--- Log closed Mon Dec 27 14:33:10 2010
--- Log opened Mon Dec 27 14:38:36 2010
14:38 --- Users 520 nicks [0 ops, 0 halfops, 0 voices, 520 normal]
14:39 --- Channel #vim was synced in 69 seconds
14:45  abhijeet: hi guyes
14:45  abhijeet: i m trying to create the mapping CRTL-SHIFT-t..
14:46  abhijeet: with map <C-S-t> but it is not working
14:46  peter_w: you can't do that
14:47  strull: generally ctrl-letter == ctrl-shift-letter
14:47  abhijeet: peter_w, could you please explain how can i do it
14:47 --- forneus_ is now known as forneus
14:47  abhijeet: strull, yeah that is happening..
14:47  peter_w: abhijeet: you can't
14:47  abhijeet: peter_w, so i can't combine both??
14:48  peter_w: you have to pick some other key sequence if you want to map it in vim
14:48  abhijeet: peter_w, why is it so that we can't combine ctrl and shift?
14:48  peter_w: probably because it won't work in most terminals
14:49  abhijeet: peter_w, will alt ctrl work?
14:50  strull: most likely yes
14:50  abhijeet: strull, will it be like <Ctrl-Alt-t> or <CA-t>
14:51  strull: <c-a-t> or <c-m-t>
14:51  abhijeet: strull, <CA-t> is also workig
14:52  abhijeet: strull, what does m stands for
14:52  strull: meta
14:52  abhijeet: means windows button
14:52  strull: abhijeet: don't adress your questions to a single person
14:52  abhijeet: ok
15:14  seku: meta, super and ^. The funny modifiers at alt, win-key and ctrl. I don't know what altgr is, though. ISO_Level3_Shift according to xev ^^
15:21  tfc: altgr exists on german keyboards. It is the right alt, which enables @ at the Q-key
--- Log closed Mon Dec 27 15:38:06 2010
--- Log opened Mon Dec 27 15:38:28 2010
15:38 --- Users 525 nicks [0 ops, 0 halfops, 0 voices, 525 normal]
15:39 --- Channel #vim was synced in 70 seconds
15:42  complete: Hey People! When I use vim locally, the terminal title is set to the name of the file im editing. When i do it in screen and hit CTRL+a" all windows are titled "bash". Is there a way to have the name of the file im editing in vim?
15:46  bsod1: I'm trying to write a vim addon with python, how can I get current buffer's text? is vim.current.buffer string? and how can I change current buffer's text?
15:46  dpino: complete: I don't know what you mean, but if you want to figure out the name of the file you're editing press "Ctrl+g"
15:47  Raimondi: bsod1: :h getline()
15:49  bsod1: Raimondi: is there an easy way to get and set all the file or should I get line by line and then set this lines?
15:50  Raimondi: bsod1: getline() and setline() can work on multiple lines, check :h getline()  and  :h setline()
15:52  bsod1: Raimondi: where is this functions? in vim package? like vim.getline()?
15:52  Raimondi: bsod1: I don't know the python syntax.
16:02  unixnuub: hi there. dumb question time, what is the proper name for a command like this  :g/dog/d ? Is it ed mode ? Can I delete the matched line and the one proceeding it?
16:02  Raimondi: ex command
16:03  unixnuub: Been trying lots of ed commands  but doesn't seem to work. have tried stuff like :g/dog/2d
16:03  unixnuub: hey hey
16:03  unixnuub: thanks bro
16:03  Raimondi: try with :g/dog/.,+1d
16:04  Raimondi: unixnuub: ^
16:06  unixnuub: yes Raimondi that is it. I was wrongly trying  :g/dog/(.,)+1d before, just going by ed cheetsheet
16:07  unixnuub: shame the gods didn't call it ed command and make it identical
16:07  unixnuub: that would have been sweet
16:07  Raimondi: :)
16:09  peter_w: that won't delete the line after a line with dog in it if the line before it has dog in it too
16:09  peter_w: not sure if that matters :)
16:14  TzilTzal: is there a way to detect when a line has been deleted or when some text block has changed?
16:16  FernandoBasso: Is \_ some kind of OR operator?
16:16  peter_w: FernandoBasso: where?
16:20  FernandoBasso: peter_w: /the\_s\+word
16:21  peter_w: I guess it depends on your definition of an or operator
16:21  peter_w: does it matter?
16:22  FernandoBasso: I don't know. I wonder what is the real difference between \n and \_.
16:23  peter_w: ehm, \n only matches \n
16:24  FernandoBasso: peter_w: :h 27.8 is kind of confusing for me.
16:27  peter_w: did you read :he /\_
16:28  TzilTzal: is there a way to know when a line has been deleted?
16:28  FernandoBasso: If I use /\_ it returns an error 'ilegal use of \_'.
16:28  FernandoBasso: It expets something else.
16:29  peter_w: yeah, it says in the help what it expects :)
16:30  FernandoBasso: peter_w: I am not sharpened enough to understand what the help says.
16:30  FernandoBasso: Are those \_<Char> special chars? Like \U or \w ?
16:31  peter_w: you use several shortcuts for characters classes, like \d for [0-9], if you use \_d you get [0-9\n]
16:31  peter_w: s/ / can /
16:31  FernandoBasso: "The character class with end-of-line added". I don't understand.
16:33  FernandoBasso: Oh. Okay. I was trying /\_.\{,3} but it matches everything.
16:34  unixnuub: regarding :g/dog/.,+1d it was just an exercise to learn
16:34  unixnuub: more
16:34  unixnuub: i've also discovered :help holy-grail
16:34  unixnuub: that has been a great help
16:34  unixnuub: (in my quest)
16:34  unixnuub: thx
16:35  FernandoBasso: Of course! /\_s.\{,3} *will* indeed match everything.
16:35  rindolf: unixnuub: heh.
16:35  Raimondi: unixnuub: I find this quite useful too :h function-list
16:36  peter_w: FernandoBasso: no it won't
16:36  FernandoBasso: It did.
16:36  peter_w: or you have some strange definition of everything :)
16:36  unixnuub: man I love the old progs I could spend a year just learning sed/awk/vim/etc
16:36  unixnuub: thx all
16:37  FernandoBasso: peter_w: It acted just like /.
16:37  Raimondi: peter_w: I think FernandoBasso reffers to the fact that all the text is highlighted
16:38  peter_w: Raimondi: then that would depend on his text
16:38  mail: any idea why the macro isn't recording search pattern entries
16:38  peter_w: if your buffer contains "a bcde" it will match " bcd"
16:40  Raimondi: peter_w: How so? \_. is _anything_ and \{,3} is 0 to 3
16:40  FernandoBasso: It highlighted everything.
16:40  peter_w: Raimondi: hmm? he said \_s.
16:41  Raimondi: Oh! little detail, sorry.
16:42  FernandoBasso: Oh. Okay. I was trying /\_.\{,3} but it matches everything.
16:42  FernandoBasso: peter_w: ↑↑↑
16:42  peter_w: yeah, that does :)
16:43  FernandoBasso: However, If I do /\_.\{,3}b then this _b_ is the 'end of the match', and it does not match everything.
16:44  FernandoBasso: peter_w: Sorry. I made a mess.
16:44  FernandoBasso: You are right.
16:45  TzilTzal: is there a way to get access to a buffer through libcall?
16:45  FernandoBasso: I actually  mentioned two patterns: /\_s.\{,3} and /\_.\{,3}.
16:47  peter_w: FernandoBasso: yeah, and you said both will match everything :)
16:48  FernandoBasso: peter_w: Yes. Sorry.
16:48  peter_w: TzilTzal: pass the buffer contents as an argument? also, don't use libcall
16:48  FernandoBasso: And tanks.
16:48  TzilTzal: how do u pass the content as an argument? and why not use libcall?
16:48  peter_w: FernandoBasso: large tanks?
16:49  FernandoBasso: Yeah. A huge thanks.
16:49  FernandoBasso: :D
16:49  peter_w: oh, thanks, I'd rather have tanks
16:51  inad922: Hello
16:51  FernandoBasso: I should have practice more that klavaro typing tutor.
16:51  FernandoBasso: And should have learned more English verb tenses. :|
16:51  inad922: Could someone tell me how to set specific settings for specific filetypes
16:51  inad922: I would like to make some settings for developing in python
16:53  Chapoolin: Vim :help command gives me this example: ":echohl WarningMsg | echo "Don't panic!" | echohl None" . . . Question: where is this use of "|" discussed in the :help facilities?
16:55  Chapoolin: I can't find it.
16:55  bosie: how can i resize windows ?
16:55  Raimondi: Chapoolin: :h :bar
16:55  peter_w: Chapoolin: it's in the help somewhere
16:55  peter_w: Chapoolin: :he :|
16:57  Chapoolin: peter_w:: thank you
16:57  peter_w: Raimondi: oh right, now I'm not paying attention :)
16:57  bosie: christ, does vim auto-resize windows?
16:57  bosie: is there a way to circumvent that?
16:57  PhilB: bosie: http://vimdoc.sourceforge.net/htmldoc/windows.html#window-resize
16:57  FernandoBasso: When I want to march three word characters, how do I know I can do \w\{3} and not \(\w\)\{3} ?
16:58  Chapoolin: bosie:: enter ":help window-resize"
17:00  bosie: right
17:00  Chapoolin: bosie:: ?  what?
17:01  Raimondi: peter_w: lol the important thing is that the customer is happy :)
17:01  bosie: Chapoolin: can't seem to find it
17:01  Chapoolin: bosie:: find what?
17:01  bosie: Chapoolin: how i would fixate the width of a window
17:04  bosie: winfixwidth doesn't seem to work
17:09  Chapoolin: bosie:: try :help :vsplit
17:09  bosie: Chapoolin: but i am not splitting
17:09  bosie: Chapoolin: i toggle i.e. nerdtree
17:10  Chapoolin: is nerdtree some third party script?
17:10  bosie: zes
17:10  bosie: yes
17:13  Chapoolin: bosie:: option 'winwidth' sets it.  If your script fiddles with it . . .  :(
17:13  bosie: Chapoolin: :/
17:13  bosie: seems to happen with everything though
17:14  Chapoolin: bosie:: careful who you bed with ... you don't want to catch fleas.  :D
17:15  bosie: yea, well, i wouldn't need it if vim would provide me with it in the first place ;)
17:15  Chapoolin: what does nerdtree do?
17:15  bosie: shows a tree of a directory
17:17  Chapoolin: bosie:: talk to nerdtree people
17:18  Chapoolin: bosie:: see if they'll implement your feature
17:18  bosie: alright
17:27  abhijeet: how can i invoke the diff tool within the gvim?? i have open the two files using vsplite
17:30  sitaktif_: :h :diffthis
17:30  sitaktif_: do a    :windo diffthis    to diff both at a time
17:31  sitaktif_: (and  :windo diffoff   to turn it off)
17:32  abhijeet: ok
17:38  FernandoBasso: How do I enter a non-printable character ^M on the command line?
17:39  pattern: ^V^M
17:39  elasticdog: Ctrl-V Ctrl-M
17:40  FernandoBasso: I was typing it with i_Ctrl-V<CR> in the text, and ^r^a to paste it into the command line...
17:41  FernandoBasso: Thank you guys.
17:42  sitaktif_: FernandoBasso: you can still do <c-v>
17:43  sitaktif_: sorry <c-v><cr>
17:43  sitaktif_: in insert mode
17:44  FernandoBasso: sitaktif_: Yes. I learned about when I was writing a macro, instead of recording it.
17:45  FernandoBasso: It was a macro to insert **** above and bellow titles. It has some ^M and ^[ chars.
17:45  FernandoBasso: I find strange the results of ^v<Tab>
17:46  FernandoBasso: On the text, I mean. Not in the command line.
--- Log closed Mon Dec 27 17:51:11 2010
--- Log opened Mon Dec 27 17:51:30 2010
17:51 --- Users 529 nicks [0 ops, 0 halfops, 0 voices, 529 normal]
17:52  FernandoBasso: danielsh: But why  ^M and ^[ shows up in the text, without 'show list', and ^I only with 'show list'?
17:52 --- Channel #vim was synced in 70 seconds
17:52  FernandoBasso: But in command line, ^I shows up like the others.
17:53  peter_w: so you can read your mappings I guess
17:54  danielsh: FernandoBasso: because tabs are used for alignment
17:54  danielsh: if you want to debug tabs/spaces you can :set list
17:54  FernandoBasso: Right. Well, thanks.
17:54  danielsh: I don't recall if there's an option to toggle ^I in running text...
17:54  danielsh: FernandoBasso: :h 'listchars
17:54  FernandoBasso: No problem. I was just curious.
17:55  FernandoBasso: danielsh: Yeah. I've seen listchars before.
17:56  FernandoBasso: My only complaint at the moment is Sessions. I tried Project.vim and Proj, and they did not suit my taste. :mksession are much closer to what I need.
17:57  FernandoBasso: -S does not load unlisted buffers, like help files, and for every :help tab (I open help in other tabs) when I vim -S session.vim, vim creates a [No name] file for every :help tab I saved with :mksession.
17:58  FernandoBasso: Still, I find them useful.
17:59  danielsh: did you read :help :mksess?  it mentions some configuring options
17:59  danielsh: I used to write small 5-10 -line vim scripts that opened the tabs/windows I wanted...
17:59  danielsh: but recently I just use screen
17:59  FernandoBasso: Yeah. I'm using the default options. They include 'help'.
18:01  FernandoBasso: danielsh: :mksession is writing an bw (even when 'help' is in :sessionoptions) that is deleting help buffers.
18:01  FernandoBasso: I dropd a autocmd in .vimrc to make help filetypes be buflisted.
18:01  FernandoBasso: It is working... kind of...
18:02  FernandoBasso: danielsh: But do you open many vim instances?
18:03  danielsh: usually I have several vims for different purposes
18:03  danielsh: eg a vim launched by mutt, a vim for $work, a vim for $open_source_project work, etc
18:04  FernandoBasso: I love to reopen sessions, which seems to enable us to 'start from where we stoped'.
18:05  FernandoBasso: It starts :Explore, from the path it was, etc. It is helpful in my opinion.
18:05  FernandoBasso: The splits, the buffers, the mappings, the history...
18:05  FernandoBasso: The marks!
--- Log closed Mon Dec 27 18:32:45 2010
--- Log opened Mon Dec 27 18:38:06 2010
18:38 --- Users 526 nicks [0 ops, 0 halfops, 0 voices, 526 normal]
18:39 --- Channel #vim was synced in 68 seconds
18:46  mail: any know easy way to insert a blank line above and below a marker?
18:47  peter_w: a marker being?
18:47  mail: --{{{
18:48  mail: infact i only want a new line above
18:48  peter_w: every marker? probably :s
18:49  mail: yes
18:50  dindinx: :%s!^--{{{!\r&   <= this should do it (untested)
18:51  mail: you can use ! instead of / ?
18:51  mail: indeed
18:52  mail: does work i was using \&
18:54  tlp: Is there a quick way to wrap all paragraphs in a text document with <p></p>?
18:54  mail: surround.vim
18:54  mail: a macro
18:55  tlp: you mean surround + macro?
18:55  mail: http://www.vim.org/scripts/script.php?script_id=1697
18:55  tlp: (as opposed to surround vs macro)
18:55  tlp: cool, I'll check it out. thanks
18:55  mail: yeah surround + macro
18:56  mail: us surround to easily surround a paragraph
18:56  mail: then use a macro to select a not surrounded paragraph
18:56  mail: run it as many times as you want
18:58  ceej: man there really is no good quick find in project like text mate.... Ack works ok but misses stuff
18:58  ceej: grep is just slow through huge projects :/
19:03  sleepynate: <3 ack
19:04  sleepynate: ceej: what does ack "miss" ?
19:04  ceej: it missed a phrase that I was searching for.... textmate found it
19:14  mail: possible to suppress pattern not found from :g
19:15  tpope: ack has a whitelist of file types it checks and skips everything else
19:15  tpope: rendering it worthless, in my book
19:22  ciupicri: how can I easily search (and also substitute) for patterns that contain / ?
19:24  Raimondi: There is alway ack -a
19:25  Raimondi: ciupicri: You can use other characters instead of / as separator, e.g.  :%s:x:z:
19:25  ciupicri: Raimondi, I see; just like with sed; thanks!
19:26  Raimondi: np
19:27  ciupicri: Raimondi, and for a plain search?
19:27  ciupicri: :q
19:28  Raimondi: ciupicri: Escape the /:  \/
19:28  ciupicri: Raimondi, I already knew about that, I was hoping for something easier
19:28  Raimondi: Well, we can only hope :)
19:34  ciupicri: Raimondi, or as we say in Romanian, hope dies last :-)
19:35  Raimondi: We say the same in Peru! La esperanza es lo último que muere. :)
19:36  ciupicri: Raimondi, it must be something that Latin based languages have in common
19:38  Raimondi: I bet
19:39  Flecha: Hi! I am creating a function for VIM, but when I ru it, it says that the function is trying to modify itself and that it is not allowed. It gives this error when running the command "clast!". It should just go to last error line... not modify anything... =(
19:40  Raimondi: Flecha: Paste the code
19:40  Flecha: ok
19:40  Raimondi: Use a pastebin
19:41  Flecha: http://vim.pastey.net/144331
19:41  Flecha: cla! is in line 31
19:43  Flecha: And I call it with:    map <F5> :w<CR>:!clear<CR>:call TestarPython()<CR>
19:45  Flecha: And when running the function, it DOES what I want (the cla! works) but it shows the error message too... and I dont know why
19:48  Raimondi: I can't see what's causing the error.
19:48  Flecha: oh, and it happens only in the first time I run the function
19:49  Flecha: I think it is in the parsing of the function
19:51  Flecha: The error is:  "It is impossible to redifine function TestarPython: it is in use"
19:53  Flecha: is there another way of going to last error without clast?
19:57  jvv: hi, in vim with 'cw' shortcut i can change current word... but it starts changing from current cursor position to the end of the word... is there other shortcut that can allow me to change word on which cursor is on no matter where it is ?
19:59  tmr: jvv, ciw
20:00  Flecha: Raimondi, found a similar error in a forum, looks like my function is opeing a file that is loading the ftpluging that is trying to reload the function. The solution is to verify the existence of the function before declaring it. Thanks anyway. =)
20:01  Raimondi: Good :)
20:02  jvv: tmr: it works on vim... but not on plain vi ;/
20:03  tmr: jvv, yeah. text-objects are vim addition.
20:05  gkatsev: text-objects ftw!
20:06  gkatsev: it will change your life, lol
20:06  jvv: tmr: ok, thanks... generally i am trying to learn common tricks to vim and plain vi so i would have to recall every time on which server i am ;]
20:06  tappi: lousy server if it doesn't have vim
20:06  gkatsev: lots of them just come with vim
20:06  jvv: tappi: i would say all commercial flavours of *nixes have plain vi and no vim ;]
20:07  gkatsev: I mean just come with vi
20:07  gkatsev: or like vim-tiny
20:08  jvv: aix 5.3 has ksh88 so you can imagine how old some things are
20:10  tappi: jvv as i said, lousy server :p
20:13  jvv: i am also waiting when mc will have vi keybindings... i sa this on their TODO list
--- Log closed Mon Dec 27 20:25:23 2010
--- Log opened Mon Dec 27 20:25:45 2010
20:25 --- Users 539 nicks [0 ops, 0 halfops, 0 voices, 539 normal]
20:26 --- Channel #vim was synced in 64 seconds
--- Log closed Mon Dec 27 20:52:39 2010
--- Log opened Mon Dec 27 20:53:03 2010
20:53 --- Users 546 nicks [0 ops, 0 halfops, 0 voices, 546 normal]
20:54 --- Channel #vim was synced in 67 seconds
20:58 --- ajpi is now known as ajpiano
21:22  berserkerxiii: can i use visual mode to indent a certain selection?
21:23  strull: sure
21:24  berserkerxiii: ok
21:31  homekevin: If I couldn't use Vim, I sort of doubt I would use vi.
21:32  sleepynate: in an environment where vim isn't available, most of the other editors suck even worse
21:33  peth: any lispers here? i'm wondering if i should even try lisping with vim or just bite the emacs bullet.
21:33  sleepynate: peth: i use CL and clojure, yes.
21:33  gkatsev: you can lisp with vim
21:33  gkatsev: text-objects are your friend
21:33  gkatsev: also, a plugin like conque is definitely helpful
21:33  sleepynate: nah, i use tslime :)
21:33  gkatsev: tslime?
21:34  sleepynate: (which, unlike slime.el, works with any REPL)
21:34  gkatsev: conque just allows you to have a shell
21:34  sleepynate: http://www.vim.org/scripts/script.php?script_id=3023
21:34  gkatsev: and you can send stuff to it
21:34  sleepynate: tslime is the same
21:34  sleepynate: but inside a tmux session
21:35  peth: nice, thanks. these answers are much more positive and numerous than i expected. :) i'll give it a go then.
21:35  gkatsev: ah, conque internelizes it into vim.
21:35  gkatsev: code.google.com/p/conque
21:35  sleepynate: gkatsev: right. i'm more likely to want multiple instances of vim going to one repl
21:36  sleepynate: but that's all matter of preference stuff
21:36  gkatsev: yeah, it's good to have choice
21:36  gkatsev: sleepynate: ah, basically it sends selected text to some tmux session? cool
21:37  sleepynate: correct
21:37  sleepynate: so i have a tmux session that currently has GNU CL, clojure + readline, and python REPLs running
21:37  gkatsev: I guess the only plus that conque gives you is that since it is a vim buffer, you can escape and start editing the buffer to look pretty or w/e.
21:37  sleepynate: then i can just vselect and C-c C-c
21:39  sleepynate: yea my usual workflow is open a new buffer, type what i would type in the repl, then shoot it out
21:39  gkatsev: sleepynate: have you tried conque before?
21:39  sleepynate: but for example, if you've used clojure's default repl, or mzscheme's, they don't support arrow editing when you fumble-finger
21:40  gkatsev: yeah, I hated that in mzscheme
21:40  sleepynate: i believe i tried conque
21:41  gkatsev: it's supposedly gotten a lot better, but i've only tried it very recently.
21:41  sleepynate: orly
21:41  sleepynate: it wasn't terrible back then... just didn't quite touch me in the naughty bits
21:41  gkatsev: lol
21:42  sleepynate: i guess the advantage of conque is it works on windows
21:43  gkatsev: ah, yeah, that too, if you install python
21:45  gkatsev: sleepynate: let me know if you do try it again.
21:46  sleepynate: oh you working on it?
21:47  gkatsev: nope. Just wondering, lol
21:47  gkatsev: I should try tslime
21:47 --- luke is now known as Guest35483
21:49  sleepynate: ahh
21:57  Chapoolin: Why is this mapping failing to echo?: nn <silent> S :echohl ErrorMsg<CR>:echo "Gimme a smooch."<CR>:echohl None<CR>
22:00  homekevin: Chapoolin: Works for me
22:01  Chapoolin: homekevin:: hm ...
22:03  Chapoolin: homekevin:: you entered the whole thing verbatim?
22:03  bosie: anybody here has a function that would flip a latex table?
22:03  homekevin: Chapoolin: Almost. I substituted "Blah" for the string
22:04  Chapoolin: homekevin:: ok
--- Log closed Mon Dec 27 22:10:47 2010
--- Log opened Mon Dec 27 22:11:06 2010
22:11 --- Users 552 nicks [0 ops, 0 halfops, 0 voices, 552 normal]
22:12 --- Channel #vim was synced in 68 seconds
22:15  mhahe: when using vim my cursor is hard to find. what can i do to help with this? id like for it to blink and maybe have a different color, possible?
22:16 --- sh1m is now known as sh1mmer
22:16  lucasoman: mhahe: another option is cursorline and cursorcolumn
22:19  homekevin: mhahe: Terminal or GUI?
22:20  homekevin: mhahe: See 'guicursor' or your terminal's options.
22:20  mhahe: i got what i needed thanks
22:20  mhahe: but i dont like the cuc option
22:20  mhahe: how do i disable it?
22:20  homekevin: mhahe: :h :set
22:20  mhahe: thanks
22:23  mhahe: anyway to list my defined values? such as functions/methods/variables?
22:24  homekevin: There's no such thing as a method as far as I know. :function lists functions.
22:25  homekevin: I don't *think* there's a way to list variables in general, but you could :echo g: to see all the globals, :echo l: to see locals, etc.
22:25  homekevin: Wait, not l:
22:26  homekevin: w: or b:
22:26  homekevin: For window-local and buffer-local, respectively.
22:26  homekevin: I think there is an l: namespace for function-local variables, but it's almost never needed as far as I can tell.
22:27  mhahe: thanks :D
--- Log closed Mon Dec 27 22:34:02 2010
--- Log opened Mon Dec 27 22:39:25 2010
22:39 --- Users 546 nicks [0 ops, 0 halfops, 0 voices, 546 normal]
22:39 --- Server: [hubbard.freenode.net] [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
22:40 --- Channel #vim was synced in 69 seconds
22:46  Chapoolin: which are the Ex commands?  Ones starting with ":", like ":echo"?
22:46  gkatsev: yes
22:46  bairui: FernandoBasso: Vim is an editor ;) The first filename is the first file you want to edit.    :help -vim
22:48  FernandoBasso: bairui: vim -S my_session_file.vim. <-- This is the first file I open. This is the session file "source file <session> after loading first file".
22:49  FernandoBasso: I don't understand why does the help say _after_. Why just not 'sources a <session> file?
22:50  gkatsev: because you can do: vim -S session.vim file.txt
22:53  Chapoolin: ,
22:54  FernandoBasso: Okay. thanks. -S session.vim *plus* someotherfile.txt is new to me.
22:54  bairui: new is why we get out of bed every day :)
22:55  tappi: bairui no need to be a dick
22:55  tappi: perfectly valid question
22:55  tappi: your first response that is
22:55  bairui: tappi: on the contrary, I was empathising - I find new things every day; how boring life would be without them.
22:55  tappi: i know, i wasn't commenting about that, that was new to me too
22:56  bairui: ah, then you lack the shared experience to understand my first response. No harm done. :)
22:56  FernandoBasso: I don't think the help mentions about opening a session file plus another files.
22:57  bairui: under the   :help -vim   it gives the general pattern for starting Vim - that it can take options and filenames.
22:58  FernandoBasso: bairui: I fail to understand the help. I had session.vim as the filename.
22:58  FernandoBasso: vim -S (option) session.vim (filename.
22:58  bairui: FernandoBasso: no. session.vim is an argument to the -S option.  Vim will then happily take the FIRST filename after that option has been processed.
22:59  bairui: the element    -S session.vim    is a single atom.
22:59  FernandoBasso: bairui: Thanks. This information goes to my summary.
22:59  bairui: np
23:28 --- jkatana is now known as nicklovescode
23:50  ceej: is there a reason you can't do :Ack "MILEAGE OR TIME & EXPENSE INVOICE"
23:53  bairui: ceej: See the paragraph above the   Note   under   :help command-nargs   - arguments are (non-escaped) space separated.
23:54  bairui: so, I presume,    :Ack MILEAGE\ OR\ TIME\ &\ EXPENSE\ INVOICE      would work
23:54  ceej: I'll give it a try... ty
23:55  bairui: np
--- Log closed Tue Dec 28 00:00:04 2010
