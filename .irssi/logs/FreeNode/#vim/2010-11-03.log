--- Log opened Wed Nov 03 09:20:57 2010
--- Log closed Wed Nov 03 09:25:58 2010
--- Log opened Wed Nov 03 11:04:23 2010
11:04 --- Users 551 nicks [0 ops, 0 halfops, 0 voices, 551 normal]
11:04 --- silex is now known as Silex
11:05  FernandoBasso: jlebrech: What you want would be very helpful. Indeed. I am interested in that too.
11:05 --- Channel #vim was synced in 92 seconds
11:06  Raimondi: jlebrech: This is a popular plugin to handle URLs:  http://www.vim.org/scripts/script.php?script_id=293
11:08  Silex: can I increase the indent between the numbers and the text?
11:09  rson: you mean line numbers?
11:09  Silex: yes
11:09  rson: i don't believe so.  i think you can set numberwidth but it always right aligns the numbers.
11:09  rson: could be wrong.
11:10  Silex: okay, I'll play with it. Thanks
11:11  rson: Silex: :help numberwidth says the following: Since one space is always between the number and the text, there is one less character for the number itself.
11:11  rson: so it looks like you're out of luck
11:12  Silex: rson: it's for a friend who's starting to use vim, so personally I don't care ;)
11:12  Silex: I don't use numbered lines
11:25  pyrho: Silex: :h 'nuw'
11:26  jlebrech: raimondi: think that may be what i need
11:36  Silex: pyrho: thanks
11:36  Silex: wait
11:36  Silex: that's what rson said
11:37  Silex: and it doesn't help
11:51 --- silence is now known as Guest65050
12:01  ormaaj: Ah that stinks of course doing :enew and then :r ! doesn't set a ft automatically
12:18 --- daniel_ is now known as daniel
12:21 --- Unode is now known as _Unode
12:58  Pendrag0n: I think I've been going about this all wrong.  I think I can do this a different way.
12:58  Pendrag0n: perhaps if I could just know a way of finding the pid of the vim that currently is assocaited to a swap file
12:59  Pendrag0n: lets say my boss opens file x
12:59  Pendrag0n: I can see a swap file right next to it, and if I try to open it I know cause vim tells me it is already opened by someone else
12:59  Pendrag0n: is there a way to know the PID that has that file open?  Other than the PID displayed on the screen then by vim?
13:01  p_jonas: hi -- I'm assuming this is related to the "comments" setting -- but in languages such as perl or bash which have '#' for comments, when i'm writing them and line-wrap, the '#' character is automatically put on that new line for me - which is great.  But sometimes, i might start a line with two '#' characters -- '##' -- but when line-wrapping happens, it only prepends a single '#'.  Is there anyway to get Vim to recognise I've typed tw
13:01  p_jonas: o '##' characters and continue that when line-wrapping happens?
13:02  the_isz: Pendrag0n: under linux, lsof is what you're looking for
13:03  Pendrag0n: hmm ok
13:03  Pendrag0n: lsof?
13:03  Pendrag0n: I have no choice in the os, it is a work related issue
13:03  Pendrag0n: but we have fedora 8 (red hat)
13:03  Pendrag0n: lsof command not found
13:04  the_isz: Pendrag0n: you might have to install it, but i'm sure fedora has that program in their repos
13:06  Pendrag0n: very odd, it is installed, I can even type "man lsof" but command not found, even as root
13:07  Pendrag0n: now this just might work
13:10  daniel: Pendrag0n: it does not necessarily mean that the application is available just because the man page is installed. sometimes man-pages come in bundles
13:11  Pendrag0n: I figured it out, I didn't have sbin in roots path from sudo
13:25  tpope: frogonwheels: I've never wanted to record a macro in a read only window, ever. but if you have then it should be an option at the minimum
13:25  sgflt: hey, i'm looking for a way to set options for all files that i open in a directory. specifically, i want to avoid putting modelines in every file
13:25  tpope: frogonwheels: open a github issue for it
13:27  kurkale6ka: sgflt: you could maybe use the 'exrc option?
13:27  sgflt: kurkale6ka, just discovered that. it'd be nice if there was a search upwards on the tree as well though =)
13:27  kurkale6ka: sgflt: or a session
13:42  erez: heya, when I :tabnew, the command-line drops a few pixels down and is now almost out of view
13:44  erez: the tab is pushing the window down
13:44  erez: so I need to set cmdheight=4, but if I don't have tabs, it's somewhat annoying
13:48  erez: Tabs used to be text, not gui, which I preferred
13:48  paradigm: 'used to be'?  Did you switch from console vim to gvim?
13:52  kurkale6ka: erez: se go-=e
13:52  erez: kurkale6ka: just found that in the help :)
13:52  erez: paradigm: used to be in gvim of the past...
13:52  kurkale6ka: :)
13:53  erez: thanks kurkale6ka++ I'll amend my .vimrc
13:58  erez: btw, is there a way to run bash in vim?
13:58 * erez wants to live inside Vim
13:59  paradigm: erez: !bash
13:59  FernandoBasso: erez: :shell
14:00  rindolf: erez: there's a shell window patch floating around.
14:00  erez: paradigm: FernandoBasso: but not in the commandline
14:00  rindolf: erez: don't remember the URL.
14:00  FernandoBasso: erez: Have you tried?
14:00  erez: just did
14:01  erez: FernandoBasso: it makes the commandline into a shell
14:01  paradigm: erez: isn't the need to run everything in your editor a bit, uh, blasphemous? I seem to recall another editor which carries that philosophy... of sacrilege
14:02  erez: paradigm: I'm not saying "everything" should be ther
14:02  paradigm: just a shell, tetris, and C-x M-c M-butterfly?
14:03  erez: :) what's M-butterfly?
14:03  paradigm: http://xkcd.com/378/
14:03  erez: I take it you're referring to the lisp interpretor
14:03  FernandoBasso: erez: I'm curious, if :shell is not enought, what would you like to have then?
14:04  rindolf: erez: there's a way to run a console inside a vim window.
14:04  erez: FernandoBasso: ^^
14:04  erez: rindolf: thanks, I'll look around
14:05  erez: paradigm: There's a difference between running tetris and reading mail, and the need to have everything in the same environment
14:05  FernandoBasso: erez: I'm not poking fun or being sarcastic. I'm really curious.
14:05  erez: What you're referrring to was actually running a sh with vi
14:06  erez: FernandoBasso: Neither do I, rindolf described what I was looking for
14:06  rindolf: erez: http://www.wana.at/vimshell/
14:06  erez: rindolf: gracias
14:06  rindolf: erez: you're welcome.
14:10  iaj: is there someone experienced with tidy maybe:(?
14:11  erez: FernandoBasso: sorry for not the ambiguity
14:20  Altreus: can I use different delimiters for :%s/a/b/?
14:21  Silex: yes, any chars you want
14:21  Silex: # is + are common alternatives
14:21  Silex: :%s+//+#+
14:21  Altreus: oh right. It didn't work with "
14:21  Silex: that transforms c++ comments to ruby ones :)
14:22  Silex: well, it needs to be more careful, but you get the idea
14:22  Altreus: I did %s"/var/www/something"/something/else"
14:22  Altreus: it said something about ;$
14:23  Altreus: I guess I will avoid that :)
14:34 --- foocraft is now known as ewanas
14:49  esc: hey, is there a way to keep open fold open, even when i move the cursor away
14:50 --- BBonifieldd is now known as BBonifield
14:54  donri: What's the right way to refer to ~/.vim in vimrc?
14:56  Pendrag0n: expand("<sfile>")
14:56  Pendrag0n: will tell you where your vimrc is I think
14:56  Pendrag0n: if that helps
15:06  egn: hi, I'm trying to match .lisp files and extend the default lisp syntax file with my own. It works if I match .foo with "au BufNewFile,BufRead *.foo setf mysytax" but it doesn't override .lisp when I use "au BufNewFile,BufRead *.lisp setf mysyntax"
15:08  egn: here's the syntax file: http://pastebin.com/raw.php?i=dUbfJVAA
15:11  egn: nevermind, got it
15:12  Pendrag0n: ah.net split
15:13  Pendrag0n: did we loose Viper-7?
15:13  daniel: yup
15:13  daniel: he's MIA
15:14  Pendrag0n: yeah
15:21  Silex: * makes word under cursor become /\<word\>
15:21  Silex: how do I make the current visual selection become the same?
15:21  daniel: bvw
15:21  Silex: thanks
15:21  daniel: well, better bvel maybe
15:22  Silex: hum
15:22  glyph: viw?
15:22  kurkale6ka: vaw
15:22  Silex: vaw just selects a word?
15:22  Silex: it doens't highlight all the other ones...
15:22  kurkale6ka: yes
15:23  glyph: Silex: you want a non-contiguous visual selection?
15:23  Silex: glyph: if my cursor is on foo, and I press *
15:23  Silex: it's like if I typed /foo
15:23  Silex: e.g all foo are highlighted
15:24  Silex: now what if I want to highlight only part of a word?
15:25  glyph: Silex: visual mode has a start and end
15:25  kurkale6ka: visually select it and type *
15:26  Silex: kurkale6ka: doens't work, jumps to previously typed *
15:26  Silex: glyph: seems you still don't get what I'm trying to do?
15:26  Silex: maybe I'm bad at explaining
15:27  kurkale6ka: Silex: you need vsearch.vim
15:27  Silex: kurkale6ka: ah, ok
15:27  Silex: otherwise I need to like yank it then somehow paste it after a / or smth
15:28  kurkale6ka: Silex: https://github.com/godlygeek/vim-files/blob/master/plugin/vsearch.vim
15:28  glyph: you can highlight lots of words at a time, but you can only visually select one
15:28  Silex: glyph: how do you highlight lots of words?
15:29  Silex: with a complex regex?
15:30  glyph: Silex: The short answer is "yes", the long answer is ":help syntax.txt"
15:30  Silex: a question with "how" isn't answered with "yes"
15:30  Silex: but fair enough
15:31  glyph: you answered it yourself, "a complex regex"
15:31  glyph: I was saying "yes" to that.
15:31  Silex: ah ok
15:31  Pendrag0n: Silex: glyph:  Also you can search multiple words like this /findme\|andmetoo
15:31  Silex: Pendrag0n: yes that's the complex regex approach I believe
15:34  Silex: anyway, I guess I have to use that plugin kurkale6ka linked
15:34  Pendrag0n: well I have one FATAL flaw, I can't understand regular expressions, I suck at them, but I learned to use the \| between words
15:34  Silex: I can't figure the yank + make vim evaluate "/yankedtext" way
15:34  glyph: Pendrag0n: that's good
15:34  glyph: hold on to that
15:34  Pendrag0n: glyph
15:34  Pendrag0n: I know how
15:34  glyph: if you're a programmer, and you can avoid understanding regular expressions for most of your life, your job will be much easier
15:34  Pendrag0n: vim extended, you can do SHIFT V or CTRL V for block highlight or line by line highlight or just v, then highlight it, then you can :s/replace instead of the normal :%s replace
15:34  Pendrag0n: likewise a search
15:34  Silex: I think this statement about regexp is a bit extreme
15:34  Pendrag0n: uhh, upside down bannana split?
15:34  Silex: Pendrag0n: yeah, the problem is really not about selecting stuffs
15:34  Silex: it's about having them highlighted the way /foo or * does
15:34  Silex: but kurkale6ka somewhat answered it
15:35  Pendrag0n: well what is it?
15:35  Pendrag0n: I missed it if you said
15:35  Silex: a vim plugin
15:38  the_isz: Silex: the yank method would be something like (with visually selected what you want to search for):  y/<c-r>"<return>
15:39  Silex: oh, I always forget about <c-r>
15:39  Silex: thanks
15:40  kurkale6ka: use the plugin, it's smarter, it won't change your " registry
15:40  Silex: yeah
15:40  Silex: I was just curious
15:41  kurkale6ka: it makes use of the "* registry
15:41  the_isz: wow, bram himself confirmed my bug report... i feel honored :)
15:45  iaj: would you guys use sparkup or zencoding for html editing?
15:45  iaj: :-)
15:46 --- Pendrag0n is now known as Pendragon_away
15:51  ManDay: Is there any reason why there is no case-insenstive mod to / ?
15:51  ManDay: or why / doesnt work like :s at all?
15:51  kurkale6ka: \c
15:51  ManDay: oh
15:52  ManDay: sorry then thanks
16:05 --- Guest65050 is now known as ajpiano
16:18  konryd: hello everyone, how can I run an autocmd when the directory has been changed?
16:18  konryd: I can't find an event for that
16:20  csmrfx: How to hide GVim menubars?
16:20  mgedmin: with 'guioptions'
16:21  csmrfx: Why dont my keyboard shortcuts work in Vim?
16:21  mgedmin: :set go-=m
16:21  mgedmin: about keyboard shortcuts: we can't tell from over here
16:21  mgedmin: tell us what shortcuts those are, and how you're defining them
16:21  elik: csmrfx, which ones do you expect to work...
16:21  mgedmin: and what sort of terminal emulator you use, or if you use gvim
16:22  csmrfx: Keyboard shortcuts such as ctrl+pagedown for tab switching
16:22  csmrfx: (tabnext)
16:23  csmrfx: Oh, and I set em in .vimrc
16:24  csmrfx: imap <C-PageDown> <ESC>:tabnext<CR>i
16:24  csmrfx: (nmap version, too)
16:25  elik: the way I see it, it's built-in for insert mode (:h i_<C-PageDown>)
16:25  graywh: the normal mode map exists by default
16:25  csmrfx: Function-key shortcuts do work in vim. Do terminals eat ctrl+key shortcuts?
16:25  graywh: csmrfx, depends on your terminal
16:25  dethknell: Hey folks, I need help with using a particular prog-font with Vim.
16:26  graywh: csmrfx, #1 you don't need to re-define vim's default maps (which you are doing with)
16:26  graywh: (that imap and nmap for <C-PageDown>, etc.)
16:26  csmrfx: dethknell Vim's font would be a terminal's font
16:26  dethknell: The font's Pragmata, and apparently it needs it's monospace flag set to true before I can use it with Vim.
16:26  dethknell: gVim, actually.
16:26  graywh: csmrfx, #2 no ctrl-pageup sounds like you're using rxvt
16:27  csmrfx: graywh: among others, lxterminal + bash, terminator + bash or fish
16:27  dethknell: I found a python script that does the job, but it's ages old and I don't know to work it. any ideas csmrfx?
16:28  csmrfx: graywh: ctrl+pagedown doesn't work in any of these
16:29  csmrfx: dethknell: well, not familiar with 'monospace flag' setting, makes me wonfer perhaps theres a monospace version of the font.
16:29  dethknell: csmrfx, well there isn't.
16:29  dethknell: But here's the script that has worked for someone: http://bit.ly/dloirJ
16:29  graywh: csmrfx, sounds like they're all crap, then
16:30  graywh: guess "advanced features not yet found elsewhere" means "broken"
16:30  csmrfx: graywh: haha
16:30  graywh: http://software.jessies.org/terminator/
16:31  csmrfx: Can I start vim without it loading .vimrc?
16:31  graywh: -u NONE
16:32  kurkale6ka: -u NORC
16:32  csmrfx: I have a recollection that ctrl+tab used to work before
16:33  csmrfx: so, it seems it's not the .vimrc as loading without .vimrc doesn't change anything. Better try rxvt next.
16:34  csmrfx: no, rxvt didn't help with getting ctrl+pagedown to work. :(
16:34  dethknell: Of any help, csmrfx?
16:35  csmrfx: dethknell sounds like you might want to look into Inconsolata, Consolas or Droid, to mention a couple of nice monospace coding fonts.
16:36  dethknell: csmrfx, but it has been done before with Pragmata is what bothers me.
16:36  csmrfx: Unless someone else has ideas on 'enabling monospace flag' of fonts.
16:36  graywh: csmrfx, i already told you rxvt was crap
16:36  graywh: kurkale6ka++
16:36  dethknell: Do you know much about python, csmrfx?
16:36  csmrfx: graywh: oh, I misunderstood. What would you try?
16:37  mgedmin: csmrfx, <ctrl-pagedown> will most likely work in xterm out of the box; for others you can get it to work if you define a custom mapping
16:37  heftig: can I change how unprintable characters are displayed? I'd like it to use the Unicode control pictures
16:37  mgedmin: in insert mode hit ctrl-v followed by ctrl-pagedown to find out what sort of character sequence your terminal uses
16:37  mgedmin: better also check that it is _different_ from the sequence regular pagedown sends
16:37  csmrfx: xterm is pretty horrible, BUT ctrl+pagedown does work there
16:37  mgedmin: (if it's the same, switch terminal emulators)
16:38  csmrfx: too bad the UTF chars are #"#¤ on xterm
16:38  csmrfx: dethknell a little
16:38  csmrfx: dethknell #python
16:39  csmrfx: mgedmin uh, that adds ','
16:39  dethknell: I'm there, csmrfx, but they insist I ask questions about it here, stragely.
16:40  iaj: some guys in here can tell me what's causing a :  resulting in a :<t_<fd>`> on the commandline if I wait one second?
16:40  mgedmin: csmrfx, ?
16:40  mgedmin: e.g. for me, in gnome-terminal, ctrl-v ctrl-page in insert mode inserts ^[[6;5~
16:40  mgedmin: terminator uses the same libvte and should send the same
16:41  csmrfx: mgedmin: <i><ctrl+v><ctrl+pagedown> inserts a ','... duhh I have ctrl+v mapped as paste in vimrc
16:41  mgedmin: ... actually, xterm sends the same
16:42  csmrfx: mgedmin no, without mappings ctrl+pagedown doesnt insert anything.
16:43  mgedmin: ok
16:43  csmrfx: Seems to be the same for every other term.
16:43  mgedmin: then your terminal emulator intercepts that key
16:43  mgedmin: e.g. gnome-terminal uses ctrl-pageup/down to switch between tabs
16:43  mgedmin: except on the last tab it sends ctrl-pgdown to the app inside the tab, and ditto for ctrl-pgup on the first tab
16:44  csmrfx: Or, it intercepts the ctrl+v key
16:45  mgedmin: I doubt that
16:45  mgedmin: forget vim for a second, run cat and try ctrl-pgdn in it
16:46  csmrfx: x-terminal-emulator indeed had ctrl-v mapped, removing that helped terminator
16:46  csmrfx: mgedmin thanks for pointing me to the right direction
16:46  mgedmin: x-terminal-emulator is a symlink to something, it can point to different emulators on different systems
16:48  csmrfx: Ok, one more
16:48  csmrfx: How to hide tabs in GVim (or better yet, replace em with text-based tabs-line)?
16:48 * mgedmin is starting to enjoy html/css omnicompletion
16:49  mgedmin: my advice would be: "do not use gvim's tabs", they're inconvenient and they don't add much
16:49  mgedmin: vimgor, tabs
16:49  vimgor: Tab pages are not buffers, don't try to force them to act like buffers. Consider tab pages like viewports, layouts, or workspaces. Trying to setup 1 tab page == 1 buffer is an exercise in futility. Do ':set hidden' and get started. Get FuzzyFinder, LustyExplorer or BufExplorer to make getting around your buffers easier. See http://vim.wikia.com/wiki/Category:Tabs for more info.
16:50  csmrfx: Ah, typical Vimness - fek all usability, the original idea is more important *rolleyes* :)
16:51  mgedmin: or maybe we're all just old farts who learned to use vim when it didn't get tabs and just can't get used to changes
16:51  csmrfx: Touche
16:52  rson: i agree with the snippet above.  they really don't add much functionality
16:52 * mgedmin doesn't actually thing so ;)
16:52  csmrfx: Well, I use tabs, works great, but this OS has really ugly GTK gui menus and tabs I want to hide
16:52  graywh: they are handy occaisionally, to keep from messing up my layout
16:52  rson: guioptions
16:52  rson: -=T i believe
16:52  mgedmin: graywh++
16:52  csmrfx: (or maybe I am a young whippersnapper who cant edit what he cant see)
16:55  mgedmin: vimgor, LustyExplorer
16:55  vimgor: Bugger all, I dunno!
16:56  csmrfx: Ok, :set go-=e hides gui tabs and shows text tabline
16:56  mgedmin: vimgor, LustyExplorer is http://www.vim.org/scripts/script.php?script_id=1890
16:56  vimgor: I hear ya!
16:57  mgedmin: my vim has no ruby support ...
16:58  csmrfx: hm, the whole idea of buffers seems somehow arcane to me
16:58  graywh: how so?
16:58  mgedmin: think of them as "invisible tabs"
16:58  tmr: Or "usable".
16:58  mgedmin: and since they don't take any screen space, you can have hundreds of them
16:59  csmrfx: well, thats just it, you cant see em, you have to remember more commands to handle em
16:59  creidiki_: ,lj
16:59  graywh: :b
16:59 --- creidiki_ is now known as creidiki
16:59  tmr: How is that different from tabs? You have to remember commands to switch between them too.
16:59  FernandoBasso: I think of buffers as 'hide but not close tabs i'm not interested in right now instead of taking screen room'.
16:59  creidiki: ctrl-pageup/pagedown? those arent hard :D
17:00  FernandoBasso: Argh.
17:00  graywh: creidiki, slow
17:00  csmrfx: tmr jmo, but remembering ctrl+pagedown is easy and you can see em at all times
17:00  mgedmin: minibufexplorer lets you see them all the time, like tabs
17:00  creidiki: graywh: i guess :D
17:00  spiiph: Keeping track of files through tabs is horrible. :(
17:00  mgedmin: bufexplorer lets you see them on demand, at a keypress (\be)
17:00  mgedmin: <ctrl-^> lets you alternate between two buffers you last edited very quickly
17:00  graywh: if you know which file you want, why cycle through all of them to get there?
17:00  tmr: csmrfx, yes... 59 times ctrl+pgdown to go from tab 249 to 199?
17:00  csmrfx: My Vim key-command memory is only about 15-20 commands
17:01  csmrfx: tmr I use the filesystem for that!
17:01  mgedmin: don't worry, your vim memory will expand with use
17:01  mgedmin: there's no need to learn every feature at once -- in fact that would be impossible
17:02  csmrfx: mgedmin: well, Im not young no more, and I keep swearing at vim and at "Hacking Vim" when I have to look for something I dont remember whats it called
17:03  csmrfx: Aand, its 4th year with vim. Just saying its not the most usable thing, and learning command by memory has its limitations, which gui-menusystems dont have (due to innate human spatial memory + visible list of commands)
17:03  csmrfx: Dont get me wrong, Vim is the best thing for me.
17:03  mgedmin: I hear you
17:03  csmrfx: *uh, editor
17:03  mgedmin: I failed to learn irssi because it had no externally visible command surface (i.e. GUI menus and buttons)
17:04  mgedmin: I'm so happy I learned a bit of vim when I was younger
17:04  csmrfx: I had the idea of spatial one-key menus for vim ('gestural interface') but really dont have time to implement it.
17:05  FernandoBasso: Not relying on menus is what attracted me to vim.
17:06  FernandoBasso: Specially when we only have ttys available.
17:06  csmrfx: You can have menus on ttys. Menus are also implicitly a kind of help system.
17:06  spiiph: The only thing I miss in vim is a thought-to-command interface. I'd like to use my mind to focus on a certain window, and switch to a certain file
17:07  mgedmin: Vim: Caught deadly signal SEGV
17:07  FernandoBasso: I agree that menus help a lot. Insted of remembering a long line option, we just check a box. It helps. Indeed.
17:07 * mgedmin tried LustyExplorer and hit <tab> twice in a row -> vim segfaulted
17:08  csmrfx: spiiph that should most certainly be technically possible, and has been for about 2 decades.
17:08  mgedmin: I suspect I won't be using LustyExplorer then
17:09  csmrfx: spiiph see BrainGate, Neural Signals or Avery Neurocom
17:09  csmrfx: keyboard based gestural interface might be easier to implement...
17:10  spiiph: csmrfx, yeah, but that doesn't mean it's available for consumption :)
17:10  csmrfx: spiiph oh yes they are. There are even controllers for playstation!
17:11  mgedmin: augh, dealing with vim's syntax rules again
17:11  mgedmin: can anyone remind me how to do syn region start=/FOO/ end=/BAR/, but with BAR being beyond the end of the region?
17:12  mgedmin: oh, \ze
17:12  spiiph: csmrfx, sure, but for Vim.
17:12  csmrfx: hehe
17:16  csmrfx: spiiph start with this! http://www.gtec.at/content.htm
17:16  Raging_Hog: spiiph: for the window switching, maybe you could use a gaze tracker http://www.inference.phy.cam.ac.uk/opengazer/
17:16  Dynetrekk_: hi. I just crashed my vim, and restored to the .swp file. Somehow, the swap file was literally _hours_ old! can anyone explain this? it was a complete disaster for me...
17:16  spiiph: Raging_Hog, yeah, I've thought about that too. That would actually be interesting.
17:17  csmrfx: spiiph of course I meant this http://www.gtec.at/products/g.BCIsys/bci.htm
17:18  csmrfx: Dynetrekk_: you want to make a ~/vimbackup -directory and 'set backup' and 'set backupdir=$HOME/vimbackup' in your vimrc
17:18  Raging_Hog: non-invasive? Does that mean that I can *finally* get rid of my brain implant that I use for my vim commenting plugin?
17:19  csmrfx: woohoo
17:19  csmrfx: It really just replaces your mouse or keyboard
17:20  Raging_Hog: spiiph: That might be very interesting. For more down-to-earth stuff, I just might map something with arpeggio for the window switching. Haven't thought of that before
17:20  csmrfx: http://www.gtec.at/products/g.BCIsys/images/PingPong.jpg
17:21  spiiph: Raging_Hog, what's arpeggio?
17:22  Raging_Hog: Simultaneous keypresses. I use it to map f-j to <C-d> http://www.vim.org/scripts/script.php?script_id=2425
17:23  spiiph: Raging_Hog, oh, nice
17:23  spiiph: I think I have to look into that
17:23  Dynetrekk_: csmrfx: can you explain that some more? the vimbackup thing. or point me to a link?
17:24  csmrfx: Dynetrekk_: that will automatically save the previous version of the document in the backup directory. Those 2 lines added to .vimrc and that is really all.
17:24  Dynetrekk_: csmrfx: wow, that is positively amazing. how come this isn't the default?
17:25  csmrfx: well I guess someone might not want copies, or some users might have sensitive data?
17:25  mgedmin: 100% reproducible segfault: vim, \lf, <tab>
17:26  csmrfx: Dynetrekk_: here is a little fancier version, that adds a timestamp so you have many versions: http://vim.wikia.com/wiki/Keep_incremental_backups_of_edited_files
17:26  Dynetrekk_: csmrfx: I guess that's a good point. but it should make its way into intro tutorials, though. thanks a bunch
17:27  mgedmin: segfault happens in Perl_sv_upgrade
17:27  mgedmin: in free_buffer()
17:27  Dynetrekk_: csmrfx: cool!  I'll definitely test that!
17:27  mgedmin: vim unhappy with both perl and ruby (and python, for that matter) linked into the same process?
17:27  csmrfx: enjoy
17:28  Dynetrekk_: csmrfx: oh, one thing: do you have 'set backup' in your vimrc when you add those 4 lines in the link you sent me?
17:28  csmrfx: mgedmin they reading each others objects I suppose
17:29  csmrfx: Do you guys know if there would be an easy way to generate a list of all commands with description and keyseq/:command from these scripting interfaces?
17:30  mgedmin: vimgor, FuzzyFinder
17:30  vimgor: Wish I knew, mgedmin.
17:30  mgedmin: vimgor, FuzzyFinder is http://www.vim.org/scripts/script.php?script_id=1984
17:30  vimgor: Gotcha!
17:31 * mgedmin is catching Orwellian overtones
17:32  mgedmin: this one looks complicated to install
17:41  mgedmin: :setlocal isk+=- makes perfect sense for css
17:41  csmrfx: what do you use for completion btw?
17:42  mgedmin: ^p
17:42  csmrfx: I mean, what do you use for CSS and HTML completion?
17:42  mgedmin: ^x^o
17:42  iaj: SuperTab :-D
17:42  csmrfx: ok, just the builtin omin
17:42  csmrfx: omni
17:43  mgedmin: vim's builtin stuff, provided you have filetype plugin indent on
17:44  heftig: can I change how unprintable characters are displayed? I'd like it to use the Unicode control pictures
17:44  spiiph: heftig, :h 'list
17:45  heftig: spiiph: doesn't seem to allow me to change e.g. ^C
17:45  mgedmin: heftig, I think you could do something with conceal
17:45  DestinyAwaits: spiiph : Hello, Sir :-)
17:45  spiiph: hi
17:46  mgedmin: e.g. syn match ctrlC "^C" conceal  cchar=♥
17:46  mgedmin: (type the ^C as ^V^C)
17:47  mgedmin: (you'll need vim 7.3, and conceallevel=1 and concealcursor=vin)
17:47  mgedmin: and, obviously, use whatever char you want instead of ♥
17:47  Pinchiukas: How can I find out whether a file is encoded in windows-1257 or utf-8?
17:48  spiiph: :set fenc?
17:48  mgedmin: Pinchiukas, let vim autodetect, then check &fileencoding
17:48  heftig: mgedmin: ah, that seems to work, thanks
17:48  heftig: i just need to fix up the styling
17:48  heftig: i.e., the colors
17:48  Pinchiukas: mgedmin: how do I check it? :)
17:49  mgedmin: Pinchiukas, spiiph told you -- :set fenc?, with the question mark at the end
17:49  mgedmin: alternatively :echo &fenc
17:49  mgedmin: I assume you already know you want :set fencs=ucs-bom,utf-8,windows-1257 to make vim autodetect right
17:49  iaj: do you think its a good thing to get used to the rnu and use 9k 10j etc to navigate?
17:49  csmrfx: I use status line which shows file encoding
17:49  iaj: or rather to H,M,L and j,k?
17:50  Pinchiukas: Oh... Ok, thanks. :)
17:50  csmrfx: iaj I just use arrow keys
17:50  mgedmin: iaj, I used 9j when I worked over an extremely laggy ssh connection
17:50  iaj: mgedmin: hm, and what do you usually do?
17:50  Pinchiukas: So if it says it's cp1257 I guess it's what I need. :)
17:50  mgedmin: it was safer to count off the lines and hit 9j than to hit j several times and then wait 5 seconds to see where you ended up
17:51  mgedmin: normally I lean down on <down>  -- yes, I use arrow keys, let the beating commence
17:51  iaj: mgedmin: the quickest way is to /search with no inc search I guess 
17:51  iaj: on slow conns.
17:51  mgedmin: it all depends on where you want to go and how far you are
17:51  mgedmin: 3e might be faster than /word<cr>
17:52  iaj: yeh possibly
17:52  iaj: i ment when the word is on another line
17:52  mgedmin: anyway, extremely laggy ssh connections are in the past for me, mostly
17:53  mgedmin: vim has all kinds of nifty sentence/paragraph-aware navigation
17:53  mgedmin: ), }
17:53  iaj: just the get-used-to is a problem for me
17:53  iaj: using } a lot
17:53  iaj: hardly ever ) tho. :)
17:54  mgedmin: here's what I do
17:54  mgedmin: I read vim's :help -- the reference bits, like lists of all movements
17:54  mgedmin: without trying to remember
17:54  mgedmin: but I get to know what kinds of cool things vim can do
17:55  mgedmin: and then, when I find myself repeatedly doing something, I get the feeling that vim has a better way of doing it
17:55  mgedmin: look it up in the :help
17:55  mgedmin: and start using it for the task at hand
17:55  mgedmin: after two or three such lookups, that key ends up burned into my neural pathways or something
17:56  iaj: haha yeah i guess that's the common way to handle things
17:56  iaj: slow at first - but a large speedup as soon as one got accustomed to
17:58  mgedmin: "continuous improvement" sounds better
17:59  jink: Ok, so maybe editing a 164MB text file with vim wasn't such a great idea... :(
18:00  lucasoman: depends on how much ram you've got :P
18:00  mgedmin: and how long the lines are
18:00  mgedmin: and what syntax rules try to match
18:00  mgedmin: but yeah
18:00  jink: Plenty, it just takes forever.  The lines aren't that long.  The extension is .log.
18:02 --- Pendragon_away is now known as Pendrag0n
18:02  ryduh: Is it possible to highlight user defined functions in php?
18:06  qubit: is there a syntax file around that supports a lot of the bash specific stuff? Like "$()". I've googled but am not coming up with much
18:07  graywh: qubit, the include sh syntax is good
18:07  Pendrag0n: :set filetype=bash
18:07  graywh: *included
18:07  qubit: graywh: it breaks horribly on $()
18:07  spiiph: Pendrag0n, no, that's wrong.
18:07  spiiph: :h ft-sh-syntax tells you why
18:07  graywh: you just have to convince vim you're editing bash and not sh
18:08  qubit: graywh: how? the shebang is bash
18:08  graywh: qubit, :echo b:is_bash
18:09 * mgedmin wonders if he should mention that $() is cromulent posix sh, and not a bash extension
18:10  qubit: mgedmin: ya, a lot of shells have it, I was just using it as an example as there's other stuff, $() is just the one thats screwing me over right now
18:10  graywh: qubit, also :echo &ft
18:11  qubit: graywh: b:is_bash was undefined, from googling I set it to 1
18:11  qubit: graywh: ft is sh
18:11  graywh: now that you've :let b_is_bash=1, :set ft=sh
18:12  qubit: graywh: thanks, i can read my file now :-)
--- Log closed Wed Nov 03 21:41:39 2010
