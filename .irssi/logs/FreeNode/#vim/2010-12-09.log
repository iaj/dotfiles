--- Log opened Thu Dec 09 00:00:18 2010
00:07  jsvana: Alright, so I have a "Last Modified" line in a file that I want to be changed automatically on exit.  I set up a script, but it's not working.  Any ideas?
00:08  MarcWeber: jsvana: I have something - but I'm not going to show you what I did - why doesn't it work? :)
00:09  MarcWeber: So what are you asking for exactly?
00:11  jsvana: it's "autocmd Bufwritepre,filewritepre *.c exe "1,".10."g/Last Modified: .*/s//Last Modified: " .stroftime("%c")
00:11  jsvana: '
00:13  jsvana: MarcWeber: The line to be replaced is on line 9, and it's " * Last Modified: "
00:13  MarcWeber: jsvana: Any errors?
00:13  MarcWeber: Does the line work without au command?
00:13  jsvana: I'm not sure how to check errors
00:13  MarcWeber: jsvana: Type :messages
00:13  MarcWeber: Any red lines?
00:13  jsvana: ah.
00:14  MarcWeber: Usually they are shown at the bottom. In some rare cases they are hidden by redraws.
00:14  MarcWeber: jsvana: Anyway, What happens if you execute the :exe line manually?
00:14  jsvana: The only line is the "maintainer" line.  Also, forgive the speed, it's on another computer.
00:14  jsvana: I'll check
00:16  MarcWeber: jsvana: do you have vim on the computer you're sitting at?
00:16  jsvana: I'm sitting at the computer, just have to switch the kvm
00:16  robacarp: okay, so does anyone have any tips on how to make vim sanely autoindent php/html mix?
00:16  deryni: Did you mean stroftime or did you mean strftime?
00:17  jsvana: I ran the command and the pattern wasn't found, but I don't know why the ".*" isn't matching
00:17  jsvana: And yeah, sorry
00:17  MarcWeber: jsvana: So can you open a file, add your "Last .." line and run the :exe command manually?
00:18  deryni: Paste the exact autocmd line you are using as-is here?
00:18  jsvana: Yeah
00:18  MarcWeber: jsvana: Try running it manually, please.
00:19  jsvana: deryni: it's the command from earlier, but with "strftime" instead of "stroftime"
00:20  MarcWeber: jsvana: So does it work? It can't take you so long to try running it and provide some feedback..
00:21  jsvana: it says "invalid range"
00:21  MarcWeber: jsvana: Well done. How many lines does your buffer have?
00:21  jsvana: 1.
00:21  jsvana: Range is 1,10
00:21  MarcWeber: Add 10 more lines and retry
00:21  jsvana: Okay
00:21  jsvana: Now it's "Pattern not found"
00:22  MarcWeber: jsvana: Do you know how to fix the pattern?
00:22  jsvana: I thought that so long as the pattern didn't have "^" at the beginning, it would match from anywhere in the string.
00:23  jsvana: So, no, not really.
00:23  MarcWeber: jsvana: Type /
00:23  paissad: guys, do you have a tip so that if ever i start modifying a file where i need root privileges and save my changes anyway
00:23  MarcWeber: Then type char by char the pattern until it no longer matches.
00:23  jsvana: Alright
00:23  MarcWeber: paissad: use sudo or suedit?
00:24  MarcWeber: jsvana: So ? Where does it fail?
00:24  jsvana: MarcWeber: Matches up to the colon.
00:24  paissad: MarcWeber, actually, i already did some changes in the file without using sudo before, and  now i want to save the changes without (knowing that i did not use sudo)
00:25  paissad: i know there's a tip, but i don't know it yet
00:25  jsvana: If I match that, will it change the whole line?
00:25  MarcWeber: jsvana: Do you have a space after the colon?
00:25  jsvana: MarcWeber: Just got it working.
00:26  MarcWeber: great :)
00:26  jsvana: Oh wait, now it just appends.
00:26  MarcWeber: You don't match anytihng. try /.*/ intsead of //
00:27  jsvana: Just did that lol.
00:27  jsvana: Now it works.
00:27  jsvana: Thanks for your help!
00:27  paissad: MarcWeber, :w !sudo tee %
00:27  paissad: that worked
00:27  paissad: but i don't understand it anyway
00:27  paissad: :w -> save
00:28  MarcWeber: paissad: Neither do I. I only know about :! a-shell-command
00:28  paissad: yes indeed
00:30  deryni: :help :w_c
00:35  paissad: deryni, thanks
00:48  akosch: can i use fixedsys excelsior on *nix with gvim?
00:53  qfr: akosch why not?
00:54  akosch: qfr: nevermind, it works great
00:54  akosch: qfr: oh, those old DOS times :)
00:57 --- fedesilva_ is now known as fedesilva
01:08  rsvp: wow, I take a nap for a couple of hours, and the topic is still: "guys, do you have a tip so that if ever i start modifying a file where i need root privileges and save my changes anyway"
01:09  MarcWeber: rsvp: :!sudo sh -c '  cat > %' or such
01:09  MarcWeber: However don't blame me if only have a file is written on power outage or such..
01:13  rsvp: for ":w !sudo tee %" the story is this: ":w !" part takes the modified buffer into standard input and pipes it into a cmd, in our case admin tee which splits that input into two branches: one to standard output and the other to a named file (which in our case is % i.e. the current working filename) -- in sum, the modified buffer gets redirected to itself with sudo blessing.
01:14  rsvp: BTW, that only work on vim, not gvim -- the mystery, and why I took the nap in the first place ;-)
01:15  MarcWeber: rsvp: I have another option: Get VAM and try :ActivateAddon sudo :)
01:16  MarcWeber: Or goto www.vim.org and download the file manually.
01:18  rsvp: did anyone figure out why ": ... !sudo ..." does NOT work with the GUI and Mac versions of vim ??
01:19  rsvp: MarcWeber, thanks, will check it out.
01:19  MarcWeber: rsvp: What do you mean by "not working"?
01:20  MarcWeber: Can you try :!sudo cat  to see wether sudo works? It print the contents inside vim.
01:20  MarcWeber: If that works maybe try :!sudo id to see whether sudo works as expected.
01:20  rsvp: MarcWeber, "gVim it doesn't wait for a password, delays for a few seconds and re-prompts, and stops after 3 attempts"
01:21  MarcWeber: So you can't enter the password?
01:22  MarcWeber: Probably its a terminal emulation thing.
01:22  MarcWeber: rsvp: What are you using Vim for? I have another Mac issue when using vim-addon-async - maybe you can help (?)
01:23  rsvp: MarcWeber, using gvim under Linux Ubuntu...
01:24  MarcWeber: So I was dreaming when you said "does NOT work with the GUI and Mac versions of vim"
01:24 --- fedesilva_ is now known as fedesilva
01:24  MarcWeber: rsvp: Anyway, have you tried the sudo plugin?
01:24  MarcWeber: You have to edit by url :e sudo://path or such.
01:27  iaj: can I somehow get an overview of what changes :earlier [...] would result in?
01:27  rsvp: a potentially one-line command! should not be traded in for  a plugin ;-)
01:28  MarcWeber: rsvp: So read the plugin and extract that one line command ..
01:28  MarcWeber: 	exec '%write !sudo tee >/dev/null "'.file.'"'
01:28  MarcWeber: But you already tried that ..
01:31  godlygeek: you could try replacing sudo with gksu ...
01:31  ixaphire: Hi! Couldn't google that: When I press <Ctrl-P> in insert mode, I get a popup menu with possible variants - that's great. But it also puts first variant to buffer. Any way to disable that?
01:31  godlygeek: :help 'cot
01:32  rsvp: one just normally ":w tmp.txt" then ":q!" and then at the CLI, "$ sudo cat tmp.txt > denied.txt" -- which in sum, unlike ":w!" does not change permissions and owners.
01:34  iaj: ixaphire: for codecompletion i like completeopt=longest,menuone  :-)
01:35  rsvp: MarcWeber, so it's three lines max, not even worth a bash script ;-)
01:36  ixaphire: godlygeek,iaj: thank you, was blind to notice 'longest' option there
02:00  tpope: bronson: not really, no
02:00  iaj: is there someway to complete to vimscript functions?
02:02  bronson: tpope: ah, well.  thanks.
02:10  cpg: hi there. is there a simple way to tell vim to generate temp files somewhere else? like in /tmp/ or something?
02:11  cpg: i am using dropbox and it's very disruptive to see the updates for the .*.swp files
02:12  Raimondi: cpg: :h 'dir'
02:15  cpg: Raimondi: awesome
02:15  cpg: i got this E303: Unable to open swap file for "update-mirror.sh", recovery impossible
02:15  cpg: let me show u what i put
02:16  cpg: i put this in ~/.vimrc
02:16  cpg: :set dir= "/tmp,/var/tmp,~/tmp,."
02:17  cpg: ok, bad quotes
02:22  fow: cpg, and there shouldn't be a space after the =
02:23  cpg: kk
02:24  cpg: thanks fow, Raimondi !
02:24  Raimondi: np
03:39 --- dive is now known as Guest35660
03:50  sontek: Is there a way to draw a line at 79 columns and a line for each depth of my methods so I can see where they line up?
03:52  davek: sontek: if you're using vim 7.3 -   :set colorcolumn=79  will draw you a (by default red) line at column 79
03:53  davek: and :help listchars    to learn about how to mark whitespace chars to help with indentation levels
04:00 --- dive is now known as Guest35281
04:08  sontek: davek: nice thatnks, that worked well
04:08  sontek: whats the shortcut for current file? So I can !execute a command and pass it current file
04:09  sontek: % seems to work
04:12  wahnfrieden: %
04:13  nate-: sontek: https://github.com/nathanaelkane/vim-indent-guides is a new plugin (beta) that I'm working on for indent guides in vim... supports space and tab indent styles
04:14  sontek: nate-: thanks, i'll check that out :)
04:14  nate-: also automatically picks the colors based on your colorscheme :P
04:14  sontek: Perfect because my color scheme is amazing!
04:14  sontek: ;)
04:14  nate-: hah
04:15  sontek: Its jellybeans
04:15  sontek: its pretty good
04:15  nate-: yea I like that one
04:15  nate-: I'm a fan or rdark on non-glossy screens, and bclear (light) on glossy screens
04:15  nate-: s/or/of
04:50  eN_Joy: text copied from pdf contains some weird characters, how do i strip them all but leave all alphanumeric, spaces, and punctuations? thanks
04:52  eN_Joy: i did %s/\W//g but all spaces and punctuations are removed;-)
05:01  Raimondi: eN_Joy: Something like  :%s/[^[:alnum:][:blank:][:punct:]]//g
05:03  eN_Joy: thanks Raimondi
05:03  Raimondi: np
05:25  homekevin: I hate those weird characters.
05:42  fender0107401: I find the vim default installation contain a "matlab.vim" file in the indent directory, how to use it?
05:42  fender0107401: I mean I don't konw how to set vim indent the current file by using "matlab.vim" file.
05:43  Rakko: you have to edit a matlab file (.m)
05:43  fender0107401: Yes, I am editing a .m file now
05:44  fender0107401: But it dosen't looks like works.
05:45  Rakko: type :ft plugin indent on
05:45  Rakko: and :syn on
05:56  mathstuf: hi, is there any reason bufnr() would return -1?
05:56  homekevin: fender0107401: You'd turn it on by doing :set ft=matlab, but if you want automatic detection you should have filetype on (or filetype plugin indent on, or some other variant) in you .vimrc.
05:56  deryni: mathstuf: What does ':help bufnr(' say?
05:57  mathstuf: is the buffer that vim opens by default actually a buffer?
05:57  homekevin: mathstuf: Yes
05:57  mathstuf: thats returning -1
05:58  mathstuf: the statusbar has 1 though
05:58  homekevin: mathstuf: how are you calling bufnr?
05:58  mathstuf: :echo bufnr(0)
05:58  deryni: How are you calling it to get -1?
05:58  homekevin: mathstuf: That's not a valid buffer identifier
05:58  mathstuf: ah, oops
05:58  mathstuf: i wanted bufname(0)
05:59  homekevin: Oh, it is valid. Sorry.
05:59  homekevin: But only if there's an alternate buffer.
05:59  mathstuf: ah
05:59  mathstuf: i misread that then
05:59  homekevin: mathstuf: The current buffer is "%"
06:00  mathstuf: yeah
06:00  homekevin: Or ""
06:00  mathstuf: i though that would have failed if the buffer wasnt of a file
06:00  homekevin: I wouldn't use 0 just because it's so unclear.
06:00  mathstuf: 0 doesnt work anyways :)
06:00  homekevin: As far as I know a buffer is a buffer as far as bufname etc. are concerned.
06:01  homekevin: 0 *should* work as an alternative to "#", but that's not what you need, sounds like.
06:01  mathstuf: well, its in a function, so the buffer isnt guaranteed to have an alternate
06:02  Raimondi: expand('%') returns an empty string on a new buffer
06:02  mathstuf: some context is probably warranted ;)
06:03  mathstuf: http://fpaste.org/Ozwv/
06:04  mathstuf: takes the current and the next window and flips the split direction
06:04  mathstuf: well, can
06:07  bloger: can I plug external speell checker?
06:07  bloger: *spell
06:07  mathstuf: how ironic ;)
06:08  homekevin: bloger: Are you aware of the internal spell-checker?
06:08  homekevin: bloger: I thing you *can* use an external one, but I'm not sure.
06:09  mathstuf: :!hunspell % ?
06:09  mathstuf: well, that requires writing the file
06:12  bloger: homekevin: I use ispell with joe a lot of time. there is already good custom dictionary.
06:12  bloger: homekevin: why not sure?
06:13  bloger: mathstuf: english language is no my native language. ñ ÏÔÌÉÞÎÏ ÇÏ×ÏÒÀ É ÐÉÛÕ ÐÏ ÒÕÓÓËÉ.
06:14  mathstuf: no offense intended, just found it ironic
06:15  mathstuf: homekevin: got it working: http://fpaste.org/4Cpp/
06:17  bloger: so, how can I plug ispell to vim?
06:19  qfr: I have search highlighting activated, how do I get rid of the highlight when I no longer want to see it? Sometimes it bothers me
06:20  frogonwheels: qfr: :help :nohls
06:20  frogonwheels: The bot has a help on this.. but can't find it.
06:21  frogonwheels: vimgor: nohl
06:21  vimgor: :nohl will disable current search highlighting until the next search is performed. A common map to avoid typing :nohl is ':nnoremap <silent> <C-l> :nohl<CR><C-l>'. See also, :help 'incsearch' and :help 'hlsearch'
06:21  frogonwheels: ^^^ qfr
06:21  qfr: Thanks
06:24  frogonwheels: bloger: the advantage of using the internal spellchecker is that it if the syntax supports it, then the spelling only happens (for eg) in the comments
06:24  frogonwheels: bloger: or for html elsewhere (for eg)
06:29  bloger: frogonwheels: I can run ispell as external command, eg ispell < file. But will be more convenience to do it by hotkey...
06:30  frogonwheels: bloger: can you get ispell to do it  stdin to stdout?
06:32  bloger: frogonwheels: not sure.
06:32  bloger: he able to write changes on exit.
06:37  popl: http://vim.pastey.net/143762 # my indentation problem
06:40  bloger: seems I got wrong color on :help vimspell - red text on red background. how do I fix that?
06:40  popl: in .vimrc I use the line 'filetype plugin indent on'. is this wrong?
06:48  bloger: wrong color for error message in default scheme.
06:52  frogonwheels: polemon: that seems ok.
06:52  frogonwheels: polemon: sorry
06:56  Rakko: polemon must be like an ancient greek pokemon
06:57  popl: x-rated pokemon? :P
06:57 --- MikhX_ is now known as MikhX
06:58  Rakko: lol
07:27  argent0: hi, i need vim not to use space charactes when i hit tab, and would like to have tab 3 'spaces' long, is than posible
07:27  lucs: You bet. But I don't remember how exactly.
07:31  Rakko: argent0: :set tabstop=3 noexpandtab
07:34  argent0: Rakko: thanks, that solved my problem - python3 is madness :-(
07:36  EspadaV8_W: hey, should vim remember your terminal settings when using :! ?
07:36  EspadaV8_W: i have alias set up in my .profile that work in the term, but not from inside vim
07:49  bloger: i spend 50 minutes on this mistake and did not fix. I will drop out vim and continue use joe.
09:06 --- daniel__ is now known as daniel
09:18  belak: How can I remove the first 2 chars from the next 119 lines?
09:19  Raimondi: :.,+119s/^..//
09:24  seku: or 0^V119jx.
09:24  seku: not ^
09:24  belak: Thanks
09:25  daniel: or ^vl119jd
09:25  daniel: (using visual block mode)
09:26  seku: shortcircuited. I meant ctrl with ^ and then after i confused it with move to beginning of line and 0 was already there :D
10:07  jink: Is there an "inner" for <b> ... </b> for example?  I'm editing xml and want to replace stuff between a <value> .. </value>.
10:08  jmcantrell: jink: :h text-objects
10:10  jink: jmcantrell: cit, thanks. :)
10:14  strk: any tool to deal with XML files ?
10:15  strk: like... jump to tag close/open
10:15  strk: { } improved...
10:15  jmcantrell: strk: :help matchit
10:17  strk: E149: Sorry, no help for matchit
10:17  strk: if it was about * and # I know those ones
10:18  TAsn-work: bah, too complicated to use clang_complete.
10:18  TAsn-work: silex, is there a way to integrate it with autotools or something?
10:18  TAsn-work: because setting all the different compilation options
10:19  jmcantrell: strk: search for matchit.vim
10:19  TAsn-work: (which may change because I may reconfigure with different compilation options)
10:19  TAsn-work: just makes it hellish
10:19  TAsn-work: and unusable
10:19  jmcantrell: i could have sworn it was an included plugin
10:20  jmcantrell: strk: matchit is basically just an extension of % to handle stuff like xml/html tags
10:27  strk: ah, yes I have the .vim file somewhere
10:30  strk: in vim-runtime package, looks like (I'll install and try :help again)
10:30  strk: great, :help matchit reading in progress
10:35  strk: so, :help matchit gives help about _installing_ it
10:35  strk: does it mean having it in /usr/share/vim/addons/plugin/matchit.vim is not enough ?
10:35  strk: really need to be in ~/.vim/plugin ?
10:35  strk: this is on ubuntu lucid
10:35  Raimondi: No, to use it put   runtime macro/matchit.vim   in your vimrc
10:36  jmcantrell: you'll need to source it for filetypes that it applies to
10:36  jmcantrell: actually, that's macros/matchit.vim
10:36  jmcantrell: do not put that in your vimrc
10:37  jmcantrell: put it in the filetype plugin vim files for filetypes that it supports
10:37  Raimondi: Oops! didn't know it wasn't a good idea.
10:38  jmcantrell: it's not bad, necessarily, just unnecessary.
10:38  strk: uhm
10:38  strk: I never used filetype plugin vim files :/
10:39  strk: full of errors, btw
10:39  strk: E319: Sorry, the command is not available in this version:   endwhile
10:39  strk: line  729:
10:39  strk: this was with runtime macros/matchit.vim
10:41  strk: and version 7.2.330
10:43  jmcantrell: it works here, but i'm not on ubuntu
10:48  the_isz: so i'd add  au FileType html source $VIMRUNTIME/macros/matchit.vim
10:48  the_isz: to my .vimrc?
10:49  jmcantrell: i add "runtime! macros/matchit.vim" to ~/.vim/ftplugin/html.vim
10:50  the_isz: jmcantrell: yeah, i'd usually do that, too, but just for one command i won't create a whole vimscript file :) but i'll check the difference between  :source  and  :runtime  now, thanks.
10:51  jmcantrell: both are valid, i just prefer the separate file b/c i like to keep stuff like that out of the vimrc
10:51  the_isz: jmcantrell: fair enough
10:54  trone: Hello. I have a file with \r ( <0d> ) non-printable char everywhere. I can clean it making %s/\r// , but is possibile remove something using its Hex code ? (a sort of s/<0d>// ?)
10:54  dimm: can i save substitute commands in gvim ?
10:54  dimm: something like macros, or functions...
10:56  seku: sure. q[letter] to record and @[letter] to play back and @@ to play back previous playback again
10:56  paddy__: how to do copy pest in vim
10:57  seku: y copies (yank) and p pastes
10:58  paddy__: how to select a word to copy
10:58  jmcantrell: trone: sure, \x0d
10:58  the_isz: i advice to not copy the pest. it was a bad idea in the medieval ages, it is a bad idea now ;)
10:58  the_isz: s/advi\zsc/s/
10:59  seku: paddy__: you should do vimtutor, imho. yiw would copy a word under cursor. v goes to visual mode where you can select text, V goes to visual line and ctrl+v goes to visual block
11:00  trone: jmcantrell: it seem check for \x0d string... not for the hex code.
11:01  trone: jmcantrell: indeed \x seem do something that I don't understand. A seach enlight a character and jump around with a weird criteria.
11:02  trone: *Search
11:02  the_isz: trone: try \%x0d instead
11:03  trone: the_isz, jmcantrell :) find... /\ ctrl+v return give me the "entity"
11:05  trone: so I can easily use ctrl+v in cmdl mode. (I could get a try before...) So I'm curious to understand what match /\x …
11:06 --- silex is now known as Silex
11:07  jmcantrell: trone: i gave you the wrong one, /\x0d will search for the string that represents x0d, i think. i'm not sure though because I've never used it, personally
11:08  trone: jmcantrell: np. :) thank you for help.
11:08  jmcantrell: sure, np
11:24  TAsn-work: Hey, is cscope any good?
11:24  spiiph: That's like asking "Hey, is ls any good?"
11:25  qfr: I replaced ls actually ;o
11:26  TAsn-work: spiiph, there's also ctags
11:26  TAsn-work: which I saw more references to.
11:26  TAsn-work: spiiph, let me rephrase:
11:26  TAsn-work: as someone who's using ctags
11:26  TAsn-work: would I benefit/enjoy moving to cscope?
11:27  Silex: TAsn-work: not happy with clang_complete?
11:27  TAsn-work: Silex, nope, as I said before:
11:27  TAsn-work: <TAsn-work> silex, is there a way to integrate it with autotools or something?
11:27  TAsn-work: <TAsn-work> because setting all the different compilation options
11:27  TAsn-work: TAsn-work> (which may change because I may reconfigure with different compilation options)
11:27  TAsn-work: <TAsn-work> just makes it hellish
11:27  TAsn-work: <TAsn-work> and unusable
11:28  TAsn-work: I'm working on complex projects
11:28  TAsn-work: and I change configure flags often
11:28  Silex: ah I missed it, btw silex == offline, Silex == online
11:28  TAsn-work: i.c
11:28  TAsn-work: good to know.
11:28  TAsn-work: well, you see my point?
11:28  Silex: yes, I'm working on a solution
11:28  TAsn-work: well, at the moment it's still not usable for me :)
11:28  Silex: but basically, gccsense uses something that I plan on adopting
11:29  Silex: which is make CC="recordoptions gcc"
11:29  Silex: and recordoptions records all the -I and -D etc, and can pass it to clang_complete afterwards
11:29  Silex: so you just build your project once with the options recorder
11:29  Silex: and then clang knows your compile options
11:30  Silex: but yeah, for know you need to edit .clang_complete yourself or edit g:clang_user_options
11:30  Silex: which can be somewhat painful if you switch projects often
11:31  Silex: I'm convinced clang_complete or gccsense is the way to go tho, cscope or ctags are only good for plain C
11:31  Silex: c++ is too hard to parse for them
11:31  TAsn-work: I only do plain c.
11:32  Silex: oh, then I guess ctags/cscope would be ok
11:32  Silex: you tried ctags already no?
11:32  Silex: you didn't like it?
11:33  TAsn-work: no good enough
11:33  TAsn-work: it doesn't work in these cases:
11:33  TAsn-work: foo->bar->foo
11:33  TAsn-work: won't complete the foo
11:33  TAsn-work: (last foo)
11:33  Silex: yeah well not too surprising
11:33  Silex: it doesn't really does the parse tree as clang/gccsense do
11:34  Silex: s/does/do&
11:34  Silex: s/&/\//
11:34  Silex: :)
11:35  TAsn-work: what about cscope?
11:35  TAsn-work: will it do that?
11:35  Silex: not sure, google it to see if it has limitations
11:35  Silex: or just try it, it's fairly quickly installed iirc
11:37  TAsn-work: yeah, trying to get it to work as we speak.
11:43  iaj: can someone gimme some hints about the best way to use folding on java code?
11:44  TAsn-work: grr cscope doesn't support auto-completion
11:44  TAsn-work: which sucks donkey ass.
11:46  iaj: what is the best place to have files that shall get sourced for a certain filetype only?
11:47  fow: iaj, entire files? ftplugins. :h new-ftplugin
11:47  fow: err that's not the right tag.
11:47  fow: iaj, just :h ftplugin
11:48  iaj: fow: thanks))
11:48  fow: you're welcome
11:49  iaj: so I just put the file into ~/.vim/ftplugin/java/bleeeeh.vim
11:50  fow: yeah, that would work
12:05  dimm: <seku> sure. q[letter] to record and @[letter] to play back and @@ to play back previous playback again
12:05  dimm: how it can work , in case when i try :qw ? )
12:07  marcelo: hi
12:07  marcelo: hi, would someone help with spell check, I am trying to use :setlocal spell spelllang=pt_BR but the file is not foung. How can I get/find the file?
12:07  dimm: ah, q without :
12:09  dimm: can i record two or more substitute ?
12:10  dimm: substitutes
12:12  fow: dimm, you can record 26 using complex repeats (qx, @x). It's really just storing text in a register then reading back that register as if you had entered the text into Vim yourself. see :h complex-repeat
12:21  dimm: fow, also i need :so <file with commands>
12:28  fow: dimm, er?
12:28  dimm: :so is what i need
12:28  fow: 'kay
12:41  iaj: are macros storing : commands?
12:42  strull: iaj: easy to try. isn't it?
12:42  kalikianafk: is there any way to enfore # to always search forward, ie. down?
12:42  kalikianafk: it is rather confusing when it sometimes jumps upwards
12:43  strull: use * instead ?
12:44  kalikianafk: oh, damn, thanks. I wasn't at all aware of that
12:44  kalikianafk: curiously, # most of the time really did the same, but I guess that is a coincidental phenomenon
12:45  strull: yes, due to 'ws
12:45  kalikianafk: that make sense in hindsight
12:46  kalikianafk: thanks for clarifying
12:46  strull: np. have fun!
12:51  jhoepken:  #git
12:56  Silex: strull, what is 'ws ?
12:57  kalikianafk: Silex, :help 'ws
13:28  iaj: is there some way to use 20V  to act as 20dd would?
13:30  Kuukunen: iaj: what are you trying to do?
13:31  iaj: Kuukunen: visual select 20 lines :)
13:31  Kuukunen: iaj: V20j
13:33  iaj: im just curious why doesn't 20V have a shorthand for that
13:35  nate-: what autocommand events get triggered when using :sp or :vs ?
13:35  nate-: BufEnter and BufWinEnter don't trigger
13:40  nate-: nm figured it out, using BufEnter & WinEnter instead of BufWinEnter did the trick
14:10 --- fedesilva_ is now known as fedesilva
14:25  iaj: when I got a variable set to a function like   foldtext=FooBar()  where do I find out which FooBar() that is?
14:26  mgedmin: :verbose function FooBar should tell you which script defined it
14:33  iaj: mgedmin: alright thanks... is there something wrong about having such a file in my ~/.vim/ftplugin/java/  ... http://paste.pocoo.org/show/302707
14:34  mgedmin: looks all right to me, at first glance
14:34  mgedmin: Num2S seems wasteful, why not use printf("%3d", diff) ?
14:34  iaj: it alwaays cries about - no fold found
14:35  mgedmin: define always, please
14:35  iaj: well when I first set it up, it was running correctly - on a certain file.. but now... it doesn't anymore and I don't know why
14:36  mgedmin: vimgor, doesn't work
14:36  vimgor: What happened? Did it fall asleep on your couch? Eat your homework? Destroy your hard drive? Is it making faces at you? Does it want more money? Is it sleeping with your best friend? Please be specific!
14:36  iaj: :verbose set fdm?  and  :verbose set fdl?  both are set correctly
14:36  iaj: however when I do :set fdl=0  nothing gets folded and I can't close methods to folds 
14:36  mgedmin: you set fdm to manual
14:36  mgedmin: this means you need to manually define each fold
14:37  mgedmin: did you do this?
14:38  iaj: oh... hmmm.. i get it now.. but why did it work at the start...  I just did set foldlevel=1 and all methods got folded
14:38  iaj: even tho I had it set to manual
14:41  iaj: thanks mgedmin think it might have been set to syntax then :\
14:41  iaj: mgedmin: when I specify manual folds for a file.. can I somehow save that as well?
14:42  mgedmin: see :help about views
14:44  iaj: thanks;)
14:50  ctp___: hi all. anyone here compiled vim 7.3 on os x ?
14:50  ctp___: i use CONF_OPT_RUBY=--enable-rubyinterp make but get an error:
14:50  ctp___: ld: library not found for -lruby.1.9.1
14:50  ctp___: i'm using rvm ruby
14:56  Silex: ctp___: dunno about rvm, but in the C world it means it cannot link to the ruby library
14:56  Silex: check your library include paths (-L) and if libruby1.9.1 exists there
15:00  ctp___: Silex: hm, there's a ruby.h in my /Users/ctp/.rvm/rubies/default/include/ruby-1.9.1/, so a simple ./configure --enable-rubyinterp CFLAGS="-I /Users/ctp/.rvm/rubies/default/include/ruby-1.9.1/" && make should work, shouldn't it?
15:01  Silex: ctp___: it's not complaining about the .h files
15:01  Silex: it's complaining about the libs
15:02  Silex: you know, the .so stuffs
15:02  ctp___: ah, ok. i see
15:02  ctp___: yepp
15:02  ctp___: ;-)
15:05  craiggles: hey guys, what do i do to set the syntax hilighting for a certain file? just ive got a file with .simba extension but its actually pascal.
15:05  iaj: craiggles: :set filetype=pascal
15:05  kurkale6ka: :se ft=pascal
15:05  craiggles: thanks.
15:06  craiggles: kurkale6ka: did you actually mean just :se or :set.
15:06  massimo: Hi. Why does pressing "*" on foo look for /\<foo\> instead of /foo ?
15:06  kurkale6ka: same thing...
15:06  strull: massimo: that's what g* would do
15:06  ctp___: craiggles: pascal still alives?
15:06  ctp___: ;-)
15:06  craiggles: heh ctp___.
15:07  craiggles: i dont code it in myself just theres a game autmation bot that its used for.
15:07  Kuukunen: iaj: 20V would be kinda silly
15:08  Kuukunen: iaj: I mean, generally the point is that the number means "do the same thing 20 times"
15:08  Kuukunen: entering line selection mode 20 times doesn't make much sense
15:08  Silex: iaj: V20j
15:09  Silex: (sorry if it has been said before)
15:09  Kuukunen: Silex: yes, I said it :P
15:09  Kuukunen: he was just wondering why 20V doesn't work
15:10  craiggles: i use dvorak keyboard, what should i do so that i still have the benefits of hjkl etc.
15:11  ctp___: hm, which lib file exactely is missing by -lruby.1.9.1? libruby.1.9.1.so?
15:12  Silex: I think so yes, hold on
15:13  massimo: strull: But weird, this /\<foo\> does find $foo and ${foo} but not L_foo[0] for example?
15:13  Kuukunen: craiggles: map your keys around?
15:14  Kuukunen: I'm not using hjkl either, I use jklö :P
15:14  strull: massimo: why wouldn't it?
15:14  Silex: massimo: _  is not a word boundary
15:14  craiggles: guess i could do that, because im wanting to take full advantage of vim and not have my layout stop me.
15:14  Silex: massimo: because keke_foo should not match
15:14  craiggles: so it'd mean that i would be using dhtn
15:15  massimo: Silex: I see, but what does \<\> actually do in vim RegEx?
15:15  Silex: ...word boundary
15:15  massimo: Thanks.
15:15  Silex: :h \<
15:16  kiri: hi all (at least to the awake ones)
15:16  kiri: quick question
15:16  kiri: say I am editing multiple files at once in Vim, after editing a few, is there a way to see how many are left? Like a cursor / pointer of some sort that tells me where I am?
15:16  mgedmin: kiri, :ls, maybe
15:17  mgedmin: BufExplorer.vim, perhaps
15:17  mgedmin: when you do :next it also shows you (X of N), I believe
15:17  strull: kiri: try :args
15:17  mgedmin: yeah, :args best matches your wish
15:18  kiri: :args++
15:18  kiri: thanks guys
15:18  kiri: mgedmin, :n won't show the X of N bit
15:19  mgedmin: ah, the title bar shows (4 of 5)
15:20  mgedmin: I rarely pass more than one filename when I start vim ...
15:21  Starfire: I'd just use tabs.
15:22  mgedmin: me agrees with vimgor about tabs
15:22  mgedmin: vimgor, tabs
15:22  vimgor: Tab pages are not buffers, don't try to force them to act like buffers. Consider tab pages like viewports, layouts, or workspaces. Trying to setup 1 tab page == 1 buffer is an exercise in futility. Do ':set hidden' and get started. Get FuzzyFinder, LustyExplorer or BufExplorer to make getting around your buffers easier. See http://vim.wikia.com/wiki/Category:Tabs for more info.
15:24  kiri: mgedmin, I am editing these files on a remote machine via ssh in a screen session -- no title bar
15:24  mgedmin: what eats it? screen?
15:24  kiri: lol
15:24  mgedmin: no, ssh -- apparently
15:24  mgedmin: strange
15:25  kiri: I probably have to do something fancy in the ssh config then to get the title bar working
15:25  mgedmin: or :set title
15:25  mgedmin: by default it is on only if vim knows it can restore the old one
15:25  mgedmin: which is basically when vim can connect to X
15:26  mgedmin: but I have ssh X forwarding
15:26  mgedmin: so I'm clearly missing something here
15:26  kiri: I have no X forwarding here
15:26  kiri: so that maybe the problem
15:26  mgedmin: ah, the WINDOWID environment variable doesn't survive ssh'ing
15:27  kiri: like I said, that probably needs some fancy config and environment settings
15:27  kiri: am no expert
15:27  kiri: :args will have to do for now
15:27 --- ctp__ is now known as ctp
15:28 * mgedmin reads about ssh's SendEnv and AcceptEnv options
15:28  mgedmin: ok, too much hassle for too little gain
15:28  mgedmin: but possible in principle
15:28  mgedmin: :set title is simpler
15:30  peth: kiri: you could also customize your 'statusline' to include %a
15:30 * mgedmin likes :set wiw=80    <-- unrelated
15:31  kiri: mgedmin, :set title ain't working either :(
15:31  mgedmin: that's screen's fault
15:32  mgedmin: afaict
15:32  mgedmin: go with :args or 'statusline'
15:32  kiri: yep
15:33  Dynetrekk: what is 'one whitespace char' in vim regex? I thought it was \s...
15:33  Dynetrekk: (I want to search for e.g. or e. g.)
15:33  kurkale6ka: you thought wisely
15:34  kurkale6ka: e\.\s\=g\.
15:37  kurkale6ka: even better e\.\s\{-}g\.
15:38 * mgedmin would use e[.]\s*g[.]
15:38  mgedmin: because * is shorter and easier to type than \{-}, but completely equivalent in this case
15:38  kurkale6ka: mgedmin: and would match e.g. bla bla ............................................... g.
15:38  mgedmin: and I find [.] easier to read than \. for some reason
15:38  mgedmin: \s*g vs \s{-}g? no diff whatsoever
15:39  mgedmin: 'bla' is not a valid match for \s
15:39  mgedmin: if you had .* or .\{-}, then it would matter a lot
15:39  iaj: only diff it would match e.    g. as well
15:40  Dynetrekk: kurkale6ka: what does {-} or \= mean?
15:40  mgedmin: both of them would
15:40  mgedmin: Dynetrekk, :h pattern has all the answers
15:40  iaj: mgedmin: oh sorry I read the \= part
15:40  mgedmin: if you have the time
15:40  mgedmin: \{-} is a non-greedy version of *
15:40  Dynetrekk: mgedmin: oooh, thanks, but I don't have time right now
15:40  mgedmin: which is match zero or more of the preceding
15:40  mgedmin: \= means match zero or one of the preceding
15:41  kurkale6ka: \{-} is better here for cases where g. follows a e.g.
15:41 * mgedmin has nothing against summarizing the answers on the channel, but prefers to let people know how to find the primary sources of documentation
15:41  kurkale6ka: and yes . is easier to write but not equivalent to \. :)
15:41  Dynetrekk: mgedmin: reading regex help is hard if you rarely or never use it.... I found somewhere saying that '?' whas 0 or 1, but that didn'wt work of course
15:42  mgedmin: that's perl
15:42  mgedmin: vim's regex dialect is different
15:42  Dynetrekk: mgedmin: that could be it
15:42  Dynetrekk: mgedmin: is there some overview of regex families and their relations somewhere on the internets?
15:43  mgedmin: hm
15:43  kurkale6ka: 0 or 1: \? or \=
15:43  mgedmin: maybe; I don't have a bookmark handy
15:44  mgedmin: basically there are POSIX basic and extended regexps, Perl-compatible regexps, Vim regexps
15:44  mgedmin: and probably a zillion less popular dialects
15:44  mgedmin: and maybe Vim regexps ough to be grouped with the zillion less popular dialects, since only vim uses them
15:44  mgedmin: :h perl-patterns
15:44  mgedmin: provides an overview of how vim differs from perl
15:45  Dynetrekk: aha... I see. Perl I kinda realize what is, but what about POSIX basic and extended? is that what grep and egrep uses?
15:45  Dynetrekk: I don't know perl btw :)
15:45  mgedmin: yep, grep/egrep
15:45  mgedmin: probably more tools as well -- sed?
15:45  Dynetrekk: mgedmin: and awk, sed I suppose
15:45  mgedmin: awk?
15:45  Dynetrekk: right :P great minds think alike
15:49  c3l: how should plugin AutoComplPop be used? to insert the first complete suggestion one has to press C-n C-p to get it inserted, as the first suggestion is already selected, but not inserted, really annoying..
15:55  kiri: mgedmin, just noticed. :args doesn't tell you where you are with that list of files, it just tells you the entire list of files
15:56  mgedmin: :help :args says it's supposed to put the current file in square brackets
15:57  kiri: oh yes
15:57  kiri: didn't see that one
15:57  kiri: thanks again
16:04  rson: god i wish :buffers worked like :args then my hacky ass rewrite of buftabs.vim would be unnecessary
16:17  Collibri: can someone tell me how to replace text with buffer similar to insert in overwrite mode in other editors?
16:18  spiiph: Select with v, hit p
16:18  spiiph: For a specific register, e.g. "ap
16:18  Collibri: spiiph: p inserts but i want replace the existing text
16:19  Silex: Collibri: pressing p on selected text replace it
16:19  spiiph: Yes, that's why you should select the text you want to replace first.
16:19  Silex: if you don't want to paste but directly write new text you could enter select mode
16:19  Collibri: so i have to count the lines, i'm looking for an overwrite mode
16:20  Silex: Collibri: are you talking about R ?
16:20  Silex: R is like pressing the insert key in other editors yes
16:20  Collibri: Silex: no
16:21  Collibri: i'm not a vim newbe
16:21  Silex: then write your question in a way we understand it
16:21  Silex: ;)
16:21  Collibri: let's resume i have yanked 3 lines with "3yy"
16:22  Collibri: no i position my coursor to another line and i want to replace the following lines with the yanked lines without knowing the count
16:23  Collibri: like other editors in overwrite mode
16:24  Silex: I think you want R<C-R>"
16:24  Silex: but I'd prefer stuffs like vap or v/pattern then p
16:25  Silex: replace " by teh register you want in the first example, usually " holds you last yank but you might want 0 if you also cut stuff after
16:25  Silex: ah wait, R doesn't work over several lines
16:26  Collibri: it doesn't work
16:26  Collibri: okay, it doesn't seem to work
16:27  Silex: yeah it doens't
16:27  Silex: R stops replace mode after the first line
16:27  Pikel: is there a quick and easy way to skip to the end of a document in vim?
16:27  Silex: Pikel: G
16:27  Collibri: Pikel: G
16:28  Pikel: sweet, thanks
16:28  Silex: Collibri: can you tell me in which case you'd want an insert mode paste? I'm curious because I never had to use that in other editors
16:28  Silex: Collibri: I think you either have to use a helper function/mapping to achieve what you want or use a quick selection like vap or v/foo then p
16:28  Collibri: in programming you have to alter multiple similar lines and it's easier to replace them with clipboard lines
16:29  Silex: Collibri: I usually use a macro to modify multiple similar lines
16:29  Collibri: if you do this several times or with a lot of lines you really don't want to count the lines for visual mode
16:29  Collibri: this ist thoe one and only disadvantage of vim i have found so far
16:29  Silex: you don't need to count the lines, just use the visual-text-object selection
16:29  Collibri: how to do that?
16:30  Silex: v/pattern
16:30  Silex: pattern being where you want to jump
16:30  fow: Silex, Collibri means count the lines that were yanked
16:30  Collibri: fow: exactly
16:30  Silex: ah, so a 1-1 replace
16:30  Silex: ok
16:30  Silex: well if you really need that you'd write a helper mapping/function then
16:31  Collibri: yes replace 5 lines by 5 other lines like an overwrite
16:31  Collibri: that's a pitty
16:31  fow: I guess I've always just pasted what needs pasting then deleted what needs deleting >_>
16:32  Silex: I never needed to paste in insert mode
16:32  Silex: if I need to modify several lines I just create a macro for one line then repeats on teh others
16:33  Silex: however I'm curious about how achieving Collibri's behavior
16:33  Collibri: fow: you understand, that my wishes isn't to strange
16:33  peth: Collibri: gR does not stop at one line, but it probabyl messes up too many things to be useful
16:33  Collibri: Silex: use a simple editor and switch to overwrite mode you can do this with clipboarded texte
16:33  Silex: ha, v:count seems to be a good start
16:34  Silex: if you do 7yy, then v:count is 7
16:34  peth: v:count doesn't work for visual selections
16:34  fow: Collibri, no, I don't think it's strange at all. I think what Silex said about it needing to be scripted is true
16:34  peth: best just count the register lines
16:35  jerojasro: vim's behaviour is funny; if I do an R, then ctrl-r then the register name I want, only the text of the first line is replaced
16:35  Silex: jerojasro: yeah R stops after you enter a newline
16:35  jerojasro: the other lines are kept, and the text is pasted above them
16:35  Silex: R works on the current line only
16:36  fow: Collibri, personally, I'm fine just pasting then deleting as necessary, but I guess that's just me. I could see myself getting annoyed when a register has more/less text than I thought it did
16:37  fow: Collibri, it does seem like someone else would want this and script it, but I haven't found anything via Google
16:38  Collibri: fow: i used google of course as required in topic and look fur such ways for several years and asked a lot of vim users
16:38  Silex: it's not easy to google this problem
16:38  Silex: I'm trying also
16:38  Collibri: but noone could give an appropriate key-pattern
16:39  Collibri: i think it's not possible with scripting, as long as it could be easy implemented
16:39  bsod1: how can I get 80 character line in gui mode?
16:40  Silex: Collibri: I'm on to something, hold on
16:40  jerojasro: Collibri: what? it can be scripted
16:40  Silex: basiically would involve calling count()
16:40  Collibri: sorry "possible without scripting"
16:41  Silex: without scripting it'd involve a mapping
16:41  Silex: with ^R=
16:41  Collibri: but i personally think it's a lack in vim itself for people coming from ordinary editors
16:41  Silex: I think what you're oding is maybe done by less than 1% of people using editors
16:41  Silex: *doing
16:41  Silex: but I might be wrong
16:42  peth: :set paste | gR<C-R>" | set nopaste does it for me
16:42  Collibri: Silex: that's not the point, almost all advanced features of vim are used by less then 1% of users
16:42  Silex: peth: I tried gR but it behaved like R
16:42  peth: tried it too, it didn't
16:42  Silex: weird
16:42 * Silex tries again
16:43  Silex: shit, now it works
16:43  Silex: ah, I pressed p!
16:43  Zathrus: what is Collibri asking for again? An overwrite mode? It's called "R"
16:43  jerojasro: Silex: how did you do it?
16:44  jerojasro: Zathrus: yeah, but one that works over multiple lines
16:44  Collibri: Silex: i don't need a script or an advice how to solve this problem with scripting, i only wanted to know if it works with basic commands
16:44  Silex: Collibri: just do gR<C-R>"
16:44  Silex: this works by me
16:44  Silex: possibly set paste before to avoid funky identations
16:44  Silex: as peth said
16:44  jerojasro: yup, that works for me here too
16:45  Silex: problem solved! \o/
16:45  Zathrus: and, frankly, that's somethign I've never had to do in 25 years of coding.
16:46  jerojasro: (I'm yet to find a use for this, condiering the way I edit text, though)
16:46  jerojasro: *considering
16:47  bsod1: how can I get 80 character line in gui mode?
16:47  Collibri: no it doesn't work right
16:47  Collibri: okay, now it works, but it's hard to remember
16:47  kurkale6ka: gqq, :se cc=80 ?
16:47  jerojasro: bsod1: ^^^
16:54  Collibri: thank you all
16:56  exDM69: I was supposed to do my vim + pathogen + version control setup at work
16:56  exDM69: but I ended up fighting with gvim's badly broken text rendering for the whole day
16:57  exDM69: I think I'll have to do it on my own non-paid time now
16:57  Zathrus: what badly broken text rendering?
16:57  exDM69: but I want to get it done, atm I'm coding on at least 5 different environments and I need to have a .vim setup I can pass around
16:57  exDM69: Zathrus: http://e-werk.entropy.fi/~riku/vim-broken.png
16:57  exDM69: this one
16:58  exDM69: looks like a vid mem corruption but I didn't have it outside of vim
16:58  kurkale6ka: turn compiz off
16:58  Zathrus: shrug. Works great here.
16:58  exDM69: yeah, it works for me almost everywhere too
16:58  exDM69: except my work computer
16:58  exDM69: kurkale6ka: you have experienced the same and it fixed by switching compiz off?
16:59  exDM69: also, how to turn compiz of easily in ubuntu?
16:59  kurkale6ka: there was a user with a similar problem here. it solved it for him
16:59  kurkale6ka: not sure in ubuntu, just use your package manager
16:59  peth: exDM69: appearance properties -> no effects iirc
17:00  exDM69: thanks, I'll try that on monday when I next go to work
17:06  exDM69: btw, which commenting script you use?
17:07  exDM69: NERDCommenter/Commenter/tCommenter?
17:09  RingZer0: What if i wanted to copy a matches expression to the buffer?
17:11  RingZer0: or, how do i match any char including whitespace / linebreaks?  I thought it was ._
17:11  kurkale6ka: \_.
17:12  RingZer0: dang, forgot to escape :P
17:12  RingZer0: how bout copying to buffer?
17:13  kurkale6ka: and you inverted the positions
17:13  RingZer0: kurkale6ka: true, but that b a typo
17:13  kurkale6ka: not sure what you mean with the copy part
17:14  RingZer0: um... i want so when I hit the 'p' key on my keyboard.... to paste the buffer that matched the pattern
17:14  RingZer0: like visual block mode
17:14  RingZer0: e.g.:yank/\v<td>[0-9]{3}
17:15  RingZer0: so all td with 3 digits gets pulled to buffer
17:16  kurkale6ka: "/p will paste your last pattern
17:17  kurkale6ka: or ^r/ in insert mode
17:19  RingZer0: hmm
17:19  RingZer0: i do not understand "/p
17:19  iaj: register / stores the last search pattern
17:19  RingZer0: like :"/p
17:20  RingZer0: ohhh
17:20  kurkale6ka: no, like "/p
17:20  RingZer0: those 3 keystrokes in order
17:21  RingZer0: lol... it litterally pastes the pattern
17:22  RingZer0: thats kinda cool i guess
17:22  RingZer0: i want it paste the results the pattern last matched
17:22  RingZer0: (everything highlighted)
17:23  RingZer0: I would write a 4 line php/perl/bash(sed or blob) script to do this.  but I'd like to not have to leave my editor as I do this frequently with different patterns
17:23  Silex: :g/pattern/y
17:23  Silex: but hum, you want the last match
17:24  strull: RingZer0: yank the match e.G with y//e<cr>
17:24  Silex: oh right
17:24  RingZer0: Ideally i would like a commma separated list of matches, or a newline separated list of matches
17:24  RingZer0: example: i am pulling a list of prices from an html sheet.
17:24  strull: RingZer0: maybe you want :he :grep
17:25  RingZer0: I thinhk yank the match sounds right
17:25  RingZer0: strull: what is the <cr>  (carriage return ?)
17:25  strull: yes
17:26 --- danslo_ is now known as danslo
17:33  Miesco: How do I search with a non-greedy .*?
17:34  kurkale6ka: .\{-}
17:34  RingZer0: I think i was getting close with y//e... it yanked everything till the first match
17:34  RingZer0: which is very cool
17:35  Miesco: Got it!
17:35  Miesco: Instead of .* its, .\{-}
17:42  RingZer0: is there a way to use :vimgrep on the current file?
17:43  RingZer0: due to the fact the area is already just a buffer with no saved file?
17:44  RingZer0: okay, i got it working using the buffer name
17:44  RingZer0: now it says at the bottom of my screen 1 of 32
17:44  RingZer0: how do i view those?
17:45 --- Silex is now known as silex
17:49  kurkale6ka: :cn :cp iirc
17:50  kurkale6ka: but for the current file you are better using g/patt/y
17:50  RingZer0: great.
17:50  kurkale6ka: ex, copy all lines to the eof: g/patt/t$
17:50  RingZer0: thanks man... ur a help.  i have read a ton but none explained that
17:51  kurkale6ka: or copy all lines to buffer w: qwq :g/patt/y W
17:52  kurkale6ka: then paste em with "wp
17:52  RingZer0: i see that it coppys the entire line, is there a way to just get the matched part of that pattern  on the line?
17:52  mgedmin: neat idiom to clear a register -- qwq
17:52  kurkale6ka: hmmm, I would use the external grep tool with option -o for that
17:55  RingZer0: "wp says nothing in register even after :vimgrep match.  :cp and :cn itterate visually at the bottom of my screen through all 125 matches
17:56  kurkale6ka: RingZer0: first qwq
17:56  kurkale6ka: RingZer0: then :g/patt/y W
17:56  kurkale6ka: RingZer0: and: "wp
17:59  tsaavik: could anyone point me towards a good bash.vim file?
17:59  RingZer0: ahh
18:00  RingZer0: nice.
18:01  RingZer0: now to understand it
18:01  RingZer0: qwq did something with "recording"
18:01  RingZer0: i am assuming "recording" goes to register (based on my empty register error previously)
18:02  kurkale6ka: RingZer0: on the command line: grep -oiE --color 'pattern' -R <dir>
18:02  RingZer0: i understand. ... I want to really undersatnd what vim is doing internally
18:03  RingZer0: the :g/pattern/y W obviously places the matched pattern in memory... what is the y and W
18:03  MarcWeber: tsaavik: Wrong question. What do you want teh bash.vim file provide?
18:04  rson: :globallymatch/pattern/yanktoregister W(and append to this register since the w is capital)
18:06  kurkale6ka: and qwq records nothing in the register (clears it) so you won't append on previously yanked stuff
18:06  tsaavik: MarcWeber: I would like proper syntax highlighting for the newer bash commands like $(...) and [[ ... ]]
18:07  tsaavik: I would also like folds to default to ###{{{ instead of C like *\{{{\* but not sure if that is in the same ball o' wax :D
18:08  MarcWeber: $() is not new.
18:08  MarcWeber: What happens if you force :set ft=sh ?
18:08  MarcWeber: About {{{ folding see :h fdm
18:09  MarcWeber: You must set it to marker. {{{ is the "word" vim looks for. So the comment style doesn't matter
18:10  mgedmin: $() is posix, but isn't in the original bourne shell
18:10  mgedmin: vim has an option to allow $() for /bin/sh
18:10  mgedmin: see :h ft-sh-syntax, IIRC
18:11  mgedmin: it's let g:is_posix = 1, I think
18:23  tsaavik: sorry, ambushed with phone call
18:24  telemachus: That's why I hate synchronous communication...
18:27  tsaavik: :set ft=sh  does fix it for things that i don't have a .sh extension for
18:28 * tsaavik reads the help files. Thanks guys
18:31  ezzieyguywuf: is it possible to set a mark such that even if the data on the line is changed or deleted, the mark persists?
18:36  tsaavik: should I be able to do the 'let' commands in command mode like ":let g:sh_fold_enabled=4" ?
18:37  mgedmin: yes
18:38  mgedmin: although if you want to always have that behaviour, putting it in ~/.vimrc makes more sense
18:41  exDM69: how do you save your window layout? can you make many window layouts, such as one for coding, another for debugging and a third for config file hacking?
18:41  exDM69: btw. vim + pathogen + git = great :)
18:41  mgedmin: views and sessions, perhaps?
18:42  mgedmin: my window layout is easy to recreate (Ctrl-W v), so that's what I do
18:45  sitaktif: exDM69:    :h mksess
18:45  exDM69: sitaktif: thanks
18:45  exDM69: sitaktif: does that work with plugins too?
18:45  exDM69: NERDTree, TagList, etc
18:46  sitaktif: afaik, yes
18:46  exDM69: cool
19:11  mengu: hi. i'm using nerdtree and i have this in my vimrc "autocmd VimEnter * NERDTree /home/mengu/projects" this opens nerdtree in that dir
19:11  mengu: however i want it to open which directory the terminal is in
19:11  mengu: is this possible
19:12  mengu: lol
19:12  mengu: i just removed the dir and it is doing what i want
19:14  anon33_: ugh - why does syntastic have to remap ":E"?
--- Log closed Thu Dec 09 20:00:34 2010
--- Log opened Thu Dec 09 20:15:58 2010
20:15 --- Users 633 nicks [0 ops, 0 halfops, 0 voices, 633 normal]
20:16  iaj: may I ask - someone here using a custom tab mapping for completition?
20:17 --- Channel #vim was synced in 72 seconds
20:17  ezzieyguywuf: can I can it increment 0.08 to 1.08 instead of 0.09?
20:18  spiiph: Put the cursor on the 0
20:19  ezzieyguywuf: ah, I see.
20:24  c3l: why is vim not highlighting the code in .cpp files, but .cc?
20:27  spiiph: Because they are not detected as C++ files
20:27  spiiph: It's .cpp, .c++ and .CC, I think.
20:27  spiiph: And .hpp
20:28  spiiph: :h new-filetype
20:28  mtvee: iaj: this is what i use basically http://vim.pastey.net/143751
20:30  iaj: mtvee: thanks.. i had it set up in a similar manner.. however if you edit a large project - and use omnicompl by default there even if you just want to do C-N C-P its getting kinda slow
20:31  iaj: and that one rather uses C-P for completion then C-N (when keyword completition)
20:32  mtvee: iaj: yeah, it's not ideal, i agree
20:33  iaj: mtvee: trying to come up with a solution
20:33  iaj: shall I paste you what I produce :-)?
20:33  c3l: spiiph: but vim says the file has filetype cpp
20:34  mtvee: iaj: that's the holy grail, yeah please do!
20:34  spiiph: c3l, then it should syntax highlight it
20:35  iaj: mtvee: aitie:-)
20:37  iaj: I know that there's pumvisible, but can I somehow check which completion menu is currenlty open (eg invoked from Omni or Keyword Completition) ?
--- Log closed Thu Dec 09 20:41:09 2010
--- Log opened Thu Dec 09 20:46:35 2010
20:46 --- Users 631 nicks [0 ops, 0 halfops, 0 voices, 631 normal]
20:47 --- Channel #vim was synced in 70 seconds
20:49  iaj: sorry I got dropped..
20:50  iaj: I know that there's pumvisible, but can I somehow check which completion menu is currenlty open (eg invoked from Omni or Keyword Completition) ? << did anyone know a solution to this?
21:14  mcantor: Anyone know some incantations that will make vim's autoformatting play nice with Python docstrings?
21:27  jerojasro: mcantor: http://henry.precheur.org/vim/python
21:27  jerojasro: not sure if that helps,
21:27  jerojasro: but I bet it should
21:30  mtvee: jerojasro: thats helpful for me anyway, thx
21:31  mcantor: jerojasro: isn't that stuff built in to the latest vim...?
21:36  jerojasro: dunno in latest vim. Not in Debian's vim 7.2
21:37  jerojasro: don't think so, actually. The script I linked to exists since 2005...
--- Log closed Thu Dec 09 21:41:05 2010
--- Log opened Thu Dec 09 21:46:28 2010
21:46 --- Users 625 nicks [0 ops, 0 halfops, 0 voices, 625 normal]
21:46 --- Server: [lindbohm.freenode.net] [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
21:47 --- Channel #vim was synced in 66 seconds
--- Log closed Thu Dec 09 22:00:15 2010
--- Log opened Thu Dec 09 22:05:36 2010
22:05 --- Users 629 nicks [0 ops, 0 halfops, 0 voices, 629 normal]
22:06 --- Channel #vim was synced in 69 seconds
22:09  glyph: If I do :e bar :w foo, my buffer still points at bar.
22:09  glyph: Is there an equivalent to :w that will update the buffer to point at the new file?
22:10  mgedmin: :saveas
22:11  glyph: mgedmin: Yes, that, exactly.  Don't know why that didn't occur to me, I guess I assumed it had to be more obscure. Thanks!
22:11  iaj: when I do a let b:foobar  the variable (if not exisiting in other buffers)  will only be present in the current buffer right? like setlocal?
22:11  glyph: iaj: Yes.
22:12  glyph: iaj: b: is for buffers, w: for windows, s: for scripts and l: for local variables (only in the current function)
22:12  iaj: that's such a sweet solution
22:12  iaj: thanks glyph 
22:13  mgedmin: :h internal-variables has a full list of those prefixes
22:17  iaj: Ahh thanks :-)
22:17  iaj: what is best way to debug once vim scripting... I tried a simple  echo nr2char(getchar())  but I can't find anything anywhere :\
22:17  iaj: what's the best way to do so
22:19  Kunda: test
22:21  rson: ack
22:33  exDM69: I'm using taglist and I'm very disappointed to find out that I actually need to generate the tags file in addition to the taglist if I want to use go-to-tag-under cursor. Can I somehow use the tags from TagList?
22:44  cweagans: Hi, is this an okay place to ask about extensions for vim as well? I'm having some problems with vimwiki
22:46  cweagans: specifically, I can't get it to follow a wiki link when I double click on the link (I've already done `let g:vimwiki_use_mouse = 1`) and Control+Space doesn't toggle todo items
22:46  cweagans: I'm using MacVim
22:47  cweagans: and I know the plugin is loaded because the Vimwiki button is displayed in the toolbar
22:47  cweagans: and some of the other commands work
22:47  mgedmin: this is the right place for those questions
22:47  mgedmin: sadly, I've no idea about the answers
22:48  cweagans: well, I'm glad I'm in the right place, then :)
22:48  cweagans: thanks, mgedmin
23:12  xybre: Whats up with the :p and :h appended to %, are there more of them?
23:14  kongo: xybre: :h filename-modifiers
23:15  mgedmin: :h ::p
--- Log closed Thu Dec 09 23:18:41 2010
--- Log opened Thu Dec 09 23:19:06 2010
23:19 --- Users 613 nicks [0 ops, 0 halfops, 0 voices, 613 normal]
23:20 --- Channel #vim was synced in 73 seconds
--- Log closed Thu Dec 09 23:42:11 2010
--- Log opened Thu Dec 09 23:47:34 2010
23:47 --- Users 608 nicks [0 ops, 0 halfops, 0 voices, 608 normal]
23:48 --- Channel #vim was synced in 71 seconds
23:56  iaj: Can I have the completion menu shown with its order reversed somehow?
23:59  lamdk: is there a search  that finds a word "issue" ,  but only if theres an equal sign to the left of it on the same line?
--- Log closed Fri Dec 10 00:00:09 2010
