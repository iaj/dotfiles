--- Log opened Sun Oct 10 00:00:39 2010
00:01  ReinH: heh
00:01  ReinH: MikhX: protip: try to learn a new vim command every day
00:02  ReinH: eventually you'll learn them all
00:02  ReinH: you know, after 10 years or so
00:02  MikhX: haha
00:22  jozefk: :
00:24  jozefk: :%s/<\/p>\n<p>/<br \/>\r/  is not working. it says Pattern not found <\/p>\n<p>
00:25  jink: :set incs  and use /<\/p> ... to see where you go wrong?
00:32  jozefk: it seems because I have leading spaces
00:41  infid: my coworkers are jealous of how fast i can work in vim but they're too lazy to memorize/customize that much stuff to be able to do it. i always say it's worth it since you're going to be using an editor the rest of your life so you might as well pick a good one. but i always get 'well netbeans|eclipse|whatver isnt so bad, sure it takes 200mb to run but ram is cheap these days and sure i can't work as fast as you but i dont have to t
00:41  infid: and that's coming from linux users, somehow the windows user mentality can infect anyone
00:43  jink: infid: Are you using irssi?
00:43  pigdude: infid: all the mac users I know use coda and crap like that
00:43  pigdude: so painful when I have to edit code at their desk
00:44  infid: jink yes, why
00:44  jink: You should install splitlong.pl ;)
00:44  infid: pigdude: i feel the same way using vim at other peoples desk because they don't have vim customized the way i do
00:45  infid: jink ok i'll check it out. did it truncate?
00:45  jink: It did at: "you but i dont have to t
00:45  pigdude: infid: eh I can get by w/ a few settings
00:46  pigdude: infid: I end up editing on servers often enough, and the most valuable things are still built in
00:47  zarac: For some reason, 'omnifunc' is not set correctly for python files on one of my two computers, on the other it works just fine... how can i find out why it's not set? (ftplugin/python.vim look exactly the same, with the setlocal omnifunc=... line)
00:47  infid: pigdude: yeah if it's just editing a quick config file fine, but not when it's php, i miss my plugins/config too much. the thing that gets me the most is i have jj mapped to esc and ;; mapped to ctrl-w
00:47  zarac: i do have +python in :version
00:47  pigdude: ah
00:47  infid: so i'm constantly typing jj and ;; in insert mode and having to backspace it
00:47  pigdude: i mean I definitely am more productive w/ my heavily customized .vim
00:47  pigdude: but the difference is far greater between vim and non-vim
00:48  infid: tru, it's way worse when they're using gedit or something
00:48  pigdude: hehe
00:48  infid: i run into these problems everywhere. people who use svn instead of git, chrome instead of firefox, windows instead of linux
00:48  pigdude: the worst for me is when I do visudo and get put into nano
00:48  pigdude: it's called visudo
00:48  jink: :>
00:48  infid: heh
00:48  zarac: you mean firefox instead of chrome? :)
00:49  pigdude: I'm as helpless in nano as I used to be in vi
00:49  infid: no chrome isnt so good for web dev (imo)
00:49  pigdude: chrome dev tools are good
00:49  pigdude: I still prefer firebug though
00:49  infid: can't ctrl+z, i prefer firebug and all my ff plugins, though some of them work in chrome at least. ie is a better example but i dont know anyone that insane
00:50  zarac: firebug kicks arse.. that's true
00:50  infid: i love chrome at home for casual browsing
00:50  zarac: but when it's for web-use (not development) i prefer chrome
00:50  pigdude: I actually do most of my serious js debugging now in chrome
00:50  infid: ie8 isnt too bad but i still cant stand it
00:50  pigdude: I see firefox more as my casual browser
00:51  infid: a year from now it's hard to know if i'll prefer ff over chrome
00:51  infid: for web dev
00:52  pigdude: I just realized the chrome adblock works better for me than the ff one
00:52  pigdude: hm i might just use chrome now
00:53  zarac: haha : )
00:53  zarac: those little things... ; )
00:53  pigdude: well I mean I think I already prefer the dev tools
00:53  infid: only thing i'm fairly sure of is 5 years from now i'll still be using linux and vim. though distro might change in linux depending on how things go
00:53  pigdude: haha yep except switch linux w/ mac for me
00:53  infid: as nice as macs are i dont think i could do it just because of the proprietaryness
00:53  pigdude: eh I don't care that much
00:53  f3xy: Is there a way to have view using vim instead of vi?
00:53  pigdude: my servers are debian
00:54  f3xy: err use vim
00:54  zarac: so, how about figuring my problem out for me instead of discussing browsers? : )
00:54  infid: same goes for mysql. oracle could ruin it at any moment. proprietary control is never fun
00:54  pigdude: zarac: what is it? sorry
00:54  Raimondi: f3xy: Create a symlink view->vim
00:54  pigdude: yea i'm moving everything to pgsql
00:54  f3xy: erm
00:54  zarac: omnifunc isn't set for python files : (
00:54  pigdude: or sqlite for small stuff
00:55  zarac: it works fine on one of my computers.. but not on another.. and the ftplugin/python.vim and pythoncomplete.vim files are the same
00:55  f3xy: hmm so I manned view it took me to vim
00:55  f3xy: hmmm
00:55  f3xy: so where are meh colors :(
00:55  zarac: and i have no clue how to find the source of the problem.. : (
00:55  infid: f3xy what does  ls -l $(which view) say
00:56  zarac: it seems like ftplugin/python.vim isn't loaded
00:56  f3xy: ah
00:56  f3xy: it's pointing to vi
00:56  f3xy: I suppose that should be easy enough to fix
00:56  infid: zarac: have you tried pydiction
00:57  f3xy: hmmph
00:57  f3xy: now it's pointing to vim
00:58  f3xy: still no syntax highlighting
00:58  f3xy: meh
00:58  infid: why do you want to use view
00:58  zarac: infid: nope, never heard of it.. i'll have a search
00:58  infid: maybe try alias view='vim'
00:59  zarac: ah, neat.. but it's not really what i'm looking for
00:59  zarac: i have what i'm looking for.. it's just not loading
00:59  zarac: it works on one box, but not another
00:59  zarac: s/not/not on/
01:00  zarac: why would you want pydiction when there is omni completion for it? :)
01:01  infid: not as good
01:01  infid: can't complete nearly as much stuff
01:02  zarac: ah, ok
01:02  zarac: maybe i should try it then..
01:02  zarac: but i still want to know why this isn't working
01:02  zarac: it's strange...
01:02  f3xy: I ended up aliasing view to vim -R
01:02  f3xy: it's pretty much the same thing
01:02  f3xy: works well enough ty :)
01:02  zarac: : )
01:03  f3xy: and I think asking me why I want to use view is a silly question :P
01:03  infid: f3xy: well i honestly have never even hard of view till you mentioned it
01:04  f3xy: it's pretty much vi or vim -R
01:04  f3xy: so you open the file as readonly no matter what your perms are
01:05  f3xy: nice for trying to figure out what scripts do that you don't want to bungle up
01:05  infid: i see, yeah i've just been using vim -R all this time
01:05  f3xy: though if you don't have syntax highlighting you might as well be using less for the most part
01:05  infid: sometimes i'm already in a vim instance and need to set the current buffer to read only. forget how to do it though since it's rare for me
01:06  infid: maybe that's what you want so you can still see syntax
01:06  f3xy: vim -R/view work well enough for me :)
01:14  Araxia: f3xy: you know about $VIMRUNTIME/macros/less.sh?
01:21  f3xy: Araxia: no I don't
01:22  Araxia: f3xy: lets you use vim essentially as a pager that behaves like less. so you get the syntax highlighting. :-)
01:22  f3xy: sweet
--- Log closed Sun Oct 10 01:34:20 2010
--- Log opened Sun Oct 10 01:34:43 2010
01:34 --- Users 562 nicks [0 ops, 0 halfops, 0 voices, 562 normal]
01:35 --- Channel #vim was synced in 53 seconds
01:35  Adaemon: how can I force vim to understand a file to be a css file?
01:35  Adaemon: preferably permanently
01:36  Araxia: Adaemon: :help modeline
01:37  Araxia: if you don't want to make the association in the file itself, you could also add an .vim/after/scripts.vim file with a little snippet to recognize whatever extension you're using (or the name of the file).
01:39  Adaemon: Araxia: thanks, I think the modeline is a good solution in this case.
01:40  Adaemon: Araxia: just to make sure it's the "correct" way, it looks like I should `setlocal filetype=css` so that it's only for the current buffer.  filetype is the correct variable to set though?
01:41  frogonwheels: Adaemon:filetype is local anyway
01:41  Araxia: Adaemon: filetype is correct. you don't need a setlocal for that since that is local anyway.
01:41  Araxia: and you can use ft instead of filetype.
01:42  frogonwheels: Adaemon: I've only just come in, but you should :help ftdetect    (iirc)
01:43 --- sjl_ is now known as sjl
01:44  Raimondi: I have imap <BS> <BS><Del>   but the terminal sends Ctrl-H for <Del>, how can I fix <Del> without losing <BS>?
01:46  Araxia: Raimondi: :help :fixdel might help
01:46  Raimondi: Tried it, fixes Del but BS stops working.
01:46  strull: Raimondi: what is your goal? This mapping looks strange
01:46  Adaemon: Araxia, frogonwheels: thanks.
01:47  hard_shooter: Hi
01:47  Raimondi: It's for a plugin, this mapping deletes both parens when the cursor is in the middle.
01:47  Raimondi: strull: ^
01:48  strull: why not <left><bs><bs>  then?
01:48  strull: s/left/right
01:48  strull: just to avoid the <del>-issue
01:48  Raimondi: Because that breaks undo.
01:49  hard_shooter: How can I add to my buffer list all the files in an error list ?
01:49  strull: and <bs><del> does not?
01:49  Raimondi: <bs><del> doesn't.
01:49  Raimondi: Movements break undo.
01:50  strull: but the movement is outside of the deletion
01:50  Raimondi: If you move while writing in insert mode, you'll split the undo.
01:51  Araxia: :undojoin?
01:52  strull: so how was the () created and the cursor put in the middle w/o movement?
01:52  Raimondi: setline()
01:52  halberd: does vim have anything like emacs' iswitch-b mode?
01:53  fow: What is Emacs' iswitch-b mode?
01:53  strull: doesn't setline() also break undo?
01:53  Araxia: halberd: can you describe it?
01:53  halberd: in iswitch-b mode you type C-x b, then you type a few characters, and it searches in all your open buffers for buffers containing those characters
01:53  halberd: as you type
01:53  halberd: so if you type an A it would instantly show all buffers containing an A, then type a B and it would show all buffers containing "ab"
01:54  Raimondi: Araxia: Didn't know about that. I'll give it a try.
01:54  Araxia: halberd: i think the FuzzyFinder plugin has something like that.
01:54  halberd: and you can also type C-r and C-s to move forward and backward in the list of buffers
01:54  halberd: and then you just press enter when you have your buffer and it goes there
01:54  Araxia: halberd: or just :b a<Tab>
01:54  halberd: it doesn't just match at the start
01:55  halberd: if I have ten buffers that all start with MyWidget and end with something, like MyWidgetFurnace and MyWidgeWheel
01:55  Araxia: halberd: figured. that's why i pointed to fuzzyfinder first.
01:55  halberd: I could type C-x b fu <enter>
01:55  halberd: to get to the furnace
01:55  Araxia: halberd: http://www.vim.org/scripts/script.php?script_id=1984
01:56  hard_shooter: How can I open all the files in a quickfix list ?
01:56  Araxia: Raimondi: not sure in this case, but you might need to use it with :normal
01:59  Araxia: hard_shooter: that's an interesting question.
02:00  hard_shooter: since windows doesn't have any way to open all .c files in a particular directory I would do vimgrep // **/*.c
02:00  hard_shooter: then open the files
02:02  strull: hard_shooter: you could also try :n **/*.c to fill the args-list
02:02  hard_shooter: I don't really like the args-list
02:02  hard_shooter: I prefer buffers
02:02  strull: that's what it's for
02:03  strull: simply do :ball afterwards
02:03  halberd: does vim have the equivalent of emacs desktop-save which saves the list of open buffers to disk
02:04  halberd: so that you can reload it later?
02:04  Araxia: halberd: :help sessions
02:07  halberd: why does vim have both a and i, which do almost the same thing? and why have separate command A when $a is the same?
02:07  Araxia: halberd: precision.
02:08  Araxia: in both cases it can mean one keystroke instead of two.
02:08  halberd: but it adds extra stuff to memorize and the keys can't be used for other things
02:09  strull: halberd: what makes you think so?
02:09  halberd: don't you agree that it adds extra stuff to memorize, and the same keys can't be used for other things?
02:10  strull: you can use any key you want
02:10  dindinx: halberd: of course not! You are free to remap "a" if you want to.
02:10  strull: and ... I never had trouble memorizing Insert and Append
02:11  strull: besides i and a do a differnt job
02:12  frogonwheels: .. which is especially important when you record macros
02:12  halberd: also how come the cursor can't be placed at the _very_ end of the line?
02:12  strull: true. I trained me to start macros with 0
02:13  Araxia: once you pass a certain point on the learning curve, it makes sense. all of the different pieces (including many you don't know yet) really do fit together extraordinarily well.
02:13  strull: halberd: it's conceptual
02:13  halberd: if you could place the cursor there then you would only need i
02:13  Araxia: not really, no.
02:13  strull: halberd: :he 've
02:13  Raimondi: Sadly, :undojoin doesn't seems to work in the middle of the insert session :(
02:14  halberd: is there another choice to exit insert mode, besides "escape"?
02:14  Araxia: halberd: if you look at all of these commands in isolation it won't make as much sense as it does when you start using them together.
02:14  strull: Raimondi: I still don't see your overall problem
02:14  halberd: escape is a tough key to press because it is at top left
02:14  Araxia: halberd: <C-c>, <C-[>, many people imap jj to <Esc>
02:14  strull: halberd: ^C
02:14  frogonwheels: halberd:  some people remap capslock to escape  even
02:14  frogonwheels: halberd: that's a system mapping, not a vim mapping
02:16  halberd: C-c works well
02:16  Raimondi: strull: It's for my delimitMate script, it inserts the closing char when the opening char is inserted, if the pair is empty you can press BS and both will be deleted. The reason I use <BS><Del> is to preserve undo, if I use a movement key the undo will start from there.
02:17  halberd: although C-c also moves the cursor one spot to the left
02:17  halberd: that's odd
02:17  bziobnic: what's the command to show where a variable was defined? I just learned it a couple of weeks ago and now I can't find it.
02:17  halberd: why does it do that
02:17  joeytwiddle: 'a' becomes useful when you are at the end of a word, or sentence, and want to append.  'i' is more for when you are at the start of something
02:17  Raimondi: And it works fine, except when the terminal sens Ctrl-H for Del.
02:17  strull: bziobnic: try :verbose set whatever
02:17  halberd: I have caps lock = cntrl
02:17  bziobnic: strull: that's it! thanks!
02:18  halberd: because I'm an emacs user
02:18  Araxia: halberd: that's not <C-c>. are you using i to get into insert?
02:18  halberd: what does C-c mean Araxia, is that ctrl-c?
02:18  Araxia: halberd: yes.
02:18  halberd: it seems that when I type i to get to insert mode, then C-c, it backs me out of insert mode but also moves the cursor left one spot
02:18  Araxia: halberd: there a couple of *very* slight differences with <C-c>, but it is very nearly the same <Esc>.
02:19  Araxia: halberd: it will do that with escape, too.
02:19  halberd: oh, that's weird
02:19  halberd: why is it doing that
02:19  Araxia: halberd: yeah. that is a vi/vim quirk.
02:19  Araxia: halberd: but it also illustrates that there *is* a subtle difference between a an i.
02:20  Araxia: and it's not arbitrary.
02:20  halberd: I have files with long lines that span multiple screen rows, but up-down treats them as one line
02:20  halberd: how do I make up-down move within the line?
02:20  dindinx: halberd: esc or ctrl-c doesn't move the cursor one char to the left. i<esc> does.
02:21  Araxia: halberd: use g before the motion. e.g. gj
02:22  halberd: that's a pain in the neck, this is a common use case
02:22  halberd: how do i make j by default do gj?
02:22  halberd: and maybe have gj do j, just for fun
02:22  strull: map it
02:22  Araxia: noremap j gj
02:23  halberd: you mean put that line in my .vimrc?
02:23  Araxia: halberd: yes
02:23  halberd: did you mean "remap j gj"?
02:24  Araxia: i've found it becomes a less common usecase as you develop different ways of navigating.
02:24  Araxia: halberd: no. you don't want the j on the rhs to retrigger the mapping, so noremap.
02:24 * strull prefers :set nowrap anyway
02:25  halberd: it didn't work then
02:26  halberd: yeah I put noremap j gj as the last line in my .vimrc and it is still not working
02:26  halberd: ohh
02:26  Araxia: halberd: did you re-source  your .vimrc?
02:26  halberd: nvm
02:27  halberd: how can I remap the up and down arrows to gj and gk as well?
02:27  Araxia: use <Up> and <Down>
02:27 --- anal_christ is now known as elkz
02:28  halberd: excellence
02:29  elkz: what's all the hype with emacs?
02:29  halberd: I started on emacs because I was programming lisp in college
02:29  elkz: anyone tried both?
02:29  elkz: yes lisp is great
02:29  halberd: and the recommendation was to use slime-mode in emacs
02:29  elkz: eric naggum says lisp is the only real programming language
02:30  halberd: apparently vim doesn't have a lot of support for lisp
02:30  halberd: but I don't use lisp now, I use emacs primarily because of iswitch-b mode
02:30  halberd: and because of incremental search
02:30  Araxia: halberd: :help 'incsearch'
02:30  halberd: I maintain text files full of notes to myself that I'll need later and iswitch-b mode plus incremental search is the greatest thing since sliced bread
02:30  halberd: yeah I know vim has incremental search too
02:31  Araxia: just making sure. :-)
02:31  elkz: halberd: lisp makes computations really conveniant
02:31  halberd: but it's why I use emacs over, say, notepad
02:31  elkz: but there's gotta be a plugin that opens a lisp console right next to vim
02:31  halberd: because of those two features
02:31 --- elkz is now known as anal_christ
02:31  halberd: I do also use notepad... my system is I keep a long skinny notepad window open at all times
02:31  halberd: and also an emacs session
02:32  halberd: the notepad window is for temporary notes, like numbers that I need to write down and use in the next few minutes to an hour
02:32  halberd: the emacs session is for permanent notes
02:33  Araxia: halberd: i use a separate gvim/macvim instance or window for the same sort of thing. why the separation?
02:33  halberd: and my emacs has like 15 different notes files open when it starts
02:33  halberd: each note files has labeled sections in it, too
02:33  halberd: and I use incremental search to jump between the sections
02:34  halberd: I separate the two because emacs is not always visible on my screen, it's too big
02:34  halberd: so sometimes it is hidden behind other windows
02:34  Araxia: halberd: why not just another instance?
02:34  halberd: but the long skinny notepad file is always there
02:34  halberd: well notepad is lighter weight than emacs
02:34  Araxia: i keep separate sessions for each of the groups of files i frequently use together.
02:35  halberd: and I only have 1 "buffer" for notepad so that works
02:35  halberd: also copy-paste is a bit iffy between emacs and windows
02:35  Araxia: halberd: i use a plugin called vimwiki.vim that gives me the sort of functionality you're talking about.
02:35  halberd: sometimes I'll kill a line from emacs and it won't paste into windows, don't know why
02:37  Araxia: gvim is pretty lightweight and i've never had any clipboard interaction problems with it. i basically made windows tolerable for myself with a bunch of vim scripting and autohotkey.
02:37  Araxia: stdout was essentially a gvim buffer :-)
02:38  Araxia: halberd: anything in particular prompting you to dip your toes in vim after being satisfied with emacs for so long?
02:39  halberd: emacs meets my needs but I decided to learn vim because some systems don't have emacs
02:39  halberd: specifically at work, their app servers have vim but not emacs
02:39  strull: halberd: beware to not get addicted
02:40  Araxia: or too frustrated at the outset. :-)
02:40  halberd: nah I think I get the basics of how to edit text & move around :)
02:40  halberd: that's really all I was looking for
02:41  Araxia: halberd: have you looked at vimtutor?
02:41  halberd: I did vimtutor
02:41  halberd: this afternoon
02:41  Araxia: cool
02:42  halberd: for development I use a dedicated IDE so I don't have much incentive to become a "black belt" user of either vim or emacs
02:42  halberd: it's just for notes
02:43  Araxia: halberd: which ide? there are vim-like plugins for most ides.
02:43  halberd: haha... "Cache Studio"
02:43  Araxia: heh
02:43  halberd: it's not well known
02:43  Araxia: okaaaay.
02:44  halberd: and cache studio also meets my needs for development
02:45  halberd: with one exception, you can go to previous or next buffer, but you can't go to previous or next position within a file
02:45  halberd: unless you set a bookmark before you leave that position
02:45  halberd: minor annoyance really
03:00  halberd: but it has lots of nice features like ctrl-g and then start typing a function name, and it will completion match and take you to that function in the file
03:07  halberd: and it is not possible to use a regular text editor to edit this server code because it is not stored in regular files
03:09  zarac: How can i figure out why omnifunc is not set for python files? (version shows me +python).
03:09  zarac: Anyone got any ideas? or methods to find out?
03:09  zarac: it works for me on one box but not two others
03:09  Araxia: zarac: how about ':set ft?'
03:10  zarac: araxia, thanks, but i'm not sure what that will tell me?
03:10  Araxia: zarac: what the filetype is.
03:10  zarac: ok, well the problem is that when i set filetype=python it doesn't set omnifunc
03:11  zarac: there is no problem in detecting .py files are python files etc... just that omnifunc is not set
03:11  Araxia: zarac: do you see any python-related filenames when you do ':scriptnames'?
03:11  zarac: lemme check
03:12  Araxia: do you have access to both boxes? the one that works and the one that doesn't?
03:12  Araxia: it might be that one of them has a plugin that the other doesn't.
03:12  zarac: yes i do.. for example python.vim in indent, ftplugin, syntax etc
03:12  zarac: i doubt it has anything to do with plugins.. i did an insanity check by renaming my .vim and .vimrc files
03:14  zarac: and the ftplugin/python.vim files in the install directory are the same across the machines
03:15  Araxia: zarac: so you do have access to the box that works?
03:15  Araxia: zarac: ':verbose set omnifunc?' will tell you which script last set that option.
03:17  zarac: yeah, i own all the machines
03:18  zarac: thanks, i'll try that
03:18  zarac: it says it's set in ftplugin/python.vim
03:19  zarac: and those files are identical across the machines.. (i will quadrupel check)
03:19  Araxia: zarac: it says that in the one not working, too?
03:21  zarac: nope, on that it just says "omnifunc=" (as in it not being set)
03:22  zarac: and yes, i checked again, ftplugin.vim/python.vim are the same file
03:22  zarac: or they have the same content rather : )
03:22  Araxia: heh
03:23  zarac: just to make sure.. i tried renaming .vim and .vimrc on the machine it's not working on as well
03:23  zarac: so it's none of my plugins..
03:23  Araxia: zarac: does the file you're setting to filetype python already have another filetype initially?
03:23  zarac: nope.. i do it from a :enew
03:24  zarac: or i've tried opening a python file as well..
03:24  zarac: same result
03:24  Araxia: okay
03:24  Araxia: this is probably going to turn out to be something simple, but i'm not seeing it yet. :-)
03:24  zarac: i've been messing with this for 3 hours or so.. : (
03:24  zarac: hehe, very true ; )
03:24  Araxia: ugh
03:25  zarac: hopefully it doesn't make me feel too stupid.. ; )
03:25  zarac: as long as it works out i guess i don't mind : )
03:25  Araxia: heh. maybe try to :so $VIMRUNTIME/ftplugin/python.vim
03:25  zarac: i'll try
03:25  Araxia: just to try to isolate the problem.
03:27  zarac: nope, doesn't work either : (
03:27  Araxia: zarac: that's actually good in a way. helps narrow it down.
03:28  zarac: : )
03:28  zarac: i'm still confused as heck
03:28  Araxia: do you have 'filetype plugin indent on' in your .vimrc?
03:28  zarac: ftplugin/python.vim clearly defines omnifunc=pythoncomplete.....
03:28  zarac: i'm pretty sure.. i'll double check
--- Log closed Sun Oct 10 03:34:52 2010
--- Log opened Sun Oct 10 03:35:11 2010
03:35 --- Users 552 nicks [0 ops, 0 halfops, 0 voices, 552 normal]
03:35  Araxia: zarac: np
03:35  Araxia: so this is where someone else in the room jumps in and says two words and we both smack our heads on the table.....
03:35 --- Channel #vim was synced in 53 seconds
03:36  zarac: fyi, verbose set filetype? on a .py file tells me it's set in filetype.vim, so that's normal
03:36  zarac: haha yeah, if only it were so! ; )
03:37  Araxia: zarac: it's been known to happen.
03:37  zarac: true, but never to me.. : )
03:37  Araxia: maybe more likely on a weekday, though.
03:37  zarac: i always have these strange problems without solutions.. : )
03:37  zarac: and not at 3.37 am? :)
03:37  Araxia: heh
03:37  Araxia: zarac: ooc, what os is this?
03:38  zarac: it's working on a windows box, broken on another windows and another arch linux
03:38  zarac: btw, ooc?
03:38  Araxia: out of curiosity
03:38  zarac: ah! : )
03:38  zarac: windows vista is what it works on.. broken on windows 7 and arch-linux
03:39  zarac: that vista box has both python 2 and 3 i think
03:39  zarac: yes, +python/dyn and +python3/dyn (whatever that means)
03:39  zarac: the other ones just say +python, not /dyn
03:40  zarac: although i don't tink that's an issue.. since it does work if i set omnifunc= manually
03:40  Araxia: zarac: yeah, python loads dynamically as a dll on windows.
03:40  zarac: ah, neat :)
03:41  zarac: interesting... i tried :map ]] to see if a mapping from python.vim was loaded.. and it isn't
03:42  Araxia: zarac: this could be tedious, but might lead somewhere: :enew, then :set verbose=10, then :set ft=python
03:42  halberd: why do people become "experts" at vim? i mean most of editing doesn't require any special doodads
03:42  halberd: beyond the basics
03:42  halberd: uh except for multi-buffer
03:43  zarac: araxia, i've got time and patience.. i'll try, thanks
03:43  zarac: lots to read! :)
03:44  Araxia: halberd: for me it's to make the editor effectively disappear. it's more like playing an instrument where the instrument is a frictionless conduit for your creativity.
03:44  Araxia: zarac: yeah. that's basically walking you through the entire chain of events.
03:44  halberd: but it doesn't take much for that to happen Araxia
03:44  halberd: just the basic editor commands
03:44  halberd: and bam, you are editing text
03:44  halberd: deleting stuff, typing stuff, you name it
03:44  Araxia: halberd: it's different. trust me. do you plan an instrument?
03:44  halberd: no
03:44  Araxia: s/plan/play
03:45  Araxia: there's a significant difference between editing and editing in "the flow".
03:45  zarac: vim is so sexy...
03:45  zarac: : )
03:46  Araxia: zarac: execept when it comes to disappearing omnifuncs
03:46  tinto: guys - does anyone here use a combination of NERDTree and Bufexplorer? i have NERDTree open up automatically when Vim starts using a VimEnter autocommand, but I'd like bufexplorer to appear below it. Anyone know how I can go about this? I tried setting things up the way I wanted them then just creating a session with :mksession but the session gives an error when i try to source it later. i see lots of other screenshots of people with this setup, so fig
03:46  tinto: must be *fairly* easy :)
03:47  Araxia: tinto: what error do you get from loading the session?
03:48  Araxia: tinto: though sessions are probably not the route you want to go with this particular thing, though, i imagine.
03:48  tinto: hmm, hard to show here. not sure exactly which part is the error. i'll try to paste it
03:48  tinto: yeah i figured sessions weren't the "ideal" way - but ran out of ideas without it :)
03:48  halberd: I should play an instrument
03:48  halberd: rarely do I get in the flow
03:48  tinto: "[BufExplorer]" [New File]
03:48  tinto: "NERD_tree_1" [Not edited] --No lines in buffer--
03:48  tinto: Error detected while processing /Users/tinto/.vim/session:
03:48  tinto: line  349:
03:48  tinto: "~/.vim/bundle/bufexplorer/doc/bufexplorer.txt" [converted] 502L, 27121C
03:48  tinto: "__Tag_List__"  46 lines --2%--
03:48  tinto: Press ENTER or type command to continue
03:49  rdpate: <zarac> fyi, verbose set filetype? on a .py file tells me it's set in filetype.vim, so that's normal
03:49  rdpate: zarac: shouldn't it be set in ftplugin/python.vim instead of filetype.vim?
03:49  fritzophrenic: i mostly don't use sessions with any special buffers loaded, they always screw up for me
03:49  Araxia: halberd: exercise, playing music, writing, and coding are ways to get there.
03:50  halberd: eh well I code a lot
03:50  tinto: so is there a more accepted way to set up a window layout for this type of thing?
03:50  halberd: but there's no magic about it
03:50  halberd: it's always about hunting through docs & other people's code trying to figure out what to do next
03:50  Araxia: fritzophrenic: there are a lot of ssopts for controlling what gets preserved. played around with those?
03:50  Araxia: halberd: just keep at it. that's an early stage.
03:50 --- sorah_off is now known as sora_h
03:51  halberd: no I don't think so Araxia
03:51  Araxia: halberd: you might find the book "pragmatic thinking and learning" interesting.
03:51  halberd: unless you are coding something totally repetitive, using the same idioms over and over
03:51  halberd: then you are always going to be spending most of your time figuring out how to interface with something or other
03:52  Araxia: halberd: if you know the systems you're interfacing with intimately, that can change the experience significantly.
03:53  Araxia: gf's home. gtg. good luck, zarac.
03:53  halberd: maybe if you're just writing plugins
03:53  fritzophrenic: Araxia, yeah I've got sessions set up now so that I can save the current state of a given tab page, which is usually all I want
03:53  halberd: or web pages
03:53  fritzophrenic: and when I want them, most of my special buffers have been closed already
03:54  zarac: araxia, thanks for your help anyway! :)
03:54  halberd: I never close my buffers until I'm sure I'm done with them
03:54  halberd: and by done I don't mean just for today, or just for this week
03:54  zarac: halberd: do you use :bd or :bw ?
03:55  halberd: well actually I use emacs but the idea is the same
03:55  zarac: i always throw away buffers with :bw and reopen them later
03:55  zarac: : )
03:55  halberd: why?
03:55  fritzophrenic: halberd, I believe I could *get by* with a "basic" knowledge of Vim, but it's nice to know your options when you're hit with one of those problems that only Vim can solve efficiently
03:55  halberd: just leave them open so it's easy to get to them later
03:55  fritzophrenic: well, maybe Emacs could too
03:55  fritzophrenic: but none others I've heard of
03:55  zarac: it's easy to get them anyway... i use fuzzyfinder : )
03:56  psycojoker: waou, http://vim.org doesn't work, this is so from the past
03:56  zarac: ,ff / ,fF to open a file from pwd / dir-of-file
03:56  zarac:  psycojoker try www.vim.org, it's a web-site ; )
03:56  zarac: well i assume it is since you use http .. ;)
03:58  psycojoker: yeah, I know, webmaster use to require "www." last century :o)
03:58  zarac: perhaps vim.org is on another host?
03:58  zarac: domains are not only for the web : )
03:59  zarac: although i don't know if that's the case here...
03:59  tinto: i always hear that to be able to properly use vim you need to be a touch typist. does people here generally touch type? i can type fast, but i never learned to touch type when i first started using a computer 20 years ago so learned all my own mistakes. others?
03:59  psycojoker: indeed, "vim.org mail is handled by 20 jail.42.org"
03:59  halberd: I type 100+ wpm
03:59  halberd: that's the most important part of using any editor
04:00  rdpate: no, the most important part is not typing
04:00  zarac: tinto, i would say "no, they lie" : )
04:01  rdpate: tinto: try it and decide for yourself
04:01  zarac: although of course it makes a huge difference
04:01  tinto: not necessarily. like i say, i can type fast and can get by just fine because of it in almost all editors, but I hear that with vim most of the commands are built around touch typists. so i wonder if i'll never quite manage to get the most out of it without learning to touch type
04:01  tinto: i have been trying to learn.
04:01  zarac: another idea might be to learn how to type properly..
04:01  tinto: but it's like trying to learn to speak backwards when you've done it your own way for 20+ years
04:02  zarac: tinto, that's only part of vim, if you really could not manage to remember your favorite commands (which i'm pretty sure you can) .. you could always just use :Ex mode : )
04:03  tinto: zarac: yeah and i seem to be getting along just fine without it. just always wonder if i'm sorta missing out on something big...
04:03  zarac: i bet if speaking backwards was the way to go.. even a 20 year old dog could learn : )
04:03  rdpate: tinto: I have lots of personal typing quirks; they don't get in my way of using vim
04:04  zarac: there are tons of nice tricks you can do with key commands.. but sure you can survive without them
04:04  zarac: i don't use right shift.. : )
04:04  tinto: exactly! right shift... man i just learned this today!
04:04  zarac: i always use left... even for the letters on the left side of the keyboard (which you're not supposed to do)
04:04  tinto: while doing a typing tutor
04:04  zarac: haha : )
04:04  zarac: hi5!
04:05  tinto: i was like, "wait - people use the right shift???"
04:05  rdpate: yeah, I think that's common wrt left-shift; I do it too
04:05  tinto: asked my girlfriend and she looked at me like i was weird that i pressed left-shift 'a' to get an A :)
04:05  zarac: wrt? : )
04:05  rdpate: I do use the right sometimes, though :)
04:05  rdpate: with respect to
04:05  zarac: haha
04:05  zarac: i don't even know where it is
04:05  zarac: : )
04:06  zarac: i seriosly can't hit it.. i just tried a few times.. : )
04:06  rdpate: err, with regards to, here, sometimes it's respect :)
04:06  zarac: ; )
04:07  halberd: left shift?
04:07  halberd: I never use left shift
04:07  halberd: I should remap it
04:08  fritzophrenic: i didn't use the rigth shift at all when I used QWERTY. When I retrained myself with Dvorak I figured I might as well learn it correctly and use the right shift.
04:08  tinto: how long did it take you to retrain with DVORAK? a guy at work uses that
04:08  tinto: it's annoying having to sit at his desk to help out with something
04:09  fritzophrenic: haha yeah it would be
04:09  fritzophrenic: I have a keyboard shortuct set up to switch back and forth for just that sort of reason
04:09  tinto: yeah he has that too
04:09  tinto: but his keys on the keyboard are still all messed up
04:10  tinto: and even though i don't *look* at the keys while typing...
04:10  tinto: they must catch my eye and confuse me or something.
04:10  tinto: it's messed up
04:10  fritzophrenic: it took about 2-3 weeks to learn, another month before I was equal to my previous speed, but by a few months in I was typing about twice as fast (which I understand is actually much more dramatic than most people experience)
04:10  tinto: or i look more than i think i do
04:10  fritzophrenic: the nice thing was that I wasn't even switching for the speed increase, I switched for the ergonomic benefits
04:11  fritzophrenic: oh did he re-arrange the keys or get stickers or something?
04:11  tinto: he rearranged them manually :)
04:11  halberd: twice as fast? how fast were you typing before
04:11  tinto: popped them off, and back on
04:11  estragib: two months to old speed? not bad. took me much longer. :/
04:11  fritzophrenic: about 30WPM before the switch...I'm at upper 70s now according to online typing tests
04:11  fritzophrenic: this is about 5 years after my switch
04:12  fritzophrenic: (holy crap it doesn't seem like that long)
04:12  tinto: do you remap most of the default vim commands? seems to me that a lot of them (like hjkl) are set up based on the qwerty layout
04:12  fritzophrenic: nope, almost none of them
04:12  tinto: interesting
04:12  halberd: hjkl is a bit odd
04:12  halberd: why not wasd
04:12  fritzophrenic: hjkl are just as easy in their new positions to remember, not like they were mnemonic
04:12  halberd: or ijkl
04:13  fritzophrenic: hjkl were arrow keys on reeeealy old keyboards
04:13  fritzophrenic: back when vi was written
04:13  fritzophrenic: anyway, on Dvorak, jk are on the left hand, hl on the right, the separation works out nicely
04:14  fow: Despite being a Dvorak user, I must say that using hjkl to move on QWERTY is pretty pleasant
04:14  halberd: I just use the arrow keys
04:14  halberd: or mouse positioning
04:14  fritzophrenic: I almost never use h or l
04:14  fritzophrenic: normally I use jk w b f F t or T for basic movement
04:14  tinto: i use hjkl on qwerty. works nice once you get used to it. i assumed everyone used it
04:14  halberd: mouse positioning is pretty quick
04:15  fritzophrenic: yeah, but it's too slow to scroll through a line one character at a time
04:15  halberd: for that midrange text positioning
04:15  fritzophrenic: I even have an ALT+w mapping for 4 words at a time
04:16  tinto: yeah but that's why you use "w" instead of going one char at a time
04:16  halberd: in emacs i use C-s a lot
04:16  fritzophrenic: again, I I have a bigVariableNameWithLotsOfChars I'd rather do eFO instead of ehhhhhhh
04:18  halberd: the other thing with emacs C-s is that you don't have to press enter
04:18  Rakko: what's C-s?
04:18  halberd: incremental forward search
04:19  Rakko: :set incsearch
04:19  bsmntbombdood: I like the M-y behavior
04:20  halberd: yeah but with incsearch you still have to press enter
04:20  Rakko: hmm
04:20  Rakko: in Emacs if you do C-s, how do you tell it "bring me back to where I was before searching"?
04:20  Rakko: there has to be some way to signal to the editor that you're done typing a search
04:21  halberd: you could delete what you have typed in the C-s field
04:21  rdpate: how do you tell it "this text I'm about to type doesn't get added to the search term?"
04:21  halberd: well pressing an arrow key gets you out of it
04:21  strull: so pressing an arrow-key is better then pressing enter ??
04:21  rdpate: well, just press enter instead of an arrow key; same difference
04:21  halberd: yeah because the arrow key is part of going where you want
04:22  halberd: typically you search for something but when you get there you want to adjust the cursor to a slightly different place
04:22  halberd: so you'd be using the arrow keys anyway
04:22  strull: what a nonesense
04:22  rdpate: halberd: my keyboard doesn't *have* arrow keys
04:23  bsmntbombdood: halberd: real emacs users use C-n C-p C-f C-b
04:23  rdpate: at least not without using the crappy special-function key all laptops have nowadays :)
04:23  halberd: there's no advantage to using those bsmntbombdood
04:23  fritzophrenic: halberd, or adjust it with a second search or an offset from one end or the other without leaving the search line :-)
04:23  halberd: except for compatibility with old terminals
04:23  bsmntbombdood: halberd: how about hjkl then?
04:24  fritzophrenic: hands on the home row is their advantage
04:24  halberd: also vim search doesn't let you use "n"
04:24  fritzophrenic: no need to shift over to arrow keys or CTRL or shift
04:24  halberd: until you press enter
04:24  halberd: in emacs you can do C-s cat C-s C-s amaran C-s
04:24  estragib: i'm starting to get the feeling this is an elaborate trolling attempt
04:24  strull: halberd: stick to emacs and stop trolling
04:24  rdpate: estragib: ditto
04:25  estragib: :D
04:25  Rakko: rdpate: what kind of laptop is it?
04:25  halberd: yeah because criticism is trolling
04:25  estragib: halberd: it is well and fitting that you use emacs if you prefer arrow keys to easy home positioning, but what are you doing on #vim then?
04:26  halberd: at work the app servers don't have emacs
04:26  strull: don't criticize something you don't know. That's childich
04:26  rdpate: Rakko: I don't have it here at home, was more an example
04:26  fow: halberd isn't trolling
04:26  halberd: I know how vim search works
04:26  Rakko: rdpate: but you have a laptop with no arrow keys?
04:26  rdpate: Rakko: they're emulated
04:27  Rakko: what kind of laptop is that? I've never seen one with no arrows
04:28  halberd: I'm used to using the arrows from playing zillions of games
04:28  halberd: and from other editors
04:29  halberd: if the qwerty movement keys were arranged like the arrows I'd be more likely to use them
04:29  halberd: like ijkl or wasd
04:29  fritzophrenic: so, :nnoremap <C-s> / and :cnoremap <C-s> <CR>n/<Up> or something like that
04:29  fritzophrenic: you can tweak to make sure it's the search instead of the command-line too but I don't remember the function off the top of my head
04:30  fritzophrenic: same goes for those keys, I'd probably use ijkl rather than wasd, fewer conflicts you need to figure out
04:31  halberd: suppose you are doing n while searching
04:31  halberd: and you want to modify your search term
04:31  halberd: do you have to start from scratch?
04:31  rdpate: no
04:31  fritzophrenic: nnoremap <CR>n/<Up> should get you the previous search term
04:31  fritzophrenic: ready for editing
04:31  halberd: what do you do
04:32  fritzophrenic: sorry, cnoremap
04:33  rdpate: halberd: :help cmdline-history
04:34  halberd: how come : is 2 keystrokes, why not use ;
04:34  rdpate: if you want that, remap it.
04:34  fritzophrenic: because ; is "repeat last f, F, t, or T search"
04:34  fritzophrenic: or remap it if you want
04:34  Rakko: halberd: I use '
04:34  fritzophrenic: when I use command-line mode, it's usually for big enough edits that the extra keystroke doesn't matter
04:35  fritzophrenic: I spend long enough constructing the ex command that it's negligable
04:35  wizd: how to jump to function definition using :tags
04:35  fritzophrenic: whereas in normal mode such things would matter
04:35  fritzophrenic: CTRL-]
04:36  fritzophrenic: or gD if I'm in the same file
04:36  fritzophrenic: or CTRL-W ]
04:36  wizd: tried ctrl-], returns no tags file, tag not found :(
04:36  Rakko: did you generate tags?
04:37  fritzophrenic: then, :tags should not work...or, is that what you're asking?
04:37  wizd: yes how to generate them
04:37  fritzophrenic: step 1: generate tags using ctags or exuberant ctags, step 2: set 'tags' option to include the newly generated file, step 3: use :tag or CTRL-] to jump to a tag
04:38  fritzophrenic: I think there's examples in :help ctags but I'm not sure
04:38  fritzophrenic: there should be some documentation with the exuberant ctags tool
04:38  fritzophrenic: or a manpage or something
04:40  wizd: is ctags only for c
04:40  wizd: im using php
04:41  fritzophrenic: ctags maybe. I think exuberant ctags might support it though
04:41  fritzophrenic: don't have it installed on this PC or I'd check
04:41  fritzophrenic: anyway, good luck all, and good night!
04:47 --- sjl_ is now known as sjl
--- Log closed Sun Oct 10 05:34:19 2010
--- Log opened Sun Oct 10 05:34:43 2010
05:34 --- Users 548 nicks [0 ops, 0 halfops, 0 voices, 548 normal]
05:35 --- Channel #vim was synced in 52 seconds
06:07  maguey_: I just modify my .vimrc and I have several vi sessions open how can I force my current vim sessions to use the new .vimrc?
06:08  halberd: yeah I do prefer to use ijkl instead of hjkl
06:08  Raimondi: maguey_:  :source ~/.vimrc
06:08  halberd: i = up, j = left, k = down, l = right
06:09  pigdude: noooo
06:09  halberd: it's a lot more intuitive
06:09  pigdude: hjkl
06:09  halberd: because it's arranged like the arrow keys
06:09  halberd: in fact I prefer it to the arrow keys
06:09  halberd: h is now my insert key
06:09  pigdude: what do people do when they open vim on your desktop?
06:09 --- sora_h is now known as sorah_off
06:10  halberd: using their own vimrc?
06:10  halberd: but no one else uses this computer
06:10  pigdude: very often I show somebody something in an editor
06:10 --- sorah_off is now known as sora_h
06:10  maguey_: Raimondi: thx man it works :-)
06:11  halberd: you can show someone something
06:11  halberd: why would they be editing it on your computer as your user
06:11  halberd: that's not right
06:12  halberd: you could just tell them where the file is on the network share
06:12  halberd: or email it to them
06:13  pigdude: when I am teaching something it is very useful
06:14  halberd: what's the page down command
06:14  systemfault: ctrl+f
06:14  halberd: ty
06:14  systemfault: If you prefer to go down half a page... ctrl+d
06:15  systemfault: ctrl+b is the opposite of ctrl+f and ctrl+u is the opposite of ctrl+d
06:15  Rakko: ah... I keep using C-u and C-d
06:15  Rakko: didn't know about C-b and C-f
06:15  yitz_: back/forward and up/down
06:17  halberd: if you need to make a lot of changes in the same area of code do you use the arrow keys to navigate while staying in insert mode?
06:19  halberd: or do you constantly hop in and out of insert mode?
06:19  pigdude: systemfault: <c-d> I didn't know that one
06:19  systemfault: :)
06:19  pigdude: now I realize I have to change this one plugin I wrote
06:19  systemfault: pigdude: Personnally, I prefer to go by half a page at a time because you still have the "context"
06:19  fow: halberd, hop in and out, though depending on what the changes are, I may not need to go into insert mode at all
06:19  pigdude: it defaults to <c-U>
06:20  pigdude: for 'upload'
06:20 --- slackstation_ is now known as slackstation
06:20  halberd: I actually rather like vim after half a day
06:20  halberd: I'm going to have to remap ctrl-c to a single key
06:22  halberd: and maybe use C-a C-e like emacs does
06:22  halberd: pressing 0 or $ to go to beginning or end of line is too cumbersome
06:23  LeoNerd: I use Home
06:23  halberd: you have to reach all the way across the keyboard
06:23  LeoNerd: Ah but I can do it insert mode, so I save time overall
06:23  halberd: fair point
06:24  halberd: I wish there was a way to jump from insert to normal mode temporarily
06:24  LeoNerd: Also my typing position ends up using my left hand for most of the letters, only a few on the right, so my right is better placed for arrows/6cursors anyway
06:24  LeoNerd: Ctrl-O
06:24  maguey_: How can I run expand within vim?
06:24  fow: halberd, haha those are two maps I really like :P from my vimrc, inoremap <C-e> <C-g>u<C-o>$ and inoremap <C-a> <C-G>u<C-o>0
06:24  maguey_: Sorry expan is a command that removes blank spaces
06:26  halberd: is there a delete-next-character command from normal mode?
06:26  Rakko: x
06:26  LeoNerd: <Delete>  ? ;)
06:27  LeoNerd: Acutally I have <Delete> mapped to "_d
06:27  halberd: can you distinguish between left and right alt
06:28  halberd: can I have left alt swap from normal to insert?
06:28  LeoNerd: If you remap one to something else, sure...
06:28  LeoNerd: But that's outside of Vim's control
06:28  Rakko: it depends on your terminal
06:28  Rakko: or GUI
06:28  Rakko: that sounds like a cool key binding
06:29  Rakko: some people on the vim wiki use caps lock for that
06:29  halberd: still a pain in the neck that you can't put the cursor at the end of the line in normal mode
06:29  halberd: to delete the line break
06:29  halberd: you have to use J
06:29  LeoNerd: My Caps Lock key is the Hyper modifier. I use it for window manager
06:29  halberd: my caps lock key is ctrl
06:29  Rakko: halberd: set virtualedit+=onemore
06:29  halberd: because I'm an emacs user
06:29  fow: halberd, perhaps you want :se ve+=onemore
06:29  fow: ope Rakko beat me
06:29  Rakko: hehe
06:30  halberd: what does that do
06:30  halberd: just change the visual position of the cursor?
06:30  Rakko: no, it allows you to go to the end of the line in normal mode
06:30  Rakko: :h 'setvirtual'
06:30  Rakko: oops
06:30  halberd: and can you then delete the line break with x?
06:30  Rakko: :h 'virtualedit'
06:31  Rakko: halberd: I just tried it, and no
06:31  halberd: what's the point then
06:31  Rakko: but I think maybe if you change 'whichwrap' you could
06:32  fow: you don't delete line breaks, you join lines
06:32 * LeoNerd muses... :map <Delete> :if {something to detect eol} normal J | else normal x | endif
06:32  halberd: J joins with a space
06:32  fow: oh
06:32  halberd: anyway it's less intuitive
06:32  halberd: in other editors you can delete the line break
06:33  Rakko: oddly, if you go to the beginning of the next line, you can use capital X to join it to the previous
06:33  LeoNerd: That's becaues most other editors view the text much more as a continuous stream, with \n's in some parts of it
06:33  halberd: doesn't work on mine Rakko
06:33  LeoNerd: Vim views it verymuch as an ordered list of lines, within each line an ordered list of characters.
06:34  halberd: what's the opposite of w
06:34  LeoNerd: e  ?
06:34  LanEast: halberd: try gJ to join two lines
06:34  halberd: w going backwards
06:34  LeoNerd: b  ?
06:34  halberd: ah ty
06:35  halberd: what does <enter> do
06:35  halberd: in normal
06:35  halberd: and is there a way to insert a line break in normal?
06:35  fow: Vim's help is really good, halberd. use it :P (:he <key> will get you help for its usage in normal mode. :h i_<key> for insert, c_<key> for command line)
06:36  Rakko: :h 'option' for a set option
06:36  Rakko: :h function() for a function
06:36  Rakko: :helpgrep pattern to search all help
06:37  halberd: sorry, no help for c_<enter>
06:37  halberd: it appears to go to the beginning of the next line
06:37  halberd: but I'd prefer if it just inserted a line break
06:37  fow: That's like saying there's no help for i_a :p
06:38  Rakko: you can
06:38  Rakko: c_ is command line, anyway; you want n_ (normal)
06:38  fow: bairui_ wrote a small script once that makes enter insert a line break, but I don't have a link for it :/
06:38  LanEast: halberd: use o or O to insert a new line.
06:40  halberd: a line break is equivalent to d$ o C-c p
06:41  halberd: except it doesn't leave the kill ring with the end of the line in it
06:42  deryni: i<cr><esc> ?
06:42  halberd: or that, yeah
06:45  halberd: how do I turn recording off?
06:45  fow: q
06:48  halberd: are backspace, space, or tab used for anything important in normal mode?
06:49  Oleg_: non-mono fonts look much better in gnome-terminal than in xterm/uxterm
06:49  frogonwheels: halberd: space moves one char - has been known to be remapped
06:50  frogonwheels: halberd: <tab>  = <c-i>  has a use .. :help CTRL-I
06:51  halberd: is tab an important command or are there equivalent substitutes?
06:51  halberd: well you say it does the same as ctrl-i
06:51  halberd: so i could just use ctrl-i if I ever need that, right?
06:51  fow: halberd, a lot of your questions could be answered very easily by checking the help :P
06:51  frogonwheels: halberd: unlikely
06:51  fow: halberd, in this case, though, no, you can't, because tab /is/ ctrl+I
06:52  fow: halberd, if you go into insert mode, and type <C-V><Tab> (that is, ctrl+v and then tab) you will see ^I or <C-I> inserted, depending on your 'dy'
06:52  frogonwheels: halberd:  nah, even in gvim, <TAB> is exactlythe same as Ctrl+i
06:52  halberd: well then is ctrl-i really important? does everyone use jumplists?
06:53  fow: (Err, what I just said may not apply to gvim. I'm not really sure since I don't use gvim often/at all)
06:53  halberd: because it would be nice to just have it do a tab
06:53  frogonwheels: halberd: I find them extremely useful
06:53  halberd: ohh
06:53  frogonwheels: halberd: you could remap your ctrl+i ..  :noremap <m-i> <c-i>   (:help :norem
06:53  halberd: oh yeah I remember that one
06:54  frogonwheels: fow: just checked - it applies in gvim :)
06:54  fow: ah
06:54  halberd: alt is really harder to get to than ctrl
06:54  halberd: which is my caps lock key
06:55  halberd: is there perhaps some other way to make tab be a tab, without interfering with ctrl-i?
06:55  Rakko: with :noremap
06:55  halberd: oh it's done at a level below vim
06:55  Rakko: oh, wait
06:55  halberd: works the same way in terminal
06:55  Rakko: I misunderstood. No.
06:55  deryni: What are we trying to achieve here exactly?
06:56  halberd: I want to be able to do text repositioning while still in normal mode
06:56  halberd: i.e. spaces, line breaks, tabs, normal text deletion
06:56  frogonwheels: halberd: well >> handles indentation
06:56  deryni: Sounds like a bad idea to me, though I at least understand the idea now.
06:56  frogonwheels: halberd:  and I use  y<space>p  to put more spaces in
06:57  halberd: what does >> do exactly, is that a hard tab or spaces? and how come I can't put the cursor before it?
06:57  frogonwheels: halberd: and r<cr>  to insert line breaks
06:58  frogonwheels: halberd: >> obeys  'ts' 'sw' 'sts' 'et'  settings  ( :help 'ts  &c
07:07  halberd: can I make l at the end of the line go to the start of the next line, in normal?
07:07  halberd: and in insert, come to think of it
07:08  Rakko: yes
07:08  Rakko: :h 'whichwrap'
07:08  rdpate: use j to go down, I to insert at the beginning
07:09  halberd: actually you know I didn't check whether my employer's version of vim is actually vim
07:09  halberd: I think it is
07:10  Rakko: uh oh
07:15  halberd: what's the purpose of virtualedit+=onemore?
07:15  halberd: does it actually make a functional difference?
07:15  halberd: oh yeah it does
07:16  halberd: for insert mode when you press enter
07:20  halberd: with whichwrap including everything, and virtualedit+=onemore, can I have h at the start of a line make the cursor go to just past the end of the previous line?
07:21  halberd: ah that's a nice to have, not too important
07:21  Rakko: try it :P
07:21  halberd: well it doesn't work right now, it goes to exactly the end of the previous line
07:21  halberd: instead of after it
07:21 * Rakko had the idea to make a gvim scheme emulating the C64's default colors and font size... but how would you do a border?
07:22  halberd: oh yeah onemore means I don't need a anymore
07:25  halberd: ooh my command line vim is not integrated with my OS (ubuntu)
07:25  halberd: for copy paste
07:26  halberd: http://pastebin.org/93163 <- my config so far
07:26  halberd: now I should make sure vim has proper buffer support like iswitch-b for emacs - that's all important
--- Log closed Sun Oct 10 07:33:51 2010
--- Log opened Sun Oct 10 07:34:16 2010
07:34 --- Users 546 nicks [0 ops, 0 halfops, 0 voices, 546 normal]
07:34  bairui: fow: you probably meant: http://github.com/dahu/Insertlessly   :)
07:35 --- Channel #vim was synced in 52 seconds
07:35  systemfault: Rakko: Thanks for the tip :)
07:35  halberd: I'd need to make all yank commands from gvim copy to the system clipboard, in order to use vim regularly
07:35  fow: bairui, yeah, that's the one
07:35  halberd: that's indispensable and emacs does it
07:35  systemfault: Rakko: It works on Mint so it should also work on gvim
07:35  systemfault: halberd: Then use emacs?
07:35  halberd: I've been using emacs
07:35  halberd: but I kinda like vim now
07:35  Rakko: systemfault: "+y is what MacVim uses for Cmd+c
07:36  halberd: because of the shorter commands mostly
07:36  systemfault: halberd: If you already know it, why going through the trouble of learning another editor?
07:36  systemfault: Ahh ok
07:36  fow: halberd, see 'cb
07:36  halberd: like in emacs, going to a line number is M-x goto-line <number>
07:36  systemfault: halberd: Rakko's command works for me
07:36  halberd: + doesn't do anything on mine systemfault it just selects the next line
07:37  halberd: anyway I need them to go by default to the system clipboard
07:37  Rakko: halberd: I have hotkeys set for OS cut/copy/paste
07:37  systemfault: halberd: He said    "+y
07:37  halberd: so if I do, e.g., dd, it should go to there too
07:37  fow: halberd, the " in "+y is important
07:37  systemfault: halberd: That's 3 characters.
07:37  systemfault: halberd: When you have something selected
07:37  systemfault: (AKA Visual Mode)
07:38  halberd: ah yes that worked
07:38  halberd: what do I do for dd, "+dd?
07:38  systemfault: halberd: Why?
07:38  systemfault: halberd: What do you want to do?
07:38  halberd: to copy from a text editor and paste to the os
07:38  systemfault: "+y
07:39  halberd: yeah "+dd works too
07:39  halberd: so I'll just remap those
07:39  systemfault: Ahhh cut
07:39  systemfault: I understand.
07:39  Rakko: cut: "+x   paste: "+gP
07:40  fow: halberd, you don't remap them, you use the 'cb option
07:40  systemfault: My simple .vimrc, http://www.ideone.com/7B7TN if you want to take a look.
07:40  Rakko: fow: oh, cool
07:41  halberd: how do I use the 'cb option?
07:41  halberd: nvm
07:41  Rakko: what's the difference between the * register and " then?
07:42  Rakko: "+ I mean
07:42  Rakko: nm. :h change.txt
07:43  fow: I was thinking :h quotestar, :h quoteplus, or :h x11-selection
07:43  Rakko: yeah
07:44  Rakko: so "* is X11 primary selection and "+ is clipboard
07:44  halberd: no I still don't know after reading :help 'cp
07:45  halberd: how do I use the 'cp option to let me copy/paste between vim and the os?
07:45  Rakko: it's 'cb'
07:45  halberd: oic
07:45  Rakko: :set cb+=unnamed
07:45  Rakko: that should do it
07:46  Rakko: "When included, Vim will use the clipboard register '*'
07:46  Rakko: 			for all yank, delete, change and put operations which
07:46  Rakko: 			would normally go to the unnamed register."
07:47  halberd: can I reload my .vimrc without quitting?
07:47  Rakko: sort of
07:47  Rakko: :source ~/.vimrc
07:48  halberd: why is that sort of?
07:48  godlygeek: because there are a lot of actions in vimscript that aren't undoable.
07:48  systemfault: halberd: Because it's going to write over you current config
07:48  systemfault: *your
07:48  systemfault: halberd: So it's not a fresh reset
07:49  Rakko: Question: MacVim has this key binding: execute 'vnoremap <script> <special> <D-v>' paste#paste_cmd['v']
07:49  Rakko: what is "paste#paste_cmd['v']"?
07:49  halberd: it didn't work
07:49  halberd: I set cb+=unnamed, then deleted a line, but it didn't go to the system clipboard
07:50  godlygeek: halberd: on unix, it wouldn't - it would go to the x selection, which would be pasted with middle click
07:50  halberd: nope
07:51  Rakko: oh, oops
07:51  godlygeek: Rakko: from that syntax... there's a script called autoload/paste.vim, which contains a Dictionary called "paste_cmd", which has a key in it for 'v'
07:51  halberd: I don't actually have a middle click though
07:52  Rakko: so file#var means "var defined in file"?
07:52  godlygeek: halberd: shift-insert, perhaps?
07:52  halberd: but I tried clicking both left & right buttons in emacs and it just pasted the previous one
07:52  halberd: shift-insert does nothing
07:52  godlygeek: *shrug*, i have no idea how emacs works.
07:52  halberd: well it does nothing outside emacs
07:53  godlygeek: shift-insert inserts from the x selection in xterm
07:53  godlygeek: Rakko: :help autoload
07:53  Rakko: thanks
07:53  fow: halberd, your lack of a middle click button is more of an X problem. Most people get around it by using shift-insert, like godlygeek is saying, or enabling middle click emulation (clicking left and right simultaneously acts like middle click)
07:53  halberd: oh yeah, shift-insert did paste my selection in xterm
07:54  Rakko: halberd: or clicking the mouse wheel, if you have one
07:54  halberd: but I never use xterm, I use the gnome terminal
07:54  halberd: I don't have a mouse wheel
07:54  godlygeek: Rakko: note that that only talks about functions - i'm not entirely sure, but that syntax seems to be suggesting that it works for variables too.
07:54  godlygeek: i've never used it for that, so i'm not positive.
07:55  halberd: what I need is to copy into the gnome clipboard
07:55  halberd: or the windows clipboard
07:55  Rakko: so is it possible to use cb+=unnamed, but have it use "+ instead of "*?
07:56  godlygeek: no.  if you want something to go to the clipboard, as opposed to the x selection, you have to do it manually.
07:56  Rakko: ok
07:56  Rakko: halberd: I would make some key bindings for that then
07:56  halberd: well manually or else just remap dd to "+dd and y to "+y
07:56  godlygeek: OTOH, there may be some X clipboard managers that can do it for you...  it seems perfectly possible to have a clipboard manager that always changes the clipboard whenever the x selection changes
07:57  Rakko: yes, those exist
07:57  halberd: I don't see remapping as a bad solution
07:58  godlygeek: halberd: and what about all the other things that can delete/yank?  would you also change dw, de, dt, dh, dj, s, cc, etc?
07:58  halberd: I don't know what all those things do
07:58  godlygeek: the number of mappings you'd need to create borders on infinite.
07:58  halberd: if I want to copy to my OS I'm probably going to want to copy a line or a region
07:59  halberd: oh is there a command that copies a line without deleting it?
07:59  godlygeek: halberd: delete til the beginning of the next word, delete til the end of the current word, delete til the next occurrence of some character, delete the character under the cursor, delete the current line and the one below it, ...
07:59  godlygeek: halberd: that's what y does
07:59  Rakko: yy
07:59  halberd: just v$y
08:00  godlygeek: that would need to be 0v$y or v0o$ if you weren't already at the beginning of the line.
08:00  halberd: yeah
08:00  godlygeek: er, v0o$y
08:00  halberd: voosy
08:01  godlygeek: ?  voo is exactly the same as just v ...
08:01  godlygeek: ah, wait - you were just reading what i wrote.  nevermind, i'm retarded.
08:01  Rakko: yy is much easier than those
08:02  godlygeek: heh, indeed.
08:02  halberd: so I should remap yy "+yy
08:03  halberd: and that just about does it... smaller pieces of text I'm not likely to care about
08:09  halberd: does fuzzyfinder work incrementally?
08:09  halberd: showing more buffers as you type
08:10  halberd: or rather, reducing the number of buffers shown as you type
08:10  Araxia: a friend of mine recently mapped <BS> to "_ as an easy way to make deletions without polluting ""
08:13  Rakko: "_ ? I don't get it
08:13  Araxia: the black hole register.
08:13  halberd: oooh
08:13  Rakko: oh, in visual mode
08:13  Araxia: so you yank a line, "_dd to delete another, then p to paste in the yanked line.
08:14  halberd: fuzzyfinder shows buffers one line at a time
08:14  halberd: what if there are 40 of them
08:14  Araxia: or normal mode.
08:21  halberd: if I want to write to a new file in a directory that doesn't exist can I do that?
08:21  halberd: other than remembering to create the directory beforehand
08:22  godlygeek: no.  but you can make the directory without leaving vim:  :!mkdir /path/to/dir
08:23  Rakko: it's aliiiiiva
08:23  etcetera: I'm using vim installed via the windows installer
08:23  etcetera: is there a vim and gvim specific config file?
08:23  etcetera: or something like an #ifdef
08:24  halberd: godlygeek, what if you are connecting over ssh?
08:24  godlygeek: halberd: you mean you're writing to a remote path with netrw?
08:24  Rakko: I think OS X should have made longer, space-sprinkled pathnames for traditional Unix paths. Like "/Et Cetera" and /User (not to be confused with /Users, of course!)
08:24  halberd: yes
08:24  Rakko: etcetera: gvim reads both _vimrc and _gvimrc
08:24  godlygeek: halberd: don't know any easy way to do it there.
08:25  halberd: I frequently have that need
08:25  halberd: emacs will do it
08:26  halberd: M-x make-directory, doesn't matter if it's local or remote
08:26  Rakko: :!ssh foo@bar mkdir path
08:27  etcetera: Rakko: thanks
08:28  halberd: how do I paste INTO vim
08:28  godlygeek: "*p or "+p
08:28  Rakko: "+gP pastes it more or less like a non-vim app would do
08:29  etcetera: anyone know of some good c# auto-completion plugins for vim?
08:29  halberd: what does the g do?
08:29  Rakko: it's an all-purpose modifier I think
08:29  etcetera: alternatively a complete package of auto-completion for things like perl, python, c# etc.
08:30  Rakko: but gP means the pasting happens right at the current cursor position and the cursor moves to right after the paste
08:30  Rakko: etcetera: I don't know offhand, but there is something for visual studio with vim-like key bindings
08:30  etcetera: Rakko: yea...I want to start using vim for quick edits.
08:31  halberd: well "+gP is quite a thing to type
08:31  halberd: not exactly concise
08:32  joeytwiddle: if you're on windows, i think paste is also mapped to Ctrl+V.  or on linux, with :set mouse=a, you can middle-click the mouse button to paste
08:32  Rakko: binding
08:33  scp1: I just do :set paste and shift+insert from the X clipboard, or simply p from the current buffer
08:33  godlygeek: :set paste isn't a thing that most people would want to leave on, though...
08:34  scp1: :set nopaste :)
08:35  joeytwiddle: actually middle-click seems to work like :set paste even if it's off, as opposed to shift-insert in insert mode
08:36  Rakko: etcetera: http://arun.wordpress.com/2009/04/10/c-and-vim/ is all I've found so far
08:37  halberd: so what's the big advantage of using multiple clipboards?
08:37  halberd: is that really something that gets used?
08:37  Rakko: yes, GUI pasting or pasting using "* or "+ automagically acts like :set paste
08:38  Rakko: oh, but shift-insert doesn't? weird
08:38  halberd: I mean perhaps I could remap p to "+p
08:38  halberd: if I never need another clipboard
08:38  Rakko: I'm sure people use it
08:38  Rakko: but I haven't yet
08:38  halberd: but you don't?
08:39  godlygeek: pasting from a vim register is, for most people, much more common than pasting from the system clipboard.
08:39  halberd: well I'm not most people
08:40  Roost3rJuice: pasting from clipboard requires you use the mouse
08:40  Roost3rJuice: = stupid
08:40  scp1: no, it doesnt
08:40  godlygeek: Roost3rJuice: no it doesn't
08:40  scp1: I have no mouse at all...
08:40  godlygeek: "+p or :pu+ or many other keystrokes...
08:40  halberd: I have lots of programs open at once
08:40  halberd: information needs to be able to move between them
08:41  Roost3rJuice: in putty? how do you copy to the clipboard with a hotkey?
08:41  scp1: So you're looking for a way to sync the vim buffers with the X clipboards?
08:41  halberd: it's pretty common for me to want to copy the contents of a terminal, for example, and paste it into a buffer for easier searching
08:41  Roost3rJuice: or better yet even select
08:41  scp1: I use xclip for that
08:42  godlygeek: Roost3rJuice: "+yy ought to do it.
08:42  halberd: also how come yank in vim means paste
08:42  halberd: but yank in emacs means copy
08:42  halberd: what's the story there
08:42  Roost3rJuice: yank is copy
08:42  Kizaru: (02:29:19) (etcetera) anyone know of some good c# auto-completion plugins for vim?
08:43  halberd: err i mean the other way around
08:43  halberd: yank in vim means copy, in emacs it means paste
08:43  Kizaru: etcetera: i assume you're using c# on windows?
08:43  Roost3rJuice: why would yank mean paste
08:43  etcetera: Kizaru: yes.
08:43  Kizaru: have you tried viemu? it's a vi plugin for visual studio
08:43  Roost3rJuice: godlygeek, so if I put in +yy it will copy to my system clipboard
08:43  etcetera: Kizaru: would rather not use visual studio for vim.
08:43  Roost3rJuice: i find that hard to beleive
08:43  halberd: I suppose in emacs they think of you yanking from the kill ring
08:44  halberd: copy is called "kill" in emacs
08:44  halberd: kill and yank = copy and paste
08:44  godlygeek: because in vim, it refers to yanking something out of the document and throwing it into a register - in emacs, it refers to yanking something out of a buffer and into the document.
08:44  godlygeek: Roost3rJuice: ought to.
08:44  Roost3rJuice: godlygeek, nope
08:44  godlygeek: Roost3rJuice: not +yy - "+yy
08:44  Roost3rJuice: doesn't work
08:44  godlygeek: 4 key strokes
08:44  Roost3rJuice: nope
08:45  Roost3rJuice: not on putty
08:45  Kizaru: etcetera: you're doing c# work on windows, but you don't want to use vs because? i think it's a little insane not to
08:45  etcetera: Kizaru: it's not that I dont
08:45  Rakko: Kizaru: on my system VS takes way too much memory
08:45  etcetera: it's that I want see if vim can do c# intellisense.
08:45  etcetera: I use vs exclusively.
08:46  Roost3rJuice: step 1) stop using .net
08:46  Roost3rJuice: step 2) use vim
08:46  Kizaru: don't get your hopes up about decent c# intellisense in vim (or emacs, for that matter)
08:46  godlygeek: Roost3rJuice: yeah, fair enough - it wouldn't work with putty.  that keystroke is asking vim to insert it into the OS clipboard directly, and naturally the unix vim has no idea how to stick something into the windows clipboard.
08:46  halberd: you know what
08:46  halberd: maybe emacs' viper-mode is for me
08:47  Roost3rJuice: using vim for .net programming would be retarded
08:47  etcetera: it is.
08:47  Kizaru: yep, that's the conclusion i reached. using viemu was great though. thankfully i am back in school and doing all school work on linux
08:47  etcetera: I'm just trying to see if there's a way to get auto-completion working.
08:48  etcetera: hell even xml auto completion doesnt work.
08:48  etcetera: so vim has that going for it.
08:50  halberd: can I get remap viper?
08:50  halberd: hmm
08:51  halberd: is viper an emacs question
08:51  halberd: I suppose it is
--- Log closed Sun Oct 10 09:33:24 2010
--- Log opened Sun Oct 10 09:33:47 2010
09:33 --- Users 549 nicks [0 ops, 0 halfops, 0 voices, 549 normal]
09:34 --- Channel #vim was synced in 59 seconds
09:49  etcetera: anyone know how to set tab length
09:49  Raimondi: etcetera:  :h 'tabstop'
09:49  Rakko: :set ts/sts/sw
09:50  etcetera: seems vim defaults to something other than 4
09:51  Raimondi: :h 'tabstop'  says the default is 8
09:52  etcetera: yea, I think default is 3, no?
09:52  etcetera: or was it 4-5
09:52  etcetera: ?
09:53  Raimondi: default where?
09:53  etcetera: notepad++ uses 4.
09:53  etcetera: Raimondi: meant most common, sorry.
09:55  Rakko: usually 4 or 8
--- Log closed Mon Oct 11 07:24:35 2010
