--- Log opened Mon Nov 01 00:00:21 2010
--- Day changed Mon Nov 01 2010
00:00  FernandoBasso: I use $HOME/.Xdefaults. I don't know what color affects the cursor though.
00:00  LeoNerd: Huh? .Xdefaults will only control some terminals
00:00  FernandoBasso: I run arch linux.
00:00  LeoNerd: What to do depends entirely on the terminal you're running
00:00  FernandoBasso: xterm and urxvt here.
00:01  FernandoBasso: There are all those 'colorN'. I have no idea what 'N' is for the cursor.
00:01  mhi^: FernandoBasso: "urxvt*cursorColor: #ffaa77" works for me.
00:01  LeoNerd: There'sa different one
00:02  FernandoBasso: LeoNerd: I also have that for urxvt.
00:03  mhi^: FernandoBasso: Those *colorN thingys redefine the system colors.
00:04  FernandoBasso: Xterm*cursorColor: #efbfbf in Xdefaults && xrdb ~/.Xdefaults does not change my xterm cursor color.
00:04  FernandoBasso: The urxvt one is fine.
00:06  mhi^: Hmm, the manpage says there's also cursorColor for xterm.
00:08  mhi^: FernandoBasso: does it work with: xterm -cr "#efbfbf"
00:08  FernandoBasso: mhi^: Yes. It does.
00:08  mhi^: Hmm.. typo in the .Xdefaults? :|
00:09  FernandoBasso: Xterm*cursorColor:  #efbfbf
00:09  FernandoBasso: XT
00:10  FernandoBasso: the T also has to be upper case.
00:10  FernandoBasso: Works.
00:10  FernandoBasso: mhi^: Thanks so much.
00:10  mhi^: hmm, for me it works with "xterm*", but anyways.. np :)
00:12  gabe_hollombe: Hey vimmers, can vim treat the default register like a stack?  I often find myself cutting two things, then wanting to paste them both back someplace else, but the second cut has overwritten the first cut in the default register.  And, at the time of cutting, I didn't think to cut into seperate registers
00:12  FernandoBasso: xterm*cursorColor:  #efbfbf <-- This is definitely not working for me. Xterm... does not work either. XT.... does work.
00:15  _Ludwig_: What would be the best plugin for handling Mercurial repos from within Vim?
00:15  _Ludwig_: Preferably, something "user friendly" ...
00:16  mhi^: FernandoBasso: for me works "XTerm" and "xterm", but here: Each resource specification appears on a separate line and is often of the form Client*resource: value. The client name is specified by the program, but unless stated otherwise, this is usually the name of the program with the first letter capitalized, e.g. netscape becomes Netscape, unless the first letter is an X, in which case the first two letters are capitalized, e.g. xterm becones XTerm.
00:18  mhi^: Now I wonder why "xterm" is working for me, too. Could be a compile-time option, but I don't see anything like that in the Pkgfile.
00:18  mhi^: _Ludwig_: I think vcscommand
00:19  FernandoBasso: mhi^: Yeah. It is strange. Indeed.
00:27  _Ludwig_: mhi^: yeah, i came across that one ... strange indeed.
00:28  _Ludwig_: mhi^: but thanks!
00:29  _Ludwig_: btw, since there isn't much traffic here at this time, can I ask another thing? Folks at #git weren't too fast to answer ... How can I move .gitconfig on windows from c:\docs and settings\ludwig to let's say c:\configs ?
00:29  _Ludwig_: I know this is technically offtopic, but just thought I'd give it a shot - maybe someone's done something alike before
00:30  mhi^: Sorry, but it's a long time since I used Windows :|
00:30  mhi^: +been
00:31  lumgwada: symlink?
00:31  mhi^: Are there symlinks on Win filesystems?
00:32  lumgwada: I remember theres a windows app that can generate them (ala not your shortcut type)
00:32  jink: Windows7 supports something symlinky.
00:32  fow: sort of/yes
00:33  gustavderdrache: _Ludwig_: look at setting %GIT_CONFIG% in your environment (see "git help config")
00:33  fow: Googling "Windows symlink" should give you some good information. you probably want NTFS and probably Windows 7 (not sure about Vista; XP supports something symlinky but it's better in Windows 7 but still not quite a proper sym link AFAIK)
00:34  gustavderdrache: _Ludwig_: I'd also try to find out where "git config --system" gets its system-wide config
00:35  gustavderdrache: (disclaimer: I use Linux far more often than Windows, so these might not do what you want/need)
00:35  _Ludwig_: gustavderdrache: yup, tried that (to the best of my understanding <-- which is limited). I setted the GIT_CONFIG env. var. to c:\something_else ... and moved the original .gitconfig to there (with a changed name, just so I could tell the difference) ... didn't "catch it" there
00:36  gustavderdrache: _Ludwig_: i'd look into the control panel, Windows is really weird about environment variables
00:36  gustavderdrache: _Ludwig_: but that's about as much help as I can give about windows :/
00:37  lumgwada: dont most people jsut install cygwin to make windows act as much like unix as possible?
00:37  _Ludwig_: gustavderdrache: yes, that is where I setted it. Didn't work. But thanks nevertheless - I appreciate the try. Although Git is nice, I'll stick with Hg, still acts much friendlier on Windows. :-/
00:38  gustavderdrache: i have less than fond memories of trying to get my windows-running laptop to play nice with a PHP application maintained by a bunch of folks on an OS X system
00:39  gustavderdrache: i ended up mauling my Apache configuration to make "symlinks"
00:40  _Ludwig_: gustavderdrache: you have my condolences :)
00:40  gustavderdrache: all because msys-git didn't respect them when i downloaded the repository...
00:40  gustavderdrache: _Ludwig_: pfft, that was the easy part
00:41  gustavderdrache: the hard part? trying to get mysql to use the unix socket interface on windows...
00:44  _Ludwig_: gustavderdrache: Please, I just ate ... <vomits> :)
00:44  gustavderdrache: _Ludwig_: oops, should've warned you, then :)
00:45  _Ludwig_: gustavderdrache: lol
00:45  gustavderdrache: i ended up editing the repository's configuration to use network sockets
00:45  gustavderdrache: and just never committing that file
00:54  gustavderdrache: i've been curious for awhile -- is there a normal-mode text motion that corresponds to an entire buffer?  i would love to know if there's a shorter keystroke combination for something like ! or g?
00:54  gustavderdrache: I know that ! i can do :%!sort or whatever, but i haven't found an equivalent for g?
00:55  jerojasro: gustavderdrache: you can usually do operator-motin
00:55  jerojasro: *motion
00:55  jerojasro: in this case
00:55  jerojasro: g?
00:55  jerojasro: (operator)
00:55  jerojasro: G
00:55  jerojasro: (motion, end of buffer)
00:55  jerojasro: if you do ggg?G, that will apply the command to all the buffer
00:56  gustavderdrache: jerojasro: so there isn't any shorter one than that?
00:57  jerojasro: not that I know of
00:57  gustavderdrache: jerojasro: yeah, that's what i figured
00:58  gustavderdrache: just wanted to make sure that i wasn't missing a nifty trick somewhere along the way :)
00:58  fow: unless you map one.
00:59  gustavderdrache: there's that, i suppose
01:13  Rakko: Sometimes vim seems to get stuck in a certain highlighting mode, and the rest of the file is highlighted wrong until I reload it. Is there any fix for that?
01:14  estragib: syntax sync fromstart ?
01:15  Rakko: oh, thanks
01:16  jerojasro: ctrl-l helps sometimes
01:16  Rakko: yeah
01:16  Rakko: unfortunately I remapped it though
01:18  checkers: hi, I want to set the options et & ts=4 for a certain filetype (python), but creating a whole new file in ~/.vimrc/ftplugin seems wasteful. Can I do this from my .vimrc
01:19  Rakko: yes
01:19  jerojasro: checkers: yes, through autocommands.
01:19  Rakko: put it in ~/.vim/after/ftplugin/python.vim
01:19  Rakko: or use autocommand
01:20  kongo: checkers: you can do something like "au FileType python setlocal ..."
01:20  Rakko: I misunderstood that you don't want to make a new file
01:20  jerojasro: but you should create the file anyway. It helps to keep your whole config more clean and manageable
01:22  checkers: I don't think it's worth it for two lines, is it?
01:22  checkers: kongo: like so: `au FileType python set et ; au FileType python set ts=4` ?
01:22  mhi^: folding helps keeping the config clean, too ;)
01:23  mhi^: checkers: yea, but use setlocal instead of just set
01:23  kongo: checkers: au FileType python setl et ts=4
01:25  checkers: nice, thanks
01:29  spiiph: Don't set ts with et!
01:29  spiiph: vimgor, indent
01:29  vimgor: For a quick overview of Vim's indentation settings, see http://vim.wikia.com/wiki/Indenting_source_code
01:30  checkers: thanks, but that much reading about indentation I will avoid :P
01:31  jerojasro: *sigh*
01:32  spiiph: checkers, don't come back when you run into problems, then.
01:33  checkers: I'll try to remember, but no promises
01:35  jerojasro: >:-|
01:35  jerojasro: meh, :P
02:34  Noble: How can I remove the info that vim displays on startup?
02:36  Araxia: Noble: :set shortmess+=I
02:39  Noble: Araxia: Ty
02:58 --- estragib_ is now known as estragib
03:23  GDG: how can I configure the printer in gvim (Win7)
03:23  GDG: ?
03:27  Rakko: not sure, GDG
03:27  GDG: what do you mean?
03:27  dborba: he means he isn't sure how to do it?
03:27  GDG: ok
03:28  dborba: afaik it just prints to the default printer
03:28  tmr: :hardcopy pops up default windows print dialog where you can switch preferences/printers.
03:29  dborba: if you'd like better printer support you can always just open the file with a more printing oriented program...
03:29  GDG: it really does not pop up anything...
03:29  tmr: It does here.
03:29  GDG: ... but if I am using vim, I'd like to print with vim :D
03:29  dborba: hardcopy on linux just sends the document to the default printer...
03:30  dborba: i dont think most people print using vim :P
03:30  dborba: the idea is to have 1 thing to do 1 thing well
03:30  dborba: vim = editor
03:30  Rakko: I've accidentally triggered print in macvim several times
03:30  Rakko: it formats the buffer as PS and then opens it in Preview, which converts it to PDF (but doesn't print it automatically)
03:31  tmr: Printing can be a part of normal editing process.
03:32  dborba: tmr, editing means performing work on a digital file... printing doesn't really figure into that even though it does have practical uses...
03:32  dborba: personally i use lp
03:32  dborba: i can use it from within vim with !lp
03:32  dborba: works great
03:35  tmr: dborba, doesn't matter if our editing process doesn't include printing, it can for some others. So it's good that vim supports printing.
03:36  dborba: sigh - i'm not discussing what my or yours or anybody's editing process involves. i'm talking about what a text editor does by definition
03:36  thomasa: hello everyone.
03:36  Rakko: hi
03:36  dborba: some users might light doing their editing at the park - doesn't mean the editor should drive them there
03:37  dborba: light = like
03:37  dborba: although i'm sure emacs can do it
03:38  qiyong: what sts=2:sw=2 mean?
03:38  qiyong: sw = space width?
03:39  tmr: vimgor, indent
03:39  vimgor: For a quick overview of Vim's indentation settings, see http://vim.wikia.com/wiki/Indenting_source_code
03:39  dborba: :help is helpful too ;)
03:41  qiyong: !sw
03:41  qiyong: vimgor, sw
03:41  vimgor: No idea!
03:43  tmr: qiyong, read that wikia page, or as dborba suggested ":he 'sts" and ":he 'sw".
03:46  qiyong: # vim:sts=4:sw=4
03:46  qiyong: how to enable that to respect the in file instructions?
03:47  dborba: qiyong, in vim normal mode type :he 'sts
03:49  frogonwheels: qiyong:   :help modelines
03:55  qiyong: how to i have <tab> insert 4 spaces?
03:55  frogonwheels: qiyong: :help 'et
04:17 --- f00li5h is now known as skeleton_feline
04:18  Accolade: can I make tabstops hard only at line beginnings? e.g. "<tab>x<tab>" -> "\tx   "
04:18  Accolade: so expand everything except indentation
04:23  tmr: Accolade, check out Smart Tabs plugin, I think that does what you want.
04:23  Accolade: tmr, thanks
04:25 --- skeleton_feline is now known as f00li5h
04:42  frogonwheels: Accolade: Yep -  I just uploaded some fixes to it yesterday :)
04:43  Accolade: straight from the source! :)
04:59  agenteo: do you use the vim ack plugin (http://www.vim.org/scripts/script.php?script_id=2572)? Do you find it much slower then using ack from the terminal?
05:00  agenteo: I just realised the difference might be the terminal one prints out its results while the vim plugin waits until the search is complete...
05:00  petercoulton: This is a little hard to google, Is there a way to switch @ and " in vim? I use a UK layout keyboard so they are switched.
05:00  isaacs: what does "<Leader>" mean in the vimrc file?  I know it can be set to a character, and it defaults to "\", but like, if I see this in a vimrc, how do i use it? "map <Leader>n :NERDTreeToggle<CR>"
05:02  isaacs: oh, nevermind, it just clicked.
05:02  isaacs: i'm dumb.
05:10  isaacs: for the logs: that command would mean that "\n" would do ":NERDTreeToggle"
05:11  isaacs: where "\" might be set to something different depending on your mapleader variable
05:35  phao: which is a good colorscheme for a xterm white background?
05:38  remyo: phao: Might find something here, http://vimcolorschemetest.googlecode.com/svn/html/index-html.html
05:38  remyo: Personally I don't get a colorscheme in cli vim because I want it to look consistent with my other applications. So I'll let it use the default colors
05:41  phao: thx remyo , helped a lot =)
06:12  hornairs: anyone know why the calls to my plugin's functions might be getting inserted into my files when i hit the mapped keys instead of the output of that function?
06:13  bairui: what do your maps look like?
06:14  hornairs: bairui the vanilla mappings listed on here http://www.vim.org/scripts/script.php?script_id=2620
06:14  hornairs: im very new to vim, thanks for your help
06:16  strull: hornairs: what gives :echo &paste ?
06:17  hornairs: strull sorry what
06:17  bairui: hmm... it seems those maps are lacking the   call   keyword. I could be off base there... I'd have to look at the plugin to see if those <Plug> maps are done right...
06:17  bairui: hornairs: he means:   what does   :echo &paste   say?
06:18  hornairs: a 0 where longform commands are usually listed
06:19  bairui: good
06:19  hornairs: what does that mean?
06:19  bairui: it means you don't have   paste   enabled.
06:19  bairui: I prefer this way to query options:   :set paste?
06:19  bairui: where the   ?   is essential
06:21  hornairs: i see i see
06:21  Raimondi: The instructions are a bit confusing...
06:21  bairui: indeed... and it's a vimball :-/
06:21  hornairs: could you suggest a different completion plugin perhaps?
06:22  Raimondi: But people seem to like it, I'm curious now
06:22  hornairs: the <CR> mapping is totally foobard, every time i hit enter in insert mode i get the code for the mapping and not the output of the code
06:22  Raimondi: hornairs: Can you paste the actual lines where you set the mappings?
06:23  bairui: again... I ask about the   call   keyword - Raimondi? Am I off the planet there? Been AFV too long :(
06:23  bairui: does an   expr   map not need a   call   keyword?
06:23  Raimondi: if there is the <expr> call shouldn't be there
06:23  bairui: thanks
06:23  hornairs: http://vim.pastey.net/142312
06:23  Raimondi: Yep
06:25  Raimondi: That looks ok...
06:25  hornairs: maybe its somethign else in my vimrc?
06:26  Raimondi: Is that the whle vimrc?
06:26  bairui: any other <CR> maps?
06:26  bairui: I assume that isn't the vimrc
06:27  hornairs: no i dont think so
06:27  hornairs: ill pastie the whole thing
06:27  hornairs: thanks for your help folks
06:27  Raimondi: It's ok, I'm broed at home ;)
06:27  bairui: hehe
06:27  Raimondi: bored*
06:27  Rakko: hi guys
06:27  bairui: g'day, Rakko :)
06:27  Raimondi: Hi Rakko
06:27  bairui: g'day, Raimondi, btw :)
06:27  sako: hey  guys, how do i see what a value is set to?
06:28  hornairs: http://vim.pastey.net/142313
06:28  Raimondi: Good day, bairui :)
06:28  bairui: sako   :set name-of-option?   <--- with the ?
06:28  sako: i need to figure out what is causing lines to goto the next line
06:28  sako: when i go over a certain amount of columns
06:28  bairui: probably    textwidth
06:28  sako: found it
06:28  sako: thanks bairui
06:28  bairui: np
06:29  sako: er
06:29  sako: where the heck is it set
06:29  Rakko: Would someone more knowledgeable than me mind downloading http://vimcolorschemetest.googlecode.com/svn/colors/leo.vim , setting it as color scheme, and then typing :echo g:colors_name and tell me what they find?
06:29  sako: its not in my vimrc
06:29  sako: :/
06:29  bairui: sako:    :verbose set tw?
06:30  sako:         Last set from ~/src/dotfiles/vim/ftplugin/python.vim
06:30  sako: argh
06:30  sako: thanks bairui
06:30  bairui: np
06:30  Rakko: For some reason, even though the colorscheme specifies let g:colors_name = "leo256", the name doesn't "stick"
06:30  Rakko: oh, I see it now -- end instead of endif
06:30  bairui: :)
06:31  bairui: Talking to the Code Bear *always* works.
06:31  Rakko: why didn't vim complain about the end keyword?
06:31  Rakko: code bear?
06:31  Raimondi: hornairs: The mapping for <CR> "works" for me, it tries to execute the function.
06:31  hornairs: weird!
06:31  Raimondi: What happens if you set the mapping by hand
06:32  Rakko: bairui: actually that still didn't fix it
06:32  bairui: A stuffed toy that you tell your coding problems to. While explaining it slowly and carefully, you have a moment of sudden realisation as to where the problem is. The Code Bear is a beautiful thing. :)
06:32  hornairs: msut be something in a bundle i guess
06:32  Rakko: ahh
06:32  hornairs: sec
06:32  Rakko: code bear fail :<
06:32  bairui: The Code Bear doesn't fail - only the interpretations of his solemn silence can be wrong. :)
06:32  Raimondi: lol
06:33  Rakko: So... could someone please have a look at that colorscheme and let me know why it doesn't actually set g:colors_name?
06:33  hornairs: Raimondi it works like a dream
06:33  homekevin: Rakko: what's up with the "end"?
06:34  homekevin: Did you decide that's not a problem?
06:34  Rakko: homekevin: it should be "endif"
06:34  Rakko: it's not *the* problem apparently, since removing it didn't fix it
06:34  homekevin: What happens if it's just end though?
06:34  Rakko: same thing
06:34  Rakko: it doesn't set g:colors_name
06:34  Raimondi: hornairs: restart vim and  see what this says:    :verbose imap <CR>
06:34  Rakko: I have a script that depends on g:colors_name being set
06:34  homekevin: Rakko: That happens to be one of the color schemes in my xterm colorscheme bundle, so I've been over it very carefully in the past.
06:35  Rakko: oh yeah?
06:35  homekevin: Rakko: I might have some insight, but it might require reviewing my patches.
06:35  Rakko: try it and see... :echo g:colors_name
06:35  homekevin: Rakko: One thing I can say right away is that the value set for colors_name is wrong. It has to match the file name.
06:36  Rakko: homekevin: yes. I've renamed the file to leo256.vim.
06:36  homekevin: Rakko: OK, I see the problem.
06:36  Rakko: oh??
06:36  homekevin: Give me a second and I'll point you to the info you need.
06:36  Rakko: yay!
06:37  homekevin: http://github.com/KevinGoodsell/vim-xterm-colors/blob/master/README.patches#L78
06:37  homekevin: That link is for Rakko
06:37  homekevin: Rakko: See the last sentence of the section "Bug fix: 'colors_name' Not Set Correctly"
06:38  Rakko: cool. I have patched a few of the top 100 schemes myself (but haven't submitted anything to the authors)
06:38  Rakko: ahhh, hi clear
06:38  hornairs: Raimondi http://vim.pastey.net/142314, before and after setting it manually
06:40  Rakko: homekevin: you're a genius. ... you didn't patch end -> endif, I see.
06:40  Raimondi: hornairs: It seems to me that endwise.vim is trying to be smart and append its mapping to to the existing one, but there's no way to be that smart with the current state of Vim, so it brakes on <exrp> mappings.
06:41  homekevin: Rakko: No, I missed that. My patches mostly came from seeing what was broken when the scheme was loaded, so if the 'end' breaks nothing I wouldn't have noticed.
06:41  Raimondi: I supose you'll have to choose and let the endwise.vim maintainer know about the problem.
06:41  hornairs: Raimondi thanks so much for your help
06:41  Raimondi: np
06:41  Rakko: I wish github had a button for directly downloading a file
06:41  Rakko: preferably from the directory listing pages
06:42  homekevin: Rakko: The "raw" button on the file page does that. Sort of.
06:42  Rakko: I know
06:42  Rakko: but it's small and you still have to either right-click it or go to file>save as
06:43  homekevin: It's not a Content-Disposition=attachment link, right..
06:43  Rakko: and it saved it as leo.vim.diff.txt
06:43  homekevin: But that would be annoying for when you just want to view it.
06:43  Rakko: my patch-fu is failing... it's just patch -p1 leo.vim.diff.txt, right?
06:43  Rakko: when I type that, it just hangs
06:43  homekevin: Rakko: I think you need to supply the patch on stdin
06:43  homekevin: patch -p1 < patchname
06:44  Rakko: oh yeah. thanks. I should have realized that, since it hung without any output.
06:44  hornairs: tpope you there?
06:45  homekevin: Rakko: You probably don't want the crap at the end of that patch, though. Or at the beginning. ;)
06:45  Rakko: Anyone log this channel? I'm trying to remember who suggested a snippet plugin to me a few nights ago. He/she said it was good with SuperTab. It wasn't snipmate or snippetsEmu.
06:46  Raimondi: UltiSnip?
06:46  hornairs: tpope endwise.vim collides with neocomplcache (http://www.vim.org/scripts/script.php?script_id=2620). i dont quite understand the details of how but Raimondi could probably explain them to you if need be
06:46  Raimondi: XPtemplate?
06:46  Rakko: no
06:46  Rakko: UltiSnip, yes. Thanks.
06:46  Rakko: Anyone have an opinion on it?
06:46  Rakko: homekevin: why not?
06:47  Rakko: homekevin: the extra highlighting at the end? what's its purpose?
06:47  homekevin: Rakko: Just to be clear, the first and last hunks are very specific to the script I run after applying the patch. Only the middle two hunks are actually to fix breakage in the original version.
06:47  homekevin: Rakko: The stuff at the end is explicitly listing default values so my script can convert them.
06:48  Rakko: oh, ok.
06:48  homekevin: Rakko: My script updates all the "highlight" lines, basically. Implicit defaults don't get handled.
06:48  Raimondi: hornairs: I think it would be better if you create an issu here: http://github.com/tpope/vim-endwise/issues
06:48 --- fedesilva_ is now known as fedesilva
06:48  hornairs: i was hoping he'd be there but ill go ahead and do that
06:49  Rakko: homekevin: I've noticed that sometimes certain settings of one scheme are retained when another is activated. Does your script fix that?
06:50  homekevin: Rakko: No, but my patches address that, at least in the cases where I noticed it.
06:50  homekevin: Rakko: For example, a few schemes add autocommands that never go away when the scheme is unloaded.
06:51  Rakko: autocmds? omg
06:51  homekevin: Rakko: Others change settings, like 'cursorline'.
06:51  Rakko: yeah, cursorline I've noticed
06:51  homekevin: I don't know why you'd want to override the settings the user has specifically set.
06:51  homekevin: It's annoying.
06:52  homekevin: Like 'hidden' being used it help files.
06:52  Rakko: hidden?
06:52  homekevin: I think that's the setting.
06:53  Rakko: conceallevel maybe
06:53  Rakko: you might want to add http://vim.wikia.com/wiki/VimTip341 to your scripts
06:53  Rakko: I've made some changes of my own to it
06:54  homekevin: Oh, that must be it.
06:56  homekevin: Yeah, 'hidden' is pretty different from 'conceallevel'
06:58 --- MikhX_ is now known as MikhX
07:01  Rakko: time for sleep, methinks
07:02  homekevin: I really dislike the concealed text feature.
07:04  Rakko: me too
07:09  homekevin: Ah, of course. I just figured out how to stop concealing text in help files.
07:09  homekevin: I don't know why I didn't think of it before.
07:10  homekevin: au FileType help set cole=0
08:09  scp1: I'm trying to remap ^d to ^w. inoremap <C-D> <C-W> doesn't work. What's wrong?
08:16  Raimondi: scp1: What's the output of  :verbose imap <C-D>
08:17  scp1: raimondi, i  <C-D>       * <C-W>
08:18  scp1: but... I just wanted to switch between splits in a more convient way. I used regular maps instead
08:19  Raimondi: scp1: That mapping doesn't switch windows
08:20  scp1: no. but ^d+{h,j,k,l} should?
08:21  Raimondi: THat's a mapping for insert mode
08:21  Raimondi: inoremap
08:21  scp1: doh
08:22  scp1: thank you :)
08:22  Raimondi: np :)
--- Log closed Mon Nov 01 09:01:47 2010
--- Log opened Mon Nov 01 09:01:56 2010
09:01 --- Users 543 nicks [0 ops, 0 halfops, 0 voices, 543 normal]
09:03 --- Channel #vim was synced in 73 seconds
09:19 --- silex is now known as Silex
09:36  bairui: ManDay: without really having done it myself... I can't see why not. You should be able to play with   matchpairs   to control what is considered to be a well, match pair. As for highlighting... you should be able to specify region rules to control start and end blocks as you see fit...  That's a pretty wishy-washy answer, sorry... :-/
10:11  kaushal: hi
10:11  Raimondi: Hi kaushal
10:11  kaushal: I have a file which contains 5 lacs line and i need the last 1 lac line
10:11  kaushal: Any clue ?
10:11  kaushal: Its growing too
10:11  kaushal: Raimondi: Hi
10:12  Raimondi: What do you want to do? trim the first 4 lacs?
10:12  kaushal: yes
10:12  Raimondi: How much is a lac in numbers?
10:12  Raimondi: 100,00?
10:13  Raimondi: 100,000
10:13  kaushal: yes
10:13  kaushal: 100,000
10:13  Silex: where's the vim bug report page?
10:13  Raimondi: Delete the the first 4 lacs with  :1,400000d
10:13  Silex: the sf project page says I'm supposed to mail teh admins?!
10:13  Raimondi: Silex: No such thing
10:13  Silex: Oo
10:14  Silex: kinda scary, okay I'll email the admins..
10:14  kaushal: Raimondi: I cannot do it
10:14  kaushal: since the file size is 35GB :(
10:14  Raimondi: Silex: :h bugs  or post in the vim_dev list
10:14  Silex: kaushal: tail -n 100000 > last.txt ?
10:15  Raimondi: kaushal: tail?
10:15  Raimondi: Yeah :)
10:15  oadams: what are lacs?
10:16  kaushal: Silex: Thanks
10:16  Silex: yw
10:16  the_isz: lines af code?
10:16  the_isz: :P
10:17  Evanlec: anyone know of a colorscheme that doesn't cause permanent damage to ones cornea when using vim -d ?
10:18  Evanlec: mm, here's a good example: http://img214.imageshack.us/img214/259/vimdiffpb2.png
10:18  porken: does vim have autocompletion?
10:19  Evanlec: porken: absolutely
10:19  porken: project control?
10:19  Silex: porken: yes. But please define what autocompletion means for you
10:19  porken: intelli sense
10:19  Silex: porken: yes, but please define what...
10:20  Silex: <Up>yyp
10:20  porken: I know nothing about vim sorry
10:20  porken: but I want to give it a try
10:21  Silex: Give it a try then. Keep in mind you won't have all the fancy stuffs out of the box
10:21  Silex: and that you have to stop thinking like in other IDEs
10:21  kaushal: Silex: basically i need the existing file catalina.out file to just retain 100,000 and delete the rest of the lines ?
10:21  porken: it should give me a list of possible options if I type first N letters of a variable
10:22  Silex: kaushal: cp catalina.out catalina.bck; tail -n 100000 catalina.out > foo.tmp; mv foo.tmp catalina.out; rm foo.tmp
10:22  Silex: porken: out of the box CTRL+n does that
10:23  Silex: iirc
10:23  porken: and can you have a file list displayed that belongs to a project??
10:23  Silex: you can have *anything*
10:23  Silex: it's vim, just configure it the way you want
10:24  Silex: that will require a good 6 months of your time tho
10:24  porken: :) I should try
10:24  kaushal: Silex: there is a slight issue there
10:24  kaushal: I am running out of disk space
10:25  Silex: kaushal: how much free disk space do you have?
10:26  Silex: enough to create a new file holding the last 100'000 lines?
10:26  Silex: if not, I'd probably use sed with the inplace option
10:26  Silex: or write my own C/Ruby code doing it
10:28  kaushal: Silex: Any snippet of code ?
10:28  Silex: porken: what language are you coding in?
10:28  porken: c/c++
10:28  porken: mostly C
10:33  Evanlec: is there a way to run vim with sudo writing power, without actually having to launch vim as the root user (and have none of my .vimrc settings etc) ?
10:33  porken: sudo vim
10:33  Silex: porken: okay, there's the gccsense plugin that does autocompletion like in vc++/eclipse
10:33  porken: ---probably it will fail
10:34  porken: Silex, cool. autocomplete is all I need
10:35  Silex: porken: only works on *nix atm
10:35  minh: Evanlec: :w !sudo tee % > /dev/null
10:35  porken: it is ok I am on linux
10:35  Silex: porken: if you write *simple* c++ then you can use a ctags solution for autocompletion
10:36  porken: thanks :D
10:37  Silex: porken: start out following a good vim tutorial, then try out the gccsense plugin with NERDTree for your basic setup
10:38  Silex: porken: then I suggest you explore amazing plugins like snipmate or FuzzyFinder
10:38  Silex:  porken: I moved from vc++ to vim FYI
10:39  porken: :)
10:39  Silex: there are stuffs that are missing from classic IDES, but all in all vim adds so much to the table compared to them than the one or two things that miss are quickly forgotten
10:40  jink: Things missing?  What things? :D
10:40  porken: lol arch has lots of plugins for vim "pacman -Ss vim"
10:45  Silex: porken: consider http://www.vim.org/scripts/script.php?script_id=2905 or http://www.vim.org/scripts/script.php?script_id=2332 to install your plugins
10:48  Evanlec: minh: perhaps i couuld make a shortcut for that?
10:49  Evanlec: minh: damnit, problem is im running a script that goes through to compare system files with newer upgraded ones, and if i dont run that with sudo it skips the ones it think i cant modify
10:52  Silex: kaushal: sed -i '1,100d' filename
10:52  Silex: replace 100 by 300000 or whatever
10:53  Silex: be cautious, it's inplace. No 2nd try
--- Log closed Mon Nov 01 11:10:22 2010
--- Log opened Mon Nov 01 11:11:06 2010
11:11 --- Users 562 nicks [0 ops, 0 halfops, 0 voices, 562 normal]
11:12 --- Channel #vim was synced in 77 seconds
11:15  spiiph: d0ugal, :map <F1> Otry:<Esc>j==oexcept:<Esc>
11:15  spiiph: That could be made smarter too
11:16  d0ugal: spiiph: Ah cool - that's a good start - I'll roll with that and see how I get on
11:17  spiiph: I.e., you could make a visual map that does '[Otry:<Esc>']oexcept:<Esc>
11:20  functor: Does anyone know how to get mouse=a working over screen?
11:21  spiiph: What terminal are you using?
11:22  functor: spiiph: putty
11:23  spiiph: I don't use the mouse myself, but try using the putty-256color terminfo for your $TERM outside of screen, and screen-256color inside screen. See if that helps.
11:23  functor: ok
11:28  functor: spiiph: didn't work, unless I did it wrong... It works without screen, and it works for my friend who has seemingly identical RC and setup...
11:28  functor: hmm
11:29  FernandoBasso: I see some ~/W/r/c/my_file in vim tabs.
11:29  functor: oh right, I didnt notice this
11:29  functor: zsh: can't find terminal definition for putty-256color
11:29  FernandoBasso: Why is that?
11:30  mhi^: FernandoBasso: What?
11:31  FernandoBasso: mhi^: In  the tab names. I see ~/W/r/c/my-real-filename-here.
11:32  FernandoBasso: It is always the initial letters of folder names, it seems.
11:32  functor: nm, spiiph it seems to be working after I restarted putty
11:33  functor: actually, everything but the scroll
11:34  mhi^: FernandoBasso: :h 'tabline'
11:34  functor: oh well
11:35  FernandoBasso: mhi^: Reading. Thanks.
12:19 --- kifkif is now known as aleray
--- Log closed Mon Nov 01 13:04:22 2010
--- Log opened Mon Nov 01 13:17:26 2010
13:17 --- Users 567 nicks [0 ops, 0 halfops, 0 voices, 567 normal]
13:18 --- Channel #vim was synced in 73 seconds
13:47  Epeli: How could I select everything up to some character?
13:48  Epeli: For example: foo(one,<cursor> two, three)
13:49  Epeli: I would like to select " two, three"
13:51  rson: vt)
13:52  rson: Visually select Til )
13:53  Epeli: cool thanks
13:53  Epeli: rson:  how about to left?
13:54  Epeli: hmm, T seem to do it
13:57  rson: yeah, T.  You'll also be interested in f and F.
13:58  Silex: how can I specify horizontal offsets to searches? e.g v/foo doens't select the foo
13:58  rson: and to repeat the commands ; and ,
13:58  Silex: and +1 goes one line under
13:59  Silex: ah, maybe +3l
13:59  rson: v/foo/e
14:01  Silex: oooh, e/b, cool! thanks
14:01  rson: np
14:16  Silex: suppose you have string 'Foo keke X keke Bar' and cursor is on X, and you want to select 'keke X keke'... do you go like v?Foo<CR>o/Bar ?
14:16  Silex: can't you use a range for v?
14:17  Silex: or do you first use ?Foo to go where you want to start AND THEN just use a forward "capture" ?
--- Log closed Mon Nov 01 14:56:13 2010
--- Log opened Mon Nov 01 15:01:35 2010
15:01 --- Users 566 nicks [0 ops, 0 halfops, 0 voices, 566 normal]
15:02  paolino: I want to make a mapping that call them all ignoring errors
15:02  unop: help <silent>
15:02 --- Channel #vim was synced in 75 seconds
15:06  paolino: unop it still stops on errors
15:06  paolino: E486: Expression not found
15:07  paolino: and dosn't execute the rest
15:08 --- DestinyAwaits|Aw is now known as DestinyAwaits
15:38  nroc: hey, i'm trying to use matchlist() to match all instances of a pattern in a string but it appears to only return the first match
15:39  nroc: i'm considering bodging something together using matchstr and looping passing in an offset, but was hoping there's a better way
15:54  jacksonje: is there a way to block select the end of each word in line, when the words have jagged endings and are not at the end of each line?
15:55  paradigm: I'm curious how to do this as well.  I've been adding whitespace at the end of everything, block selecting and doing whatever, then removing the whitespace - hardly an optimum solutino
16:00  Raging_Hog: jacksonje: I'm not certain what you mean. Anyway, have you tried   :set virtualedit=all
16:01  paradigm: virtualedit=all takes care of it, thanks
16:01 --- khussein_ is now known as khussein
16:01  paradigm: virtualedit=block seems to be what I need
16:01  paradigm: <3
16:02  caio: http://github.com/caioariede/vim.js I am looking for contributors
16:03  paradigm: jacksonje: if you don't want to use virtualedit, I think you can just hit $ to go to end of line throughout the whole block, evne if they're jagged ends
16:03  jacksonje: paradigm: the point was that it isn't at the end of the line
16:03  paradigm: ooooh
16:03  paradigm: nevermind
16:03  paradigm: my bad
16:03  jacksonje: I just want to select the last character of a set of words that are of varying lengths in the middle of a set of text
16:04  jacksonje: and only the last character
16:04  paradigm: you could probably make a q-record or script to run through all the characters you want copying them elsewhere, then block-selecting that
16:05  jacksonje: well for me its faster to just manually edit the lines than to figure out how to do that
16:05  paradigm: hmm
16:06  jacksonje: I was hoping there would be something simple like the ctrl-v $ for the end of the line, ah well
16:06  iaj: Ive got a problem - can I somehow have an autocommand that's working if Im working on a java file in a specific folder?
16:09  jacksonje: is there a wayt to move the cursor to the first or last row of a document without changing the selected column?
16:11  sukima: jacksonje: I think you'll need a bit of scripting thinking about it now...
16:12  estragib: there *is* a setting to not change the column, but you won't want that on all the time
16:13  estragib: :h 'startofline'
--- Log closed Mon Nov 01 16:20:35 2010
--- Log opened Mon Nov 01 16:31:01 2010
16:31 --- Users 577 nicks [0 ops, 0 halfops, 0 voices, 577 normal]
16:31  nick_h: why is the :normal required before the "ggVG=" ?
16:31  mhi^: it's for using 'normal mode' keys in 'ex mode'
16:31  unop: because ggVG= is a normal mode command sequence - not an ex command
16:31  Pendrag0n: I use screen ALLOT ||  sometimes I have 12 screens open and in each one vim with 4 or 5 or more split wins (open files) ||  I just hit CTRL+A,C for a new window and tried to edit a file and found it was already open || QUESTION: is there a faster way of knowing in WHICH screen it is open in than CTRL+A,N over and over looking and reading each and every one?
16:32  Pendrag0n: I wish I could change the VIM message FROM: Swap file "include/.functions.inc.swp" already exists! [O]pen Read-Only, (E)dit anyway, (R)ecover, (Q)uit, (A)bort: TO: "include/.functions.inc.swp" already exists! IN screen: NAME HERE   like a slick vim hack I have dozens of vim addons and tricks already added, I know somebody must have done this or know how...
16:32 --- Channel #vim was synced in 77 seconds
16:32  sukima: nick_h: because ggVG= are command you use in normal mode however when vim executes a custom command it running in the command mode you need the normal command to tall vim to use the following in normal mode
16:32  Pendrag0n: Perhaps I could some how get the prosses id's to show up in my screen names, anyone know how?
16:34  nick_h: mhi^, unop, sukima: that makes sense. thanks. do the docs mention that commands defined by :com! are run in command mode? i didn't see it in there
16:34  unop: nick_h, did you read :help :normal ??
16:35  Pendrag0n: Guys, I have to run for a lunch meeting, but I really REALLY could use this, if any of you know or figure it out, please PM me the answer
16:35  unop: if not read that first, and then we'll answer your questions
16:35  nick_h: unop: over the years, but not recently  =P
16:35 * nick_h reads :he :norm
16:37  unop: Does <mapleader>r  in project.vim actually do a refresh?? I find it not to be picking up new files and directories created after the project is initially created? Same with \R ?   Is this normal?
16:37  bosie: i don't quite get the logic of u
16:37  bosie: what does it see as undo?
16:37  bosie: sometimes a whole paragraph is gone...
16:38  mhi^: because you didn't save
16:38  bosie: mhi^: me?
16:38  mhi^: yea
16:38  bosie: mhi^: of course not, i typed ;)
16:38  Pendrag0n: everyone: what is the difference in CTRL+r and CTRL+R they both seem to "re-do" ?
16:39  bosie: Pendrag0n: are you mocking me? ;)
16:39  bosie: mhi^: so what? it does not seem to remove till the last savepoint
16:40  Pendrag0n: no, I was about to answer your question, and came to one of my own, not mocking you at all
16:41  estragib: bosie: every insert action counts as one undo step. you can add undo points yourself. see :h undo-blocks
16:41  mhi^: bosie: Did you read the help pages? If not: :h undo.txt
16:41 --- Pendrag0n is now known as Pendragon_lunch_
16:41  bosie: mhi^: i read :h u but that didn't really give away too much for me I am afraid
16:41  mhi^: undo.txt gives away everything then ;)
16:42  mhi^: also check :h undo-branches
16:42  bosie: estragib: oh
16:42  bosie: let me check undo.txt then
16:43  mhi^: bosie: that's what I was searching: :h usr_32.txt
16:47  jroberts235: jacksonje:  not sure what your end goal is but you can select the end of every line using "$".  ex:    %s/$/EOF/
16:52  jacksonje: sigh
16:52  jacksonje: I'm not working at the end of the line :()
--- Log closed Mon Nov 01 16:58:30 2010
--- Log opened Mon Nov 01 16:58:55 2010
16:58 --- Users 585 nicks [0 ops, 0 halfops, 0 voices, 585 normal]
16:59  jacksonje: I'm guessing based on the structure of the file there really isn't an option but to do it manually
16:59  jroberts235: tab space until it's all columnar, then uses a macro
16:59  mhi^: Well, you use a count and a motion to jump to the right column. Second column would be something like: 02ea'<ESC>j
16:59 --- Channel #vim was synced in 68 seconds
17:00  mhi^: Ah, you want to add it to EACH word in the line?
17:00  jacksonje: no
17:00  jacksonje: its just that in the column, the contents may have one or more words
17:01  jacksonje: and I need a ' right smack dab at the end of each "string" in the column
17:01 --- second is now known as sec^nd
17:01  Silex: jacksonje: I suggest you pastebin your input file and the desired output file
17:02  Silex: just a few lines, so we get the differences between the lines
17:02  mhi^: Yes, I'm a bit confused about how a column can have several words. How is it delimited?
17:02  jacksonje: fixed width columns
17:02  jacksonje: unfortunately I can't share the data
17:02  Silex: pastebin an example then
17:03  Silex: something filled with foos and bars
17:03  Silex: it'd not take long for you to make a testcase
17:03  ceej: can you make vim and omni auto completion on by default?
17:05  jacksonje: example data: http://pastebin.com/ddphFG6r
17:06  Silex: ok, and what do you want as output?
17:06  Silex: 'Lorem Ipsum Facto' etc ?
17:06  mhi^: ceej: ^X^O (omni-completion) works based on a 'omnifunc' set by filetype plugins. So "filetype plugin indent on" in your vimrc should be enough.
17:07  jacksonje: example output http://pastebin.com/Yer9sBhH
17:07  Silex: jacksonje: I'd go with a macro that uses a regex
17:07  Silex: search till you meet a number
17:07  Silex: (I assume there's no number in the word list before)
17:07  jacksonje: there could be
17:08  Silex: well, the first quote is easy to insert
17:08  Silex: gotta figure the ending quote
17:08  jacksonje: yeah, I have that down :)
17:08  ceej: hmmm didn't seem to work....
17:08  Silex: I think I know!
17:08  jacksonje: that last quote is the only problem I have
17:09  Silex: basically, 0i'<Esc> for teh first quote
17:09  Silex: then the last quote
17:09  Silex: you go to N<Right>
17:09  Silex: then you press b
17:09  Silex: then i'<Esc>
17:09  mhi^: Is the width between the first and second column always > 1 space?
17:09  Silex: N being the fixed width for the 2nd column
17:10  Silex: you get it?
17:10  jacksonje: mhi^: nope, the longest one will have only 1 space
17:10  Silex: I mean, if the 2nd column starts at 23th chars
17:10  Silex: you go 023lbi'<Esc>
17:10  jacksonje: I'll try silex's
17:11  Silex: just use the opposite of 'w' basically
17:11  Silex: wait, I don't mean 'b'
17:11  jroberts235: have you tried ctrl-v ?
17:11  Silex: jacksonje: ge
17:12  mhi^: Silex: you can jump to absolute column sizes with | so not 023l but 23|
17:12  Silex: so basically, 23lgea"<Esc>
17:12  Silex: mhi^: 23|gea"<Esc> then
17:12  Silex: :)
17:13  jacksonje: ok, I think I understand that, that should work
17:14  Silex: and yeah, in block mode there's probably something to add at the end of "line"
17:16  Janni: Hello.
17:16  mhi^: Silex: Where's the end of line in block mode? :>
17:17  mhi^: Hey, Janni.
17:17  Janni: Can I make vim display tabs as, say 3 spaces? Emphasis is on _display_, no conversion. And importantly: I want 3 spaces independently of the position the tab occurs in.
17:17  Silex: mhi^: hum :)
17:17  mehwork: when i type an arrow key in insert mode it flips out and types like <tab>D<enter>
17:18  Janni: I suppose there might be something like a "display map". Show "a" as "b".
17:18  mehwork: only seems to be happenign in gnu screen and randomly. might be screen's fault. i know arrow keys are evil in vim but i've never had this happen
17:19  mhi^: Janni: I'm not sure if I got your "3 spaces indepedently of the position" right, but try: :set noet ts=3
17:20  mhi^: tab will always jump for 3 spaces then
17:21 --- Silex is now known as silex
17:21  Janni: mhi^: No, try to type one space and then TAB. It will only jump two spaces then.
17:21  Janni: If you type two spaces first, it will only jump one space...
17:22  Janni: That's exactly the behaviour I don't want (I know, that's what it's supposed to do)
17:24  LeoNerd: Dear vim: Please never reindent my lines -ever- in HTML files, no matter what I type...    How do I make it do this?
17:25  spiiph: :set noai nosi nocin inde=
17:25  spiiph: :setl even
17:25  spiiph: For :au FileType html
17:30  paradigm: Janni: you could probably imap the tab key to 3<space>
17:30  paradigm: Janni: imap <tab> <space><space><space>
17:31  paradigm: that's not technically what you're asking, but it should come close to the same effect
17:33  withanx: how do I set the NERDTreeWinPos option for NERDTree?
17:33  silasdavis: with the first '<' selected in some statement <of words>
17:34  silasdavis: how do I delete the pair of matching brackets without removing the contained string
17:34  silasdavis: ?
17:35  withanx: nm got it.
17:37  mhi^: silasdavis: use surround.vim and then somewhere between the brackets: ds( or ds)
17:38  ttwhy: Hi, is vim able to format sourcecode (like eclipse CONTR+SHIFT-F) ?
17:39  jroberts235: http://www.vim-fu.com/auto-formatting/
17:39  ttwhy: thanks!
17:40  mhi^: ttwhy: put "filetype plugin indent on" in your vimrc, open a source code file and do "gg=G"
17:40  thiana: Is there a way to have heirarchies of dictionaries? ie, english > english-tech > english-oo. So if the word is not found in -oo, it checks -tech, then the core? If words are added they would be added to -oo.
17:45  ManDay: I want to know what I have to put in my vimrc so GVIM starts with a certain geometry. I type :help geometry but get to the wrong help page. How can I see further help pages which relate to geometry?
17:46  kongo: ManDay: see :h 'lines and :h 'columns
17:47  ManDay: ah!
17:47  ManDay: thanks
17:48  ManDay: just another question (same problem, :h color takes me to the wrong page). How can I override the background color but otherwise keep the scheme intact?
17:48  ManDay: (gvim again, if that matters)
17:51  mhi^: ManDay: :h :hi
17:51  mhi^: ManDay: :hi normal guibg #ff0000
--- Log closed Mon Nov 01 17:57:23 2010
--- Log opened Mon Nov 01 17:58:00 2010
17:58 --- Users 590 nicks [0 ops, 0 halfops, 0 voices, 590 normal]
17:58  graywh: silasdavis, \w isn't whitespace
17:58 --- Channel #vim was synced in 65 seconds
17:59  graywh: it's word character
17:59  ManDay: why does :h :hi not lead me to "highlight-groups"?
17:59  darkferret9: why does the Vim 7.3 sh syntax file highlight valid bash syntax as errors?
17:59  ManDay: it leads me to "Highlight-names" among which there is no "normal"
17:59  darkferret9: Is it because sh is sh and bash is not exactly sh?
18:00  graywh: darkferret9, well, ft=sh for bash, too
18:00  darkferret9: it highlights this as an error: local npath="${opath%%$item}"
18:00  withanx: how would I map 2 commands to an F key?
18:00  silasdavis: okay /^\s*\/\/.*$/ highlights what I want
18:00  silasdavis: How can I yank it?
18:00  graywh: darkferret9, :h ft-bash-syntax
18:02  ManDay: :highlight normal guibg=#FF0000  only draws a red frame arround the editor
18:02  ManDay: the main background remains unchanged
18:03  LogicHoleFlaw: Hi folks. Is there a way to get my cursor to sit on the left side of a tab character when displayed as spaces? Currently it sits on the right-hand side of the blank space.
18:04  darkferret9: graywh: ok, how do I set g:is_bash in a modeline?
18:05  graywh: darkferret9, you can't, you set a proper shebang
18:05  darkferret9: :(
18:05  darkferret9: that is not cool
18:05  graywh: only options are allowed in modelines
18:06  ManDay: :highlight normal guibg=#FF0000  only draws a red frame arround the editor
18:06  ManDay: but when i use :highlight default [...] it works - why?
18:06  graywh: darkferret9, you should be able to just put "bash" in a comment in line 1
18:06  darkferret9: graywh: have you tried it?
18:07  ManDay: can anyone help?
18:07  graywh: darkferret9, yes
18:08  darkferret9: graywh: it doesn't work for me, what do you use?
18:08  mhi^: ManDay: I only have vim, not gvim here, so I can't test it. :hi normal works with terminal vim, but when default works for you.. use it.
18:08  graywh: darkferret9, #bash
18:08  darkferret9: ok, thanks
18:08  graywh: ft will still be sh
18:09  ManDay: mhi^: i was wrong about default
18:10  ManDay: the problem still is that the Normal group only affects a border arround the main area
18:10  ManDay: no idea why
18:11  darkferret9: graywh: ok, I put #bash on line 1, and "# vim: nu ft=sh" on the last line. The file type is not detected as bash...
18:11  darkferret9: I still don't get it...
18:11  mhi^: ManDay: does it paint the background after ":hi clear | hi normal guibg=#ff0000" ?
18:12  darkferret9: using let g:is_bash=1 doesn't help, either
18:12  graywh: darkferret9, what is ft after opening the file?
18:12  darkferret9: graywh: sh
18:12  darkferret9: graywh: without the modeline, it is conf
18:12  graywh: yeah
18:12  graywh: that is weird
18:13  nroc: hey, any vimscript match*() equivalent that'll return all pattern matches in a string?
18:13  graywh: ah, i know why
18:13  ManDay: mhi^: yes, and when I do THAT it does not color the border (so the border stays red and the rest inside becomes green)!!!
18:13  ManDay: mhi^: sorry my bad
18:13  ManDay: in this case it colors the border too
18:14  graywh: darkferret9, the examining of line 1 happens from autocmds in $VIMRUNTIME/filetype.vim
18:14  darkferret9: graywh: yes, and?
18:14  graywh: using the modeline bypasses that
18:14  darkferret9: oh...
18:14  ManDay: mhi^: to be exact, only the lines that have text in them are affected - thats what i called the "border"
18:15  mhi^: ah
18:15  ManDay: the area where there is no text remains unaffected by   :hi normal guibg=#FF0000
18:15  graywh: ManDay, normal is for normal text
18:15  graywh: you want nontext
18:15  ManDay: ah!
18:15  ManDay: thanks
18:15  mhi^: no text is everything below "EOF", right? So.. :hi NonText..
18:16  mhi^: that's why you were supposed to look through ":h highlight-groups" ;)
18:16  ManDay: i did
18:16  ManDay: i didnt see nontext
18:16  ManDay: works now, thanks!
18:17  ManDay: ah
18:17  graywh: darkferret9, you could make a ~/.vim/syntax/bash.sh that does let b:is_bash = 1 and set filetype=sh
18:17  graywh: then use ft=bash in your modeline
18:17  ManDay: no i did see it but i thought it would only be the color of the ~ and @-chars because thats what it said in the help
18:17  ManDay: not the whole lines
18:17  mhi^: ManDay: Well, there's always a foreground and a background. Displayed characters are foreground, the rest background.
18:18  ManDay: yes, but...
18:18  graywh: darkferret9, b:is_bash
18:18  ManDay: i thought it would only affect the characters (and the background of them) - not the rest of the line
18:18  mhi^: Ah, I see :>
18:19  ManDay: cold black tea is disgusting
18:19  ManDay: i shouldnt forget everything else over vim
18:20  mhi^: Hah, that can happen. Especially in "the beginnings". It's so easy to play around ;)
18:20  darkferret9: graywh: ok, well, what is this a:name I see in the Shell Script section in $VIMRUNTIME/filetype.vim?
18:20  graywh: darkferret9, a: is for function arguments
18:22  darkferret9: graywh: ok, so, I have a file with #!/bin/bash at the beginning of it, and yet when I load it, g:is_bash is not set, and yet there is no modeline in that file
18:23  darkferret9: come to think of it, not even loading ~/.bashrc sets g:is_bash...
18:24  darkferret9: graywh: oh, b:is_bash = 1
18:24  graywh: darkferret9, no, b/c that's a global variable
18:25  graywh: right
18:26  darkferret9: why make a ~/.vim/syntax/bash.sh file when you could make a ~/.vim/syntax/bash.vim file?
18:26  graywh: that's what i menat
18:26  graywh: *meant
18:26  darkferret9: I don't want all sh scripts to be recognized as bash scripts
18:27  darkferret9: I want a new filetype of bash instead
18:30 --- daniel_ is now known as daniel
18:38  darkferret9: graywh: I've got it working now. My ~/.vim/syntax/bash.vim file unlets b:is_sh and/or b:is_kornshell if they exist, then sets b:is_bash and filetype=sh
18:39  graywh: darkferret9, nice
18:40  iaj: can I somehow have an autocommand that's working if Im working on a .java file in a specific folder?
19:00 --- sacho_ is now known as sacho
19:01  isaacs: hey, i notice when i do :! to enter a command at the shell, it doesn't have my aliases and such.  is there a way to tell vim to source the .bashrc or .profile or whatever?
19:02  emanu: Anybody have a good recommendation for a "reference sheet"? I'd like to be able to hit a keystroke and get a modifiable list of shortcuts I'm learning (either from within vim or on an os-wide [osx] level). Any suggestions?
19:03  fow: isaacs, not in any straight forward way
19:03  fow: emanu, create a copy of :h index.txt  " and then create a map that opens your copy or something like that
19:04  isaacs: fow: does it spawn a brand new shell for each command or something?
19:04  isaacs: fow: it'd be nice if there was a way to make it spawn a child of my existing shell.
19:04  fow: isaacs, I believe it's basically /bin/sh -c 'whatever'
19:04  emanu: fow: the only problem is that :h splits the window. I want to full-screen it, read it, then close it
19:04  fow: isaacs, like :sh ?
19:04  isaacs: fow: it's definitely bash
19:04  isaacs: fow: but yeah
19:05  isaacs: :!echo $0 outputs "/bin/bash"
19:05  fow: isaacs, /bin/sh is usually/always a symlink, often/almost always to bash on Linux systems
19:05  isaacs: fow: right, but then the $0 would be /bin/sh
19:05  fow: isaacs, oh, I was wrong. :! uses the 'shell' vim option
19:05  rson: fow: beat me to it
19:06  isaacs: fow: ok...
19:06  rson: isaacs: try changing your shell to bash -l
19:06  fow: isaacs, apparently you can set 'shellcmdflag' to "-ic" and that should let you use aliases
19:06  rson: or whatever flag is login shell
19:06  isaacs: interesting..
19:06  isaacs: :shell actually spits me into a "normal" shell
19:06  tmr: isaacs, aliases are disabled in non-interactive shells by default.
19:06  isaacs: tmr: yeah, i guess what i want is for vim's shell to act like it's interactive.
19:07  fow: Rather, most people put aliases in their bashrc, which isn't source for non-interactive shells
19:08  isaacs: fow: rightright
19:08  isaacs: if it's $shell -c "cmd", then that makes sense.
19:09  fow: emanu, I'm not sure what exactly it is you want
19:09  isaacs: and i certainly don't want to put all my aliases in a place where non-interactive shells (ie, git, rsync, etc.) would have to load them
19:09  fow: Did this line get through? <fow> isaacs, apparently you can set 'shellcmdflag' to "-ic" and that should let you use aliases
19:09  isaacs: i just want vim to pretend to be "interactive", since i'm actually sitting there entering commands one by one.
19:09  isaacs: fow: yeah, i'm setting that, but i'm not seeing it make a difference...
19:10  isaacs: seems like when i do :set shellcmdflag="-ic", then it still doesn't actually set it
19:10  fow: oh, you want :set shellcmdflag=-ic
19:10  graywh: 'shellcmdflag' is for :! and !, not :shell
19:10  emanu: fow: I tend to split my window into 6 smaller buffers, so my :help lookups tend to split to 1/12th of the screen real estate. I'd like a shortcut that will show my shortcuts over the entire window, despite my screen splitting so I can read it and then close it and continue working
19:12  fow: emanu, maybe use a tab, like :tabe | h index.txt | only
19:12  graywh: :tab help
19:12  isaacs: fow: that's kinda weird... now it actually stops the vim job when i do :!ls
19:13  fow: even better
19:14  isaacs: fow: but some shell commands don't pause vim
19:14  isaacs: very strange..
19:14 * fow shrugs
19:15  isaacs: hm... ok... so, it seems like ! does: ${shell} ${shellcmdflag} ${whatever you entered}
19:15  emanu: graywh: fow: Thanks guys, that does the trick. where do I find this index.txt though?
19:15  mikebling: when I leave vim after using the :start ex command it exits with a status of 1 for some reason
19:16  mikebling: any idea what that's about?
19:16  Pendragon_lunch_: isaacs: in screen mode, vim freezes with CTRL+s, it took me forever to figure out CTRL+q unfreezes
19:26  mikebling: eg #vim +start followed by echo $? is always a 1
19:27  emanu: fow: So I've done: "map <leader>? :tabe ~/lib/vim/shortcuts.txt". Is there a way to have the same keystroke close this file?
19:27  fow: That doesn't happen here
19:28  emanu: fow: was that for me?
19:28  graywh: emanu, :au BufRead ~/lib/vim/shortcuts.txt map <leader>? :x<CR>
19:28  graywh: or something like it
19:28  strull: better use lmap here
19:29  emanu: I don't follow...
19:30  fow: What I said was for mikebling
19:32  mikebling: even weirder /usr/bin/vim +start exits cleanly
19:32  mikebling: must be an os x issue
19:32  fow: mikebling, do you have an alias for vim, perhaps?
19:33  mikebling: fow: nope
19:33  mikebling: this looks similar: http://groups.google.com/group/vim_mac/browse_thread/thread/0d33e2f2130867b0?pli=1
19:35 --- nik0 is now known as niko
19:36  graywh: strull, you mean :map <buffer>
19:37  graywh: emanu, actuall, it should be ... map <buffer> <leader>? :x<CR>
19:37  emanu: graywh: what's <buffer>?
19:37  Raimondi_: mikebling: Are you using MacVim or the system vim? I have no problem with MacVim and :start
19:37 --- Raimondi_ is now known as Raimondi
19:38  strull: graywh: oops, yes ... of course
19:38  mikebling: system vim
19:39  mikebling: Raimondi_: did you write delimitMate?
19:39  Raimondi: mikebling: That vim's version is a bit old, why don't you install MacVim?
19:39  Raimondi: mikebling: Yes, I did.
19:40  mikebling: I love it
19:40  Raimondi: Good :)
19:40  mikebling: it's for commit messages, i don't really want to wait for macvim to load
19:41  mikebling: I've got it working by specifying the path now though
19:41  Raimondi: You can use macvim from the terminal, just like the regular vim
19:41  mikebling: oh that is a good idea then
19:41  pigdude: Raimondi: (after installing the `mvim` command)
19:42  Raimondi: Yes. Just make symlinks to mvim, vim -> mvim
19:42  graywh: for the other names vim recognizes, :h ex
19:44  emanu: graywh: Ok, so I put: autocmd BufNewFile,BufRead ~/lib/vim/shortcuts.txt map <leader>? :x<CR> in my .vimrc, but how do I do an autocommand when I close the file to reset the map to :tabe FILENAME?
19:45  graywh: emanu, make it buffer-local, like i said a few minutes ago
19:45  mikebling: huh mvim loads the gui
19:45  graywh: mikebling, of course it does
19:46  emanu: graywh: brilliant! Works!
19:46  emanu: awesome!
19:46  isaacs: if i yank something into vim's pasteboard, is there a way to get at that in other programs on the mac?
19:46  emanu: thanks guys
19:46  mikebling: haha ok, i misunderstood Raimondi
19:46  isaacs: v(move around)y --> paste into adium
19:46  isaacs: etc
19:47  graywh: isaacs, yank into the primary or clipboard selection
19:47  isaacs: graywh: hmm... how to do that?
19:48  graywh: try "+ before yank
19:48  bosie: is there a way to delete \ref{fig:Cfoo_bar_foo_bar_foo_bar} to \ref{fig:C} right away? (C is the cursor)?
19:48  graywh: isaacs, or see if "+ register is listed   :reg
19:48  graywh: bosie, de
19:49  bosie: graywh: nop, _ breaks the word
19:49  isaacs: graywh: yeah, i see it in the "" and "0 registers
19:49  emanu: ok, next question. I got <leader>? to open up my notes, but is there any set format I could use to get highlighting like in the help files? How does that work? What should I be looking up?
19:49  isaacs: graywh: but pasting outside of vim doesn't paste that
19:50  Raimondi: mikebling: mvim loads the gui, but if you use a symlink named vim -> mvim it will not.
19:51  fow: bosie, dt} or something like that (maybe ct} considering what it looks like you're doing); de should work, though, using the default value for 'isk
--- Log closed Mon Nov 01 19:57:29 2010
--- Log opened Mon Nov 01 19:57:58 2010
19:57 --- Users 589 nicks [0 ops, 0 halfops, 0 voices, 589 normal]
19:57  bosie: isk is known though
19:58  Raimondi: mikebling: What's the output of  which vim
19:58  ChrisBuchholz: graywh: how would i target the super key on, say, linux?
19:58 --- Channel #vim was synced in 70 seconds
19:59  graywh: ChrisBuchholz, don't bother trying
20:00  Raimondi: bosie: :set isk  without the quote
20:00  ChrisBuchholz: graywh: well okay then :P
20:01  bosie: Raimondi: thanks
20:01  mikebling: Rainmondi: /usr/bin/vim which is symlinked to /usr/local/bin/mvim
20:02  pigdude: mikebling: why would you do that?
20:03  mikebling: I don't want the gui
20:03  Raimondi: mikebling: That's weird.
20:03  pigdude: so you symlink the gui-less vim to gui?
20:03  pigdude: that makes no sense
20:04  mikebling: it's weird that it works for Raimondi I think
20:04  graywh: did you delete /usr/bin/vim?
20:04  mikebling: i moved it
20:04  graywh: put it back and put symlinks in /usr/local/bin
20:05  graywh: and if /usr/local/bin isn't in your $PATH, edit /etc/paths
20:05  pigdude: what I wonder is ... where is /usr/bin/vim? it is not a symlink on mac by default...so where is it now?
20:06  mikebling: pigdude I moved it to ~/vim.old temporarily
20:08  pigdude: mikebling: why did you do that?
20:08  mikebling: pigdude: I want to run macvim in the terminal without the gui
20:08  pigdude: mikebling: so run 'vim'
20:08 --- Natch is now known as Natch|
20:09  pigdude: mikebling: after putting it back in its place
20:09  mikebling: that is the default install
20:10  pigdude: mikebling: no it isn't
20:10  pigdude: mikebling: by default /usr/bin/vim is vim
20:10  graywh: /usr/bin/vim is the version shipped with the OS
20:10  pigdude: yep
20:11  graywh: he wants to run macvim instead
20:11  pigdude: but he moved that and turned /usr/bin/vim into a symlinnk to mvim!
20:11  graywh: pigdude, so?
20:11  pigdude: it sounds like he just wants to run 'vim'
20:11  mikebling: no
20:11  mikebling: i want to run macvim
20:11  pigdude: in any case the mvim script should be at /usr/local/bin/mvim
20:11  mikebling: cripes
20:11  pigdude: invoked with `mvim`
20:11  mikebling: yes but that invokes the gui
20:11  graywh: mikebling, /ignore pigdude
20:11  mikebling: ok i figured it out
20:11  pigdude: graywh: why is removing /usr/bin/vim a good idea?
20:12  graywh: i don't recommend it
20:12  pigdude: graywh: if he wants to hide that command then ~/bin/vim -> mvim
20:12  graywh: i only put $HOME/bin *last* in $PATH
20:12  pigdude: and realistically yalias
20:12  pigdude: *alias
20:13  pigdude: graywh: yea, so probably alias is best for his case
20:17 --- nroc is now known as nroc|away
20:21  rindolf: Hi all.
20:22  mhi^: Hey, rindolf
20:23  rindolf: mhi^: what's up?
20:24  mhi^: just came home from work and checking emails etc. :)
20:24  mhi^: you?
20:25  rindolf: mhi^: I'm working from home. :-)
20:26  rindolf: mhi^: had an appointment today downtown.
20:26  rindolf: mhi^: but I still got some stuff done before and afterwards.
20:26  rindolf: mhi^: previously I worked on some Project Euler challenges.
20:28  mhi^: rindolf: Hmm. I always wanted to do that so I can say "mhi^, you're a better programmer now!" to myself after solving some of them. But.. I got distracted from other things :)
20:28  rindolf: mhi^: OK.
20:28  rindolf: mhi^: what does your nick mean? Are these your initials?
20:29  mhi^: yup
20:29  rindolf: mhi^: I see.
20:30  rindolf: mhi^: what is your work about?
20:36  mhi^: rindolf: apart from studying CS I also work as a Linux admin in our uni's computing centre
20:37  mhi^: more working than studying, to be honest :)
20:37  rindolf: mhi^: ah.
20:37  rindolf: mhi^: how many machines do you admin?
20:38  mhi^: Well, when I said I was an admin, I meant a program Perl. ;p
20:39  rindolf: mhi^: ah. Pelr
20:39  rindolf: mhi^: Perl.
20:39  rindolf: mhi^: I like Perl.
20:39  mhi^: It's like.. "Hey, write a script userlog.pl for our new RADIUS server. Take 2 weeks." - Then I get an old O'Reilly book about it.. read it.. and program it. Nothing too fancy :)
20:39  rindolf: mhi^: I started http://perl-begin.org/
20:40  rindolf: mhi^: and have some CPAN modules.
20:40  mhi^: Nice :)
20:40  rindolf: mhi^: I adopted some CPAN modules too.
20:40  rindolf: mhi^: I'm writing Perl code for my job.
20:41  rindolf: mhi^: with Catalyst which is a web-devel framework for Perl.
20:41 * mhi^ nods
20:41  rindolf: mhi^: and I'm using vim for that. :-)
20:41  rindolf: mhi^: I used to dream in Vim.
20:41  mhi^: Hey, me too ;)
20:41  rindolf: mhi^: yes.
20:42  mhi^: Do you use any fancy Vim plugins for Perl? I just use snipmate.
20:42  rindolf: mhi^: I'm using snipmate too.
20:42  rindolf: mhi^: though I sometimes forget to use it.
20:42  mhi^: :)
20:42  rindolf: mhi^: I also use perl-support.vim .
20:42  rindolf: But also forget to use it.
20:42  rindolf: What else?
20:42  rindolf: NERDTree.
20:43  mhi^: yup
20:43  rindolf: And that wildcard thing that allows me to do :e lib/**/Root.pm
20:43  rindolf: Fuzzy something.
20:43  mhi^: fuzzyfinder, yup, me too :)
20:43  rindolf: mhi^: nice.
20:43  rindolf: mhi^: I'm using snipmate for Website Meta Language too.
20:44  rindolf: and HTML.
20:44  rindolf: It's very useful there.
20:44  rindolf: I can say lipa<tab> and get <li><p><a href="......
20:44  rindolf: With the closing tags.
20:44  mhi^: :]
20:46  rindolf: mhi^: how long have you been using Linux?
20:47  rindolf: mhi^: I'm not proud of it, but I'm still using vim with mswin.vim.
20:47  mhi^: rindolf: Roughly 10 years, starting with SuSE 6.4. Still there are people who use Linux since only 5 years and know much more than me. ;)
20:48  rindolf: I'd like to try getting used to vim without it someday.
20:48  mhi^: rindolf: Don't do that ;)
20:48  mhi^: Here are my plugins: http://d.imagehost.org/0704/vim.png
20:48  rindolf: mhi^: ah. I've used Linux since about 1996.
20:48  rindolf: Ah, I use VCSCommand too.
20:50  zomg: mhi^: interesting terminal =)
20:50  mhi^: it's not always that colorful, heh
20:56  jtaby: is there a way to make minibufexplorer not respond to <C-w>= ?
21:06  karlh626: jtaby: I don't know, but that would be a big help.
21:10  mhi^: What happens if you do that?
21:13  homekevin: mhi^: You mean <C-w>=? It makes windows all the same size.
21:13  homekevin: Presumably not nice for a sidebar-style window.
21:14  mhi^: I can't reproduce that here
21:15  homekevin: I suppose <C-w>= could be remapped
21:16  mhi^: Nope, it works if I just split my screen.
21:17  consumerism: why can't i use my bash aliases when i'm running vim? !myalias returns command not found, even if i !source ~/.bashrc
21:17  homekevin: Maybe the plugin remaps it in a way that makes it work as expected.
21:17  fow: vimgor, aliases
21:17  vimgor: Dunno, fow.
21:17  homekevin: ...in which case jtaby might need to update.
21:18  mhi^: last minibufexpl version is from 2004 ;p
21:18  mhi^: I wouldn't recommend using it anyways
21:18  fow: consumerism, see :h :!, in particular the bit about shellcmdflag
21:31  jtaby: mhi^: I would love to know if you have any good alternative
21:31  jtaby: s
21:35  mhi^: jtaby: I used BufExplorer for a long time. Nowadays I'm back to just using :ls and :b
21:40  poppiez: hi, I've installed the textmate theme called cobalt ported to vim: http://github.com/jarodl/cobalt.vim/blob/master/cobalt.vim. however, the background is black and not like this one: http://www.hcs.harvard.edu/~jrus/TextMate/cobalt.png. the theme says set background=dark though. am I missing something here?
21:41  graywh: poppiez, using gvim or terminal vim?
21:42  poppiez: graywh: vim in mac's terminal
21:42  graywh: #1 terminal.app only supports 8 colors
21:42  graywh: #2 that colorscheme is gvim-only
21:42  poppiez: hah
21:42  poppiez: bummer
21:42  poppiez: no way to get it for vim?
21:43  graywh: vimgor, csapprox
21:43  vimgor: CSApprox is a plugin written by godlygeek to make GUI-only colorschemes Just Work in 88-/256-color terminals. It can be downloaded at http://www.vim.org/scripts/script.php?script_id=2390
21:43  graywh: you would have to use a different terminal to get more colors
21:43  graywh: but i recommend not using terminal.app regardless of the color support
21:44  poppiez: graywh: any alternative?
21:44  graywh: on mac, i use xterm
21:44  LeoNerd: Prod my friend until he finishes his OS X terminal based on my libvterm
21:44  graywh: o_O
21:46  poppiez: graywh: so I just install xterm via port and go ahead and install xorg and everything?
21:46  graywh: no
21:46  graywh: start up x11.app
21:46  graywh: done
21:47  poppiez: graywh: that was easier :)
21:47  graywh: also, the pros use pathogen to install vim plugin bundles
21:47  graywh: vimgor, pathogen
21:47  vimgor: tpope's script for manipulating comma delimited path options. http://www.vim.org/scripts/script.php?script_id=2332
21:49  poppiez: graywh: cool, thanks :)
21:50  poppiez: graywh: when I install CSApprox it says: CSApprox needs gui support - not loading
21:50  graywh: oh, right
21:50  graywh: get macvim
21:51  graywh: install the mvim script to /usr/local/bin
21:51  graywh: make a symlink to it named /usr/local/bin/vim
21:52  poppiez: shouldn't I just copy the executable to the bin folder?
21:52  poppiez: why symlink?
21:52  krisfremen: why copy?
21:53  homekevin: I don't know, symlinks are pretty exotic!
21:53  krisfremen: i like symlinks
21:53  krisfremen: never had a single problem with them
21:53  ChrisBuchholz: Hey guys. Where can i find a gvim-settings reference? Seems google doesnt know that much about gvim.
21:53  synfinatic: symlink b/c it takes less diskspace and when you upgrade mvim your vim upgrades too
21:53  homekevin: krisfremen: my comment was sarcastic
21:54  graywh: ChrisBuchholz, best to read the vim docs directly
21:54  homekevin: ChrisBuchholz: That's crazy. Google knows all!
21:54  ChrisBuchholz: graywh: hmm okay. But will that also target gvim-specifics?
21:55  graywh: ChrisBuchholz, the gvim-specific options all have "gui" in their name
21:55  ChrisBuchholz: graywh: cool, thanks
22:04  ChrisBuchholz: Would it be possible to set gvim to open in fullscreen mode? For some reason, the fullscreen-toggle i use for vim in gnome-terminal doesnt work in gvim.
22:07  poppiez: graywh: macvim is working great. very awesome :) thank you
22:08  mhi^: ChrisBuchholz: They're 2 different apps. One is gnome-terminal and the other one, gvim, is a app on its own.
22:09  mhi^: ChrisBuchholz: I'm not good with gvim, but I believe this is solved by putting "set lines=999 columns=999" in your ~/.gvimrc
22:14  ChrisBuchholz: mhi^: sure they are, but all other apps also works with the fullscreen-toggle keyboard shortcut. Except for gvim
22:14  ChrisBuchholz: mhi^: if i put the "set lines=999..." in my gvimrc, it only maximizes it. I am looking for fullscreen
22:16  mhi^: ChrisBuchholz: Oh, that's purely WM/DE related then.
22:20  ChrisBuchholz: mhi^: weird it doesnt work with gvim specifically, then
22:21  Lars_G: What would be the right/easy way to "caps up" text in vim with a search-replace?
22:22  mhi^: ChrisBuchholz: what WM/DE are you using?
22:22  ChrisBuchholz: mhi^: i am using gnome
22:22  ChrisBuchholz: mhi^: on ubuntu 10.10
22:24  mhi^: You said "it doesn't work". How does it not work?
22:25  ChrisBuchholz: mhi^: if i press F11, which i my fullscreen toggle key, gvim just "blinks" and does nothing else, where all other apps toggles fullscreen mode
22:25  mhi^: Fullscreen normally goes over those typical DE panels at the bottom etc.?
22:25  Lars_G: What would be the right/easy way to "caps up" text in vim with a search-replace?
22:27  ChrisBuchholz: mhi^: yeah - covers the whole screen
22:28  mhi^: ChrisBuchholz: In this case I can only google, too. But reading some forum posts it seems that other people do exactly that. So, I guess it's really a gvim-specific setting or a bug.
22:29  ChrisBuchholz: mhi^: hmm, yeah. I too find people doing it that way, but for me, it doesnt work for some reason
22:30 --- Unode is now known as Guest72860
22:30  sputnick: hi there
22:31  ChrisBuchholz: mhi^: i wonder if it is the keys i use, because i can also get it to not work with other apps, if i use some keycombination that i dont "read right"
22:31  ChrisBuchholz: mhi^: e.g. Super+K wont work with gnome-terminal
22:32  mhi^: Yea, but a lot of people seem to use especially F11, so that should be okay
22:34  ChrisBuchholz: mhi^: yeah, but i guess my problem could be that i am on a macbook pro, so i have to press fn+f11 to do a f11, and maybe that is the problem
22:35  mhi^: Now it's already 2 things that I don't have the slightest idea about.
22:36  iaj: can someone tell me whether its possible to set up an autocommand that creates a certain mapping, when the file is a .java file located in a ~/foo/bar folder structure?
22:37  strull: iaj: didn't graywh show you one a while ago?
22:38  ChrisBuchholz: mhi^: i got it working by making a "compiz window rule"
22:38  ChrisBuchholz: but by doing this, i cannot un-fullscreen it
22:38  Lars_G: Is there any way I can do a caps_up in a :s/// ?ç
22:38  mhi^: ChrisBuchholz: that's why I use simple window managers :)
22:38  Raimondi: iaj: Have you tried matching with a pattern?
22:39  iaj: strull: my logfiles got broken somewhat so I coulndt check :(
22:39  ChrisBuchholz: mhi^: but they are not "fancy" :D
22:40  ChrisBuchholz: mhi^: anyhow - i am also looking for a new setup. I am open for a new distro and window manager and everything, though i would like to stick with gnome and later use gnome-shell, but lately i am not happy with canonicals decisions with ubuntu
22:42  ChrisBuchholz: mhi^: i was actually gonna try out debian, but i didnt succeed :P
22:42  iaj: Raimondi: how would I match with a pattern in that case?
22:42  mhi^: Well, maybe try OpenSUSE
22:42  mhi^: @ ChrisBuchholz
22:43  ChrisBuchholz: mhi^: seems a big step to move not only distro but all the way away from a debian based distro :P
22:43  ChrisBuchholz: mhi^: but yeah maybe:) Oh wait, isnt opensuse kde based?
22:44  mhi^: yup, at least per default :)
22:44  ChrisBuchholz: mhi^: i have actually never tried other kde distros than kubuntu, but i didnt like it. Seems too "much", if you understand
22:44  mhi^: or.. I'm sure you can choose your DE at installation-time
22:45  mhi^: well, yea, every DE is too much for me
22:45  Raimondi: iaj: if expand('%:p') =~ expand('~/the/dir/')|echom 1|endif
22:46  ChrisBuchholz: mhi^: really ? :D could you please elaborate on that ?
22:46  iaj: Raimondi: im gonna put something like that below the  autocommand Filetype java part?
22:46  iaj: Raimondi: im gonna try - thanks :)
22:47  Raimondi: np :)
22:51  mhi^: ChrisBuchholz: I just wanted to stress that I prefer minimal things (because I understand simple things better :)
22:52  ChrisBuchholz: mhi^: ah i see
22:52 --- foocraft is now known as kharras
22:53 --- kharras is now known as msakr
22:53 --- msakr is now known as foocraft
22:57  ChrisBuchholz: mhi^: it actually works fine in metacity, so compiz must be the problem :)
23:14  poppiez: when I do mvim whatever.js from terminal.app, macvim opens in a completely new window with GUI version. any way to run in it the terminal or xterm?
23:14  sqz: vi whatever.js?
23:15  poppiez: sqz: I want to use MacVim
23:15  sqz: ok
23:32  rson: macvim is the gui port.  try just vim.
23:34  cryptic0: why does vim show different colors at different times for latex commands?
23:36  mhi^: cryptic0: No idea, but do you use latex-suite by any chance?
23:37  cryptic0: mhi^:  what is latex-suite?
23:37  mhi^: so you just opened a .tex file, I guess?
23:37  cryptic0: here is another interesting thing: if I include a comment in the .tex file and then close and reopen it, this time vim applies correct colors to the document.
23:38  cryptic0: so it seems, there are 2 definitions for .tex colors in vim's profile.  I need it to use only one at all times.
23:40  rindolf: mhi^: bye, it was nice talking to you.
23:40  rindolf: mhi^: I'm going to sleep.
--- Log closed Mon Nov 01 23:57:24 2010
--- Log opened Mon Nov 01 23:57:46 2010
23:57 --- Users 569 nicks [0 ops, 0 halfops, 0 voices, 569 normal]
23:58 --- Channel #vim was synced in 67 seconds
--- Log closed Tue Nov 02 00:00:13 2010
