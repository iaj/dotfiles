--- Log opened Wed Nov 10 08:35:12 2010
08:35 --- Users 542 nicks [0 ops, 0 halfops, 0 voices, 542 normal]
08:35  ben10: its the Man command trying to use all the args
08:35  Raimondi: ben10:  command! -bar -nargs=+ MyMan exec "Man " <args> <bar>normal! <C-W>L
08:35  ben10: hmmmmm....
08:35  Raimondi: Yes, use something like that ^
08:35  jorrit: Hi
08:36  ben10: Raimondi: doh!
08:36 --- Channel #vim was synced in 97 seconds
08:37  Raimondi: :)
08:40  ben10: i thought that would do it...but... invalid argument and invalid expression errors
08:40  ben10: *scratches head*
08:42  ben10: i'm gonna read :help user-commands and see if i can figure it out
--- Log closed Wed Nov 10 08:48:11 2010
--- Log opened Wed Nov 10 08:48:33 2010
08:48 --- Users 545 nicks [0 ops, 0 halfops, 0 voices, 545 normal]
08:50 --- Channel #vim was synced in 99 seconds
08:53  Raimondi: Maybe <q-args> instead of <args>
08:53  Raimondi: and a dot to concatenate.
08:54  Raimondi: ben10:  command! -bar -nargs=+ MyMan exec "Man ". <q-args> <bar>normal! <C-W>L
09:01  ben10: yes!
09:01  ben10: thanks that was a lot more involved than i thought it was going to be
09:02  ben10: thanks for the help again
09:04  Raimondi: np
09:09  ben10: Raimondi: could you explain the dot?
09:11  Raimondi: The argument for exec is a string, <q-args> is expanded to a string (:h <q-args>), so the dot is to concatenate the first part "Man " with the expansion of <q-args>
09:15  Raimondi: Actually, that's how I use :exec but it's not exact, it can have multiple expressions as arguments :h :exec
09:34  minh: Is there some kind of 'NULL' or 'NIL' in vimscript? (in order to declare a variable but not yet assign it to some actual value)
09:36  ben10: ok got it
09:36  Walt: minh, just 0
09:36  Walt: I believe
09:37  Raimondi: minh: no
09:37  minh: Walt: thank you...but that actually means "false" to me since vimscript doesn't have the notion of boolean types...I'll go with '-1'
09:37  minh: Raimondi: thanks
09:37  Walt: minh, well, in the C mindset null == 0 == false
09:37  Walt: and vim has the C mindset.
09:38  Raimondi: minh: anything different from 0 is true
09:38  Walt: representing null with -1 in a language that does not have a null type is very nonstandard to me
09:38  zoran119: how do i jump to the next difference in vimdiff?
09:38  Walt: i.e you can't do if(someReference)
09:42  strull_: zoran119: try ]c
09:50  zoran119: strull_: that works... thanks
09:55  Walt: Can I add content of files to the name completion without opening them?
10:09  the_isz: say, can one use the functionality behind i_CTRL-n to let the user complete the text gathered by input()?
10:18  iaj: hmm there are some mac users in here as well correct - any of you tend to use Mail.app
10:19  iaj: s/$/?
10:28  scoobertron: when using soft wrapping, if the last line does not fit in the window, vim replaces it with several @ characters.
10:28  scoobertron: is there any way to force vim to display the last wrapped line - even if it won't all fit?
10:29  paradigm: scoobertron: I could be wrong, but I believe if you have list/listchars set up with a extends, it may show you the majority of lines in such situations
10:30  paradigm: vim wants a way to indicate that the line continues
10:36  frogonwheels: scoobertron:  actually I think there is..
10:37  platzhirsch: Are there any obvious reasons why Vim turns the color lightning to full grey wen I enter :set ft=Java ?
10:39  platzhirsch: I reinstalled my Ubuntu, copied my coloring.vim and vimrc and now it does not work anymore
10:39  scoobertron: paradigm: that seems to work, thanks!
10:39  paradigm: happy to help
10:47  amcsi: hello
10:47 * paradigm waves
10:47  amcsi: how do I change where a file should be saved on every :w?
10:48  paradigm: amcsi: if you follow :w with a file address, it goes there.  If not, it saves to the last place it was saved, or if not previously saved it goes to where it was last opened.  If it's a new file with no previous save or place opened, it should prompt you to give it one.
10:49  amcsi: that can't be. I remember that :w <filename> doesn't change where :w saves in the future
10:49  Raimondi1: :saveas
10:49  paradigm: hmm
10:50  amcsi: I tested again and I'm right
10:50  amcsi: I need to change the value of % or whatever provides the value for %
10:51 --- Raimondi is now known as Raimondi2
10:51  paradigm: my bad
10:51  paradigm: I shouldn't answer questions quite this early >.<
10:51  Raimondi1: amcsi:  :h :saveas
10:51  frogonwheels: amcsi:  :f <filename>  changes the name but doesn't save.   :saveas <file>  does  :f <file>  and :w
10:51 --- Raimondi1 is now known as Raimondi
10:52  amcsi: thank you!
10:52  amcsi: Raimondi1: :h is the save as :saveas?
10:52  paradigm: :h is just the help
10:53  amcsi: ah
10:53  frogonwheels: amcsi:  many answers in #vim will be answered with   :help  thingy  or  :h   for short
10:53  frogonwheels: many questions will be answered
10:54  amcsi: ya, I like to use that (I just needed the name of the command first)
11:09  rindolf: Hi all.
11:15  cYmen: Vim puzzle of the day: I can replace insert using R C-r " and I can insert in multiple lines using C-v I text. How do I replace insert the same text in multiple lines?
11:16  Raimondi: :h :substitute
--- Log closed Wed Nov 10 11:22:11 2010
--- Log opened Wed Nov 10 11:22:30 2010
11:22 --- Users 575 nicks [0 ops, 0 halfops, 0 voices, 575 normal]
11:24 --- Channel #vim was synced in 107 seconds
11:32  Axioplase_: cYmen: for example select visually your column, then :s/\%V./^R"/
11:33  Axioplase_: (because ^R" will input the yank buffer, but R will only replace one char, I guessed you wanted to replace a char on several lines, ie. a column).
11:47  minh: Hi everybody...I need help on vimscript, i.e. passing arguments to user defined functions. It seems like arguments are passed by reference..."reference types" (such as lists) can be manipulated like you would expect...but "primitive types" (such as single strings/numbres) are passed "read-only"...how can you manipulate those "primitive datatypes" when passed as an argument?
11:48  Raimondi: :h copy()
11:51  minh: Raimondi: thank you very much...but it seems like copy()/deepcopy() would help on passing e.g. arrays call-by-value...but my problem is the opposite one...I want to pass "primitive datatypes" (such as single strings) by reference
11:53  flavius: Hi. It was two days ago that I decided to force myself into learning vim more agrressively, so I've put this in my vimrc: http://pastium.org/view/d961029d87038e417772c283ad0549ed Now the problem is I cannot use hjkl to navigate when in insert mode. How to modify those rules?
11:53  minh: flavius: navigate hjkl in insert mode??? how are you supposed to type those letters then?
11:54  the_isz: minh: i was about to ask the same question :)
11:54  FernandoBasso: flavius: Just delete those lines.
11:54  flavius: I ment the arrow questions, not hjkl
11:54  flavius: FernandoBasso: I want to block the arrow keys in any mode, but in insert mode
11:54  minh: flavius: as FernandoBasso said...just delete those line...although you shouldn't use arrow keys at all
11:54  the_isz: flavius: if you really intend on learning vim, don't move in insert mode but exit it and move then.
11:55  minh: the_isz: absolutely
11:55  FernandoBasso: flavius: Did you try running 'vimtutor'?
11:55  flavius: the_isz: so shall I exit insert mode just to move one letter back or forth?
11:55  the_isz: flavius: yes
11:55  flavius: the_isz: and then go back into insert mode?
11:55  FernandoBasso: flavius: Yes. It is meant to be that way.
11:56  flavius: isn't that too much effort?
11:56  FernandoBasso: flavius: Once you pass the initial 'shock' you'll be amazed the power this gives you.
11:56  minh: flavius: not at all...using arrow keys is much of an effort!
11:56  the_isz: flavius: insert mode is meant to input some text. not more. real editing is done in normal or command mode :)
11:57  minh: flavius: in insert mode you just type letters and occasionaly do a backward-delete via backspace or preferably <C-h>
11:57  FernandoBasso: flavius: Vim is mode'more' while all other editors are modeless.
11:57  the_isz: flavius: moving your fingers from you keyboard's home row to the cursor keys and back is much more circumstancial and time-consuming than not doing it
11:57  flavius: for example I have the habbit to close a bracket all the time when I open it, so I cannot have unbalanced pairs or (), [], {}. This is a good practice to avoid unmatching parenthesis I think. With your way of working, I would run into frustration very often
11:58  FernandoBasso: flavius: Install the autoclose.vim plugin.
11:58  the_isz: flavius: i'd suggest snippets for doing that
11:58  minh: flavius: there's plenty of plugins that do that for you...it's even very trivial to write it yourself
11:58  flavius: FernandoBasso: thanks for the hint
11:58  Mnemonic^: Hi, I am trying hard to learn VIM. I have used it for a long time, but now I decided that I want to use it to the limit... I am now wondering why vim goes into INSERT mode after I make a YANK or a CUT "cc" or "yy"
11:58  Mnemonic^: It is very annoying since you are often not going to type text after this operation.
11:59  FernandoBasso: Mnemonic^: Probably you copied something into your vimrc.
11:59  the_isz: Mnemonic^: try  :map yy
--- Log closed Wed Nov 10 12:10:11 2010
--- Log opened Wed Nov 10 12:10:37 2010
12:10 --- Users 581 nicks [0 ops, 0 halfops, 0 voices, 581 normal]
12:10  FernandoBasso: flavius: Plugins should be installed when we fell vim is lacking some feature we need.
12:11  FernandoBasso: For me, those are fine so far.
12:12  flavius: I see. Thanks
12:12 --- Channel #vim was synced in 108 seconds
12:12  FernandoBasso: flavius: Perhaps, if you do web programming, matchit.vim and closetag.vim or html_autoclosetag.vim.
12:12  flavius: you should check out sessionman, it's great :)
12:12  FernandoBasso: I'll take a look at it. :)
12:13  flavius: Do I need both matchit and closetag?
12:16  FernandoBasso: flavius: matchit is provided with vim. It is just not loaded by default.
12:16  FernandoBasso: Wheter you need boot or not, I think so. They do different things.
12:17  flavius: How to load it automatically?
12:18  FernandoBasso: flavius: I just copied from /usr/share/vim/vim73/macros/matchit.vim to ~/.vim/plugin/
12:21  flavius: I see it has a file matchit.txt. There was a command to build the help tags once I am in .vim/doc/, what was it?
12:22  estragib: :helpt
12:23  FernandoBasso: Or from any path :helptags ~/.vim/doc
12:25  tuyetnga: hi
12:25  tuyetnga: I use :e somefile to open a new file
12:25  tuyetnga: how to close just that file
12:26  tuyetnga: not all files I'm using ;)
12:26  FernandoBasso: :bdelete
12:26  FernandoBasso: or :bwipeout
12:27  iaj: :bdelete :bwipeout what's the difference actually? :D
12:27  gaveen: flavius, try nerdcommenter, nerdtree, conque plugins too
12:28  FernandoBasso: With :bd the file is not listed by :ls or :buffers anymore, but it is still loaded. :bw really wipes the file out from the buffers list.
12:29  industrial: FernandoBasso: thanks, didn't know that existed. Will the buffer numbers line up again if I use :bw ? when I use :bd it keeps the order and if I open the file again its in that order again..
12:29  industrial: Maybe a way to do something like 'tab moving' in minibufexpl using :bw ...
12:30  FernandoBasso: industrial: The buffer numbers are never changed. If you :bw a fuffer, then the fuffer list gets a 'gap' in the place (number) that buffers was.
12:30  industrial: ah :(
12:30  FernandoBasso: industrial: I'd like that also.
12:31  industrial: It's just something that keeps being missed in vim, proper tabs for individual files as in Most Editors (tm)
12:31 --- silex is now known as Silex
12:32  FernandoBasso: industrial: I find more easier to remember buffer names than buffer numbers anyway.
12:32  FernandoBasso: industrial: You can use tab to complete any buffer name.
12:32  industrial: I use :map <tab> :bn<cr> and :map <s-tab> :bp<cr>
12:32  industrial: together with MiniBufExpl, to give me tabs
12:32  FernandoBasso: Even if you start typing, say ht vim will even complete buffers ending with ht, like html.
12:32  iaj: FernandoBasso: thanks for the explanation
12:33  FernandoBasso: In other words, you don't even need to start the initial letters of the buffer name. Any thing in any index of the file name will do.
12:39  flavius: gaveen: thanks, they all look good. Could you tell me if conque plays well together with sessionman?
12:40  gaveen: flavius, haven't used sessionman. conque works like a normal buffer so to speak
12:47 --- jiansong_ is now known as jiansong
12:48  flavius: gaveen: just tried it, no, it doesn't :( when I restore the session, the tab in which was conque originally, it is now empty and not accepting commands :(
12:48  flavius: I wish the scripts could work cooperatively
12:49  trone: Hi there. How I can to know what syntax vim are using? I open a file and start a syntax highlight, but if I give :set syntax? vim reply to me with syntax= empty...
12:49  FernandoBasso: trone: Do you have syntax on?
12:49  iaj: trone: are you looking for :set filetype=?
12:50  iaj: drop the =
12:50  FernandoBasso: Yes. :set syntax?
12:50  trone: iaj: filetype is empty.
12:50  trone: FernandoBasso: yes. syntax on (for automatic syntax choose, right?)
12:50  FernandoBasso: trone: :set filetype plugin indent on
12:52  FernandoBasso: trone: Yes. Syntax is automatically chosen 99% of the times.
12:52  gaveen: flavius, even after you go into insert mode?
12:53  trone: FernandoBasso: and I would to understand what syntax vim load, indeed.
12:53  FernandoBasso: trone: Would what?
12:53  trone: FernandoBasso: my problem isn't that he wrong, but I would get what (right) sytnax it get.
12:55  trone: FernandoBasso: the vim automatic choice is perfect. Just I don't understand what syntax it load, and looking syntax param I don't find it (the syntax param is empty). But text is perfectly highlighted.
12:55  FernandoBasso: make sure you have "syntax on" and "filetype plugin indent on" in you vimrc first.
12:55  FernandoBasso: trone: What text?
12:56  trone: FernandoBasso: the text in my file.
12:56  FernandoBasso: Is it a plain text or a source code?
12:56  trone: FernandoBasso: source code. Template Toolkit code.
12:57  trone: And I would to understand what syntax file vim use for it.
12:57  FernandoBasso: trone: and :set syntax? does not show anything?
12:57  trone: FernandoBasso: exactly. :)
12:57  FernandoBasso: Are you typing the ? after 'syntnax' ?
12:58  trone: FernandoBasso: yep.
12:58  trone: FernandoBasso: but I see the code perfectly highlighted, of course. Vim works perfectly. It's me that don't understand what it choose.
12:59  FernandoBasso: trone: :set syntax? should show what file syntax it is using.
12:59  FernandoBasso: Also, :scriptnames shows the scripts vim is currently using.
13:07  trone: Indeed, in ~/.vim/plugin/ I have 2 file to highlight tt syntax... scriptnames show me them, but syntax? result empty. However, vim highlight them correctly. I will look around...
13:07  trone: FernandoBasso: thank you.
13:07  FernandoBasso: trone: I don't know why :set syntax? does not show anything. Sorry.
13:15  spiiph: trone, try :set ft?
13:17  DestinyAwaits: spiiph : Hello, Sir :-)
13:17  spiiph: hi
13:25 --- daniel__ is now known as daniel
13:34 --- Natch is now known as Natch|
13:49 --- Silex is now known as silex
13:55  haole: hello there... my vim won't let me delete stuff with backspace that i was inserted before the current insertion... what option controls this?
13:55  haole: s/i was/was
13:55  jamessan: :help 'backspace
13:57  haole: jamessan: thanks! solved
13:58  FernandoBasso: :)
13:58  FernandoBasso: Another happy customer.
14:03 --- riotz_ is now known as riotz
14:13  Mnemonic^: FernandoBasso, Hi,, Can I just ask you.. Where do you work since you have time to sit and answer questions all day? :)
14:14  zomg: Maybe he doesn't
14:20  iaj: heh, or do you wanna join him :)
14:22  FernandoBasso: Mnemonic^: I was a musician for 14 years. Then I fell in love with linux and programming. I dropped playing the guitar (which was my real professing for all those years) and now I am learning to code. Since I don't play anymore and I have two sons aging 11 and 13 years, I give English lessons. I expect to quit that as soon as I am a reasonable programmer.
--- Log closed Wed Nov 10 14:28:14 2010
--- Log opened Wed Nov 10 14:28:35 2010
14:28 --- Users 585 nicks [0 ops, 0 halfops, 0 voices, 585 normal]
14:30 --- Channel #vim was synced in 113 seconds
14:39  Mnemonic^: _rane, Program C++ program to run in Linux.
14:47 --- silex is now known as Silex
14:48 --- Silex is now known as silex
15:20  PlasmaHH: hi, following some advice from a day before yesterday to profile I started profiling with ":profile start prof.log" however when I now exit vim, the file is empty... is there anything I am missing?
15:36  Eiler: i made a colorscheme and i made a ~/.vimrc that loads it, and it works in gvim, but not in vim, any idea why?
15:37  graywh: you only defined gvim colors?
15:38  sitaktif: <3
15:41  Eiler: sitaktif what?
15:41  the_isz: Eiler: it's a heart!
15:42  Eiler: ah that was the retarded symbol
15:42  the_isz: Eiler: share the love, walk the rainbow, find a cure for cancer and... stuff...
15:42  Eiler: graywh http://vimcolorschemetest.googlecode.com/svn/colors/vc.vim i use this one
15:42  Eiler: the_isz yes and use it on irc when you are an idiot
15:42  lucasoman: not sure i get the obsession with color schemes
15:43  lucasoman: maybe i'm just an old-fashioned terminal guy
15:43  et: Eiler: gui* stuff is ... well, for gvim.
15:43  the_isz: Eiler: wow, you do have some disposition towards that symbol...
15:44  Eiler: the_isz not all all, just the misusage of it and its relatives like lol and so on
15:44  gdoteof: <3 lol, imho
15:44  estragib: iawtc
15:44  the_isz: Eiler: fair enough.
15:45  Eiler: gdoteof point proven
15:45  gdoteof: <3 != retarded symbol, afaik
15:45  lucasoman: omg, gp
15:45  Eiler: it is of course not, just in the context
15:46  graywh: Eiler, yeah, that colorscheme will do nothing in terminal vim without csapprox
15:47  Eiler: ok yep found it now, its ctermfg and ctermgb i need to use as well
15:47  Eiler: csapprox?
15:48  graywh: vimgor, csapprox
15:48  vimgor: CSApprox is a plugin written by godlygeek to make GUI-only colorschemes Just Work in 88-/256-color terminals. It can be downloaded at http://www.vim.org/scripts/script.php?script_id=2390
16:02  haole: what is called the auto complete feature of vim? i'm trying to find it in the docs
16:02  haole: i mean the ctrl+N stuff
16:02  PlasmaHH: Eiler: I think I read somewhere about a script that allowed you to set the colors only for one of the two, and then automatically converts...
16:03  the_isz: haole: :he i_CTRL-n
16:04  estragib: i'm quite fond of using !{motion}{filter} for quick external filtering. is there a similar thing for :ex commands so i can <key>{motion}{command}?
16:07  iaj: what's that {filter} for example?:D
16:08  estragib: at the start of a block i do !}sort, for example
16:08  estragib: but seeing vim has a builtin :sort, it feels silly to use the external filter
16:09  iaj: oooh... i didn't know about the !{motion thing}  only 4: :)
16:11  estragib: wildly useful, imo
16:11  iaj: depends.. but yeh I like it as well
16:11  kurkale6ka: estragib: just use a range with your ex commands?
16:12  the_isz: estragib: well, commands are based on ranges, so you can do  :.,+3command  but you knew that, probably. i think you can also do a search instead of giving a line number.
16:12  the_isz: estragib: :he [range]  should give you available options.
16:12  estragib: right. basically i'd want a key to wait for a motion and start an :ex prompt with the resulting range pre-filled
16:13  kurkale6ka: use a visual selection then press :
16:13  iaj: yeah V{motion}: would do even if its one more keystroke ;)
16:13  estragib: i have a secret but intense aversion against visual :/
16:14  estragib: hm, not so secret now
16:14  estragib: anyway, i think that's the solution. thanks :)
16:16  estragib: ... that doesn't seem to work with . repeating :/
16:23  bosie: what could be the reson that vim (macvim) is lagging when i type?
16:23  gkatsev: is it a huuge file with syntax highlighting enabled?
16:23  bosie: gkatsev: no not really
16:23  bosie: 900 lines
16:23  gkatsev: then, no clue.
16:24  bosie: but syntax highlighting is enabled
16:24  gkatsev: yeah, 900 should be more than fine.
16:24  gkatsev: by large file I mean like LARGE
16:24  bosie: i think i found the reason
16:24  bosie: i have the same file open in a vertical split
16:24  bosie: if i remove the vertical split it is fine again
16:24  gkatsev: heh
16:25  bosie: hm
16:25  bosie: crap
16:36  PlasmaHH: I had something similar on windows once, turned out that some plugin was the culprit which was running amok when you had splits
16:36  PlasmaHH: but only on windose
16:38  bosie: PlasmaHH: remember that plugin?
16:39  PlasmaHH: bosie: it had something to do with buffers, I dont really know any more, its been a while. it was somehow trying to keep track of the active and/or displayed buffers or so, maybe to switch between them more easily.
16:39  bosie: bufexplore? ;)
16:40  PlasmaHH: maybe, at least I think I heard of that one before...
16:40  bosie: k
16:41  kaze`: hello, is there a way to have syntax-based code folding on HTML files with Vim? I usually use "foldmethod=indent" on HTML files but it sucks with <pre /> blocks...
16:44  Scala: I'm trying to get nerdcommenter running, but even when I :so path/to/nerdcommenter.vim it doesn't show up as a available function.  Any ideas?
16:44  gkatsev: kaze`: :h fold-methods try syntax rather than indent
16:44  _rane: Scala: i just have it in ~/.vim/plugin and it just works
16:45  Scala: _rane: I used to have it working as well, and then I switched to pathogen and it refuses to load.
16:45  kaze`: gkatsev:  done, but using "syntax" disables all code folding on HTML files
16:45  Scala: _rane: I'll try moving it into plugin to see if it will even load then
16:46  gkatsev: Scala: .vim/bundle/nerdcommenter/nerdcommenter.vim or something like that
16:46  kaze`: gkatsev:  that's why I was wondering if there's a way to enable syntax folding on HTML files — maybe I'm doing it wrong, or maybe there's a specific *.vim file for that
16:46  gkatsev: try looking at some scripts online.
16:46  Scala: gkatsev: I have .vim/bundle/nerdcommenter/plugin/nerdcommenter.vim which I believe is correct
16:46  gkatsev: do you call the pathogen function in your RC?
16:46  Scala: gkatsev: Yes, all of my other plugins are working
16:47  gkatsev: weird
16:48  Scala: what's vimscript for print so I can see if this plugin is actually being loaded
16:48  bosie: ok now i have it without a splitted window
16:48  bosie: great
16:48  gkatsev: there is :echo
16:51  Scala: echo at the beginning of the plugin works but not at the end O_o
16:51  LeoNerd: .  redoes the last normalmode change.  Is there a similarly nice key for redoing the last :command? I want to easily redo  s/foo/bar  per-line...
16:52  kurkale6ka: @:
16:52  kurkale6ka: & for :s///
16:53  LeoNerd: Ahhyes, & does it, thanks
16:53  kurkale6ka: it doesn't use the same flags though
16:53  kurkale6ka: :h&
16:54  kurkale6ka: I mainly use @:
16:56  ceej: is there a reason omni auto complete would stop showing the top bar that shows what params a function takes?
17:01  kurkale6ka: ceej: :se cot+=preview
17:04  ceej: what does that do?
17:11  kurkale6ka: :h'cot
17:12  lucasoman: :h'cot
17:12  lucasoman: erg, wrong window
17:15  ceej: anyone use manviewpage?
17:18  ceej: Is there a way to disable the default man?  :h Man doesn't show a way
17:24  joeytwiddle: ceej: you mean the one on K?
17:24  joeytwiddle: you could remap it
17:24  ceej: ye
17:25  joeytwiddle: or :h K   and see 'keywordprg'
17:26  ceej: it is remapped cause if I do K when I remove the bundle i get
17:26  ceej: http://screencast.com/t/fejq6n5gJTce
17:28  ceej: It's strange seems to work sometimes and not other
17:28  ceej: s
17:28 --- shikamaru is now known as Guest52312
17:37 --- taylanub0 is now known as taylanub
17:39 --- galaxywatcher_ is now known as galaxywatcher
17:47  _rane: uhm, when I'm typing in a row that has "* <text>" and when textwidth cap is hit and vim hard wraps, it'll try to be smart and does "*  " in the beginning of the new row
17:47  _rane: I don't like that
17:47  _rane: indent is fine, but I don't need another bullet :)
17:48  mgedmin: _rane, you can configure that; see :h fo-table
17:49  gkatsev: I really should take a look at these options.
17:49  mgedmin: "* " is considered to be a comment leader; this bit is also configurable through :h 'comments'
17:49  _rane: uhh...
17:50  mgedmin: I would be more specific if I could, but I don't grok the comment formatting business
17:50  mgedmin: you probably want :set fo-=c
--- Log closed Wed Nov 10 19:35:40 2010
--- Log opened Wed Nov 10 19:56:12 2010
19:56 --- Users 604 nicks [0 ops, 0 halfops, 0 voices, 604 normal]
19:56  Raimondi: harleypig: Make  the function return  a escaped space
19:56  harleypig: I didn't know that.  I've read over that section I don't know how many times in the last couple of days.  Thanks.
19:56  Raimondi: Not sure if that will work though.
19:56  Evanlec: mgedmin: other problem is these files are going on the web, so I really dont right, left-quote and right-quote, i just want " or '
19:56  harleypig: Raimondi: I tried \ mixed-indenting and I got \ mixed-indenting  in my status line.
19:57  mgedmin: Evanlec, yeah, :%s/“/"/g etc.
19:57  Evanlec: k
19:58  mgedmin: I would yank each of those characters and then use <Ctrl-R>0 to insert them in :%s/
19:58 --- Channel #vim was synced in 130 seconds
19:58  mgedmin: or you could just type them, if your keyboard allows that
19:58  mgedmin: I think vim even has digraphs ...
19:58  Evanlec: yea
19:58  mgedmin: ^K " 9, ^K " 6
19:58  mgedmin: and likewise with '
19:58  Evanlec: such a pain in the balls
19:59  Evanlec: mgedmin: yea, that works
20:00  harleypig: abstrakt: :h diffopt
20:00  Evanlec: i think its <92> <94> and <96>
20:00  abstrakt: harleypig: thanks
20:01 * mgedmin sighs
20:02  Evanlec: mgedmin: ^K " 9  etc works
20:02  Evanlec: mgedmin: ty
20:03  harleypig: mgedmin: thank you, the %(\ %{func}%) helped clean up some other lines too.
20:04  hendry: is there some trick to get vim to run :make on write?
20:06  mgedmin: BufPostWrite autocommands
20:06  mgedmin: or was it BufWritePost?
20:06  mgedmin: :help is your friend
20:09  DHulme: hendry: or you could do it the other way round, use :set autowrite to write when you run :make
20:11  harleypig: hendry: are you looking to do a syntax check whenever you write your file?
20:14  hendry: harleypig: i'm running prince over my html, to recreate a PDF
20:15  hendry: have not figured out how to xpdf to reload automatically either ;)
--- Log closed Wed Nov 10 20:21:56 2010
--- Log opened Wed Nov 10 20:22:21 2010
20:22 --- Users 608 nicks [0 ops, 0 halfops, 0 voices, 608 normal]
20:22  gdoteof: it keeps saying it can't find 5
20:22  DHulme: gdoteof: you want :%s, not :s
20:22  DHulme: :s works only on the current line by default
20:23  gdoteof: DHulme: right.  that is what i have actually.. but in any case it's what is between the / and the / that i am having problems with
20:23  dibber: gdoteof I think you need to specify white space chars
20:23  DHulme: "/ 5 " will match " 5 "
20:24  gdoteof: dibber: I am trying to.. but how?  :%s/ 5 //g does not work
20:24 --- Channel #vim was synced in 113 seconds
20:24  gdoteof: forward slash
20:24  gdoteof: wtf
20:24  dibber: :%s/\s5\s//g
20:24  Eiler: anyone know how to use omnicppcomplete?
20:24  DHulme: (I mean / as the search command, not as an extra thing)
20:24  dibber: ? I'm a noob :)
20:24  gdoteof: oh \s
20:24  gdoteof: DHulme: that was not working, that is what i tried
20:24  DHulme: you only need \s if the things on either side of the 5 might not be space characters, that is, if they might be tabs or vertical tabs
20:24  gdoteof: :%s/ 5 /node\/g
20:25  gdoteof: DHulme: ah.  yeah they *are* tabs.  that makes sense.
20:25  abstrakt: Eiler: CTRL-X CTRL-o isn't it?
20:25  abstrakt: Eiler: :he ins-completion
20:25  gdoteof: they aren't rendering wide here, but it is a tsf
20:25  Eiler: ah yes seems like it
20:25  Eiler: :he ins-completion, what does it mean?
20:26  DHulme: gdoteof: you can match only tabs (and not any other kind of whitespace) with \t
20:26  DHulme: Eiler: it's a command
20:26  DHulme: to get help on the topic "ins-completion"
20:26  gdoteof: is ^ begining of line?
20:26  DHulme: gdoteof: see :help /^
20:27  gdoteof: sweet
20:34  gdoteof: can i do 'delete every line that starts with "2"
20:34  graywh: :g/^2/d
20:34  Eiler: abstrakt hmm it doesnt work for me. it says "pattern not found"
20:35  abstrakt: Eiler: well then it's not found
20:35  abstrakt: Eiler: maybe you typed too much stuff
20:35  abstrakt: Eiler: and it can't find anything further
20:35  gdoteof: graywh: thx
20:35  abstrakt: Eiler: omni generally works fine for me
20:35  abstrakt: I don't use it that often, but it works fine
20:36  Eiler: abstrakt i just made a hello world example, i did emerge gvim, and emerge omnicppcomplete, i dont know if i need to do any further configurations
20:36  spiiph: Eiler, dod you create the tags file?
20:36  abstrakt: Eiler: I don't think omnicppcomplete has anything to do with gvim
20:36  abstrakt: Eiler: gvim should come with omnicompletion built in, it's not a plugin
20:36  spiiph: Yes, it is.
20:36  spiiph: Stop giving bad answers.
20:36  abstrakt: or at least I didn't think completion was a plugin, I thought ins-completion was built in to the core
20:37  Eiler: omnicppcomplete built in? i dont think so
20:37  abstrakt: spiiph: ins-completion isn't part of vim core?
20:37  abstrakt: hmm, oh well, ignore me then
20:37  spiiph: ins-completion is. omnicppcomplete is a plugni.
20:37  Eiler: i didnt create any tags file!
20:37  spiiph: Eiler, you should.
20:37  abstrakt: spiiph: errr... ok well ins-completion *has* an "omni complete" option
20:37  abstrakt: I don't know how that differs from whatever omnicppcomplete is
20:38  abstrakt: Eiler: http://gog.is/exuberant/ctags and or http://gog.is/exuberant/ctags/vim
20:38  spiiph: Eiler, :h omnicppcomplete has the full story.
20:38  abstrakt: Eiler: vim integrates with ctags by default, it's really awesome, you should learn how to use it
20:38  spiiph: abstrakt, omnicppcomplete is a plugin that creates an omnifunc for C++ completion.
20:38  abstrakt: Eiler: once you learn how to integrate vim with ctags, then you can go figure out how to bring up completion lists from tag files
20:39  spiiph: abstrakt, not necessary.
20:39  abstrakt: Eiler: ins-completion has a "from tags" example
20:39  spiiph: I said stop giving bad advice. I've already given him the information he needs.
20:39  abstrakt: spiiph: so omnicpp basically reads your C++ file and generates a temporary tags file and then automatically uses that when you trigger complete?
20:39  spiiph: No.
20:39  abstrakt: spiiph: dude it's not actually bad advice, and it's not actually incorrect
20:39  abstrakt: spiiph: he can use omnicpp too if he wants
20:40  abstrakt: spiiph: but ins-completion *is* built in and it *does* have completion from a tags file
20:40  spiiph: Yes, but it's way worse than omnicppcomplete. Hence: bad advice.
20:40  abstrakt: spiiph: maybe omnicpp is better, but he doesn't even know what ctags is yet and knowing what ctags is is a good thing
20:40  abstrakt: spiiph: aight well SORRRRReeee, jeez... I never use omnicpp
20:40  abstrakt: hell I never use completion, because most of the time I can type faster than the time it takes for me to bring up the list and select what I want
20:41  abstrakt: I do use completion every now and again, but it's pretty rare
20:41  spiiph: abstrakt, that's why I suggested you stop giving advice about something you don't know.
20:41  abstrakt: spiiph: but I do know, because I do use ins-completion and that is what *I* was talking about
20:41  abstrakt: i wasn't giving advice about omnicpp
20:41  abstrakt: spiiph: you were giving advice about omnicpp
20:41  abstrakt: and I'm going to lunch
20:41  abstrakt: good day
20:42  spiiph: It was still bad advice, since he asked about omnicppcomplete, and that is what's most relevant for C++.
20:42  estragib: HUG
20:43  abstrakt: spiiph: does omnicomplete allow you to jump to a class definition using CTRL-]
20:43  abstrakt: spiiph: s/omnicomplete/omnicppcomplete/
20:43  abstrakt: oh and incidentally, does omnicppcomplete work with Objective-C
20:43  spiiph: Of course it does. It uses tags files the same way that vim does normally, it just does more.
20:43  spiiph: I don't know.
20:43  abstrakt: ahh, ok then well nevermind
20:43  Eiler: completion is not only to save typing type
20:43  abstrakt: spiiph: but my suggestion that Eiler learn what tags files are and how to use them is totally relevant
20:44  abstrakt: maybe omnicpp does it "better" but learning about tags files is a good thing
20:44  Eiler: if you have a class with maybe 20 members for example, it can be nice to see them
20:44  abstrakt: then he'll *actually* know what's going on
20:44  spiiph: Sure, but not that he use the regular tags completion.
20:44  abstrakt: give a man a fish, teach a man to fish
20:44  spiiph: abstrakt, not a relevant analogy.
20:44  abstrakt: totally relevant
20:44  spiiph: No.
20:44  isaacs: build a man a fire, and he'll be warm for a night. set a man on fire, and he'll be warm for the rest of his life.
20:44  abstrakt: you're not a relevant person, that's fine
20:44  abstrakt: I"m going to lunch for real now
20:44  abstrakt: peace
20:44  spiiph: I suggest you stop being obnoxious.
20:46  Spidey01: There is just something cool about pressing ^Z and gvim minimising itself so I can go back to my shell window
20:47  Eiler: hmm, if i have a document open in vim, and i type :help something, another document opens, so they are 2, how do i close the help part so i only see my original document?
20:47  isaacs: Eiler: :q
20:47  graywh: or :close
20:47  Eiler: ah
20:47  estragib: or ^Wc
20:48  isaacs: estragib: oh, i thought that was the command to find the bathroom.
20:50  estragib: i think that's in emacs
20:52  isaacs: estragib: oh, right. C-X M-water-closet
20:53  estragib: :D
20:57  hendry: mgedmin: http://natalian.org/archives/2010/11/10/HTML_driven_DTP/
21:10  estragib: .o( it's the *little* incompatibilities between sed and vim that get on your nerves. )
21:10  ceej: anyone here us vim ack ?
21:11  Eiler: is there any way to make vim work a little better when programming c++, so if i write class X { <enter> that it autoindent?
21:11  spiiph: Eiler, put :filetype plugin indent on in your .vimrc
21:11  alester: I use ack.
21:11  spiiph: Also add :syntax on
21:11  alester: ceej: What's the question.
21:11  spiiph: Eiler, I also suggest you have a look at:
21:11  spiiph: vimgor, vimrc
21:11  vimgor: Try typing :help vimrc-intro and check out <http://vim.wikia.com/wiki/Open_vimrc_file>. Also try the #vim approved example vimrc at <http://vim.wikia.com/wiki/Example_vimrc>.
21:12  ceej: I'm trying to use regex in it but it seems like I can only search for one word like :Ack "word"
21:12  spiiph: And run through vimtutor, if you haven't already.
21:12  alester: You can use regexes.  What regex is not processing?
21:12  Eiler: spiiph i can skip the ":" right? just add filetype plugin indent on to .vimrc?
21:12  alester: Is there a backslash in it?  Maybe the backslash is getting lost in translation on its way to the shell?
21:12  spiiph: Eiler, yes.
21:13  ceej: alester: :Ack /public\s\$validation/g
21:13  thiana: Is there a way to have vim report the line number of errors? 'E488: Trailing characters' isnt that helpful :/
21:13  alester: yeah, see, I bet the \s and \$ are getting stomped on.
21:14  spiiph: thiana, when does this happen?
21:14  alester: Also, I don't think you need to put the regex in slashes.
21:14  Eiler: spiiph gah, i did but i make 2 tabs?! or equal to 8 spaces, instead of 1 tab, can i change this?
21:14  Eiler: it makes 2 tabs
21:14  alester: I don't use the plugin, but I'm pretty sure you don't
21:14  ceej: hmmm
21:14  spiiph: Eiler, yes, you should read this:
21:14  spiiph: vimgor, indent
21:14  vimgor: For a quick overview of Vim's indentation settings, see http://vim.wikia.com/wiki/Indenting_source_code
21:15  Eiler: alright
21:15  Eiler: also, what is the difference between tabstop, softtabstop and there was one more?
21:15  alester: ceej: Do it as :Ack public\\s+\\$validation
21:15  spiiph: Eiler, see http://vim.wikia.com/wiki/Indenting_source_code#Explanation_of_the_options
21:15  alester: You have to escape the backslashes
21:15  spiiph: That should get you started.
--- Log closed Wed Nov 10 21:16:52 2010
--- Log opened Wed Nov 10 21:22:14 2010
21:22 --- Users 608 nicks [0 ops, 0 halfops, 0 voices, 608 normal]
21:22  spiiph: np
21:23 --- Channel #vim was synced in 109 seconds
21:31  ceej: I just found this :)  http://www.vim.org/scripts/script.php?script_id=2438
21:41 --- quaestor is now known as Guest3590
22:03  plwert: % can be used to jump to a matching brace, but what about matching keywords? (eg I'm over an "if" in a lua file and want to cycle through the matching "else" and "ends")
22:04  mgedmin: I think there's a plugin for that
22:04  mgedmin: vimgor, matchit
22:04  vimgor: I don't have a clue.
22:04  mgedmin: vimgor, matchit.vim?
22:04  vimgor: Dunno!
22:04  mgedmin: vimgor, are you case sensitive?
22:04  vimgor: I don't have a clue, mgedmin.
22:04  plwert: http://www.vim.org/scripts/script.php?script_id=39 this?
22:05  mgedmin: I think matchit is bundled with vim by default, but not enabled by default
22:05  mgedmin: and I've no clue if it supports lua
22:05  plwert: there's highlighting by default, so I would assume that at least something somewhere can parse lua properly
22:05  mgedmin: try it -- :help matchit-install
22:06  mgedmin: why are my swap files suddenly 8.3 and without a leading dot?
22:06  plwert: this leads to a generic help about installing things
22:07  plwert: but "ma" does complete to matchit-install, hm
22:07  mgedmin: it's a generic help that conveniently uses matchit as an example
22:07  plwert: ah right
22:08  mgedmin: matchit is http://www.vim.org/scripts/script.php?script_id=39, apparently
22:10  plwert: neat it works, thanks
22:10  plwert: how can I make my existing vim instances notice the new plugin? Do I just source it?
22:11  plwert: looks like that doesn't quite do it
22:23  spiiph: Depends on the plugin. I'd recommend that you restart Vim.
22:31  plwert: I have too many vim instances open to make that a pleasant option
22:31  plwert: guess I should learn how to use vim properly
22:31  plwert: right now I'm using a (gnu) screen window per "theme", with one vim instance that has a bunch of tabs each
22:36  mgedmin: sourcing _should_ be enough
22:36  mgedmin: sessions make restarting less painful, check them out
22:37  mgedmin: basically :mksession foo.vim; :qa; then vim -S foo.vim
22:37  plwert: yeah I have SessionMan, I just tend to forget to use it
22:37  ajpiano: plwert, also you can use pathogen to install plugins, and then that'll provide hooks to reload plugins after installing plugins as well
22:38  plwert: ajpiano: thanks
22:38  ajpiano: can anyone tell me what is the name for what is happening when i press M
22:38  ajpiano: it seems to return me to the last place i was
22:38  mgedmin: I've trouble imagining why a plugin would fail if you :source it -- that's basically what vim does on startup
22:38  mgedmin: ajpiano, :h M
22:38  ajpiano: oh
22:39 * ajpiano sucks
22:39  mgedmin: s/sucks/learns/
22:40  plwert: either way, sourcing it doesn't seem to work
22:40  plwert: restarting does though
22:40  ajpiano: mgedmin: my real question is, what is a key that often use to remap @
22:40  ajpiano: cause @ is annoying as hell
22:40  ajpiano: that people*
22:40  mgedmin: I've never heard of anyone remapping @
22:40  ajpiano: hm
22:41  ajpiano: seems sorta reasonable
22:59  saml: hey, I have macros saved: a, b, and c .. can I save them into a file and load them later?
23:02  momentum: is ther esomething like ":syntax on"
23:02  momentum: but for all buffers and not just the current buffer?
23:02  momentum: ":syntax on" only turns on syntax for current buffer; how can I turn on syntax for all buffers
23:07  DHulme: momentum: :bufdo syntax on
23:08  DHulme: saml: macros are just registers, so you can paste them into any file you choose, and if you have register saving enabled in the 'viminfo' option, they'll be saved and when you quit Vim
23:09  momentum: thanks
23:09  saml: DHulme, how can I view the register so that I can copy it to a file and paste them after i reboot?
23:10  DHulme: see :help "
23:12  DHulme: note that saving registers in .viminfo is on by default, so unless you have some odd configuration you don't need to do anything by default
--- Log closed Wed Nov 10 23:22:47 2010
--- Log opened Wed Nov 10 23:23:10 2010
23:23 --- Users 594 nicks [0 ops, 0 halfops, 0 voices, 594 normal]
23:24 --- Channel #vim was synced in 108 seconds
23:39  Keizer: What's the vim command to start a new line at the bottom of the file
23:39  mgedmin: Go
23:52  FernandoBasso:  quid
23:54  melusinechan: hello
23:55  melusinechan: i'm trying to use nerdcommenter
23:55  melusinechan: but on the doc it uses the letter c ....
23:55  melusinechan: but c is already used by "cut"
23:59  estragib: what
--- Log closed Thu Nov 11 00:00:39 2010
