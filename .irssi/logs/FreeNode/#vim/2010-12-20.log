--- Log opened Mon Dec 20 00:00:06 2010
00:00 --- Users 542 nicks [0 ops, 0 halfops, 0 voices, 542 normal]
00:01 --- Channel #vim was synced in 109 seconds
00:04  mhahe: any ground breaking reason why i should pick up vim rather than simply use a graphical alternative? just want some thoughts here cause i hear alot of praise for it not really understanding why.
00:04  Miesco: http://paste.pocoo.org/show/307184/
00:04  Miesco: I need to align that :/
00:05  fogobogo: mhahe: well, you are really speedy with it and you never need to touch the mouse unless you feel like it
00:05  tvm: mhahe: you will be more effective, after you get into it.
00:06  fogobogo: learning it is a bit hard though
00:06  tvm: well, yes.
00:06  mhahe: can i use the mouse to move around in vim?
00:06  Miesco: How do I search in the buffer that comes from: :map
00:06  fogobogo: mhahe: you might want to read a bit into it. i think that pretty much gives the idea http://vi-improved.org/tutorial.php
00:06  fogobogo: mhahe: yes
00:07  mhahe: what mode do i have to be in?
00:07  fogobogo: doesnt matter
00:07  tvm: since when you need mouse to edit text ?
00:07  fogobogo: will automagically switch to visual
00:07  fogobogo: or just stay in the current if you just scroll
00:07  mhahe: well dunno, i tried clicking where  i want to go doesnt move the cursor
00:08  fogobogo: mhahe: :set mouse=a
00:08  Raimondi: mhahe: :set mouse=a
00:08  mhahe: 'a' standing for?
00:08  fogobogo: :help mouse
00:08  Raimondi: :h 'mouse
00:08  mhahe: thanks
00:08  Raimondi: Too slow here :p
00:09  ws: mhahe:  MacVim?
00:11  fogobogo: mhahe: heres an example of why vim is neat. say you compile failed at line 666. so you can either open the file and scroll with the mouse for a while or just type :666
00:12  fogobogo: of course. you arent forced to
00:12  mhahe: can i edit more than 1 file in a vim session?
00:12  tvm: yes.
00:12  fogobogo: yes
00:12  ws: mhahe:  in more than 3 ways
00:13  fogobogo: vim -p fileA fileB will open them all in tabs for example
00:13  ws: mhahe:  you can have them all open and switch between them with ease
00:13  ws: mhahe:  you can have them in tabs
00:13  ws: mhahe:  you can have them in split windows
00:13  mhahe: say i want to open another file (when at first im already in vim) and open the other in a tab?
00:14  ws: mhahe:  you can have them in different tabs, where each tab gives you a specific "view", e.g. you have a .c and a .h file for editing in two windows in the first tab, then you have a diff between the .c file and its' previous version in the second tab, etc.
00:14  ws: s/its'/its/
00:15  fogobogo: mhahe: i think thats vim --remote file
00:15  fogobogo: mhahe: not 100% sure though
00:15  Miesco: How do I align something like this: http://paste.pocoo.org/show/307184/
00:15  ws: mhahe:  :help tabe
00:16  fogobogo: definitely possible to have only one instance of vim. just forgot how
00:16  mhahe: oh lastly, how do i edit my 'tab key' in vim to be of certain space width... my tab is giving to many spaces right now
00:16  ws: yup, I use autohotkey with gvim --remote
00:16  fogobogo: Miesco: hit tab a few times?
00:16  Miesco: fogobogo: No with :Align
00:16  fogobogo: mhahe: :help tabwidth
00:17  mhahe: thanks
00:17  fogobogo: mhahe: sorry. my bad. its :help tabstop
00:19  saba: Two times today I've got many errors about the line numbering being wrong, resulting in "???" being added to the file at some positions
00:19  ws: mhahe:  keep in mind that translates all tabs in files you open to that length
00:19  saba: I think this is some corruption going on, is it my hard disk?
00:19  ws: mhahe:  look up tabstop vs shiftwidth
00:19  saba: it's very hard to get through, I have to close Vim without saving
00:20  fogobogo: Miesco: no idea. sorry
--- Log closed Mon Dec 20 00:25:15 2010
--- Log opened Mon Dec 20 00:30:38 2010
00:30 --- Users 541 nicks [0 ops, 0 halfops, 0 voices, 541 normal]
00:32 --- Channel #vim was synced in 100 seconds
00:45 --- tmz_ is now known as tmz
00:46  Miesco: Whats a good way to fold code?
00:46  spiiph: syntax folding or fold markers
00:50  Miesco: spiiph: Well markers I like I guess
00:56  Miesco: I need an example with marker folding
00:57  Raimondi: Miesco:  :h fold-marker
01:01  Miesco: Well I meant real code examples
01:01  Miesco: hold on
--- Log closed Mon Dec 20 01:24:42 2010
--- Log opened Mon Dec 20 01:30:08 2010
01:30 --- Users 528 nicks [0 ops, 0 halfops, 0 voices, 528 normal]
01:31 --- Channel #vim was synced in 86 seconds
02:17  sako: anyone use ctags?
02:17  ujihisa: yes
02:17  sako: how do you like it?
02:18  ujihisa: awesome
02:18  sako: i was gonna switch to aptana and try that out over vim for a web app written in php/zend
02:18  ujihisa: cool
02:18  sako: i liked the idea of going straight to a function in a different file by clicking ;0
02:19  sako: ctags sounds like its more efficient, you can hit a key combo to see the function and then able to go back right?
02:19  sako: back to the file you werein..
02:19  ujihisa: yup
02:19  ujihisa: equivalent
02:39  yurifury: Is there an format option which will indent the 2nd line of word-wrapped code?
02:39  yurifury: (2nd and any further lines that is)
02:40  homekevin: You want code to word-wrap?
02:41  yurifury: maybe word-wrap isn't the right word... like when I have a long line of code, and I break it with a newline in the middle, I want the continuing line to have an indent
02:42  homekevin: yurifury: Do you have filetype indent on?
02:42  homekevin: E.g., What does :filetype say?
02:42  yurifury: yes, all 3 are ON
02:43  homekevin: Huh, then the indent plugin must not work very well, I guess.
03:02  Fandekasp: hi
03:03  Fandekasp: I get the error "Unknown option: ballooneval" . Do you know why ? I though "set ballooneval" was the good command to turn on this feature
03:04  Fandekasp: ok found it ... 	{only available when compiled with the |+balloon_eval|feature}
03:07  sako: where wuould you guys put code lik this? :autocmd FileType php noremap <C-M> :w!<CR>:!$HOME/bin/php %<CR>
03:07  sako: that all has to go in vimrc?
03:09  MarcWeber: sako: You'll find it fast there. However you do not always want to write the file.
03:09  ujihisa: sako: you forgot <buffer>
03:09  MarcWeber: Maybe have a look at vim-addon-actions. The idea is to create such a mapping fast. However you can also bind such an action to a key.
03:09  MarcWeber: You want to use <bar> to spearate commands rather than <cr>.
03:09  ujihisa: MarcWeber: hey long time no see
03:10  MarcWeber: in mappings.
03:10  MarcWeber: hi ujihisa
03:13  ujihisa: I made a new cursor movement way yesterday
03:13  ujihisa: last two digit move
03:14  ujihisa: for example if you map the functionality on gl (go to the line)
03:14  ujihisa: when you are on line number 1234567 and typed 50gl
03:14  ujihisa: you'll go to line number 1234550
03:14  MarcWeber: ujihisa: You know about the rel line numbers feature?
03:14  ujihisa: MarcWeber: of course
03:14  MarcWeber: Your solution is an interesting alternative though
03:14  ujihisa: I used that before it was bundled
03:14  ujihisa: and uninstalled
03:15  MarcWeber: When do you jump to line numbers?
03:15  MarcWeber: When navigating in buffers?
03:15  ujihisa: first of all I should have shown the code
03:16  ujihisa: https://github.com/ujihisa/config/blob/master/_vimrc#L1225
03:17  ujihisa: I usually just use j and k for local move and / and ? for middle distance move
03:18  ujihisa: but sometimes I need to use j or k a lot when there is no good search candidate
03:18  ujihisa: my plan is..
03:19  ujihisa: to integrate the last two digit move with voice
03:19  ujihisa: you just have to say "sixty-eight" and the cursor will go to ***68
--- Log closed Mon Dec 20 03:25:01 2010
--- Log opened Mon Dec 20 03:30:27 2010
03:30 --- Users 525 nicks [0 ops, 0 halfops, 0 voices, 525 normal]
03:30  MarcWeber: ujihisa: Instead of / 100 * 100 you could be using [:-2]
03:30  MarcWeber: or even better line('.')[:-len(v:count)].v:count or such
03:31  ujihisa: oh v:count!
03:31  MarcWeber: (I didn't try it.)
03:31  ujihisa: let me try it..
03:31 --- Channel #vim was synced in 83 seconds
03:31  MarcWeber: let half = '1'.repeat('0', len(v:count) / 2
03:32  ujihisa: (/100*100) == ([:-3] * 100)
03:32  MarcWeber: if you add / subst that first before truncating and if you readd it you'll be able to jump to line 151 when being on line 200 by typing 51
03:32  MarcWeber: Why * 100? just append v:count
03:33  MarcWeber: Then you can use 3gl as well
03:33  MarcWeber: instead of 03gl
03:35  ujihisa: oh I got it. you were saying that I should use it as a string
03:35  ujihisa: that's smart!
03:35  ujihisa: MarcWeber++
03:40  natex: hey folks. How can I make vim explicitly open a file in a new buffer (while keeping the current buffer in memory)? I tried using :e FILENAME. It opens the filename but quits the current one.
03:40  homekevin: natex: Files always open in a new buffer.
03:40  homekevin: The old buffer is still in the buffer list. Try :ls
03:41  natex: hmm...
03:41  ujihisa: :new
03:43  natex: I'm confused. :ls shows both files, but if I try :close then vim says "can't close last file". And if I do :wq, Both files are closed and vim quits.
03:43  natex: I am missing something
03:44  ujihisa: :bn
03:44  ujihisa: MarcWeber: finally that became just two line impl. no function definition. that's cool. https://github.com/ujihisa/config/commit/6f2a44b28fa6d3bb78d0e29ea6da086e03baf288
03:45  homekevin: natex: :close closes the window. If it's the last window, this exits Vim.
03:46  homekevin: Or not.
03:46  homekevin: :q does that.
03:46  homekevin: :close just fails on the last window. You have to use :q to exit.
03:46  homekevin: natex: You can use :b N to switch to buffer N
03:47  natex: ujihisa: If I'm working on file1, I'd like to open file2, do work on a file2, "close" file2 (write it out and remove it from memory/buffer), and continue on file1.
03:47  homekevin: N can also be the buffer name
03:47  ujihisa: I myself open file2 from file1 with :new so it doesn't cause problems
03:47  homekevin: natex: You don't usually remove files (buffers actually) completely. But you can if you really want to.
03:48  natex: homekevin: how?
03:48  homekevin: natex: :bwipe
03:48  homekevin: natex: But like the help says, "don't use this unless you know what you are doing"
03:49  homekevin: I'm not sure why you'd use :new to split-edit a different file. I use :sp <file> for that
03:49  homekevin: Oh, I guess you can do that with :new
03:50  natex: so you're telling me that if I work on 30 files, I should just let them sit in a buffer for the weekend?
03:50  homekevin: natex: Why would that be a problem?
03:50  natex: homekevin: well for one, it makes switching back and forth a pain
03:50  natex: homekevin: second, it doesn't seem right
03:51  homekevin: natex: :h alternate-file
03:51  homekevin: If you want something out of the buffer list to make it smaller, you can use :bdelete
03:51  ujihisa: my friend opened 1840 windows http://s3.amazonaws.com/data.tumblr.com/tumblr_krp63vkmGW1qz5y54o1_1280.png?AWSAccessKeyId=0RYTHV9YYQ4W5Q3HQMG2&Expires=1292899897&Signature=PJ3me7OR8DCLubepdIjpSQGDn/s%3D
03:52  natex: ujihisa: that seems immoral
03:52  ujihisa: agree
03:52  natex: homekevin: thanks. That might work
04:00  infid: any idea why when i open a file i'm getting 'Error deteced while processing function <SNR>25_SetupBuffer..160: line 13: E688: More targets than list items'?
04:01  MarcWeber: http://dpaste.com/288474/ @ ujihisa
04:01  MarcWeber: infid: No, grep your .vim for that SetupBuffer function. Then you know which plugin is cuasing that error.
04:02  MarcWeber: If you don't find its in :echo $VIMRUNTIME.
04:02  MarcWeber: Or try :h E688
04:02  ujihisa: MarcWeber: cool. I didn't know that v:count still alive after deleting the range before the command
04:02  MarcWeber: http://vim.wikia.com/wiki/Mapping_keys_in_Vim_-_Tutorial_(Part_2) @ ujihisa
04:03  MarcWeber: I know how to google it :)
04:03  MarcWeber: Have you seen the -= 2* half ?
04:03  MarcWeber: So if you're on line 100 and you type 80 you'll jump to line 80 instead of 180
04:04  ujihisa: that's not what I originally wanted, but sounds very handy
04:04  ujihisa: I'll definitely add the functionality on another key
04:05  ujihisa: so I can use both manually
04:05  infid: MarcWeber: it's the vcscommand.vim plugin
04:06  MarcWeber: infid: Do you understand the help file about the error message?
04:07  ujihisa: http://vimjobs.heroku.com/
04:07  ujihisa: oops
04:07  infid: it doesnt seem to like the fact that i'm editing a file that was added but not committed
04:07  ujihisa: mispaste
04:07  infid: cause it's not doing it on other files
04:07  infid: makes sense at least
04:07  infid: thanks
04:08  MarcWeber: https://github.com/MarcWeber/vim-addon-other/commit/18b92bf09ad2e04beaa10defbeaca337a68a71b3 @ ujihisa :)
04:08  MarcWeber: infid: Try :let [a,b] = [1,2,3]
04:08  ujihisa: MarcWeber: ;)
04:09  infid: i get it thanks
04:09  MarcWeber: infid: Do you know how to debug it?
04:09  MarcWeber: add a "debug" word at the beginning of that line.
04:09  MarcWeber: Then you can use s,n,c (step,next,continue) or echo and debug what's happening there.
04:11 --- Natch is now known as Natch|
04:11  homekevin: I was sort of guessing that it wasn't his script producing the error.
04:39  cgcardona: how do I copy text from within vim and paste it into the browser?
04:39  spiiph: "*y
04:39  cgcardona: yank isn't working
04:39  spiiph: Sorry, "+y
04:40  cgcardona: so highlight it first with visual?
04:40  spiiph: And :h 'clipboard
04:40  spiiph: cgcardona, or use a motion.
04:44  cgcardona: so I need to highlight the text and the type "+y ?
04:44  cgcardona: that doesn't seem to allow me to paste the text into the browser
04:45  spiiph: It should, if you're on Windows or have a vim compiled with X support
04:45  deryni: And vim can talk to the X server.
04:46  cgcardona: i'm on a chromebook
04:55 --- peth_ is now known as peth
05:22 --- Remear_ is now known as Remear|mbp
06:00 --- baoist_ is now known as baoist
06:28  zomg: Anyone use bash (or zsh) in vim mode?
06:29  zomg: oh sorry, I think it's actually vi-mode but in any case :)
06:29  zomg: I'm just wondering why it sometimes displays a list of my command history when I hit esc and then /
06:29  zomg: It's kinda annoying when I'm trying to search through it and it decides to show the list instead
06:30  frogonwheels: zomg: being too quick and it interpreting it as a different key??
06:31  zomg: it actually sometimes happen even if I wait a moment before hitting / :)
06:38  eikenberry: zomg. I don't, but if you use zsh for this you could try #zsh. It is generally a helpful channel.
06:40 --- baoist_ is now known as baoist
06:47  cgcardona: i am wanting to install a markdown vim script but I don't seem to have a VIMHOME directory - do I need to create it in my root directory or can I just put the mkd.vim file in my /root/ directory?
06:47  Raimondi: Create it
06:49  Raimondi: in $HOME/.vim
06:56 --- daniel__ is now known as daniel
07:11  bairui: hola! :)
07:13 --- abbe is now known as AFK
07:13 --- AFK is now known as abbe
--- Log closed Mon Dec 20 08:31:21 2010
--- Log opened Mon Dec 20 09:19:44 2010
09:19 --- Users 530 nicks [0 ops, 0 halfops, 0 voices, 530 normal]
09:21 --- Channel #vim was synced in 87 seconds
09:41  burhan: does vim support function help/autocomplete?
09:43  burhan: does vim support function help/autocomplete?
09:45  spiiph: burhan, :h omni-completion
09:45  spiiph: Actually, :h ins-completion
09:47  burhan: ah thanks.
09:53  FernandoBasso: Deos the 'user manual' have any entry for :mksession or just in the 'reference manual'?
09:54  bairui: :help usr_toc and then search for session = 21.4
09:54  FernandoBasso: bairui: Very correct. Thanks.
09:54  bairui: np
10:04  zikzak: I would expect that ":echo matchstr("foo123bar","[0-9]\+") would result in "123", but it gives an empty string. Does Vim handle regexp expression in an other way than sed?
10:05  bairui: zikzak: use   \\+   inside "
10:07  zikzak: bairui: Thanks! Happy quoting ... I should have thought about that =:)
10:07  bairui: it bites us all now and then :)
10:11  FernandoBasso: When I have at least two :splits, if I then do a :vsplit, the new window gets on the height of the split I was on. Is there a way to make a :vsplit full height in this case?
10:13  bairui: FernandoBasso: it takes a width, I guess you could just make that 999 ? <-- wrap that in a map ?
10:14  FernandoBasso: bairui: But then one of the :splits would became only one line, because the :vsplit would smash it.
10:15  malesca: FernandoBasso: once you have the new split you can do ctrl+w h to make it full height on left, or ctrl+w l (lower-case L) on right. But I'm sure there's a quicker way I don't know about.
10:15  bairui: i think there's a way to say 'make this split take up the whole screen', but I forget how. To the docs!
10:15  malesca: ctrl+w H and L, sorry
10:16  bairui: see also, :topleft and :botright
10:18  FernandoBasso: :edit file1, :split file2 *then* :vsplit file3 <-- It gets the height of file2 split. I would like it to get the vim screen height, without making file1 buffer one-liner.
10:19  FernandoBasso: bairui: Yeah. :topleft 23vsplit does it.
10:20  bairui: cool
10:21  FernandoBasso: I wanted to make a map to open :Explore always full height, no matter what other splits I have.
10:21  factor: Does anyone have a link showing me how to make a vim script menu option that would run a command to a directory of choice and shows its feed back in a window?
10:22  FernandoBasso: gim is saying 'as superuser' at the title bar. How come?
10:22  FernandoBasso: /gim/gvim/
10:26  FernandoBasso: Oh. It is a bug.
10:29  FernandoBasso: I don't know when did this 'as supperuser' bug started. I started gnome today, after a long time using only openbox... However, gvim --nofork stops that line.
10:30 --- silex is now known as Silex
10:33  zikzak: cursor() is mentioned in the help, but ":let line = 1000 | cursor(line,1)" gives "Not an editor command: ...". Is there an other way to position the cursor on a specific line?
10:34  zikzak: :version
10:34  zikzak: gvim 7.1 under Debian Lenny
10:35  strull_: zikzak: you need call cursor(...)
10:38  zikzak: strull: Thanks! But why? I use other functions, like matchstr(), without call.
10:38  strull_: zikzak: I doubt this. Example ?
10:40  zikzak: strull, :let line = getline(".") | echo line
10:40  strull_: yes, but that's another context
10:50  FernandoBasso: After an <expr> ":Explore" how can I pass a directory so that :Ex opens that dir?
11:23  nordin: hello guys, I have a problem since a long time ago. I want to add standard C libs to ctags, so when editing a C file, I can I can get autocompletion for C functions using omnicppcomplete plugin. The thing is, I want to add C standard library to ctags, but how can I do that just for C files. All examples show --c++-kinds=+p. Does this means it is working for C files too or just C++ files?
11:26  seku: how do i paste from x clipboard instead of vim register?
11:27  jadz0r: seku, if you are using gvim/macvim you can use "+P
11:27  jadz0r: that is literally " + p (or P)
11:27  seku: jadz0r: thanks
11:38  nordin: It's amazing that such questions can't be answered, also on google you can't find nothing about it, just that stupid standard example they use the allo over the internet...
11:43  FernandoBasso: nordin: Try vim_use on google groups.
11:43  Fandekasp: hi
11:44  nordin: FernandoBasso: thnx my friend, sorry being frustrated, maybe because it's monday...
11:44  FernandoBasso: Here, we ask something, and if it happens that people don't see it soon, it just gets old in the irc lines, and not many people scroll back I think.
11:44  nordin: yes I guess so
11:45  FernandoBasso: Mailing lists takes longer to be answered, but generally people actually see the questions.
11:45  Fandekasp: I have vim @7.3.47_0+python26 (active)   installed with Macports, and I'd like to have the +balloon_eval option on my vim. Do you know how can I install it?
12:06 --- airborn_ is now known as airborn
12:10 --- Silex is now known as silex
12:10  s8: I need an awesome status line for my lovely editor. Who can provide me one?
12:12  bairui: s8: there is a .vimrc in here: https://github.com/dahu/LearnVim   that contains a (awesomeness is in the eyes of the beholder) status line.
12:14 --- silex is now known as Silex
12:23  s8: bairui, Thanks~!
12:23  bairui: np
12:24  bairui: nordin: out of curiosity, how are you handling C omni at the moment? What plugin are you using?
12:25  bairui: and, nordin, did you read   :help ft-c-omni   ?
12:29  nordin: bairui: I use omnicppcomplete.
12:31  nordin: bairui: I did the following: ctags –R --c++-kinds=+p --fields=+iaS --extra=+q /usr/include
12:31  bairui: and is that working out for you?
12:32  nordin: This was taking so long that I terminated the process. Checked the filesize and it was already 250 MB. Is that normal to have such a huge tag-file?
12:32  bairui: dunno... long time since I played with C and C tags... I doubt it though. If you're really coding in C, why have the --c++ option?
12:32  bairui: did you read   :help ft-c-omni   ?
12:33  nordin: bairui: because that's the only example I found, that is what makes me frustrated...:S
12:33  bairui: only example, eh? We often hear this, and people haven't even read Vim's own solution in the help files. :)
12:34  nordin: bairui: I've read it, but that's without any flags, so it will read everything, which will make a tag file much bigger.
12:34  bairui: > 250MB ?
12:35  nordin: by the way, help says just this: ctags -R /usr/include /usr/local/include
12:35  nordin: I'm not joking
12:35  nordin: yes, it took so long I killed the process, that's why I looked at the size, because it took so long.
12:35  bairui: with one slight variation - that it stores the resulting tags file and then adds that reference to the tags option later.
12:37  bairui: i just ran the ctags command in the docs and it took <40s and created a 44MB file. Perhaps my C libs a bit light-weight...?
12:37  nordin: I think too, I have also BOOST which is huge too...
12:38  bairui: urgh... ok - so, with BOOST, I noticed something a few seconds ago... hangon...
12:38  nordin: that's why I just want standard C lib, but it's like they dumped all libs together...
12:39  bairui: dunno if this helps, but this page mentions BOOST: http://vim.wikia.com/wiki/VimTip1608
12:40  nordin: I alreay found that 100 times...
12:40  nordin: but thnx for your help
12:40  bairui: np
12:41  bairui: so, when you say you only want the standard C lib... what, exactly, do you want? I mean, what subset of /usr/include are you after? I imagine if you can answer that (with a glob or something) then you can have ctags take only those files/dirs.  No?
12:46  ksandstr: i've taken to having a ctags target in a Makefile, and adding libraries' header file paths to that command line, rather than having a 700-megabyte ~/.vim/systags
12:49  FernandoBasso: I need to make a split, and *then* open :Explore in that new split. Any help on this (my try is not working). So far I have
12:49  FernandoBasso: nnoremap <expr> <LocalLeader>v ":topleft 29vsplit :Explore ~/Info_Tech/Vim/"
12:52  nordin: bairui: I can check all the libs I'll need it, but I was hoping someone else already did that. But I'm afraid I have to figure that out myself. When I've done that, I'll put it on my blog...
12:53  bairui: nordin: sounds like a plan. Future C only coders will be grateful. ksandstr also offered his advice above too, in case you missed that.
12:54  bairui: FernandoBasso: :Explore...? Is that the old netrw plugin?
12:54  FernandoBasso: I think so.
12:55  dav1d: is there a way to show a vertical thin colored line after the 79th char?
12:56  FernandoBasso: Basically, I want to run two commands in one mapping: :topleft 29vsplit *and* :Explore ~/Info_Tech/Vim.
12:56  FernandoBasso: dav1d: Don't you want textwidth instead?
12:57  dav1d: FernandoBasso: I am new to vim, let me google textwidth ;)
12:57  FernandoBasso: No!
12:57  nordin: bairui: sorry I missed that. But ksandstr is totally right, 700 MB, damn, that's so inefficient.
12:57  FernandoBasso: :help textwidth is better.
12:57  bairui: dav1d: :help 'colorcolumn'
12:57  dindinx: dav1d: :help 'cc'
12:57  dav1d: thx
12:58  FernandoBasso: Wow! I didn't know about colorcolumn. Wonderful.
12:58  bairui: np
12:58  dav1d: :)
12:58  FernandoBasso: Still, vim can't prepare dinner for me.
12:59  FernandoBasso: dav1d: :set ruler, :set showcmd, and, I still think you may want textwidth.
12:59  bairui: FernandoBasso: technically, you *could* write a Vim plugin that used an online pizza ordering service...   :Order pepperoni   :)
12:59  dav1d: xD
12:59  FernandoBasso: :D
12:59  dav1d: FernandoBasso: does textwidth color the text which is too long?
12:59  nordin: bairui: it's actually weird. I assume a lot of C programmers use Vim, so I'm a bit surprised why it's so hard to find a solution for that.
13:00  bairui: nordin: not speaking for the great unwashed, but I don't actually use omni-complete...
13:00  bairui: I suspect a lot of C coders don't either...
13:00  FernandoBasso: dav1d: It automatically wraps text to you.
13:00  FernandoBasso: for* you.
13:01  dav1d: FernandoBasso: I'll try it thx
13:02  nordin: if I can't use omnicppcomplete, than Vim is not suitable editor for me. Because completion makes life so much easier than without. Image to find out tons of function calls and remember the arguments etc... no way...
13:04  bairui: hmm... knowing/seeing the call signature of your libraries is one thing. There is the preview window for that. I suspect most just use ctrl-n/p. That's certainly the feel I get from those here on #vim. Just so I'm clear: ctags+preview-window+ctrl-n/p = good.
13:06  bairui: however, if you want a real opinion (remember, I don't cut C anymore, and haven't for >6 years), you might like to check in later and see if someone else has an alternate opinion to share. As for me, I gotta hit the sack now. G'night, all.
13:06  nordin: thnx bairui
13:06  nordin: goodnight
13:07  kongo: nordin: maybe you also want to check out another completion plugin using the clang compiler
13:07  kongo: nordin: I have not tested it myself but maybe it's an option for you
13:07  kongo: nordin: it should be somewhere on github and/or vim.org scripts
13:08  kongo: nordin: https://github.com/Rip-Rip/clang_complete
13:09  dav1d: another question, I've got the vim configs from a friend. This configs changes the bg-color of to long lines (more then 80 chars). Any ideas how I can disable this behaviour?
13:09  dav1d: http://upload.dav1d.de/img/3073bf3c
13:09  FernandoBasso: Can NERDTree bookmard directories?
13:11  nordin: kongo: thnx my friend
13:12  nordin: I already found that, when I have time I
13:12  nordin: try it out
13:12  kongo: ah ok
13:12  dav1d: ah ok I found it in the .vimrc
13:14  kongo: regarding your tags files, I have got several small tags files for c/c++ in my .vim directory and add them to the 'tags' setting as I need them
13:14  kongo: nordin: ^
13:15  nordin: kongo: that sounds logic, this way you can several types of libs, like qt, etc...
13:16  kongo: nordin: yes, that's exactly what I am doing
13:16  dav1d: How can I fix E510: "E510: Can't make backup file (add ! to override)"
13:16  FernandoBasso: dav1d: It is not a good idea just copy a vimrc file that you don't understand.
13:17  FernandoBasso: Anyway, you just have to create the backup files directory.
13:18  dav1d: FernandoBasso: oh ok, I thaught vim saves the backups in the same directory as the file
13:18  FernandoBasso: dav1d: That behaviors can be configured.
13:19  FernandoBasso: dav1d: Create a dir where the output of this command points to --> :set backupdir?
13:19  dav1d: FernandoBasso: thank you, just found it in the .vimrc :)
13:19  dav1d: set backupdir=~/.vim/sessions
13:20  FernandoBasso: dav1d: :help usr_01 to usr_10 covers most of what one uses vim for in everyday tasks.
13:21  FernandoBasso: And there is also the dir for .swp files. I same mine in ~/.vim/tmp.
13:21  dav1d: FernandoBasso: I've already seen this online. I'll read them and dont annoy you with my beginner questions
13:22  FernandoBasso: dav1d: Oh. No. That is not the case. I don't care about beginner's questions. I am one myself.
13:22  FernandoBasso: I'm just trying to help.
13:22  dav1d: You're a beginner...so I'll be a vim beginner for the next 10 years^^
13:28  FernandoBasso:  :mksession is not saving the help windows, although it is in sessionoptions. Any idea?
13:30  Silex: FernandoBasso: it's not even in the generated .vim?
13:30  FernandoBasso: I am exactly looking for that at this moment.
13:31  FernandoBasso: Silex: I have this in line 232: edit /usr/share/vim/vim73/doc/help.txt
13:33  Silex: FernandoBasso: try that line in vim, then find why it doens't work when you load your session
13:33  Silex: FernandoBasso: I have an idea tho, I think it's because it's loaded as a nobuflisted buffer
13:33  Silex: help buffers are typically not listed with :ls
13:34  FernandoBasso: Silex: But when I load that session, I do a :ls! and it does not show either.
13:37  Silex: FernandoBasso: does :edit /usr/share/vim/vim73/doc/help.txt load the file?
13:38  Silex: how do you load the session?
13:41  FernandoBasso: "/usr/share/vim/vim73/doc/help.txt" [Read only] 221 lines, 8239 characters
13:42 * Silex goes on an guess it means a "yes" to the first question, and now waits on the answer for the 2nd question
13:43  FernandoBasso: Oh my. I did edit from a terminal, not from vim. :/ Sorry.
13:44  FernandoBasso: Oh. Sorry. I answered the phone and missed your question. Let me scroll back.
13:45  FernandoBasso:  :edit /usr/share/vim/vim73/doc/help.txt *does* load the file. I load the file with :source ~/.vim/my_sessions/session.vim
13:46  FernandoBasso: Silex: ^
13:47  FernandoBasso: So, the help file is in 'my_session.vim'. After I source my_session.vim :ls! does *not* show the help file.
13:48  FernandoBasso: Perhaps I have to make the help become 'listed' (instead of unlisted) before I :mksession?
13:49  Silex: FernandoBasso: I'd look if :messages tells anything
13:49  Silex: can you paste the session.vim somewhere?
13:52  FernandoBasso: Silex: Just a momment.
13:58  FernandoBasso: Silex: Sorry for the delay. http://metabox.it/KjDl1 -> http://metabox.it/xMHND --> http://vim.pastey.net/144113 <-- the session file.
14:01  FernandoBasso: As I am translating the help to Brazilian Portuguese, it really helps to have a session saving from where I stopped, my tips, my notes, since I don't have full time for this goal.
14:02  Silex: FernandoBasso: and :echo &sessionoptions reports what?
14:03  Silex: FernandoBasso: anyway, I see it does "setlocal nobuflisted"
14:03  Silex: and then it event probably does "silent exe 'bwipe ' . s:wipebuf"
14:03  Silex: *even
14:04  FernandoBasso: No. It does not have setlocal nobuflisted'. Although it has 'help'...
14:04  FernandoBasso: There is the problem...
14:05  Silex: well line 262 seems to set nobuflisted
14:06  Silex: but based on the behavior you describe, I'd not be surprised if helps buffers are bwipeout'ed
14:07  FernandoBasso:  :h sessionoptions does not mention 'setlocal nobuflisted'.
14:08  Silex: what are you talking about? I'm wasn't talking about sessionoptions
14:08  Silex: I asked you what the value of sessionoptions was in your vim
14:08  Silex: then explained why session.vim probably didn't reload the help file
14:10  FernandoBasso: Well, I don't have sessionoptions in ~/.vimrc. :echo &sessionoptions shows  blank,buffers,curdir,folds,help,options,tabpages,winsize.
14:11  FernandoBasso: Silex: How would help buffers be wiped out?
14:11  Silex: FernandoBasso: I'm just guessing they based on the behavior you describe
14:11  FernandoBasso: Who would be wiping them out?
14:12  Silex: just see the lines I refer to in the session.vim
14:12  Silex:  "silent exe 'bwipe ' . s:wipebuf"
14:12  Silex: it depends on some variable tho
14:12  Silex: anyway, let's try what you said
14:13  Silex: well, by me it reloaded the help buffer
14:13  FernandoBasso: Hmm. Line 370 in session.vim.
14:13  Silex: so I don't know what's going on by you
14:13  Silex: try it again?
14:13  Silex: start a new vim, type :h pattern, then :mksession foo.vim, then quit vim, run vim foo.vim, then :so %
14:15  FernandoBasso: Then it loads.
14:16  FernandoBasso: And if I do vim ~/.vim/my_sessions/session.vim and inside vim I :source % it *does* loads everything correctly.
14:16  Silex: heh
14:18  FernandoBasso: Commenting those 3 if lines solves the 'problem'.
14:18  FernandoBasso: Is this a bug/
14:18  FernandoBasso: ?
14:19  Silex: FernandoBasso: apparently viminfo affects the behavior..
14:19  Silex: :h viminfo
14:21  FernandoBasso: Silex: Okay. I really appreciate you help. You spent a lot of time helping me. I am eve a bit ashamed of making you waste your time... Anyway, thank you a lot. I'm going to prepare the meal for the kids, and then I will read :h viminfo. Thanks a lot.
14:21  Silex: you're welcome
14:22  FernandoBasso: Thank you.
14:23  Silex: FernandoBasso: tho the behavior you have suggest a bug I think
14:23  Silex: because it's unlikely you have viminfo set to a setting that affects it, or maybe you open a really big numbers of buffers?
14:24  FernandoBasso: Silex: I seldom open more than 8 to 10 buffers.
14:28  Silex: FernandoBasso: maybe you found a vim bug and need to upgrade? anyway this is very helpful http://vimdoc.sourceforge.net/htmldoc/usr_21.html
14:28  FernandoBasso: I mv'ed .viminfo{,.bkp}, created a new session, and still help is not loaded.
14:29  FernandoBasso: Silex: I run vim73 in arch linux. Is there a new version? A beta one?
14:29  Silex: FernandoBasso: no clue, just guessing what the problem might be
14:29  FernandoBasso: Okay.
14:30  Silex: FernandoBasso: it looks like the "classic" way of loading a session file is vim -S foo.vim
14:30  Silex: but if it works one way and not another I suspect you found a bug
14:30  FernandoBasso: It does not work with -S either.
14:31  Silex: if I was you'd start vim from scratch, :e/:h the things you want, then create a new :mksession file
14:31  Silex: *you I'd
14:32  Silex: and if it still didn't work, I'd remove all the :bwipeout things from the session file and check if that fixes it
14:32  FernandoBasso: Again, in the new session, with a fresh viminfo file, only deleting those 3 if lines that wipe out the help work.
14:32  FernandoBasso: I started from scratch a few times already.
14:33  FernandoBasso: Only deleting or commenting those likes do the job.
14:33  Silex: Well, vim thinks he has to wipeout those buffers then. Not sure why
14:33  FernandoBasso: Silex: Okay. No problem at all. I'm glad I can just remove those lines. I'll investigate this more later. Thanks lot.
14:34  Silex: the dev list has a lot of messages about sessions problems
14:34  Silex: I guess it's not perfect yet
14:34  FernandoBasso: May be.
15:00  Fandekasp: hi
15:01  Fandekasp: I tried to add this http://paste.pocoo.org/show/307380/ in my vimrc, so that I can put a sign in my file, but when I try it, I get the following error "E474: Invalid argument" . Do you know what's wrong ?
15:03  mgedmin: xchat is wrong
15:03  mgedmin: not opening links on clicking, grr
15:06  mgedmin: Fandekasp, oh, you're missing a space in front of file=
15:07  mgedmin: you end up doing :sign place 08111987 line=1234name=information file=
15:07  mgedmin: (in place of name=, sorry)
15:07  mgedmin: in *front* of name=, augh
15:07  Fandekasp: erf you're right
15:08  Fandekasp: :D it works fine now, thanks mgedmin !
15:13  dsf: Hello there
15:13  dsf: I'm trying to configure vim in a new machine.
15:15  dsf: In my well configured machine I have my perl maps in files: .vim/after/ftplugin/{perl_maps.vim, perl_imaps.vim, perl.vim}
15:17  dsf: In my new machine when I open a *.pl file the perl maps are not loaded. The perl syntax is loaded so I think vim knows that it's working with perl files. What could be causing this?
15:17  dsf: The .vim* files are similar in both machines.
15:19  mgedmin: dsf, do you have :filetype plugin on?
15:19  dsf: mgedmin, I'll check that...
15:20  dsf: mgedmin, It seems that I don't
15:21  dsf: mgedmin, should I do set filetype plugin ?
15:21  mgedmin: if you want files in ftplugin/* to work, yes
15:21  mgedmin: the incantation is :filetype plugin on
15:21  mgedmin: actually, :filetype plugin indent on, if you also want indentation plugins
15:22  dsf: mgedmin, The funny thing is that the system works in my default machine.
15:22  dsf: mgedmin, with the same configuration.
15:23  mgedmin: different /etc/vimrc maybe?
15:23  dsf: mgedmin, no
15:23  dsf: mgedmin, They are exactly the same
15:24  mgedmin: well, :filetype can tell you if it's on or not
15:24  mgedmin: unfortunately it can't tell you why ...
15:25  dsf: mgedmin, When I do  in .vimrc: (set filetype plugin ident on) I get the error: E518: Unknown option: plugin
15:25 * mgedmin sighs
15:26  mgedmin: the incantation is :filetype plugin on
15:26  mgedmin: no :set in front of it
15:32  dsf: Thank you mgedmin. Everything is working now. ;-)
15:40  fogobogo: anyone using ctags?
15:41  fogobogo: how would you get a decent tags file that doesnt include all other libs for glibc?
15:44  mgedmin: all other libs?
15:45  fogobogo: well. whatever is in /usr/include
15:46  fogobogo: but cluttered there
15:47  fogobogo: hmm.. probably better to just leave it as it is
15:49  mgedmin: mhm
15:50  mgedmin: ctags $(dpkg -L libc6-dev|grep [.]h$) might work
15:50  fogobogo: nyah... might work
16:22  mtvee: anyone use vim-autoclose?
16:24  FernandoBasso: I am.
16:25  mtvee: FernandoBasso were you getting errors when inserting more than 4 quotes?
16:25  FernandoBasso: mtvee: Give an example.
16:25  guyzmo: hi
16:25  guyzmo: anyone has a doc/tuto to rtfm for writing a simple omnicomplete function ?
16:26  mtvee: in python docstring for instance """""" cause an error with autoclose. just wondering if you have the same issue
16:26  jerojasro: guyzmo: :help complete-functions
16:27  FernandoBasso: mtvee: I don't think so. What errors?
16:28  iaj: hmmm   :e ++enc=utf8  should convert the encoding from current (latin1) to utf-8.. no?
16:28  mtvee: FernandoBasso E684: list index out of range: 6
16:29  FernandoBasso: And if you disable autoclose?
16:29  mtvee: no error
16:30  FernandoBasso: So, it is surround's fault. For sure. Try emailing the author.
16:32  jerojasro: surround?
16:32  FernandoBasso: Yeah.
16:32  jerojasro: wouldn't it be that autoclose plugin's fault?
16:33  FernandoBasso: mtvee: Surround or autoclose?
16:33  mtvee: autoclose
16:33  FernandoBasso: I mistyped the plugin. Sorry.
16:33  mtvee: np ;)
16:48  iaj: when I try to :e ++enc=utf8   I get that response:  -
16:50  fogobogo: could be morse
--- Log closed Mon Dec 20 16:50:57 2010
--- Log opened Mon Dec 20 16:51:40 2010
16:51 --- Users 565 nicks [0 ops, 0 halfops, 0 voices, 565 normal]
16:52 --- Channel #vim was synced in 72 seconds
16:53  mgedmin: iaj, :e ++enc=utf-8 loads a utf-8 file (and converts it to vim's internal encoding)
16:53  iaj: mgedmin: i got a file open and try :e ++enc=utf8 to get latin1 converted to utf8... is that wrong?
16:54  iaj: "foo.csv" [NOT converted][ILLEGAL BYTE in line 1] 132326L, 35448806C
16:54  iaj: that's what I get tho: (
16:54  mgedmin: if the file is latin-1, you should be doing :e ++enc=latin1
16:54  iaj: mgedmin: hmm and how can I convert it to utf-8 then?
16:55  mgedmin: once you've loaded it and made sure all the characters are displayed correctly, do :w ++enc=utf-8
16:55  mgedmin: :e ++enc is for overriding detection, :w ++enc is for conversion
16:56  iaj: mgedmin: thanks that worked out :)
17:03  Silex: is there a plugin to automatically reformat C source using if(foo){ to code with { on a line of their own?
17:03  jerojasro: you can change the program that does the formatting
17:04  jerojasro: :help 'fp'
17:04  jerojasro: I think the indent program does that
17:04  Silex: :%s/{/\r{/ followed with gg=G worked
17:06  fogobogo: Silex: there are seperate tools. indent and astyle
17:06  Silex: okay, so outside of vim... thanks
17:07  fogobogo: Silex: astyle is better imo. indent always cluttered the files with ^M
17:07  spiiph: That sounds like pebcak
17:07  Silex: ?
17:07  Silex: ah, about indent
17:08  fogobogo: actually not. it up revealed no solution
17:08  fogobogo: *googling it up
17:08  spiiph: Oh
17:08  spiiph: Strange
17:10  ThiefMaster: how do i search+replace not only in the active buffer but in all open buffers?
17:11  kurkale6ka: :bufdo
17:11  giany: How can I highlight a different word than the one I'm searching?
17:11  kurkale6ka: :match
17:12  giany: kurkale6ka: i'm not sure I understand
17:12  kurkale6ka: giany: :h:match
17:13  fogobogo: what was that "look up function manpage" command again?
17:13  kurkale6ka: K?
17:13  fogobogo: ctrl + something
17:13  fogobogo: ah K
17:13  fogobogo: thanks
17:18  Evanlec: what is this when i open a large text file, "E363: pattern uses more memory than 'maxmempattern'
17:18  jamessan: Evanlec: what filetype?
17:18  Evanlec: vim thinks its an asciidoc
17:19  Evanlec: but it does that for most .txt files
17:19  lucasoman: morning
17:19  Evanlec: its just a pipe delimited database dump file
17:19  heoa: reading messy javascript thing and cannot make head-or-tail about div-blocks, how can you get matching pairs in Vim for the blocks?
17:19  jamessan: Evanlec: then the asciidoc syntax file probably has a greedy syntax match that's causing problems
17:20  Evanlec: jamessan: yea probably you are right
17:20  Evanlec: jamessan: i could also increase the maxmempattern i spose
17:22  Evanlec: well i upped the limit...no error but filee took a noticeable moment to load
17:24  heoa: actually it is just one regex   <div[^>]*>.*</div>    and now I need to tell it somehow that until the Nearest </div>, wondering, ideas?
17:24  consumerism: i'm trying to open several files i am finding with grep in vim. i've got: grep -l whatever | vim -o, but that doesn't work. what should i be doing?
17:24  fogobogo: Evanlec: asciidoc syntax highlighting is immensly slow
17:24  Evanlec: jamessan: damn...maybe that was a bad idea...
17:25  fogobogo: Evanlec: :set ft=none
17:25  Evanlec: fogobogo: ah...but how can i make that stick?
17:25  fogobogo: no idea :/
17:25  Evanlec: i want it to stop thinking all .txt files are asciidoc
17:26  consumerism: vim $(grep etc) does it ok
17:26  consumerism: so nvm
17:26  joeytwiddle: i use a grep.vim plugin
17:26  joeytwiddle: but i think vim might have gotten native support for all its features now
17:27  jtmusky: need help with latex, following a tutorial but it is asking me for me to click on the toolbar. I don't have a toolbar.
17:28  joeytwiddle: try :gui
17:28  Evanlec: heh
17:28  jtmusky: I turned off my toolbar in the gui mode, is there a hot-key I can use instead
17:29  wavded: hey vim gurus, i am wondering if you guys know of a good plugin to search within a project (like a grep), seems like there are a lot of options, wondering which ones you guys use?
17:29  jamessan: Evanlec: well, it doesn't do that by default, so you've added something that makes Vim think that. track it down and kill it ;)
17:29  joeytwiddle: jtmusky: it's likely the toolbar click just calls a function, but i don't know what the function's name is ;)
17:29  Evanlec: jamessan: yea...true
17:29  joeytwiddle: you could try :call something<Tab> to search for it
17:30 * joeytwiddle is offering file grep.vim [0M] (type !grab to get it)
17:30  jtmusky: in the tutorial it is asking for "TeX-Suite > Packages > amsmath Options" and
17:30  wavded: type !
17:30  wavded: !
17:30  wavded: haha, obviously I don't know how to grab that file joey :)
17:30  joeytwiddle: i guess it was this one: http://www.vim.org/scripts/script.php?script_id=311
17:31  wavded: ok yes I was looking at this one, will look more into it, thx
17:31  graywh: what does it add over :grep ?
17:31  joeytwiddle: oh but, i had to adapt it, so i could use globs: * -r
17:32  joeytwiddle: graywh: i think the plugin was around before native :grep which i know little about >.<
17:32  wavded: didn't know there was a native grep, will try that firs
17:32  wavded: t
17:32  jtmusky: I don't know what to look for on the Tex ":call" tab
17:33  joeytwiddle: ctags can be a good way of navigating around too (e.g. jump-to-definition-of-word-under-cursor)
17:33  joeytwiddle: exuberant ctags i should say
17:34  wavded: yes, i have ctags (exuberant), i primarily dev in JS, and its a little finnicky  but still working with it
17:34  joeytwiddle: ah yeah, ctags works better for C than JS ;)
17:35  joeytwiddle: i use taglist too of course!
17:35  graywh: :grep was added in 5.2, which was released about 4 years before that plugin
17:37  wavded: you guys prefer :vimgrep or :grep ?
17:38  wavded: i know some people like awk
17:38  joeytwiddle: oh hehe
17:38  kurkale6ka: awk is not used for grep purposes
17:45  graywh: perhaps he meant ack
17:45  lucasoman: i released my first vim plugin :-D
17:47  spetrea: vim and gvim show :colorscheme desert completely different on my machine, how can I have them show the same stuff ?
17:48  graywh: use csapprox with a 256-color terminal
17:48  tangledhelix: if you have 256 colors in the terminal, you can also just get desert256
17:49  tangledhelix: http://www.vim.org/scripts/script.php?script_id=1243
17:51  FernandoBasso: Okay. I have a vsplit with :Explore on the left, and an empty buffer on the right. Can I somehow open the file on the :Explore on this right empty buffer?
17:51  spetrea: graywh , tangledhelix how may I find if I'm using a 256-color term ? I'm using gnome-terminal
17:51  graywh: it is
17:51  graywh: just need to set TERM=gnome-256color
17:52  jamessan: vimgor: gnome-terminal
17:52  vimgor: A terminal that falsely claims to be xterm and gives users no way to change that without recompiling. If you're trying to get Vim to display more colors in gnome-terminal, make sure you have a gnome-256color terminfo entry ('tput -Tgnome-256color colors' says 256) and use the following snippet in your shell init file: http://vim.pastey.net/116135
17:52  graywh: yeah, that
17:57  sleepynate: FernandoBasso: :Vexplore
17:57  tangledhelix: graywh:  also make sure you don't have a bad t_Co. if t_Co is not 256 then you don't have 256 colors going. it should figure it out on its own, but you can check with :set t_Co?
17:57  sleepynate: FernandoBasso: and :help Vexplore
17:57  homekevin: The gnome-256color terminfo is in ncurses-term on debian-like systems
17:58  tangledhelix: seems that many people have t_Co=16 in their .vimrc, taken from online examples
17:58  homekevin: See, that would be dumb.
17:58  graywh: tangledhelix, more often, people have t_Co=256
17:58  spiiph: Many people are stupid, and don't know how to solve the problem. :)
17:58  tangledhelix: graywh: not the people i tend to run into :)
17:58  graywh: hang out on #vim more
17:59  tangledhelix: graywh: i meant IRL...
17:59  homekevin: This seems like a good time to pimp my article on terminal problems and how to fix them: https://gist.github.com/744284
17:59  sleepynate: gentlemen, retract your .epeenrcs
17:59  homekevin: Deals specifically with GNOME Terminal and GNU screen
18:01  sleepynate: homekevin: i like that you're using github as a publishing platform :)
18:01  graywh: it's gist.github
18:01  homekevin: Yeah, well, it's what I have readily available.
18:01  FernandoBasso: sleepynate: Thanks. But then, can I open a file from this :Vexplore on a split on the righ? Or just doing something ^w l :edit <file_I_saw_in_explorer> ?
18:01  graywh: this is how you can use github as a publishing platform: https://github.com/raganwald/homoiconic
18:02  sleepynate: homekevin: my buddy came up with a way of using git as a blog engine entirely... http://freeasinbeard.org/post/153074239/5-minute-project-tomfoolery-using-git-as-a-blog-engine
18:02  sleepynate: FernandoBasso: :help netrw-quickmap (directly above
18:03  sleepynate: shows the key mappings for :Vexplore
18:05  FernandoBasso: Wow! Even bookmarks!
18:09  rdavila: Hi folks, one question, what's the "^K" character means?, I know "^M" means DOS carriage return
18:11  graywh: ^M is carriage return, not specific to DOS
18:11  graywh: ^K is a vertical tab
18:11  heoa: Which text-procesning library do you use for repeating tasks such as enclosing-closing pairs? I mean things you cannot do just by regex and vim's simple matching patterns.
18:12  jamessan: my fingers
18:12  rdavila: thanks graywh
18:14  heoa: jamessan: yeah actually it is stupid to make things too complicated, better to do it myself
18:15  jamessan: heoa: although, you may be interested in surround.vim
18:15  malesca: Anyone know how to get Vim with ruby bindings with apt-get (Ubuntu)? There is a vim-ruby but "Package vim-ruby is a virtual package provided by … vim-gnome". And installing 90 MBs of vim-gnome stuff seems over the top since this is on a server, so SSH-use only.
18:16  jamessan: malesca: vim-nox
18:16  FernandoBasso: Okay. I am useing :Explore, and v to open a file in a vertical split. But it opens in a very small size... Any ideas?
18:16  malesca: jamessan: Thanks. vim-nox is without GUI stuff?
18:17  jamessan: malesca: if your Ubuntu isn't new enough to have that, then you need one of the Vim packages with gui bindings, so vim-lesstif or vim-gtk since both are lighter than vim-gnome
18:17  malesca: vim-nox is listed
18:17  FernandoBasso: It is boring to say ^w 80 > to enlarge the window...
18:17  malesca: FernandoBasso: You can bind that to something
18:18  FernandoBasso: can I do :vsplit <file_under_cursor> like :edit <cfile> ?
18:18  FernandoBasso: (in :Explore)
18:20  heoa: jamessan: how would you use the surround.vim to match <div[^>]*> to its ending </div>?
18:21  kurkale6ka: yss <div....... enter
18:21  homekevin: FernandoBasso: You might want to familiarize yourself with gf & friends
18:21  JordiGH: How do I wipe and yank a region? I know dd and then p works for just one line.
18:21  jamessan: JordiGH: every delete in vim is a cut, so the deletion is also a yank
18:22  FernandoBasso: homekevin: I use some... Reading.
18:22  jamessan: JordiGH: visually select the region, press x, done
18:22  homekevin: FernandoBasso: Also (because it's not on the same page apparently) :h CTRL-W_f
18:22  kurkale6ka: heoa: ^^
18:22  Scala: JordiGH: d3d will delete 3 lines down, I usually go into visual mode (with V) and select the region I want to delete though
18:22  FernandoBasso: homekevin: Thanks.
18:23  JordiGH: Okay, how do I select the region?
18:23  JordiGH: Okay, thanks.
18:23  starlays: hi to all
18:24  starlays: can someone tell me an phpDocumenter plugin?
18:29  skizzhg: is there the command mode version for [count]x ? something that i can apply on the whole document
18:30  skizzhg: also, how can i delete everything, in a line, before 'foo' ? where 'foo' is a fixed pattern, and apply iy in the whole document
18:30  skizzhg: s/iy/it/
18:30  kurkale6ka: skizzhg: :%d
18:31  starlays: i`ve tried the PDV plugin for vim, mapped the function to the keyboard as described in the install instructions of the plugin and no luck on using it, can someone help me?
18:31  heoa: kurkale6ka: it encloses a line with enclosing thing under cursor, how can you use it to find the closing thing?
--- Log closed Mon Dec 20 21:34:39 2010
--- Log opened Mon Dec 20 21:40:00 2010
21:40 --- Users 587 nicks [0 ops, 0 halfops, 0 voices, 587 normal]
21:40  mgedmin: mountained, personally, I find it easier to clone the mercurial repo than to play with tarballs and patches
21:40  mgedmin: hg clone https://vim.googlecode.com/hg/
21:40  mountained: mgedmin, k thx
21:41 --- Channel #vim was synced in 73 seconds
22:09  consumerism: can vim intelligently lay out multiple files if i use -o when opening several files? like, give files with more lines in them a bigger window, split horizontally if there are more than a few windows, etc
22:13  Dynetrekk: consumerism: TIAS?
22:17  consumerism: Dynetrekk: what?
22:17  Dynetrekk: try it and see :)
22:18  consumerism: try what
22:18  Dynetrekk: vim -o file1 file2 ...
22:18  consumerism: that's what i've done
22:18  mgedmin: oh how I hate netwr
22:18  mgedmin: netrw even
22:18  consumerism: it opens a bunch of vertically split windows
22:18  Dynetrekk: right
22:19  consumerism: even if there are 10+
22:19  mgedmin: what do you mean Ctrl-^: E23: no alternate file?
22:19  Dynetrekk: so not so intelligent I suppose
22:19  mgedmin: I just had one
22:19  consumerism: Dynetrekk: and they're all the same size, even if a file has for instance one line in it
22:20  mgedmin: and it breaks command-t
22:20  homekevin: consumerism: I think what Dynetrekk is saying is that the answer to the question you asked is the answer you've already discovered.
22:20  Dynetrekk: consumerism: doesn't make much sense. I don't know something more clever :(
22:20  Dynetrekk: homekevin: right
22:21 --- torio_ is now known as torio
22:48  Steve^: Hey, can I open a tab inside a vertical split?
22:48  homekevin: No, but you can split a tab.
22:49  jamessan: vimgor: buffers
22:49  vimgor: For a quick intro to vim's windows, buffers, and tabs, see http://img200.imageshack.us/img200/9031/windowsv.png and http://vim.pastey.net/115548 See also ':help tab-page-intro' and ':help windows-intro'
22:50  Steve^: thanks
22:58  Steve^: Are  "+y and "+p  the easiest (ie, least key presses) to copy and paste to the system clipboard?
22:59  Steve^: Or maybe that should be "\++y
22:59  Steve^: anyway, you know what I mean
22:59  legis: How can I check in what encoding is vim saving files?
23:00  Steve^: you can use "file" on the file itself
23:00  mgedmin: legis, :echo &fileencoding
23:00  peter_w: Steve^: maybe?
23:00  deryni: Steve^: With 'clipboard set yanking or just visual selection can be made to do it.
23:01  homekevin: legis: It saves in whatever encoding it detected the file to be in.
23:01  mgedmin: Steve^, I use just y and p to copy/paste to the system clipboard -- :set clipboard=unnamed
23:01  homekevin: legis: which is what fileencoding is set to
23:01  homekevin: legis: And if it's a new file, I believe it uses the first item in fileencodings? Or maybe it uses the value of encoding. I'm not totally sure.
23:01  Steve^: mgedmin, so in effect, you don't use vim's paste buffer at all?
23:02  mgedmin: I wouldn't say that ...
23:02  mgedmin: vim's unnamed register has a type (linewise, characterwise, blockwise), which the system clipboard doesn't have
23:03  mgedmin: if I yank and paste within the same vim, it uses its own register
23:03  Steve^: ah, ok
23:04  homekevin: It would be cool if vim supplied text in the Primary selection in a way that could preserve syntax, or even the register type.
23:05  homekevin: I assume it only does plain text, though I see you can use html for the clipboard.
23:06  Steve^: mgedmin,   :set clipboard=unnamed   isn't having the same effect for me
23:06  mgedmin: Steve^, vim or gvim?
23:07  Steve^: mgedmin, vim, looks like it uses * rather than +
23:07  legis: homekevin: thanks
23:07  mgedmin: ah, could be
23:07  Steve^: Why does my vim use + when the docs usually mention *?
23:07  mgedmin: yeah, it uses the primary selection, not the clipboard
23:07  mgedmin: I actually find it convenient to paste stuff with the middle button after yanking it in vim
23:09  lamdk: * only matters if yer using X11/linux
--- Log closed Mon Dec 20 23:31:37 2010
--- Log opened Mon Dec 20 23:31:57 2010
23:31 --- Users 577 nicks [0 ops, 0 halfops, 0 voices, 577 normal]
23:33 --- Channel #vim was synced in 73 seconds
23:45  bairui: I have something to tell you, mgedmin, that is both truly shocking in its horror and at the same time so wildly ludicrous as to cause actual disbelief: not everyone on this vast planet enjoys the sanctity of Linux. Yae, and some even endure an existence worse than ever could be imagined by little boys with magnifying glasses. So speak you softly of the virtues of * and be grateful for your fortunes in life.
23:45  bairui: Look not down upon those less fortunate, those without an X11 or a Linux. Smile at them, that it be the only ray of good in their day. ar, man.
23:45  mgedmin: was that last bit a pirate greeting?
23:45  mgedmin: "arr, man"
23:45  mgedmin: or something got truncated on the way?
23:46  MetaCosm: lol
23:46  MetaCosm: I walked in on a rant
23:46  bairui: I was going for a unixy ahmen... but pirates are cool too! :D
23:46  MetaCosm: what queued that up?
23:46  bairui: I was just having a little fun with lamdk, actually. :p
23:48 * mgedmin was about to google for a Unix tool called lamdk -- something to do with functional programming maybe -- and only then noticed who was participating in the conversation lately
23:49  bairui: :)
23:49  mhahe: im reading that i can jump multiple lines using ':5k'  or '5j'  but when i use these it keeps telling me that they need arguments?
23:49  Raimondi: mhahe: without the :
23:49  bairui: mhahe: they are normal mode commands, not ex - so yeah, lose the :
23:49  bairui: g'day, Raimondi! :)
23:49  Raimondi: Good morning, bairui :)
--- Log closed Tue Dec 21 00:00:37 2010
