--- Log opened Tue Nov 30 08:31:16 2010
08:31  iaj: lo there :)
08:31  iaj: is pastie.vim currently broken?
08:31 --- Users 543 nicks [0 ops, 0 halfops, 0 voices, 543 normal]
08:32  iaj: is pastie.vim currently broken?
08:34 --- Channel #vim was synced in 193 seconds
08:38  Raimondi: http://vim.pastey.net
08:42  iaj: Raimondi: oh sorry - I ment the pastie plugin by tpope :)
08:43  Raimondi: Oh! No idea about that :)
09:04  iaj: Raimondi: heh.. not a Problem :)
09:14  krz: anyone know a plugin that lists down all methods in a class?
09:14  iaj: krz: taglist ain't sufficient?
09:18  krz: something like a method outline
09:18  krz: something like the window on the right on this screenshot: http://www.jnrowe.ukfsn.org/_static/calendar.png
09:18  Raimondi: That window on the right is taglist.vim
09:18  krz: ok thanks
09:18  Raimondi: http://www.vim.org/scripts/script.php?script_id=273
09:18  krz: Raimondi: http://www.vim.org/scripts/script.php?script_id=273 doesnt look like its been updated in a while
09:18  Raimondi: No, but it works
09:18  krz: iaj: as in the plugin right? or is there native taglist in vim?
09:19  iaj: krz: no i spoke about the plugin... as you can see in the screenshot - and see its downloadstats :D
09:19  Raimondi: krz: You'll also need exuberant-ctags for taglist.vim to do its magic.
09:19  krz: ok
09:19  krz: will see if i can get this to work
09:20  krz: currently liking the session plugin that is compatible with nerdtree
09:23  Raimondi: krz: Which session plugin is that one?
09:24  krz: Raimondi: http://peterodding.com/code/vim/session
09:24  Raimondi: thnx, krz
09:24  krz: Raimondi: but im using it together with https://github.com/carlhuda/janus/tree/572076f748566930e447f2fe9bf4705a2bbcc072 which is a bundle / package. works great
09:25  krz: in my opinion vim should come as a prepackaged download :-) of plugins that just work gracefully together
09:26  malesca: krz: you get taglist with janus
09:26  krz: yea
09:26  malesca: :TlistToggle
09:27  krz: Raimondi: one thing to note though. Sometimes when i close vim. and reopen. i sometimes get a message from vim saying swap file file_name already exists! not sure if this has anything to do with the session plugin
09:28  krz: or if vim isnt closing the files correctly
09:28  krz: i end up having to kill the processes that are still running the vim files for this error to go away
09:31  krz: actually sessions doesnt exactly work with bufferexplorer too...
09:32  dfrank: hi all. I trying to make auto-align text when i typing closing brace "}". Here's remap:     inoremap } }<Esc>mt=%`ta    It works fine, if matching brace is present. But if not, then last "a" doesn't work. Btw, if i type all this by hand, it works anyway. But remapping doesn't work. Maybe anyone tell me, what's wrong..
09:34  dimm: can vim do multiple substitute in one line ?
09:34  dfrank: dimm: yes, :s/foo/bar/g
09:34  Raimondi: Use the g flag  :s/this/that/g
09:35  dimm: my english is too low... i need something else, something like 'sed -e <firest regexp> -e <second regexp>'
09:35  dimm: in vim, or in vi
09:35  iaj: anyone tend to use lustyjuggler?
09:38  krz: is it possible to open Tlist in a split window?
09:39  krz: im trying top open below the window of nerdtree
09:39  dfrank: dimm: i think, you have to use multiple commands to do multiple substitute.
09:39  krz: top=to
09:40  krz: Tlist seems to open on its own split window
09:44  dfrank: well, seems like :imap helped me, instead of :inoremap
09:45  dfrank: i'm still can't figure out what especially difference between :map and :noremap :(
09:51  iaj: gna.. someone using Gist.vim?
09:55  krz: how do i make taglist open on the right side?
09:55  Raimondi: dfrank: Set this mappings and type b then c, you'll see the difference:  imap d aa| inoremap b do| imap c do
09:56  Raimondi: krz: I don't remember, but it's in the docs
09:56  krz: it seems to open on the left side all the time
09:56  Raimondi: krz: You have to set a variable
09:57  krz: http://stackoverflow.com/questions/3179608/how-do-i-open-vims-taglist-plugin-to-the-right-side-of-the-window
09:58  dfrank: Raimondi: aah, thank you! You're mighty explainer. :)
09:59  Raimondi: np :)
10:20  krz: how do i get to the help file of http://www.vim.org/scripts/script.php?script_id=42 ?
10:24  Raimondi: krz: If you ran :call pathogen#helptags()  then  :h bufexplorer.txt  should open that plugin's help file.
10:57  Veejay: Hi, is it possible to have gvim/macvim automatically start up in a given directory?
11:02  krz: cant seem to find this on the help file. but how do you update nerdtree nodes?
11:02  krz: lets say i add a folder and a few files in that folder. nerdtree doesnt seem to update automatically
11:03  krz: Veejay: maybe in vimrc :cd
11:04  _rane: krz: r
11:05  krz: thanks _rane
11:37  krz: how do i do w but backwards
11:38  dfrank: krz: b
11:38  krz: thanks
11:38  dfrank: krz: :h word-motions
11:39  krz: got it. thanks
11:42  Axioplase_: Hey.
11:43  Axioplase_: Can someone remind me how to keep a few lines clear at the bottom/top of the window? (ie, when I go the the last line on screen, it scrolls a bit so that it's now, say, third line from bottom…)
11:43  Axioplase_: I remeber a hack where setting this to 999 was used to always have the cursor in the middle of the screen…
11:44  iaj: :he 'scrolloff  is that it?
11:46  FernandoBasso: Axioplase_: :set scrolloff=number  ?
11:46  Axioplase_: Yup! Thanks
11:47  FernandoBasso: Axioplase_: iaj had already pointed you to the right place. :)
11:51  Axioplase_: On even days, my thanks a worth two :)
12:05 --- mgedmin_ is now known as mgedmin
12:21  krz: Raimondi: call pathogen#helptags() returns an error
12:21  krz: unknown function: pathogen#helptags
12:22  krz: i thought it was a matter of putting the plugin docs in ~/.vim and i should be able to access the help docs for the plugin no?
12:22  krz: puting/putting/placing
12:23  spiiph: Your version of Pathogen is probably too old.
12:24  krz: spiiph: im actually using https://github.com/carlhuda/janus
12:24  krz: does it have anything to do with this?
12:24  spiiph: I have no idea. My statement probably still stands.
12:26  krz: spiiph: but the plugins load though
12:26  krz: just not the docs for the plugins
12:27  kurkale6ka: is it in this order? 1. call pathogen#runtime_append_all_bundles() 2. call pathogen#helptags()
12:28  spiiph: Doesn't matter if the function doesn't exist...
12:28  kurkale6ka: ok, didn't read everything
12:32  krz: how do i check if i am using the latest version of pathogen?
12:33  spiiph: Check the file header for a date or a version, and compare it to the released one
12:33  shmup: pathogen hasnt been updated since 1/17/10
12:34  shmup: OH HEY
12:34  krz: where is pathogen located though?
12:34  shmup: wait nvm, yeah  it hasn't
12:34  spiiph: krz, should say in the file header of the pathogen plugin
12:38  krz: ok seems to work now thanks
12:52  walt: has anyone else than me aliased :q to exit in bash? :)
12:52  rson: indeed
12:53  rson: and :e was vim for a while
12:53  walt: rson :)
13:07  Zharf: walt, ^D is my exit from bash
13:15 --- silex is now known as Silex
13:32 --- RichiH is now known as RichiH_marriage
13:33  Silex: if you map <C-a> to something, can you somehow get teh original <C-a> behavior?
13:33  Silex: (increment number under cursor)
13:37  Silex: there's no way?
13:39  mgedmin: Silex, :noremap
13:41  Azzkikr: mapping makes my programming life so much more awesome in vim
13:41  Silex: mgedmin: I'm sorry I don't get it
13:42  mgedmin: okay, here's an example
13:42  Silex: you mean create another mapping that maps to <C-a> and so the <c-a> isn't remmaped?
13:42  Silex: it's the only way?
13:42  mgedmin: :noremap <Leader>increment <C-A> | normal <Leader>increment --> will use the original behaviour of <C-a> no matter what it is mapped to
13:42  mgedmin: substitute whatever you want for <Leader>increment
13:43  Silex: hum, ok, I get that now
13:43  Silex: that's the only way? no way to tell :execute_without_mapping "\<c-a>" ?
13:43  mgedmin: e.g. vim has <SID> for script mappings that shouldn't interfere with the user
13:43  mgedmin: I don't know of any other way, no ...
13:43  mgedmin: wait!
13:43  mgedmin: :help normal
13:43  mgedmin: "If the [!] is given, mappings will not be used."
13:44  mgedmin: I didn't know/remember that!
13:44  spiiph: mgedmin, maybe you mean <Plug>, not <SID>? <SID> or s: is for functions
13:44  Silex: mgedmin: cute, so :normal! "\<c-a>" should work?
13:44  mgedmin: spiiph, :h :map-<SID> *shrug* maybe
13:44  Silex: let's try
13:45  spiiph: mgedmin, Uh, that's not a valid help reference in my vim
13:45  mgedmin: sorry, no :
13:45  mgedmin: :h map-<SID>
13:45  spiiph: Ah, you mean :map-<script>
13:46  spiiph: Right
13:58  Silex: mgedmin: thanks
14:33  henk: hi, i'm trying to do a substitution with a non-greedy operator: 's/:.*//' how do i make the '.*' non-greedy? so everything after the _last_ ':' is deleted? (i know i could use another regexp, but i want to know how to make a regexp non-greedy) are there other, maybe simpler or shorter ways to achieve the same?
14:34  henk: afaict from the help, i'm supposed to use \{-} somewhere in the regexp but i didn't really understand where...
14:34  Silex: henk: :h non-greedy
14:35  spiiph: henk, in place of *
14:35  Silex: I wish vim would follow the *? convention
14:35  henk: argh of course {} is basically just a quantifier, right?
14:38  henk: hm, my line looks like this: 'foo "bar::baz": text'. when i use 's/:.\{-}//' the second ':' is deleted. with 's/:.\{-}$' everything after the first is deleted... not quite what i want. what am i doing wrong?
14:38  spiiph: henk, yes, it also accepts the {n} and {n,m} formats, where n or m are optional in the latter
14:39  massimo: Hi. How can I change the keyboard repeat rate for gvim? I'm using KDE, is that some gnome/gtk settings?
14:40  deryni: henk: s/:[^:]*$//
14:41  henk: deryni: yes, that would be an alternative, but imho it should be doable with a non-greedy operator as well
14:41  spiiph: henk, the latter variant should work
14:41  henk: spiiph: thought so too, but it doesn't...
14:42  deryni: How could it mean anything other than match from first : to end of line (matching as little as possible in the middle)?
14:43  henk: spiiph: hm, what latter variant do you mean? mine or yours?
14:43  spiiph: I honestly thought it would try all : on the line, and find the best match.
14:43  spiiph: henk, yours. But no, it doesn't work, like deryni says.
14:44  deryni: Matching that way would require a greedy starting match first.
14:44  henk: this works: s/\(.*\):.\{-}/\1/
14:44  deryni: .*:.\{-} or something.
14:44  spiiph: deryni, that makes sense, I guess.
14:44  henk: mhm, seems so... but actually if it's anchored to the end of the line, it should match the last :
14:44  mavvert: massimo: setting the repeat rate from kde itself doesn't work ?
14:45  deryni: I don't think a eol anchor means "start matching from the end of the line" which is what it would need to mean for it to work without the greedy leading match.
14:45  deryni: But I'm not a regex internals expert.
14:46  henk: yeah, it probably doesn't... will have to think about that a bit i guess :) thank you very much!
15:01 --- daniel is now known as daniel-kun
15:06 --- daniel-kun is now known as daniel
15:10  sktrdie: hello
15:11  sktrdie: after working more than 2 hours with vim some of the settings seem to not work... like indentation doesn't work as expected
15:11  sktrdie: and adding like comments /**
15:11  sktrdie: doesn't automatically fill it with * when returning a new line.
15:11  sktrdie: What could be causing this/
15:11  sktrdie: and how do I fix it
15:12  mgedmin: filetype plugin indent on, maybe
16:07  krz: in my vimrc i have let Tlist_Auto_Open = 1, but whenever i start vim Taglist is not opened. how come?
16:10  iaj: krz: didn't you miss the g:Tlist_Auto_Open ?
16:10  krz: iaj: what do you mean?
16:10  iaj: :let g:Tlist_Auto_Open = 1
16:10  pigdude: is there a way to pop an item off of the error list (once I've modified it)?
16:10  pigdude: (:grep)
16:11  mgedmin: pigdude, you don't like :cnext ?
16:11  pigdude: mgedmin: sure, I do
16:12  pigdude: mgedmin: sometimes there will be three matches next to each other
16:12  pigdude: mgedmin: so I make all three edits before I :cn to the next two
16:12  pigdude: mgedmin: so the next two :cn are not useful
16:12  mgedmin: how about :cnf then?
16:13  pigdude: mgedmin: maybe, I'd have to pay attention to my position in the errorlist to know if I skipped one at the bottom of some file
16:14  mgedmin: what about a mapping so :cn isn't too expensive for skipping the next two now-useless matches?
16:14  mgedmin: I use <f4>; there's a plugin (space.vim) that uses <space>
16:14  pigdude: I might try that, thanks
16:14  pigdude: mappings for cn and cp would be nice
16:14  pigdude: I'll see what works for me
16:16  pigdude: mgedmin: the fact that I'm comfortable w/ F key mappings in vim says that I'm playing too much SC2 lately :^)
16:16  pigdude: mgedmin: because I never would've used this in the past
16:17  krz: whats the opposit of ctrl+6 ?
16:17  pigdude: krz: the opposite?
16:17  mgedmin: ctrl-6
16:17  mgedmin: it switches between two buffers, so it's its own opposite
16:17  mhi^: the opposite would be mind reading
16:17  krz: ctrl+6 goes to prev buffer
16:17  krz: i want to go to next buffer
16:17  mhi^: you want to map :tabn ;)
16:18  mhi^: ehm
16:18  mhi^: :bn
16:19  krz: ah got it. thanks
16:21  krz: im using rails. if i am in a controller. can i use ctags to display the view for a controllers method?
16:22  krz: perhaps even go down the the respective model?
16:23  mhi^: Perhaps tpope knows the answer. *ping*
16:32 --- WebDragon|laptop is now known as WebDragon
16:36 --- altamic_ is now known as altamic
16:37  krz: awsome. rails.vim has R:view, R:controller and etc
16:40  ivan-kanis: pigdude: and what is SC2?
16:40  pigdude: ivan-kanis: a real time strategy game that is rather popular "starcraft 2"
16:40  pigdude: ivan-kanis: it uses several F keybindings
16:41  Silex: krz: yeah, rails.vim is sweet
16:41  Silex: krz: in fact rails.vim is what made me realise how AWESOME vim was
16:41  ivan-kanis: pigdude: ah ok
16:41  ivan-kanis: pigdude: i never use the pesky function keys
16:41  Silex: because I was like "hey, I could have written it myself! it's pretty simple!"
16:42  pigdude: ivan-kanis: hehe an addictive game might change that :^)
16:43  krz: Silex: what other plugins do you use with rails?
16:43  krz: Silex: btw, are you mapping these keys somehow?
16:44  Silex: krz: not really, these days I don't use rails much.
16:44  Silex: krz: but I'd use snipmate if you don't already
16:45  anon33_: Silex: no offense, but the code in Rails.vim is anything but simple
16:45  krz: Silex: interesting. what do you use now instead of rails?
16:45  Silex: anon33_: yeah probably, I was just talking about the concept :)
16:45  Silex: krz: I mean atm I'm more doing c++ apps that rails apps
16:45  krz: ah
16:46  Silex: krz: but in the future I'll have to do some rails again, not before march/may so
16:58  logankoester: Can anyone tell me how to get vim to ignore or render color codes instead of displaying them?
16:59  logankoester: Just so I can tee some colorized output to a logfile and open it in vim in a readable way
16:59  MarcWeber: logankoester: It looks like you have teh wrong terminal settings
17:00  mgedmin: logankoester, there's a plugin for that, I think, assuming you've got vim 7.3
17:00  logankoester: MarcWeber: What terminal settings would those be?
17:00  mgedmin: http://www.vim.org/scripts/script.php?script_id=302
17:00  mhi^: but beware, it's from DrChip
17:00  logankoester: mgedmin: that's exactly what I wanted, thank you :)
17:01  mhi^: logankoester: report back if it's working good for you, didn't see any reviews yet
17:02  logankoester: mhi^: will do
17:02 --- disgrntld1 is now known as disgrntld
17:03  mhi^: thanks :)
17:05  krz: when i press \rm, i want vim to execute :Rmodel. what do i have to put in my vimrc file?
17:05  logankoester: mhi^: No
17:06  Zathrus: krz: :map <Leader>rm :Rmodel<CR>
17:06  logankoester: Perhaps my vim is not patched correctly as per the README for that plugin, but I'd sooner strip the color codes and get back to work than patch my editor
17:07  mhi^: logankoester: The plugin was based on the patches before 7.3. But now it _should_ work out of the box, due to Vim's conceal feature.
17:08  rson: assuming you have the conceal feature enabled
17:09  logankoester: mhi^: Not a valid vimball or something along those lines... I already removed it; piping the log output through "col -b" to remove the ansi colors solved my problem
17:09  mgedmin: oh, col can handle ANSI colors?
17:10  logankoester: apparently :)
17:10  mgedmin: because mine can't: ls --color|col -b -> 01;36mdirectoryname
17:10  logankoester: Oh you know what, I got the same result
17:10  logankoester: should have looked closer, I'm sorry
17:11 * mgedmin thinks colorized logfiles are insanity, fwiw
17:11  Zathrus: http://www.commandlinefu.com/commands/view/3584/remove-color-codes-special-characters-with-sed
17:11  mhi^: Yea, the parser should colorize, it shouldn't be written to the actual file.
17:12  logankoester: http://www.commandlinefu.com/commands/view/3584/remove-color-codes-special-characters-with-sed
17:12  logankoester: oh, Zathrus beat me to it
17:12  logankoester: hehe
17:12  Zathrus: woot
17:13  logankoester: the first version on that page worked perfectly Zathrus
17:14  logankoester: thanks man
17:19  iaj: Zathrus: that page is intersting - are there some more like that existing?
17:20  Zathrus: iaj: I'm sure there are. I just googled for "strip ansi color codes vim"
17:20  iaj: Zathrus: ah.. heh.. I see :)
17:20  iaj: Well..bookmarked.
17:33  krz: i cant really find a good use for taglist apart from it just listing down an outline of methods in a class
17:33  krz: am i missing something?
17:33  krz: not to mention, it takes up a whole window
17:34  mhi^: krz: well, it could also display all the tags from the project. So you can open the right files by selecting a certain function of it in the taglist window.
17:35  krz: i like to be mouse free when i work with vim
17:35  krz: browsing to the taglist to locate a method to open a file is pretty slow
17:35  krz: normally i just use command+T
17:35  krz: type in the file name
17:35  krz: then find the definition
17:36  krz: definition=method
17:36  iaj: krz id suggest you to get fuzzyfinder and use ctags
17:36  iaj: you can easily browse through all tags in your project then
17:36  iaj: with fuzzymatching...
17:36  mhi^: krz: Sure, that works if you know the project. But imagine you have to browser a big project made by someone else. Taglist gives you a nice overview then.
17:36  iaj: i just use taglist to have an overview..
17:37  consumerism: what's the mode called when i am entering a command and hit some key, now i see a short history of commands in a tiny window...sorry for my poor terminology. where should i look in help for this?
17:37  krz: ya thats what im using it for. just to have an overview. in fact im only displaying one file at a time. the one thing i dont like is taglist needs its own window
17:38  iaj: :TlistToggle krz..
17:38  Raimondi: consumerism:   :h q:
17:39  krz: iaj: would be nice if i can "dock" taglist below nerdtree
17:39  iaj: krz: hmmmm... no clue about that \
17:43 --- WebDragon|laptop is now known as WebDragon
17:46  zabka: hi, how can i save something in a hexadecimal format?
17:46  zabka: as a binary file
17:46  Silex: :h hex seems to have something
17:50  krz: i have snipmate installed but i am not getting any popups for suggestions....
17:50  krz: strange. anyone know why?
17:52  Silex: krz: it's badly installed?
17:52  Silex: :)
17:52  Silex: more seriously, well, check with :scriptnames if it's loaded
17:52  mhi^: krz: Popups? snipmate is something like "iabbr on steriods".
17:52  krz: dont think so. but i can try installing again
17:52  mhi^: What have you tried, krz?
17:52  Silex: check :scriptnames, then try :enew<CR>:set ft=cpp<CR>imain<Tab>
17:53  krz: mhi^: <div, <html, <p
17:53  Silex: you'd probably not type the <
17:53  krz: :scriptnames reports: /Users/Chris/.vim/plugin/snipMate.vim
17:53  Silex: make sure ft is set
17:53  krz: cpp = c++ ?
17:53  Silex: yes
17:54  krz: i use ruby on rails
17:54  krz: doesnt matter?
17:54  Silex: it's not important for testing
17:54  Silex: if main gets completed in int main() {}
17:54  Silex: then snipmate works
17:54  krz: says E172: Only one file name allowed
17:54  Silex: Oo
17:55  krz: oh wait
17:55  mhi^: If you're using rails, the ft is probably ruby. Are you sure the ruby snippets file does support things like "div"?
17:55  krz: mhi^: good point
17:55  krz: that i am not sure about
17:56  Silex: first assert snipmate works
17:56  krz: Silex: your test works
17:56 --- exodist is now known as Exodist
17:56  graywh: if you're typing <div on RoR, ft is probably eruby
17:56  Silex: but you can check for ruby like: set ft=ruby<CR>idef<Tab>
17:56  Silex: this should compelte to def method_name ... end
17:56  krz: hmm so guess this aint working with rails/ruby
17:57  krz: ok let me try that
17:57  Silex: it is working with ruby/rails, you might need to install an additional file tho
17:57  krz: Silex:  that works too
17:57  krz: idef works
17:59  Silex: krz: what file do you have in mind for rails?
17:59  Silex: an .erb file?
17:59  Silex: a view? a controller?
17:59  krz: *.html.erb
17:59  krz: view
17:59  Silex: ok, open one of them, tell me what :set ft tells you
18:00  krz: Silex: eruby
18:02  Silex: krz: do this, i<C-R><C-Tab>
18:02  Silex: tell me if it popups anything
18:02  Silex: erro, <C-r><Tab>
18:02  Silex: in insert mode
18:03  krz: nothing happens Silex
18:04  Silex: do :set ft=html
18:04  Silex: then again i<C-r><Tab>
18:04  krz: yea i get a popup window now
18:05  Silex: if it works, read snipmate's documentation (:h snipmate) and read the part about set ft=html.eruby
18:05  krz: i select html and it only displays "html"
18:05  krz: no <> open or closing tags
18:05  Silex: you're supposed to tab
18:05  Silex: it just lists the keyword that  a tab trigger
18:06  Silex: anyway, do waht I said about help and then you'll probably want to get some additional snippets at https://github.com/scrooloose/snipmate-snippets
18:06  Silex: gotta go, cya
18:06  krz: oh right
18:06 --- isaacs_ is now known as isaacs
18:06  krz: thanks
18:07 --- Silex is now known as silex
18:45  fifou: hi
18:45  fifou: i think i discover a bug on vim 7.3 but i would prefer obtain agreement before opening a bug report
18:47  fifou: I open a file by draging it into vim from a file browser, then I :bwipeout it. If I :mksession my vim, leave it, execute it again and do a :loadsession : the buffer I :bwipeout is reloaded :S
18:47  fifou: do you thing it is a normal behaviour? I quite sure it isn't.
18:51  MarcWeber: fifou: Does it only happen when you load files by drag& drop?
18:51  fifou: yes
18:52  MarcWeber: fifou: What does :ls say after bwiping?
18:52  MarcWeber: Is the file still present? Can you use :mksession otherfile.vim and source that instead? Does it still happen?
18:52  fifou: the buffer opened for file which has been drag&dropped into vim is present
18:53  MarcWeber: Can you open the session file and confirm that it contains the file name you wiped?
18:53  fifou: oh sorry, after :bw buffer disappeared, it comes back after :loadsession
18:53  MarcWeber: fifou: Do you have a :loadsession command?
18:53  fifou: yes, let me show that in a paste site : a minute please
18:54  MarcWeber: fifou: Try sourcing your session file using :source session.vim instead.
18:54  fifou: http://paste.debian.net/101151/
18:55  fifou: i was not enough clear : I do a :source, not a :loadsession
18:55  MarcWeber: fifou: That's why I asked.
18:55  MarcWeber: So remove your $HOME/session_vim file.
18:55  MarcWeber: Then recrate it after wiping
18:56  MarcWeber: Then open it in Vim and try to locate the buffer you wiped. Can you find it in the session file?
18:57  fifou: so : (1) I drag&drop a file (2) I check it is on :ls (3) I check there is no session_vim file (4) I :bw the buffer (5) my f2 map to create session file (6) I close vim (7) i open vim and try my f3 map to :source vim session
18:57  fifou: wait a second please
18:59  fifou: I have the same problem
18:59  MarcWeber: fifou: Have you opened the session file?
18:59  fifou: you do not tell me: do you try with your vim?
18:59  MarcWeber: fifou: Yes. I tried. I can't reproduce it on my linux box.
19:00  MarcWeber: fifou: The Session file i sa list of Vim commansd.
19:00  fifou: yes, i opened it and see "args file_i_drag_droped" in it
19:00  MarcWeber: fifou: Then consider writing to the mailinglist. Make sure to include all the output of :version
19:01  fifou: thank you to confirm my idea MarcWeber
19:01  fifou: I do that right now
19:01  MarcWeber: The funny thing is: If create a session the file is added by these commands: badd +0 .vimrc silent! | argdel * | edit .vimrc
19:02  MarcWeber: fifou: Can you copy paste the whole Session.vim file?
19:02  fifou: of course
19:02  MarcWeber: I'll be back in 10min
19:03  fifou: http://paste.debian.net/101152/ (search for "file_i_drag")
--- Log closed Tue Nov 30 19:08:23 2010
--- Log opened Tue Nov 30 19:08:42 2010
19:08 --- Users 602 nicks [0 ops, 0 halfops, 0 voices, 602 normal]
19:10 --- Channel #vim was synced in 111 seconds
--- Log closed Tue Nov 30 20:32:31 2010
--- Log opened Tue Nov 30 20:37:52 2010
20:37 --- Users 613 nicks [0 ops, 0 halfops, 0 voices, 613 normal]
20:37 --- Server: [anthony.freenode.net] [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
20:38  FernandoBasso: forneus: First of all: how are you proceeding?
20:39 --- Channel #vim was synced in 110 seconds
20:40  FernandoBasso: frojnd: First of all: how are you proceeding?
20:41  frojnd: a) I open vim. I press i, middle cick. won't paste. b) I open vim, :set paste, middle click won't paste
20:41  frojnd: If I press right mouse click it gives me Visual
20:43  FernandoBasso: frojnd: Does it work if you copy text from some source, and then in normal mode you do: "+p
20:43  FernandoBasso: Three chars " + p
20:44  frojnd: no
20:44  frojnd: Nothig happens
20:44  eyda|mon: is there a quick way to find a file in my buffer based on a partial match?
20:44  frojnd: FernandoBasso: or you meant :"+p ?
20:45  Raimondi: eyda|mon: :b partialname<Tab>
20:45  FernandoBasso: I meant "+p
20:45  frojnd: FernandoBasso: no nothing happens
20:45  FernandoBasso: eyda|mon: type any part of the file name. Either the last part, like .js and use <Tab>.
20:45  mhi^: frojnd: is the Vim instance running on the same host as the program you tried to copy from? (aka do they share the same X clipboard?)
20:45  Scala: eyda|mon: I think there's a plugin called fuzzyfinder that's supposed to make that easier
20:46  frojnd: mhi^: yes on my laptop everything local
20:46  mhi^: frojnd: what happens if you do ctrl+insert in insert mode?
20:46  FernandoBasso: frojnd: What OS?
20:46  mhi^: frojnd: ehm.. shift+insert
20:46  xilo: Raimondi: that autocmd you gave isn't working
20:47  frojnd: mhi^: It paste :D
20:47  frojnd: mhi^: but indentation is all messed up
20:47  frojnd: FernandoBasso: archlinux
20:48  mhi^: frojnd: do ":set paste" before
20:48  eyda|mon: Raimondi FernandoBasso Scala : thanks guys :)
20:48  mhi^: frojnd: shift+middle click should work too
20:48  frojnd: homekevin: now it works
20:48  FernandoBasso: frojnd: Same here.
20:48  frojnd: mhi^: what is shift+insert?
20:48  frojnd: mhi^: all this time I was pressing shift+middle clcik
20:49  frojnd: FernandoBasso: I'm more than glad with it :)
20:49  mhi^: frojnd: :h <S-Insert>
20:50  FernandoBasso: But why wouldn't "+p work?
20:51  Raimondi: xilo: Try with this:  au BufWinEnter * if &buftype != '' |setlocal stl=\ |endif
20:51  frojnd: WHat's the command again to switch between screens in vim?
20:51  mhi^: screens?
20:52  mhi^: vimgor: windows
20:52  vimgor: For a quick intro to vim's windows, buffers, and tabs, see http://img200.imageshack.us/img200/9031/windowsv.png and http://vim.pastey.net/115548
20:52  xilo: nope, still shows status line
20:52  frojnd: whell if I type :h or help I have two splitted windows
20:52  frojnd: horizontally
20:52  xilo: as the default
20:53  mhi^: frojnd: <C-w>p
20:53  Raimondi: xilo: Maybe it's not the right autocmd event, try with WinEnter or check :h {event}
20:55  frojnd: is there a way to automate the proccess of :set paste, shift+middle click into just shift+middle click?
20:56  sfx2k: hey. any idea why &modified is always = 0 - although vim has converted the fileencoding?
20:56  corecode: hi
21:00  corecode: any clever ideas how to track vim plugins with git submodules?
21:00  corecode: right now i always fetch them + do a subtree merge
21:01  corecode: but using a submodule might be much nicer
21:01  mhi^: FernandoBasso: "+ is the X clipboard. (e.g. select something and right click -> "Copy"). "* is the primary selection owned by an application. (e.g. just select something in your terminal emulator.) The former pastes even when the app was closed, because it's temporarily hold in X's clipboard buffer. The latter's gone if you close the app.
21:02  corecode: pathogen!
21:02  corecode: weeee
21:03  FernandoBasso: mhi^: I said: Does it work if you copy text from some source, and then in normal mode you do: "+p
21:03  FernandoBasso: I said _copy_. Shouldn't it work then?
21:03  fifou: yes FernandoBasso
21:04  FernandoBasso: But he said it did not work.
21:04  mhi^: FernandoBasso: I thought you asked why <S-Insert> would work, but "+p wouldn't.
21:05  ManDay: Does VIM offer a way to view huge files? So that it does load the file chunkwise?
21:05  FernandoBasso: I asked only why "+p would not work.
21:05  spiiph: ManDay, there might be a plugin, but I'd recommend split and joins
21:05  ManDay: So that I can view a 2 gigabyte textfile and it only loads 50 megabytes
21:06  ManDay: spiiph: i thought of something so that vim would do that internally
21:06  ManDay: everything else would be an overhead
21:06  spiiph: If there was, I would've told you.
21:06  ManDay: vim could direcly seek properly and stop reading at the appropriate pos
21:06  ManDay: spiiph: any luck of that getting implemented anytime?
21:07  spiiph: I doubt that very much.
21:07  ManDay: if there is a common problem with vim then it is that it cant handle uge files
--- Log closed Tue Nov 30 21:14:00 2010
--- Log opened Tue Nov 30 21:24:26 2010
21:24 --- Users 616 nicks [0 ops, 0 halfops, 0 voices, 616 normal]
21:24  xilo: rson: that just turns some features off like syntax highlighting and stuff
21:24  Zathrus: ManDay: the entire file must be read for various operations. And, as noted, pretty much all editors do this. Those that don't have significant compromises in their functionality.
21:24  ManDay: xilo: im not "bitching like its Vim fault". if you think i am take my sincere asssertion that i dont mean to.
21:25  ManDay: xilo: your argument "thats how things are" and "other editors dont have it either" are pointless
21:25  ManDay: your argument that "if it was possible it would have been done" is valid but  dont believe so
21:25  ManDay: *I
21:25  xilo: believe what you want lol
21:26  ManDay: xilo: yes, until you bring valid support for your claims.
21:26  xilo: i'm not the one bitching, so not my problem
21:26 --- Channel #vim was synced in 123 seconds
21:26  ManDay: Zathrus: I m aware that many operations require to operate on the whole file
21:26  Zathrus: ManDay: including opening the file.
21:26  ManDay: At least for those which dont there is no problem - for the others i said there would be need for good techniques to counter that
21:27  ManDay: Zathrus: opening the file requires reading the whole file? how so?
21:27  xilo: unless you are just viewing text
21:27  ManDay: if I get a fdesc that doesnt read in the whole file.
21:27  Zathrus: ManDay: because without it you cannot properly indicate how far through the file you are.
21:27  xilo: you HAVE to open the entire file
21:27  ManDay: Zathrus: you might always store the current position - i dont see a problem there.
21:28  Zathrus: xilo: debatable... certainly writing things out becomes MUCH more difficult if you don't.
21:28  ManDay: starting at the beginning you might go   234234234gg   and vim fseeks and reads in there
21:28  SpookyET: Hi. I am unsure why au FocusLost * silent bufdo if !empty(bufname('%')) && !&ro | update | endif is making vim help buffers close
21:28  Zathrus: ManDay: and how is it supposed to know that you are 10% through the file if you don't read the entire file? Remember, this percentage is in *LINES*, not bytes or characters.
21:28  xilo: Zathrus: well, unless you have a preparsed database w/ locations and shit, you really won't be able to use regex, syntax highlighting, tab completion, and other advanced editor functions w/o reading all of it
21:29  ManDay: Zathrus: it wont be able to. of course not
21:29  Zathrus: xilo: oh, I agree.
21:29  homekevin: SpookyET: I kind of doubt "%" will work that way in bufdo
21:29  Zathrus: ManDay: then it's no longer useful. That behavior *IS* required in GUI versions for modern scrollbars to behave properly.
21:29  ManDay: and as xilo said you wont get full regex for complete syntax analysis either
21:29  acx0: is there a way to use the $HOME variable in a conditional test? something like " if filereadable($HOME . '/path/to/plugin')..." ?
21:30  SpookyET: homekevin: the window is not closed, but the help buffer is. the window goes to another normal buffer open
21:30  Zathrus: ManDay: if you're just reading a file -- use more or less; if you're going to write the file then the entire file *WILL* need to be read into memory. There is no avoiding that.
21:30  ManDay: Zathrus: If that is your final point then this implies that you would rather NOT BE ABLE to open the file then opening file with the logically implied limitations such as no in-advance scrollbars.
21:30  ManDay: And I beg to differ.
21:31  ManDay: s/then/than
21:31  Zathrus: acx0: yes, just like that.
21:31  ManDay: Zathrus: ok. point take. discussion over. thanks
21:31  ManDay: taken, even
21:31  spiiph: Did I start this?
21:31  ManDay: xilo: thanks
21:31  Zathrus: SpookyET: what?
21:31  mhi^: ;]
21:31  ManDay: yes, its all your fault :P
21:31  ManDay: @ spiiph
21:31  spiiph: Yay for me! :)
21:31  SpookyET: Zathrus: what
21:31  mhi^: And here the arguments of the guru itself: http://www.mail-archive.com/vim-dev@vim.org/msg03172.html
21:32  Zathrus: SpookyET: your question
21:32  acx0: Zathrus, hmm weird, I tried "if filereadable($HOME)    echo 'exists'    endif" but that didn't work, I'll try a full path
21:32  SpookyET: Zathrus: Be more specific
--- Log closed Tue Nov 30 21:36:20 2010
--- Log opened Tue Nov 30 21:46:41 2010
21:46 --- Users 616 nicks [0 ops, 0 halfops, 0 voices, 616 normal]
21:46  gtklocker: how can I delete the rest of the line, after the cursor?
21:46  gtklocker: it's C-k in emacs
21:46  Zathrus: gtklocker: D
21:47  homekevin: The 7th thing everyone should learn about Vim is using :h with CTRL-D
21:47  gtklocker: Zathrus: that's freakin awesome, thanks :)
21:47  Zathrus: homekevin: nod. Or even :h w/ <Tab>, but I find <C-D> more useful as well
21:47  iaj: homekevin: hmm... what should he have typed before the C-D ?
21:47  fow: homekevin, I think my jaw dropped the first time I learned of that
21:47  homekevin: gtklocker: If you want to be in insert mode after, C
21:48  Zathrus: iaj: :h <C-D>    does The Right Thing as it stands :)
21:48 --- Channel #vim was synced in 108 seconds
21:48  iaj: i only see a bunch of help* things there :\
21:49  Zathrus: iaj: well, in that case it's The Right Thing   :)
21:49  Fatih`: can I add spaces between the characters of mapping in vimrc for a better readability ?
21:49  homekevin: iaj: I was making a somewhat general comment. <CR> is a little hard to figure out with :h and CTRL-D
21:49  Zathrus: Fatih`: no
21:50  Fatih`: ok :)
21:50  homekevin: You kind of have to live with mappings being ugly blobs of characters.
21:50  Zathrus: Fatih`: if a map is that complicated then you may want to use a function instead (and then map the key to execute that function)
21:51  lotus: hey , how do I display the contents of a buffer that I've recorded keystrokes into?  I want to display the buffer and copy,modify, and paste it into another buffer.
21:51  Zathrus: lotus: you mean the macro? Just paste the register it's in.
21:51  Fatih`: Zathrus, it's just a hack around, it's not worth to write a function for that
21:51  Zathrus: yank it when you've finished modifying it (NOTE -- use y$, not Y)
21:52  Fatih`: the vat command is very powerful
21:52  Zathrus: Fatih`: yup; just noting
21:52  Fatih`: I've discovered that new and since it makes a lot of things very easy
21:53  lotus: Zathrus: thanks, but what is y$? yank to end of line?
21:53  Zathrus: yes
21:53  lotus: ty
21:54  Zathrus: if you do Y then you end up with an extra ^M in the register, which will screw up a lot of macros
21:54  iaj: Zathrus: not if one has the MUST 'noremap Y y$' in his vimrc ;)
21:55  homekevin: I only use Y to remind myself occasionally that Y doesn't do what you think it does. :)
21:55  Zathrus: iaj: I used vi for nearly a decade before using vim, so I'm too used to Y's normal behavior
21:56  Zathrus: ~6 years of vi, 2-3 of vile, and 11-ish of vim
21:56  iaj: Zathrus: wow... oO   ok :)
21:57  Zathrus: I only despised vi for the first 3.
21:57  mhi^: :)
21:57  homekevin: Wow, I've only been using Vim for about 5 years.
21:58  homekevin: And I've only used nvi under duress
21:58  Zathrus: I still use systems w/ vi on them
21:58  Zathrus: I won't do code editing on them though. I'm not a masochist.
21:59  homekevin: I used some BSD systems where /usr/bin/vi was nvi, and had to get used to typing vim instead.
21:59  iaj: when I got a line and want to split it after each ;  why is '<,'>s/;/;\r/g  only working for one?
22:00  Zathrus: $ type vi -> vi is a tracked alias for /bin/vi     $ type vim -> vim not found.
22:00  Zathrus: iaj: because it creates a new line and then it's no longer in the search range.
22:01  iaj: Zathrus: how could I avoid that?
22:05  Zathrus: iaj: I don't think I found a way. I have a ton of cleanup regexes, and the ones that require line splitting just do searches and no replaces.
22:07  SpookyET: SuperTab is nice, but how do you insert actual tabs?
22:07  strull_: probably cltr-v tab
22:08  SpookyET: strull_: too akward. Might just go with AutoComplPop
22:08  iaj: Zathrus: just went through it by f;a<CR><ESC>;.;.;.;.
22:09  iaj: i need that pretty often though... would love to have a solution for it :(
--- Log closed Tue Nov 30 22:15:46 2010
--- Log opened Tue Nov 30 22:16:09 2010
22:16 --- Users 613 nicks [0 ops, 0 halfops, 0 voices, 613 normal]
22:16  Fatih`: map <F2>p :r!svn st files| grep patch<CR>
22:17  Fatih`: without the pipe it works, but when I add the pipe it doesnt work
22:17  Fatih`: should I use escape characters ?
22:17  peth: iaj: did you get my line about 'gd'?
22:17 --- Channel #vim was synced in 102 seconds
22:19  iaj: peth: ofc not.. my conn is so broken
22:19  iaj: peth: what was it?
22:19  peth: :'<,'>s/;/;\r/g works here
22:19  iaj: really?? why doesn't it for me :(
22:19  peth: i was trying to think why it wouldn't. so maybe 'gd' is set?
22:19 --- WebDragon|laptop is now known as WebDragon
22:21  iaj: hummm :verbose set gd?  yeah.. it was set.
22:21  iaj: that's the problem?
22:21  iaj: ohhh... /g inverts it then :\
22:21  peth: yeah, you untoggled g then with your g :)
22:21  iaj: gna... im asking myself why i set that anyhow
22:21  iaj: thanks peth
22:23  homekevin: Fatih`: As far as I can tell pipe should work in that situation.
22:24  SpookyET: Is it possible to list current keybinds?
22:24  iaj: SpookyET: :map
22:24  iaj: or :imap :cmap respectively
22:25  SpookyET: thanks
22:26  homekevin: Whoa, every /g in a :substitute toggles the effect? Wierd.
22:26  SpookyET: i have nnoremap / /\v vnoremap / /\v but i think they are being overridden
22:26  SpookyET: not sure by what
22:26  SpookyET: they are still listed though
22:26  homekevin: SpookyET: What is the evidence that they are being overriden?
22:27  SpookyET: \v search pattern is not being accepted
22:27  SpookyET: I should be able to type /query/ and get /\vquery/ instead
22:28  homekevin: In normal mode, I take it?
22:28  SpookyET: normal and visual
22:28  SpookyET: foound it
22:28  homekevin: SpookyET: so what exactly do you see when you press /  ?
22:29  SpookyET: IndexedSearch is the culprit
22:29  peth: high time someone started an obfuscated vim contest
22:29  homekevin: SpookyET: noremap is basically custom-made for what you are trying to do, BTW. No need for multiple mappings.
22:30  homekevin: peth: Too easy.
22:30  peth: homekevin: they said that about perl :p
22:30  homekevin: I still say that about perl.
22:30  homekevin: They should have a clear perl contest.
22:31  peth: :D
22:31  SpookyET: homekevin: They are not being remapped. I see it via :map, but IndexedSearch is overriding the functionality and ignoring the mappings, it seems.
22:31  graywh: Perl: Obfuscation Included
22:31  homekevin: SpookyET: I don't know if that is possible.
22:31  SpookyET: it seems to be
22:31  homekevin: SpookyET: You should see the mapping in :map
22:31  SpookyET: i do see it
22:32  SpookyET: but typing / won't give me /\v when IndexedSearch is installed
22:32  homekevin: SpookyET: Let me clarify. I don't know of a way, other than a mapping, that a plugin can change /.
22:32  homekevin: SpookyET: So, you should see the mapping that IndexedSearch is using to replace / in the output of :map
22:32  graywh: don't you need to escape the \
22:33  xilo: how do you hide the tab bar
22:33  SpookyET: graywh: in the definition?
22:33  homekevin: graywh: It worked for me without escaping
22:34  SpookyET: graywh: no, it's q flag, not part of the regex, needs no escaping
22:34  graywh: also, nmap works fine in this case, nnoremap isn't necessary
22:34  graywh: b/c the rhs starts with the lhs
22:34  SpookyET: well, Install IndexedSearch and see for yourself
22:35  homekevin: I thought "re" in "noremap" meant "recursive".
22:36  graywh: sure, but if the rhs starts with the lhs, you don't have to warn vim abou tit
22:36  graywh: SpookyET, what does :map /  display?
22:36  homekevin: So, I'm confused about :h map-listing. * is supposed to indicate "not remappable".
22:37  SpookyET: graywh:  * call <SNR>15_DelaySearchIndex(0,'')<CR>/
22:37  homekevin: How does a mapping become non-remappable?
22:37  SpookyET: told you it's being overridden
22:37  homekevin: SpookyET: Told you it'd show up in :map
22:40  graywh: homekevin, i think that means the mapping was define with noremap
22:41  homekevin: graywh: Yeah, I thought so to (I saw it on a mapping I had done that way). Is the help wrong?
22:41  homekevin: Oh, maybe I misunderstand what it means by "not remappable"
22:42  graywh: i think it's confusing
22:42  graywh: or not very clear
22:42  homekevin: "Remap", to me, sounds like changing the mapping to do something different. But it may be saying that it won't "map" to other mappings while the mapping is executing.
22:42  fifou: is it mandatory to use vim list to speak about something which seems to be a bug or there is a bugtracker?
22:43  homekevin: As far as I know there's no bug tracker, fifou.
22:43  homekevin: ...unfortunately, because I've been meaning to report a bug for like 2 weeks.
22:43  fifou: how should i do?
22:43  graywh: vim-dev mail list
22:44  crankharder: how can I delete everything up to a character.. say, an underscore
22:44  homekevin: Is vim-dev subscribers-only for posting?
22:44  iaj: crankharder: dt_
22:44  graywh: SpookyET, you can't have both your custom mapping for / and the plugin's
22:44  fifou: I have to be subscribed to vim-dev to post :/
22:45  FernandoBasso: crankharder: One line?
22:45  fifou: df_ crankharder ?
22:45  SpookyET: graywh: I shall use https://github.com/othree/eregex.vim
22:45 --- cuba33ci_ is now known as cuba33ci
22:45  SpookyET: with no indexed search
22:45  crankharder: iaj: how about up to and not including the given char?
22:45  fifou: dt_
22:46  homekevin: crankharder: that's what iaj gave you.
22:46  fifou: f include and t stop before in "df_" or "dt_" crankharder
22:47  crankharder: i can't get dt_ to work, df_ works tho
22:47  homekevin: Er, what happens with dt_?
22:47  crankharder: sometimes nothing, sometimes it deletes the whole line
22:48  homekevin: Do you have some weird mapping?
22:48  crankharder: I've got this in my vimrc: map t gt
22:48  crankharder: that conflicting?
22:48  homekevin: Oh, weird mapping.
22:48  homekevin: I'd say so.
22:48  krz: how can i highlight the line where my cursor is with a faint bg color?
22:48  homekevin: crankharder: Maybe you should make that a nmap
22:48  crankharder: ok, sorry, noob :) -- what would you recommend for a better mapping for gt?
22:49  homekevin: craiggles: <Leader>anything
22:49  homekevin: Oops
22:49  homekevin: crankharder: <Leader>anything
22:49  homekevin: crankharder: No matter what you use, though, "t" is too useful to stomp on.
22:50  Fatih`: Is there any way to visually select the text that I include via the :r command ?
22:50  homekevin: crankharder: Using nmap instead might help in some cases, but ignore that and don't break t.
22:50  craiggles: heh.
22:50  crankharder: i wasn't using t for much :)
22:50  crankharder: thanx!
22:50  craiggles: was wondering why i was highlighted.
22:50  iaj: mgedmin: you up?
22:51  peth: krz: :h 'cursorline'
22:51  homekevin: craiggles: It's because people are blatantly ignoring my "one person per first-two-letters" rule.
22:52  homekevin: Fatih`: I think there are marks you could use to select it, but you'll need special scripting to make it happen.
22:52  homekevin: Fatih`: I'm not positive, but '] and '[ might be set by :r
22:52  krz: peth: it doesnt really say how to activate it
22:52  krz: it just describes it :-/
22:53  homekevin: krz: :h :set
22:53  peth: krz: it's a setting, indicated by the ''. do :set cursorline
22:54  craiggles: homekevin: there is no such rule.
22:54  homekevin: There totally is
22:54  krz: :set cursorline=true doesnt seem to work...
22:54  homekevin: I made it up myself.
22:54  craiggles: homekevin: housetier, hornairs just in this channel alone.
22:55  peth: krz: to enable "set cursorline", to disable, ":set nocursorline", to toggle, "set cursorline!"
22:55  craiggles: sorry for the hilighting guys.
22:55  homekevin: Well, like I said. People are ignoring it.
22:55  krz: peth: ok, i dont see the setting take place. could this be because of my theme?
22:56  krz: oh now i see it
22:56  homekevin: krz: Yes, it could be
22:57  homekevin: It's funny, I used to use an editor with a cursorline-like feature and I got to like it, but I don't use it in Vim and now I kind of hate it.
22:57  peth: exactly the same here.
22:58  krz: peth, homekevin thanks for that
22:59  krz: why? if anything its easier to track where you are. no?
23:00  peth: for the same reason i don't use 'cursorcolumn'. i find it more distracting than useful.
23:00  homekevin: I'm confused. I thought :set option=foo changed both the global and local value
23:05  mhi^: cursorline rocks.
23:07  homekevin: Er... OK, so there's another kind of option scope that I'm no familiar with, apparently.
23:07  homekevin: "global-local"
23:09  Fatih`: homekevin, thanks for the tip, I've use in that var `[v`]
--- Log closed Tue Nov 30 23:13:38 2010
--- Log opened Tue Nov 30 23:19:01 2010
23:19 --- Users 602 nicks [0 ops, 0 halfops, 0 voices, 602 normal]
23:19  mhi^: spiiph: Yup, it works until some Web 2.0 magic pops something up and then ^W closes the tab.. as you said.. annoying as hell.
23:19  homekevin: I can't believe I'm still so confused by options.
23:20 --- Channel #vim was synced in 105 seconds
23:23  hacosta: i remember i saw a command somewhere that called vim to indent files from command line
23:23  hacosta: does someone know about it?
23:24  spiiph: Perhaps :%!indent ? :)
23:24  mhi^: hacosta: maybe: vim +"gg=G" +x <file>
23:25  mhi^: Ah, or what spiiph said. Depending on what you want :-P
23:25  mhi^: +"%=" would have been better, I guess.
23:25  hacosta: i meant from bash
23:26  hacosta: so yeah, what you said is what i want, thanks both
23:27  hacosta: ehm.. nope... this fails
23:27  hacosta: E492: Not an editor command: gg=G
23:27  spiiph: You need +":normal gg=G"
23:29  lamdk: if i have a bunch of tabs open... is there a command thats the same as holding down ZZ ?  (i.e. quit and save everything right away)
23:29  mhi^: hacosta: like in vim you can also combine the commands like: vim +"%= | x" <file>
23:33  mhi^: homekevin: Yup, 'cul' is always local to the buffers, it seems.
23:33  mhi^: *buffer
23:34  mhi^: And :setg seems to detect that.
23:36  hacosta: mhi^: that seems better that what i ended up using
23:36  homekevin: So, doesn't that mean :set cul in .vimrc wouldn't work?
23:37  hacosta: for i in *; do vim +":normal gg=G" +wq $i; done
23:38 --- fedesilva__ is now known as fedesilva
23:39  graywh: homekevin, :set cul in .vimrc does work
23:40  homekevin: OK, so *window* local options are strictly local, but *buffer* local options have a global version.
23:40  homekevin: At least that's my reading of :h local-options
23:41  homekevin: And 'cul' is window-local. I guess in .vimrc the first window gets set to use cul, then any new window copies the value.
23:44 --- fedesilva__ is now known as fedesilva
23:44  homekevin: Wow, it gets even more complicated.
23:45  homekevin: Paragraphs 5 and 6 under :h local-options are... stranc.
23:45  homekevin: *strange
23:46 --- Natch is now known as Natch|
23:48  homekevin: Apparently window-local options have a window and buffer-in-this-window variant
23:48  mhi^: 'cul' belongs to the latter
23:48  _numbers: cucumber.vim syntax highlighting not working for my vim UNLESS i type   :set ft=cucumber   on the open file
23:49  _numbers: any idea how to automatically associate *.feature with ft=cucumber
23:49  mhi^: _numbers: :h new-filetype
23:49  fow: hmm my vim already does that, _numbers. Do you have "filetype plugin indent on" (without quotes) in your vimrc?
23:50  nate-: how can I create an empty buffer in vim?
23:50  nate-: like a scratch buffer
23:50  homekevin: nate-: :new
23:50  nate-: thanks homekevin
23:51  _numbers: mhi^: thx
23:52  _numbers: fow: i think mine used to as well, but i installed a plugin that i think is the trouble
23:52  _numbers: i do have that line
23:52  homekevin: What? A plugin causing trouble? Unthinkable!
23:52  fow: _numbers, does     :au BufNewFile,BufRead *.feature     from within vim return anything?
23:53  _numbers: well there was a line like that in my ~/.vimrc
23:53  _numbers: it was setting ft=gherkin
23:53  _numbers: i changed it to ft=cucumber and all is well now
23:53  mhi^: homekevin: So where are we at? I agree it's a bit confusing, but is there still an open question? :)
23:54  homekevin: No, I'm just still trying to wrap my mind around it.
23:55  mhi^: Okidoki. I'll ask you the next time I encounter such problem, be prepared!
23:55  homekevin: In particular the stuff just above :h :setl really has me stumped.
23:59  genjix: say I have a line like:    if blaa \ \n       and foo:
23:59  genjix: is there a way to join blaa, and 'and'?
--- Log closed Wed Dec 01 00:00:12 2010
