--- Log opened Thu Dec 02 15:16:28 2010
--- Log closed Thu Dec 02 15:16:28 2010
--- Log opened Thu Dec 02 16:28:51 2010
16:28 --- Users 612 nicks [0 ops, 0 halfops, 0 voices, 612 normal]
16:29  iaj: can someone tell me how I can map Y to y$ when Im using yankring?
16:30 * helo adds 'export TERM=xterm' to ~/.bashrc
16:30 --- Channel #vim was synced in 187 seconds
16:33  eroomde: greetings. if you have an ssh config file, say my host is aliased to 'pluto' in the config file, can I run vim scp[blah] using 'pluto' rather than 'username@pluto.example.com'?
16:34  eroomde: as doing the latter asked me for my password (when i have keys set up) and a couple of guess attempts at the former didn't work
16:37  rson: eroomde: i believe you can
16:40  rson: eroomde: just tested, indeed you can.
16:40  eroomde: rson: ah thank you, I just tried again and it worked this time
16:40  eroomde: for some reasom vim scp://pluto/blah.txt failed on me on my initial try but now works. probably a picnic problem but oh well. thanks!
--- Log closed Thu Dec 02 16:45:47 2010
--- Log opened Thu Dec 02 16:51:12 2010
16:51 --- Users 611 nicks [0 ops, 0 halfops, 0 voices, 611 normal]
16:51  ROBOd: Silex: cool, thanks. how do i get the output of :language?
16:51  ROBOd: let l:oldLang = :language ...
16:51  Silex: see :redir
16:52  inkadnb: I'm a VIM newb here
16:52  inkadnb: When using / and ? to search
16:52  inkadnb: how do you move the cursor between the results
16:52 --- Channel #vim was synced in 113 seconds
16:53  gkatsev: n and N
16:53  strull_: ROBOd: let l:oldLang=v:lang
16:53  inkadnb: Ah, awesome. Thank you
16:53  ROBOd: strull_: thanks
16:53  iaj: can someone tell me how I can map Y to y$ when Im using yankring? sorry if that thing got answered but my conn is soo frustrating
16:54  gkatsev: inkadnb: np, just remember that n with ? will cycle through the results by going up. :)
16:54  iaj: can someone tell me how I can map Y to y$ when Im using yankring? sorry if that thing got answered but my conn is soo frustrating :(
16:55  inkadnb: I just started learning Vim today
16:55  inkadnb: Hopefully it won't be too painful :)
16:55  gkatsev: inkadnb: have you read through vimtutor yet?
16:55  inkadnb: I've read a few guides yes
16:55  inkadnb: Not sure if it was that specific one
16:56  inkadnb: Is ESC the only way to switch to command mode?
16:56  gkatsev: vimtutor is the tutor that comes with vim
16:56  gkatsev: inkadnb: er, command mode is :
16:56  inkadnb: Oh, I'm not using Vanilla Vim
16:56  inkadnb: I'm using a plugin for MSVC
16:57  gkatsev: viemu?
16:57  inkadnb: yep
16:57  gkatsev: nice
16:58  xilo: how do i get snipmate and supertab to play nice? right now i have to like hit tab enter tab enter tab just for snippets to insert
16:58  gkatsev: inkadnb: I would suggest that perhaps running vimtutor might be helpful because it goes over, with excerises, the minimum features you need to use everyday.
16:59  inkadnb: will do
17:03  ROBOd: got it to work
17:03  ROBOd: thanks guys!
17:04  iaj: someone in here using yankring?
17:19  canthiswait: anyone here recommend zencoding.vim over sparkup?
17:21  dsdeiz: heya, how do i make vim display characters on the first columns for a fold?
17:23  rson: gkatsev: command mode is normal mode, command-line mode is the : mode
17:23  rson: gkatsev: just for future reference
17:23  gkatsev: oh, yeah, makes sense. :)
17:24  gkatsev: just never heard command mode before
17:24  rson: gkatsev: i was quickly corrected here one day :D
17:24  gkatsev: so, I assumed the `line' was forgotten
17:33  dsdeiz: anyone able to provide a ":h 'help'" for where to find it? :D
17:34  rson: dsdeiz: foldcolumn ? is that what you mean?
17:35  dsdeiz: it's the one i see here http://ompldr.org/vNmRwaQ that gives those characters which i think refers to the line belong to a fold
17:39  rson: dsdeiz: indeed, look at foldcolumn
17:39  dsdeiz: thanks
17:40  rson: dsdeiz: although i don't think whaty ou see in the screenshot is what you think
17:41  rson: the red markers appear to be newline characters
17:41  rson: the dashes appear to be indentation level
17:41  rson: so you actually want listchars, not foldchars, and i'm not sure how to make the colors of different list chars different colors
17:42  rson: not foldcolumn*
17:42  dsdeiz: oh ok, cool. thanks again, i actually am also currently looking at his config :D
17:42  mhi^: How do you get those indentation levels shown in that screenshot?
17:42  rson: dsdeiz: can you pastebin a link to his config? i wanna check it out later.  headed to a work holiday party right now
17:43  rson: mhi^: i'm assuming he is using the broken bar character in listchars and is using hard tabstops
17:43  mhi^: yea, yea, I asked without thinking :)
17:43  dsdeiz: will prolly paste the link directly instead: https://github.com/Lokaltog/sync/blob/master/dotfiles/dot.vimrc
17:44  mhi^: But, how did he color the red arrows then?
17:48  deryni: hl-NonText?
17:49  rson: that would hilght both
17:49  rson: are you sure that's even vim?
17:49  mhi^: No, deryni is right
17:49  deryni: What encoding is that file in?
17:49  mhi^: those 'newline arrows' don't belong to listchars
17:49  dsdeiz: prolly end of line character
17:51  mhi^: Hmm, I'm cofused now. I set the eol to '!' using listchars. Still eol is the only thing affected by nontext, it seems.
17:52  deryni: :help hl-Nontext
17:52  mhi^: yea, showbreak, saw it too late
17:52  mhi^: thanks, deryni
17:53  deryni: The red arrows are on every line, they are going to be lcs=eol: not showbreak (which is wrapped lines).
17:54  deryni: But I still can't figure out what encoding that vimrc is supposed to be.
17:54  xilo: how do i get snipmate and supertab to play nice? right now i have to like hit tab enter tab enter tab just for snippets to insert
17:55  mhi^: deryni: Still I don't see why tabs and other set stuff in lcs wouldn't be shown in red.
17:57  deryni: :help 'lcs
17:57  deryni: Specifically the very last line. So maybe :help 'lpl would be easier.
17:58  mhi^: Ah, SpecialKey is used.. thanks for pointing it out.. again. :]
18:00  bradoaks: please remind me what the plugin is that has vim show a diff of the commit in svn after doing "svn commit"
18:00  bradoaks: my google fu is weak this noon.
18:01  deryni: vcscommand? Though I feel like there may be another (newer?) one also.
18:04 --- _Unode is now known as Unode
18:06  bradoaks: ah, it's a vim plugin 'svn.vim' (still looking for official url)
18:11  bradoaks: http://www.vim.org/scripts/script.php?script_id=978 is svn-diff.vim : Show diff  when commiting changes on a subversion repository
18:12 * mgedmin has a slightly patched version of that at http://mg.pov.lt/vim/ftplugin/svn.vim and wonders if he sent all the changes to the upstream author or not
18:20  bradoaks: mgedmin: what do your changes enhance?
18:21  dsetchell: Hey all, looking to create a temporary window, like the one created for the command window `q:`. I see that there are 'scratch' type buffers at the end of :h windows -- do I create a scratch window? If so how?  Thanks!
18:22  mgedmin: bradoaks, here's svn log ~/.vim/ftplugin/svn.vim: http://pastie.org/1341928
18:23  mgedmin: I should convert that repo and put it on github or something one day
18:25  xilo: why would nerd_commentor key mappings not work correctly? for instance ,cc is deleting stuff instead of commenting
18:25  bradoaks: mgedmin: thanks! showing the newly added files would be great.
18:28  xilo: anyone? this is getting anoying
18:28  telemachus: xilo: maybe another plugin is stepping on the mappings?
18:28  mgedmin: xilo, what does :map ,cc say?
18:28  xilo: hmm
18:28  xilo: no mapping
18:30  telemachus: ah, not sourced then?
18:30  xilo: how can i tell
18:31  xilo: it's loaded
18:31  mhi^: xilo: read :h NERD_commenter.txt
18:31  mgedmin: maybe the mapping is for \cc?
18:31  mhi^: replace all the , by <leader>
18:31  mgedmin: does it use <Leader??
18:31  xilo: mgedmin: yep
18:31  xilo: that was it
18:31  xilo: and it is using <leader>
18:31  mhi^: yea, the description on vim.org is obsolete
18:31  xilo: ah
18:32  xilo: thanks
18:36  mhi^: had the same problem when my mappings stopped working half a year ago :)
18:36  xilo: lol
18:36  xilo: now i wish i could get snipmate and supertab to work together
18:37  mhi^: I never used supertab :|
--- Log closed Thu Dec 02 18:46:49 2010
--- Log opened Thu Dec 02 18:47:07 2010
18:47 --- Users 619 nicks [0 ops, 0 halfops, 0 voices, 619 normal]
18:48 --- Channel #vim was synced in 113 seconds
19:09  mhi^: Too bad that my font doesn't support those vertical dots.
19:10  mhi^: (as shown in the screenshot above)
19:13  deryni: You can get them to show up as replacement characters in the vimrc? I get improperly encoded characters.
19:14  mhi^: deryni: Uhm, well, I get those empty boxes
19:15  deryni: Ah, so you may have the same problem I do then.
19:16  mhi^: But.. I can approve that it works with "DejaVu Sans"
19:16  mhi^: Here's the list I used: http://www.fileformat.info/info/unicode/char/22ee/fontsupport.htm
19:20  mhi^: working with "DejaVu Sans", but not "DejaVu Sans Mono".. life is unfair!
19:21  deryni: You can use the dot.vimrc lcs line directly with DejaVu Sans and it works? Or you can type the character in manually and make it work?
19:21  mhi^: So far I just tried entering it manually.
19:22  mhi^: I'll test it in lcs.. one sec.
19:25  mhi^: deryni: doesn't look very nice, but it's working: http://d.imagehost.org/0019/ellipsis.png
19:25  deryni: Entered into your vimrc manually?
19:26  mhi^: Yup
19:26  Kuukunen: aargh, why does :e ++enc=utf-8  complain "E474: Invalid argument" :(
19:26  deryni: Right. I'm not questioning whether the character works. I'm trying to find out what encoding that vimrc is supposed to be since I can't get it to make sense.
19:27  mgedmin: deryni, on Linux, UTF-8 is a likely answer
19:27  mgedmin: or you could use :let and nr2char() to make it pure ascii
19:27  mgedmin: e.g. I have let &sbr = nr2char(8618).' '  " Show ↪ at the beginning of wrapped lines
19:28  deryni: Not my vimrc, the one from the link.
19:31  kwtm: Hi! I can't find how to take the contents of a register and execute it. Example: if the current line says   :0,3d   then I want to be able to    yy   and then    :doregister "   or some equivalent, and then vim would execute the    :0,3d   command or whatever it said on the line.
19:32  mgedmin: oh dear; looks like a utf-8 file with characters that do not match what is in the screenshot
19:32  mgedmin: I'm guessing someone abuses a custom font
19:32  deryni: mgedmin: Or it got broken somwhere, right, hence why I've been asking. =)
19:33  mgedmin: look at the git repo: custom fonts
19:33  deryni: kwtm: :help @ ?
19:33  w0m: kwtm: :<ctrl>r-0<cr>?
19:33  turre: kwtm: :exec @register
19:33  kwtm: I'm trying to make file-dependent macros; e.g. if I load a certain text file where I have to do (for example)   :8,12co.   all the time, then I want to map the key sequence (for example)   ,p,1   to execute   :8,12co.     but on a different file, I want the same key sequence   ,p,1   to execute    :0,3d   for example.
19:33  mgedmin: URxvt.font           : -*-lokaltog-medium-r-*-*-12-*-*-*-*-*-*-*
19:33  turre: i dunno which was the yank register
19:33  w0m: probalby make a \<keypress> macro to do it instantly
19:33  kwtm: turre: Okay, will check it out.  I guess @register  actually means  @" or @a or whatever the actual register is.
19:34  deryni: mgedmin: Ah, ugh.
19:35  kwtm: turre: Looks like :exec is what I want.  Thanks!
19:37  kwtm: w0m: I think that will work, too.  Thanks!
19:38  kwtm: deryni: Thanks for your help.  I already knew about @ but wasn't sure how to execute the contents of the register.
19:39  kwtm: Also need help defining a search range based on a search pattern.  For example, I want to find a line starting with   :macro-1:  that must occur after a line starting with   :macro-list-start:  and before a line starting with   :macro-list-end:
19:39  kwtm: Similar to   :h search-range   except I want to define the range with search patterns, not line numbers.
19:40  kwtm: Is there anything like  /^:macro-start:/,/^:macro-end://^:macro-1:/    or something like that?
19:40  deryni: Why is @" not the answer? What does :exec @" do differently?
19:41  graywh: deryni, :@" *is* the answer
19:41  kwtm: deryni: I was not aware of the ":exec" command.  That was the information I was missing.  Thanks.
19:42  graywh: kwtm, but :exec isn't necessary
19:42  w0m: so many ways to do things :)
19:42  deryni: Ok so now we have @" :@" and :exec @" I'm still not sure I understand how those are different though, but I'm also not sure I still care. =0
19:42  kwtm: graywh: Really!?  Okay, I must have made a mistake when I tried @"  then.
19:43  graywh: there's :@ and @
19:43  graywh: use :@ to execute a register's contents as cmdline cmd, use @ for normal cmd
19:44  deryni: Ah but if the register already starts with a colon then it doesn't matter?
19:46  graywh: and ends with EOL
19:46  kwtm: graywh: Ahhh, that's why!  I'll try again...
19:47  kwtm: Yess!!  Great, thanks.
19:48  graywh: so if your line was ":0,3d" and you yanked the whole line, @ or :@ would work fine b/c the linewise yank ends with EOL
19:48  deryni: Right. Makes sense.
19:49  kwtm: So, now I can put a section in my file between the lines  :macro-start:   and   :macro-end:  and call it  :macro-1::s/a/b/   and then map the ,p,1 sequence to ... umm...   /:macro-1:/e<CR>ly$@"
19:50  lamdk: is there a way to open :help with a veritcally split window?
19:51  thorat: lamdk: :help :vert
19:52  thorat: lamdk: i.e. see the :vert command
19:52  xilo: how do i execute an external command without having to drop to shell, type my command, then type exit?
19:53  Kuukunen: !
19:53  Kuukunen: xilo: :h :!
19:53  Kuukunen: or something
19:53  xilo: cool
19:53  xilo: thankks
19:55  Kuukunen: hum, so no one has any idea why :e ++enc=utf-8  throws me "E474: Invalid argument" ?
19:56  Kuukunen: (in 7.3)
19:58  w0m: Kuukunen: are you supplying a file name ?
19:58  Kuukunen: w0m: doesn't matter if I supply a file name or try to do it on file that's already opened
19:58  Kuukunen: same thing happens
19:59  Kuukunen: could it be that it's failing because it's malformed utf-8 or something?
20:00  lamdk: hmm in a vimscript function, is there a way to specify an argument is optional?   i.e.  so i call it with either foo()  or foo(1)
20:02  graywh: lamdk, :h function-argument
20:03  Kuukunen: argh, it's happening even with a empty .vimrc and no plugins :(
20:05  lamdk: oh you put ... as the arg
20:05  graywh: Kuukunen, :echo has('+multi_byte')
20:06  graywh: s/+//
20:06  Kuukunen: nowait wtf
20:06  Kuukunen: "E519: Option not supported: fenc"
20:06  Kuukunen: did you mess up when compiling? :(
20:06  Kuukunen: err
20:06  Kuukunen: I * :P
20:07  graywh: what OS?
20:07  Kuukunen: ubuntu
20:07  Kuukunen: I compiled vim myself just recently
20:07  Kuukunen: graywh: also, 0
20:07  graywh: here's my instructions for compiling: https://gist.github.com/211238
20:07  Kuukunen: but why wouldn't it support encodings by default :(
20:08  Kuukunen: well, anyway, yay, at least now I know where to start looking
20:08  mgedmin: I agree, not enabling multi_byte by default is ... dumb
20:09  Kuukunen: some legacy thing? :P
20:09  graywh: it's part of the big feature set
20:10  Kuukunen: graywh: but everyone should use utf-8 these days dammit
20:11 * graywh agrees with mgedmin 
20:12  bradoaks: people, sure.  but computers keep doing what we told them to do a decade ago.
20:12  bradoaks: not everyone has the time to re-tell all that was told to the computer then.
20:14  djmccormick: i'm sure there's a vim script that could do it ;)
20:14 --- Silex is now known as silex
20:17  Miesco: case "-i"   { $names[$i]  = ["i", $ARGV[$p+1]]; $i++ }      /\[\(.*\), \(.*\)\] matches from the [ in [$i], but it needs to match the [ after that
20:28  mhi^: Miesco: /\[".*\] ?
20:30  Miesco: mhi^: No I need captures
20:30  mhi^: well, take your example and include the "
20:31  Miesco: kk
20:31  Miesco: i'll try
20:33  Kuukunen: hum, what kind of situations does vim open a file as readonly?
20:33  Miesco: mhi^: So simple. Thanks!
20:33  Kuukunen: I open a file that according to "file" is UTF-8 and everything displays just fine, but it opens it as RO
20:34  Miesco: Kuukunen: When you do not have write access
20:34  Kuukunen: but I do :P
20:34  Kuukunen: I can force write it
20:34  Kuukunen: and... after writing, next time I open it, it's not RO ...
20:34  Kuukunen: hex editor to the rescue!
20:35  deryni: What are the permissions on the file when vim says RO?
20:36  Kuukunen: deryni: oh, that makes sense :P
20:36  Kuukunen: thanks
20:36  Kuukunen: wasn't writable by group
20:36  Kuukunen: ...how the hell could I force write it tho...
20:37  deryni: Because your user could write it and can write in the directory?
20:37  mhi^: Miesco: :)
20:38  Kuukunen: deryni: but it's owned by someone else... and I'm just in the same group and the group doesn't have write access
20:38  Kuukunen: and when force writing, it would change the ownership to me
20:39  deryni: Directory permissions?
20:39  Kuukunen: but... how could directory permissions override that?
20:39  Kuukunen: I didn't know it was possible :P
20:39  mhi^: sticky sticky sticky :)
20:42  deryni: IIRC write on a directory lets you create/delete files in the directory, presumably that's what vim does at that point, but you'd have to strace it or something to see.
20:50  Kuukunen: deryni: yea, I guess that's it
20:51  cagdas: hi, how can I make sure that vim is working on the latest copy when I work on a svn repo and without closing vim I work on the merged files
20:55  Miesco: http://paste.pocoo.org/show/299150/   I am making my sql command with this
20:55  singlecore: hello world
20:55  Miesco: For handle_null(), how would I return a string where it has quotes ''
20:55  Miesco: singlecore: Are you a bot?
20:56  singlecore: lol
20:56  singlecore: yes
20:56  singlecore: ^^
20:56  Miesco: For a hello, world bot, your pretty intelligent
20:56  singlecore: v2
20:56  singlecore: ;)
21:02  eyda|mon: how can I load special behavior based on filetype ( as opposed to filename extension where I'd use: au BufNewFile,BufReadPost *.txt set textwidth=72, for example )
21:02  deryni: :help FileType
21:03  dsetchell: Hey all trying to create a buffer local autocommand: au BufUnload <buffer> call s:My_function(<abuf>)
21:03  dsetchell: but <abuf> is not getting "invalid expression"
21:04  dsetchell: anyone know how to pass the buffer number of the buffer triggering the autocommand to a function called by the autocommand?
21:04  eyda|mon: deryni: so just au FileType manpage runtime! macros/less.vim, for example?
21:06  eyda|mon: deryni: seems to work. thanks :)
21:06  deryni: dsetchell: expand("<abuf>") maybe?
21:06 * mhi^ nods
21:08 --- MikhX_ is now known as MikhX
21:08  dsetchell: deryni: thanks, but no dice
21:09  popl: I have an iab set to replace ){{ with an empty brace set but it does not seem to work if there are characters immediately preceding the abbreviation characters. Is there a way around this behavior, like with wildcards or something?
21:09  dsetchell: Maybe I'm just going about this wrong - I'm creating a scratch buffer, when that scratch buffer unloads I want to process the text
21:10  dsetchell: Thought a buffer local autocommand would be best -- but I don't know how to hand the contents of the buffer to the function being called by the autocommand
21:11  popl: the entire line is this: iab ){{ ){<CR>}<C-O>O<C-R>=Eatc('\s')<CR>
21:11  popl: Eatc is a function defined earlier in the file that just eats some character
21:12  mhi^: popl: use snipmate
21:12  popl: mhi^: ah, that seems very useful. thank you.
21:13  eyda|mon: popl: it's awesome. this review was ok: http://www.youtube.com/watch?v=_galFWwSDt0
21:14  eyda|mon: popl: good to watch to find other useful tools too :)
21:15  popl: does it have language agnostic snippets as well?
21:15  popl: er, s/agnostic/independent/
21:15  mhi^: well, you define snippets for filetypes
21:15  eyda|mon: popl: it's set according to filetype
21:16  mhi^: and it's very easy to define new snippets, just look at the shipped ones
21:16  eyda|mon: popl: and if you do something like ft=eruby.html you get the snippets for both eruby and html, for example
21:16  eyda|mon: although doing that screws up the surround plugin :/
21:17  popl: yummy bugs
21:17  popl: what a good source of protein :)
21:18  eyda|mon: duh, scratch that, it's the tcomment plugin it screws up
21:29 --- threeve is now known as threaves
21:29  popl: sweet!
21:29  dotCOMmie: Is there a neat way to retab a pasted chunk?
21:29  popl: that's awesome. I want to hug you :P
21:29  dotCOMmie: :'<,'>retab doesn't seem to do it
21:30  popl: =
21:30  popl: er, select it then filter with =
21:31  dotCOMmie: popl: you talking to me?
21:31  popl: yes dotCOMmie
21:32  dotCOMmie: What do you mean by filter?
21:32  dotCOMmie: oh
21:32  popl: oh wait, when you typed tab I interpreted it as indenting
21:32  dotCOMmie: !
21:33  dotCOMmie: I did :'<,'>s/    /\t/g but that looks nasty
21:33  dotCOMmie: and there are probably better ways of doing that
21:34  popl: I use expandtab though so I don't know what that looks like with just <Tab>
21:34  popl: I am at war with <Tab>! :)
21:34  deryni: If the pasting indented all wrong you may want :help 'paste . If that's not the problem then using = might work if you have filetype indenting turned on.
21:35  dotCOMmie: Well I do use paste to paste.. but then I want to space to tab
21:37  deryni: You want to convert pasted spaces to tabs?
21:40  dotCOMmie: yep
21:41  deryni: retab!  :help :retab
21:42  lamdk: is there a vimscript function that does the same sort of thing as %?   or do i gotta do  'normal %'   (workin on a plugin)
21:43  lamdk: i want to getpos()  at the matching paren
21:44 --- forneus_ is now known as forneus
21:47  popl: thanks for the help, bye
21:51  dsetchell: Hey all i'm putting `au BufUnload <buffer> call s:My_command(<abuf>)` but it is passing a literal <abuf> to the function -- how do i pass the buf number to the function?
21:53 --- ciaranm is now known as np
21:54 --- np is now known as ciaranm
21:57  consumerism: i've just hit Y to yank some text to the end of a line. now i put my cursor in the middle of a new line and want to replace from my cursor to the end of the line with what i've just yanked. what's the best way to do this?
21:57  consumerism: s/new/different
21:57  graywh: v$p works
21:58  deryni: And Y is yank the entire line by default.
21:58  consumerism: graywh, deryni - thanks
21:59  mhi^: dsetchell: do what deryni said before and replace <buffer> by *
--- Log closed Fri Dec 03 13:04:41 2010
