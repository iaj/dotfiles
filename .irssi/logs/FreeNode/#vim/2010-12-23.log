--- Log opened Thu Dec 23 00:00:17 2010
--- Day changed Thu Dec 23 2010
00:00 --- zz_dhruvasagar is now known as dhruvasagar
00:00  fow: I think you'd have trouble finding a client that can't
00:00  FernandoBasso: fow: :D
00:00 --- dhruvasagar is now known as zz_dhruvasagar
00:05 --- zz_dhruvasagar is now known as dhruvasagar
00:06 --- dhruvasagar is now known as zz_dhruvasagar
00:10 --- zz_dhruvasagar is now known as dhruvasagar
00:11 --- dhruvasagar is now known as zz_dhruvasagar
00:15 --- zz_dhruvasagar is now known as dhruvasagar
00:15  Raimondi: vimgor hates away updates
00:15  vimgor: I want to kill a kitten! away messages and nick updates are evil, those who use them should be given the choice to either be restricted to #hell or just read this: http://bisqwit.iki.fi/jutut/away.html
00:15  Raimondi: dhruvasagar: ^
00:16 --- dhruvasagar is now known as zz_dhruvasagar
00:16 --- graywh|work is now known as graywh
00:16 --- ChanServ sets modes [#vim +o graywh]
00:16  FernandoBasso: He/She was just banned from irssi.
00:17 <-- graywh has kicked zz_dhruvasagar from #vim (stop with the nick changes for away)
00:17 --- ChanServ sets modes [#vim -o graywh]
00:20 --- zz_dhruvasagar is now known as dhruvasagar
00:26 --- dhruvasagar is now known as zz_dhruvasagar
00:27  homekevin: Well, that didn't last long
00:27  Raimondi: auto away+auto join?  lol
00:28  homekevin: That's a bannin'.
00:28  Raimondi: bring the auto ban! :p
00:30  pattern: according to this article: http://www.theatlantic.com/technology/archive/2010/12/the-simple-software-that-could-but-probably-wont-change-the-face-of-writing/68364/
00:30  pattern: "The Simple Software That Could--But Probably Won't--Change the Face of Writing" is...
00:30  pattern: Etherpad
00:30  pattern: which "promised (or threatened) to save every keystroke: every note and idea, every version of a phrase, every snag and breakthrough. It would all be recorded, and labeled, and automatically backed up as you typed."
00:31 --- zz_dhruvasagar is now known as dhruvasagar
00:31  pattern: and, on top of the page it had "a slider, the kind you might use to move through a song in iTunes or adjust the treble on your hi-fi. As you moved the slider the text changed."
00:31 --- dhruvasagar is now known as zz_dhruvasagar
00:31  pattern: i wonder how hard that would be to implement in vim
00:32  ceej: anyone got openurl to work with macvim ?
00:32  pattern: obviously, the slider part would have to be external... but the easy saving/replaying of all changes..  that shouldn't be too hard, should it?
00:32  Raimondi: gundo?
00:32  Raimondi: persistent undo?
00:33  pattern: yeah.. it's persistent undo/redo... but the crucial difference is the easy interface
00:34  pattern: of course, getting the typical writer to use vim would probably be the bigger challenge..
00:36 --- zz_dhruvasagar is now known as dhruvasagar
00:37  ceej: anyone know how to get openurl working?
00:38 --- dhruvasagar is now known as zz_dhruvasagar
00:39  chewbranca: anyone have a recommendation for a plugin that will format tables of text to have appropriate spacing? ie | foo | bar | foobar| on one line, then | asdfasdf | fdsa | asdffdsaasdf | on another line, and make an appropriately spaced table out of that
00:40  Raimondi: vimgor tabular
00:40  vimgor: Tabular is godlygeek's plugin to align text in vim, http://github.com/godlygeek/tabular
00:40  Raimondi: chewbranca: ^
00:41 --- zz_dhruvasagar is now known as dhruvasagar
00:41  chewbranca: great, thanks!
00:42 --- dhruvasagar is now known as zz_dhruvasagar
00:42  Raimondi: ceej: It works here with MacVim and MAc OS X 10.6
00:45  ceej: Raimondi: I'm getting this...... http://screencast.com/t/B3sEBIhVMohL
00:45  Raimondi: ceej: What's the output of :version
00:46  ceej: Raimondi: https://gist.github.com/eae51eb7bde01a9487e9
00:46 --- zz_dhruvasagar is now known as dhruvasagar
00:47 --- dhruvasagar is now known as zz_dhruvasagar
00:47  Raimondi: ceej: python is not enabled
00:47  ceej: it has -python
00:47  ceej: ah
00:48  ceej: sudo port install macvim +ruby +python
00:48  ceej: I'm doing that
00:48  ceej: so hopefully it should work now
00:49  ceej: thank you for helping me find that
00:50  chewbranca: Raimondi: thanks for pointing out tabular, works exactly as I had hoped
00:53  Raimondi: ceej, chewbranca np
00:55  chewbranca: Raimondi: actually very excited with it, saw somebody doing something similar in textmate, but tabular lets you define a regex delimiter and whatever else you want (which you obviously know) which is a much more flexible tool than I had expected
00:55  ceej: Raimondi: still getting that same error
00:55  ceej: do I need python 3 or something?
00:55  iaj: when you guys got a textblock visually selected that you want to sort (depending on the first char of each line)
00:55  iaj: how would you do it?
00:56  ceej: `o wait I'm getting this http://screencast.com/t/bStuQCQy0xh
00:57 --- zz_dhruvasagar is now known as dhruvasagar
00:57 --- dhruvasagar is now known as zz_dhruvasagar
01:00  gdoteof: So I don't know anything about macros.  I need to dump this big thing of data into something structured and I think my easiest way is going to just record a macro in vim.  I just have some questions before i go that route
01:00  chewbranca: iaj: http://vim.wikia.com/wiki/Sort_lines
01:00  ceej: Raimondi: is there a reason https://gist.github.com/752331
01:00  ceej:  would be causing that?
01:00  Raimondi: ceej: Where did you get this plugin?
01:01  gdoteof: i press 'q' then a letter and it says recording
01:01  gdoteof: actually nm for a min
01:02 --- zz_dhruvasagar is now known as dhruvasagar
01:02  gdoteof: can i edit a macro?
01:02  gdoteof: like after i've saved it
01:03 --- dhruvasagar is now known as zz_dhruvasagar
01:03  iaj: chewbranca: thanks)
01:04  fow: gdoteof, macros are saved in registers. so qbq stores the macro in the b register. so   "bp    pastes the macro, edit it using normal Vim editing, then yank/delete into it   "byy   for example
01:05  strull_: rather "by$ then "byy (to avoid adding a <cr> to your macro)
01:05  fow: good call
01:07 --- zz_dhruvasagar is now known as dhruvasagar
01:07  Raimondi: ceej: has('gui_mac')  returns 0 for MacVim, maybe that's the problem.
01:07 --- dhruvasagar is now known as zz_dhruvasagar
01:07  gdoteof: fow.  ah that makes sense
01:08  EspadaV8: hey, is there a way to insert a new line at the current cursor location?
01:08  gdoteof: if i am at the end of a line, is there a command to delete backwards to the first non whitespace?
01:08  EspadaV8: without needing to enter insert mode, press enter, exit insert mode
01:09  strull_: gdoteof: like d ?
01:09  fow: gdoteof, ^D (that is ^ then D, not ctrl+d)
01:09  strull_: oops, like d^ ?
01:09  EspadaV8: gdoteof: could try `diw`
01:09  EspadaV8: that'll delete the inner word
01:09  gdoteof: diw is what i needed
01:10  EspadaV8: diw doesn't go to the whitespace though if you have - in the words
01:11  EspadaV8: e.g. hello there-gdoteof
01:11  EspadaV8: it'd leave you with hello there-
01:11  gdoteof: EspadaV8: can't you just use O<esc>
01:11  fow: oh I misread
01:11  EspadaV8: gdoteof: O will insert a new line above the current line
01:11  fow: There's also diW
01:12  Raimondi: ceej: BTW, I was testing this one:  http://www.vim.org/scripts/script.php?script_id=3291
01:12  EspadaV8: hello| world - if my cursor is the | and i want to insert a new line at that location
01:12 --- zz_dhruvasagar is now known as dhruvasagar
01:12  gdoteof: EspadaV8: right.  yeah i have something like -->hello EspadaV8          |<--  i needed to remove the whitespace from the cursor to the 8
01:12  gdoteof: EspadaV8: ah.  like the opposite of J.. sort of
01:12  wooden: gdoteof: What about just db
01:12  EspadaV8: yeah
01:13  fow: EspadaV8, there is nothing by default, but you're more than welcome to make a mapping like i<CR><Esc> for example (or r<CR> if you don't want the whitespace)
01:13  gdoteof: wooden: that deletes the whitespace and the preceding word
01:13 --- dhruvasagar is now known as zz_dhruvasagar
01:15  gdoteof: F YES I LOVE MACROS
01:15  wooden: hehe
01:15  gdoteof: registers don't have persitence do they?
01:16  fow: gdoteof, :h viminfo
01:17  ceej: Raimondi: what's the command to get the file name not the full path like %:p
01:17 --- zz_dhruvasagar is now known as dhruvasagar
01:18 --- dhruvasagar is now known as zz_dhruvasagar
01:20  Raimondi: ceej: maybe %:t  ?
01:20  Raimondi: ceej: Not sure what you want.
01:20  ceej: yee that's what I need...ty
01:21  bosie: how can i find out why a plugin doesn't seem to load
01:21  bosie: specifically fugitive
01:22  Raimondi: bosie: Make sure it's not listed in  :scriptnames
01:22 --- zz_dhruvasagar is now known as dhruvasagar
01:23  bosie: Raimondi: is there a way i can search the result list of :scriptnames
01:23 --- dhruvasagar is now known as zz_dhruvasagar
01:24  Raimondi: Not directly, you could redirect the output though, see  :h :redir
01:24  Raimondi: bosie: ^
01:24  ceej: Raimondi: I got it working still shows the errors but opens up the URL finally
01:25  Raimondi: ceej: Good!
01:25  bosie: Raimondi: thanks and it is in there
01:25  tonymec: even a script listed in :scriptnames might be disabled if its source has a :finish near the top
01:26  ceej: Raimondi: thanks for your help.  btw is there anyway to suppress those errors?
01:26  bosie: oh shit, vim just crashed
01:26  Raimondi: tonymec: It might even be emtpy, but that's the first step :)
--- Log closed Thu Dec 23 01:30:08 2010
--- Log opened Thu Dec 23 01:30:29 2010
01:30 --- Users 558 nicks [0 ops, 0 halfops, 0 voices, 558 normal]
01:30  Raimondi: tonymec: That usually stops the plugin from being re-loaded, but if it's listed it means vim can find it.
01:31  bosie: it says that a left-hand scrollbar is always present
01:31  tonymec: Raimondi: yes, but it also gives you a way to disable it by setting the variable in your vimrc
01:31  bosie: for what?
01:31 --- Channel #vim was synced in 88 seconds
01:33  tonymec: bosie: well, you can make it optional (depending on vsplitted windows) with :set go-=l go+=L
01:33  bosie: is there a way to search through the help settings?
01:33  Raimondi: bosie: :h :helpgrep
01:33  tonymec: bosie: :help helphelp
01:34  bosie: thanks thanks
01:34  Spreadsheet: In C, whenever I do: func(" it always highlights the rest of the file
01:34  Spreadsheet: However when I do: char *s = " it does not
01:34  Spreadsheet: Is there a reason for this or is it a bug
01:35  bosie: any ACK users in here?
01:35  bosie: preferable with the ack plugin in use ;)
01:35  jerojasro: vimgor ask
01:35  vimgor: You shouldn't ask for permission before asking a question. Just ask your question, and if some one can answer, they will.
01:36  bosie: i didn't ask for permission though ;)
01:36 * jerojasro feels like some kind of meta-bot...
01:36  jerojasro: bosie: I do remember at least one person here is a happy user of that plugin, but can't remember his/her nickname...
01:37  bosie: how can i use the file types right away?
01:37  bosie: i.e. --nophp
01:37  bosie: or --tex
01:37  bosie: i tried the options but it doesn't seem to work
01:38  tonymec: bosie: :help :filetype (and make sure your vimrc has the appropriate statement)
01:38  bosie: tonymec: file types in ack. ack has a parameter for it
01:38 --- zz_dhruvasagar is now known as dhruvasagar
01:39 --- dhruvasagar is now known as zz_dhruvasagar
01:41  FernandoBasso: Is there a way to make vim always make all kinds of buffers 'listed'?
01:42  bosie: as usual, thank you very much guys, good night
01:43  tonymec: FernandoBasso: you can list all buffers (even unlisted ones) by adding a bang to the :ls command
01:44  FernandoBasso: tonymec: I know :buffers! or :ls!
01:44  tonymec: FernandoBasso: or :bufdo setlocal listed
01:44  tonymec: oops, I meant setlocal buflisted
01:45  FernandoBasso: I need to make help buffers always listed. I am translating vim, and I use :mksession a lot. For some reason, :mkession is adding some lines to 'bw' 'u' buffers.
01:45  FernandoBasso: Then I either have to edit the session file and remove those lines, or set bufliste for every buffer, everytime I need to :mksession.
01:46  tonymec: FernandoBasso: well, :au FileType help setlocal buflisted
01:46  FernandoBasso: Very well. Thanks.
01:49 --- zz_dhruvasagar is now known as dhruvasagar
01:50  ceej: anyone here use matchit?
01:50 --- dhruvasagar is now known as zz_dhruvasagar
01:50  Raimondi: vimgor: anyone
01:50  vimgor: Please do not ask if anyone uses, knows, is good with, can help you with or is a guru/expert of <some program>. Instead, ask your real question. You'll probably get help faster that way.
01:50  Raimondi: ceej: ^
01:51  ceej: it doesn;t seem to be working with braces { }
01:51  Flecha: Hi! When scripting for VIM, in a function definition, how do I use the comand ":cc<CR>zz" (that would go to the actual error and center it) ?
01:53  walt: Flecha: :normal
01:53  Raimondi: ceej: Maybe they aren't in matchpairs, :set matchpairs?
01:53  ceej: they are.....
01:54 --- zz_dhruvasagar is now known as dhruvasagar
01:55 --- dhruvasagar is now known as zz_dhruvasagar
01:57  Flecha: walt, you mean I should use ":normal :cc<CR>zz" in my function?
01:57  walt: Flecha: yes
01:57  walt: :h :normal
01:58  tonymec: ceej: :au FileType c,cpp,css,javascript let b:matchwords = &matchpairs
02:01  ceej: Raimondi: still no go :/
02:05 --- zz_dhruvasagar is now known as dhruvasagar
02:05 --- dhruvasagar is now known as zz_dhruvasagar
02:07  gdoteof: can i run a command from my shell from within vim?  specifically I want to run php -l on my current buffer
02:07  Flecha: walt, I placed "normal :cc" in my function, but it seems to ignore it =/
02:10  tonymec: ceej: oops: b:match_words with underscore
02:11  Flecha: erm... how do I copy a text from VIM to Linux copy&paste buffer?
02:11  wooden: Flecha: vim in a termina, or gvim?
02:11  tonymec: Flecha: why "normal :cc" and not just plain "cc" (without quotes of couse)?
02:12  Flecha: terminal
02:12  Maahes: I keep forgetting, what's the range syntax? I tried #,# and #;# and neither of them seem to work
02:12  tonymec|away: Flecha: :help quoteplus
02:12  wooden: Flecha: If it's compiled with X support you should be able to y"*
02:12  Raimondi: Maahes: :h :range
02:12  Raimondi: ceej: No idea :(
02:13  wooden: Flecha: "*y rather
02:13  Maahes: Raimondi: I looked there, I didn't get the answer I was looking for. I'm wanting to do something like 1-5dd in normal mode, is this possible or do I have enter :
02:14  Raimondi: Maahes: range works for ex commands
02:14  Maahes: ah, that explains that ^_^
02:14  Flecha: wooden, it is compiled with X, but I tried "*y and didn't work =/
02:15 --- zz_dhruvasagar is now known as dhruvasagar
02:15  wooden: gdoteof: In absence of better suggestions, you can do :!php -l <pathtoyourfile>
02:15  tonymec: Maahes: to delete the first 5 lines of the current file, use :1,5d (with the :delete ex-command) :)
02:15  Flecha: tonymec,  oh! only "cc" worked, ty =)    but how do I do the "zz" now?
02:16 --- dhruvasagar is now known as zz_dhruvasagar
02:16  Flecha: I mean "cc" works has ":cc", but and only "zz"?
02:17  wooden: Flecha: Most terminals can override application mouse support if you hold down shift and select your text in the terminal.  That should get the text in your X selection buffer.
02:17  tonymec: Flecha: maybe ":cc | normal! zz" ?
02:18  Flecha: wooden, yeah! it worked! ty!
02:19  wooden: Flecha: You should get the other method working though, because when you start using taglist or vsplits the shift-select method breaks down.
02:19  Flecha: tonymec, thanks again! it worked too
02:20 --- zz_dhruvasagar is now known as dhruvasagar
02:21 --- dhruvasagar is now known as zz_dhruvasagar
02:21  Flecha: wooden, oh nvm... only wanted to do that to show you the code, but now it is working
02:21  Flecha: why sometimes to put a "!" after a function and sometimes not?
02:22  Raimondi: Flecha: :h E127
02:23  tonymec: Flecha: To use the X clipboard in terminal Vim, you need all of: compiled with +x11, compiled with +clipboard, running in a terminal with access to the X server (i.e. e.g. not in the Linux text-only console on /dev/tty2)
02:24  tonymec: Flecha: meaning of the ! after an ex-command is explained in the help for each concerned ex-command. For :normal it means: don't remap
02:25  Flecha: hum...
02:25 --- zz_dhruvasagar is now known as dhruvasagar
02:25  Flecha: I am a bit confused with VIM yet =P
02:25  Flecha: started to use about 1 week
02:26 --- dhruvasagar is now known as zz_dhruvasagar
02:26  tonymec: Flecha: we all are to some degree (except maybe Bram), but it will progressively get better. Happily the help is of topnotch quality.
02:27  tonymec: Flecha: see :help helphelp.txt about finding your needles in the help haystack ;-)
02:27  Flecha: oh, ty =)
02:30 --- zz_dhruvasagar is now known as dhruvasagar
02:31 --- dhruvasagar is now known as zz_dhruvasagar
02:33  Flecha: Thanks for all the help, guys! Need some sleep now... Cya!
02:35  KB1JWQ: How frequently is zz_dhruvasagar changing nicks?  Trying to see if the issue is still ongoing.
02:35 --- zz_dhruvasagar is now known as dhruvasagar
02:36  ceej: anyone else use php_sql_query ?
02:36 --- dhruvasagar is now known as zz_dhruvasagar
02:36 --- ChanServ sets modes [#vim +o KB1JWQ]
02:36 --- KB1JWQ sets modes [#vim +b *!*@65.98.79.137$##fix_your_connection]
02:36  ceej: it doesn't seem to indent properly
02:37 <-- KB1JWQ has kicked zz_dhruvasagar from #vim (Please ping an op or a staffer to remove the bandforward once you've fixed your nickchange script.)
02:37 --- ChanServ sets modes [#vim -o KB1JWQ]
02:37  KB1JWQ: Er...
02:38 --- ChanServ sets modes [#vim +o KB1JWQ]
02:38 --- KB1JWQ sets modes [#vim -b *!*@65.98.79.137$##fix_your_connection]
02:38 --- ChanServ sets modes [#vim -o KB1JWQ]
02:41 --- dhruvasagar is now known as zz_dhruvasagar
02:42 --- ChanServ sets modes [#vim +o KB1JWQ]
02:42 --- KB1JWQ sets modes [#vim +b *!*@65.98.79.137$##fix_your_connection]
02:42 <-- KB1JWQ has kicked zz_dhruvasagar from #vim (you should know better)
02:43 --- ChanServ sets modes [#vim -o KB1JWQ]
02:44 * Raimondi stands up and applauds our strangely nicknamed op
02:45  tonymec: Raimondi: that guy is a freenode staffer, the "strange nick" is his ham-radio callsign. :-)
02:46  Raimondi: tonymec: I'd have never guessed that, thanks! :)
02:50 --- EspadaV8_ is now known as EspadaV8
02:55  zok: Is there a way to make vim not log anyhing to .viminfo ?
02:55  zok: So that it just completely ignores that part altogether
02:57  Maahes: latest Vim is 7.3 right?
02:57  Maahes: vimgor latest
02:57  vimgor: I have no idea!
02:58  Raimondi: zok: :h viminfo-write
02:58  Raimondi: Maahes: Yes
02:59  Maahes: Raimondi: thankyou
03:04  aerosolapple: i want vim to substitute characters starting at a specific line all the way down to the end of the file
03:04  aerosolapple: 66,Ls/^/http/
03:04  aerosolapple: doesnt work when i use L for my range
03:05  aerosolapple: i was under the impression the L  argument would work since it represents last line or end of file i thought?
03:06  frogonwheels: aerosolapple: $  is last line
03:06  frogonwheels: .,$  s/^/http/   (from current line to end of file)
03:06  frogonwheels: aerosolapple: ^^
03:06  aerosolapple: ahh i see
03:07  aerosolapple: thank you very much for the help
03:08  ceej: so %:p gets the total root of a file is there just a way to get to main folder root I did mvim . at ?
03:14  rson: ceej: chdir $PWD may work
03:14  rson: :chdir $PWD *
03:14  rson: god dammit... just :chdir $PWD
03:16  ceej: rson: so to get the full path of the file from inside the dir i opened from vim I can do https://gist.github.com/752459 ?
03:16  ceej: it doesn't seem to woth... still returns the full path
03:16  ceej: work*
03:17  ceej: I basically want to remove root from the file full path
03:17  rson: that would make assumptions you may not want to make
03:17  rson: such as the current file is somewhere underneath $PWD
03:18 * rson looking up matchend
03:18  ceej: well the current file I'm getting the full root path
03:18  ceej: so it;s impossible
03:19  tonymec: ceej: see :help filename-modifiers
03:19  ceej: I basically want to do %:p - $PWD
03:19  zok: Ok, I'm trying to have apache use vim (through a system() call) and I keep getting: Can't write viminfo file $HOME/.viminfo!
03:19  zok: I tried setting viminfo=""
03:19  zok: And that doesn't seem to make a difference
03:19  zok: Since apache doesn't have a $HOME
03:20  zok: At least, I don't think it does...
03:20  tonymec: zok: use "vim -i NONE" as your external editor, see :help -i
03:21  rson: tonymec: i don't think there is a modifier that will work in all cases for what he wants.  :. is close, but the current working dir in vim is not always the path you started vim from
03:21  zok: ah!
03:21  zok: Thanks :)
03:21  jnylen: Hey guys, vim keeps the cursor on the screen when I scroll through a document using the mouse, how can I stop it from doing that?
03:21  spiiph: You can't.
03:21  rson: you can't afaik.
03:22  walt: jnylen: that's not how vim works
03:22  walt: it would break a lot of functionality
03:22  jnylen: walt: how so?
03:22  walt: and it makes no sense
03:22  zok: Thanks tonymec - and thanks Raimondi
03:22  rson: well if you want to be pedantic about it, vim is an editor, and without a cursor, you really can't edit much.
03:22  tonymec: jnylen: you can't
03:22  jnylen: fine, you can't
03:23  jnylen: but the use case is like in $WINDOWS_EDITOR when you scroll up to look at another portion of your code
03:23  jnylen: then resume typing where you were before you scrolled around
03:23  walt: jnylen: ctrl-O
03:23  deryni: So split a window and scroll there.
03:23  spiiph: jnylen, what you do is :split, scroll, :close, resume editing
03:23  spiiph: Which is a lot more useful anyway
03:24  walt: there us also a mark for where you last edited
03:24  walt: don't remember which one it is
03:24  walt: '.
03:24  walt: maybe
03:24  rson: g; i think will take you there, there are other ways probably
03:24  rson: gi will take you there and place you in insert mode
03:25  jnylen: what does Ctrl+O do?
03:25  walt: jnylen: goes back in the jump stack
03:25  rson: jumplist vs changelist
03:25  tonymec: jnylen: well, in Vim the cursor always remains visible. If you scroll far enough, the window top or bottom will push the cursor to keep it visible. Use marks (:help mark-motions) if you want to "mark your place" and later go back to it.
03:26  walt: jnylen: :help '.
03:26  jnylen: ok
03:26  walt: read that
03:26  jnylen: very helpful suggestions all, thanks
03:26  gdoteof: can i start a macro in normal mode and end in insert mode?
03:27  gdoteof: if so.. how do i stop the macro while in insert mode
03:27  gdoteof: i guess i could just record it, paste it and and an i to the end
03:28  walt: hm, how do I go to the beginning of the text of a line while staying in normal mode?
03:28  walt: like I but not insert mode
03:28  deryni: 0 or ^
03:29  deryni: depending on what you mean by "beginning".
03:29  walt: deryni: 0 goes to column 0, which is not the same.
03:29  walt: ah, ^ is probably what I want
03:29  walt: thanks
03:29  deryni: ^ is two entries under 0 in the help.
03:30  deryni: As is generally the case for related items in the vim help system.
03:30  tonymec: gdoteof: place anything in a register, you can repeat it like a macro. For instance :let @q = 'i' will register in register q a macro to start insert mode (not very useful, but proof-of-concept)
03:33  tonymec: gdoteof: I haven't checked what Ctrl-O q does when recording a macro in Insert mode (it should stop recording, but maybe it also records the Ctrl-O as the last character in the macro?)
03:56 --- RobertMeta is now known as MetaCosm
04:19  EspadaV8: \exit
04:49  mattcodes: I want to create a mapping to go to the active NERDTree window
04:50  mattcodes: NerdTreeToggle = fail since its toggles it on and off
04:50  mattcodes: NerdTree = fail since it creates a new instance
04:50  mattcodes: CTRL+W l = fail since I might have other vertical splits in between
04:53  Rakko: hmm
05:00 --- ml|_ is now known as ml|
05:00  JbyDesign: Hello
05:01  JbyDesign: Quick question if it's not too much trouble, I noticed when using vim it highlights matching < and >s in my HTML, { and } in my CSS/PHP, and () in my functions. Is there anyway to turn that off?
05:04  deryni: Highlight them when?
05:05  JbyDesign: Whenever my cursor is one one of them in I think command mode it's called.
05:05  JbyDesign: *on one of those characters
05:05  deryni: Normal mode, and :he pi_paren
05:14  JbyDesign: So, what's your favorite vim colorscheme?
05:14  JbyDesign: Also, thanks very much deryni that fixed it!
05:17  deryni: Welcome.
05:19  JbyDesign: How do I run vimtutor? If I do !vimtutor the formatting and characters get all messed up.
05:19  JbyDesign: :! vimtutor I mean
05:20  deryni: From your shell.
05:20  JbyDesign: ooh so it's a terminal app, ok. Thanks!
05:21  deryni: :help vimtutor
05:23  JbyDesign: Cool thanks. BB in 30 minutes or more.
--- Log closed Thu Dec 23 05:28:25 2010
--- Log opened Thu Dec 23 05:34:14 2010
05:34 --- Users 530 nicks [0 ops, 0 halfops, 0 voices, 530 normal]
05:34  deitarion: Is there a way to force Vimballs to extract into a prefix other than ~/.vim/?
05:35  frogonwheels: vimgor: vimballs
05:35  vimgor: I have no idea, frogonwheels.
05:35  deitarion: (eg. ~/.vim/bundles/whatever/)
05:35  frogonwheels: vimgor: vimball
05:35  vimgor: Rumor has it vimball is un-compressed evil. Now, the author says that "The vimball plugin facilitates creating, extracting , and listing the contents of 'vimball' archives (*.vba).  Vimball also records the files extracted with it and can remove them."; ask about vba2zip for alternatives, frogonwheels
05:35 --- Channel #vim was synced in 88 seconds
05:35  deitarion: I avoid vimball when possible, but some of the scripts I use offer nothing else.
05:35  frogonwheels: vimgor: vba2zip
05:35  vimgor: It has been said that vba2zip is a utility written by godlygeek to unwind the 'compressed evil' that is vimball archives. Get it at: http://github.com/godlygeek/vim-plugin-bundling/blob/master/vba2zip.py ... feel free to ask me about vimball, frogonwheels
05:36  deitarion: Thanks.
05:36  frogonwheels: deitarion: np.  I actually didn't know about vba2zip, but was pretty sure there was a vimgor hint on the vimball subject.
05:45 --- ChanServ sets modes [#vim +o Jerub]
05:45 --- Jerub sets modes [#vim -b *!*@65.98.79.137$##fix_your_connection]
05:46 @Jerub: he fixed his connection
05:46  dhruvasagar: Jerub: Hi
05:46 --- Jerub sets modes [#vim -o Jerub]
05:46  dhruvasagar: thanks a lot
05:46  Jerub: np
05:46  dhruvasagar: I apologize to everyone for the spam that was cause as a result of too frequent nick changes
05:49  deryni: What's that ban comment suffix thing?
06:04  kingsley: Can the "." key repeat editing and cursor motion keystrokes? If so, how?
06:08  Rakko: kingsley: not normally, but try http://www.vim.org/scripts/script.php?script_id=2174
06:10  Rakko: http://www.vim.org/scripts/script.php?script_id=2136 to enable . for plugins
06:13  kingsley: Can the "." also invoke the previous commands, even if they invoked a macro? If so, how? When I define a macro named "a", invoke it with "1@a", and then try to invoke it again with the "." key, it doesn't work.
06:13  kingsley: Or, to rephrase my question, hopefully more clearly...
06:14  kingsley: Can the "." key invoke a previous invocation of a macro?
06:23  kingsley: I see that macro keys can be "map"ped to function keys, which can then repeatedly execute the macro.
06:33  Rakko: kingsley: I'm not sure about what . can repeat; however, @@ repeats the last macro
06:35  kingsley: Rakko: I hope you'll be flattered to know that your elegant and concise explanation of @@ allowed me to use it for the first time. No other documentation that I saw was as clear.
06:35  kingsley: Thank you.
06:36 * kingsley needs to go soon...
06:36  Rakko: np :)
07:26 --- daniel___ is now known as daniel
07:53  tfc: Hi there. Does anyone use clang.vim ?
08:00  homekevin: vimgor: anyone
08:00  vimgor: Please do not ask if anyone uses, knows, is good with, can help you with or is a guru/expert of <some program>. Instead, ask your real question. You'll probably get help faster that way.
08:01  gkatsev: wtf, default vim-enhanced install on fedora is -clipboard?
08:02  homekevin: Well I guess I'm not installing fedora
08:02  Raimondi: not that enhanced...
08:02  gkatsev: totally surprised me
08:02  gkatsev: but it is version 7.3, unlike in ubuntu
08:02  gkatsev: also, it does have much better nvidia driver support
08:03  gkatsev: what's that terminal utility for copying?
08:03  Rakko: cp ;)
08:03  gkatsev: er, the one that copys to the clipboard?
08:04  gkatsev: might be xclip
08:04  tfc: I was just trying to install and use clang_complete.vim. The path to clang is set and so on, but when autocompletion should suggest something, Vim says: "-- User defined completion (^U^N^P) Pattern not found"
08:04  gkatsev: Rakko: yes, xclip.
08:05  Rakko: ok
08:06  gkatsev: gvim has the +clipboard, but not terminal vim, hm...
08:06  gkatsev: maybe I installed the wrong package?
08:13  gkatsev: hm... Guess I'll have to compile my own vim :/
08:14 * gkatsev sleeps
08:14  gkatsev: night
08:14  Raimondi: Good night, gkatsev
08:14  gkatsev: also, looks like xclip isn't working either. Weird
08:15  Rakko: bleh
08:15  frogonwheels: gkatsev:  install vim-gnome
08:15  frogonwheels: gkatsev: or maybe you don't have an X connection
08:16  gkatsev: frogonwheels: gvim works fine. Terminal vim doesn't have clipboard
08:16  frogonwheels: gkatsev: if you are in vim  and type :eho has('x11')  what does it say?
08:16  frogonwheels: what distro btw?
08:16  gkatsev: 0
08:16  gkatsev: hm
08:17  frogonwheels: you could just rml vim and ln gvim vim  ?
08:17  frogonwheels: distro?
08:17  gkatsev: fedora core 14 64
08:17  frogonwheels: gkatsev: blame fedora.  I think this has come up before.
08:18  gkatsev: ok
08:18  gkatsev: I'll figure it out.
08:18  gkatsev: not now, though
08:18  gkatsev: 2am, lol
08:18  frogonwheels: gkatsev: they have seperate package vim/gvim  which can install simultaneously..
08:18  frogonwheels: gkatsev: not realising that gvim provides vim :(
08:18  gkatsev: frogonwheels: yep, that's what I have now :/
08:18  frogonwheels: so remove vim package.
08:18  frogonwheels: and ln -s gvim vim
08:18  frogonwheels: easy
08:18  gkatsev: yeah, but I like terminal vim :(
08:18  frogonwheels: :)
08:19  frogonwheels: gkatsev: no that will make gvim default behave as terminal vim
08:19  gkatsev: oh, really?
08:19  frogonwheels: gkatsev: so if you run gvim from a 'vim' link, it will behave as a terminal vim
08:19  frogonwheels: yes
08:20  gkatsev: ln or ln -s?
08:20  frogonwheels: I know ln will work, and I'm pretty sure ln-s will work too.. actually it should
08:20  gkatsev: ok, i'll try -s first
08:21  frogonwheels: gkatsev: I'm pretty sure in ubuntu it's just a symlink (alternatives)
08:21  gkatsev: apparently, there is also vim-X11 which is what I really wanted rather than vim-enhanced
08:21  gkatsev: but that one is vimx
08:22  gkatsev: ah, I should just symlink vim to vimx
08:23  gkatsev: ugh, so stupid
08:23  gkatsev: frogonwheels: thanks!
08:26  frogonwheels: gkatsev: np .. sleep well :)
08:34  tfc: I've just tried out clang_complete.vim and omniC++Complete, but don't really make me happy, as they are working differently well for C and C++. Does anyone have suggestions about them or better plugins?
08:51  JbyDesign: Ok, so quick question: if I hit 10j I go down 10 lines, let's say I want to immediately do that again without typing 10j is there a command that executes the last command?
09:18  peleg: I have this map: nmap <buffer> <tab>a /^a<cr>
09:19  peleg: I would like to have it with any letter, not just "a". Other than duplicating it and changing the letter in each row, is there any way of doing it you know of?
09:19  peleg: oh, forget about the <buffer>...
09:24 --- silence is now known as Guest49034
--- Log closed Thu Dec 23 09:30:08 2010
--- Log opened Thu Dec 23 09:30:37 2010
09:30 --- Users 546 nicks [0 ops, 0 halfops, 0 voices, 546 normal]
09:31 --- Channel #vim was synced in 92 seconds
10:07 --- silex is now known as Silex
10:28  nordin: Hello guys, who has the best tip to get from insert mode back to normal mode? Sometimes I make some typos in insert mode, than I need to go back in normal mode by doing <C-[>, b .... A ...edit further. But <C-[> is just slightly to much action.
10:29  _rane: you mean like.. Esc?
10:29  _rane: I don't get it
10:29  malesca: Looking at http://vimdoc.sourceforge.net/htmldoc/if_ruby.html but I don't see anything about getting the selected (visual) text. Any suggestions?
10:29  JbyDesign: y
10:30  JbyDesign: y will yank the selected visual text.
10:30  malesca: nordin: Do you need to fix one single letter? r to replace, x to remove, s to remove and go into insert mode
10:31  JbyDesign: Oh wow it's very late. Good night.
10:35  nordin: malesca: no, sorry I wasn't clear. the <C-[> is not really efficient to me. I have to move my hands to much, I'm not an expert in typing on a keyboard, but pushing Ctrl and '[' is not possible if don't look where to put my fingers on.
10:35  malesca: nordin: and ctrl+c or esc are no good?
10:36  nordin: So I was wondering what key combination do you guys use to go back to normal mode from insert mode
10:36  malesca: I know some people bind "jj" in insert mode for that. I just use esc.
10:36  nordin: is ctrl+c also a standard to go back to normal mode?
10:36  malesca: nordin: yes
10:36  malesca: nordin: http://vim.wikia.com/wiki/Avoid_the_escape_key
10:37  nordin: malesca: the problem with Esc is you have to move your arm to reach Esc. But ctrl+c is fine
10:38  nordin: malesca: I've seen the article. jj is not exactly a solution to me, cause if you have a function named jojjo() for example, than you can't.
10:38  nordin: but if I think, jj is seldom used at least I can't think of a word containing jj.
10:39  malesca: nordin: There are a bunch of suggestions in there. But go with ctrl+c if that works for you.
10:39  malesca: There is Swedish SEO company Jajja :)
10:39  nordin: malesca: I'll try ctr+c for a while and see how it works for me. malesca thank you.
10:40  nordin: malesca: hahahaha
11:08  iaj: nordin: i like c-c as well.. the only problem is when you use a shell with vimbinds.. then c-c ain't gonna work out there
11:09  iaj: faidsfjasl jafjlaksd fjlkasjf lasjdf fsjf lkjkalsf asjlkdf lk
11:09  iaj: cripes, sorry,
11:27  ningia: hi all
11:28  nordin: iaj: thnx for the tip
12:01  RusAlex: hi guys
12:02  RusAlex: sometimes if you have switched on folding with syntax highlights, sometimes my file movements very slow when you press j or k
12:03  SatoshiHayazaki: Alright, stupid and newbie question, but I sometimes search for stuff and it gets highlighted. Except I don't know how to unhighlight them. I sometimes also press something in command mode and it highlights what's under the cursor
12:04  SatoshiHayazaki: How do I un-highlight it?
12:04  mgedmin: SatoshiHayazaki, :noh
12:05  SatoshiHayazaki: mgedmin, thanks a lot! You can't believe how long I've wondered about that for
12:05  mgedmin: but you did enable that feature!
12:05  spiiph: vimgor, nohl
12:05  vimgor: :nohl will disable current search highlighting until the next search is performed. A common map to avoid typing :nohl is ':nnoremap <silent> <C-l> :nohl<CR><C-l>'. See also, :help 'incsearch' and :help 'hlsearch'
12:06  mgedmin: 'hlsearch' is off by default!
12:06  mgedmin: the help text for 'hlsearch' explains how it works and how to turn if off!
12:06  deetah: hi, i'd love to have a vim command that would perform multiple substitutions, even if one of them fails. atm i'm doing it with :%s:a:b:g | another, but then it stops on failure.
12:06  mgedmin: unless there's a distro-provided vimrc that turns it on without your knowledge and consent, I suppose ...
12:06  FernandoBasso: SatoshiHayazaki: * will highlight what's under cursor.
12:07  FernandoBasso: Actually, it is a search.
12:07  mgedmin: deetah, there's a flag for :s to ignore errors
12:07  spiiph: deetah, add the e flag to your search
12:07  mgedmin: I forgot what it is, 'e' perhaps
12:07  deetah: spiiph, mgedmin: whoa, thaaanks! :)
12:09  SatoshiHayazaki: mgedmin, I'm on gentoo and I think Gentoo provides a vimrc that enables it by default, then. In fact, Gentoo comes with lots of nice default options for some apps (like color ls and stuff like that)
12:09  mgedmin: ah, okay
12:12  the_isz: SatoshiHayazaki: if you want to know, you can call  :scriptnames  .
12:13  SatoshiHayazaki: the_isz, wow, cool :D
12:13  the_isz: SatoshiHayazaki: yeah, vim is full of wonders :D
--- Log closed Thu Dec 23 12:29:36 2010
--- Log opened Thu Dec 23 12:29:57 2010
12:29 --- Users 563 nicks [0 ops, 0 halfops, 0 voices, 563 normal]
12:31 --- Channel #vim was synced in 89 seconds
12:55  nvictor: hi all
12:55  nvictor: can vim display the collapsing + in the sidebar?
12:59  FernandoBasso: nvictor: When you have folds?
12:59  nvictor: yes exactly
12:59  FernandoBasso: Yes. Let me see if I remember it.
13:00  FernandoBasso: I remember there is an options.
13:00  kurkale6ka: :h fold^d
13:01  FernandoBasso: foldcolumn
13:01  kurkale6ka: nvictor: ^^
13:01  FernandoBasso: In :h folds :D
13:01  nvictor: thanks
--- Log closed Thu Dec 23 13:28:58 2010
--- Log opened Thu Dec 23 13:34:26 2010
13:34 --- Users 561 nicks [0 ops, 0 halfops, 0 voices, 561 normal]
13:35 --- Channel #vim was synced in 90 seconds
13:45 --- raorn_ is now known as raorn
13:54  nvictor: hey
13:58  avinashhm: hi, i have a line .. with a pattern "K-H:dc6a4f00 :3618643068:.K-H :dc6c6100:322739 3340:.K-H" .. .I wan't to search for K-H and replace that with a "newlineK-H" ... I did ":%s/K//gc" .. how to repesent newline character ??i know \s is for space .. any similar things ... any help pls
13:59  nvictor: doesn't vim have automatic autocompletion?
13:59  nvictor: i mean based on the language
14:00  dindinx: nvictor: it is called omnicompletion in vim world.
14:00  nvictor: omnicompletion
14:00  nvictor: dindinx: does it have it for python?
14:02  dindinx: it does for any language you have a plugin for. I guess there's one for python. Search vim.sf.net.
14:02  nvictor: ok
14:02  nvictor: thanks
14:02  avinashhm: hi guys , how to replace a character K with new line ?? any help pls
14:03  nvictor: dindinx: well apparently it is shipped with my gvim
14:03  nvictor: dindinx: but it's weird it does not work (at least the way i expect it to)
14:04  nvictor: when i type self. (shouldn't i see all the attributes of self?)
14:04  nvictor: or again when i type a function name shouldn't it add the () for me?
14:05  dindinx: nvictor: I don't use python. For c++, I've some settings in my vimrc. I guess you should read the documentation for omnicompletion.
14:05  nvictor: i just type :h omnicompletion --> Sorry, no help for omnicompletion
14:06  nvictor: oh new-omni-completion got it
14:07  nvictor: dindinx: can you give me an example of how you set yours for c++?
14:09  FernandoBasso: avinashhm: :%s/K\ze-H/\r/gc
14:10  avinashhm: FernandoBasso, thankyou ...
14:12  FernandoBasso: avinashhm: \ze means "pattern ends here". Just to make sure you will always match H-K, not other Hs. And but replace only H, because of \ze.
14:12  FernandoBasso: Drop the 'but' in my sentence above.
14:14  avinashhm: FernandoBasso, thanks again .. was  grepping it :-) ... hey i tried ::%s/K/\n/gc .. didn't work .. i assume \r is carriage return and \n is new line .. pls correct me if i am wrong
14:15  FernandoBasso:  \n is the end of line.
14:15  FernandoBasso:  avinashhm :help \r
14:16  nordin: isn't \n new line?
14:17  nordin: I thought vim was just marking $ before \n.
14:17  FernandoBasso: The help says: "matches an end-of-line".
14:18  avinashhm: FernandoBasso, you are right .. its not new line .. its end of line ...
14:18  Silex: nvictor: look up clang_complete
14:18  Silex: (for c++ autocompletion)
14:18  nordin: but according to the ASCII, there is not such as end-of-line.
14:18  avinashhm: FernandoBasso, thanks again buddy .. it was gr8 help ..  i had thousands of this pattern .. now properly alligened :-)
14:18  nvictor: Silex: i found something, it's not even working :( http://vim.wikia.com/wiki/Make_Vim_completion_popup_menu_work_just_like_in_an_IDE
14:19  Silex: it is working but you need to read between the lines
14:19  nvictor: Silex: maybe there is no completion for python in my installation, is there a way to check that?
14:19  Silex: nvictor: type :echo has('python')
14:20  Silex: or :version and find +python
14:21  nvictor: Silex: yay! +python +python3
14:21  Silex: if yes, open a new file, type "s = 123\ns.^X^O"
14:21  nvictor: k
14:21  Silex: this should popup a completion menu
14:21  FernandoBasso: avinashhm: I'm glad you got your job done.
14:21  Silex: make set ft is set to python
14:21  nordin: FernandoBasso: I just wrote a tiny C program which simply prints '\n' in hex. The result is 0x0A, which is NL --> line feed or new line.
14:21  nvictor: Silex: yes i know that menu pops up
14:21  nvictor: Silex on ctrl x ctrl o
14:21  Silex: nvictor: okay then, you're after making the completion menu better?
14:22  nvictor: Silex: what i wanted was automatic complete like in IDEs
14:22  nvictor: yes
14:22  Silex: nvictor: set completeopt=menuone,menu,longest
14:22  nvictor: ok
14:22  Silex: that's what makes it behave like it should
14:22  Silex: you probably want to add ,preview to that
14:22  FernandoBasso: \n is new line in almost all programming languages. I don't know why it is different in vim. There must be (or not) a reason.
14:22  Silex: so you have functions help
14:23  nordin: FernandoBasso: maybe to press $ to go to the end of line :P
14:23  nvictor: ok
14:23  Silex: FernandoBasso: there is. Trying to remember what :h it was
14:24  nordin: Now you guys talking about omnicompletion, does anyone has a tag file with only standard C header lib, instead of all the mix of C++,Qt, GTK+, ssl, BOOST and other libs?
14:24  Silex: FernandoBasso: :h NL-used-for-Nul
14:25  Silex: nordin: there's none with all the mix of
14:25  Silex: there's only some with c/c++
14:25  nordin: Cause a tag file of 750 MB is not really going to work for m.
14:25  FernandoBasso: Silex: :) Good!
14:26  Silex: nordin: I suggest you take a look at clang_complete too, it's untested with C but it'd just work
14:26  nordin: Silex: a lot of links say: ctags --some-args /usr/include /usr/local/include
14:27  nordin: hmm, what do you mean with untested with C, the name suggests it's for C particular?
14:27  Silex: nordin: well, exclude the directories you don't want then
14:27  Silex: nordin: it's for c++, but as I said it'd work with c
14:27  Silex: clang is the clang compiler
14:27  Silex: clang.llvm.org
14:27  nordin: Silex: sorry for the silly questions, but thank you for your help
14:27  tfc: Tested clang with c some hours ago. Wasn't really satisfying. Is it possible to show whole function-signatures?
14:28  Silex: tfc: it... shows whole functions signatures?
14:28  tfc: i mean i tested clang-vim-plugin
14:28  Silex: tfc: do you mean clang_complete?
14:28  Silex: and if yes, did you test the github version?
14:29  Silex: a no to any of those question means a THEN DO IT
14:29  Silex: :D
14:29  tfc: not for me. when i type "prin<c-x><c-o>" it shows me "printf", no sig
14:29  tfc: well, i think i tested the github vers. but will double-check it in a minute...
14:29  Silex: by me it shows the full proto
14:30  nordin: tfc: it would be nice if you can tell us your experience
14:30  Silex: if you want experience for clang_Complete just ask me, I'm one of the co-writers
14:30  tfc: oh, good to know! thx
14:30  nordin: Silex: hahahahaha
14:30  nvictor: Silex: could it be that something is prevent the omnicompletion to work?
14:31  nvictor: Silex: i have filetype plugin indent on
14:31  nvictor: Silex: then the line you suggested in my vimrc
14:31  nvictor: but still nothing
14:31  Silex: nvictor: not sure what the real question is
14:31  Silex: define "working"
14:31  Silex: you said ^X^O worked
14:31  nvictor: well
14:31  nvictor: it does
14:31  nvictor: i'm editing a file that contains the word PaneButton
14:31  nordin: Silex: ok another question, will it work well with SuperTab plugin?
14:31  Silex: tfc: actually, "co-writer" is a bit strong, it's just I regulary commit stuffs to it
14:31  Silex: but Rip-Rip is the one doing all the work
14:32  nvictor: Silex: now i'm on a new line, i type P, a, n and no completion
14:32  Silex: nordin: hum, I guess it'd be pretty transparent for supertab, but didn't test
14:32  Silex: nordin: I mean it's a regular ^x^u completion function
14:33  Silex: nordin: now there are mapping on stuffs like . and :: to automagically popup the menu
14:33  Silex: which can be disabled
14:33  Silex: nvictor: what?
14:33  Silex: nvictor: what do you want
14:34  nordin: Ok Silex , I won't disturb you, cause there are a lot of guys firing questions on you :)
14:34  Silex: nordin: just shoot
14:34  nvictor: i mean, if my file contains the word "PaneButton" then i set the option you suggested. if i'm on a new line and i type P, then a, then n, why doesn't the menu show up?
14:34  nvictor: nordin: oh, nvm me :)
14:34  Silex: tfc: btw I added snipmate's snippet generation. It's still a bit buggy but pretty cool already
14:35  tfc: i did not really understand what the snippet-feature does.
14:35  Silex: nvictor: type Pan^x^o
14:35  Silex: nvictor: if you want automagic completion menu to popup, setup a mapping
14:35  Silex: or some trickery
14:35  nvictor: Silex: oh
14:35  nvictor: is it difficult to do?
14:35  Silex: nvictor: I suggest you look into supertab
14:35  nvictor: ok thanks
14:36  Silex: tfc: basically, I can type std::string s; s.app<CR> and it fills it with s.append(const char* __s) with the argument on select mode
14:36  Silex: so it acts as inside doc if you want
14:36  Silex: writing shit replaces the arg, then pressing tab jumps after the )
14:36  tfc: yes, that's exactly what i am looking for. but i did not get more than symbol names. no signatures.
14:37  Silex: tfc: make sure you have the latest version
14:37  Silex: and make sure clang_complete is configured to act liek that (duh)
14:37  tfc: i just installed the latest version from git.
14:37  Silex: do you have snipmate?
14:37  tfc: no snipmate here.
14:37  Silex: if no, use let g:clang_snippets=1
14:38  nvictor: Silex: works somewhat, thanks
14:38  nvictor: is there a way to have vim close your () {} for you?
14:38  Silex: this is Rip-Rip's snippets. I find them less good than the snipmate one
14:38  Silex: tfc: basically, exit insert mode, press tab, fill thing, exit insert mode, press tab, etc
14:39  tfc: Now after a fresh install vim says: "-- Omni completion (^O^N^P) Pattern not found" - what can be wrong?
14:39  Silex: tfc: ^x^u
14:39  tfc: the same with ^x^u
14:39  tfc: in the morning i got it working... hm.
14:39  Silex: is clang in PATH?
14:39  nvictor: tfc: i also needed to have filetype plugin on in my vimrc
14:40  tfc: filetype plugin on is set.
14:40  Silex: tfc: you took the code at https://github.com/Rip-Rip/clang_complete right?
14:40  tfc: yes, exactly this one.
14:40  Silex: ok, lemme query you
14:40  tfc: clang is not in my path, but i did set g:clang_exec
14:58  accel: I want a function foo() that (1) gets current file name (say "blah.factor") (2) drops the extenion ".factor", getting "blah" (3) appends "-test.factor" to it getting "blah-test.factor" and (4) edits blah-test.factor
14:58  accel: how do I get the filename of the current underlying buffer?
14:58  malesca: accel: http://www.vim.org/scripts/script.php?script_id=31 does almost the same thing, so you could see what it does
14:59  accel: err, I can't even figure out wher it grabs the current filename
15:01  bosie: hi, is there a way to delete a specific line (by line number) without leaving the current position
15:03  accel: line_number G dd "" ?
15:03  accel: (disclaimer: have not tested it)
15:03  bosie: what does "" do?
15:03  LeoNerd: :15d   maybe?
15:03  bosie: unnamed register?
15:03  bosie: LeoNerd: at least here, it jumps to line 15 after the delition :/
15:04  bosie: deletion
15:04  LeoNerd: Ah.. yes, perhaps it wil
15:04  malesca: accel: try :echo expand("%:t:r")
15:04  malesca: :help expand
15:05  accel: using %:p atm
15:05  accel: ah, yours removed he extention as well
15:05  accel: I like
15:06  malesca: bosie: :49d and then '' will work. There's probably a better way
15:06  bosie: malesca: you mean `` ?
15:06  bosie: malesca: at least here `` jumps bank to the last mark (think it is mark)
15:06  malesca: bosie: they seem to do the same thing. "the position before the latest jump"
15:07  bosie: malesca: is this a single quote ?
15:07  bosie: malesca: or an apostrophe
15:07  malesca: bosie: two single quotes, sorry
15:07  bosie: k
15:08  kurkale6ka: bosie: also, in one: :47d|''
15:08  kurkale6ka: single quotes
15:09  bosie: kurkale6ka: let me try that
15:09  accel: how do I say: if it matches regex of: "-tests.factor$" ?
15:10  bosie: kurkale6ka: well, it jumps back to the right line
15:10  bosie: kurkale6ka: but unfortunately to the beginning of the line
15:10  kurkale6ka: bosie: :47d|norm``
15:10  kurkale6ka: backticks here bosie
15:11  bosie: kurkale6ka: splendid. doesn't work without 'norm' though
15:11  kurkale6ka: no
15:11  bosie: kurkale6ka: is this :norm ?
15:11  kurkale6ka: it is norm :)
15:12  bosie: :h norm gets me to :norm
15:12  bosie: which is to execute NOrmal mode commands {commands}
15:12  kurkale6ka: tis the one
15:13  bosie: kurkale6ka: if i use it with |``, in what mode does it execute it?
15:13  accel: what's the vim help page to read for (does this string match this regex ?)
15:13  kurkale6ka: bosie: :h:|
15:13  bosie: kurkale6ka: i don't speak french ;)
15:14  kurkale6ka: I typed :|, not |
15:14  accel: what's the vim help page to read for (does this string match this regex ?)
15:14  bosie: kurkale6ka: smartsypants. but thanks ;)
15:17  accel: basically perl equiv of =?
15:17  accel: err, =~
15:20  bosie: one other thing that bugs me. is there a way to use } but not make it open folds?
15:20  bosie: when i } over a fold it opens the fold, which is annoying
15:20  bosie: gj and j don't have that behaviour
15:21  kurkale6ka: bosie: :h'fdo
15:22  bosie: kurkale6ka: thanks, will read that one
15:23  bosie: perfect! thanks kurkale6ka
15:23  kurkale6ka: np, smatypants here to help
15:24  bosie: haha
15:32  accel: is there a way to get substitute as a function, rather than :s ?
15:32  accel: I want to apply it to a string rather than a file
15:33  Silex: :call substitute()
15:34  Silex: s/call/h/
15:37  accel: why does vim scripts hate ";" ?
15:37  accel: does ";" have some special meaning
15:38  accel: I have a var named "l:nfname"
15:39  accel: in a vim function, how do I do:    :e l:nfname ?
15:39  complete: Hello and Good afternoon from Germany
15:40  complete: How do i do "cut to next ocurrance of X"?
15:40  Silex: accel: edit l:nfname
15:40  complete: ah
15:40  complete: d/X
15:40  Silex: accel: and vimscript hates ; because it's not C/C++/JAVA/C#
15:40  tangledhelix: for a single char you can do e.g. dfX
15:40  tangledhelix: but / allows you to put a multicharacter pattern.
15:40  Silex: tangledhelix: that's on the current line only afaik
15:41  tangledhelix: silex: yes, true
15:44  accel: hmm, I want l:fname to not be a literal
15:44  accel: but be the value of the variable
15:46  strull: accel: :he :exe
15:51  Silex: yeah, use :exe
16:22  nordin: hello guys, do you have issues with snipmate.vim to get the switch statement? It works with for() statement, but switch statement is not working.
16:23  Silex: nordin: in insert mode, press ^R<tab>
16:23  Silex: it'd list you the available completions
16:23  Silex: (I see no switch for C/C++ btw)
16:24  Silex: just add switch yourself if you want it, the snippet syntax is easy
16:26  nordin: Silex: heee cool, didn't know about that! Damn it, I always have an excuse not reading the doc...:(
16:28  Silex: nordin: don't worry, we'll tell you to rtfm if you abuse us
16:28  Silex: RTFM! >:)
16:32  nordin: Ok, for this I want to read the doc :) But don't know where to read. Normally when you hit :i you get in insert-mode right. But using snipmate, I see --SELECT--. I wasn't aware of that! Maybe I've forgotten, what is this??
16:32  nordin: googling "vim select" doesn't give the right link for now...
16:33  kurkale6ka: nordin: maybe you should use :h, :h modes
16:34  nordin: kurkale6ka: thnx!
16:34  nordin: nice name :)
16:34  kurkale6ka: he he
17:06 --- Guest30629 is now known as sanguisleft
17:17  m4k3r: Hello. I'm looking for a way to auto-ESCape in vim after a certain timeout. Unfortunately Google didn't give me the answer, so here I am.
17:20  malesca: m4k3r: http://vim.wikia.com/wiki/To_switch_back_to_normal_mode_automatically_after_inaction
17:27  m4k3r: malesca:  Thank you.
17:28  malesca: np
17:52  Silex: hum, I have a bug with YankRing when you simple d/foo inside a macro, then repeat the macro N times
17:52  Silex: *simply
17:52  FernandoBasso: When whe are in visual block, and one line is shorter than other, and the cursor is on the shorter line, that is as far as I can go. Is there other way?
17:53  Silex: FernandoBasso: I think you want "virtualedit"
17:56  FernandoBasso: Silex: It seems like it.
17:56  FernandoBasso: I just am not sure how to use it.
17:56  kurkale6ka: :se ve=all
17:56  FernandoBasso: I just set to block.
17:56  FernandoBasso: I want to insert | after some lines.
17:56  kurkale6ka: I have this in my vimrc, one of the nicest features of Vim imo
17:57  FernandoBasso: After the 'longest' line, even if my cursor is not on the longest one.
17:57 --- Tricia is now known as Aicirt
17:58  kurkale6ka: :h v_b_A_example
17:58  FernandoBasso: Oh. Yeah. With all (which insert is present as well) I can go to where there is not chars, ^v5jI|<Esc>. Wonderful!
17:59  kurkale6ka: FernandoBasso: http://www.vim.org/scripts/script.php?script_id=3237
18:02  FernandoBasso: kurkale6ka: That seems like :range s/^/---/ and :ragne s/$/>>>/
18:02  FernandoBasso: Of course, it is easier to type.
18:02  malesca: Looking for something like ":w ! ruby" (execute contents of current possibly-unsaved buffer as Ruby) that outputs to a new split instead of as regular command output
18:04  kurkale6ka: FernandoBasso: not sure I get you... with this plugin you only type \i or \a
18:05  FernandoBasso: Yeah. Easier to type than :x,y s/^/---/
18:05  kurkale6ka: ah, ok, yes
18:07  FernandoBasso: I sometimes make a box around pieces of text, of I get a tile like 'Examples' and do :t. | s/./+/g
18:07  FernandoBasso: Well, not +, but = :D
18:08  FernandoBasso: Actually, I love this: :t. | s/./=/g
18:10  kurkale6ka: so you're copying the line... and replacing every char... that's not it, is it?
18:10  malesca: played with that, accidentally replaced with _&, got underscore-separated chars. cute :)
18:10  FernandoBasso: It makes a === under the 'title'.
18:11  kurkale6ka: oh, so it is that, fair enough, as I have ve=all, I just open a line, select visually under and r=
18:12  FernandoBasso: Cool!
18:12  Silex: to simply underline a title with =, you can also :t.|s/./=/g
18:12  FernandoBasso: hahahaha
18:12  kurkale6ka: or, open, R, click where needed and symply type =s
18:13  kurkale6ka: = s
18:13  homekevin: What does the dot after :t mean?
18:13  homekevin: Oh, is it the address?
18:13  Silex: yeah
18:14  homekevin: It looks weird without a space
18:14 --- Aicirt is now known as Tricia
18:14  Silex: t. | s/// is a good combination with :g
18:15  homekevin: I like :t <dot>. That can save a register in one of my mappings.
18:15  Silex: not sure I follow you
18:15  homekevin: :t . Vs. yy
18:15  homekevin: Or, yyp
18:16  homekevin: One trashes a register, one doesn't.
18:16  Silex: I see, interesting
18:19  FernandoBasso: kurkale6ka: Very nice your r= with ve. Who do you go to the end of the line, where the above line ends?
18:20  kurkale6ka: FernandoBasso: I use se ve=all so I can click anywhere... but for whole lines I think :t.|s... is better. have to leave, see you guys
18:20  FernandoBasso: Oh. I am not using mouse in vim.
18:21  Clinteger: hi everyone
18:21  homekevin: :s/./=/g can also be done as Vr=
18:21  homekevin: I find that a bit nicer.
18:22  Clinteger: i was following the instructions in one of the episodes on vimcasts.org, to change how tabs and other invisibles are shown. when i try using a tab character in the tab..thing, it shows up as ??
18:22  homekevin: Although after a | you'd need :normal
18:22  FernandoBasso: I my case, I want to make a = under a 'title'. The same length.
18:22  homekevin: Clinteger: I don't know what a "tab thing" is
18:23  Clinteger: set listchars=tab:▸\ ,eol:¬
18:23  Clinteger:  in .vimrc
18:23  homekevin: FernandoBasso: I understand that. But if you do it by copying the line and replacing, you can use Vr=
18:23  homekevin: ...for the replacement part
18:23  Clinteger: oops, didn't realize that was a newline. anyway that is \[tabchar], in there
18:24  FernandoBasso: homekevin: Oh. You are right.
18:26  homekevin: Clinteger: So the two characters that are supposed to be displayed for a tab show up as ? instead?
18:26  Clinteger: hm
18:26  Clinteger: well I don't know what i was doing wrong
18:26  Clinteger: but copying and pasting from the site works :<
18:27  Clinteger: oh. its just a space :
18:27  sleepynate: ok, i dunno what i did, but my VCSDiff's no longer show up as vimdiffs, it just shows the output as a diff file
18:27  homekevin: Clinteger: Try doing :echo string(&listchars) to see exactly what it's set to
18:28  Clinteger: homekevin,  yeah its just a space lol
18:28  homekevin: That will represent it as a vim string with escapes and such
18:28  homekevin: ...well, sort of
18:30  homekevin: Doesn't escape tabs and newlines, I guess.
18:30  Clinteger: ok well I was using a tab character where it should have been a space, my bad :p
18:31  homekevin: Oh, the tab padding was supposed to use a space? That makes sense
18:31  emes: i'm on a pretty nonstandard system that i'm connected to over ssh. when I run vim, the window is constantly flashing. I tried :set novb with no effect
18:31  homekevin: OK, time to go. Back later.
18:31  emes: has anyone seen this before?
18:32  homekevin: emes: Bad terminal config?
18:32  wooden: emes: Run with no .vimrc.  $ vim -u NONE
18:32  homekevin: "constantly flashing" meaning it flashes sometimes, or it literally flashes with regularity, like a ticking clock?
18:33  homekevin: I've seen flashing text due to attempting to use color in a terminal that doesn't support it.
18:33  wooden: I have t_Co set to 256 in my .vimrc and when I work on Macs it flashes.  I just run with -u NONE there.
18:33  homekevin: Wrong escape codes get sent, get interpreted as flashing, etc.
18:34  homekevin: OK, really leaving now.
18:34  wooden: Bye, homekevin.
18:34  homekevin: Good luck
18:34  emes: looks like set t_Co=256 is the culprit
18:35  sitaktif_: no
18:35  sitaktif_: wooden: it's terminal
18:35  sitaktif_: I had the same issue with my prompt
18:35  sitaktif_: so it is not a vim issue
18:35  emes: that's better, now I can edit files without worrying about having a seizure
18:36  wooden: sitaktif_: Well, he just said it was his t_Co setting in his .vimrc, so it was a vim issue, because his vim was forcing a terminal setting.
18:36  sitaktif_: depends on your definition of culprit
18:36  wooden: Yes, really, it's his own fault.  :)
18:37  sitaktif_: basically, t_Co is causing the bug from Terminal.app
18:37  wooden: I know it's not good to set that var, but I set it anyway.
18:37  sitaktif_: anyway gtg :)
18:37  wooden: cya <3
18:37  sitaktif_: Happy Christmas !
18:37  wooden: Merry Christmas!
18:37  sitaktif_: (just disallow blinking text in Terminal.app)
18:39  RichardLynch: How do I join two lines, but maintain the whitespace?  Not 'J', the other one...
18:40  kongo: RichardLynch: gJ
18:47  RichardLynch: kongo: Thanks!
18:51  indigo747: Does anybody know a vimrc setting to make vim display command characters as you type them?
18:51  malesca: indigo747: :help showcmd
18:52  malesca: so just :set showcmd
18:53  indigo747: malesca: thanks
18:54  FernandoBasso: ↑
18:54  FernandoBasso: Oops.
19:23  tlp: Hi. Is there a quick way to convert all paragraphs in a text file to single-lines rather than have them wrap with hard returns? (textwidth)
19:24 --- Silex is now known as silex
19:24  FernandoBasso:  J
19:24  FernandoBasso: tlp: ↑
19:25  tlp: FernandoBasso: for the whole document at once?
19:25  tlp: they still need to be separated, just not wrapped.
19:26  FernandoBasso: tlp: :%s/^/\r/g
19:29  FernandoBasso: tlp: You want to join lines? And then add an empty line between them?
19:29  FernandoBasso: I mean, you want to remove the new lines?
19:31  FernandoBasso: To remove all new lines, or all the times someone typed <Enter> :%s/\n/ /g (replace with a white space)
19:40  tlp: FernandoBasso: well, not quite all of them. Just the ones at the end of the lines in a paragraph. Figured it could be done with some :%s magic, just wondered if there was a better way
19:40  tlp: http://vim.wikia.com/wiki/Copy_paragraphs_without_excess_newlines_to_MS_Word
19:41  FernandoBasso: Well, I'm learning regexp myself.
--- Log closed Thu Dec 23 19:45:30 2010
--- Log opened Thu Dec 23 20:00:57 2010
20:00 --- Users 573 nicks [0 ops, 0 halfops, 0 voices, 573 normal]
20:02 --- Channel #vim was synced in 84 seconds
20:03  slava_dp: I keep forgetting, how do I run a visual block of code through bash?
20:03  slava_dp: like, execute bash so that it processes the highlighted code.
20:04  okayzed: slava_dp - :'<,'>!<command>
20:04  okayzed: if you press : while it's visually selected, it will put the markers there for you, so you just need to type !<command>
20:07  slava_dp: okayzed, there was some other way.
20:07  slava_dp: your way processes the commands in-place.
20:07  okayzed: oh, i see - you just want to execute that code
20:08  slava_dp: I'd like to execute them in a separate shell and show me the output
20:08  slava_dp: yes :)
20:09  slava_dp: okayzed, any way to do what I want?
20:10  okayzed: Yes, i believe so
20:10  okayzed: the visual mode is throwing me for a loop, since running :! will automatically replace what's there, i thought
20:11  okayzed: alright, here we go
20:12  okayzed: while in visual mode: do :w !<command>
20:12  okayzed: the resulting line should look like: :'<,'>w !<command>
20:12  slava_dp: YES, this is it! :-)
20:12  slava_dp: thank you very much!
20:13  slava_dp: my memory serves me bad, but you found it.
--- Log closed Thu Dec 23 20:26:18 2010
--- Log opened Thu Dec 23 20:31:40 2010
20:31 --- Users 569 nicks [0 ops, 0 halfops, 0 voices, 569 normal]
20:33 --- Channel #vim was synced in 87 seconds
20:50  FernandoBasso: Lorem ipsum dolor sit amet!
20:53  seku: FernandoBasso: i agree. being fluent in latin is important.
21:07  FernandoBasso: Fusce manga libero vim, tempus non, interdum lorem ipsum vim!
21:11  etcetera: is there a way to have proper tabs in gvim [windows]
21:12  gkatsev: proper tabs?
21:12  etcetera: yes like macvim
21:12  gkatsev: I don't know what it means
21:14  sleepynate: etcetera: :tabnew
21:15  etcetera: heh, seems tabs and vsplit don't like eachother.
21:18  ws: etcetera: what problems do you have with them?
21:19  etcetera: ws: just didnt compute that each tab is a "buffer"
21:19  etcetera: each buffer can be split.
21:19  etcetera: not each tab can be split
21:19  etcetera: tab != view
21:19  etcetera: tab == buffer.
21:19  ws: no
21:19  ws: !buffers
21:19  ws: hmm, I can't remember the bot command for this
21:20  ws: i.e., buffers vs windows vs tabs
21:22  gkatsev: vimgor: windows
21:22  vimgor: For a quick intro to vim's windows, buffers, and tabs, see http://img200.imageshack.us/img200/9031/windowsv.png and http://vim.pastey.net/115548
21:22  gkatsev: vimgor: tabs
21:22  vimgor: Tab pages are not buffers, don't try to force them to act like buffers. Consider tab pages like viewports, layouts, or workspaces. Trying to setup 1 tab page == 1 buffer is an exercise in futility. Do ':set hidden' and get started. Get FuzzyFinder, LustyExplorer or BufExplorer to make getting around your buffers easier. See http://vim.wikia.com/wiki/Category:Tabs for more info.
21:22  gkatsev: vimgor: buffers
21:22  vimgor: For a quick intro to vim's windows, buffers, and tabs, see http://img200.imageshack.us/img200/9031/windowsv.png and http://vim.pastey.net/115548 See also ':help tab-page-intro' and ':help windows-intro'
21:22  ws: gkatsev: thanks :-)
21:22  FernandoBasso: In vimscript, after an elseif, do I have to end it in some way? Also, can I use as many elseifs as I want?
21:22  gkatsev: etcetera: no, tab == view
21:23  gkatsev: FernandoBasso: well, you need to end the if chain and yes, use as many elseifs
--- Log closed Thu Dec 23 21:27:36 2010
--- Log opened Thu Dec 23 21:33:01 2010
21:33 --- Users 567 nicks [0 ops, 0 halfops, 0 voices, 567 normal]
21:33  FernandoBasso: Thanks.
21:33  gkatsev: np
21:33  FernandoBasso: Now, I need to know what colors are available for xterms. What are their names, or whatever we call it.
21:34 --- Channel #vim was synced in 84 seconds
21:34  gkatsev: vimgor: godlygeek
21:34  vimgor: Bow to The Godly Geek!
21:34  gkatsev: vimgor: colorchart
21:34  vimgor: ColorChart is a plugin written by godlygeek for interactively investigating the high color colorcubes. Find it at http://github.com/godlygeek/colorchart
21:34  gkatsev: vimgor: csapprox
21:34  vimgor: CSApprox is a plugin written by godlygeek to make GUI-only colorschemes Just Work in 88-/256-color terminals. It can be downloaded at http://www.vim.org/scripts/script.php?script_id=2390
21:34  gkatsev: they should help
21:34  FernandoBasso: This is the one I was trying to tell someone earlier: colorchart!
21:35  gkatsev: :)
21:35  FernandoBasso: I use CSApprox.
21:35  dennda: Hey, how do you disable that 'visual bell' when you try scrolling past the end of the buffer? It negates the entire colors and creates an ugly 'flashing' effect
21:35  gkatsev: vimgor: no, godlygeek is <reply>Bow to The Godly Geek! He also created colorchort and csapprox. See vimgor's entries for more info.
21:35  vimgor: 10-4!
21:35  gkatsev: vimgor: godlygeek
21:35  vimgor: Bow to The Godly Geek! He also created colorchort and csapprox. See vimgor's entries for more info.
21:37  Nyoxi: dennda: :set novb
21:37  etcetera: doesnt look like matchit.vim cares about c#
21:37  FernandoBasso: gkatsev: I have been using linux for 4 years. And color names in xterms are still a mystery for me. Even for Xdefaults. It is hell for me to configure the colors...
21:37  dennda: Nyoxi: thanks
21:37  gkatsev: FernandoBasso: hehe, I'd imagine.
21:38  FernandoBasso: They explain how to configure Xdefaults, how to set the colors, but how the hell does one know what colors are available, and what they names are.
21:42  homekevin: I think Xdefaults is the obsolete version of Xresources.
21:43  homekevin: I don't know about the specific case you are talking about, FernandoBasso, but color names are typically found in /etc/X11/rgb.txt
21:45  FernandoBasso: homekevin: I always though that Xdefaults and Xresources were the same thing. Basically, the config is the same. I my Xdefaults is my old Xresources renamed.
21:45  FernandoBasso: xrdb sources both.
21:46  FernandoBasso:  I don't have /etc/X11/rgb.txt...
21:46  FernandoBasso: It must be somewhere else.
21:47  FernandoBasso: find did not find it.
21:48  FernandoBasso: Not in usr.
21:48  FernandoBasso: homekevin: Would you mind pasing yours somewhere?
21:56  etcetera: FernandoBasso: well hopefully after 4 years of using linux, it's not the *only* thing that's baffled you.
21:56  homekevin: My understanding is that Xdefaults is read by clients at startup, while Xresources is read by xrdb once.
21:57  homekevin: FernandoBasso: Maybe the name can be different. I seem to recall it being something else under Cygwin.
21:58  homekevin: Might be in */lib/
21:59  FernandoBasso: I run find / -iname 'rgb' 2> /dev/null. Nothing was found.
21:59  homekevin: FernandoBasso: That's not a correct usage of find.
21:59  homekevin: -iname "rgb*"
22:00  FernandoBasso: Oh. True.
22:00  homekevin: I mean, the usage is fine, but it would not find rgb.txt
22:01  FernandoBasso: Ill be right back.
22:03 --- sh1m is now known as sh1mmer
22:33 --- sh1m is now known as sh1mmer
22:39  pattern: i've started using emacs again (with vi-emulation, of course) recently
22:39  pattern: and it got me wondering..
22:39  pattern: vim has a bunch of language bindings... but why not a lisp binding?
22:39  MarcWeber: pattern: Because Emacs already has pretty good lisp support.
22:39  pattern: that could make vim more attractive to emacs users
22:40  pattern: MarcWeber: well, the thing is that some emacs users do switch to vim
22:40  pattern: and if vim had lisp then it would make it more familiar for emacs users, and make it easier for them to make the switch
22:40  MarcWeber: pattern: Which language bindings are you missing?
22:41  pattern: i'm talking about a lisp binding
22:41  accipter: i am using TagList with python and wanted to have the hierarchy of fields to be separate for each class: (class 1, method 1, method 2; class 2, method 1, method 2).
22:41  MarcWeber: You can implement a repl in Vim within 2min using vim-addon-async.
22:42  pattern: that's great, but not really the same as having some of vim's internald exposed directly to lisp
22:42  pattern: s/internald/internals/
22:43  pattern: if it was the same, then there'd be no need for any language bindings at all
22:44  pattern: thanks for writing that plugin, btw
22:44  pattern: it looks very useful
22:58  MarcWeber: pattern: Even though language bindings exist they never feel as natural as VimL.
22:58  MarcWeber: You always have to think about how to convert or pass values.
22:59  MarcWeber: Eg you can't setup mappings using any of those lanugages (ruby,python,perl, ..)
22:59  homekevin: Using Python seemed like a good idea until I tried it.
22:59  MarcWeber: And Emacs already has everything: lisp documentation etc. It would be quite a lot of work.
22:59  MarcWeber: homekevin: Doing what?
23:00  homekevin: For Vim scripting
23:00  homekevin: Then I realized it's just another layer above VimL
23:00  MarcWeber: It depends. You have nicer IO facilities.
23:00  MarcWeber: Python also might be faster. And you can use all python libraries.
23:01  homekevin: Yeah, that's all true.
23:01  homekevin: For general crunching, if that's what you need to do, it can be better. But the Vim interfacing part isn't an improvement over VimL
23:01  MarcWeber: In the end if you compare VimL and other languages you'll find it still gets almost all jobs done.
--- Log closed Thu Dec 23 23:15:36 2010
--- Log opened Thu Dec 23 23:31:03 2010
23:31 --- Users 561 nicks [0 ops, 0 halfops, 0 voices, 561 normal]
23:31  homekevin: Hm, it doesn't even seem to have a stinking version command.
23:31  kongo: homekevin: try unzip -v then
23:31  homekevin: strull: Yeah, it gave a bunch of usage, I was just pointing out that the option wasn't understood.
23:31  homekevin: -v is verbose
23:31  strull: and no version number ?
23:32  homekevin: Oh, -v works.
23:32  strull: I have UnZip 5.52 of 28 February 2005
23:32  homekevin: Lame.
23:32 --- Channel #vim was synced in 83 seconds
23:32  homekevin: I mean, it's not lame that unzip -v works, but it's lame that it's not documented that way.
23:32  homekevin: UnZip 6.00 of 20 April 2009, by Debian. Original by Info-ZIP.
23:33  strull: it emits a usage since the command "zip -v" is not complete
23:33  kongo: I have UnZip 6.00 too. but it works just as expected
23:33  homekevin: I see a lot of stuff in the plugin that looks like it depends on 'magic' being set
23:34  solars: hey, I've got two commands closing tags for me, twice unfortunately... I remember there was a command to see what/which plugin acts on certain things in input mode, but I can't find it... can anyone give me a hint?
23:34  strull: homekevin: try :let $UNZIP=  and then try again
23:35  homekevin: strull: I will, but right now I'm in a debug session
23:36  strull: and? can't you open a second shell ?
23:36  homekevin: I have to draw the line somewhere.
23:37  strull: pardon?
23:37  homekevin: Sorry, I was making a joke
23:37  strull: aah. ok then ... lol
23:37  homekevin: Isn't that zeroing an environment variable? I don't seem to have "UNZIP" set
23:37  strull: yes, it was just a wild guess
23:37  homekevin: Actually, it just gives an error
23:38  homekevin: Invalid expression
23:38  strull: aah, try :let $UNZIP=''
23:38  homekevin: Changing it to an empty string doesn't help
23:38  strull: mmm... no idea then
23:39  homekevin: Weird, it seems to be setting options for a tar file.
23:40  homekevin: I take that back, not so weird.
23:40  homekevin: It did ft=tar and I was looking at the autocmds.
23:40  solars: is it possible to disable a plugin? I have the problem that if I use eclim (java.vim ftplugin), I need to disable closetag.vim as it would result in duplicate closing of tags
23:41  homekevin: solars: Properly written plugins should check for 'loaded_<pluginname>' and not load if it exists.
23:42  homekevin: Check if the plugin you need disabled does this.
23:42  solars: probably not
23:42  solars: the author cannot include every plugin providing the same functionality I guess
23:44  homekevin: solars: I don't know what you mean by that, but it sounds like you probably misunderstood me.
23:45  solars: hm possible yes, sorry :)
23:45  homekevin: I didn't mean to imply that the author needs to disable other plugins, or disable his or her plugin when others are present. Only that they provide a means for you (the user) to disable the plugin.
23:46  solars: so, I use delimitMate.vim usually for closing brackets and tags, and I also use eclim for java stuff, now delimitmate maps for example < and eclim maps / and if I close a tag, I get duplicate closing brackets.. so I'm looking for a way to prevent this
23:46  homekevin: So, if you add this into your vimrc, the foo plugin should not be loaded: :let loaded_foo = 1
23:46  solars: ah
23:46  solars: understood
23:46  homekevin: But different plugins may use different variable name conventions.
23:47  homekevin: So you have to actually look at the plugin source.
23:47  Raimondi: Or the plugin's doc
23:47  homekevin: (And consider complaining to the author if they don't follow the conventions laid out in the documentation.)
23:47  solars: yep, I'll check
23:49  Raimondi: solars: You can modify delimitMate setting or diable it with an filetype autocmd.
23:49  Raimondi: disable*
23:49  homekevin: kongo: If you could, would you try running "unzip -l -- <filename>" and see what the output looks like?
23:49  solars: yeah I read it, trying to find out how
23:50  homekevin: kongo: Specifically, if it includes length, date, and time.
23:51  imc: how does one choose the colorscheme? is there a sort of "gallery" out there?
23:52  homekevin: Just use what your friends are using so they'll think you're cool.
23:52  imc: eheheh
23:53  imc: desert is quite cool, many hits on google and not eye-piercing
23:53  imc: but there are so many...
--- Log closed Thu Dec 23 23:57:24 2010
