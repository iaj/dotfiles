--- Log opened Tue Jan 11 00:00:53 2011
00:13  Somelauw: Hi, I am using snipmate
00:13  Somelauw: How do I uncomment a #?
00:14  Somelauw: Nevermind, I forgot to indent
00:15  foo: How can I run multiple vim replacements on the same line? eg. :'<,'>s@p>@ul>@g;s@<ul>@<ul><li>@;s@</ul>@</li></ul>@; - although, this doesn't work
00:18  Raimondi: foo: :h :bar
00:19  foo: Raimondi: BAR!
00:19  foo: thanks. :)
00:19  Raimondi: np :)
00:32  Somelauw: When pasting some text to vim, vim messes up my indention.
00:32  mehwork: how can i list all duplicate lines of the file?
00:32  Somelauw: It insert tabs at random places.
00:32  MarcWeber: Somelauw: :set paste
00:32  MarcWeber: Its because everything is "interpreted as typed".
00:32  MarcWeber: Alternative  :r! cat  paste  <c-d>
00:33  MarcWeber: the indentation settings of vim are causing the mess. They are disalbed by enabling "paste" mode.
00:33  Somelauw: So, I can't use paste and indent at the same time?
00:33  Somelauw: That is really bad.
00:34  MarcWeber: Somelauw: Why?
00:34  bairui: Somelauw: no. you turn paste on. paste your stuff. turn paste off. keep typing away happy.
00:34  Somelauw: I don't want to turn it on and off everytime I want to paste something.
00:34  MarcWeber: MAybe try different ways of pasting: i<c-r>* or such
00:34  mehwork: map :set paste! to something
00:35  mehwork: then you can toggle it on/off
00:35  MarcWeber: map invpaste to something :)
00:35  Somelauw: I think it should be done automatically.
00:35  mehwork: set pastetoggle=<F11>
00:36  mehwork: works for both insert and normal mode
00:36  Somelauw: I would rather remap my y-key to take care of it.
00:42  foo: in vim, if I highlight two lines, is there a way to add something at the beginning / end of that block I highlight? (eg. not per line, but actually at the beginning or below
00:42  fholgado: foo: look at surround.vim
00:43  foo: fholgado: hm, how do I do that?
00:43  fholgado: foo: http://www.vim.org/scripts/script.php?script_id=1697
00:44  foo: fholgado: ahhh
00:44  foo: thanks
00:44  foo: interesting, /me hasn't done this before
00:44  fholgado: foo: you'll enjoy it :)
00:45  Somelauw: When using visual mode. Is there a way to make sure block selection is used.
00:45  Somelauw: ?
00:45  bairui: ctrl-v
00:45  Raimondi: :set showmode
00:45  Somelauw: Yes, but if block selection is already unabled, it will undo the visual mode
00:46  Raimondi: Good morning, bairui :)
00:46  bairui: g'day, Raimondi. :)
00:46  Somelauw: Raimondi, I want to do it from within a script.
00:47  Raimondi: Somelauw: :h visualmode()
00:47  ixiion: hi i have a question: iam writing some python code with vim 7.2 under ubuntu 10.4 and when the cursor is at the end of a line and you press the down key it jumps down but not in the same column but the last charater of the next line
00:47  bairui: Somelauw: and then have a look at the example in   :help map-operator
00:47  ixiion: i would like to have the same behaviour for whitspaces at the beginning of the line
00:48  ixiion: the cursor should "follow" the indetion
00:48  ixiion: is there a script that provides thie behaviour or something ?
00:49  bairui: perhaps you're looking for the 'virtualedit' option, ixiion
00:49  ixiion: is virtualedit a command?
00:49  bairui: it's an option
00:49  bairui: :help 'virtualedit'
00:50  ixiion: okay i check it :) thx
00:50  bairui: np
00:51  Somelauw: :h visualmode doesn't work for me
--- Log opened Tue Jan 11 00:51:24 2011
00:51 --- Users 576 nicks [0 ops, 0 halfops, 0 voices, 576 normal]
--- Log closed Tue Jan 11 00:51:50 2011
00:56  ixiion: hm virtualedit is not realy what i was looking for i think
00:56  ixiion: it allows you to position the cursor everywhere
00:56  bairui: ok, so, perhaps an example of what you're after?
00:57  ixiion: okay smalll example
00:57  ixiion: this is the fist line:
00:57  ixiion:    and this another one:
00:57  ixiion: the the cursor is at the end of line 1
00:57  Somelauw: I can't figure it out.
00:57  ixiion: and i press the down key
00:58  ixiion: its jumps the the next :
00:58  Somelauw: I want a mapping that works in block selection mode, but not in visual selecting mode.
00:58  ixiion: and not to n
00:58  ixiion: i would like to have the same behaviour at the beginning of the line
00:58  et: ixiion: is that a tab at the start of the line?
00:58  ixiion: so from t -> a
00:59  ixiion: no spaces
00:59  bairui: ixiion: how did you get to the end of line 1?   with  $   ?
--- Log closed Tue Jan 11 01:03:13 2011
--- Log opened Tue Jan 11 01:08:35 2011
01:08 --- Users 571 nicks [0 ops, 0 halfops, 0 voices, 571 normal]
01:08  bairui: so you'll probably want a copy of that for <Up> (modulo offsets)
01:09  ixiion: and <down> is a movement "function"?
01:09  ixiion: with small d
01:09  bairui: no, it's a key
01:09  bairui: small = big
01:09 --- Channel #vim was synced in 79 seconds
01:10  ixiion: so no differet if i use down or Down?
01:10  ixiion: different
01:10  bairui: yep
01:10  ixiion: k
01:11  bairui: so, ixiion, create the map for the up arrow key yourself. There's a Vim level-up in it for you. :)
01:11  ixiion: iam on it :)
01:11  bairui: cool :)
01:12  ixiion: iam still a vim noob
01:13  ixiion: thats the reason i was asking because there is this smartindent feature and i thought there might something like 'smartcursormovement'
01:14  Raimondi: vimgor: smartindent
01:14  vimgor: Don't you mean stupidindent? In all seriousness, 'smartindent' is an obsolete option for C-like syntax. It has been replaced with 'cindent', and setting 'cindent' also overrides 'smartindent'. Vim has indentation support for many languages out-of-the-box, and setting 'smartindent' (or 'cindent', for that matter) in your .vimrc might interfere with this. Use 'filetype indent on' and be happy.
01:14  bairui: well, you've embarked on a challenging adventure worthy to crush even the most ardent of noobs. It is a good thing you ride with the Hero Raimondi. ;)
01:14  Raimondi: ixiion: just in case check vimgor's answer ^
01:14  bairui: and we'll need a similar smartcursormovement vimgor entry soon. ;p
01:15  Raimondi: lol
01:15  Raimondi: vimgor too much rests on your shoulders
01:15  vimgor: I don't have a clue!
01:16  bairui: he can handle it. I've seen him reduce grown coders to tears in a single response. :)
01:16  Raimondi: :)
01:17  ixiion: however thanks mr Raimondi and bairui for the help :]
01:17  bairui: np
01:17  Raimondi: np :)
01:21  bairui: yes... after testing Raimondi's map (and making the corresp <Up>) and getting back to work... we will NEED that vimgor entry. *shudder*
01:21  Raimondi: Well, vimgor won't complain :)
01:21  fholgado: brain fart time, how do I create a new buffer from a script?
01:21  fholgado: using the :new command
01:21  Raimondi: put 'new' on its own line
01:22  fholgado: ah...
01:22  fholgado: weird
01:22  Raimondi: every line is an ex command
01:29  hsuh: how do you guys quickly quit a vimdiff?
01:30  et: :qa!
01:30  hsuh: i mean going back to the file you were editing :)
01:31  hsuh: which is where the cursor starts (actually its the diff from a git plugin, but i suppose its the same thing)
01:33  Somelauw: Okay, I don't understand, but somehow I managed to solve it in a different way.
02:03 --- j0su3 is now known as josue
02:03 --- josue is now known as j0su3
02:08 --- galaxywatcher_ is now known as galaxywatcher
02:43  b14ck: How can I tell what filetype vim has chosen for my current file? EG: I'm in a file, and I want to know what filetype vim *thinks* it is.
02:47  rson: :echo &ft
02:48  rson: I sent a mail to vim_use last friday and I'm assuming it's still hung in moderation.  Is anyone around a mailing list moderator?
02:53  Axioplase_: hsuh: set nodiff
02:53  Axioplase_: or better: :diffoff
02:53  b14ck: `:echo &ft` doesn't work.
02:54  b14ck: Doesn't do anything :(
02:54  hsuh: Axioplase_: almost, that still leaves two windows (that is, doesnt undo the split that diff does)
02:54  Axioplase_: hsuh: :diffoff!
02:54  hsuh: i guess i can bind a sequence with :q though
02:55  Axioplase_: with the bang. But it won't close the window. And this is good, because a diff still is several files edited, but no "main" file to keep.
02:55  hsuh: hm
02:55  Axioplase_: you could :diffoff! and then ^W^O
02:56  Axioplase_: (it closes the window, not the buffer)
02:57  rson: b14ck: try ":set ft?" instead?  do you have the filetype plugin turned on?
02:58  b14ck: `:set ft` works
02:58  b14ck: Says it doesn't detect my filetype though, hrm :(
03:00  Axioplase_: b14ck: "set ft?"
03:00  Axioplase_: should give you the current filetype
03:01  Axioplase_: and ":set ft=foo" should set the filetype to "foo"
03:01  rson: b14ck: are you attempting to add a new filetype?
03:01  b14ck: I'm not adding new filetypes.
03:01  b14ck: I just wanted to see waht was going on with a filetype I have.
03:02  b14ck: I'm trying to make vim recognize all .pp files as puppet filetypes.
03:02  b14ck: So I got that working.
03:02  b14ck: But apparently the ubuntu package `vim-puppet` doesn't work.
03:02  b14ck: Because even if my filetype is set to puppet, it doesn't do any highlighting.
03:02  Axioplase_: b14ck: It is also possible that you use a "small" vim. Depending on your distribution/OS, you may want to install another vim ("vim-full", or whatever it is called)
03:02  bairui: vimgor vim-tiny
03:02  vimgor: vim-tiny is the default Vim package for Debian/Ubuntu. It is built with a small subset of features and is not intended to be used full-time. You most likely want to install a more capable package of the Vim editor. If you want gvim install the vim-gtk package, otherwise install the vim package.
03:03  Axioplase_: b14ck: and you need to set ":syntax on", as well as plugin, and so on.
03:04  b14ck: http://pastie.org/1447105
03:04  b14ck: That's my vimrc, I'm pretty sure its OK for the puppet file type.
03:04  b14ck: and here's my vim pacakges on my box, http://pastie.org/1447107
03:05  b14ck: It shows `vim-puppet` as installed.
03:05  b14ck: As well as the other 'vim-full' type packages.
03:05  b14ck: afaik
03:05  b14ck: It works fine with other file types
03:05  b14ck: But the puppet one just doesn't work at all.
03:08 --- bburhans_ is now known as bburhans
03:12  homekevin: b14ck: You should get rid of smartindent, and you don't need a separate "filetype on" when you already have "filetype plugin on".
03:12  homekevin: But you'd be well-advised to make it "filetype plugin indent on"
03:12  tbranyen: ha that seems to be a common ish
03:13  homekevin: b14ck: I don't know what puppet is or what the Ubuntu package does. Is ft being set correctly?
03:16  homekevin: b14ck: Do the puppet.vim files show up in :scriptnames?
03:16  homekevin: b14ck: Did you read the README in /usr/share/doc/vim-puppet?
03:17  homekevin: It doesn't look like the package drops the files in the Vim runtime path, so presumably you're supposed to do something additional, and the README would be the place to learn about it.
03:19  ixiion: vimgor: autoindent
03:19  vimgor: I don't know!
03:21  b14ck: homekevin: puppet.vim doesn't show up in :scriptnames.
03:21  b14ck: I think there's an issue with the ubuntu package.
03:21  b14ck: But yes, the filetype is being set properly.;
03:23  homekevin: b14ck: The README I found says you need to manually copy the files to an appropriate place, so that would not be a problem with the package.
03:23  homekevin: But check the readme with the package, since it might not be the same one I found.
03:24  b14ck: will do
03:24  b14ck: thanks for your help
03:33  ixiion: vimgor: smarttab
03:33  vimgor: Dunno!
03:38  yogione: gg=G is not working for pretty formatting xxx.html.erb file - what do I add to my .vimrc file
03:57  homekevin: So I recently pointed out that the ColorSamplerPack contains fine_blue and fine_blue2, which are identical files. I just found that railscasts and railscasts2 are also identical.
03:58  homekevin: Now I've checked them all, so I'm pretty sure those are the only dupes.
04:02  homekevin: Although I think some of the colorschemes in the pack can be considered "evil" even though being non-evil is supposed to be a requirement for getting in.
04:03  homekevin: lettuce and martin_krischik are the most obvious examples, changing settings and creating autocmds.
04:04  homekevin: martin_krischik actually changes t_Co to 8 if you terminal isn't one of the 3 or so it recognizes. WTF?
04:04  bairui: a general question to the channel: How do *you* use tabs? I mean. I know what vim tabs are, and how to use them. I'm not asking for differences between buffers and tabs. I know all that. Vimgor does not need to be consulted here. I am merely asking:     How do *you* use tabs? What do you do with them? Do you even use them? Can you give me some nice use-cases?
04:04  homekevin: bairui: I don't.
04:05  bairui: thanks, homekevin. nor do i, but i was hoping someone here does so I can find out what ways people are (validly) using tabs.
04:05  homekevin: I think most people end up not using them, really.
04:06  tmr: And most people who use them try to use them as buffers.
04:06  homekevin: I'm not totally sure why, I just didn't find them compelling after learning them.
04:06  walt: bairui: never saw the point of them.
04:06  bairui: i wouldn't be surprised, however I have heard of some valid uses. We get so many newbies here abusing them that I thought it might be nice to be able to show them valid ways to use them.
04:06  bairui: hmm... 3:0 not looking good for ye olde tabs, eh? :)
04:06  fholgado: oh jeez...  here we go with the tabs agani
04:06  walt: I think people abuse them because there is no valid use case
04:08  walt: actually
04:08  walt: I am going to start using tabs now
04:08  walt: for a few days
04:09  bairui: cool. I am thinking the same.
04:09  bairui: *can* they be useful?
04:09  walt: maybe, I guess
04:09  walt: I sometimes run multiple vims
04:09  bairui: and what are the use-cases? and what are the caveats and traps?
04:09  bairui: yeah... I see tabs as a separate session of Vim - but with shared access to internal registers
04:10  walt: I'd say the only use case is saved layouts
04:10  bairui: i also see each tab as a seperate workspace - you could use one for browsing doco, one for diffing files, etc
04:10  walt: thing is, I prefer a separate vim for things like that
04:10  walt: that differ so much
04:10  bairui: yeah - layouts - but a nice example of moving (and WANTING to move) buffers between those layouts would be nice
04:11  walt: however, different views within the same project could be good
04:11  walt: like one view for configuration, and one for main branch development
04:11  walt: bairui: what do you mean move buffers?
04:11  walt: all buffers are available in all tabs afaik
04:11  walt: it's just a collection of windows
04:11  homekevin: Getting back to my colorscheme complaints, rdark has a "feature" that's just stupid. You can set a variable to make it turn on cursorline. Why wouldn't I just set cursorline?
04:12  homekevin: And if the variable isn't set, it doesn't set highlighting for the CursorLine group.
04:12  bairui: well, it's the buffers != tabs that trip people up. It's the fact that the buffers WILL move between tabs as Vim serves your requests. This confuses people. Having some valid use-cases where the user DESIRES to move those buffers between the tabs is what we need to show newbies that Vim tabs != any other app's tabs.
04:13  walt: ok, I have misunderstood tabs
04:13  walt: this makes no sense
04:13  homekevin: Tabs are extra frames to put windows in.
04:13  walt: right, I know
04:13  bairui: yes. they are sessions.
04:13  walt: but I just did some fucking about
04:13  walt: and behaviour seems strange
04:13  homekevin: No, they aren't like sessions at all.
04:14  bairui: so, a tab holds many windows. A window holds a buffer. those buffers can move to any window in any tab.
04:14  bairui: no, homekevin, not Vim sessions - I mean 'sessions' in the process sense.
04:14  bairui: you know - like a separate instance of vim
04:15  homekevin: I could nit-pick that more. It's kind of fun.
04:15  bairui: please do
04:16  walt: ok, it seems bufexplorer works fairly bad with tabs
04:16  walt: it keeps jumping between tabs when I chose buffers
04:16  bairui: i need to clarify my understanding of tabs here. If i'm wrong, let me know. But I am not saying they are Vim's sessions. That was a poor choice of word. I do see them as almost separate instances of Vim though, with shared data.
04:16  walt: instead of opening the buffer in the current window in the current tab
04:16  bairui: walt: that might be bufexplorer trying to make tabs behave as the newbies expect
04:17  bairui: i need a better word than newbies, but you know what i mean
04:17  walt: maybe
04:17  walt: but it is messed up
04:17  walt: and since I use bufexplorer a lot, I can not use tabs
04:17  walt: so, here ends my experiment
04:17  bairui: i don't use BE, so I will see how i go...
04:17  bairui: fair enough, walt. Thanks for playing. :)
04:19  walt: bairui: seems to be an option so I can turn it off. So my experiment might continue: "Please note that when opening a buffer in a tab, that if the buffer is already in another tab, bufexplorer can switch to that tab automatically for you if you would like"
04:19  bairui: ok. nice.
04:20  bairui: ok - this is a question I would like to raise again with different crowds in #vim. If you've answered me before, feel free to ignore it - unless you've had an epiphany. :) Thanks for helping me clue this out, guys. I'll leave the topic alone for now. I'm always here if you have a burning issue to raise with me about it though. :)
04:21  walt: hm, this resultet in something strange
04:22  walt: no, when I open help, it opens in half screen, and if I close the other window to get help in fullscreen, vim exists.
04:22  walt: I did not have this before
04:31  Axioplase_: walt: how do you close the other window?
04:31  walt: Axioplase_: Yeah, I solved it. I was using :q, but I usually use :clo. I know the difference, was just a temporary brain freeze
04:32  Axioplase_: if you do ":q", it's normal. The help buffer is not modified. So, :q can quit normally.
04:32  walt: thanks though
04:32  Axioplase_: np
04:32  walt: Axioplase_: do you know of a way to open help in the current window by default?
04:33  Axioplase_: No, I don't, sorry. I'm always happy with help in its own window…
04:34 --- stepnem_ is now known as stepnem
04:35 --- cuba33ci_ is now known as cuba33ci
04:39  bairui: walt: does it do that if you don't use the BE plugin?
04:39  walt: bairui: I configured BE to not jump to exiting window. Now it works as I expect and want
04:39  walt: windows in viewports
04:40  bairui: cool - so the help thing was transient?
04:40  walt: I can actually see it being useful. I'll see tomorrow at work
04:40  walt: bairui: the help thing was just me using vim wrong
04:40  bairui: :)
04:42  bairui: hmm... it just occurred to me that as viewports, it would be nice to be able to name/tag them. Then I could use   :tab {partial}<Tab>   to switch to a layout. That would be cool.
04:43 * bairui will have to sit down and read all of tabpage.txt over a nice cup of milo...
04:47  ixiion: what is milo?
04:51  bairui: it's an Australian chocolaty drink
04:53  nate-: pretty tasty
04:53  nate-: you usually have it with milk
04:54  nate-: bairui, where are you in aus?
04:54  walt: I want a good music player for linux :/
04:55  nate-: walt, banshee or rhythmbox?
04:55  bairui: walt: mpd
04:55  walt: there should be a command line version of foobar2000
04:55  walt: bairui: mpd is just an audio player interface. It doesnt provide me with much as a user
04:55  bairui: nate-: i'm not, mate. I'm in China. Left Oz around 2004.
04:55  nate-: ah ok
04:55  walt: I want good music library caching
04:55  bairui: walt: mpc :)  hehe... I use ncmpcpp
04:56  walt: and effective search
04:56  bairui: how about you, nate-?
04:56  nate-: bairui, I'm in Brisbane Queensland
04:57  ixiion: walt how about amarok ?
04:57  nate-: currently getting flooded
04:57  nate-: not too bad at my house atm
04:57  bairui: i lived & worked in Brissie for ~5 years. Darwin originally. Yeah, I heard about the floods. Keep your toes dry, mate. :)
04:57  ixiion: where does this flood come from? rivers or
04:57  bairui: LOTS of rain :)
04:58  nate-: yea it's pretty crazy
04:58  nate-: I can hear it starting to rain harder @_@
04:58  bairui: worse than the '74, they're predicting
04:58  ixiion: we had snow since last week :]
04:58  nate-: yea
04:58  ixiion: almost a meter
04:58  walt: bairui: this looks good. Thanks
04:58  bairui: beautifully sunny and dry here - has been most of winter. Best one we've (I've) ever had.
04:59  walt: I am currently using cmus, and it's ok. but nothing special
04:59  bairui: walt: you're welcome :)
04:59  walt: ixiion: too heavy weight for me
04:59  bairui: mrs (ex Brissie girl) just said Brisbane river just burst its banks about an hour ago...
04:59  quotemstr_: Why, if I type 100 i hello RET ESC, nothing happens, but if I hit ESC again, I get 100 copies of "hello"? Doesn't the first ESC exit command mode?
04:59  quotemstr_: exit insert mode, rather.
05:00  bairui: quotemstr_: second <Esc> not necessary for me...
05:01  quotemstr_: Or another other command, like a move.
05:01  bairui: quotemstr_: you don't have any <Alt> or <Esc> insert mode maps, do you?
05:01  quotemstr_: The repetition just seems to take effect at the beginning of the next command instead of the current one.
05:01  quotemstr_: bairui: How would I check?
05:01  bairui: :imap    <--- and go hunting! :)
05:02  quotemstr_: No mapping found. :-)
05:02  quotemstr_: So I guess I'm using a stock configuration in that sense.
05:02  quotemstr_: Ah, that's odd.
05:02  quotemstr_: The second ESC isn't necessary --- just a short delay will suffice.
05:03  bairui: so - have a look at your    timeout and ttimeout   settings
05:03  quotemstr_: Why would there be a timeout? Isn't the 100i done after exiting insertion mode?
05:03  bairui: read   :help 'timeout
05:04  quotemstr_: Sure, but doesn't apply to *incomplete* commands?
05:05  bairui: what's incomplete about hitting <Esc>?
05:05  quotemstr_: Because the insertion ended? Besides: if I type 100i hello ESC i, I get a 100 repetitions before I re-enter insert mode.
05:13  ixiion: quotemstr_: works the same here
05:13  ixiion: whats wrong about it
05:13  quotemstr_: So I'm essentially wondering what vim is waiting for after I exit insertion mode the first time.
05:14  bairui: quotemstr_: did you read :help 'timeout' ? I mean, all of it?
05:14  quotemstr_: "vim will wait until either the complete mapping or the key sequence has been received, or it is clear that there is no mapping or key sequence for the received characters."
05:15  quotemstr_: What key sequence can follow an exit from insert mode without starting a new command?
05:15  bairui: quotemstr_: :echo &timeout &ttimeout
05:16  quotemstr_: 1 0
05:16  walt: bairui: how do I browse my file system in ncmpcpp? browse view says volume: n/a
05:17  bairui: quotemstr_: I have: 0 1
05:17  bairui: walt: you need to refresh/reload your database.  try   ctrl-u
05:19  quotemstr_: That's odd.
05:20  quotemstr_: After :set notimeout nottimeout, I have to hit ESC twice to exit insertion mode.
05:20  bairui: not weird at all - documented fully in :help 'timeout'   :)
05:20  walt: bairui: it doesnt seem to find my music dir. Am I writing the config wrong?   let g:bufExplorerFindActive=0        " Do not go to active window.
05:20  walt: ehh, sorry
05:20  quotemstr_: bairui: You mean "ESC" by itself isn't a complete command? Hrm.
05:21  walt: bairui: mpd_music_dir="~/Music/"
05:21  walt: is what I have in my config
05:21  quotemstr_: According to *mode-switching*, one ESC is sufficient to return from insert to normal mode.
05:22  quotemstr_: What am I missing?
05:22  peth: quotemstr_: ESC is also a prefix for meta characters, like your terminal sends when you hit one of the arrow keys. eg. arrow left is <ESC>[D
05:23  quotemstr_: peth: Ah. That would explain it.
05:23  damd: oh snap news
05:23  quotemstr_: peth: I'd forgotten all about that. I'm used to Emacs. :-)
05:23  damd: what are you doing here anyways?
05:23  bairui: hence my asking about <Alt> key maps :)
05:24  quotemstr_: damd: Sleeping with the enemy?
05:24  damd: playah
05:24  quotemstr_: vimpulse is close enough to vim. :-)
05:24  peth: well, in term emacs it should be the same thing too, except they may use different timeouts by default
05:24  quotemstr_: peth: The closest Emacs has is ESC ESC ESC for quit.
05:25  bairui: walt: that setting is called   music_directory    in my conf...
05:25  peth: quotemstr_: try setting timeoutlen to something lower
05:25  peth: i have set notimeout ttimeout timeoutlen=50
05:25  quotemstr_: At least it's in milliseconds. Thanks.
05:27  peth: there's some complicated cross effects with timeout ttimeout and the respective lenths so read the relevant :help for those, it's not so much
05:28  quotemstr_: Ahwell. The whole system sounds like a rather hackish workaround the overloading of ^[ in the terminal.
05:28  peth: that's terminals for you :)
05:45  walt: bairui: working now. Thanks. ncmcpp seems cool
05:45  bairui: cool :)
05:45  walt: mpd seems to be _the_ way of playing audio on linux really
05:46  quotemstr_: How do you join two lines in vim?
05:46  bairui: i like it. I had grief with pulseaudio + mpd, so I ditched pulse :)
05:46  bairui: J
05:46  quotemstr_: x doesn't work on line endings.
05:46  quotemstr_: Ah.
05:47  walt: bairui: I just use alsa
05:48  bairui: yeah - same for me now
05:49  quotemstr_: You know what the holy grail would be? A network audio protocol that worked across all the major desktop platforms, and that which also acted as an OS-level sound driver on each OS.
05:50  bairui: a lot of eggs, I guess...
05:51  walt: quotemstr_: go ahead and implement an mpd deamon for windows and be done.
05:52  quotemstr_: walt: Signing keys.
05:52  quotemstr_: walt: Drivers on 64-bit Windows *all* need to be signed these days.
05:52  walt: ah
05:52  walt: yeah
05:53  walt: well, make MS do it then
05:53  walt: should be easy
05:53  quotemstr_: A virtualized sound driver that spoke mpd might work though.
05:53  walt: ...
05:53  quotemstr_: walt: My influence in Windows isn't *that* big. :-)
05:54  walt: quotemstr_: I think it would be good enough
05:54  walt: why would it need to be an actual sound driver?
05:54  Accelerator: What's the command to skip to the bottom of a file?
05:54  walt: it just needs to be a media player backend
05:54  walt: Accelerator: G
05:54  quotemstr_: walt: For the same reason we have pseudoterminals.
05:54  Accelerator: walt, Thanks
05:55  Accelerator: E464: Ambiguous use of user-defined command ?
05:55  walt: quotemstr_: whaat reason is that?
05:55  bairui: Accelerator:    G    not   :G
05:55  walt: Accelerator: it's not a command. It's a key binding
05:55  Accelerator: OH.
05:55  Accelerator: I don't know why I was thinking it was a command
05:55  Accelerator: Thanks.
05:56  quotemstr_: walt: Not all applications natively understand the New Thing, so we implement the New Thing in terms of the Old Thing and present a Pseudo Old Thing to applications.
05:56  walt: ah i see your point
05:56  walt: is it needed in this case though
05:57  walt: Wouldnt it be enogh with some OpenAL based service implementing the mpd protocol
05:58  walt: I guess what you want is to also have the deamon control all sound.
05:58  walt: i.e more than mpd
05:58  walt: I was thinking in the wrong patterns
05:58  walt: yeah, that would be cool
05:58  walt: a "generic sound driver" that can be controlled by anything
05:59  quotemstr_: walt: Yeah. What PulseAudio is supposed to be, AIUI.
06:01  walt: quotemstr_: isn't jack also similar?
06:02  quotemstr_: Jack is designed for low latency über alles.
06:05  walt: listeing to music feels better when it is coming from mpd
06:06  quotemstr_: walt: Over oxygen-free gold cables mined from isotopically pure ores? :-)
06:07  walt: quotemstr_: unfortunately from my AKG headphones :( They are not bad, but I prefer my stero setup. It is however packed away
06:07  walt: I am moving in 4 days
06:07  walt: my apartment is a sofa, a table, some clothes, my laptop, and kitchen stuff
06:08  peth: how many plates, how many cups?
06:08  walt: quite a lot. Although I have always had them packed away on top shelf
06:08  walt: I only use one of each
06:08  walt: it's how I live normally
06:09  peth: it's my solemn vow to keep only two of each on my next move. i never, ever used more.
06:09  peth: still everyone keeps telling me i'm crazy
06:10  MetaCosm: peth, I just did that
06:10  MetaCosm: dumped all my cap
06:10  MetaCosm: s/cap/crap
06:10  peth: how liberating that must feel. i'm so looking forward to that.
06:10  bairui: it's cathartic, isn't it?
06:11  MetaCosm: It is amazing, but scary
06:11  MetaCosm: hard to explain to people
06:11  peth: oh i get that :/
06:12  peth: times have changed. for some.
06:12  MetaCosm: but, once people get that you aren't poor, they just think you are excentric
06:12  bairui: hard to battle the consumer society model
06:12  MetaCosm: yep.
06:12  walt: MetaCosm: my problem is I have things with emotional value
06:13  walt: and music stuff
06:13  MetaCosm: walt, you keep that stuff
06:13  walt: I don't really have other things
06:13  MetaCosm: I kept my ER-4Ps -- it isn't about getting rid of creature comforts and shit you love
06:13  MetaCosm: it is about crap you don't need and don't care about
06:14  walt: I think I have way too much stuff this move. it's 5 boxes all in all
06:14  MetaCosm: ... 5 boxes?
06:14  bairui: hehe
06:14  MetaCosm: how many trucks is that?
06:15  walt: no trucks
06:15  walt: one car
06:15  MetaCosm: you are already a minimalist then
06:15  bairui: nice, MetaCosm. I like how you don't assume anything. :p
06:15  MetaCosm: don't worry abou tit
06:15  walt: I am not worrying
06:15  walt: but I find it annoying
06:15  MetaCosm: I am down to 2 big boxes about
06:15  walt: cool
06:15  MetaCosm: my goal is to be weatlhy enough I can live out of hotels
06:15  MetaCosm: not there yet, but getting close
06:16  MetaCosm: hotels are nice / low overhead
06:16  walt: well, I want to spend most of my time producing music the coming year, and my instruments and shit take space
06:16  bairui: and make noise
06:16  MetaCosm: yeah, plus all the audiophile crap you musicians have is expensive
06:16  peth: right about the overhead, but where to store the bodies in a hotel
06:16  walt: I don't have much audiophile stuff
06:17  MetaCosm: I am lucky, I ended up along the cheapest of the audiophile paths
06:17  walt: my midi gear is about 1300 USD I think
06:17  MetaCosm: headphones, they tend to max out at around 1000 bucks
06:18  walt: I don't buy hardware synths
06:18  walt: so that's good ;)
06:18  walt: otherwise I'd be ruined
06:18  MetaCosm: well, instruments cost a good bit too
06:19  walt: myeha, but I don't have expensive ones actually :) I have spent a fair bit of cash on drums, cymbals etc. But that was a while back. Now I dont play in a band since I am moving. I have a few hand drums though, that aren't expensive per se, but hard to replace
06:19  walt: from india, africa, south america
06:19  walt: had an electrical piano, but I sold it
06:20  walt: for the move
06:20  MetaCosm: that would be expensive to replace
06:20  walt: right
06:36  bloger: can I use HEX in regual expression?
06:36  sam_sam: what does __init__() in a userdefined class mean ?
06:36  sam_sam: sry wrong room
06:38  bairui: bloger: :help /\%x
06:46  bloger: bairui: got "%xA0"
06:58  bloger: Result does not match to desired char.
06:59  bloger: give me example how to use hex in regexp
07:05  Axioplase_: bloger: what about ":he \%x" ?
07:08  Axioplase_: for example /\%x20 will match a space (hex: 0x20)
07:09  bloger: Axioplase_: he \%x = :help /\%x, which previously bairui advice me.
07:10  trco: bloger what are you trying to match?
07:10  bloger:  /\%xA0 match to /%xA0 in fact.
07:10  bloger: s/-/a0/
07:36  bloger: I do something wrong? %s:\%V-:/\%xA0:g If not, then it is a bug.
07:42  jamessan: bloger: the replacement portion of a :s command isn't regex, so that won't work
--- Log closed Tue Jan 11 08:15:55 2011
--- Log opened Tue Jan 11 08:16:04 2011
08:16 --- Users 548 nicks [0 ops, 0 halfops, 0 voices, 548 normal]
08:17 --- Channel #vim was synced in 78 seconds
08:33  jorrit: Hi
08:34  bloger: bairui: he said koi8-r and locale is ru_RU.KOI8-R
08:34  bairui: they seem the same... I dunno, bloger :-/
09:18  Walt: vim
09:18  Walt: does anyone use the line marking functionality in vim?
09:18  Walt: e.g for gdb integration?
09:19 * bairui avoids the word 'integration' in Vim sentences...
09:19  bairui: and no - I don't use cursorline, if that's what you meant, Walt
09:49 --- wtfness is now known as nixness
09:51  massimo: Hi. Some vim are using backspace differently. Some can delete old text, some others can only delete text that is written within the insert session. Some can join lines with backspace some others not. Which setting does change that? I'm using the same .vimrc on both but this behaviour is different.
09:53  bairui: :help 'backspace
09:55  srk9: I have two different files open inside two window buffers inside of vim and I sorted each of them with the :sort command. Is there any command I can use to find out if the contents of both are the same?
09:55  Walt: bairui: I meant the feature that you can add markers in a one-char wide column on the left side of the window
09:55  bairui: srk9: :help :diff
09:56  bairui: Walt: ah. they're called signs
09:56  bairui: and I have used them, but not lately, and not often
09:57  srk9: bairui: Thanks
09:58  bairui: np
10:35  matt1s: In visual mode, how can I move the cursor back to where I was if I accidentally navigated no another buffer or line in the file?
10:35  matt1s: s/no/to
10:35  bairui: try ``
10:36  matt1s: bairui, thanks, that seemed to do the trick for this occurrence
10:36  bairui: np
10:38  the_isz: doesn't <c-o> work in visual?
10:42  bairui: not in my tests, the_isz. o works to toggle which end of visual selection you want to extend. Of course, <c-o> works after you leave visual, but the result of that may be as flaky as ``
10:44  the_isz: hmm... ok. too bad this functionality is not consistent through the two modes.
10:54  s`: Can I make existing vim instance into a server?
10:55  zomg: I'm not entirely sure how vim, an editor, would become a server, or even what kind of server..
10:55  zomg: :D
10:56  strull: zomg: vim can
10:56  bairui: zomg: :help clientserver
10:56  the_isz: zomg: see its --servername argument :)
10:57  zomg: interesting
10:57  the_isz: zomg: emacs does that, too, btw
10:57  zomg: I thought it might be something like that if it existed
10:57  zomg: then again maybe it was a mistake to assume vim didn't have something that could be useful :D
10:58  gaveen: s`, maybe you are looking for something like --remote-silent
10:58  s`: My vim is already started and it has lots of buffers.
11:01  gaveen: s`, if you want to edit new files in the same vim, checkout --remote* options set (Eg: --remote, --remote-silent) when opening the new file
11:01  matt1s: With wildmenu enabled, and I autocomplete to a directory, how can I make wildmenu understand I want to expand the autocompleted directory and continue using wildmenu for the subdirectory?
11:03  kurkale6ka: matt1s: arrow down
11:06  matt1s: kurkale6ka, great! Thanks
11:46  exDM69: is there a way to invoke omni, etc completion from a script, I used feedkeys, but that seems to cause the completion to take place after the script has completed
11:46  exDM69: I want to try one completion mode after another until I find one that gives some suggestions
11:47  strull: exDM69: maybe :he :redraw is the key
11:47  exDM69: okay, I'll try that
11:52 --- s` is now known as `s
11:53 --- `s is now known as s`
11:53  exDM69: strull: nope, that still does not work. the keys get fed alright, but pumvisible() is still false after feedkeys() and redraw
11:55  dimm: hello
11:56  dimm: i was press something
11:56  dimm: and now i edit the file in readonly mode
11:56  dimm: how i can return?
11:57  dimm: chmod is right, but "readonly" is setted
11:57  strull: dimm: :set noro
11:57  dimm: thx a lot
12:02 --- altamic_ is now known as altamic
12:08  dimm: what does mean message:
12:08  dimm: "default.php"  CONVERSION ERROR[dos] 272L, 12653C written
12:19  mgedmin: dimm, it means charset conversion failed
12:21  matt1s: Does wildmenu work for a path that is through SSH/SCP? I am trying to do :e scp://user@machine// but it just expands to '...' and then gives up
12:22  mgedmin: matt1s, I recommend sshfs
12:23  matt1s: mgedmin, I could go that approach, but right now I just want to do some quick editing and not have to mount up the relevant directory or root directory
12:35  matt1s: mgedmin, looks like that is my only approach for easy navigation on a remote system
12:50  micols: how do I replace each word on a line with word/newword ?
12:50  micols: words are separated by spaces
12:51  the_isz: micols: :s/word/newword/g
12:52  the_isz: micols: or do you mean any word?
12:52  micols: yes, any set of a-zA-Z_ classifying as a word
12:54  the_isz: micols: :s/\w\+/newword/g
12:54  micols: ah, tried \w , but forgot +, \w is only one char
12:54  micols: but I need to replace it with the same word again
12:54  micols: with some text added to it
12:54  micols: can $1 or such be used?
12:54  the_isz: micols: :s/\(\w\+\)/new\1/g
12:54  the_isz: micols: :s/\w\+/new\0/g   << shorter
12:54  micols: yes, beautiful, thanks :)
12:54  the_isz: micols: you're welcome
12:55  strull: :s/\w\+/new&/g   << even shorter
13:32  poseid: can i search backwards in my logfile to the first occurence of error ?
13:32  LeoNerd: ?  searches backwards; it's a reverse   /
13:36  yko: Hi! Can i somehow set background color for inclided syntax but keep foreground colors?
13:36  yko: For example, if i want to set background for css included in html
13:38  mgedmin: yes, assuming they use different higlight groups
13:38  mgedmin: see :h :hi
13:41  poseid: LeoNerd: perfect!
13:43  poseid: what is vim equivalent of emacs ctrl x - 2 ?
13:43  poseid: i.e. split window
13:44  LeoNerd: :split
13:44  poseid: 100 points ... thanks
13:44  LeoNerd: Also probably best not to assume we know what emacs keys do :P
13:45  strull: All I know that in emacs x inserts an x
13:45  yko: mgedmin: hmm. maybe i understand wrong. css syntax uses css* color groups that are lined to base groups like Statement, Comment, etc
13:45  poseid: :) ... yep... i am switching from emacs because vim is on every unix
13:45  yko: i need to override each?
13:46  mgedmin: yko, you'd need to unlink and set explicit colors for those
13:46  mgedmin: poseid, shorter keys are ctrl-w s for split and ctrl-w v for vertical split
13:47  hsuh: anyone else had fugitive.vim giving diffs different from those via git diff?
13:47  yko: mgedmin: if i know that css syntax inluded in cluster @htmlCss i can not override background for each group inside it?
13:47  mgedmin: afaik, no
13:47  mgedmin: hmm
13:47  yko: mgedmin: thanks a lot for your help
13:47  mgedmin: actually, let me think a bit
13:48  mgedmin: does the whole <style>...</style> element define a syntax region?
13:48  mgedmin: if so, you may be able to set a background color for it
13:48  poseid: mgedmin:  thanks!
13:48  yko: oh, sure. i'm not hurry,
13:48  mgedmin: and if the regular groups all have transparent backgrounds, it might just work
13:48  yko: mgedmin: yes, it's in a single region
13:48  poseid: what is unsplit of window ?
13:48  yko: mgedmin: main problem that they are not transparent
13:49  yko: poseid: just close. ctrl-w + c
13:49  poseid: great
13:49  poseid: going to practice this
13:49  poseid: split and unsplit :)
13:52  zenzike: poseid, I was thinking of trying emacs out since it has better support for Haskell
13:52  zenzike: are there any other reasons you've come to vim?
13:53  yko: mgedmin: i use example like http://vim.pastey.net/144736 to test
13:54  yko: mgedmin: if i do something like ":hi cssStyle ctermbg=green" whitespaces inside style becames green but highlighted areas have default bg color
13:56  mgedmin: hm
13:57  mgedmin: and hi Statement ctermbg=NONE doesn't make it inherit the color from the surrounding group
13:57  poseid: zenzike:  yep... since working with vservers on the internet
13:57  poseid: every system has vim by default
13:58  poseid: emacs is sometimes not available
13:58  poseid: and needs longer for startup
13:59  EselTheo: Well, most Unix-like systems have vi installed, but not necessarily VIM.
14:00  hsuh: i use vim for my hands
14:00  yko: vim has great power of highlighting.
14:00  hsuh: the modal modes  for emacs cant really be complete as vim ...
14:01  yko: You can tell vim to highlight html inside Perl's __DATA__ section and then highlight some regions of that html as Perl again!
14:02  yko: and for sure, youll get javascript and css highlighting inside that html. and all that you can get just with a ~40 lines of syntax file
14:02  Leonidas: technically, emacs can do the same with mumamo…
14:03  hsuh: but afaik doesnt work that well
14:03  yko: hsuh: which one?
14:03  hsuh: mumamo
14:03  yko: oh :) dunno
14:13  sqz: goodmorning
14:14  sqz: my regex affects the whole line when I partially select something in a line with CTRL-V (visual selection), and fire  :'<,'>s/[ \$%!\@#]/-/g on it :(
14:14  sqz: any ideas?
14:14  sqz: (the idea was to replace weird characters with '-' in the selection)
14:14  Raimondi: sqz: :h \%V
14:15  Raimondi: The range is linewise
14:15  sitaktif_: I just read "the rage" -_-
14:19  sqz: Raimondi: hohooooooooooooooooo NICE! :D
14:19  sqz: its also easy to remember: V of visual range
14:28  matt1s: when I do :mksession mysession, where is the mysession.vim file stored?
14:29  henk: hi, afair vim could tell me the encoding (utf8 vs iso8859) of a file. is that so? how?
14:30  mgedmin: matt1s, the current working directory, I believe
14:30  mgedmin: henk, :echo &fenc will tell you what vim *thinks* the file encoding is
14:30  mgedmin: vim tries to autodetect from the list of encodings specified in 'fileencodings'
14:31  henk: hm, that's utf8... so if vim thinks it's utf8 and all umlauts and so on look good in vim, everything should be good, right?
14:31  mgedmin: do you have any reason to suspect otherwise?
14:31  matt1s: mgedmin, thanks, I was just confusing my cwd at the time I ran mksession
14:32  poseid: i want to yank a line but yy does not remove any line
14:32  spiiph: Yank is not cut.
14:32  spiiph: Use dd to cut
14:33  poseid: i see.. thanks
14:33  henk: mgedmin: i don't really have any reason to suspect anything at all due to almost no knowledge about what i'm doing ;) i'm just collecting knowledge to ultimately hopefully solve the problem i'm having :)
14:33  mgedmin: it might help if you described the problem
14:34  henk: mgedmin: nope, because the problem is somewhere between mysql, cacti, apache and firefox, vim is just a tool to help analyze the situation. of course, if you like, i can still explain the problem, but it'll be pretty much OT here...
14:34  mgedmin: heh
14:35  henk: file only inspects the first few bytes and thinks my mysqldump is ascii, but it contains äöü and so on...
14:35  henk: that's what i need vim for.
14:36  the_isz: vimgor: vimtutor
14:36  vimgor: Vim's built-in tutorial is highly recommended for beginners. Just run vimtutor (from your shell or your application menu) to begin.
14:36  the_isz: poseid: ^
14:46 --- silex is now known as Silex
15:03  hsuh: hm, do you guys know why fonts on macvim look different than fonts on emacs?  they look bolder
15:03  hsuh: (antialiased fonts that is)
15:06  dimm: i try to input text, but text inputting with underline
15:06  dimm: what this mean?
15:09  sven^: does anyone have a good font recommendation?
15:09  sven^: At the moment I am using terminus..
15:09  sven^: and: what is an acceptable value for textwidth in the modern world? ;)
15:09  mgedmin: dimm, spell-checking, perhaps?
15:11  mgedmin: grr ^w should delete word, not close windows
15:11  mgedmin: stupid xchat
15:11  mgedmin: sven^, textwidth between 76 and 78 makes most sense
15:12  mgedmin: regarding fonts, dejavu sans mono is not bad
15:12  hsuh: sven: do you like antialiased or bitmap ?
15:12  sven^: mgedmin: why is that? The main argument for ~80 characters seems to be "ancient terminals". With my monitor 80 characters do not even fill half my screen
15:13  LeoNerd: I let lines be as long as they need to be. If that means I wrap at 85, 90.. 100 columns, then I do
15:15  kurkale6ka: It is for ease of reading, you don't have to constantly move your eyes right to left or try to decifer wrapped lines
15:15  kurkale6ka: decipher
15:15  LeoNerd: Sure... Which is where front-loading comes from
15:15  dimm: mgedmin, no, it is not spellchecking
15:16  LeoNerd: Put the important bits up-front then it doesn't matter about all the trailing crap
15:16  kurkale6ka: still I find it cleaner
15:16  LeoNerd: defined $thing or croak "Here is a big long error message explaining the problem which isn't actually that important for developers to read so it doesn't matter if it trails after the 80th column";
15:16  mgedmin: sven^, smartphones; vertical splits -- two reasons
15:16  sven^: hmm, ok..
15:16  LeoNerd: I admit when I read the above line of code, I get bored and stop after about "long error message"... the rest isn't interesting
15:17  mgedmin: not to mention netbooks, tablets -- there are plenty of small screens nowadays
15:21  the_isz: also, i think i once read about a study which stated that there is an optimum amount of words in one line that humans can read.
15:21  the_isz: you wouldn't write a book or a newspaper with exceedingly long lines either.
15:22  dimm: подчкажите
15:22  dimm: вим вдруг в одном месте при редактировании html начинает выводить текст сиреневым цветом с подчеркиванием
15:22  dimm: в чем может быть дело?
15:22  dimm: sorry, another window
15:22  nmkolev: trying to wrap quickfix messages "au Bufread quickfix setlocal nobuflisted nolist linebreak wrap" still nopt wrapping. any idea why?
15:23  the_isz: dimm: good, i thought my brain collapsed^^
15:23  kurkale6ka: dimm: maybe :set cul :)
15:23  Raimondi: nmkolev: Use  :verbose set wrap?   to see if something else is changing th eoption
15:25  nmkolev: if i enter the setlocal command after QF win has opened, the expected thing happens
15:25  nmkolev: Raimondi: :verbose set wrap said nothing, but turned on wrapping
15:26  Raimondi: nmkolev: Sorry, the ? is part of the command
15:27  nmkolev: Raimondi: says nowrap
15:27  nmkolev: but not why
15:27  kurkale6ka: dimm: or for html, it means you're writing within <a>
15:27  dimm: kurkale6ka, yes, html, and <a>
15:28  kurkale6ka: dimm: yeah, so it is just a syntax feature
15:29  Raimondi: nmkolev: I'd use  au FileType qf setlocal ....
15:29  Raimondi: nmkolev: Seems like your au is not being used...
15:31  nmkolev: Raimondi: FileType works; thanks!
15:31  Raimondi: nmkolev: np
15:31  nmkolev: set buftype says quickfix though, so no idea why it isn't working
15:31  nmkolev: tried both bufread and bufenter
15:32  Raimondi: nmkolev: The pattern is matched against the file name
15:33  nmkolev: I see
15:34  nmkolev: Raimondi: do you know if its possible to use C-p and C-n to move through the command history?
15:35  nmkolev: Raimondi: with completion if possible
15:37  mgedmin: nmkolev, you could map them to <PageUp></PageDown> with :cmap
15:37  mgedmin: completion? for prefix-completion, map them to <Up>/<Down> instead
15:38  bairui: strange. I get all that love for free. I see no cmaps...
15:38  kongo: bairui: not strange at all, see :h cmdline-completion
15:38  nmkolev: :cmap works great thanks
15:39  kurkale6ka: I wonder if there is a way to see short file names only when tabbing in wildmenu mode
16:05 --- bisco77_ is now known as bisco77
16:07  queso: How can I have vimdiff ignore whitespace?
16:07  bisco77: i can't seem to get fugitive.vim to use the correct COMMIT_EDITMSG file...it keeps wanting to add .gitCOMMIT_EDITMSG instead of editing .git\COMMIT_EDITMSG...any ideas?
16:08  spiiph: bisco77, how do you specify it?
16:09  bisco77: siiph: in vimfiles\plugin\fugitive.vim it looks like "let msgfile = s:repo().dir('COMMIT_EDITMSG')"
16:10  spiiph: OK. Sounds like someone isn't using fnameescape() properly. If it's the plugin trying to set this, I think you should bug tpope for a fix.
16:10  the_isz: queso: see  :he 'diffopt'
16:11  bisco77: siiph: sounds good to me....off to github i go...thanks...
16:16  queso: the_isz: ty
16:17  the_isz: queso: you're welcome
16:27  rindolf: Hello vimmers!
16:28  the_isz: rindolf: hey :)
16:28  rindolf: the_isz: what's up?
16:31  the_isz: rindolf: nothing special
16:31  rindolf: OK.
16:44  manhunter: i installed gvim on windows , how can i edit .vimrc on windows ?
16:44  damd: i don't know vim, but try :e ~/.vimrc
16:44  damd: at least on emacs ~/.emacs translates correctly
16:44  LeoNerd: It's called _vimrc on Windows I belieevb
16:45  fow: :e $MYVIMRC
16:45  fow: (or $MYGVIMRC)
16:46  sleepynate: damd: it translates on windows as well
16:46  sleepynate: but fow's is "more correct"
16:46  damd: sleepynate: i was talking about windows ;|
16:46  Zathrus: LeoNerd: .vimrc works just fine too
16:46  LeoNerd: Fairenough
16:46  Zathrus: the only reason it's _vimrc is because Windows Explorer won't let you create a file that starts with a .
16:47  sleepynate: damd: ugh. i need to not help people today. dayquil. sorry about that.
16:47  Zathrus: create it w/ anything other than Explorer and it's fine
16:47  spiiph: Which is utterly retarded, since you can du it in cmd.exe :)
16:47  strull: or with vim itself
16:47  damd: let's create filenames with newlines in them
16:48  strull: or backspaces, it' fun
16:48  LeoNerd: Oooh. backspaces.
16:48  damd: are backspaces allowed?
16:48  LeoNerd: Unicode homographs are quite fun too
16:48  Zathrus: damd: that's allowable in *nix and Windows
16:48  damd: Zathrus: yes, but are backspaces?
16:48  Zathrus: yes
16:48  Zathrus: http://en.wikipedia.org/wiki/Ntfs
16:48  damd: that's [a lot of] nuts!
16:49  Zathrus: damd: they're allowed in *nix as well
16:49  Zathrus: POSIX only disallows NUL and /  -- Windows disallows rather more as well
16:49  damd: yeah, i can see that
16:49  strull: esp. \
16:50  Zathrus: makes Samba shares interesting at times.
16:51  exDM69: Zathrus: IIRC / is valid in filenames
16:51  exDM69: annoying, though
16:51  mgedmin: in pathnames -- yes, filename -- no
16:52  mgedmin: but only when pedants are splitting nits about what a "filename" is
16:52  Zathrus: exDM69: under POSIX, technically it is. In reality, I've not found a *nix that will allow you to create a file with such a name.
16:52  exDM69: maybe I remember wrong
16:52  Zathrus: mgedmin: try to make a / as part of the directory name... have fun!
16:53  Zathrus: I discovered all of this the hard way while ripping my CD collection
16:54  devkorcvince: Vim
16:55  devkorcvince: bit.ly
16:55  devkorcvince: leinuxdotbasherNH02T90B
16:55  devkorcvince: devcorkvincedevcorkvince@gmail.comNH02T90B
16:55  the_isz: Zathrus: not only you^^
16:56  the_isz: Zathrus: i think i commented the respective code in my ripping script with "/ is not allowed in filenames - escaping is futile"
17:05  pngl: How do I use commands (gg, G, etc.) in ex mode? I am writing a function and I would like to use commands from command-mode inside the function.
17:05  strull: :he normal
17:06  pngl: strull: thank you.
17:07  kurkale6ka: or :h norm (3 keystrokes less :)
17:07  graywh: pngl, or you can use ex commands for moving around...
17:07  devkorcvince: I will never Shift Insert on irssi again
17:08  kurkale6ka: vimgor bof
17:08  vimgor: bof is gg, 1G, :1, :0, <c-home>, :go 1, :go, qqk@qq, ?\%^, :0r<cr>u, 1%, kurkale6ka
17:08  Zathrus: devkorcvince: was wondering wtf that was
17:08  markand: hello
17:08  kurkale6ka: vimgor: eof
17:08  vimgor: Wish I knew.
17:08  peter_w: bof?
17:08  devkorcvince: Zathrus I don't know I just copy a link and all of my clipboard just paste
17:08  kurkale6ka: begining of file
17:09  peter_w: oh, begin
17:09  peter_w: not bottom :)
17:09  markand: how do I disable the Q keybind that enter the ex-mode ?
17:09  markand: I really hate this one :)
17:09  strull: map it to <nop>
17:09  graywh: i map it to gq
17:09  markand: yes but :map Q says : Not mapping found
17:09  peter_w: you have to map it
17:09  pngl: vimgor G
17:09  vimgor: Bugger all, I dunno, pngl.
17:09  Zathrus: markand: because it's not a map. It's a built in.
17:10  markand: okay let's try
17:10  markand: it works thanks :)
17:10  kurkale6ka: pngl: I've created the bof only :) use :h G
17:11  pngl: kurkale6ka: Ok so I can :$ for G
17:11  kurkale6ka: markand: what I have is :nm Q gqap<cr>
17:11  kurkale6ka: pngl: yes
17:11  pngl: kurkale6ka: thanks.
17:17  markand: thanks
17:18  devkorcvince: guys have you tried vimgolf i have problem an error on thor lib...
17:19  consumerism: i have the following line in a php file, and every after it is not syntax-highlighted
17:19  consumerism: $result = preg_replace( "#<br\s?/?>#si", " ", $result );
17:19  damd: ugh
17:20  consumerism: it looks like the ?> is closing php for vim syntax highlighting, is this a bug, can i workaround it somehow...?
17:21  damd: consumerism: what if you use > instead of #? ;|
17:21  damd: "><br\s?/?\>>si"
17:34  ManDay: Great, VIM has just arbitrarily decided to not wrap lines any longer although fo=tcql
17:34  ManDay: How can this happen?
17:34  spiiph: You have 'paste' set.
17:35  ManDay: Nope
17:35  ManDay: The weirdest thing about that is, it still wraps in the line before the line that it doesnt wrap in
17:35  ManDay: (When I delete and retype it it still wraps as expected)
17:35  spiiph: Here's a little tip: each time you think Vim has arbitrarily decided to do something different, think "I wonder what I have done to break things this time." Because chances are that you're the cause, and not Vim.
17:35  ManDay: maybe it doesnt like the statement that i make in that laste sentnce?
17:36  ManDay: spiiph: very helpful
17:36  ManDay: thanks you genius
17:36  ManDay: but i just typed text, the only keys ive touched are letters
17:36  ManDay: and the period key
17:36  ManDay: and if i accidently touched something else i wouldnt know what
17:37  ManDay: and it wraps every other sencen
17:37  ManDay: just that very sentence it wont wrap nomatter what
17:37  spiiph: Have you read the entry on 'l' in :h fo-table?
17:38  ManDay: no, but given that the sentence is by no means set apart from the others
17:38  ManDay: i would wonder whether "l" means "intelligently interpret the sentence according to context and irritate the user"
17:38  rndstr: how do I create mappings that are only active when i'm in vimdiff?
17:38  peter_w: it only does that for people who suck at asking questions
17:39  ManDay: spiiph: "l" is not applicable
17:39  ManDay: peter_w: thats some pretty ugly goodie
17:39  ManDay: can it be disabled with some ./configure option?
17:39  ManDay: ./configure --without-fooling-people
17:40  strull: vim only fools the fools
17:40  spiiph: ManDay, have you tried formatting the sentence with gq? Have you checked your 'textwidth', do you perhaps want to add 'a' to your 'formatoptions'?
17:40  ManDay:   none
17:40  ManDay: please note: it was only that sentence
17:41  ManDay: when i tried with the before sentences, they did
17:41  KUHRT: does anyone know how to set .dotfile system files on mac os x to open, by default, in macvim? currently it opens in textedit
17:41  ManDay: i ve now retyped the whole sentence and it wrapped
17:41  peter_w: KUHRT: that sounds like a mac os x problem, not vim
17:42  KUHRT: peter_w: yes true, sorry for the bother
18:12  rndstr: is there a way I can specify split window sizes (widths) in my vimrc? e.g. for the first 3 splitwindows
18:12  mgedmin: you can :set winwidth *after* you've made a split
18:13  spiiph: With great difficulty. It's better to set widths after the windows have been creatd.
18:13  mgedmin: if you turn off 'equalalways', how does vim decide on the widths of new splits?
18:14  strull: it halfes the current split
18:14  rndstr: ok, well that's okay as well.. I'll always get 3 windows (git-difftool) and I'd like the middle one to be larger
18:16  rndstr: :set winwidth=50 doesn't seem to change anythingi when the windows are open
18:20  ShaneHudson: Hi, I was trying to set up Haskell-mode for Vim but am very new to it so think I have made an error setting it up. I edit the .vba file and type :so % but I get loads of errors!
18:20  ShaneHudson: Does anybody know how I can fix it?
18:21  rndstr: (I'm using gvim if it helps)
18:21  mgedmin: undo?
18:22  mgedmin: editing .vba files seems like a Bad Idea to me
18:22  mgedmin: better edit the .vim files you get when you unpack the .vba
18:22  ShaneHudson: well I don't actually edit.. I was told that is how you install
18:22  mgedmin: also, I recommend version control
18:22  ShaneHudson: when you unpack it, how do I do that?
18:22  mgedmin: ah, you open and :so -- and it errors out?
18:22  mgedmin: broken .vba?
18:22  mgedmin: in theory :so should unpack it
18:22 * mgedmin does not like .vba files
18:22  ShaneHudson: I type ":so %"
18:23  ShaneHudson: http://d.pr/k4aW
18:23  ShaneHudson: there is a screenshot
18:25  mgedmin: looks like a broken .vba file to me ...
18:25  mgedmin: I don't know how to fix it
18:25  ShaneHudson: hmm, redownloaded a few times
18:25  mgedmin: try to contact the author?
18:25  mgedmin: maybe it's only broken on Windows?
18:25  ShaneHudson: you said to extract it, I havn't done that
18:25  mgedmin: no, as far as I can tell, you're doing everything right
18:25  mgedmin: I misinterpreted the "edit" remark
18:26  ShaneHudson: ah right
18:26  ShaneHudson: hmm dunno then, I only downloaded vim yesterday haha
18:27  homekevin: Yuck.
18:28  homekevin: That looks a bit like another vimball problem I've seen here.
18:28  homekevin: Someone extracted one and ended up with hundreds of empty files with names that corresponded to the lines in the vimball
18:29  ShaneHudson: hmm not yet found the files yet, but yes that seems to be the problem
18:29  homekevin: Looks like that's what you'd have gotten if Windows didn't have super-restrictive filenames.
18:30  ShaneHudson: It seems to be something to do with authorisation but I have ran it as admin
18:30  ShaneHudson: its strange, so many people have recommended me to use it.. would have thought it would work haha
18:30  homekevin: No, it's not that at all.
18:30  homekevin: Very few people recommend Vimballs
18:30  homekevin: ;)
18:31  ShaneHudson: heh
18:31  homekevin: It's not authorization, it's invalid filenames.
18:31  ShaneHudson: http://projects.haskell.org/haskellmode-vim/
18:31  homekevin: The output shows you where the files went.
18:31  ShaneHudson: thats the site, I think there is other ways of doing it but vimbal seemed easiest
18:31  homekevin: C:\Users\Shane\vimfiles
18:32  tmr: vimgor, vba2zip
18:32  vimgor: hmm... vba2zip is a utility written by godlygeek to unwind the 'compressed evil' that is vimball archives. Get it at: http://github.com/godlygeek/vim-plugin-bundling/blob/master/vba2zip.py ... feel free to ask me about vimball, tmr
18:33  tmr: vimgor, vimball
18:33  vimgor: The vimball plugin facilitates creating, extracting , and listing the contents of 'vimball' archives (*.vba). Vimball also records the files extracted with it and can remove them. Learn how to extract the files into a specific dir with :h :UseVimball , read :h :RmVimball to remove them. Ask about vba2zip for alternatives, tmr.
18:33  ShaneHudson: homekevin: haha your right, that folder is full of code named files haha
18:34  ShaneHudson: Ugh this should be simple!
18:34  homekevin: It's not really super complicated.
18:35  homekevin: VimBall is just b
18:35  homekevin: ...broken.
18:35  homekevin: All you need to do is put some files in the right place.
18:35  ShaneHudson: homekevin: ah ok, any idea what and where?
18:36  homekevin: ShaneHudson: No, the documentation for the plugin should tell you that.
18:36  homekevin: I mean, I know where your vim directory is. C:\Users\Shane\vimfiles
18:36  homekevin: So it all goes in subdirs of that.
18:36  homekevin: Usually you can just unzip a zipfile there.
18:38  ShaneHudson: hmm not seeing any zips :S will google some more
18:39  homekevin: VimBall is horrible at error detection and recovery, apparently.
18:40  homekevin: I can't see why, but it obviously extracted 78 lines, not 79, and took the last line of the file as the name of the next file.
18:40  homekevin: But you'd think it would at least check for the format that it expects, esp. the line count on the following line.
18:42  tmr: ShaneHudson, look what vimgor said about vba2zip..
18:44  homekevin: ShaneHudson: I made you a zip, but I'm not sure where to put it.
18:47  homekevin: ShaneHudson: I messaged you a URL on my private web server.
18:47  homekevin: I just extracted the vimball and zipped the output. It looks like it worked.
18:48  homekevin: Please don't share my web server address. :)
18:49  ShaneHudson: Ah excellent, than kyou very much!
18:51  homekevin: ShaneHudson: Just extract it with the directories intact in C:\Users\Shane\vimfiles\
18:51  homekevin: So you should have C:\Users\Shane\vimfiles\autoload\haskellmode.vim, etc
18:52  ShaneHudson: I have  C:\Users\Shane\vimfiles\haskell-vimball\ etc
18:52  homekevin: Oh, right.
18:52  ShaneHudson: should I put what is in that folder inside vimfiles?
18:53  homekevin: Just move the folders out of haskell-vimball into vimfiles and delete the empty haskell-vimball folder.
18:53  homekevin: I shouldn't have put them in that top folder, but it's a habit.
18:53  homekevin: It's usually bad form to have an archive that doesn't extract into its own directory.
18:54  ShaneHudson: Ok fair enough, was not sure if it was meant to be like that or not
18:54  ShaneHudson: Aye that makes sense
18:54  homekevin: I'm leaving now, so good luck
18:54  ShaneHudson: hmm :help haskellmode now works, so presumely it works!
18:54  ShaneHudson: Thank you!
18:57  tlonim: i sometimes see -- but when I go to insert mode and back to escape mode, some of my text gets   deleted.. anyone else noticed this ?
19:26 --- henk is now known as Guest3410
19:34  ISF_ec09: hi, how do I check, inside a script, if vim is reading input from stdin?
19:38 --- Silex is now known as silex
19:47  rson: can you not change windows in an autocmd?
20:31  wald0: i want to have a list of words that will be available in my autocompletions when editing files
20:32  rindolf: wald0: :help 'complete'
20:34  wald0: rindolf: is there any file where i can include the words that i want to have available in autocompletions ?
20:34  rindolf: wald0: read :help 'complete'
20:34  rindolf: wald0: k{dict} may be what you're looking for.
20:50  Ahtenus: Hi, what is the simplest way to remove EOL i.e. join 2 lines?
20:50  Ahtenus: Because now I just enter insertmode and press backspace
20:51  domidimi: Ahtenus: J
20:51  dwierenga: Ahtenus: J
20:51  dwierenga: bah too slow! :/
20:51  Ahtenus: ^^ Thanks
20:52  sw4: gJ if you don't want the whitespace between em
20:55  Ahtenus: ok
20:56  graywh: gJ doesn't remove leading whitespace
21:00  Ahtenus: Another question: How to set vim to move by screen lines and not by file lines when using j & k?
21:00  graywh: use gj and gk
21:00  sw4: gj gk
21:00  Ahtenus: okey, but if i want it more permanent?
21:01  LeoNerd: Map them
21:01  dwierenga: Ahtenus: add it to your vimrc
21:01  LeoNerd: I already do that mapping in .txt files
21:01  dwierenga: Ahtenus: map j gj
21:01  rson: nnoremap j gj
21:02  rson: ...
21:02  rson: wouldn't map be bad in that sense?
21:02  Ahtenus: hmm okey
21:02  Ahtenus: so i should use nnoremap instead?
21:03  rson: Ahtenus: actually it doesn't quite matter, as long as you don't have gj and gk mapped to do something else
21:03  graywh: you *have* to use noremap
21:04  rson: graywh: i just tried it on the fly.  map j gj works as expected unless you also have something like map gj gg
21:04  rson: then j acts as gg instead
21:05  rson: although i don't have any softwrapped lines, so i suppose it wasn't a valid test.
21:06  graywh: ok, it does work
21:06  graywh: but you *should* use noremap
21:06  rson: agreed
21:07  peter_w: not really
21:07  rson: i had always assumed that if any peice of the rhs was mapped it would blow up.  according to the help, it's the entire rhs
21:08  peth: gj is an atomic command, so no problems there. if g and j were single commands, it would recurse
21:08  graywh: peth, right
21:32  hellovim: Does vim support haskell programming language?
21:33  rindolf: hellovim: yes, it does.
21:34  hellovim: I have a little problem with indentation
21:38  hellovim: When I press Enter the cursor goes to the start of a new line not under a "let expression" for example. Is there any way to fix this?
21:39  jerojasro: :set autoindent
21:39  jerojasro: but it really depends on the filetype you're editing...
21:40  graywh: he said haskell
21:40  aep: hellovim: ~/.vim/indent/haskell.vim http://npaste.de/uM
21:40  graywh: and there isn't an indent/haskell.vim in the base runtime
21:41  aep: and 'filetype indent on'  of course
21:44  hellovim: filetype indent on is on. So I think that the file haskell.vim should do the job. Thanks
21:55  parsifal_: Is there a way to change how gvim labels tabs?
21:55  parsifal_: I don't want the full path; just the filename
21:56  graywh: parsifal_, 'tabline' and 'guitablable'
21:57  parsifal_: excellent, thanks graywh
21:58  mehwork: is there a way to highlight or color or something, lines in the current buffer i'm editing that were modifed but not yet committed to subversion?
21:59  mehwork: the vcscommand \cd can show me what changed in a split window, but i dont want to have to constantly refer to that
21:59  mehwork: maybe i'll make a patch if not
21:59  parsifal_: %t is what I want.. cool
22:02  graywh: mehwork, there's :VCSDiff
22:06  homekevin: tlonim: That was a pretty unclear question. Can you elaborate?
22:07 * homekevin is looking at 3-hour-old scrollback
22:07 * graywh was wondering...
22:14  mehwork: graywh: \cd is the same thing as :VCSDiff
22:14  mehwork: graywh: i want something that will just highlight in the file itself what changed, rather than a separate window of diffs
22:14  mehwork: ie i dont want a diff, just an idication that the line i'm looking at differs from what was committed
22:17  homekevin: mehwork: That would be kind of cool, but I've never seen such a thing for Vim.
22:18  graywh: you might could script something that adds signs for changed lines by looking at the diff
22:19  homekevin: Though visualizing deleted lines might be tricky.
22:20 --- pov is now known as Guest40972
22:21  mehwork: yeah thats what i was thinkin
22:22  mehwork: it'd be nice to toggle a thing that shows underlines or >'s next to changed lines or something
22:23  mehwork: i dont really have time to do it right now so if anyone else feels bored, go for it :p
22:23  jerojasro: henroc: I think :diffupdate should be an acceptable substitute
22:23  jerojasro: leave the \cd view open, and only refresh it
22:24  jerojasro: mehwork: ^^
22:24  jerojasro: henroc: sorry about that
22:27  s`: How can I make my own command?
22:28  s`: I mean for ed. :thingy
22:29  s`: Or whatever it's called. :]
22:29  peth: you can do :Thingy with :command
22:34 --- Aji-Dahaka is now known as testingand
22:34 --- testingand is now known as Aji-Dahaka
22:35 --- jkatana is now known as nicklovescode
22:38  s`: \o/ peth, Thanks.
22:55  mehwork: jerojasro: that'd almost be good if it would scrollbind the windows properly
22:56  jerojasro: huh? you mean scrolling in a window scrolls the other one?
22:57  mehwork: yeah
22:57  mehwork: :set scrollbind on the two windows doesn't work for me
22:58  mehwork: think i need windo
--- Log closed Tue Jan 11 23:41:44 2011
--- Log opened Tue Jan 11 23:42:07 2011
23:42 --- Users 598 nicks [0 ops, 0 halfops, 0 voices, 598 normal]
23:43 --- Channel #vim was synced in 79 seconds
--- Log closed Tue Jan 11 23:58:11 2011
