--- Log opened Tue Jan 04 09:45:51 2011
--- Log closed Tue Jan 04 09:48:53 2011
--- Log opened Tue Jan 04 09:54:16 2011
09:54 --- Users 530 nicks [0 ops, 0 halfops, 0 voices, 530 normal]
09:55 --- Channel #vim was synced in 73 seconds
--- Log closed Tue Jan 04 10:09:12 2011
--- Log opened Tue Jan 04 10:09:34 2011
10:09 --- Users 532 nicks [0 ops, 0 halfops, 0 voices, 532 normal]
10:10 --- Channel #vim was synced in 75 seconds
10:19 --- Syniq_ is now known as Syniq
--- Log closed Tue Jan 04 10:36:41 2011
--- Log opened Tue Jan 04 10:37:02 2011
10:37 --- Users 535 nicks [0 ops, 0 halfops, 0 voices, 535 normal]
10:38 --- Channel #vim was synced in 70 seconds
10:44  bairui: vimgor csapprox
10:44  vimgor: CSApprox is a plugin written by godlygeek to make GUI-only colorschemes Just Work in 88-/256-color terminals. It can be downloaded at http://www.vim.org/scripts/script.php?script_id=2390
10:44  bairui: paleywiener: ^^
10:44  paleywiener: bairui, thanks checking it out
10:44  bairui: np
11:00  _rane: any non-qwerty/azerty/whatever vim users here, is it doable or just pure hell?
--- Log closed Tue Jan 04 11:04:06 2011
--- Log opened Tue Jan 04 11:04:28 2011
11:04 --- Users 540 nicks [0 ops, 0 halfops, 0 voices, 540 normal]
11:05 --- Channel #vim was synced in 75 seconds
11:06  Dynetrekk: _rane: I have a colleague who is a dvorak guy who uses vim
11:06  _rane: when I think about certain vim command, will I just think about it's position on the keyboard, through muscle memory perhaps, or will my brain map the command to a certain letter on the new layout
11:06  Dynetrekk: _rane: although to my mind it seems easier to use qwerty in general :)
11:06  _rane: it's interesting
11:06  Dynetrekk: _rane: I think of the letter, and I know where the letter is on my keyboard. u for undo, d for delete
11:07  Dynetrekk: _rane: so it's muscle memory to find the letter, and brain map to find which letter to push, I suppose?
11:08  _rane: with that logic, you should be able to write reasonably well with any layout you've once learned, if your brain just goes into Qwerty mode etc.
11:09  _rane: one my concerns as well
11:09  Dynetrekk: I agree. the only worry would be the hjkl keys
11:09  Dynetrekk: but on dvorak jk are next to each other, and they are the most important ones anyway
11:09  Dynetrekk: h and l you can usually forget with f, F, t, T
11:22  paleywiener: any way to figure out under what category do things like + and executable files fall under in vim-color-syntax. some off it is obvious like "Directory", and "Comment". I'm trying to set color background for the + symbols in NerdTree and executable files marked with *
11:24  solstice: hi. where do i find a list of ex comand ?.
11:25  Raimondi_: solstice: YOu must be looking for the   :h holy-grail
11:25 --- Raimondi_ is now known as Raimondi
11:26  solstice: Raimondi: ok thanks
--- Log closed Tue Jan 04 11:30:36 2011
--- Log opened Tue Jan 04 11:30:55 2011
11:30 --- Users 544 nicks [0 ops, 0 halfops, 0 voices, 544 normal]
11:31  Raimondi: paleywiener: :h syntax.txt  also jump to  :h highlight-groups
11:32  paleywiener: thanks Raimondi!
11:32 --- Channel #vim was synced in 74 seconds
11:36  _rane: is it possible to use ctrl-P to complete words after using / to search something?
11:37  _rane: it seems to do something but not quite
11:52  Raimondi: It goes up on the search history, Ctrl-N goes down
11:52  Raimondi: _rane: ^
11:53  _rane: ah
11:53  _rane: :P
--- Log closed Tue Jan 04 11:58:03 2011
--- Log opened Tue Jan 04 11:58:24 2011
11:58 --- Users 548 nicks [0 ops, 0 halfops, 0 voices, 548 normal]
11:59 --- Channel #vim was synced in 74 seconds
12:17  Zambz: hey guys
12:17  Zambz: :)
12:17  Zambz: is there a way to copy / paste into vim via PuTTY with "set mouse=a" parameter enabled?
12:18  Zambz: everything i am reading suggests no, but without mouse=a, mouse selection in a document with line numbers is pretty nasty, so i guess it's one or the other?
12:41  Betelgeuse: Where do I report bugs about the ruby syntax highlighting? I couldn't locate a bug tracker on vim.org
12:44  the_isz: Betelgeuse: see  :he bugs  , but maybe you should talk about the problem you're having here first.
12:46  rson: Betelgeuse: the syntax file probably has a maintainer at the top of it and how to contact them
--- Log closed Tue Jan 04 12:49:55 2011
--- Log opened Tue Jan 04 12:55:17 2011
12:55 --- Users 555 nicks [0 ops, 0 halfops, 0 voices, 555 normal]
12:56 --- Channel #vim was synced in 70 seconds
--- Log opened Tue Jan 04 13:01:01 2011
13:01 --- Users 554 nicks [0 ops, 0 halfops, 0 voices, 554 normal]
13:02 --- Channel #vim was synced in 68 seconds
13:11 --- Natch is now known as Natch|
13:18  marlun: How would I delete all text which is after column 5 on very line in a file? :)
13:20  meganox: i'm pasting from a .doc in openoffice into vim to make html. in the source .doc there are spaces coloured grey, in the final html these show as A with a caret. in vim i don't see them at all. i've tried saving from openoffice as an intermediate plain text file but these characters are still there. how can i get vim to show me absolutely every character in the file?
13:20  the_isz: marlun:  %s/\(.\{5}\).*/\1/  is one option
13:21  varnie: hi all. Are there any ways to dig in/fall into Python function declarations/methods ?
13:22  marlun: the_isz: yeah, thanks :) I used a macro and just kept @ pressed but I'll try regex next time. :)
13:23  the_isz: meganox: first off, i'd suggest you just save the file as a .txt from oo. then you can ship around problems arising from copy/pasting. second, be sure you use the proper file type (utf-8 vs latin-1, etc).
13:23  Chib: meganox: maybe :set list
13:23  the_isz: marlun: you're welcome. but if you use macros anyway, just make them recursive, so you don't need to keep buttons pressed, that's not very vim-ish ;)
13:24  meganox: the_isz: saving as text made not difference, whatever these characters are, they are still there. And :set list doesn't show them either, Chib
13:26  the_isz: meganox: check your filetype. also, moving over the chars in vim and pressing  ga  will show you details about the character.
13:27  meganox: the_isz: i guess it is an encoding issue, any idea how i can find the original encoding in oo?
13:27  the_isz: meganox: if you tell the browser in the html header that the file is latin-1 but it is actually utf-8, weird things happen ;)
13:27  the_isz: meganox: no need to. see  :he encoding  and  :he fileencoding
13:28  meganox: the_isz: that's a useful tip, ga, thanks
13:28  the_isz: meganox: you're welcome
13:30  TzilTzal: trying to use netbeans on Windows... but Vim just hangs :(
13:31  Zambz: hey guys, i'm customizing my vimrc and noticing that background colours are pretty limited here, only seeing around 5 - 6 background colours
13:31  Zambz: is that normal?
13:31  Zambz: using PuTTY to connect to my server
13:31  Zambz: this is in relation to the ctermbg property
13:31  Zambz: :)
13:33  spiiph: Zambz, use the putty-256color terminfo.
13:34  meganox: is there a way to use numeric character codes in a substitution? i'm looking at :he sub-replace-expression but can't find it
13:35  Zambz: spiiph: thanks, will check it out
13:36  meganox: think i found it: <Char-0x>
13:36  mosno: what's a context mark?
13:37  Chib: i think %d* does it too meganox
13:37  Chib: \&d*
13:37  Chib: \%d*
13:37  Chib: gah!
13:37  meganox: lol
13:38  Zambz: spiiph: looking great, thanks so much!
13:38  the_isz: mosno: where did you find that? maybe  :he Mark  ?
13:38  spiiph: Zambz, np
13:42  varnie:  Are there any ways to dig in/fall into Python function declarations/methods ?
13:42  mosno: the_isz: :h m'
13:43  bairui: varnie: does   gd   or   gD   work?
13:44  Zambz: is there any easy way to preview all 256 colours?  i'm so silly, i found a neat little vim script that did it a sec ago but didn't save the link :(
13:44  Zambz: can't find it anymore
13:45  varnie: they work but not well.
13:46  babilen: Zambz: Quick google â†’ http://vim.wikia.com/wiki/View_all_colors_available_to_gvim
13:47  babilen: Zambz: And please excuse the typo in the URL -- Is that what you were looking for?
13:48  Zambz: checking now mate, sorry i did google earlier but had no luck finding it :)
13:49  babilen: No problem :)
13:50  Zambz: i think it's the right one buddy, just trying it out now, it looks a little different to the one i saw, but as long as it does the same job, i'll be happy
13:50  Zambz: hehhe :)
13:51 * scp1 just wrote one
13:53  meganox: thanks for your help, got it sorted now
13:55  scp1: http://i.japh.se/vimcolors.png
13:55  Zambz: thanks so much scp1 and babilen
13:55  scp1: http://p.japh.se/vimcolors.pl-749.html
13:56  Zambz: extremely helpful stuff :D
14:00  mosno: the_isz: i figured it out, it is just the ' mark
14:05  Zambz: ok folks, i'm outta here, really appreciate your help today, have a great day :)
14:10  the_isz: mosno: ok
14:11  the_isz: fow: you're there?
14:11  fow: yes actually
14:11  Miika--: Hello
14:12  Miika--: Where to put *.vim files?
14:12  rson: anyone know of a way to get the processed statusline text so I can grab a length from it?  I can get the format string stored in &statusline, but I want the processed output that will be displayed on the screen.
14:12  fow: Miika--, it depends on what type of .vim file it is
14:13  Miika--: for now, I have php.vim
14:14  Miika--: http://www.vim.org/scripts/script.php?script_id=967
14:14  Miika--: this one
14:15  fow: That's a syntax file so it goes in, for example, ~/.vim/syntax/. Basically any syntax/ directory that is in a directory in 'rtp'
14:15  fow: see :h :syn-files
14:16  Chib: vim should already have a syntax file for php btw
14:16  spiiph: It does.
14:16  spiiph: I wouldn't trust a php syntax file from 2004.
14:17  Chib: oh
14:17  Chib: heh (:
14:18  fow: Vim comes with a version of this one http://www.vim.org/scripts/script.php?script_id=1571
14:20  Miika--: fow: should it just work when opening a php file?
14:20  Miika--: or should I enable it somehow?
14:20  spiiph: 'filetype plugin indent on' in your .vimrc
14:21  spiiph: Oh, and 'syntax on'
14:21  Miika--: :syntax on
14:21  Miika--: that?
14:22  spiiph: Yes
14:22  Miika--: "Sorry, the command is not available in this version"
14:22  spiiph: vimgor, vim-tiny
14:22  vimgor: vim-tiny is the default Vim package for Debian/Ubuntu. It is built with a small subset of features and is not intended to be used full-time. You most likely want to install a more capable package of the Vim editor. If you want gvim install the vim-gtk package, otherwise install the vim package.
14:24  mosno: or vim-enhanced if you're on redhat
14:24  spiiph: Think there's an entry for that too.
14:24  spiiph: vimgor, vim-enhanced
14:24  vimgor: No idea.
14:24  spiiph: vimgor, vim-basic
14:24  vimgor: I have no idea, spiiph.
14:24  spiiph: Hrm
14:24  ormaaj: How can I take the output of a !{cmd} (a filename) and make it the argument of a :read?
14:25  spiiph: :r !cat foo.txt ?
14:25  spiiph: :h :r!
14:25  ormaaj: lol yes I suppose I could cat it
14:25  spiiph: That's not what I meant, that was just an example.
14:26  spiiph: You could do that with any system command.
14:26  mosno: spiiph: it should probably be one entry ?
14:27  spiiph: mosno, perhaps.
14:27  ormaaj: :r !cat $(equery w vim)
14:27  ormaaj: works
14:28  the_isz: fow: sorry, was afk after asking. if you're interested, bram answered to the bug i posted yesterday.
14:28  spiiph: :r !equery w vim should work as well.
14:29  fow: the_isz, what'd he say?
14:29  the_isz: quote:
14:29  the_isz: Executing something with :normal is like executing a mapping, that's why
14:29  the_isz: it does not work.
14:29  the_isz: endquote :)
14:29  fow: ah
14:30  the_isz: i still think  :he recording  might be clearified a little as to this fact...
14:30  ormaaj: spiiph: The result of that command is a filename so the cat method works around not being able to wrap !(cmd) in a closure of sorts :/
14:31  fow: the_isz, yeah, I think it should be mentioned somewhere at least, perhaps in :h :normal
14:32  spiiph: ormaaj, I see. Well, the only other way to do it is to first run the ! command, and then run the :r on the resulting file.
14:33  the_isz: well, i suggested it in my mail to bram, maybe he didn't over-read it^^
14:39  nate-: in VimL, how can I check whether a variable is a string and not anything else like an integer or float ?
14:40  spiiph: type()
14:41  nate-: excellent, thanks spiiph
14:41  nate-: I knew there'd be a handy built-in function :D
14:45  ormaaj: no exception handling? Sounds reminiscent of isInstance python abuse.
14:51  TzilTzal: Hello
14:53  TzilTzal: Does anyone know if there's a way to be notified of buffer content changes?
14:54  spiiph: Is it :h 'autoread that you want?
14:55  rson: i thought there were responses the first time that email was sent to the mailing list like a week ago
14:57  TzilTzal: no, I want additional autocmd event to know when the content of a buffer has changed
14:57  TzilTzal: I can know with CursorMovedI, but not when replace or deletion takes place.
15:04  TzilTzal: any help? :)
15:06 --- giusef is now known as Zmax
15:09  rson: TzilTzal: there is no autocmd that does this that I know of.
15:10  rson: isn't there a vim setting to set the path separator?  I could have sworn I've seen it before but I can't seem to stumble across it in :help at the moment.
15:14  TzilTzal: Is there a way to suggest to add one?
15:15  ws: rson:  shellslash
15:15  rson: ws: ty. that's it.
15:15  ws: rson:  not for UNIX vim versions though
15:15  rson: TzilTzal: presumably the mailing list but I don't know for sure.
15:16  TzilTzal: i c. thx.
15:25  nordin_: Hello guys, I have supertab and omnicppcompletion plugin. I'm playing around with these plugins. But how can I get the prototype of a function? Say, I type a function name, which completes with by pressing <TAB>, but I also want to see what type of arguments I can pass to it? How to do that?
15:47  zorzar: hey, what is the best way to get the exit code for a :execute?
15:49  the_isz: zorzar: what are you trying to do?
15:51  rson: nordin_: if you have tags set up (via ctags) you can C-] on the function name to navigate to it's definition
15:51  rson: then C-t back
15:54  zorzar: the_isz: i want to run a build system and get the exit code for the build
15:55  the_isz: zorzar: have you seen  :he :make  ?
15:55  zorzar: the_isz: isn't :make make specific?
15:57  the_isz: zorzar: not if iirc
15:58  the_isz: s/if //
15:58  nordin_: rson: yes I did that too. I just once saw on someone's podcast a small window above the current window the prototype of the function. Without doing jump and back everytime.
15:58  jonte: Hi all, I was wondering.. Can I display relative line numbers *and* regular ones? Perhaps something like: <regular>:<relative> ?
15:59  nordin_: rson: don't know how he did it anymore, but it was really cool.
15:59  nordin_: jonte: relative to what? why would you use relative numbers?
16:00  zorzar: the_isz: the_isz do you know the makegreen plugin?
16:00  jonte: nordin_, relative to my current line, five lines down would be marked 100:5, for example. Useful for jumping :)
16:00  the_isz: zorzar: no, i don't
16:01  rson: nordin_: try :set completeopt+=preview ?
16:01  nordin_: jonte: ooh ok, just can't help you :(
16:02  nordin_: rson: thnx, I'll try that.
16:02  jonte: nordin_, Ok, too bad :-\ It would be really nice.
16:03  nordin_: jonte: u could also do 5j for example
16:03  rson: jonte: the end of :help rnu says that rnu will reset nu, therefore you can't have both
16:03  rson: nordin_: that's the whole purpose of relative numbers, so you don't have to count the 5
16:03  jonte: nordin_, exactly, and with relative numbering, I wouldn't have to count
16:03  rson: nordin_: if you have vim 7.3, try setting rnu and see what he means
16:03  jonte: rson, Ok, what a shame.
16:04  nordin_: rson: ok, but doing 105g is also a possibility?
16:04  zorzar: the_isz: it run's :make and makes the statusbar green on success red on failure
16:04  zorzar: the_isz: but it doesn't really work for me
16:04  rson: nordin_: if you know what line 105 is
16:05  nordin_: rson: I use linenumbers
16:05  the_isz: zorzar: haven't tried it, but why don't you first try running :make manually and if you got it working, then start using fancy things?
16:05  the_isz: zorzar: read  :he 'makeprg'
16:05  zorzar: the_isz: might be a good idea ;)
16:06  rson: nordin_: if you use line numbers, then you have to count for things you want to do relative to the current cursor.  if you use relative numbers you have to guess line numbers if you want to jump to specific lines.  There is a tradeoff.
16:06  fow: you might also be interested in the :compiler command
16:07  nordin_: rson: ok, I see.
16:08  rson: nordin_: with regards to your completion question, did you try my suggestion?
16:08  nordin_: I'll do it right now.
16:11  nordin_: rson: I tried that, but nothing happens. I sourced my vimrc though.
16:11  rson: nordin_: check the help for completeopt, it may have some clues.  it looks like you also need menu or menuone
16:11  rson: i think you will get the result you're looking for though
16:12  nordin_: rson: ok thnx. When I get home I'll try to figure out.
16:14  nordin_: rson: I really like Vim when it works like you want. I envie guys who configured Vim to do what they want. For me it's just too much finding out to get it done. As a result I switch back to a GUI IDE like CodeBlocks (which is good too, but not like Vim).
16:17  rson: nordin_: it just takes time and patience.  Sometimes you'll get what you want, sometimes you make a sacrifice in one area to make a huge gain elsewhere.
16:18  nordin_: rson: Yes, you're right. I hope my patient gets rewarded very soon :)
16:22  DestinyAwaits: A Very Happy New Year 2011 to everyone.
16:22  nordin_: Happy new year to you too :)
16:35  mizux: Hi all
17:29 --- wtfness is now known as foocraft
17:29  ManDay: Where does VIM store marks?
17:29  ManDay: I'm surprised that they are remembered after a quit
17:30  et: .viminfo
17:30  rindolf: ManDay: maybe in .viminfo
17:31  ManDay: thanks
17:31  ManDay: urgh, that file is massive
17:31  ManDay: I assume VIM can be configured so it doesnt use .viminfo?
17:32  ManDay: Or at least ONLY for marks. I'm not interested in a megabyte or so of history
17:35  al79: Hi, anyone know if cscope works for c#? or if there is an alternative for c#?
17:35  spiiph: ManDay, :h 'viminfo
17:36  al79: :h 'viminfo
17:36  al79: oops
17:39  sleepynate: vimmers, can i bug you to vote for our hackerspace in the pepsi refresh challenge again? :)
17:41  sente: hmm, better yet, bug about bugging but don't actually bug, with irony comes great amusement
17:41  ManDay: sleepynate: try in #ops, they are always helping with that kind of stuff
17:42  sleepynate: hah, cute ManDay
17:42  sente: sleepynate: you can bug me though, msg me a link if you want to
17:42  sleepynate: i'll take my chances and just say http://pep.si/hYsEnU
17:42  sleepynate: thanks to everyone in advance
17:44  merijn: Can I somehow alias "do" to behave like ":diffget" (i.e. taking an argument)
17:51  homekevin: merijn: How would that work?
17:52  homekevin: I guess it could have a count that refers to the buffer number
17:53  malfy: ok vim's nerd commenter plugin is being weird
17:53  malfy: when i use ,cl
17:53  homekevin: You might be able to use a mapping to accomplish that. :h :nmap
17:53  merijn: Oh wait, "do3" wouldn't work of course, because you might add a second number. Then again if you have more then 10 open windows while merging you deserve what you get :p
17:53  malfy: it deletes a character and puts me in insert mode
17:53  malfy: anyone know why?
17:53  homekevin: merijn: That's why counts go *before* commands.
17:54  homekevin: E.g., you do 10dd, not dd10
17:55  homekevin: Although you can also do d10d, but I don't see the point.
17:57  malfy: anyone know why?
17:58  merijn: On related note, is there a "close all buffers and quit" command? Right now I have to type ":q" once for ever visible buffer
17:58  malfy: :qall
17:58  babilen: malfy: You don't type fast enough?
17:59  malfy: babilen: same speed i've always typed
17:59  malfy: ;P
17:59  malfy: it was working like a week ago
17:59  malfy: =/
17:59  babilen: malfy: It works over here :)
17:59  babilen: Not sure how to debug that :-\
17:59  malfy: hmmm
17:59  merijn: malfy: Thanks!
18:00  babilen: malfy: And I just get the behaviour youobserve if I type "slow"
18:00  malfy: yeh, obviously if you type slow, vim wont recognize lots of macros
18:00  malfy: or keypresses
18:01  malfy: but this isnt like that
18:01  malfy: lol
18:01  rson: malfy: try \cl
18:01  malfy: worked
18:01  babilen: yay, different leader
18:02  malfy: that's strange
18:02  malfy: cos i've always had leader mapped to stuff
18:02  malfy: lol
18:02  rson: malfy: \ is the default <Leader> key, it's maps use the <Leader> key
18:02  malfy: yeh
18:03  malfy: so what's going on here?
18:03  rson: nothing is wrong
18:03  rson: if you want to use comma, set mapleader=,
18:03  malfy: nerd commenter uses , as leader?
18:03  gkatsev: nerd commenter uses mapleader
18:03  rson: malfy: echo &mapleader
18:03  malfy: i was able to get \ as leader and still use , in nerd commenter which is weird
18:04  gkatsev: you can have local mapleader
18:04  malfy:  E113: Unknown option: mapleader
18:04  gkatsev: if you set mapleader as , load commenter and then change mapleader to \, nerd should use , and others should use \
18:04  rson: oops, without the &
18:04  malfy: same thing still rson
18:04  gkatsev: :set mapleader?
18:05  malfy: still unknown option
18:05  rson: mapleader isn't an option, it's a variable
18:05  rson: which i've always thought was weird
18:05  gkatsev: oh, it's a let
18:05  rson: :echo mapleader should work, unless you are defining it some weird way
18:05  malfy: gtrev: so where do i set mapleader? in my vimrc?
18:05  gkatsev: :let mapleader = ","
18:05  rson: or not defining it at all
18:06  Plazma-Rooolz: is it possitble to split my vim into 2 buffers, 1 having my text and the other having a command line prompt (in win32) ? I am familiar with how to split horizontally and vertically
18:06  malfy: run :sh in one of them
18:06  malfy: i think
18:06  rson: Plazma-Rooolz: not without a plugin, look into conque: http://code.google.com/p/conque
18:06  Plazma-Rooolz: let me try
18:06  malfy: wait no that doesnt work
18:07  Plazma-Rooolz: on *nix does :sh bring up bash or the like?
18:07  sleepynate: Plazma-Rooolz: that takes you out to a shell
18:07  sleepynate: it doesn't split the window
18:07  Plazma-Rooolz: ahh yea, i just wanted it to be one of the windows that's already split.. inda like emacs does it with shell-mode
18:08  sleepynate: Plazma-Rooolz: since vim doesn't try to reimplement every program ever, this is best done with something like tmux
18:08  Plazma-Rooolz: ahh yea
18:08  Plazma-Rooolz: conque looks like what i'm looking for
18:08  sleepynate: or, you could use conque, like rson mentioned
18:08  sleepynate: well there you go :)
18:10  hellovim: how can i delete text that matches a regex without deleting the whole line?
18:12  rson: Plazma-Rooolz: fwiw i've been complaing about missing that 'feature' for a long time but everyone is against me.  see :help shell-window in vim
18:12  sleepynate: hellovim: s/thing_to_match//
18:12  rson: hellovim: s/whatever//
18:13  sleepynate: rson: \o
18:13  rson: o/
18:13  sleepynate: :D
18:13  Plazma-Rooolz: rson: hehe.. it's got it's uses for sure.. not everyone likes tmux eitehr ;)
18:13  rson: Plazma-Rooolz: yeah.. i use tmux religiously but i don't want to have to deal with two sets of keybinds/commands to navigate windows :/
18:13  sleepynate: Plazma-Rooolz: i'll admit to being a tmux advocate because it makes multi-language REPL piping universally easy
18:14  d3mn0id: how can i denote a literal . in regexp?
18:14  sleepynate: for someone who just wants another shell open, probably not the best
18:14  sleepynate: d3mn0id: \.
18:14  rson: \.
18:14  Plazma-Rooolz: yea, truth be told i haven't had the chance, screen works for me .. but i suppose they kinda cover 2 different areas and overlap some
18:14  d3mn0id: thanks
18:14  sleepynate: Plazma-Rooolz: there's a hack for screen to allow splitting
18:14  hellovim: So in order to have this feature I should implemented as a plugin?
18:14  sleepynate: hellovim: nope
18:15  rson: tmux is essentailly screen rewritte, but does a few things differently.  personally I use it just as I would screen.
18:15  sleepynate: hellovim: go to a line where you want to make this replacement in command mode and type :s/thing_to_match//
18:15  rson: rewritten*
18:15  sleepynate: hellovim: obviously replace "thing_to_match" with your thing to match :)
18:16  hellovim: you mean with nothing
18:16  sleepynate: you want to replace nothing with nothing?
18:17  hellovim: no. I want to delete from the whole line only the part that matches the regex.
18:17  sleepynate: right.
18:17  sleepynate: thing_to_match is your regex
18:17  hellovim: ok
18:17  sleepynate: the second half has nothing between the / and the last / because that's what you're replacing with... nothing
18:18  hellovim: ok, I will try it.
18:20  coldboot: Is there a Vim plugin that will recursively search cwd for files containing the substring you just typed? FuzzyFinder doesn't seem to do this well or fast.
18:20  sleepynate: coldboot: i like command-t
18:20  jerojasro: coldboot: :help :vimgrep
18:20  sleepynate: oops! misread
18:20  jerojasro: :vimgrep your_substring **/* does it
18:21  sleepynate: there's also http://www.vim.org/scripts/script.php?script_id=2572
18:21  jerojasro: after that, :cwindow will show you a navigable list of matches
18:21  hellovim: ok it seems that works! Thanks a lot bye
18:22  rson: it's always bugged me that cwindow doesn't open after running vimgrep and the like automatically (if there is more than one result)
18:22  fholgado: guys, anyone know how to change the reset git's external editor? I had set it to Vim but it is not working properly...
18:23  merijn: Is it possible to open some files in diff mode and other not in diffmode with the same command? (I tried "vim foo -d bar baz", but that didn't open foo)
18:23  rson: EDITOR=foo git-whatever?  otherwise, it's probably in ~/.gitconfig or in .git/config
18:24  fholgado: aah.. let me look there...
18:24  jerojasro: merijn: yes, open them in non-diff mode and use :diffthis
18:24  jerojasro: and create new tabs for the files you don't want in diff mode
18:25  merijn: jerojasro: That's not an acceptable solution. Is it possible to specify commands to run on the commandline? (i.e. so that I can pass the "diffthis" command to open them as I enter the editor)
18:26  jerojasro: merijn: see the man page and check the -c option
18:26  merijn: jerojasro: Ok, thanks
18:27  jerojasro: coldboot: see also :help :<cword>
18:27  coldboot: jerojasro: How about something that just searches file names using find?
18:28  coldboot: jerojasro: I have a git repository mounted with sshfs, so it's really slow to ack things. I just do that in another terminal.
18:28  jerojasro: only filenames? then fuzzyfinder should cover that well
18:29  sleepynate: coldboot: or command-t! :D
18:29  jerojasro: coldboot: just a thought: do you know agout the gf command?
18:29  coldboot: jerojasro: Nope.
18:29  coldboot: jerojasro: Oh yeah, I do, actually.
18:30  coldboot: sleepynate: What's command-t? Do you mean tag stacks?
18:30  sleepynate: coldboot: http://www.vim.org/scripts/script.php?script_id=3025
18:30  jerojasro: doesn't that cover what you want? if it is file navigation, that, and setting your 'path' properly should be enough
18:30  coldboot: I want to type "foo.txt" and have it automatically find a/b/c/foo.txt, and present a list when it's ambiguous.
18:30  rson: it's a plugin like fuzzy finder
18:31  sleepynate: yes. fuzzy finder is also quite good.
18:31  jerojasro: coldboot: fuzzy finder does exactly that
18:31  BadHorsie: Is there a way to do something like gf but to get it open in another tab like when I open with vim -o ?
18:31  sleepynate: i had the issue with a large codebase being slow on fuzzy finder though
18:32  sleepynate: but it requires an outside compile + ruby support
18:33  rson: BadHorsie: map something to :tabe <cfile>
18:33  jerojasro: wow, I did'nt know about gF
18:35  BadHorsie: Thanks!
18:35  rson: i can't stand tabs in vim.  i'm unsure of how anyone could use them without very specific purpose.
18:35  coldboot: jerojasro: As soon as I type **/ in FuzzyFinder, it hangs Vim...
18:37  BadHorsie: rson: I doubt I mean tabs, maybe it's "windows" or "buffers" sorry I always get those terms confused
18:37  coldboot: jerojasro: Oh wait, it works after it makes the index...
18:38  rson: BadHorsie: well, gf by itself opens it in a buffer.  to open it in a window use ^w^f
18:38  rson: or :wincmd f, or :vertical wincmd f
18:39  BadHorsie: Yeah tried :tabe and certainly isn't what I want, lemme try ^w^f
18:40  BadHorsie: Yeah ^w^f does it, thanks so much, totally sexy
18:41  rson: BadHorsie: just for completeness, the tabe thing is already done, you can do ^wgf to do tabs instead
18:41  rson: even though you don't like that
18:41  rson: just foudn this out myself
18:45  BadHorsie: Nice
18:54  rson: last time I'm going to ask here.. I want to capture the text that is placed into the statusline so I can detect it's length.  Is there a way to capture the processed output?  I can grab the format string via &statusline, but I can't find a way to grab the text that is output.
18:55  danielsh: its length is the width of the current window isn't it?
18:57  rson: danielsh: not necessarily.  It has the entire window to print, but it doesn't have to be that wide
18:58  rson: I'm rewriting a vimscript that allows me to have a list of buffers in the statusline, I want to be able to have a normal custom statusline + my list, and I want to control where to cut the list off so that the rest of the statusline isn't hidden
18:59  danielsh: rson: and the existing mechanisms (width and %</%=) aren't good enough?
18:59  danielsh: perhaps could add a v: variable that %{...} would query then.
19:00 * danielsh has a tendency to find the most complicated solution first
19:02  rson: danielsh: I need to be able to adjust the output of my script because the current buffer may be at the very end of the list, and I always want to display the current buffer.  If I knew the width I had to work with, it would be much simpler
19:02  peter_w: why not build the statusline yourself?
19:02  danielsh: then always show the current buffer first
19:03  rson: danielsh: I knew someone would recommend that.. I've been considering it and may well do that
19:03  rson: peter_w: what do you mean, even the custom part of the statusline?
19:04  peter_w: what custom part?
19:04  rson: I suppose because I don't intend on handing this code out (because it's ugly and i'm embarassed, and it's pretty much a copy of buftabs.vim), I could just hardcode my own statusline since I know the width
19:05  rson: peter_w: the status line will look something like: |1 buf  2 buf  3 buf  [4 buf]  5 buf                      (some other stuff from &statusline here)|
19:07  rson: so I'd like to be able to know the width of the junk in ( and ), so I know how many buffers I can display and make smart decisions on which ones to display
19:07  kongo: rson: you probably know that already but in case not you can define where to truncate your statusline if it's too long with %<
19:08  kongo: you could add that after the current buffer name
19:08  rson: kongo: I've not tried it, but the impression I got from the help was that it would still truncate off the right side.  I can try
19:09  mtx: join ##c
19:09  kongo: rson: I think that depends on whether you are on the right or left aligned side of the statusline
19:13  rson: kongo: it sort of works.  I'll screw with it some more.  It does seem to be specific to which side you are on though so thanks for that.
19:13  rson: I would have never thought that
19:14  kongo: rson: np, it would be nice if you could publish your script if you are ready
19:14  kongo: I would be interested in a plugin like that
19:14  rson: kongo: buftabs.vim essentially does everything I've done so far, plus some
19:15  rson: I'm just doing this to get more comfortable with vimscript
19:15  kongo: rson: yeah, I think I tried it at some time but I guessed yours would be better :)
19:15  rson: kongo: heh, doubtul :)
20:21  peth: i think i know the answer to this one, but has anyone found a way to havo multiple main windows that share a vim session?
20:22  strull: peth: not possible (afaikt)
20:22  peth: yes, thought so. thanks. :)
20:35 --- ml|_ is now known as ml|
20:36  d0m: Hey, my synaxt hilightning works for python vimrc, etc.. but not for html and javascript. Still, I have set filetype=html.. Anyone has any idea why?
20:37  sleepynate: you mean not for the java in your html?
20:37  sleepynate: s/(java)/\1script/
20:37  malesca: sleepynate: s/java/&script should work too ;)
20:38  d0m: Yeah, that's weird. I mean real simple html
20:38  d0m: it has no syntax even thought I use syntax on and set filetype=html
20:38  malesca: d0m: You've confirmed you get HTML from :get ft?
20:38  malesca: :set ft?
20:39  malesca: including the questionmark
20:39  d0m: :set ft? gives me: filetype=html
20:40  homekevin: :set syntax?
20:40  sleepynate: malesca: true. i work with old/solaris sed/grep too often that the old shit is instinctual :/
20:40  d0m: yeah :/
20:42  homekevin: d0m: what does the :syntax output look like?
20:42  homekevin: Long list of html-related stuff or not?
20:42  d0m: homekevin: yea
20:45  homekevin: d0m: So if you have a file with "<html></html>", what does it look like?
20:45  jerojasro: d0m: only to make sure I understand, you do get html syntax highl. correctly, but not javascript inside html?
20:45  d0m: I'll try with only <html></html> instead of a whole document
20:46  sleepynate: also, what happens if you do something comparable, like ft=xml]
20:46  d0m: yeah <html></html> doesn't work
20:47  coldboot: What key do you guys bind to FufFile?
20:47  d0m: with xml it works tho
20:47  sleepynate: d0m: did you try to install your own html syntax file at any point?
20:47  homekevin: d0m: So, if you put the cursor at the very beginning of the file, what does this command give? :echo synIDattr(synID(line("."), col("."), 1), "name")
20:49  d0m: sleepynate: nothing in .syntax/ about html.. the only thing i see is a html completer I have since a couple of months (but the hilighthing worked back then)
20:49  homekevin: d0m: Also, what does this say? :echo globpath(&rtp, "syntax/html.vim")
20:49  d0m: homekevin: trying it asap
20:49  homekevin: I guess we really should try running with --no-plugins
20:49  d0m: homekevin: on the doctype, it says htmlcomment
20:49  jerojasro: coldboot: I have these bindings: ,o to open file from vim's cwd, ,a to do the same starting from current file's dir, ,v to choose from the loaded buffers
20:50  homekevin: d0m: So syntax is apparently working, but highlighting is not.
20:50  d0m: homekevin: and for the second command, it writes the normal path of /Application/MacVim/etcetc
20:51  homekevin: d0m: How about running with --noplugin?
20:52  homekevin: Or maybe it's working fine and you just happen to be using the world's most boring colorscheme.
20:52  d0m: nha it worked before
20:52  jerojasro: d0m: are you using vim (in a terminal) or gvim?
20:52  d0m: I have like 15 scheme
20:52  d0m: macvim
20:53  jerojasro: don't know it. is that a GUI vim?
20:53  d0m: yes
20:54  homekevin: It seems like macvim users account for something like 80% of the people who show up here with weird problems.
20:54  d0m: :-/
20:55  peter_w: what's the difference with regular gvim anyway?
20:56  peter_w: not an official version or does it have other random stuff
20:56  homekevin: I think it's unofficial and uses the Mac Cocoa stuff
20:57  homekevin: Though I blame Mac more than macvim for any problems.
20:57  d0m: No big difference.. in fact, I never had trouble before with that
20:57  homekevin: Granted, I blame Mac for everything.
20:57  d0m: I like to be able to map my command key
20:57  homekevin: World hunger? That's 'cause you're using a Mac.
20:58  homekevin: Stubbed you toe? Mac.
20:58  homekevin: d0m: What's the word on --noplugin?
20:58  d0m: homekevin: it gives me an error :-/
20:58  homekevin: Wold detonating in 60 seconds?
20:59  homekevin: *World
20:59  d0m: Error detected while processing VimEnter Auto commands for "*":
20:59  d0m: E492: Not an editor command: NERDTree
21:00  homekevin: d0m: Then comment that out of your .vimrc
21:01  d0m: homekevin: It's still weird that ft=xml works perfectly
21:01  homekevin: Nothing's weird as long as arbitrary stuff can still be happening in plugins.
21:02  d0m: true
21:02  Raimondi: d0m: Any html autocmds on your vimrc?
21:02  d0m: autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
21:02  d0m: maybe that?
21:03  malesca: d0m: You could do a "binary search". Recursively remove half your vimrc, restart, see if it starts working.
21:03  malesca: Also with plugins. Though I suppose it gets messy if you're not using pathogen.
21:04  homekevin: If you do that, I recommend starting with the *left* hald.
21:04  homekevin: *half
21:04  homekevin: Usually the problem is in the left half.
21:04  d0m: Well yeah, I guess you're right. If I comment everything in .vimrc and open with --noplugin, it works as expected
21:04  d0m: bleh
21:05  ik: Hey, I don't do syntax highlighting but it would be neat if FIXME: and TODO: were bright yellow
21:05  ik: how do i shot vimrc
21:06  d0m: ok well thanks for your time, I'll find that damn line :p
21:06  homekevin: ik: Violence isn't the answer.
21:06  ik: homekevin: do you know what is?
21:07  homekevin: ik, maybe matches? :h matchadd()
21:09  malesca: ik: :help 42
21:09  d0m: Ok, I found the problem
21:09  d0m: damnit
21:09  d0m: I had several syntax theme
21:09  ik: malesca: would it be rude of me to start choking you?
21:09  d0m: loading one after the other
21:09  sleepynate: homekevin: but is that the fault of mac or the mac crowd? :) (no offense to you d0m, you have a weird problem)
21:10  ik: homekevin: thanks, that could work
21:10  d0m: and one of them did fuck everything
21:10  d0m: so now instead, I just comment all of them and I'll remove the one I want
21:10  d0m: s/remove/uncomment/
21:11  sleepynate: you had an unbalanced comment?
21:11 * sleepynate à² _à² 
21:11  malesca: ik: That's violence again
21:11  homekevin: d0m: What do you mean "several syntax theme"?
21:11  ik: malesca: I'm pretty sure it's the answer this time
21:12  homekevin: Were you doing :colorscheme blah several times?
21:14  d0m: yeah exactly
21:16  d0m: anyway, I learned the lesson the hard way
21:16  d0m: :p
21:16  d0m: thanks for your time, sorry for that ;(
21:17  homekevin: Given how buggy scripts are in general, you'll always have a greater chance of having issues if you load more scripts.
21:18  homekevin: Colorschemes are no exception.
21:19  ik: homekevin: worked great, thank you
21:20  d0m: It was kind of hard to debug since when I tried them out one by one, my syntax was still working.. and I had an uptime of a couple of weeks with vim
21:20  d0m: but on resetting, it didn't work
21:22  sako: hey guys, curious to see if there are any NERDTree users that have figured out how to save the current NERDTree window/buffer in vim_sessions?
21:23  sako: i just started saving and loading vim sessions
21:23  sako: it seems, it doesn't like NERDTree for whatever reason... if I save a session with NERDTree open, it won't open it up again when I load the session.
21:24  tangledhelix: is it possible to :nmap something like cmd-opt-R (on mac)? I tried <D-M-R> and it isn't taking it.
21:24  rson: sako: i believe session functionality was added to a more recent version of nerdtree, are you running from -git?
21:30 --- y3llow_ is now known as y3llow
21:31 --- cuba33ci_ is now known as cuba33ci
21:34  sako: rson: nice
21:35  sako: rson: let me update, thanks for the heads up! i am running off -git but haven't really updated for months...
21:36  sako: rson: actually im not even running the -git version, I am using pathogen, do you know if it's possible to run nerdtree-git using pathogen??
21:39  Raimondi: sako: Yes.
21:42  sako: Raimondi: how would you do that? I have all other plugins as git submodules...
21:42  sako: the way nerdtree is on github, i don't think the folder structure works for pathogen (last i tried)
21:43  Raimondi: sako: It works here
21:44  sako: hmmm maybe i did it wrong.. i am gonna try again
21:45  gkatsev: sako: are you calling pathogen's load or w/e function?
21:47  babilen: There is also http://vim-scripts.org/
21:47  sako: gkatsev: yea, other modules load fine.. i think i did something wrong, gonna try again
21:49  gkatsev: sako: ok. Just making sure. Works fine for me.
21:49  gkatsev: there is also vim-addon-manager
21:52  sako: rson: so i have nerdtree-git from scrooloose on github.. when i save a session and load it.. the NERDTree window on the left comes up now but its blank?
21:52  Raimondi: sako: https://github.com/scrooloose/nerdtree/issues/closed#issue/2
21:52  mmso: it doesnt work with sessions
21:54  homekevin: You know, that excuse does'n sound very good to me.
21:54  gkatsev: someone should create a plugin to vim to enable arrays and hashes in sessions :)
21:55  sako: gkatsev: i might have found it :)
21:55  sako: https://github.com/xolox/vim-session
21:55  homekevin: It's trivial to convert dictionaries and lists to string format and back.
21:55  gkatsev: sako: now get scrooloose to support it :)
21:55  sako: NERD tree and Project windows are supported;
21:56  homekevin: Or just tell him about string() and eval()
21:56  mmso: cool!
21:56  sako: gkatsev: says in the README that it supports NERDTree and Project
21:56  sako: gonna give a try :)
21:56  gkatsev: sako: ah, must've missed that.
22:00 --- foocraft is now known as Zarniwoop
22:01  pattern: vimgor: hi
22:01  vimgor: Hey! looks like someone needs attention, please everybody say hello to pattern!
22:01  pattern: not what i intended... :P
22:02  homekevin: It's OK pattern. We all need a little attention now and then.
22:03  homekevin: Try :hi! in Vim, also.
22:03  homekevin: (Check the first line)
22:04  pattern: heh
22:04  malesca: How would I open a wildcarded set of files in (vertical) tabs? So something like ":vsp foo/*.txt" (which doesn't work as-is).
22:04  homekevin: That's one easter egg I've never heard anyone mention. I only found it by stumbling across it in the source.
22:05  homekevin: malesca: I don't think tabs can be vertical
22:05  malesca: oops, vertical splits, sorry. in a new tab, but I guess :tabe takes care of that part.
22:06  malesca: Figured I'd make a command to open a set of files in splits that I always edit together.
22:06  homekevin: I don't know, it doesn't look like :sp accepts more than one file
22:07  pattern: you could probably write a function to do it..
22:07  malesca: I'm guessing you can glob and loop over files in vimscript, but I was hoping someone would know off the top of their head
22:07  homekevin: Is there any command that opens multiple files?
22:09  homekevin: I know there's -o and -O on the command line
22:11  sako: hey guys so when i load my session I get: "NERD_tree_1" [Not edited] --No lines in buffer--  Press Enter to Continue.
22:11  sako: there was a way to get rid of the annoying Press Enter to Continue message right?
22:12  peter_w: you can do :argdo vsp but it doesn't make nice windows here
22:12 --- Unode is now known as _Unode
22:12  sako: and vim-session does work with NERDTree for the record :)
22:12  malesca: homekevin: Yeah, tried that, but it will of course open in a separate window. Thanks though!
22:13  raccoon_: malesca: http://stackoverflow.com/questions/1272258/how-to-open-and-split-multiple-files
22:13  strull: homekevin: like :n *.c  ?
22:15  malesca: peter_w, raccoon_: Thanks!
22:16  milkpost_: is there anyway to see if the location list window is open?
22:16  tonymec: malesca: try ":args file*.???" followed by ":vertical all" (without the quotes, and replaced file*.??? by your filename(s) with wildcards)
22:18 --- silex is now known as Silex
22:19  malesca: tonymec: Nice, that worked too. Thanks.
22:22  malesca: Added that to the Stack Overflow question.
22:26  lamdk: is there a way to :abbreviate  but only have it work on Ex commands?  I always capitalize the first letter by mistake... e.g. :Wq!
22:28  peter_w: lamdk: :he :ca
22:29  peter_w: lamdk: not ex commands only but probably the closest you can get
22:30  savid: quick question,  I have 4 vertical splits.  Is it possible to re-arrange them as 2 on top and 2 on bottom?
22:31  savid: (same question would apply if I had 4 horizontal splits)
22:31  lamdk: oh cool... that looks like it ^^
22:38  rson: anyone know how to tell if a buffer is the alternate-file via a script?
22:40  rson: nvm, bufnr("#") will work
22:40  kongo: rson: there is bufname('#')
22:41  rson: kongo: thanks, just figured it out
22:43  malesca: Can I use autocmd or something else to only define some mappings etc for a certain project, i.e. when pwd is a certain dir?
22:43 --- Silex is now known as silex
22:43  tangledhelix: malesca: http://www.vim.org/scripts/script.php?script_id=441
22:44  malesca: tangledhelix: Awesome, thanks!
22:45  kdwm:                                                                                               
22:47  milkpost_: anyone know how to tell the difference between a location-list window and a window of type quickfix
22:53  fow: milkpost_, you can use the statusline, specifically the %q item
22:53  milkpost_: fow: but how can get that value in a script?
22:54  fow: oh, no idea
22:54  milkpost_: lol
23:02  sin3141592: Hi there. I have the problem that Vim highlights everything either green or red. Ruby files are mainly green and Vim files mainly red. Even changing the colorscheme didn't affect this. Can anyone help me?
23:03  fow: sin3141592, are you using rxvt or urxvt?
23:03  homekevin: Suppose I do :highlight Tpyo gui=bold.   Is there any way to remove the group Tpyo?
23:05  sin3141592: fow: Actually, I don't know. How can I find out?
23:07  fow: sin3141592, what does :se term? (with the question mark) say?
23:07  fow: sin3141592, also what does :se t_Co? (also with the question mark) say?
23:07  kongo: homekevin: :hi clear Tpyo should work I think
23:08  homekevin: kongo: No, the group still exists. It's just cleared.
23:08  homekevin: I don't think there's a way.
23:08  peter_w: does it matter if it exists if it doesn't highlight anything?
23:08  homekevin: peter_w: In some cases, yes.
23:08  sin3141592: fow: term is "mostlike" and t_Co is empty
23:09  homekevin: E.g., exists() behavior is different for a cleared group and a non-existent group
23:09  homekevin: :hi output is also different.
23:09  homekevin: So if you do anything that depends on one of those, it makes a difference.
23:09  fow: sin3141592, that would be the problem. How are you starting Vim?
23:10  bairui: homekevin: syntax clear {group-name}
23:10  homekevin: Surely mostlike isn't a valid terminal.
23:10  kongo: homekevin: yes, I think it's impossible to really delete the group
23:11  homekevin: bairui: seems to do nothing
23:11  bairui: hmm...
23:11  sin3141592: fow: Simply using the "vim" command. I compiled it myself, standard configuration though (thus, no extra options to ./configure).
23:11  peter_w: homekevin: how do you use highlight groups with exists() anyway?
23:12  fow: sin3141592, using the vim command in what?
23:12  homekevin: peter_w: My mistake, it's actually hlexists()
23:12  pattern: homekevin: actually, mostlike is a valid terminal:  http://nion.modprobe.de/mostlike.txt
23:13  sin3141592: fow: I open a "gnome-terminal" and type "vim".
23:14  homekevin: sin3141592: And what does echo $TERM say in gnome-terminal?
23:14  sin3141592: homekevin: "mostlike" as well.
23:15  homekevin: sin3141592: Kill whatever is setting your TERM
23:15  homekevin: vimgor: gnome-terminal
23:15  vimgor: A terminal that falsely claims to be xterm and gives users no way to change that without recompiling. If you're trying to get Vim to display more colors in gnome-terminal, make sure you have a gnome-256color terminfo entry ('tput -Tgnome-256color colors' says 256) and use the following snippet in your shell init file: http://vim.pastey.net/116135
23:15  homekevin: sin3141592: Read that ^^
23:15  homekevin: sin3141592: And check you .bashrc or equivalent for something setting TERM to a bogus value.p
23:16  pattern: mostlike is a valid terminal type:  http://nion.modprobe.de/mostlike.txt
23:16  homekevin: (Bogus in the sense that it's wrong for gnome-terminal)
23:16  sin3141592: fow, homekevin: You guys are geniuses. Apparently, I installed a program once which set my term (I can't remember why I did it). Everything works perfectly now.
23:17  homekevin: I understand that, pattern, but is there any reason to think it accurately describes gnome-terminal?
23:17  BigBlackDog: anyone around here who could help me with a problem using pathogen.vim and snipMate.vim?
23:17  homekevin: At the very least it lacks a "colors" capability, which would probably explain the problem.
23:17  pattern: homekevin: nope... not saying it's right for gnome-terminal.. you're perfectly right to question it
23:17  fow: BigBlackDog, start by describing it clearly and accurately
23:17  fow: sin3141592, you're welcome :)
23:18  homekevin: I though clarity and accuracy were optional here?
23:18  homekevin: *thought
23:18  homekevin: (Disclaimer: statement may be unclear and/or inaccurate)
23:19  fow: haha
23:20  BigBlackDog: ok, using pathogen and snipmate together i still end up with snipmate not finding any snippets for me (e.g. when i type for<tab> in a python file). now, i found that some people have to source the after/plugin/snipmate.vim for it to work. when i do this manually it works for me as well. ...
23:21  ramlev: is it possible for the macvim mvim shell command, to load several files into buffers ?
23:21  BigBlackDog: i've added the line source /home/bbd/configs/vim/bundle/snipmate/after/plugin/snipmate.vim in my bundle/snipmate/plugin/snipmate.vim
23:21  BigBlackDog: but i don't like having the full path in there ... but using relative paths doesn't work either
23:22  BigBlackDog: $VIMRUNTIMEPATH does not have the bundle* path in it ... so this won't work either
23:22  bairui: BigBlackDog: you should not need to source that file explicitly yourself
23:22  fow: BigBlackDog, undo that and try placing let g:snippets_dir = '~/.vim/snippets' " in your vimrc, obviously making changes as needed
23:23  kongo: BigBlackDog: you probably have to have to call pathogen before 'filetype plugin indent on' in your .vimrc
23:23  homekevin: BigBlackDog: Also, you seem to be confusing VIMRUNTIMEPATH with runtimepath.
23:24  homekevin: VIMRUNTIMEPATH is the single path where Vim's runtime files are located. runtimepath is a setting which contains many paths (including RUNTIMEPATH) where scripts may be found.
23:24  homekevin: *including VIMRUNTIMEPATH
23:28  BigBlackDog: fow: ok, that works! thank you heaps!
23:29  BigBlackDog: kongo: i already had that, thank you
23:31  fow: you're welcome
23:31  BigBlackDog: homekevin: you're right, can i see the value of RUNTIMEPATH? echo $RUNTIMEPATH doesn't seem to work.
23:32  homekevin: BigBlackDog: It's $VIMRUNTIMEPATH, and echo should work.
23:32  homekevin: For the setting runtimepath, you can use :set runtimepath
23:33  homekevin: Although it's probably a better habit to add a ? at the end: :set runtimepath?
23:33  BigBlackDog: homekevin: huh? but didn't you just say $VIMRUNTIME is just a single path to the executable? i'm looking for the setting that includes the bundle paths
23:33  homekevin: That makes a difference for boolean settings.
23:34  homekevin: BigBlackDog: OK, then the next 2 things I said.
23:34  BigBlackDog: homekevin: ok, i see ... and could i use this value to make .vimrc find my sinppets folder?
23:34  homekevin: $VIMRUNTIMEPATH isn't to the executable though, it's to one of the installation directories that mostly contains various scripts.
23:35  homekevin: BigBlackDog: I don't know where the plugin expects snippets to be. If you are using pathogen you are already modifying 'runtimepath' in your vimrc -- that's what pathogen does for you.
23:52  nate-: possibly odd question: is there any way to match part of a tab character? eg. with a 4 space hard-tab, can I match the 3rd col
23:53  RobotCow: free drugs and love in ##sushi
23:54  Raimondi: nate-: Not sure what you want to do, but check  :h \%v  make sure you read the note
23:58  frogonwheels: nate-: not really - what are you trying to do?
--- Log closed Wed Jan 05 00:00:39 2011
