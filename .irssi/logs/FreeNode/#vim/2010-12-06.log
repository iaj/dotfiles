--- Log opened Mon Dec 06 00:00:07 2010
00:01  homekevin: glyph: I think you have incorrect expectations about the expression evaluation features.
00:01  singlecore: homekevin, thx btw
00:01  homekevin: glyph: There's no reason that %! or %{ would allow you to set colors.
00:02  homekevin: glyph: But %# is exactly for the purpose of setting colors.
00:03  glyph: homekevin: I need to dynamically compute the list of colors.
00:03  glyph: homekevin: If I'm in a method, the color is Identifier; if I'm in a class, the color is Type.
00:03  homekevin: glyph: Fine, but you'll still need to use %#
00:03  glyph: If I'm in a method *in* a class, the color is Type for the class name, then Normal for the dot, then Identifier for the function name.
00:03  glyph: homekevin: I don't think you understand the question - I've already got it working with %! and %# :)
00:04  glyph: the problem is that if I use %!, the winnr is wrong and every window has the same status line.
00:05  Somelauw: Okay, I eventually fixed it. It seems like expand seems to be a little unpredictable when not used properly and <CR> behaves like a keypress.
00:05  Somelauw: map <F5> :exec "!python '" . expand("%:p") . "' " . input("python " . expand("%:t") . " ") <CR>
00:06  homekevin: glyph: I don't think I see a way to have different status lines for different windows unless you use setlocal each time it updates.
00:08  homekevin: Hm, %{ does seem to evaluate for the current window.
00:08  glyph: homekevin: Yes.
00:09  glyph: homekevin: But %{ doesn't let me return a value which uses %#.  %! does, but doesn't give me the right value for winnr() (or, as is more importantly the case, the python 'vim' module's python.current.window)
00:11  glyph: hmm.  setlocal might help, as it would let me embed the correct winnr in the expression itself.
00:11  glyph: setlocal is for buffers though; I want something that's window-local
00:13  homekevin: glyph: That's incorrect. setlocal is for local settings, whether they are buffer or window.
00:13  homekevin: 'statusline' is global-local, with the local being for the window.
00:13  glyph: okay awesome, so that's almost what I want
--- Log closed Mon Dec 06 00:17:49 2010
--- Log opened Mon Dec 06 00:18:10 2010
00:18 --- Users 591 nicks [0 ops, 0 halfops, 0 voices, 591 normal]
00:19  homekevin: I would probably write a function that gives the current window number, buffer name & number, and the number of times it's been called, and drop that into the statusline to observe what happens.
00:19 --- Channel #vim was synced in 113 seconds
--- Log closed Mon Dec 06 00:24:58 2010
--- Log opened Mon Dec 06 00:35:24 2010
00:35 --- Users 588 nicks [0 ops, 0 halfops, 0 voices, 588 normal]
00:36  frogonwheels: WOFall: there is plugin that replaces modelines somewhere that might help..
00:36  frogonwheels: WOFall: possibly you could do it with a BufFileReadPre tho
00:36  frogonwheels: WOFall: depends if you can setlocal it..  mm..//
00:37 --- Channel #vim was synced in 110 seconds
00:39  homekevin: 'modeline' is buffer-local
00:39  homekevin: I'm not sure if setting it executes the modeline in the current buffer, though.
00:40  homekevin: May.
00:40  homekevin: Maybe if you do :e
00:43  WOFall: :e looks good, is it just a reload?
00:43  WOFall: ah, i see
00:51  Somelauw: Someone told me that vim doesn't rely on file extension to determine the file type.
00:51  Somelauw: Is that true?
00:53  nate-: does the new conceal option only allow you to replace a section with a single character?
00:53  elik: Somelauw: not exclusively
00:53  nate-: it'd be handy for a plugin I'm doing if I can replace it with several characters
00:55  elik: Somelauw: but see for yourself: there is a script called filetype.vim in $VIMRUNTIME that mostly takes care of that
--- Log closed Mon Dec 06 01:03:31 2010
--- Log opened Mon Dec 06 01:08:53 2010
01:08 --- Users 584 nicks [0 ops, 0 halfops, 0 voices, 584 normal]
01:10 --- Channel #vim was synced in 115 seconds
01:13  infid: everything that i paste in vim all of a sudden adds a ton of wh itespace after every line, effectively double spacing everything i do. any idea why?
01:17  strull_: infid: :he 'paste
01:30  b3njamin: Hello, VIM n00b here. How do you call plugin functions within VIM? I'm trying to use snipMate which supposedly has a 'ReloadAllSnippets()' function. I'm not sure how to call that to reload the snippets. Thanks!
01:31  spiiph: :call ReloadAllSnippets()
01:32  b3njamin: spiiph: Sweet, simple enough, thank you! I'm getting an 'Unknown function' error, I assume it doesn't actually exist in the plugin?
01:32  spiiph: Hmm, sounds like the plugin isn't loaded in that case.
01:33  spiiph: Check that snipMate.vim is loaded by doing :scriptnames
01:34  b3njamin: spiiph: Looks like it's in that list. But, I'm looking at snipMate.vim and the function doesn't appear to exist. I must have an old version or something. Thanks for the help!
01:35  Tempoe__: hello, what I should do because every time i try put something like "map<C-1>:tabprevious<cr>" I get error "No mapping found"
01:45  jackdempsey: hey all, curious if there's a better auto-complete paren system out there. i'm using a simple inoremap that seems common
01:45  jackdempsey: problem is after ("foo")
01:45  jackdempsey: my cursor is in insert mode and i have to escape and then move and get back to insert to keep going
01:46  jackdempsey: a search doesn't seem to give any obvious plugins that would do this more nicely
01:46  jackdempsey: i.e. if there's a ) already and i hit that, skip and keep going and let me continue typing
01:50 --- sjl_ is now known as sjl
--- Log closed Mon Dec 06 02:03:30 2010
--- Log opened Mon Dec 06 02:08:54 2010
02:08 --- Users 583 nicks [0 ops, 0 halfops, 0 voices, 583 normal]
02:08  infid: it does it in both :set paste mode and without it
02:09  thepro4ever: i some how accidentally entered a mode or something in vim while coding that showed me a manual page for a function I was using in SDL and I have no idea how to replicate what i did to get there
02:10  DHulme: press K
02:10  infid: ctrl+k
02:10  infid: err yeah shift+k
02:10 --- Channel #vim was synced in 114 seconds
02:11  thepro4ever: how do i exit the man page for it
02:11  thepro4ever: wow there is an sdl api programming refference while i code i can pull up
02:12 --- sjl_ is now known as sjl
02:12  LucMove: Hi. Is anyone here really familiar with netrw and would be willing to help?
02:13  thepro4ever: how do i exit the man page after i enter it with shift+K
02:14  LucMove: thepro4ever: press q then Enter
02:15  LucMove: q is how you exit a man page in any case
02:15 --- peth_ is now known as peth
02:20  walt: vim
02:21  homekevin: glyph: About window identification, I've used window-local variables for that before.
02:21  glyph: homekevin: I have finally figured it out
02:22  infid: so no one knows why when i paste stuff in vim it tacks on like 160 spaces after every line?
02:23  homekevin: infid: Give me a minute to read what you wrote
02:24  MarcWeber: infid: :h paste
02:24  homekevin: infid: So you are getting extra blank lines between every pasted line?
02:24  MarcWeber: Or use :r!cat  then paste then c-d
02:25  infid: MarcWeber: i'm copying and pasting just certain blocks from another file
02:25  infid: homekevin: yes
02:25  homekevin: infid: What kind of file are you copying from, and what application?
02:25  infid: but not just extra blank lines, i'm getting whitespace that starts at the end of each line i paste and goes on for about 160 spaces each
02:26  infid: copying from vim to vim
02:26  homekevin: infid: What kind of terminal?
02:26  infid: in this particular instance in a linux terminal running vim, to gnome-gvim
02:26  infid: gnome-terminal, but i've donet hat many times in the past and it didnt do this
02:27  homekevin: infid: Wait, let's back up a bit and get the details of the problem sorted.
02:28 --- sjl_ is now known as sjl
02:28  homekevin: infid: Are you actually getting blank lines, or just lines with a bunch of trailing space? E.g., if you :set nowrap are there still empty lines in between?
02:28  infid: lines with a b unch of traliing space
02:29  infid: homekevin: :set nowrap caused it not to happen, hmm
02:29  homekevin: Hmm... And I assume the space isn't there in the source file. What type of terminal is the source file in again?
02:29  infid: wait not
02:29  infid: it still happens
02:29  infid: just makes it so it all appears on one line of course
02:29  glyph: window-local vars were no good, because you have to switch to the window in question to access them
02:29  homekevin: infid: nowrap would only make the spaces trail off to the right rather than wrapping at the end.
02:29  infid: space is definitely not in the source file
02:29  glyph: homekevin: and if you try doing that during a statusline update you get all kinds of colorful explosions
02:30  infid: just newlines
02:30  homekevin: glyph: I think there's a function to get around that.
02:30  glyph: homekevin: really?  I have been looking for one and couldn't find it.
02:30  homekevin: glyph: By which I mean a function that can fetch a var from a specific win.
02:30  glyph: homekevin: yeah, that's what I was looking for.
02:30  infid: there are 4 ^I's before each line in the source file
02:30  homekevin: glyph: getwinvar()
02:30  glyph: homekevin: great, I'll use that in the future :)
02:30  glyph: homekevin: at any rate, what I ended up doing was using a variable in Python to track a mapping between opaque window IDs and window objects
02:31  glyph: it gets confused occasionally, but not in a way that's visible to the user
02:31  homekevin: infid: Tell me about the source terminal, and how you are copying from it.
02:32  infid: homekevin: source terminal is a gnome-terminal, in gnu-screen, running vim. i'm copying with shift+<drag of left mouse button>
02:32  infid: pasting into gnome-vim with either middle click or shift+insert
02:32  homekevin: infid: OK, so I have a theory, and maybe a quick work-around.
02:33  homekevin: infid: If you copy with Visual mode to the + register instead of relying on the terminal to transfer the data, I think it will work.
02:34  homekevin: infid: I think the problem may be the terminal's bce setting. bce is "background color erase". When it's not available, the terminal will "delete" cells by filling them with spaces.
02:34  infid: so i should copy with :%y+
02:34  infid: er
02:34  infid: visually select, then y+
02:34  homekevin: infid: That sounds a little pointless, since there are easier ways to insert the entire file.
02:34  homekevin: infid: almost.
02:35  homekevin: infid: Visual, then "+y
02:35  homekevin: Oh, or :y +
02:36  homekevin: If you want a permanent fix, you might need to turn on BCE, which would be something like "term screen-bce" and "defbce on" in the .screenrc
02:36  infid: can't get it to paste
02:36  alex87: hey everyone, i'm really liking vim now that i've picked up a few commands. in general, do you guys use it over an ide when you have lots of files to deal with?
02:36  homekevin: infid: use :reg to verify it's in the + register
02:36  infid: alex87: i use vim for literally everything
02:36  infid: except resumes
02:37  homekevin: alex87: I use it for everything including résumés.
02:37  homekevin: I don't use IDEs anymore.
02:37  infid: whoa, typing :reg shows that each line has a ^J^I^I^I^I after it
02:37  infid: wth is ^J i bet that's the prob
02:38  homekevin: infid: That's a newline
02:38  alex87: infid, homekevin, yeah, i don't use any advanced features, autocomplete, syntax highlighting and a few macros is all done nicely in vim, i just struggle with lots of windows. should i be using gvim?
02:38  infid: alex87: lots of windows?
02:38  alex87: infid, sorry, lots of files
02:39  infid: i have 8 files open in vim right now all within one gnome terminal. you can use tabs in vim but it's usually best to just use it's buffers
02:39  canthiswait: alex87, learn how to switch between buffers, window splits and tabs
02:39  homekevin: Lots of people recommend not using Vim's tabs.
02:39  homekevin: I don't really know why, I just don't like them so I don't use them.
02:39  walt: homekevin: I never saw the point
02:40  infid: alex87: whenever it seems like vim is forcing you to do something really lame, keep in mind that vim doesn't force you to do that and that you just need to learn its way of doing things
02:40  homekevin: I think vimgor has something to say about that
02:40  homekevin: vimgor: tabs
02:40  vimgor: Tab pages are not buffers, don't try to force them to act like buffers. Consider tab pages like viewports, layouts, or workspaces. Trying to setup 1 tab page == 1 buffer is an exercise in futility. Do ':set hidden' and get started. Get FuzzyFinder, LustyExplorer or BufExplorer to make getting around your buffers easier. See http://vim.wikia.com/wiki/Category:Tabs for more info.
02:40  alex87: canthiswait, homekevin, i just found out about tabs, maybe i should get better with buffers
02:40  walt: homekevin: I think I use multiple vims instead of tabs
02:40  walt: which may or may not be good
02:41  canthiswait: alex87, buffers is the way to go
02:41  canthiswait: multiple vims are evil
02:41  canthiswait: :-P
02:41  walt: canthiswait: why_
02:41  walt: it gives good separation imo
02:41  homekevin: I'm perfectly happy to have several terminals open with different Vim instances.
02:41  homekevin: Though I do end up getting the "swap file exists" warning pretty often.
02:42  walt: canthiswait: at work I often have one vim with the project code, one vim with the build pipeline scripts(which I maintain), and sometimes the occasional third one for a config
02:42  canthiswait: walt, if you need the separation then fine, but running commands on all open files and such can trip you up
02:42  canthiswait: I'm sure it doesn't matter if you don't do that most of the time, though.
02:42  walt: canthiswait: I do it as separate workspaces
02:42  homekevin: infid: So, about your registers: I think you should try to yank with visual mode again, and make sure that's the source of the register content.
02:42  walt: and I only do it when they are in fact fully separate
02:42  walt: like the build pipeline vs the main project
02:43  infid: homekevin: how should i be pasting to the other window? middle click?
02:43  walt: they are two diffrent projects
02:43  homekevin: infid: It sounds possible that you are seeing "old" clipboard content, where there was already a problem.
02:43  alex87: so i guess i'll stop using my ide and see how i go with just vim after a couple of weeks
02:43  homekevin: infid: Paste from +
02:43  infid: homekevin: well after i type "+y it says '16 lines yanked'
02:43  homekevin: OK.
02:43  infid: oh you mean type :reg on the destination window?
02:43  canthiswait: walt, cool - alex might want a single workspace so he can have his session stuff across all his files
02:43  homekevin: infid: Well, it should be the same in both.
02:43  peth: with multiple vims you lose out on all the nice automation like argdo, bufdo, windo, buffer inclusive completion etc. which is fine if you don't need it :)
02:44  walt: peth: well, for me I would say that is a plus. Since when I do it, things are so separate that it would actually be a problem if bufdo touched all files
02:45  homekevin: infid: To be clear, it would be good to do :registers in *both* source and destination Vims.
02:45  infid: homekevin: :reg on the source vim window shows the lines with ^J^I^I^I and the dest vim it shows a url i used to have
02:45  peth: walt: yeah, i sometimes use different vims for quick logical separation. but the arglist should theoretically alleviate that
02:46  homekevin: infid: I think you are getting distracted by a non-issue. Those J and I characters are a newline and tabs. It's probably just the lines you yanked.
02:46  canthiswait: alex87, good luck! it takes a while to feel at home with it, but the outcomes are rewarding.
02:46  infid: ok
02:47  homekevin: infid: If you don't see the content in the + register on the receiving side, that seems a little weird. Let me try it out here.
02:48  homekevin: infid: Well, it works as expected here, but it's possible that Screen doesn't interface with the CLIPBOARD selection properly.
02:49  infid: homekevin: i'm trying y our screenrc stuff, how can i make .screenrc be reloaded, will detaching/reattaching work or do i have to close out screen and start a new session
02:49  homekevin: infid: if that's the case my "quick workaround" won't work.
02:49  infid: homekevin: also i'm doing this over a vpn
02:49  homekevin: infid: I'm not totally sure.
02:49  homekevin: I think reattaching makes terminal changes take effect
02:50  infid: looks like i can source the file, not reattaching, according to http://serverfault.com/questions/194597/how-to-reload-screenrc-without-restarting-screen
02:51  homekevin: infid: Although, it may be good enough to do :bce on in screen's console
02:51  homekevin: infid: You can source the file, but that doesn't make terminal changes take effect I think.
02:51  homekevin: Nor would defaults like defbce affect current window settings, I would guess.
02:54 --- sjl_ is now known as sjl
02:55  peth: you can change defbce while in screen with <prefix>:defbce on|off
02:56  homekevin: vimgor: redir is <reply> See :h :redir for full details. If you want to copy the output from a command, use :redir @+|silent command|redir END. For some commands you'll need to replace command with exec "command" (See :h :bar).
02:56  vimgor: Okay!
02:56  peth: oh, you said that, homekevin. sorry.
02:56  homekevin: vimgor: no, redir is <reply> See :h :redir for full details. If you want to copy the output from a command, use :redir @+|silent command|redir END. For some commands you'll need to replace command with exec "command" (See :h :bar). This will put the command output on your system clipboard, ready for pasting.
02:56  vimgor: 10-4!
02:57  homekevin: Er, that's not working right at all.
02:57  homekevin: Oops.
02:58  infid: homekevin: unfortunately nothing seems to work
02:58  homekevin: vimgor: no, redir is <reply> See :h :redir for full details. If you want to copy the output from a command, use :redir @+\|silent command\|redir END. For some commands you'll need to replace command with exec "command" (See :h :bar). This will put the command output on your system clipboard, ready for pasting.
02:58  vimgor: Gotcha, homekevin.
02:58  infid: which is weird because i found an article talkin about how the bce stuff should fix it
02:58  homekevin: infid: So you turned on bce?
02:59  infid: yeah
02:59  homekevin: infid: Actually, I would turn on BCE, then do CTRL-L
02:59  infid: didnt help
02:59  homekevin: infid: If possible, don't use Screen. It introduces a whole new set of problems into an already complicated issue.
02:59  infid: plus i like having term screen-256color usually
03:00  infid: vim is way too useful for me not to use
03:00  homekevin: infid: I use screen-256color-bce
03:00  infid: er screen
03:00  homekevin: But it still has issues.
03:00  homekevin: I'm not positive, but you *may* need BCE in effect in both terminals, gnome and screen.
03:01  infid: i can easily make a vim macro that will delete all the extra spaces at least
03:01  homekevin: infid: Actually, :s should do it easily.
03:01  homekevin: :%s/\v\s+$//
03:01  homekevin: It's a pretty common thing to need to do.
03:02  homekevin: Of course you can do it over a smaller range if necessary.
03:02  homekevin: vimgor: redir
03:02  vimgor: See :h :redir for full details. If you want to copy the output from a command, use :redir @+|silent command|redir END. For some commands you'll need to replace command with exec command (See :h :bar). This will put the command output on your system clipboard, ready for pasting.
03:02  datapimp: any plugin writers want to write a simple plugin for me? I'll pay a little $
03:03  datapimp: check out http://github.com/datapimp/Node-Reloaded for details. i just need something to get me started
03:03  homekevin: vimgor: no, redir is <reply> See :h :redir for full details. If you want to copy the output from a command, use :redir @+\|silent <command>\|redir END. For some commands you'll need to replace <command> with exec "<command>" (See :h :bar). This will put the command output on your system clipboard, ready for pasting.
03:03  vimgor: I hear ya.
03:03  homekevin: vimgor: redir
03:03  vimgor: See :h :redir for full details. If you want to copy the output from a command, use :redir @+|silent <command>|redir END. For some commands you'll need to replace <command> with exec <command> (See :h :bar). This will put the command output on your system clipboard, ready for pasting.
03:03  homekevin: He's dropping the quotes.
03:03  peth: \\ ?
03:04  homekevin: vimgor: no, redir is <reply> See :h :redir for full details. If you want to copy the output from a command, use :redir @+\|silent <command>\|redir END. For some commands you'll need to replace <command> with exec \"<command>\" (See :h :bar). This will put the command output on your system clipboard, ready for pasting.
03:04  vimgor: 10-4.
03:04  homekevin: vimgor: redir
03:04  vimgor: See :h :redir for full details. If you want to copy the output from a command, use :redir @+|silent <command>|redir END. For some commands you'll need to replace <command> with exec \"<command>\" (See :h :bar). This will put the command output on your system clipboard, ready for pasting.
03:04  homekevin: Yuck
03:06  homekevin: vimgor: no, redir is <reply> See :h :redir for full details. If you want to copy the output from a command, use :redir @+\|silent <command>\|redir END. For some commands you'll need to replace <command> with exec '<command>' (See :h :bar). This will put the command output on your system clipboard, ready for pasting.
03:06  vimgor: I hear ya.
03:06  homekevin: vimgor: redir
03:06  vimgor: See :h :redir for full details. If you want to copy the output from a command, use :redir @+|silent <command>|redir END. For some commands you'll need to replace <command> with exec '<command>' (See :h :bar). This will put the command output on your system clipboard, ready for pasting.
03:06  peth: \o/
03:06  homekevin: Single quotes might be better in this case anyway.
03:06  homekevin: But I have no clue how to make vimgor handle doublequotes.
03:07  homekevin: Giving him a bunch of things in PM and nothing works.
03:08  alex87: how long should you stay in insert mode for? say i have to add bits around the page, do i navigate with the arrow keys, or leave insert mode and use hjkl?
03:08  homekevin: You never navigate with the arrow keys.
03:08  homekevin: Insert mode is only for inserting. You should leave as soon as you are done.
03:09  alex87: homekevin, even if i'm going down a line?
03:09  homekevin: Then navigate with the full compliment of movement commands, don't rely on jkhl
03:09  alex87: i'm just trying to get some habits in place now while i'm starting
03:09  homekevin: alex87: Not necessarily, but keep in mind that the arrow keys tend to be out of the way, so you should get in the habit of using jkhl for short moves.
03:10 --- pi-rho|away is now known as pi-rho
03:10  homekevin: And w, e, b.
03:10  homekevin: W, E, B, etc.
03:11  alex87: ah ok, thanks
03:11  homekevin: There's like a billion commands to learn.
03:11  MetaCosm: you will only ever learn / use like 2-10%
03:12  homekevin: I WILL USE THEM ALL
03:12  MetaCosm: no you won't.
03:12  MetaCosm: sorry :(
03:12  homekevin: But... I said it in caps.
03:12  homekevin: It must be true.
03:12  datapimp: homekevin: what language do you code in mainly with vim?
03:13  homekevin: I officially think vimgor's quote handling is broken.
03:13  homekevin: datapimp: I use Vim for all my coding, but most of my coding is Python
03:13  homekevin: Except lately I've been doing all VimScript and LaTeX
03:13  homekevin: And I do tons of plain text.
03:14  homekevin: English text, TODO lists, etc.
03:14  datapimp: what is the movement shortcut to insert a new line after my current line, and move to the beginning of that line?
03:14  homekevin: o
03:15  datapimp: let's see...
03:15  homekevin: datapimp: Actually, I'm not sure that made sense.
03:15  datapimp: i might be asking for the wrong thing.
03:15  homekevin: A new line necessarily has only a beginning.
03:15  datapimp: exactly, let me think aout what i want and give an example in python or ruby
03:15  datapimp: wow, how did i not catch that? o is exactly what i want. haha.
03:16  datapimp: i use vim a lot and that is just one thing that i have always done very inefficiently, but it was in my muscle memory so i never really bothered to learn anything else.  love this editor.
03:17  datapimp: o even respects my indentation.
03:18  homekevin: Your indentation sucks.
03:18 * homekevin is not o
03:19  walt: datapimp: also try capital O
03:19  datapimp: walt: yeah i am playing around now. the trick is to commit these things to habit now.
03:22  datapimp: so, I wrote a command line tool which sends javascript,css,etc over websockets to my browser to be run on the fly.  I want to write something for vim, which will give me a keystroke that takes a selection of text, or a file, and save it to a /tmp/file and then pass that /tmp/file to my command line tool.  any advice on where to start reading?
03:29  elik: MetaCosm: hey, long time no see
03:29  MetaCosm: hey elik whats going on?
03:29  MetaCosm: I been around, just busy
03:29  elik: been around but busy as well
03:30  elik: :)
03:31  MetaCosm: I am falling deeply in love with Erlang
03:31  elik: MetaCosm: I've been doing automation lately, so it got me a bit further away from linux than I'd like to be
03:32  MetaCosm: automating what?
03:32  elik: MetaCosm: all I ever hear about these days is Haskell, from frieends that love it
03:32  elik: MetaCosm: Industrial Automation
03:33  MetaCosm: Haskell is good, non-compariable, but good
03:33  MetaCosm: Industrial Automation == custom OS?
03:34  elik: MetaCosm: for the PLCs, yeah. On the HMI side of things, a mix of microsoft technologies from the pre-2000 era
03:34  MetaCosm: hehe
03:34  elik: MetaCosm: don't laugh, it's not funny :P
03:35  elik: MetaCosm: and what have you been building with Erlang?
03:38  MetaCosm: elik, well, I am new to it
03:38  MetaCosm: but, starting to build a command center control system
03:38  MetaCosm: video processing, communication, gps tracking, etc
03:41  elik: MetaCosm: military?
03:41  MetaCosm: elik, not sure yet, everyone who wants a command center
03:41  MetaCosm: this is a product I am building, I built command centers for police primarily
03:41  MetaCosm: my goal is the smaller and less important police departments can feel fancy like the big boys
03:42  MetaCosm: but, not contracted, I am looking to sell this
03:42  elik: MetaCosm: so it's your own company?
03:42  MetaCosm: yep.
03:42  MetaCosm: I have built command centers in the past
03:42  MetaCosm: and my do not compete is gone now
03:43  MetaCosm: I was lead on many major deploys / builds of command centers
03:43  MetaCosm: Washington DC, Miami Dade, St. Paul
03:43  MetaCosm: and, they were terrible, horrible, awful
03:43  MetaCosm: hand-built -- barely held together, but got the job done
03:44  elik: And are you doing it on the side or it's your major occupation?
03:45  elik: main*
03:45  MetaCosm: elik, I need to talk to some people, but probably as my main... if I can solve the two major spike problems
03:45  MetaCosm: that rest is actually cake
03:45  MetaCosm: the rest is about a slick web based UI ... not a huge deal
03:45  MetaCosm: the hard problems are video storage/access in the long term
03:45  elik: and what are the two major problems?
03:46  MetaCosm: I am thinking of a Dynamo system with 1 hop mechanics like Riak for storage
03:46  MetaCosm: since, I won't be looking to do too much on them
03:46  MetaCosm: I will probably maintain a few hours of backlog on the local disk for quick access
03:47 --- pi-rho is now known as pi-rho|away
03:47  MetaCosm: related tricky bit is video access / rewind / switching (live to record, and back)
03:48  elik: MetaCosm: I see
03:49  elik: So when you say C&C Center, you mean a room where all cctv come in, and you can have multiple displays to watch what's going on a bit everywhere
03:49  MetaCosm: yeah, but more than that
03:49  MetaCosm: tracking the GPS locations off all your officers
03:49  MetaCosm: tracking news feeds
03:49  MetaCosm: in DC tracking planes
03:49  MetaCosm: basically, a nerve center for all this info to flow too
03:50  MetaCosm: you could have a constantly rolling graph of 911 volume
03:50  MetaCosm: stuff like that
03:50  MetaCosm: so, people in the command center could see if 911 traffic spikes
03:50  MetaCosm: doubly so if it spikes on X block
03:50  MetaCosm: if you get ten 911 calls from a 2 block area
03:50  MetaCosm: ... might want to go ahead and dispatch people over there
03:51  elik: fairly complex
03:51  MetaCosm: It is -- but, Erlang makes complexity sorta trivial
03:51  elik: cause as well all know, too much info is worse than too little info, unless properly processed :)
03:51  MetaCosm: It is like the opposite of Java in a way
03:52  MetaCosm: Java you end up bringing in lots of complexity to do stuff like make it fault tolerant, and redudant, and, and, and
03:52  elik: Is it especially good in that context, or just generally great?
03:52  MetaCosm: you layer new systems on top, on top, on top
03:52  elik: ok, so the critical part of the system is taken care of
03:52  MetaCosm: Erlang is from the ground up built to be concurrent and distributed, even on one machine, it will work concurrently and all via message passing
03:52  MetaCosm: so, using 1 machine, or 30 machines is a non-issue, same code
03:53  walt: MetaCosm: I love the erlang video :)
03:53  MetaCosm: and, the entire build is designed so things can crash and not bring down anything... I find myself unable to put into words how different it is
03:53  MetaCosm: elik, I was able to in a day with some tuning
03:53  elik: walt: erlang video?
03:53  MetaCosm: support 1.2 million connections concurrently.
03:54  MetaCosm: on my ... 4th day of using Erlang
03:54  MetaCosm: on 1 machine
03:54  MetaCosm: the linux TCP/IP stack and semophores fall down
03:54  MetaCosm: before Erlang and have to be tuned
03:54  walt: elik: http://video.google.com/videoplay?docid=-5830318882717959520#
03:54  walt: amazing stuff
03:54  Raimondi: MetaCosm: Did you ask Erlang's hand already?  ;-)
03:54  walt: hollywood quality
03:55  MetaCosm: I absolutely and sadly lack the words to explain how differently apps are built
03:56  MetaCosm: hehe, don't let the video throw you off, there is a reason Ejabbard, CouchDB, RabbitMQ, etc are built on it
03:56  elik: given the context it was designed for, it certainly seems to suit your needs
03:57  elik: MetaCosm: and how do you deal with security (authentication, encryption, etc)
03:57  MetaCosm: elik, in which layer?
03:57  MetaCosm: elik, in the web application, at the disk I/O layer, over the wire, what?
03:58  MetaCosm: Security is such an ultra-broad topic these days
03:58  MetaCosm: Intra-node security will most likely be private-network switched, as it needs no outside access... on top of that SSL & shared key
03:58  elik: MetaCosm: well, given your context, it must be a bit in all of the above
03:59  MetaCosm: disk I/O I am not sure I want the preformance hit of encyption on the fly
03:59  MetaCosm: considering TBs of storage
--- Log closed Mon Dec 06 04:03:25 2010
--- Log opened Mon Dec 06 04:08:45 2010
04:08 --- Users 569 nicks [0 ops, 0 halfops, 0 voices, 569 normal]
04:10 --- Channel #vim was synced in 115 seconds
05:23  thepro4ever: damnit i just tried to enter block mode in a man page and i can't
05:25  elik: thepro4ever: not all sotware are as awesome as vim :)
05:32  walt: alip: s/all/any/
05:32  walt: elik*
06:10 --- sjl_ is now known as sjl
06:15 --- sjl_ is now known as sjl
06:45  anon33_: so something's remapped ":E" and I can't figure out what.
06:46  strull_: try :verbose com E
06:49  anon33_: screwy plugins... thanks strull_
06:52 --- sjl__ is now known as sjl
06:59 --- sjl_ is now known as sjl
07:58 --- zach is now known as Guest38050
--- Log closed Mon Dec 06 08:03:20 2010
--- Log opened Mon Dec 06 08:08:42 2010
08:08 --- Users 561 nicks [0 ops, 0 halfops, 0 voices, 561 normal]
08:10 --- Channel #vim was synced in 113 seconds
08:18 --- sjl_ is now known as sjl
08:28  jorrit: Hi
08:33  marlun: Anyone knows if there has been any development of taglist somewhere off the main site? :)
08:41  jdhoreOTG: marlun, There hasn't really
08:41  jdhoreOTG: marlun, Mainly because it's not really necessary. taglist just works and works well
08:42  marlun: It's not that it doesn't work for me I was jut curious if development had moved somewhere :)
08:42  jdhoreOTG: Nope
08:42  marlun: ok thanks
08:46 --- raorn_ is now known as raorn
08:57  boxbeatsy: hi, im' trying to do a nongreedy replacement with this vim command: "%s/—.* —//g"  How do I make the * operator non-greedy? i've tried a question mark but that doens't work.
08:58  fow: boxbeatsy, use \{-} instead of *
08:59  boxbeatsy: fow: so: %s/— \{—} —//g" ?
08:59  fow: boxbeatsy, still need the .
08:59  boxbeatsy: ah ok
09:01 --- daniel___ is now known as daniel
09:01  boxbeatsy: fow: i'm getting a syntax error with this command "%s/— .\{—} —//g"
09:01  fow: boxbeatsy, \{-} not \{—}
09:01  boxbeatsy: ah, waht does that do?
09:02  boxbeatsy: sweet that worked, thanks!!
09:03  fow: \{—} does nothing, but \{-} says match "0 or more of the preceding atom, as few as possible", see :h /\{-
09:03  boxbeatsy: goot it..ok thank you very much!
09:03  fow: you're welcome
10:09 --- sjl_ is now known as sjl
10:10  inad922: hello
10:10  inad922: I kind of just trying out vim. Could someone tell me keyboard combo "[[" stands for?
10:11  kenda: inad922: :h [[
10:11  inad922: ow
10:11  inad922: ok thanks
10:11  inad922: umm sorry not that ways
10:12  inad922: what do I have to press
10:12  inad922: I know what it does
10:12  inad922: I just dont know the notation
10:12  strull_: it means : press [, then press [
10:12  fow: I don't understand the question
10:12  fow: ah
10:13  inad922: ow ok
10:13  inad922: thanks I guess I get it now
10:14  strull_: inad922: you should start with vimtutor
10:15  inad922: hmm ok
10:17  inad922: btw is there a way to remap standard keys to something else. Like this h,j,k,l to a,s,w,d?
10:17  strull_: yes, but do not try this as a newbee
10:17  fow: yes, but then you lose what a s w d do
10:18  fow: The layout of hjkl is really comfortable once you get used to it anyway
10:18  kenda: inad922: are you lefty?
10:19  inad922: kenda: no I'm not.
10:19  inad922: I'm just moving with that combo in games so I thought it might be a good idea to use the same here.
10:19 --- sjl_ is now known as sjl
10:19  inad922: also arrow buttons seem to have the wordjump function
10:20  inad922: Does every button has some useful function in vim btw?
10:20  kenda: yes but thats the way to unpower vim
10:20  inad922: ic
10:20  fow: inad922, pretty much, yes
10:22  nate-: anyone have trouble with "require 'rubygems'" using vim and the ruby interface??
10:22  nate-: even :rubydo require 'rubygems' isn't working
10:23  nate-: driving me crazy, it's as if the gem paths aren't setup correctly
10:23  DHulme: you've been asking that question since yesterday
10:23  nate-: yes, yes I have
10:23  DHulme: clearly nobody knows
10:23  DHulme: you might have more luck asking on the mailing list
10:23  nate-: that's not going to stop me from asking in here
10:23  nate-: big list of people frequent this channel
10:24  DHulme: I admire your persistence: I'd have stopped asking in here by now.
10:24  nate-: I've asked that question 3 times, you've seen it twice
10:24  nate-: :P
10:24  DHulme: Actually, I saw it three times.
10:24  nate-: @_@
10:24  nate-: fair enough
10:24  nate-: good memory
10:28 --- sjl_ is now known as sjl
10:45  inad922: this vimtutor is convincing me to switch to vim. The only annoying thing is the cursor movement h,j,k,l is not intuitive. Is there a way to set its function to the arrow buttons since a,s,d,w have some functionality.
10:45  inad922: I don't really see the point of this word jump function which the arrow buttons currently have.
10:46  strull_: inad922: try touch ~/.vimrc
10:47  inad922: Is latex vim any good compared to say auctex?
10:48  FernandoBasso: inad922: Don't let the memorizing of the behavior of 4 keys keep you away from this powerful editor.
10:50  FernandoBasso: And the use of hjkl is just to make us type faster, without having to reach the arrow keys.
10:50  inad922: FernandoBasso: I don't know. I think there are some ways it's better than emacs which I'm currently using. What I don't like about that that it is heavyweight and written in lisp which I do not want to learn.
10:51  inad922: FernandoBasso: Yeah probably youre right. I think I can get used to that
10:51  FernandoBasso: inad922: One thing to keep in mind, is that vim is a *different* text editor. We have to change our mindsets in order to fully comprehend its power.
10:51  fow: inad922, many Vim users think latex-vim is unnecessary, buggy, and unmaintained, though I personally think it's okay. I've not used auctex, so I can't compare them. I just use a snippets plugin and built-in Vim features, though
10:51  fow: vimgor, latexsuite
10:52  vimgor: hmm... latexsuite is see latex-suite, fow
10:52  fow: vimgor, latex-suite
10:52  vimgor: An slightly-maintained, buggy, over-complicated plugin intended to make it easier to author (La)Tex files. Often, this is better served by using a standalone snippets plugin (like snipMate) to define the snippets you actually find useful as well as using the command ':compiler tex' to allow using Vim's quickfix feature when compiling TeX to an output format.
10:52  fow: inad922, see, #vim hates it :P
10:52  inad922: :)
10:53  inad922: Is vim extensible in some correct scripting language like python, perl, etc.?
10:53  DHulme: yes, both of those
10:54  fow: As of 7.3, Vim can support Python, Perl, Ruby, and Lua
10:54  inad922: cool
10:55  strull_: and vim has it's own scripting language
11:01  inad922: fow: This snipmate is good stuff I guess I can leave without auctex if I have this.
11:15  Kuukunen: sqz: btw, I just beat Fire N' Ice
11:15  Kuukunen: and I blame you
--- Log closed Mon Dec 06 11:37:49 2010
--- Log opened Mon Dec 06 11:48:13 2010
11:48 --- Users 584 nicks [0 ops, 0 halfops, 0 voices, 584 normal]
11:49 --- Channel #vim was synced in 112 seconds
11:55 --- mikl is now known as miklll
12:01  sqz: Kuukunen: you beat fire'n'ice?
12:01  Kuukunen: yea
12:01  sqz: Kuukunen: I'm sorry but thats impossible
12:01  Kuukunen: well it certainly took longer than beating Uncharted which I did in between :P
12:01  sqz: according to my research...
12:01  Kuukunen: played it on three days
12:01  sqz: whaat?..you are serious..man that is quite an achievement!
12:02  sqz: respect!
12:02  Kuukunen: reminds me of Lolo games :P
12:02  sqz: adventures of lolo?
12:03  Kuukunen: yea
12:03  Kuukunen: (all of which I beat too :P)
12:05  sqz: I like the genre of these games, totally idiotic and unrealistic puzzling
12:06  Kuukunen: often quite hard
12:06  sqz: ..and you can walk away from it..which is not really easy with games like WoW (I heard)
--- Log closed Mon Dec 06 12:16:22 2010
--- Log opened Mon Dec 06 12:21:48 2010
12:21 --- Users 585 nicks [0 ops, 0 halfops, 0 voices, 585 normal]
12:23 --- Channel #vim was synced in 116 seconds
12:26  mattcodes: okay, working on a file aaa1.txt and then I save it as aaa2.txt - i want to work on aaa2.txt for now, but the next :w will save as aaa1.txt, how can I 'save as' and then work from that, without opening the save file, deleting the buffer of the old file etc..
12:27  kurkale6ka: mattcodes: :h:sav
12:27  mattcodes: sorted
12:27  mattcodes: thanks
12:30  mattcodes: insert a line above/below (O/o) without going into insert mode?
12:33  turre: mattcodes: make a mapping
12:33  mattcodes: so nmap something like o then ESC
12:33  mattcodes: makes sense
12:33  bartocc: hi all
12:34  turre: mattcodes: or nnoremap
12:34  bartocc: I've got
12:34  bartocc: map <Leader>z :ZoomWin<CR>
12:34  bartocc: in my vimrc
12:34  bartocc: leader is set to ","
12:34  bartocc: : ZoomWin works great
12:34  bartocc: but
12:34  bartocc: ,z
12:34  bartocc: does not
12:34  bartocc: any idea why
12:34  bartocc: I've got other mapping that work correctly
12:34  bartocc: and how could I debug this ?
12:38  bartocc: ok
12:38  bartocc: my mapleader command was not in the right place
12:54  jink: So, when I vim a url, this host uses curl, while another uses wget.  Where do I configure that?
12:58  rson: jink: see :help netrw-externapp
13:10  jink: rson: Thanks. :)
--- Log closed Mon Dec 06 13:16:24 2010
--- Log opened Mon Dec 06 13:21:58 2010
13:21 --- Users 580 nicks [0 ops, 0 halfops, 0 voices, 580 normal]
13:23 --- Channel #vim was synced in 120 seconds
13:27  glyph: Is there a good way to separate out vim plugins from different sources within ~/.vim, or do I need to populate  a symlink farm there?
13:27  rson: dindinx: any chance you have an idea of how to follow that hilight group back to it's "base" group? for instance i'm editing a vim colorscheme and the group is vimHilight but it's probably a keyword
13:34  rson: dindinx: nvm, it's synIDtrans, ty
13:35  marlun: I'm having some problems with snipmat in terminal vim. In macvim I can hit backspace and it deletes the selection but in terminal vim it doesnt.
13:35  marlun: snipmate
13:38  karthick87: When I enter mode in vim, all control keys (like arrow keys, delete keys etc.) produce characters instead of expected control behaviour.How to change this??
13:40  d1b: hi guys question, if i use retab!
13:40  d1b: it doesn't convert spaces to tabs :(
13:40  schweizer: how can i delete all lines between the current one and line 2323 ?
13:40  kurkale6ka: d1b: first ;se noet thne :ret!
13:41  d1b: kurkale6ka: sorry?
13:41  d1b: set noexpandtab done
13:41  kurkale6ka: d1b: what?
13:41  karthick87: Can anyone help me??
13:41  d1b: right?
13:41  kurkale6ka: d1b: yes, now :ret!
13:41  d1b: it doesn't work :(
13:42  kurkale6ka: d1b: did you notice the !
13:42  d1b: kurkale6ka: of course!
13:42  kurkale6ka: d1b: what doesn't work?
13:42  d1b: kurkale6ka: "it"
13:42  d1b: leading / other spaces are not converted to tabs
13:43  kurkale6ka: d1b: :se ts? sts?
13:43  d1b: 8 and
13:44  d1b: softtab... 0
13:44  spiiph: schweizer, :,2323d
13:44  spiiph: schweizer, or dV2323G
13:45  schweizer: spiiph: thx
13:46  karthick87: hello spiiph
13:46  d1b: so no idea... :(
13:46  kurkale6ka: d1b: try ret!4
13:47  d1b: kurkale6ka: thanks
13:47  d1b: why did i need that?
13:48  kurkale6ka: d1b: it means that you had 4 spaces thinking that that was a tab but ts=8 indicates otherwise
13:48  d1b: oh right
13:48  karthick87: When I enter mode in vim, all control keys (like arrow keys, delete keys etc.) produce characters instead of expected control behaviour.How to change this??
13:48  kurkale6ka: so :ret will do nothing, 4 spaces is half a tab
13:49  d1b: kurkale6ka: sure thanks
13:50  jamessan: karthick87: create a blank ~/.vimrc and restart vim. does that help?
13:51  karthick87: how to create a  ~/.vimrc
13:52  jamessan: karthick87: same way you would create any other file
13:53  karthick87: Am i right?  vim ~/.vimrc
13:54  tvm: right.
13:54  mikl: yeah, basically
13:54  karthick87: it din help :(
13:56  tvm: karthick87: this will be caused by console/keyboard settings
13:57  karthick87: How to get rid of this problem??
14:07  tvm: karthick87: is this a session over putty?
14:10  karthick87: No
14:12  tvm: if you run echo $TERM in shell what is the result?
14:15  karthick87: xterm
14:15  tvm: and terminal is also xterm?
14:19  karthick87: yup
14:23  tvm: karthick87: what OS is it?
15:08  bosie: anyone using Ack and the Ack plugin?
15:09  bosie: what does 'current directory' mean?
15:10  bosie: or in other words: why does *.* result in a different result list than leaving the directory alltogether
15:11  et: what would it mean except the current directory? (what :pwd outputs)
15:12  bosie: et: well, i am wondering what files it would take
--- Log closed Mon Dec 06 15:16:27 2010
--- Log opened Mon Dec 06 15:21:48 2010
15:21 --- Users 598 nicks [0 ops, 0 halfops, 0 voices, 598 normal]
15:23 * danielsh :au CursorHoldI * if b:foo == 0 | call system(printf("mail -s 'Vim %d is waiting!' daniel", getpid())) | let b:foo = 1 | endi
15:23 --- Channel #vim was synced in 113 seconds
15:23  danielsh: ^^^ I just forgot a Vim in the middle of a sentence for a few hours and wondered how to prevent that from recurring :-)
15:36 --- EselTheo__ is now known as EselTheo
15:49 --- dive is now known as Guest13384
15:57  DainDwarf: Hi, is there a way to make / (and :s/) display the line of the found item in the center of the window, instead of bottom?
15:58  danielsh: am I the only one seeing a blinking quit message here?
15:58  DainDwarf: I don't see any blinking.
15:59  danielsh: in peth's quit message
15:59 * danielsh in irssi
16:00  w0m: not blinking in my irssi
16:00  DainDwarf: danielsh: Maybe it's a \007 (aka. ascii beep)
16:01  w0m: gnome terminal in screen
16:01  danielsh: screen + konsole
16:01  FernandoBasso: DNA Irssi -> archlinux = no blinking here.
16:01  jemadux: danielsh: irssi is good
16:01  FernandoBasso: danielsh: ^
16:02  danielsh: thanks for the opinions folks
16:02  danielsh: in gnome-terminal it doesn't blink, but I see two squares instead of two letters
16:02  danielsh: (probably "set bg color to foreground color" nonsense?)
16:03 * danielsh (not, it's not a ^G)
16:04  d0m: Suppose I'm in a .html but in a <script> tag, presently my alignment is all weird.. how can I say: Switch syntax to javascript?
16:05  FernandoBasso: d0m: :set filetype=javascript
16:06  FernandoBasso: Or :set syntax=javascript
16:06  FernandoBasso: Not sure if vim mix html/js well.
16:06  FernandoBasso: I always use separate files for each code.
16:07  d0m: Ok, thank you. It will do for now until I find time to find a better way to handle that issue :p
16:43  veilig_abt: is there a way for me to view the path to the current file I'm editing?
16:44  kurkale6ka: veilig_abt: :pw
16:46  veilig_abt: kurkale6k: nice, thanks!
16:46  et: well, :pw gives you the pwd
16:47  et: wich might not be the directory that the edited file is in
16:47  kurkale6ka: true
16:48  et: :echo expand('%') gives you the full path
16:48  veilig_abt: et:  that is just giving me the file name
16:49  kurkale6ka: :echo expand('%:p')
16:49  veilig_abt: ah yes, just found that.
16:50  veilig_abt: nice - that will work perfect! thanks guys!
17:23  zematynnad: having trouble with two plugins that open up the quickfix window: ack and pep8.  The problem I'm having is that when any entry is chosen from the quickfix list all entries in the list suddenly go away.  I know I've used these plugins before without this issue and because I've been busy working I don't remember exactly when this started.  Does this sound familiar with anyone or does anyone know of where I might start debugging
17:23  zematynnad: this?
17:36  phao: I have some buffers opened, and I've performed an action in one of them. I wanna undo this action, but I've already moved to another buffer and 'u' won't do it.
17:36  phao: Any way I can undo that action?
17:37  MarcWeber: phao: undo is always buffer only. So switch back to the other buffer and press u there.
17:37  MarcWeber: :b # could hepl you or :ls to find the buffer wich was modified
17:38  phao: I know which buffer was modified
17:38  phao: but 'u' is telling me I'm already in the oldest change
17:38  phao: switching back to the modified buffer and pressing 'u' isn't doing it.
17:40  MarcWeber: phao: If g- or g+ dn't show it your previous version is lost
17:40  MarcWeber: g- g+ iterate over the history tree.
17:40  MarcWeber: So try pressing g- multiple times
17:40  phao: yeah
17:40  phao: it' lost
17:40  phao: I do'nt get it...
17:40  phao: why is that?
17:40  phao: just because I changed the buffer
17:41  phao: I lost this history tree?
17:41  MarcWeber: This also depends on your compilation flags, .vimrc settings and whatnot.
17:41  MarcWeber: :e! in the past lost it.
17:41  MarcWeber: Using most recent vim you don't loose the history.
17:41  MarcWeber: Try :echo &undolovels or such.
17:41  phao: mine is 7.3
17:42  MarcWeber: MAke sure  you're not using compatible (set nocompatible in your .vimrc , first line)
17:42  phao: what does that do?
17:42  MarcWeber: You can try killing vim and reopen the file. If you're very lucky a swap file still has the contents (very unlikely)
17:43  phao: is there any thing I can put in vimrc
17:43  phao: to change this behavior?
17:43  MarcWeber: phao: Don't know what it all does. It makes VIm behave like Vim rather than vi. If you don't use it many features are disabled.
17:43  MarcWeber: phao: Which behaviour? WHat did you do?
17:43  phao: behavior: changing buffer => losing 'undo' history
17:43  MarcWeber: phao: You only sayed vaguely "A plugin did something in any buffer".
17:43  phao: I never mentioned plugin
17:44  MarcWeber: phao: Try this: open a file. Edit it, jump around, edit it again. then press u, does this work?
17:44  phao: no
17:44  MarcWeber: What does :echo &undolevels say?
17:44  phao: 1000
17:45  MarcWeber: phao: Have you added that line to the .vimrc?
17:45  phao: I'm adding now
17:45  phao: doesn't change a thing
17:45  phao: when I save a file, do I lose that history of changed?
17:45  phao: changes*
17:45  strull_: phao: also check :echo &hidden
17:46  phao: strull_, 0
17:46  phao: gives me 0
17:46  strull_: bad
17:46  strull_: do :set hidden
17:46  phao: works...
17:46  strull_: then your undo-stack will survive
17:46  phao: yes, worked
17:47  strull_: 'hidden' is a must-have option. Put it in your vimrc
17:47  MarcWeber: Why must everybody set this option? Why can't it be default?
17:47  phao: yes, thx
17:47  phao: already there
17:47  strull_: MarcWeber: yes, it's crazy
17:48  strull_: vim could well loose about 50% of it's options
17:48  gkatsev: vimgor: hidden
17:48  vimgor: An option that allows you to switch the buffer being displayed in the current window without requiring that you save it first. This also allows you to keep undo/redo history on multiple files. If you don't know whether or not you want this option, you want it; it makes working with multiple files much more reasonable. See also, :help 'hidden'
17:48  phao: maybe it's there because of this vi/vim compatibility
17:49  phao: which is crap, if you ask me
17:49  phao: 2011 already, practically
17:49  strull_: yes, that's the reason
17:49  gkatsev: yeah, it's most likely because of compat
17:49  phao: I doubt there are people using pure vi nowadays
17:49  strull_: sure there are.
17:49  phao: really?
17:49  strull_: yes, me sometimes
17:49  gkatsev: but now that there is vim-tiny, when you install full vim, these settings should be turned on by default
17:49  phao: necessity?
17:49  strull_: on systems where nothing else is available
17:49  phao: makes sense then
17:49  gkatsev: because you already made a concious decision to not use vim-tiny
17:50  phao: welll
17:50  phao: thx very much
17:50  phao: this option will help me a lot
17:50  phao: I've lost some stuff because I didn't have hidden set
17:50  danielsh: nice, there are both hidden-buffer and buffer-hidden helptags
17:50  phao: luckly, small stuff
17:50  gkatsev: vim7.3 ftw with rnu
18:01  DHulme: gkatsev: agreed
18:02  gkatsev: though, i'm annoyed that ubuntu doesn't have 7.3 in the repos yes
18:02  gkatsev: and I haven't had time to build it myself
18:02  gkatsev: I found a ppa for it but when installed from ppa, everything broke
18:02  rson: someone put up a ppa that has it, whatever that means
18:03  gkatsev: rson: I know, I tried it but everything broke
18:03  rson: i haven't had any issues with anything (yet)
18:03  gkatsev: I don't know why it happened, so, I'm gonna stay away from that PPA right now
18:22  shiftingcontrol: i entered :2yy vim it is not vim command ,is my vi editor not working
18:23  rson: shiftingcontrol: what are you trying to do? yank two lines?
18:23  rson: if so, get rid of the colon
18:23  homekevin: shiftingcontrol: The command-line command is :yank
18:24  homekevin: The normal mode command is yy
18:24  homekevin: Or y<motion>
18:25  shiftingcontrol: yea i want to yank 2 lines i hit esc and then 2yy
18:26  DainDwarf: Or y2y
18:26  homekevin: I'm fond of yj personally
18:27  shiftingcontrol: y2y ll do same job as yy ryt ?
18:27  DainDwarf: Nope, the same as 2yy and yj.
18:27  DainDwarf: yank 2 lines.
18:27  homekevin: ryt isn't a Vim command
18:28  shiftingcontrol: homekevin:i din say it as command lol
18:28  homekevin: shiftingcontrol: Use your words
18:29  shiftingcontrol: homekevin:mean ?
18:29  mtvee: could someone point me at documentation on how to write documentation for a plugin please, conventions, formatting, modes, all that jazz. google is not helping
18:29  homekevin: shiftingcontrol: nrmn dn lrts me lol
18:34 --- EselTheo_ is now known as EselTheo
18:42  mhi^: mtvee: Well, I would suggest looking at ":h NERD_tree.txt", ":h space.txt" or ":h syntastic" which are all good examples.
18:42  codeshah: hey guys, how do I make the cursor thick? Hrrmpf
18:42  glyph: how does the precedence of highlighting rules work?
18:42  homekevin: codeshah: You should do something about that cough.
18:43  glyph: I have a highlighting style for both CursorLine and a custom over-length expression
18:43  homekevin: codeshah: Then look at :h 'guicursor'
18:43  glyph: Oops I mean colorcolumn.
18:43  glyph: The stuff in the color column is being highlighted according to the colorcolumn rule rather than the overlength rule
18:44  glyph: is there any way I can say that overlength is a higher-priority match?
18:44  codeshah: ok
18:44  codeshah: lol
18:44  homekevin: glyph: How did you do the over-length thing?
18:45  homekevin: glyph: I mean, matches have a priority, so if it's a match you might just need to increase the priority.
18:45  homekevin: But it kind of depends on how colorcolumn works.
18:45  mtvee: mhi^ ok, i'll check them out, thx
18:46  homekevin: glyph: So I don't exactly have an answer.
18:46  mhi^: mtvee: Yup, if you don't have them installed, you'll find the docs on their github repos.
18:46  homekevin: Anyway, I'm leaving for a while.
18:52  glyph: hmm
18:52  glyph: match priority looks pretty broad
18:52  glyph: like, there's match, 2match, and 3match
18:52  glyph: is there anything lower, like 0match?
--- Log closed Mon Dec 06 18:57:59 2010
--- Log opened Mon Dec 06 18:58:26 2010
18:58 --- Users 613 nicks [0 ops, 0 halfops, 0 voices, 613 normal]
18:59  rson: mtvee: my only suggestion other than what was said above is to be generous with your helptags.
19:00 --- Channel #vim was synced in 118 seconds
19:02  mtvee: rson: vim doesn't seem to pickup my doc in the :help for some reason. i'm not sure why, figured i didn't format something right or put it in the wrong spot
19:02  mtvee: rson: thx tho. i'll keep diggin
19:02  rson: mtvee: did you run helptags on your doc folder?
19:04  mtvee: rson: hmm, that was the missing link. is that something the user is expected to do and not worry about it as a plugin author?
19:05  rson: mtvee: i am under the impression that anytime a user installs a plugin that has docs, they must run helptags on their docs folder(s)
19:05  mtvee: rson: ah ok. well problem solved, hehe :) thank you!
19:13 --- sjl_ is now known as sjl
19:13  ehc: when editing c files, // comments are beging formatted correctly. can someone share their correct set comments setting
19:13  ehc: / comments are NOT being formatted correct
19:13  ehc: and irc doesn't like the double slashes :)
19:13  deryni: In what way is it incorrect?
19:15  ehc: deryni, they're not being recognized as comments, so gqq doesn't put // in front of split long lines
--- Log closed Mon Dec 06 19:20:25 2010
--- Log opened Mon Dec 06 19:20:49 2010
19:20 --- Users 621 nicks [0 ops, 0 halfops, 0 voices, 621 normal]
19:21  glyph: deryni: "tell me where the 'comments' option was set"
19:21  glyph: oops
19:21  glyph: hah
19:21  glyph: deryni: sorry, misread that as "what does ... mean"
19:21  deryni: Heh.
19:22  ehc: deryni, :verbose, nice. that showed me where my problem was. thanks :)
19:22 --- Channel #vim was synced in 113 seconds
19:22  deryni: And where was it?
20:02  victor-: i have a file with a bunch of "RewriteRule /path/?page=SOMETHING http://localhost/?page=BLEH". is there a handy command that can match SOMETHING and replace BLEH on every line?
20:02  victor-: actually, if i could just append SOMETHING to the end of each line that matches, that would work too
20:03  siddhion: hey
20:03  siddhion: im going through a file and I see that certain lines are missing. like it will go 1,2,3,8,9,10
20:04  siddhion: On the 3rd line I see a '+-- 5 lines'. I guess this is what they call folding but how does one open up that hidden (folded) text?
20:06  siddhion: oh never mind. got it.
20:07  rson: victor-: you can combine a :g command and a :s command i believe
20:08  rson: victor-: g/SOMETHING/s/BLEH/NOTBLEH/
20:10  victor-: so something like: g/\/page=\(.*\)/s/localhost\/?page=$1/
20:12  rson: you'd need a replacement on that substitute command
20:12  rson: just a suggestion, when working with paths and regexes, use ! as the separator so you don't have to escape them.  it makes it a bit more clear
20:12  rson: escape the slashes*
20:12  victor-: right.
20:12  victor-: how do i do a backreference in vim?
20:12  rson: \1
20:12  rson: for the first match
20:13  gkatsev: \#
20:13  rson: i think \& does the entire match
20:14  rson: quite possibly i am wrong there though
20:14  graywh: rson, \0
20:14  graywh: or &
20:14  graywh: depending on magic
20:14  rson: indeed, just found it. thanks.
20:15  victor-: so this is what i'm trying, but i get a "no previous command error": g!/page=\(.*\)!s!localhost/?page=$!localhost/?page=\1/g
20:15  victor-: any ideas?
20:16  victor-: is \(.*\) actually putting the .* into a backreference?
20:16  rson: no because it's not on the substitute command, it's on the global command
20:17  victor-: crap. you're right.  any more suggestions?
20:18  rson: just add the group to the substitute command as well
20:18  mtvee: anyone know how to get the username and machine name from windows via vimscript?
20:18  rson: g!/page=\(.*\)!s!localhost/?page=\(.*\)$!localhost/?page=\1/g
20:19  victor-: rson:  the second match doesn't have localhost.  i want to take the first page=?SOMETHING and append it to the end of the localhost/page= to be localhost/?page=SOMETHING
20:20  rson: victor-: can you just paste a before and after?
20:20  rson: victor-: btw i'm off to a meeting, but i'll be back soon
20:20  victor-: hopefully i'll have it figured out by then.  :)
20:20  victor-: thanks
20:20  victor-: i could have done this by hand 2-3 times by now, but i figure i should learn how to do it
20:23  peth: "I am rarely happier than when spending an entire day programming my computer to perform automatically a task that it would otherwise take me a good ten seconds to do by hand." (Douglas Adams)
20:25  victor-: heh
20:26 --- sjl_ is now known as sjl
20:38  accel: is it possible to execute a command inside of vim
20:38  accel: that'll do the same as ctrl-z (suspend) ?
20:39  gkatsev: :h :!
20:39 --- sjl_ is now known as sjl
20:39  Friesia: I think it's :shell
20:39  accel: it's :sus[end
20:39  accel: err :suspend
20:40  gkatsev: oh, ok, I misunderstood, lol
20:42  WebDragon: I have no idea why I constantly forget this, but how do you toggle visiblity on the non-printing characters again?
20:43  tmz: WebDragon: Is :set list what you want?
20:43  WebDragon: gonna have to make an fkey for this so I can keep it in memory somehow (even if 'memory' is just the .vimrc) :)
20:43  WebDragon: tmz: that's it
20:44  WebDragon: I just noticed my css has mixed tabs and spaces, (no idea why.. thought i'd preset that in vimrc)
20:44  gkatsev: you can :retab to make them all the same thing
20:44  WebDragon: yeah I have :retab! on standby at all times
20:45  WebDragon: I just wanted to see it, to see if I was just seeing things, or had just forgotten one extra tab in that line
20:45  gkatsev: you can search for tabs which will highlight them or something
20:48  WebDragon: depending on hls and incsearch
20:48  gkatsev: yeah
20:49  rson: victor-: did you get it?
20:49  victor-: rson: yeah, but in a more roundabout way
20:49  rson: lol
20:50  rson: victor-: can you paste the before and after to show you how i'd have done it?
20:56  siddhion: hi. i have two buffers open and would like to change the width of the left one. does anyone know a shortcut to do this?
20:57  peth: siddhion: ^W<newsize>|
20:57  deryni: :help ctrl-w_<  ?
20:58 --- sjl_ is now known as sjl
21:01  siddhion: deryni, ahh that worked but goes by 1 unit. i was hoping for a way i could just hold down the < or > and it would just go rapid fire
21:03  deryni: Use a count instead to resize by more than one. Or use a mapping.
21:06 --- y3llow_ is now known as y3llow
21:06 --- cuba33ci_ is now known as cuba33ci
21:11  unkanon: I'm trying to make it so when I type Ctrl-7 (on the numpad) it types blah for me, but inoremap <C-7> blah won't work.
21:11  gkatsev: :echo blah ?
21:12  unkanon: ?? how will that type blah for me in insert mode when I press control+numpad7 ?
21:12  gkatsev: <c-7> :echo blah?
21:13  graywh: you can't combine ctrl with numpad numbers, afaik
21:13  graywh: and vim has no concept of ctrl-7
21:13  unkanon: that's a bunch of keys gone to waste!
21:14  gkatsev: I'd rather have a keyboard without a numpad
21:14  gkatsev: easier/faster access to mouse
21:14  ctruett: I've been trying to figure this out, and I've googled it; but for some reason vim running in urxvt will not show unicode characters, even apostrophes and hyphens. In my vimrc I have "set encoding=utf8" and "set fileencoding=utf8".  Any ideas?
21:14  unkanon: on a lenovo your "mouse" is on the home row
21:15  gkatsev: ctruett: can urxvt show unicode characters? is the font you are using available in unicode?
21:15  gkatsev: unkanon: yes, and I do use it sometimes, but if I need the mouse for something more than a quick move, i'd ratheruse my physical mouse.
21:15  ctruett: gkatsev: urxvt = rxvt-unicode, so yes. This font / vim / same terminal was working for a while, but something changed (possibly with a vim update?)
21:16  gkatsev: ah, hm... no clue then, sorry.
21:16  unkanon: anybody else wants to chime in on the Control+Numpad7 inoremap'ing ?
21:17  gkatsev: it's a trap?
21:17  walt: 42
21:17  gkatsev: http://www.myextralife.com/comic/admiral-snackbar/
21:22  graywh: unkanon, ctrl does nothing to the numpad keys for me
21:27  unkanon: graywh: right, that's the problem
21:27  unkanon: how do I make it act on the numpad keys?
21:27  gkatsev: can the terminal differentiate between numpad7 and ctrl-numpad7?
21:29  graywh: X can
21:29  gkatsev: and urxvt?
21:29  Zathrus: yes, but as we all know gvim generally cannot see anything that vim cannot see
21:29  unkanon: if it can, then I still need to know how to write <C-7> for the numpad 7
21:29  graywh: unkanon, in vim, you cannot
21:29  gkatsev: <C-<C-v>numpad7>?
21:30  unkanon: yeah that prints ^[[1~
21:30  gkatsev: is it different from just numpad7?
21:30  graywh: unkanon, you have numlock off
21:30  graywh: b/c that's just the basic escape sequence for Home
21:31  Zathrus: keypad7 is the designator you're looking for
21:31  unkanon: ok now I have it on, and Ctrl-7 just prints 7
21:31  Zathrus: but I still doubt it'll work.
21:31  unkanon: C-v + num pad7 now prints nothing really
21:32  graywh: unkanon, b/c it's the same as pressing ctrl-v 7
21:33  peth: afaik, you can make rxvt send custom escape sequences for keys. have fun with that though :/
21:34  unkanon: eh, I guess I'll give up on that. thanks for the help
21:35 --- sjl_ is now known as sjl
21:44  unkanon: hmm I put mappings for unicode chars in my vimrc file and it broke vim :/
21:44  unkanon: it doesn't load, I had to revert changes to vimrc to have it open again
21:45  unkanon: I'm trying to do inoremap blah <some unicode character>
21:45  danielsh: works for me
21:46  unkanon: hmm, I wonder what the problem is
21:46  unkanon: let me show you the error vim threw
21:46  unkanon: I had this in my ~/.vimrc:
21:46  unkanon: inoremap |r ┌
21:47 * danielsh copies
21:47  unkanon: and it said: Error detected while processing /home/user1/.vimrc: / E484: Can't open file ┌
21:47  danielsh: it's the |
21:47  danielsh: :help :bar
21:47  danielsh: escape it
21:47  danielsh: and see :help :r
21:48  unkanon: I have to escape the pipe, then?
21:49 * danielsh nods
21:50  unkanon: beautiful, thanks!
21:51  peth: unkanon: you'll probably want to have a look at :help digraphs-define too
21:53  peth: your ┌ is <C-K>dr
21:53  danielsh: peth: you know your quit message blinks?
21:54  peth: it *blinks*?!
21:54  unkanon: peth: ok I like it, how do I find out all the other box characters?
21:55  peth: unkanon: enter :digraphs
21:55  danielsh: peth: in konsole it blinks, in gnome-terminal it displays as two black-on-black letters
21:55  danielsh: irssi and screen
21:56  peth: unkanon: they're named mnemonically. ┌ = dr = down-right; ├ = vr = vertical-right etc
21:56  peth: danielsh: thanks for that. i set it to ^D ...
21:56  peth: didn't know it would have that effect
21:57  danielsh: I saw a /
21:57  danielsh: are you saying you set it to \4?
21:58  peth: yeah. :D
21:58  danielsh: I'll ask freenode if channel modes can be made to stop that
21:58  danielsh: (this channel is +Cc but that didn't help)
21:58  danielsh: thanks peth
21:59  unkanon: peth: thanks for making my 11 inoremaps obsolete :)
21:59  peth: danielsh: no, thank you. i expressly did that for a *sublime* effect, not freaking blinking.
21:59  danielsh: np
21:59  unkanon: peth: how is that thing down-right though? shouldn;'t that be called upper-left?
22:00  peth: i guess it's one stroke down from center and one right from center
22:00  peth: or something like that
22:00  unkanon: oh great then, I was just looking for an intution into it. I'll think of it like that from now on :)
22:01  peth: uh, s/sublime/subtle
22:07  turre: how about setting mirc_blink_fix
22:09  danielsh: doesn't help
22:10  turre: hide_colors then
22:10  danielsh: neither
22:11  turre: then you should use an irc client that can do that, or fix yours :D
22:18  danielsh: thanks for the pointers turre
22:18  danielsh: a different irc client isn't a bad option...  once I have the time to learn a new one
22:19  Kuukunen: danielsh: blinking is not a problem of the irc client
22:19  Kuukunen: it's the terminal
22:19  turre: i was kiddying. I'd imagine xchat or whatever you use would also have a similiar option
--- Log closed Mon Dec 06 22:24:29 2010
--- Log opened Mon Dec 06 22:39:57 2010
22:39 --- Users 617 nicks [0 ops, 0 halfops, 0 voices, 617 normal]
22:40  turre: i doubt very many would use tabs
22:41  mhi^: turre: well, a lot of people are abusing it and there are people who using it right. Like seperating projects or different window layouts.
22:41 --- Channel #vim was synced in 111 seconds
22:42  turre: are buffers specific to tabs?
22:42  mhi^: vimgor: buffers
22:42  vimgor: For a quick intro to vim's windows, buffers, and tabs, see http://img200.imageshack.us/img200/9031/windowsv.png and http://vim.pastey.net/115548 See also ':help tab-page-intro' and ':help windows-intro'
22:42  bairui: vimgor tabs
22:42  vimgor: Tab pages are not buffers, don't try to force them to act like buffers. Consider tab pages like viewports, layouts, or workspaces. Trying to setup 1 tab page == 1 buffer is an exercise in futility. Do ':set hidden' and get started. Get FuzzyFinder, LustyExplorer or BufExplorer to make getting around your buffers easier. See http://vim.wikia.com/wiki/Category:Tabs for more info.
22:43  turre: so you can load any buffer into any window in any tab
22:44  mhi^: yup
22:44  bairui: but expecting it to stay there is where the futility comes in...
22:44  turre: what is to stay where?
22:45  bairui: the buffer you put in a particular tab
22:45  turre: i never thought like that
22:45  turre: well, kind of i did :D
22:46  bairui: *you* are free to put a buffer in any tab you choose. So is Vim. When you're switching between buffers, Vim might shift a buffer from another tab to your current tab. That surprises some.
22:48  homekevin: Aren't tabs just like additional windows?
22:48  gkatsev: no
22:48  gkatsev: vimgor: windows
22:48  vimgor: For a quick intro to vim's windows, buffers, and tabs, see http://img200.imageshack.us/img200/9031/windowsv.png and http://vim.pastey.net/115548
22:49  gkatsev: vimgor: buffers
22:49  vimgor: For a quick intro to vim's windows, buffers, and tabs, see http://img200.imageshack.us/img200/9031/windowsv.png and http://vim.pastey.net/115548 See also ':help tab-page-intro' and ':help windows-intro'
22:49  gkatsev: vimgor: tabs
22:49  vimgor: Tab pages are not buffers, don't try to force them to act like buffers. Consider tab pages like viewports, layouts, or workspaces. Trying to setup 1 tab page == 1 buffer is an exercise in futility. Do ':set hidden' and get started. Get FuzzyFinder, LustyExplorer or BufExplorer to make getting around your buffers easier. See http://vim.wikia.com/wiki/Category:Tabs for more info.
22:49  mhi^: gkatsev: read above
22:49  gkatsev: :)
22:50  homekevin: gkatsev: That pic looks like the same thing I was saying
22:50  turre: so using a tab is like using another vim instance, but you have more stuff at buffer list
22:50  turre: :D
22:50  gkatsev: I guess it is similar
22:50  homekevin: So tabs are just a place you can have extra windows. I think.
22:50  gkatsev: but it is not the same since the registers are shared between the tabs and stuff
22:51  gkatsev: homekevin: yes
22:51  bairui: homekevin: yes, that is a better way to look at the relationship
22:51  homekevin: I mean, I understand that individual tabs aren't each exactly one window.
22:53  gkatsev: tabs are just viewports into buffers
22:53  gkatsev: though, I tend to use one buffer per tab >_<
22:54  turre: or containers for windows which are containers for buffers
22:54  bairui: ignore tabs for a minute; Vim allows you to have multiple windows, split horizontally or vertically. Within those windows, you're allowed one buffer at a time. You can have many buffers 'open' (available to be edited) at one time. You can switch between those buffers to view one in your current window split. Tabs allow all that to happen again in a new 'viewport'. Problem is, the buffer list is global -
22:54  bairui: shared across all tabs.
22:54  homekevin: I tend to use one or more window per buffer.
22:54  homekevin: No, actually zero or more.
22:54  homekevin: I'm a rebel.
22:55  graywh: around here, we recommend :set hidden
22:56  homekevin: That doesn't sound like a problem to me, bairui.
22:56  turre: must setting, but bairui: my thoughts exactly
22:56  bairui: graywh: indeed - as that's the way to switch between buffers. I was gonna mention it, but the vimgor tabs already did... :)
22:56  homekevin: Yeah, I don't use hidden. I'm not sure I "get" why it's useful.
22:57  graywh: homekevin, without it, you can't have "zero or more [window per buffer]"
22:57  mhi^: Oh, we have another factoid for that!
22:57  bairui: homekevin: using 'hidden' opens a whole new richness to Vim editing. Look into it.
22:57  mhi^: vimgor: hidden
22:57  vimgor: An option that allows you to switch the buffer being displayed in the current window without requiring that you save it first. This also allows you to keep undo/redo history on multiple files. If you don't know whether or not you want this option, you want it; it makes working with multiple files much more reasonable. See also, :help 'hidden'
22:57  graywh: unless "what you said" != "what you meant"
22:58  mhi^: :)
22:58  bairui: graywh: was that at me?
22:58  homekevin: graywh: Why not? I can have buffers in the buffer list that aren't in any window.
22:59  Zathrus: homekevin: not unless you :set hidden
22:59  Zathrus: homekevin: w/o it, the buffer is automagically discarded
22:59  homekevin: Zathrus: But I've been doing it for years.
22:59  bairui: homekevin: what does:   :verbose set hidden?   say?
22:59  homekevin: nohidden
22:59  graywh: The commands that move through the buffer list sometimes make a buffer hidden although the 'hidden' option is off: When the buffer is modified, 'autowrite' is off or writing is not possible, and the '!' flag was used.
23:00  bairui: cute... it seems like 'hidden' should just be on, and not an option.
23:00  Zathrus: homekevin: that doesn't change the fact that the buffer is *NOT* loaded. The only way to have a modified buffer that's not visible is :set hidden   (ok, there's one other way... but it effectively turns on hidden for that one buffer for one time)
23:01  Zathrus: bairui: it's not in vi, and it's not how vi works
23:01  Zathrus: bairui: feel free to go bang your head against a wall now
23:01  bairui: I remember vi. How is he these days?
23:01  homekevin: Zathrus: Who said anything about the buffer being modified?
23:01  Zathrus: homekevin: me.
--- Log closed Mon Dec 06 23:04:59 2010
--- Log opened Mon Dec 06 23:10:23 2010
23:10 --- Users 604 nicks [0 ops, 0 halfops, 0 voices, 604 normal]
23:10  bairui: there are other settings to have Vim bitch at you if you try to exit with unsaved changes; or autowrite them if that's your preference. I don't see it as a problem...
23:10  homekevin: I also habitually save, so that might be part of my general paranoia
23:11  homekevin: I used to CTRL-S constantly when I used VC++, and there was a nasty bug that could cause it to wipe out your file when you attempt to save.
23:12  homekevin: It would pop up an error, and the file would disappear from disk.
23:12  bairui: ah... baggage from your ex, eh?
23:12  turre: well, in vim you can use backup
23:12 --- Channel #vim was synced in 115 seconds
23:12  homekevin: But it was still open in the app, so you just had to hit save again.
23:13  homekevin: But the worst was, if you habitually saved (like me), and you hit save on an unmodified file, and the error was triggered, you could then close the file without re-saving and lose the whole thing.
23:13  homekevin: Yeah. I don't miss those days.
23:13  homekevin: Well, I kind of miss being 21.
23:13  homekevin: That was OK.
23:14  jerojasro: anybody here uses vim with localized error messages? I'm having trouble in getting vim to show me its messages using spanish...
23:14  homekevin: Vim no hablo espanol, eh?
23:15  jerojasro: homekevin: yeah, despite having the required files in the required places...
23:16  homekevin: I don't think I have any non-English locales installed, and I'm not sure what Vim needs for other languages, so I don't know if I can test it here.
23:16 --- sjl__ is now known as sjl
23:18  homekevin: Looks like I have Italian, French, Russian and Polish man pages, but I don't know about errors.
23:21  jerojasro: homekevin: do youo have /usr/share/vim/vim7x/lang/fr/vim.mo ?
23:21  jerojasro: (replace x with the version you have installed)
23:21  homekevin: Yeah, I have a few languages there.
23:22  homekevin: But it looks like maybe translations don't work without building the locales first.
23:22  homekevin: At least, I couldn't get the Italian manpage by just using LANG=it
23:26  homekevin: I can't figure out where the active locales are configured. I swear it's different every time I try it.
23:30  dp_: how can I search for the character under the cursor?
23:30  mhi^: *
23:31  jerojasro: that will search for the *word* under the cursor
23:31  Raimondi: mhi^: THat's word under cursor
23:31  homekevin: dp_: If it's under the cursor you've already found it. :P
23:31  Raimondi: lol
23:31  jerojasro: XD
23:31  dp_: homekevin: I need to find other instances :P
23:31  homekevin: I don't think there's a command just for that, dp_
23:32  dp_: really. interesting
23:32  bairui: yl/<c-r>"<cr>
23:33  bairui: ugly, but you could map it...
23:33  jerojasro: dp_: maybe a map:
23:33  jerojasro: yeah, like that one
23:33  bairui: ah, and it messes with your search history
23:33  jerojasro: and your default regsiter ;)
23:33  dp_: I've never used most of the "advanced" features of vim
23:34  dp_: bairui: can you tell me the actual keypresses for that? IE, what's <c-r> ?
23:34  bairui: <c-r> means control-r
23:34  dp_: ah
23:34  bairui: <cr> means <Enter>
23:36  bairui: dp_: something like:    map \l yl/<c-r>"<cr>
23:36  dp_: thanks. that worked
23:37  jerojasro: dp_: bairui is copying the char under the cursor (yl), and then starting a search (/), pasting what he just copied (<c-r>"), and launching the search (<cr>)
23:38  bairui: to the sadly departed
23:38  bairui: :)
23:38  jerojasro: darn, all that typing!!
23:38  bairui: yeah, that bites. Oh well... A quick hello to jerojasro, Raimondi and mhi^. I gotta go now too. Work. *blech*  Later, guys.
23:39 --- sjl_ is now known as sjl
23:40  subsume: [c-r]a isn't giving me the register contents but something else
23:40  subsume: what can i do?
23:41  homekevin: subsume: are you sure?
23:41  jerojasro: check that the a register has what you expect it to...
23:41  graywh: :reg
23:42  subsume: the register has a bunch of weird characters
23:42  subsume: ^[[0m
23:42  subsume: so I did 4x to grab that
23:42  homekevin: The first most likely problem is that the register doesn't contain what you expect, the next most likely is a screwy mapping.
23:42  subsume: yeah, i don't know what the heck the register contains.
23:43  homekevin: subsume: That's what :reg is for
23:43  subsume: register "" contains what it ought to
23:43  subsume: is it really ctrl+r and then a or am i doing something wrong?
23:44  homekevin: subsume: It's CTRL-R then the register name
23:44  strull_: in insert mode
23:44  homekevin: subsume: While in insert mode
23:44  homekevin: So often it will be CTRL-R "
23:44  subsume: nice
23:44  subsume: that was it, thanks
23:44  subsume: i dunno what was in a
23:44  datapimp: what is the command to take what i've highlighted in visual mode, or yanked, and pipe it to a command? i don't want the output
23:45  mhi^: (can be ex mode, too..)
23:45  homekevin: Nobody uses ex mode.
23:45  homekevin: Oh, or command mode?
23:45 * mhi^ nods
23:45  homekevin: Sure, OK.
23:45  strull_: command-line mode rather
23:45  homekevin: That might be handy
23:45  strull_: command mode == normal mode
23:46  homekevin: Right, one of the command modes.
23:46  homekevin: Vim really doesn't have enough modes.
23:46  homekevin: Bram should get on that.
23:47  homekevin: datapimp: Usually to pipe to a command (and not filter) you'd use :w !cmd
23:48  homekevin: datapimp: So if you've got a visual selection, you should be able to just type :w ! then the command, and it will fill in a range at the beginning.
23:48  homekevin: I think that should work.
23:48  datapimp: homekevin: thanks, is there a way to map that to a keystroke? i will always want to pipe a selection to a specific program i'm writing
23:49  homekevin: datapimp: You can always define your own mapping with :vmap
23:49  datapimp: homekevin: thanks, now i know what to read up on =)
23:50  homekevin: datapimp: Also, for mappings it's often good to start with <Leader>, so read up on that too.
23:50  homekevin: It helps avoid overriding built-in commands.
23:50  datapimp: homekevin: yeah i've seen <Leader> with a couple plugins i use i would love to mimic it
23:51  homekevin: I had no idea what the point of Leader was for a long time. I just avoided using it.
23:53  codeshah: I have a bunch of lines that are like : "bla.1" and I want to change them all to "bla.abcd(1)" ... but each one is say 1, 2, 3, 4, etc
23:53  codeshah: is there a way to do a search/replace while keeping that '1' variable or number dynamic
23:53  homekevin: codeshah: That's pretty easy with :s
23:53  codeshah: really? err... but how? I am used to :%s/bla/new/...
23:54  codeshah: but thats a fixed replace?
23:54  homekevin: codeshah: something like :s/\vblah\.(\d+)/blah.abcd(\1)/g
23:54  homekevin: codeshah: It's called a backreference
23:54  codeshah: oh, dang...
23:54  codeshah: :)
23:54  codeshah: I am a novice... ok let me see
23:54  codeshah: err. \d+ is a digit
23:54  codeshah: I assume \1 is backreference?
23:55  codeshah: ok, cool... thanks. I will read up more on it too
23:55  homekevin: codeshah: Right. :h /\1
23:55  datapimp: homekevin: you are a beast man.
23:55  codeshah: thanks
--- Log closed Tue Dec 07 00:00:08 2010
