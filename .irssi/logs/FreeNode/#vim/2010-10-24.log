--- Log opened Sun Oct 24 00:00:09 2010
00:02  iaj: whats a good 'tags' setting that will check all the previous directories for a 'tags' file?
00:05  etcetera: anyone, Ive tried shortmess=a, at, I
00:05  etcetera: still getting the welcome screen.
00:06  FernandoBasso: I love the welcome screen!
00:06  etcetera: using gvim on windows.
00:06  bairui: FernandoBasso: reminds you that you're not in Emacs...?
00:06  FernandoBasso: I even want a t-shirt with that welcome screen on it!
00:06  Raimondi: iaj: You could use a function+autocmd to loop up in the path
00:06  FernandoBasso: bairui: What?
00:06  bairui: FernandoBasso: nothing :)
00:07  FernandoBasso: Lorem ipsum dolor sit amet!
00:08  rson: etcetera: try shortmess+=I, just tried here and it worked.
00:09  etcetera: rson: no difference.
00:09  rson: i've got no windows to test with
00:09  fow: works here as well
00:13  Raimondi: bairui: I'm trying to support for using vim addon manager from the modified pathogen
00:13  Raimondi: trying to add*
00:13  bairui: cool
00:14  bairui: would the two systems sit side by side, or are you replacing the /bundle/ approach with VAM?
00:15  Raimondi: I'm trying to make VAM work just as what its name says, but I've hit a small ( I hope) bump when removing plugins.
00:15  etcetera: even doing vim.exe --cmd "set shortmess=at" does not do anything.
00:15  Raimondi: So, side by side, VAM would install/remove plugins and pathogen handle runtimepath
00:16  etcetera: what's the comment character for vimrc?
00:17  bairui: Raimondi: ok. cool. And the  :plugin disable   would do so only locally. We'd then have   :plugin install  and  :plugin remove   (or, uninstall?)   yeah?
00:17  Raimondi: etcetera: "
00:17  bairui: etcetera: "
00:17  DHulme: iaj: if by "previous" you mean the directories higher up in the tree, see :h file-searching (conveniently linked to from :h 'tags')
00:17  Raimondi: bairui: Yep, I added install and remove, VAM has a nice completion so I'm using that too.
00:18  bairui: cool
00:18  DHulme: etcetera: you could have found that out with :help comment
00:19  bairui: hmm... what about   :plugin list  -->   :plugin list local   :plugin list remote   (for listing uninstalled but available plugins that VAM could fetch...) ?
00:19  Raimondi: That sounds logic...
00:21  iaj: wahh thanks DHulme ..
00:21  iaj: another problem occured.. my ctags.. won't work :\ http://pastebin.com/eeiJjmsh
00:22  Raimondi: iaj: I think you're using the default mac ctags
00:23  etcetera: is there another setting that would affect shortmess?
00:23  bairui: Raimondi: is your pathogen in a stable state to pull?
00:23  Raimondi: bairui: I thought you were busy :p
00:24  Raimondi: Let me put a branch
00:24  iaj: Raimondi: oh.. which one do you use?
00:24  Raimondi: exuberant-ctags
00:24  Raimondi: iaj ^
00:24  bairui: Raimondi: :(  Let's not talk about that right now... I'm in the mood for some Vim lovin'   :D
00:25  iaj: Raimondi: hmm yeah but did you portn install it?
00:25  Raimondi: Nope, I build it myself.
00:42  rson: Raimondi: curious, what are you doing with pathogen?
00:45  Raimondi: rson: bairui and I modified it a bit to support multiple "bundle" dirs, also added persistent disabling and a :Plugin to handle things.
00:46  Raimondi: Now I'm trying to control VAM from :Plugin to install/remove plugins.
00:46  rson: Raimondi: cool.
00:48  Raimondi: Yeah, we got carried away a bit :)
00:48  bairui: nothing like a good nerd-in!  ;)
--- Log closed Sun Oct 24 01:04:35 2010
--- Log opened Sun Oct 24 01:04:58 2010
01:04 --- Users 545 nicks [0 ops, 0 halfops, 0 voices, 545 normal]
01:06 --- Channel #vim was synced in 80 seconds
01:14 --- CHOCOBY is now known as chocoby
01:22  jmcantrell: in a vim function, how would i search for a pattern in a string, do something to that match and then replace the match in the original string with the new version?
01:23  w3: i thought vim was a simple text editor
01:23  jmcantrell: w3: text editor, yes. simple, no :)
01:24  w3: does it include scripting options and such?
01:24  kongo: jmcantrell: as I said before, I think you would have to use substitute() and matchstr(), but I assume you know these functions already
01:25  jmcantrell: kongo: sorry, my computer crashed before i was able to see your answer. i was hoping whoever did answer it, would answer again. :)
01:25  w3: programming or something
01:26  jmcantrell: w3: yes, it has an array of scripting options
01:26  dindinx: w3: you can write plug-ins for vim in several languages, if it is what you mean.
01:26  kongo: jmcantrell: ah ok, what do you want to do exactly? maybe that helps
01:27  jmcantrell: kongo: i'm trying to look for a number in a line, increment it, then replace it in the original string with the incremented value
01:38  kongo: jmcantrell: that one should be easy as an ex-command like described in :h submatch()
01:39  kongo: jmcantrell: but inside a function it's probably not a oneliner
01:39  jmcantrell: kongo: yeah. i'm not concerned about it being one line
01:43  Oleg_: how do I move a line to a different position in the body of a text?
01:43  Oleg_: well, not really a text, but a program
01:43  jmcantrell: Oleg_: :help :move
01:48  kongo: jmcantrell: that obviously works only for one match per line http://pastey.net/142010
01:49  jmcantrell: kongo: that helps though. thanks :)
02:54  Rakko: Does Vimscript have something like Perl's qw(...)?
02:54  strull: no
02:55  Raimondi: What does that do on perl? just curious.
02:55  strull: it quotes each word in a list
02:55  Rakko: e.g. if you write qw(foo bar baz) it expands it into a list of strings "foo" "bar" "baz"
02:56  Raimondi: You want them quoted or just a list of strings?
02:59  Raimondi: Quoted: use map(), just a list: use split()
03:02  Rakko: just strings
03:02  Rakko: oh yeah. thanks
03:13  Rakko: does source use runtimepath?
03:13  Rakko: I'm trying to source something as 'scripts/setcolors.vim' and it does exist under vim's CWD
03:13  Rakko: but source doesn't find it
03:14  Raimondi: Rakko:  :h :runtime
03:14  Rakko: oh, thanks
03:15  Raimondi: np
03:16  Rakko: even with that it isn't sourcing... but no error either
03:18  Raimondi: Rakko:  :2verbose runtime scripts/setcolors.vim
03:18  Raimondi: Rakko: Why scripts? hsouldn't that be plugin?
03:18  Rakko: no, I made the scripts directory for scripts that I don't necessarily want loaded on startup
03:19  Rakko: oh, I put '' around the name
03:20  Raimondi: Rakko: There are some examples on :h :runtime
03:25  int3__: hi
03:25  int3__: I'm facing a strange bug in the ubuntu distribution of vim
03:26  int3__: I'm currently trying to implement the mapping described here:
03:26  int3__: http://twitter.com/jonbho/status/2194406821
03:27  int3__: but when I add that line to my vimrc, vim starts to behave weirdly
03:27  int3__: namely, whenever I open a file and press j, the first two lines get deleted
03:27  int3__: and I get put in insert mode
03:28  int3__: pressing l deletes just one character and puts me in insert mode as well
03:29  int3__: however, if I press some other keys before j or l, vim seems to work fine
03:29  Rakko: int3__: are you sure you have the 'vim' package and not 'vim-tiny'?
03:29  int3__: the problem only arises right after I start vim up
03:29  int3__: yeah vim --version shows 'Huge version with GTK-GNOME GUI'
03:29  int3__: *GTK2-GNOME
03:30  Raimondi: int3__:  :verbose map l
03:31  int3__: No mapping found
03:31  int3__: I've established that the problem arises even if I just use 'nnoremap <esc> <esc>'
03:31  int3__: without anything else in my .vimrc
03:31  int3__: and with the default /etc/vimrc given by ubuntu
03:32  int3__: and if I remove runtime! debian.vim from /etc/vimrc
03:32  int3__: it works fine
03:32  int3__: so I figure the conflict lies somewhere between debian's config files and that command
03:32  Raimondi: I tend to agree with you :)
03:33  int3__: no idea how to further debug it though
03:33  Oleg_: so
03:35  bairui: Rakko: out of curiosity, I do exactly the same - I have a scripts dir for snippets that haven't made it into plugins yet.
03:36  Rakko: cool
03:36  Rakko: in this case it's a plugin I only run in gui vim. I don't know if there's a better way to do that.
03:38  strull: Rakko: :if has("gui_running")
03:38  bairui: Rakko: you can use the standard plugin guard  (g:plugin_loaded). Set it in your vimrc when not running the gui.  use  if has('gui-running')
03:39  strull: not sure if gui-running also works (- vs _)
03:39  Rakko: ok
03:39  Rakko: bairui: replace "plugin" with the name of the plugin?
03:39  bairui: yep
03:39  bairui: have a look in the plugin to make sure that it implements that guard
03:39  bairui: it should - all good plugins do
03:39  bairui: strull: good catch - my bad
03:40  Rakko: ruby ftplugin takes 0.368390 s to load
03:41  Rakko: wonder if it can be optimized
03:42  Rakko: ah, most of that is in the line let s:ruby_path = system("ruby -e '" . s:code . "'")
03:42  Rakko: so I guess it's just ruby being slow :(
03:44  bairui: I gotta go now. Later, guys.
03:44  Rakko: zai jian
03:44  Rakko: or however that's spelled
03:44  bairui: :) - you're right
03:48  Rakko: what would &l:path be?
03:48  Rakko: I didn't know you could use & with variable names like that
04:00  Rakko: I found out I can hard-code my rubypath in .vimrc
04:00  Rakko: and it speeds up ruby ftplugin drastically
04:00  Rakko: but the path is 6K long!
04:01  Rakko: and it won't change as I install gems... hmm
04:09  vaxerdec: raimondi, kongo, fow: fyi, same behavior with current (7.3.34)
04:40  Raimondi: vaxerdec: Well, why don't you send a report to vim_dev?
04:42  phf: i'm opening a file that's about 4 mil lines, with some lines 65k long. i have "noswapfile, nowrap, undolevels=-1, syntax off", but vim is doing /something/ because it takes a few seconds to actually finish opening. what else can i toggle to make it instant open?
04:43  Raimondi: vaxerdec: It's weird, I wonder what might be involved there...
04:48  vaxerdec: phf: try: ":set secure noswapfile nobackup nowritebackup noshelltemp viminfo= history=0"
04:49  vaxerdec: phf: maybe undolevels=0 too?
04:50  vaxerdec: phf: maybe try "binary tw=0" too? start with vim -b?
04:51  phf: let's see
04:51  vaxerdec: also you could try vim -R ?
04:52  vaxerdec: vim -n
04:59  vaxerdec: phf: ah undolevels=-1 yes, instead of =0
04:59  Rakko: geez, I was having trouble with vim being slow only having 6K worth of stuff on one line
04:59  vaxerdec: phf: i wonder if it's parsing for line count or something
04:59  jdhore: How can i select something in the quickfix window, but not switch the focus to the main window/buffer?
--- Log closed Sun Oct 24 05:05:42 2010
--- Log opened Sun Oct 24 05:06:06 2010
05:06 --- Users 539 nicks [0 ops, 0 halfops, 0 voices, 539 normal]
05:06  vaxerdec: i agree there should be a way
05:06  vaxerdec: but there may not be
05:07 --- Channel #vim was synced in 77 seconds
05:08  vaxerdec: hm, i remember running into this before
05:09  Maahes: what command can I use to show the current syntax? I'm having a hard time finding it in the syntax help file
05:10  vaxerdec: Maahes: "set syntax?"
05:11  Maahes: vaxerdec, well that sets syntax, or at least it's supposed to. I'm having a weird issue where its not using the right syntax no matter what I set. I've tried setting it to syntax=ruby and syntax=ruby.vim but its using some other syntax
05:11  vaxerdec: Maahes: huh? no
05:11  vaxerdec: Maahes: ":set syntax?"
05:12  vaxerdec: Maahes: try ":set ft=ruby"
05:12  Maahes: oh hey now it's finally working. Weird.
05:13  vaxerdec: Maahes: yes that caught me for a while too.  the other one is indentexpr
05:13  vaxerdec: Maahes: think of filetype as a superset of syntax.  it sets syntax as one of the many things for a filetype
05:14  vaxerdec: phf: i did ":se tw=0<enter>65000ithis <esc>" and it's been going already a couple of minutes
05:15  vaxerdec: vim does not seem to work very well on files with long lines
05:18  phf: vaxerdec: oh that looks like i should, right? you're actually doing an insert command like 65k times. it takes a few seconds to load my file, but then actual modifications are snappy. like, dW d] cW type stuff is instantaneous
05:19  vaxerdec: phf: yes, well, the same thing with tw=72 comes back fairly soon
05:19  phf: ah, hmm
05:19  vaxerdec: phf: with tw=0 and it's still going several minutes later
05:19  phf: might be allocation strategy
05:20  vaxerdec: that sounds likely
05:22  vaxerdec: phf: it's doing strlen() on the line every time after one of the inserts
05:23  vaxerdec: interesting that it does not keep track
05:23  phf: heh. how is the buffer implemented though? it might be like a linked list of lines or something like that
05:23  vaxerdec: it does the insert, then strlen() on the new line, and then malloc()
05:24  vaxerdec: then does memmove()
05:24  vaxerdec: so it's actually copying the whole line into a new buffer every single time
05:25  vaxerdec: so vim must every time any operation is done on a line actually put the new copy of the line into a new buffer.  perhaps this makes sense given undo
05:26  vaxerdec: hah, it crashed vim
05:26  phf: interesting
05:26  vaxerdec: terminal says "Trace/breakpoint trap"
05:27  phf: :>
05:27 --- _mathrick is now known as mathrick
05:28  phf: not much docs on vim internals online, and i ain't gonna pull the source
05:29  phf: i suspect that line count might be fundamental to operation though, so while i can edit everything pretty fast (haven't tried saving yet though), loading is going to take a second or two :/
05:29  vaxerdec: phf: have you tried tracing it to see what it's doing?
05:29  vaxerdec: i.e. ltrace?
05:30  vaxerdec: ltrace -Sfp or something while it's slow in load
05:31  vaxerdec: assuming you have a few seconds to grab the pid while you're waiting
05:31  vaxerdec: i am trying out this persistent undo stuff
05:31  phf: am on os x, so my only option is dtrace, which is powerful but painful
05:32  vaxerdec: phf: i'm sorry.
05:33  phf: my days of powerusering are behind me, plus linux tries to be a desktop so much, i don't really see the point no more. i used to run fvwm/xterm/xli type software, but these days everything pulls like half gnome. and don't get me started on dbus or any other of freedesktop evilness </rant>
05:34  vaxerdec: phf: that's distro dependent
05:34  vaxerdec: phf: i agree with you totally, but you don't have to use that stuff.
05:35  vaxerdec: phf: i just run on straight fbcon most of the time myself.  but using fedora.
05:37  vaxerdec: phf: you don't need any of that stuff installed.  it's convenient to be able to run it though when you need a program.  i gave up fighting that and trying to not install things.  i started with 200 packages, installed things as needed and somehow i have 2189 packages now and it's only a few months later...
05:37  vaxerdec: phf: at least you don't have to keep it running though
05:38  vaxerdec: phf: all that dbus stuff is junk, i agree.
05:38  vaxerdec: phf: dbus and gconf, reminds me of windows
05:39  vaxerdec: phf: but i mean, isn't mac worse as far as that goes?
05:41  Rakko: Raimondi?
05:48  phf: vaxerdec: it is, but i don't feel the need to think about it :)
05:48  vaxerdec: hey this persistent undo stuff is neat
05:50  phf: before linux got overrun by hordes of unwashed windows masses and corporate committers in the early 2000s with that whole "lunix on desktop" nonsense, i felt like the entire system belonged to me, because the entire code from toolset to kernel was straightforward to hack on and, how do i put it, no nonsense?
05:50  vaxerdec: phf: mmm.  well there's that philosophy.  most people that want that just use ubuntu i thought
05:52  Raimondi: Rakko?
05:52  vaxerdec: phf: it's true.  but that kernel of stuff is still there.  like i said, just don't use that stuff if you don't like it, i mean redhat core is same as it was for redhat 3.5.  the desktop junk is just on top of it.
05:52  Rakko: Hey, Raimondi. What does it mean when you put & in front of an l:var?
05:53  Raimondi: No idea, do you have an example?
05:53  mathstuf: hi, is there a simple way to source all files in a directory? (splitting my vimrc over separate files is the goal)
05:54  vaxerdec: phf: there's arch linux too, i think that's for people with that general philosophy
05:54  Raimondi: mathstuf: Add the directory to runtimepath and use :runtime to source them all.
05:55  mathstuf: Raimondi: it does asciibetical order i assume?
05:55  Rakko: Raimondi: in ftplugin/ruby.vim
05:55  Rakko: I think the thing was &l:path
05:56  Raimondi: Rakko: Maybe that's for local options, haven't play with that.
05:56  Rakko: Never heard of those. Hmm.
05:57  Raimondi: mathstuf: What do you mean?
05:57  Raimondi: Rakko: :h :setlocal
05:57  phf: vaxerdec: you don't see it as pervasive though? i started feeling like all this stuff started spreading into my tools at some point too, but then i'm not a fan of things like gtk, xft, xinerama, so i'm not a good measure :)
05:58  mathstuf: Raimondi: hmm, looking at the :help for rtp, its not really what i want
05:58  Rakko: oh, setlocal. now it makes sense.
05:58  phf: the point is, i gave up on the idea of a personal desktop, so i outsource these decisions to apple now :D
05:59  vaxerdec: phf: it's pervasive if you use it :) you don't have to use it
05:59  Raimondi: mathstuf: Would a 'for' loop help?
05:59  vaxerdec: phf: what is a "personal desktop?"
05:59  mathstuf: what i have in my zshrc is: for file in $ZSHDOTDIR/config; do source $file; done
05:59  mathstuf: i suppose system("ls") would work
05:59  Raimondi: mathstuf:  :h glob()
06:00  mathstuf: Raimondi: ah, thanks :)
06:01  Raimondi: np :)
06:01  vaxerdec: ack, 21:00 already
06:01  Raimondi: 23:00 here
06:01  mathstuf: 0000 here
06:01  phf: east coast mofos
06:07  etcetera: can you collapse xml trees in vim (with a plugin maybe)?
06:37  Rakko: etcetera: http://www.vim.org/scripts/script.php?script_id=1438
06:43  vaxerdec: is this channel logged anywhere, i need something for bug report but stupidly exited my client
06:44  Raimondi: What do you need? vaxerdec
06:44  Raimondi: I have a private log, does that help?
06:45  vaxerdec: Raimondi: i'm looking for the behavior mentioned earlier that was not consistent with what i saw but still a bug, i think user 'fow' or something
06:45  vaxerdec: Raimondi: he said cursor jumped ahead of parenthesis or something
06:47  vaxerdec: uh time, let's see... probably after 20101023120830 pacific
06:47  vaxerdec: that's when you told me i think to try -N -u none
06:47  Raimondi: vaxerdec: http://vim.pastey.net/142013
06:48  vaxerdec: and i started hg clone at 20101023123059 and that was after he said it
06:48  Raimondi: Let me know if you need more.
06:49  vaxerdec: that's it, thanks.
06:50  vaxerdec: Raimondi: wait, it didn't repeat for you on 7.3.19?
06:52  Raimondi: Nope and I think it didn't repeat for fow.
06:52  Raimondi: But the cursor was move to the right of )
06:52  Raimondi: moved*
06:52  vaxerdec: i think maybe it always works that way and there were some people doing it differently.  i think i actually said how to reproduce it wrong by one character.  when you do the paren, you have to put a space after the "of"
06:52  Raimondi: Which is wrong.
06:52  vaxerdec: "of the emergency"
06:52  vaxerdec: not "ofthe emergency" which i think is what i said
06:53  vaxerdec: it's probably reproducible on a much smaller line actually, with lower tw
06:53  vaxerdec: hm i bet it's the formatoptions thing that puts two chars after a space
06:54  Raimondi: The text doesn't matter, I just used a lot of q
06:54  vaxerdec: it matters to make sure we are all typing the same thing
06:56  Raimondi: Sure, I agree.
06:56  jeffszusz: evening
06:56  Raimondi: Hi, jeffszusz
06:57  iaj: Raimondi: short question shouldn't let g:loaded_delimitMate=1  prevent the plugin from loading?
06:57  Raimondi: iaj: Yes, I hope :)
06:58  Raimondi: IF set on the vimrc
06:58  iaj: Raimondi: I set it on vimrc.. and sourced it
06:58  Raimondi: Not nice... let me check
06:59  iaj: even checked :let g:load_delimitMate but its still mapped to ( 
06:59  iaj: :imap (
06:59  iaj: and its still functional as well ;-)
07:00  vaxerdec: Raimondi: it works with just: "se tw=10<enter>10iq<esc>i" and then you can press as many spaces as you want
07:00  vaxerdec: Raimondi: it puts the one 'q' on the next line
07:00  vaxerdec: er, need fo+=a
07:01  Raimondi: iaj: It works for me
07:01  vaxerdec: Raimondi: but that looks less like a bug because it's a string with no spaces
07:01  Raimondi: vaxerdec: let me ckech
07:01  iaj: Raimondi: strange :
07:01  iaj: Raimondi: omg a reload of vim was fruitfulo
07:01  iaj: sorry about that!
07:02  vaxerdec: so "se tw=10 fo+=a<enter>10iq<esc>i" then spaces
07:02  Raimondi: np ;)
07:03  Raimondi: Still doesn't repeat, keeps moving the cursor to the right though.
07:04  vaxerdec: that's weird, i'm tempted to build your version
07:06  vaxerdec: hey i just noticed "fo-=an" does not take off both 'a' and 'n'
07:10  Raimondi: I expected it would.
07:23 --- _mathrick is now known as mathrick
07:24  vaxerdec: er, i joined vim_dev and sent mail to vim_dev@googlegroups.com but it didn't seem to post
07:25  Raimondi: vaxerdec: I think it's a moderated list, the mods don't take long, give it some time
07:26  vaxerdec: ah yes, it says "messages from new members are moderated"
07:26  vaxerdec: seems like a reasonable policy
07:27  Raimondi: Yep, keeps spammers in check.
07:27  vaxerdec: Raimondi: a shotgun would also work well.
07:28  Raimondi: That's definitively more effective, might be hard to implement though...
07:31  vaxerdec: Raimondi: just blast everyone that does RCPT TO a user that doesn't exist.
07:33  Raimondi: That would be suicide, please let me know when Google groups implement it :)
07:33  vaxerdec: smtpd_recipient_restrictions = blast_unauth_destinations
07:34  Raimondi: I thought you meant _real_ shotguns :)
07:34  Raimondi: I read around that google groups has a serious problem with spammers
07:36  Rakko: can't imagine that
07:36  Rakko: I wish Araxia were around
07:36  Rakko: I'm having trouble with my KR4MB binding
07:36  vaxerdec: Raimondi: who doesn't
07:37  Raimondi: True enough :(
07:37  vaxerdec: google spam filters are excellent though
07:38  vaxerdec: for email
07:38  vaxerdec: rarely a false-anything
07:38  Raimondi: I supose that's why people complain about its groups filtering, they expect the same there...
07:39  vaxerdec: i think they have done incredible job with spam filters.  i tried my best at one site using all the techniques available and wasn't even close to the success rate
07:40  vaxerdec: spamassassin, greylisting, all the postfix spam limiters
07:40  vaxerdec: you can keep eeking out a little more but then you deal with falses.  or just move to google apps and you're done.
07:48  tmr: vaxerdec, I've had few false positives, which means google spam filters pretty much suck.
07:49  Raimondi: YOu'll get false positives everywhere.
07:50  Raimondi: I'd say that "few false positives" is actually good.
07:50  tmr: I've yet to see false positive with my sa setup and only one or two spams get to my inbox.
07:50  tmr: Single false positive is bad.
07:51  Raimondi: I agree it's bad, but it doesn't mean the service provider is doing a bad job.
07:51  Raimondi: But what do I know?  :)
07:53  tmr: It wouldn't be that bad if you could disable whole filtering.
08:01  vaxerdec: i get false positive with google like twice per year
08:02  vaxerdec: out of many thousands of emails and like tens of thousands of true positives
08:03  vaxerdec: spamassasin blows in comparison even with all the bells and whistles.  not even on the same level IMO
08:03  Xenguy: !fuckthecloud
08:04  vaxerdec: Xenguy: yeah, you've a point there.
08:04  Xenguy: ;-)
08:04  Raimondi: Wait, Xenguy was negating the expression...
08:05  vaxerdec: but who is going to be able to prime their statistical filters better than google
08:05  Xenguy: where's vimgor when I need him/her?
08:05  vaxerdec: any single site cannot do it.  they don't push billions of emails
08:05  Raimondi: vimgor: Where are you?
08:05  vimgor: Dunno!
08:05  Xenguy: vimgor fuckthecloud
08:05  vimgor: Wish I knew!
08:05  Xenguy: meh
08:06  int3__: hi
08:06  Xenguy: vimgor learn fuckthecloud is You don't need a bloodsucking corporation to mediate your communications and data transactions
08:06  vimgor: Gotcha!
08:07  Xenguy: ;-)
08:07  vaxerdec: !fuckthecloud
08:07  Raimondi: vimgor: learn fuckthecloud
08:07  vimgor: Somebody said learn fuckthecloud is You don't need a bloodsucking corporation to mediate your communications and data transactions, Raimondi
08:07  Raimondi: :)
08:07 * Xenguy whistles innocently...
08:07  vaxerdec: so google is blood sucking?
08:07  int3__: I'm looking for a mini buffer explorer much like minibufexpl, but that doesn't increment the numbering for readonly buffers
08:08  int3__: any recommendations?
08:08  vaxerdec: yeah vim buffer numbering sucks
08:08  Maahes: I suck at vim commands yet, does anyone know a command for inserting two blank lines every arbitrary number of lines?
08:08  Xenguy: vaxerdec: nah, they're just evil (in spite of their mantra)
08:08  vaxerdec: Maahes: use awk
08:09  Maahes: .....I was hoping someone wouldn't say that =(. *has never used awk*
08:09  Raimondi: Maahes: Have you tried a macro?  something like  10j2o<Esc>
08:09  vaxerdec: Maahes: or use q
08:09  int3__: hmm so this is an unsolved problem?
08:09  Maahes: hrrm, that's a good idea, I have not yet used macros in vim
08:09  vaxerdec: int3__: i heard there are many in the universe.
08:10  Raimondi: int3__: Do you want that to keep the buffer number consecutive?
08:10  int3__: sigh okay
08:10  int3__: yeah
08:10  Raimondi: Not posible, without re-opening Vim
08:10  vaxerdec: vim should auto-renumber buffers to be contiguous imo
08:11  int3__: ): okay
08:11  Raimondi: :b partialname<tab> is a great help.
08:12  int3__: Raimondi: hmm I guess that'll have to do
08:12  int3__: second question.. what's so wrong about using tabs to edit multiple files at once? I've seen a number of sites saying how doing so would deprive me of the advantages of buffers
08:12  Raimondi: vimgor: tabs
08:12  vimgor: Tab pages are not buffers, don't try to force them to act like buffers. Consider tab pages like viewports, layouts, or workspaces. Trying to setup 1 tab page == 1 buffer is an exercise in futility. Do ':set hidden' and get started. Get FuzzyFinder, LustyExplorer or BufExplorer to make getting around your buffers easier. See http://vim.wikia.com/wiki/Category:Tabs for more info.
08:12  int3__: but I'm not very clear what these advantages are..
08:13  Xenguy: thanks Raimondi
08:13  Xenguy: fixed
08:13  Raimondi: Xenguy: Good :)
08:13  int3__: yep, I understand what vimgor just said about the difference between tabs and buffers
08:13  int3__: but I don't understand how the difference is significant
08:13  Raimondi: int3__: Mostly because that will break no matter what you do.
08:14  Raimondi: Vim's tab are not designed to work like that.
08:14  int3__: how might they break?
08:15  vaxerdec: how about: awk -v arbitrary=3 '{print; if (NR % arbitrary == 0) printf("\n\n");}'
08:19  Rakko: I like tabs
08:20  macrobat: int3__: just use tabs, when you edit +20 files it will be easier to use buffers instead
08:20  Rakko: as far as I can tell, the problem with tabs is that certain commands change the buffer shown in a given tab
08:28  vaxerdec: hmm i can come close using sed with: sed 1~3G (if 3 is the "arbitrary number") but that's only one newline
08:29  vaxerdec: oh maybe sed -e 1~3G -e 1~3G ? there must be a better way.
08:30  vaxerdec: well, close enough.
08:31  Raimondi: vaxerdec: Just us a macro! :p
08:31  Raimondi: s/us/use
08:31  vaxerdec: Raimondi: but it's not programmatic
08:33  vaxerdec: you can do sed -e 1~3G\;1~3G
08:33  Maahes: well damn, it looks like I'm not using cream anymore, too bad, I rather liked it (I've been using cream in expert mode)
08:34  Rakko: why not?
08:34  Maahes: it starts a new file in ~/.vim you :cd ~/some_place/else and then :w, it still writes to .vim
08:34  bairui: hehe... cream in expert mode... what an oxymoron. :)
08:35  Raimondi: vaxerdec: No idea, what's programatic?
08:35  vaxerdec: "modern configuration of the vim text editor" eh? i guess everyone else is obsolete?
08:35  Raimondi: ^ LOL
08:35  vaxerdec: Raimondi: serious? you're asking what "programmatic" means?
08:36  Maahes: bairui, normal vi{m} mode then, the extra context items and default use of Zenburn is why I started using it. but there's no real support specific to cream available other than the mailing list
08:36  Raimondi: vaxerdec: Why do say macros can't be programmatic?
08:36  Raimondi: do you*
08:37  bairui: mahlon: Well, let me be the first to welcome you over to real Vim. :)
08:37  vaxerdec: Raimondi: it's just a recording
08:37  vaxerdec: Raimondi: what's programmatic about that?
08:37  bairui: vaxerdec: you can execute them a number of times... you can even make them recursive...
08:38  vaxerdec: bairui: yes but they are just playbacks, they aren't instructions in a higher level construct
08:38 --- dhruvasagar_ is now known as dhruvasagar
08:38  Maahes: bairui, thankya ^_^
08:38  bairui: Maahes: welcome :)
08:38  bairui: vaxerdec: well, horses for courses... if you can get away with a macro, don't write a function...
08:38 --- dhruvasagar is now known as dhruvasagar_
08:39  vaxerdec: bairui: yes, there's that
08:39  vaxerdec: bairui: but it's for the elegance
08:39  bairui: ah... that's a *different* concern ;)
08:39  vaxerdec: bairui: the beauty of logic
08:39  Raimondi: vaxerdec: I kind of see where you're going. I'm not that educated on programming concepts :)
08:39  vaxerdec: bairui: yes, i often waste time when i should not.  it's true
08:40 * bairui was resisting the urge to comment :D
08:40  bairui: but I've been known to polish my, er, code... more than I should too. :p
08:40  vaxerdec: Raimondi: if my dict server worked i could get formal definition but for some reason 216.93.242.2 is not responding on 2628
08:41  Raimondi: vaxerdec: np, I'll look it up somewhere ;)
08:42  vaxerdec: i can't figure out where 'dict' gets its server names from
08:42  vaxerdec: it appears to be hardcoded
08:43  vaxerdec: alt0.dict.org
08:43  vaxerdec: well, foo.  where can a guy get a working 'dict' server these days?
08:44 --- dhruvasagar_ is now known as dhruvasagar
08:45  bairui: I run my own... I thought everyone did...
08:45  Rakko: when doing completion, how do I dismiss the menu without inserting any text?
08:46  vaxerdec: bairui: dict.tu-chemnitz.de works
08:46  bairui: cool
08:46  vaxerdec: but does not contain 'programmatic'
08:46  vaxerdec: i suspect they aren't linked to all the dictionaries
08:49  vaxerdec: Rakko: helpgrep wildmenu.*abandoned
08:49  bairui: Rakko: ctrl-e
08:50  bairui: Rakko: :help popupmenu-keys
08:50  Rakko: thanks
08:50  bairui: np
08:50  Rakko: you would think that it would show ^E under the menu, where it shows ^N/^P
08:51  bairui: plenty of room for it too...
08:55  macrobat: hmm, wikia looks different...
08:56  vaxerdec: Rakko: it doesn't show ctrl-y either
--- Log closed Sun Oct 24 09:04:49 2010
--- Log opened Sun Oct 24 09:05:12 2010
09:05 --- Users 523 nicks [0 ops, 0 halfops, 0 voices, 523 normal]
09:06  Rakko: night
09:06 --- Channel #vim was synced in 77 seconds
09:06  bairui: g'night, Rakk... oh...
09:17  Maahes: what the hell? I suddenly lost ctrl+space
09:19  Raimondi: Maahes: That happens sometimes, Ctrl uses to be on the lowest row of keyslook over the left extreme, the long bar is space, now, press Ctrl and, without releasing Ctrl, press space. ;)
09:20  Maahes: Raimondi, no, it's copying whatever character I have the cursor on, its not doing any completion at all
09:21  Raimondi: Maahes: Have you checked for a mapping?
09:22  Maahes: Raimondi, I have no mapping override in my .vimrc
09:23  Raimondi: Where did you set Ctrl+space for completion?
09:34  Maahes: Raimondi, I didn't. I had been using it for completion in cream, I didn't think it had to be specifically set in your .vimrc? I fixed it just now by using a remapping that combined normal keyword completion with omnicompletion, but It's just weird that it stopped working
09:35  Raimondi: Oh! You're referring to Cream, this is not the best place for that :)
09:35  Raimondi: vimgor: cream
09:35  vimgor: Cream is a fork of the vim project that tries to make vim simpler to use by hiding its modality. It is off topic here, as it's sufficiently different from vanilla vim that our gurus aren't likely to be able to help much with it. http://cream.sf.net (See also win32-patched)
09:36  Raimondi: I have never played with that beast myself :)
09:41  Maahes: Raimondi, I'm no longer using cream, it has a bug that's a deal breaker.
09:42  Maahes: But If it didn't have that bug I think it's pretty nice when its turned on to normal vim mode.
09:43  Raimondi: I guess you'll get used to vanilla vim soon enough ;)
09:43  Maahes: new question: I have 5 paragraphs of lorem ipsum copied into my system's clipboard, pasting into vim using ctrl "*P causes it to put each paragraph onto one line, is there a way to fix this?
09:44  Raimondi: ctrl "*p  is that the actual command?
09:44  Maahes: yep
09:44  Maahes: ctrl "
09:44  Maahes: the rest without ctrl
09:47  Raimondi: Can't find it in the help, on which mode do you use that command?
09:48  Raimondi: Maahes: See  :h 'paste'
09:52  Maahes: pastemode didn't fix the paragraph problem
09:53  Raimondi: Maybe the text is stored differently in the clipboard?
09:55  macrobat: why ctrl "? isnt " enough?
09:56  macrobat: Maahes: it may originally be in lines, but wrapped. by default vim doesnt wrap lines. you can toggle that
09:57  tuyetnga: wrap is simply very bad
09:58  tuyetnga: macrobat, dit me may
09:59  tuyetnga: :-)
09:59  macrobat: tuyetnga: fancy seeing you here
09:59  tuyetnga: Maahes, I dont like qwerty
09:59  tuyetnga: love to see you here too
10:00 * macrobat tries to grasp the english language
10:01  tuyetnga: macrobat, why ?
10:02  macrobat: hmm, yes exercises in futility
10:15  Zolrath: Hmm
10:15  Zolrath: Is there a command that shows what is binding a key?
10:15  Zolrath: I just tried to bind ESC to ESC and :noh but it is removing a tab from the line instead
10:15  Raimondi: Ubuntu?
10:17  Zolrath: I'm in Windows
10:18  Zolrath: I just figured there would probably be a vim command that you point at a key and it tells you what set it to its current command
10:18  Raimondi: There was a guy trying to use a similar mapping
10:18  Raimondi: But he was on ubuntu
10:19  Zolrath: As esc was already removing a tab from the current line before I tried the new mapping but I don't know whats setting it to that and its overwriting my binding
10:20  Raimondi: :verbose map <esc>
10:20  Zolrath: Thank you very much sir
10:20  Raimondi: np
10:27  Zolrath: Weird, it's saying I'm mapping esc to << in _vimrc but I don't see that at all and it doesn't appear when I /<<
10:46  Zolrath: okay well I moved the binding to the bottom of _vimrc and it works now
10:46  Zolrath: so the :noh binding for esc works quite well
10:47  Zolrath: Now I just have to move that binding around to see WHAT is secretly binding my esc key without me knowing
10:47  DHulme: first you should go to your vimrc and take out everything you don't understand
10:49  Zolrath: I've been going through it from top to bottom and trying to figure out exactly WHY whats in there is in there
10:49  Zolrath: Removing things if I dont agree with them
10:49  Zolrath: Though I suppose adding things in as I decide they are needed is a more valid technique
10:49  DHulme: Why is there anything in there if you don't know what it's for? Has someone else been editing your vimrc?
10:51  Zolrath: I tried adding in things from a vimrc that are more rails specific
10:51  Zolrath: And I figured out what was causing the binding
10:52  DHulme: Copying someone else's vimrc is the number one way to confuse yourself.
10:52  Zolrath: as C-[ also does esc
10:52  Zolrath: C-[ being bound to << rebound ESC
10:53  DHulme: We get so many people in here who've copied some bizarre setting without understanding it and then get unexpected behaviour.
10:53  DHulme: I'm glad you've found it.
10:58  Zolrath: Is there any way to separate esc from Ctrl-[?
10:58  Zolrath: As binding one rebinds the other
10:58  Zolrath: My google powers seem to be failing me
11:02  DHulme: no, they're the same thing in a terminal
11:03  DHulme: because the keyboard used to create exactly the same code for both
11:12  Zolrath: Makes sense
11:13  Zolrath: Thats probably something you'd only be able to achieve in Cream and I'm trying to stay as platform independent as possible
11:14  DHulme: I doubt Cream is any different in this regard. It's just Vim with a few extra patches and a different default configuration.
11:17  spiiph: You could use gvim
11:18  spiiph: Hrm, no, doesn't matter.
11:24  Zolrath: Yeah I'm in gvim
11:24  Zolrath: Thank you very much for your help
11:25  Zolrath: Its still very refreshing to go into an IRC channel and actually see people helping each other
11:25  DHulme: ha
11:25  DHulme: It shouldn't be at all surprising!
11:58  nate-: hey guys, I've got vim 7.3 installed on my ubuntu 10.10 machine and it's being rather slow since upgrading vim from 7.2
11:59  nate-: how do I figure out the reason for the slowness?
12:00  nate-: might start by testing each plugin separately
12:00  FernandoBasso: nate-: First, start with no plugin at all.
12:01  FernandoBasso:  (--noplugin)
12:01  nate-: sure thing
12:02  nate-: yep, the problem is definitely a plugin
12:04  nate-: I can tell just by splitting into a few windows and navigating between them all... the delay is gone
12:05  minh: FernandoBasso: Just out of interest...is there also a option to prevent vim reading any vimrc?
12:05  FernandoBasso:  -u none
12:05  FernandoBasso: and -U none for ~/.gvimrc.
12:06  minh: FernandoBasso: thank you very much
12:06  FernandoBasso: :)
12:06  nate-: weird thing about my problem, it only happens with gvim, I use MacVim at work and it's fine
12:07  minh: I did know about the -u option... always did something like vim -u /dev/null for that purpose
12:07  FernandoBasso: vim --help ☺
12:07  nate-: gah, just found the culprit plugin... rails.vim
12:07  nate-: some I definitely need enabled
12:08  nate-: something*
12:08  FernandoBasso: nate-: Perhaps you should contact the author and tell about the problem so that he/she can fix it.
12:08  minh: nate-: how about contacting the developer of rail.vim?
12:08  nate-: I'll file a bug report on github
12:08  nate-: weird that it doesn't happen on MacVim though
12:09  FernandoBasso: Yeah.
12:09  nate-: oh well, can't hurt to report
12:09  nate-: cheers for the help FernandoBasso
12:10  FernandoBasso: nate-: Also vim_use on google groups.
12:10  FernandoBasso: This channel is amazing, but sometimes thy are asleep. :)
12:10  FernandoBasso: s/thy/they/
--- Log closed Sun Oct 24 13:04:55 2010
--- Log opened Sun Oct 24 13:05:23 2010
13:05 --- Users 545 nicks [0 ops, 0 halfops, 0 voices, 545 normal]
13:06 --- Channel #vim was synced in 80 seconds
--- Log opened Sun Oct 24 14:30:22 2010
14:30 --- Users 547 nicks [0 ops, 0 halfops, 0 voices, 547 normal]
14:31 --- Channel #vim was synced in 72 seconds
--- Log opened Sun Oct 24 15:08:11 2010
15:08 --- Users 550 nicks [0 ops, 0 halfops, 0 voices, 550 normal]
15:09 --- Channel #vim was synced in 73 seconds
--- Log closed Sun Oct 24 15:31:15 2010
--- Log opened Sun Oct 24 15:31:37 2010
15:31 --- Users 549 nicks [0 ops, 0 halfops, 0 voices, 549 normal]
15:32 --- Channel #vim was synced in 71 seconds
15:41  agib|home: does anyone know how I would assign the value of :lcd to a variable within a function?
15:44  rson: agib|home: the value of lcd? do you mean pwd?
15:44  rson: agib|home: if so, getcwd()
15:45  agib|home: rson: ok I'll use that -- but in general is there a way to do something like "let a = getcwd()" but for commands like :lcd?
15:45  rson: lcd is a command, there is no value associated with it
15:46  agib|home: but it returns a value, no?
15:46  rson: i don't believe so, it echos the directory you moved to
15:46  the_isz: agib|home: i don't think so. commands probably only produce output.
15:46  rson: i supposed you may be able to capture that
15:46  agib|home: ahh
15:47  agib|home: ok I guess in most cases there will be a function like getcwd for what I would want to do
15:47  agib|home: thank you
15:54  agib|home: Hmm ok so I'm trying to define a couple of mappings and it doesn't seem to work: https://gist.github.com/809485a9980a689d1f17
15:54  agib|home: <leader>U doesn't do anything when I open vim
15:56  agib|home: and <leader>P just pastes a bunch of junk to my buffer
16:04  agib|home: do I need <SID>s or something?
16:07  johntramp: hi.  how can i specify a different colorscheme for gvim and vim?
16:08  iaj: johntramp: use  if has('gui_running')
16:13  luisgrin: hi, i have actually kind of reg expresion question, i need to find every line that is like ....       facturar a xxxxxx codigo 140101 fecha 12/12/2010 where only facturar codigo fecha are the words im interested and the others are parameters
16:13  johntramp: iaj: cool, got it working now. thanks
16:14  luisgrin: but facturar codigo AND fecha must be in sequence
16:15  the_isz: luisgrin: i need more information on this. so facturar and codigo are fixed strings, but what can the other fields look like? for instance the 'a' field or the '140101'. is 'fecha' fixed, too?
16:16  the_isz: luisgrin: "^facturar . .\{6} codigo \d\{6} fecha \d{2}\/\d{2}\/\d{4}" you may want to start from there, but like i said, for a better attempt i need more info
16:36  FernandoBasso: Why people do that?
16:40  minh: FernandoBasso: do what?
16:41  FernandoBasso: People ask something, don't give enough information, receive help anyway, and leave the channel without even telling if it worked or not...
16:42  minh: FernandoBasso: oh yeah...I hear you
16:44  FernandoBasso: Do you *hear* me?
16:44  minh: FernandoBasso: I think this is mainly due to two reasons: 1) poor social behaviour and 2) not being interested in vim that much..i.e. they just want it to work and really don't want to know anything of the background
16:45  minh: FernandoBasso: english isn't my mother tongue - sorry! "I hear you" == I get your point
16:45  FernandoBasso: minh: Isn't mine either. I guessed that you really wanted to mean 'to understand your point of view'.
16:46  minh: right
16:47  urlwolf: getting word count per line, not per file, and show it at the beginning of each line. possible?
16:49  FernandoBasso: I also think that sometimes people hear that "vim can do this and that" (but they use other editor/IDE) and then they seem to come here just ask of how to accomplish that specif task and they they can go back use their editor or something. It seems like that some times.
16:50  luisgrin: im back with reg expresions
16:51  FernandoBasso: urlwolf: V g^g
16:51  FernandoBasso: hahaha
16:51  luisgrin: i must find some patron like  bill to pepe material code 14154545 date 2010-12-12
16:52  luisgrin: the main words ... the patron is;  bill to material code AND date
16:52  luisgrin: the other words are values
16:53  luisgrin: bill to // material code // date
16:54  DHulme: luisgrin: what have you tried so far?
16:54  luisgrin: im going crazy with this docs :(
16:54  luisgrin: i was trying to read
16:55  luisgrin: but...
16:55  luisgrin: cant
16:55  luisgrin: reg expressions are very hard to learn
16:55  luisgrin: and i know they are powerfull
16:55  luisgrin: so, i would need some example to go further
16:56  lericson: Hi, is there a way to navigate through the buffer list in order of "last shown in this window/split"? Essentially a browser-like back button behavior is what I want.
16:56  lericson: :bn and :bp don't quite do it at all, their ordering is rather spontaneous
16:56  DHulme: lericson: not quite what you're asking for, but I think you'll find ":help jumplist" helpful
16:57  DHulme: luisgrin: so you're looking for a vim regular expression tutorial?
16:58  luisgrin: maybe, actually some example i think would be enough
--- Log closed Sun Oct 24 17:04:48 2010
--- Log opened Sun Oct 24 17:05:08 2010
17:05 --- Users 548 nicks [0 ops, 0 halfops, 0 voices, 548 normal]
17:06 --- Channel #vim was synced in 73 seconds
17:08  minh: Just out of interest: Do you guys also use non-interactive ex-scripts from time to time?
17:10  minh: lately I've been ofen using that instead of the regular sed-approach...
17:19  Raging_Hog: minh: that might be useful when vim chokes on a file of enormous size. stream editors can handle it but I enjoy using the same regex as in my editor of choice
17:21  minh: Raging_Hog: sure...but nowadays ex basically IS vim, right? so the regexes are the same as well
17:22  Raging_Hog: yeah, that's what I meant. Using vim/ex instead of sed
17:22  minh: Raging_Hog: cool :-) that's what I tried to say :-D
17:24  Raging_Hog: You're right, I was a bit off implying that vim/ex isn't a stream editor. The important thing is that both of us are right and others are wrong
17:25  minh: hahahaha
17:27  minh: Raging_Hog: I see, you're quite familiar with that stuff (whereas I'm a total newb). A few minutes ago somebody asked how to prepend each line of a file with it's character-count
17:27  minh: Raging_Hog: I answered g/^/exe "normal I" . strlen(getline("."))
17:27  minh: Raging_Hog: can you give me any improvements on this? (e.g. avoiding the "normal")
17:28  Raging_Hog: minh: :%s/^/\= strlen(getline("."))/
17:29  Raging_Hog: and I pay my respects, you're certainly a total newb if you can device what you said
17:29  Raging_Hog: *certainly not a total newb
17:30  minh: Raging_Hog: yeah...that's what I was thinking..."doing %s with an expression as a replacement" But I totaly forgot the syntax to "replace with the output of a command"
17:30  minh: Raging_Hog: so the syntax for this is '\= ', right?
17:31  Raging_Hog: it's hidden in the help. You need to summon advice with   :h sub-replace-\=
17:31  minh: Raging_Hog: awesomely elegant solution...thanks a million
17:31  minh: alright
17:31  FernandoBasso: luisgrin: I am a beginner at regex myself.
17:32  minh: Raging_Hog: speaking of help (which opens in a horizontal split by default) - i totally love <C-w>T to make it its own tab :-)
17:36  Raging_Hog: minh: but can you put it back to a split window?
17:36  minh: Raging_Hog: the last days...I planned on writing a function to do just that... - but to answer you question: no, I don't know of a native-command to do that
17:39  FernandoBasso: Hmm. I was not aware of ^w T to make the help a tab...
17:39  Raging_Hog: minh: yes, there wasn't a way to do that at least some time ago. I aksed that in this very channel, and a master called Heptite answered me that he summoned a plugin to do that  http://christianrobinson.name/vim/Tabmerge.vim
17:39  minh: FernandoBasso: well...I has nothing to do with "help"...it's merely "open that buffer in a new tab"
17:40  FernandoBasso: minh: yeah. But as I have never used tabs, the really helped me now!
17:40  FernandoBasso: I know nothing about tabs.
17:40  FernandoBasso: Now, I need to know how to change tabs without the mouse.
17:41  minh: FernandoBasso: I use tabs ALL the freaking time...you just have to do prober shortcuts for switching
17:41  FernandoBasso: I do use buffers and splits, but never used tabs up to two minutes ago. ☺
17:41  minh: FernandoBasso: I have <C-n> and <C-p> for switching tabs
17:41  minh: FernandoBasso: splits and buffers can be perfectly combined with tab usage
17:41  FernandoBasso: Interesting. Indeed!
17:42  minh: don't confuse vim-tabs with the tab-concept you know from other programs...in vim, a tab is just another windows (that is, multiple buffers reside WITHIN a window)
17:42  Raging_Hog: vimgor: tab
17:43  vimgor: Tabs are evil. They're also 8 spaces wide, always. Do not change 'ts' ever, since many output devices (web pages, printers, etc) will always print a tab as 8 spaces wide.
17:43  FernandoBasso: minh: And when you have pop up options, how do you navigate beteween them if you use ^n and ^p to change tabs?
17:43  Raging_Hog: vimgor: tabs
17:43  vimgor: Tab pages are not buffers, don't try to force them to act like buffers. Consider tab pages like viewports, layouts, or workspaces. Trying to setup 1 tab page == 1 buffer is an exercise in futility. Do ':set hidden' and get started. Get FuzzyFinder, LustyExplorer or BufExplorer to make getting around your buffers easier. See http://vim.wikia.com/wiki/Category:Tabs for more info.
17:43  iaj: when you got several buffers open - and currenty view one in one window but want to open up another one, which is already in the bufferlist to appear in verticalsplit to the right - how would you do so?
17:43  minh: FernandoBasso: popup-options?? what do you mean by that?
17:44  FernandoBasso: minh: Like when whe have omni completion or using things like ^x ^f to complete paths and filenames. I navigate through the option with...
17:44  minh: Raging_Hog-vimgor-spawner: exactly :-)
17:44  Raimondi: iaj: :vsplit should do what yuo want...
17:44  FernandoBasso: ^N and ^P
17:45  minh: FernandoBasso: oh...well...completion only takes affect in insert mode...tab-switching is restricted to normal mode
17:45  FernandoBasso: minh: Yeah. You are deadly right.
17:45  Raimondi: minh: To commandline mode?
17:46  minh: FernandoBasso: but yeah - you got a point there...in fact, i use text-completion AND tab-switiching all the time...both with <C-n> , <C-p>
17:48  minh: but it's no problem distinguishing them, because you're in a totally different way of thinking once in normal mode
17:48  minh: FernandoBasso: anyway...just map :tabn / :tabp to whatever you want
17:48  FernandoBasso: I'm noticing the the tab I'm currently on is always the far-right one. Is it possible to change this behavior?
17:48  minh: FernandoBasso: there's also some other neat functions like tabfirst, tabmove N ...
17:48  minh: FernandoBasso: tabm N
17:48  minh: FernandoBasso: e.g. :tabm 0
17:49  iaj: Raimondi: yeah but how can I select a buffer thats gonna be vertical splitted to the right?\
17:49  iaj: -/
17:49  minh: FernandoBasso: speaking of tabs... vim -p *c will open all c-files in your dir, EACH one in its one tab...but then again, tabs should not be used as buffers
17:49  FernandoBasso: minh: Thanks.
17:49  minh: FernandoBasso: tabclose (i mapped that to 'cc')
17:50  FernandoBasso: minh: Okay. Thanks. I'm pretty aware of the difference between tabs and buffers, though. Rest assured.
17:51  FernandoBasso: For example, I can have three tabs with the same buffer, like the same file with three splits showing three different parts of the files. Right?
17:53  Raimondi: iaj:  Doesn't :vsplit filenamehere   do that?
17:53  iaj: i cant :vsplit <tab> :/
17:53  Raimondi: iaj: Did you try? :p
17:53 --- vim is now known as Guest96671
17:53  iaj: well it only gives me filenames, can't I use buffers?
17:53  Raimondi: Wait, didn't see the cant part
17:53  DHulme: iaj: you can :vert sbuf <tab>
17:53  iaj: I ment buffers no new files :\
17:54  Raimondi: Oh!
17:55  iaj: DHulme: where can I find out about that sbuffer flags?
17:55  iaj: thanks thats working tho
17:55  DHulme: it's not a flag, it's a separate command :h :vert
18:00  iaj: oh i see, thanks :)
18:04  Raging_Hog: FernandoBasso: that is very correct
18:06  FernandoBasso: So, I am now officially graduated in Vim buffers vs tabs high school, which enables me to use tabs without feeling guilty. ☺
18:11  FernandoBasso: I'm wondering, if there is a package of themes for xterm only, because that color sample pack is mainly for the gui.
18:12  FernandoBasso: Not themes, but colorschemes.
18:14  tmr: vimgor, csapprox
18:14  vimgor: CSApprox is a plugin written by godlygeek to make GUI-only colorschemes Just Work in 88-/256-color terminals. It can be downloaded at http://www.vim.org/scripts/script.php?script_id=2390
18:15  Raging_Hog: I was just typing that, tmr!
18:15  tmr: Raging_Hog, !
18:15  FernandoBasso: I've tried that plugin. It is cool! Indeed.
18:16  FernandoBasso: Anyway, I'm still curious about xterm specif color schemes.
18:16  FernandoBasso: http://github.com/KevinGoodsell/vim-xterm-colors#readme
18:16  urlwolf: Minh: thanks
18:28  urlwolf: minh: that was actually char length, but I guess I can find a similar function to split words. Is this vimscript?
18:28  FernandoBasso: urlwolf: Has left the channel.
18:49  dob1: hi, i have some problems writing groovy scripts
18:50  dob1: the identation on vim is not correct, consider this http://pastebin.com/TKDXHK1J, after writing the text i select the text and the = to ident the code and this is the result
18:50  dob1: the lines other than the first are wrong
18:54  minh: dob1: what about that? http://www.vim.org/scripts/script.php?script_id=2961
18:55  minh: dob1: I'm no groovy-hacker myself but from what I've read that should do the trick
18:57  dob1: minh: yes it did, thanks
18:57  FernandoBasso: How can we paste the result of this :%s/[^ ]\+//gn at the beginning of lines?
18:57  minh: dob1: good to hear! no problem
18:57  minh: dob1: there's a nice syntax-file as well: http://www.vim.org/scripts/script.php?script_id=945
18:58  minh: FernandoBasso: what exactly do you want to accomplish?
18:59  FernandoBasso: minh: To count the words, and put at the beginning of each line, as urlwolf was asking. I'm taking that to study.
18:59  FernandoBasso: That expression actually counts space-separated words.
19:06  urlwolf: FernandoBasso: hmm, seems to be counting chars here...
19:07  FernandoBasso:  :%s/[^ ]\+//gn  <-- this is counting chars?
19:07  urlwolf: FernandoBasso: sorry, I meant mihn's solution
19:08  FernandoBasso: urlwolf: Oh, the one with strlen() ?
19:08  urlwolf: FernandoBasso: correct
19:08  minh: FernandoBasso: quick and dirty first try: g/^/ s/^/\= len(split(getline("."), '\s'))/
19:09  minh: FernandoBasso: I hope it does what you expect it to...let me know if there's anything to improve
19:09  urlwolf: FernandoBasso: this is doing exactly what I wanted, thanks
19:09  urlwolf: where do you learn vimscript? the help pages?
19:09  FernandoBasso: This what? I din't give any solution?
19:10  FernandoBasso: urlwolf: I'm myself reading usr_27.txt, pattern and usr_41.txt
19:10  urlwolf: minh: sorry, it was your solution, not Fernando's the one that worked
19:10  minh: urlwolf: no problem :-)
19:10  minh: glad it did!
19:11  FernandoBasso: minh: yeah. That works. Great. Now:
19:11  urlwolf: I know perl, but regex in vim has always surprised me one way or another :)
19:11  minh: urlwolf: just out of curiousity: what do you use that line-length/word-count stuff for?
19:11  urlwolf: FernandoBasso: I need to split a long txt file in 300word chuncks
19:11  FernandoBasso: What about that earlier expression to count words I showed? Is it possible to use that instead?
19:12  minh: urlwolf: yeah..it's trivial in perl...I'm a perl-hacker myself...BUT it's VERY VERY good to be able to do it in vim (since you don't have to leave the editor)
19:12  urlwolf: with some manual juggling, to make chunks be more-or-less coherent
19:12  urlwolf: but vim's implementation of regex is ... weird
19:13  urlwolf: sometimes it's faster to do perl oneliner than to find all the cases where vim differs from perl
19:13  Raging_Hog: you guys talking about being newbies, and here I am struggling to get that count... grrr. But to make myself look better I must point out that minh's suggestion counts the spaces, not words
19:13  minh: urlwolf: no, vim's regex flavour isn't weird at all..it's just not modern PRE (perl RE)
19:14  minh: vim's regex flavour is actually very similiar to ed's, sed's and grep's
19:14  minh: Raging_Hog: right
19:14  minh: Raging_Hog: I do split at \s at the moment...
19:15  minh: Raging_Hog: how about splitting at \< ?
19:15  minh: let me try this
19:15  Raging_Hog: minh, regarding vim regex: sorry, yes. Vim's regex is actually officially extremely weird to us children of the 80's, who have mosly used perl/PCRE
19:15  minh: alright: g/^/ s/^/\= len(split(getline("."), '\<'))/
19:16  minh: Raging_Hog: I'm a 1985 as well :-)
19:16  Raging_Hog: minh: you don't need the start of that. This should do the job as well  :g//s/^/\= len(split(getline("."), '\<'))/
19:17  minh: Raging_Hog: but I do know both PRE and the more traditional flavours, so vim-regex is not a problem at all...and after all you can use \v anytime! (== 'very magic')
19:18  minh: Raging_Hog: your right - dump that ^ ;-)
19:18  Raging_Hog: regarding the g: command: unless your file has lines in it which have no starting area.  Then you need to see several movies directed by David Lynch
19:24  urlwolf: could this be used with a \n\n separator, instead of relying on a default \n in getline? that's $\='\n\n in perl
19:24 --- keitaro62 is now known as keitaro62`miam
19:31  Raging_Hog: urlwolf: can you tell me how I can replicate your dilemma? I don't speak perl much
19:32  minh: urlwolf: yeah..I do know perl...and don't get your question either
19:32  urlwolf: Raging_Hog: instead of splitting line by line, I want the separator between 'chunks' to be a blank line, that is \n\n instead of \n
19:33  urlwolf: a line is defined as anything that ends with \n
19:33  urlwolf: I want to redefine that to \n\n
19:33  urlwolf: perl has a built-in variable for that, I think it's $\
19:33  minh: I don't get it...in vim-RE you consider a blank line as '^\s*$'
19:34  Raging_Hog: urlwolf: you want to count the amount of not-blank lines?
19:34  minh: urlwolf: ahh...you're talking about the default-line seperator
19:34  minh: urlwolf: to make things easier...what's your situation and what do you want to accomplish?
19:35  urlwolf: actually, it'd be $/. if you assign $/=\n\n then printing a string to stdout would add \n\n. and parsing from stdin would split lines using \n\n
19:35  urlwolf: quick reference: http://www.perlmonks.org/?node_id=353259
19:36  minh: urlwolf: one again: what do you want to accomplish?
19:36  urlwolf: minh: let me do a pastie...
19:36  minh: alright
19:37  urlwolf: minh: http://www.sabayon.org/pastie/4985
19:37  urlwolf: this comes from antiword
19:38  urlwolf: as you see, it has paragraphs of different length
19:38  urlwolf: I want to merge smaller ones so they are all say 300 words on average length
19:38  urlwolf: and split longer ones
19:38  urlwolf: this is done 'by hand'
19:38  urlwolf: so an editor that can compute paragraph length is handy
19:39  urlwolf: I started with sentence length, but I now realize that paragraph length would be better
19:39  urlwolf: (by hand because paragraphs need to be coherent; no program can do this; at least not something I can wipe up in a day :) )
19:42  Raging_Hog: sorry, I've had a few beers too much. What was it exactly that you wanted to do? If you just wanted it to look pretty, you can use :set textwidth=120  and gggqG
19:43  urlwolf: Raging_Hog: hehe
19:43  DHulme: no, you can't add a feature like that without patching the source
19:43  minh: urlwolf: just visual mark the paragraph and enter '<,'>s,\%V\<,,gn
19:43  DHulme: it's easy enough to add word-count at the start of each line, but it won't update, and it'll screw up all your para-joining
19:43  urlwolf: Raging_Hog: no, it's not about formatting width. it's about slicing the text in some constant size chunks, say 300 words
19:44  DHulme: probably better to set a custom 'statusline' that shows the word count of the line the cursor is on
19:44  minh: urlwolf: that will count all 'word-beginnings' within a visual-selection
19:44  urlwolf: DHulme: that's a good idea
19:45  minh: DHulme: I thought urlwolf needs wordcount/paragraph? We already solved wordcount/line charactercount/line
19:45  DHulme: maybe I misunderstood: I thought the input he got was one para per line
19:46  DHulme: I've not really been paying attention
19:46  urlwolf: minh is correct
19:46  urlwolf: DHulme: the input is all over the place.
19:46  minh: urlwolf: did you try '<,'>s,\%V\<,,gn
19:46  urlwolf: There's a pastie a few lines up.
19:46  urlwolf: minh: that's a good solution
19:46  DHulme: TBH in your position I'd just do it by eye
19:47  urlwolf: a bit laborious, but not bad
19:47  urlwolf: DHulme: I came to the same conclusion
19:47  minh: urlwolf: you can accomplish it quite trivially by writing a simple vim-function...but it's not that easy to get it perfectly right with a vim-oneliner-cmd
19:49  urlwolf: minh: yep. Thanks. I'll do it 'by eye' more or less. Thanks for the efforts
20:14 --- keitaro62`miam is now known as keitaro62
20:16  Jetien: Hi, this problem is driving me crazy. I want vim to save the viminfo file elsewhere, not in my home. But a set viminfo+=nC:\foo in my vimrc seems to not alter the 'viminfo' option in any way. I'm on win7
20:24  godlygeek: Jetien: so after that command, what does   :verb set viminfo?   print out?
20:25  Jetien: viminfo='100,<50,s10,h,rA:,rB:
20:26  Jetien: Last set from C:\Program Files (x86)\Vim\_vimrc
20:26  Jetien: which is the default value for viminfo
20:26  Jetien: on windows
20:26  Jetien: there is no error message, the "set viminfo foo.." is simply ignored, no matter how simple i keep it
20:27  Jetien: i tried "set viminfo='200" - no effect
20:28  Jetien: i tried to alter the default value, no effect
20:43  Whoop: Hi, it appears stuff I place in ~/.vim/autoload/ isn't being automatically loaded.  Anyone any ideas why and/or how I can debug this?
--- Log closed Sun Oct 24 21:05:59 2010
--- Log opened Sun Oct 24 21:06:21 2010
21:06 --- Users 554 nicks [0 ops, 0 halfops, 0 voices, 554 normal]
21:07 --- Channel #vim was synced in 74 seconds
21:17  tasslehoff: I'm trying out vim for python editing, and have enabled basic completion. It works well for the standard library and within my own files, but when I have more files in on dir, it doesn't complete. Do I have to add the current directory to the python path, or is there another solution to this?
21:24  Whoop: I think you're looking for ctags tasslehoff?
21:27  tasslehoff: Whoop: perhaps. what I'm using now is omnicompletion, which mostly works well.
21:35  tasslehoff: It was just a matter of appending my source folder to the python path.
21:37 --- sudarshan is now known as progs
22:00  Walt: I have functions in lua in the form foo:bar. This makes C-] fail, since it either goes to the tag foo, or the tag bar. Does anyone have an idea of how to solve this_
22:00  Walt: Which does not involve writing a custom mapping for C-]
22:03  rudi_s: Walt: Maybe set isk+=: helps.
22:05  gf3: ahoy
22:06  gf3: how do I show things that are set, e.g. wildignore?
22:07  Walt: rudi_s, thanks, seems to work okay
22:08  rudi_s: np
22:08  Raging_Hog: gf3:  include the question mark  :set wildignore?
22:08  rudi_s: gf3: :set wildignore?
22:08  gf3: okay, thanks guys
22:08  Raging_Hog: rudi_s: I was first!
22:08  rudi_s: Sorry ;-)
22:10  Raging_Hog: I'm just kidding, I'm not really evil.
22:12  rudi_s: :-)
22:13  FernandoBasso: After I do substitutions like :%s:\D: :g the mathes stay highlighted. How to avoid that?
22:13  minh: Raging_Hog: back in town!
22:13  rudi_s: FernandoBasso: :set nohl
22:13  FernandoBasso: rudi_s: I actually have a <c-l> map for that.
22:13  rudi_s: But that should only happen if you've enabled 'hls' somewhere (and I didn't know this happened for :s as well).
22:14  FernandoBasso: I mean, after the substitution, if there is a way to make it not let the matches highlighted, since I'm substituting rather than just searching.
22:15  FernandoBasso: I have hlsearch in $HOME/.vimrc
22:16  FernandoBasso: And have this helpful map -> :nnoremap <silent> <C-l> :nohlsearch<CR><C-l>
22:18  FernandoBasso: I wonder if most people have hlsearch enabled by default.
22:18  infid: is there a way to make it so after i :bd, ctrl-6 doesn't reopen the file?
22:19  FernandoBasso: infid: :bwipeout ?
22:19  infid: :bw yeah
22:19  infid: thanks
22:24  bosie: i am new to vim but shouldnt g^ bring me to the start of a line?
22:24  FernandoBasso: infid: :bdelete is still shown if you do :ls! or :buffers!
22:25  FernandoBasso: bosie: gg would.
22:25  minh: bosie: it's just 0 (^ will bring you to the first char of the line)
22:25  bosie: i thought gg brings me to the first line of the document?
22:26  bosie: minh: thanks. but g^ brings me to just another column.
22:26  bosie: i am in 265
22:26  bosie: and g^ brings me to 250
22:26 --- k23z__ is now known as spetrea-home
22:27  rudi_s: bosie: :h g^
22:27  rudi_s: :h 0
22:27  rudi_s: :h gg
22:27  bosie: oh thanks
22:27  rudi_s: np
22:27  bosie: screen line. there you go
22:30  bosie: and one other thing i couldn't find. what does <Leader>t mean? what key is <Leader>?
22:30  minh: bosie: the default leader key is \
22:31  minh: bosie: <Leader>t in this case means hitting \t
22:31  bosie: hm ok thanks
22:34  rudi_s: bosie: :h <Leader> ;-)
22:34  rudi_s: The help knows everything.
22:35  rudi_s: Well, almost.
22:36  iaj: :he whenwilliberich gives nothing:(
22:39  bosie: rudi_s: yes but i thought my modifier key would be what most call modifier key
22:39  infid: FernandoBasso: :bd doesn't show up in :ls for me ever
22:39  infid: oh :ls!
22:39  bosie: since it din't work with \
22:39  FernandoBasso: Yeah. !
22:39  infid: never used that before
22:40  rudi_s: bosie: "modifier key", I thought you were looking for <Leader>?
22:40  bosie: rudi_s: yes and google said it is meant as the personal modifier key ;)
22:41  rudi_s: Ah, I see. First try Vim's help ;-)
22:41  rudi_s: iaj: That's what the "almost" is for ;-)
22:41  iaj: :p :p
22:42  infid: FernandoBasso: if :ls! shows a buffer like 4u h- "windows.txt"  how do i jump back to it? :b4u doesn't work
22:42  iaj: :he quickfixtelekom is not working as well :\
22:42  infid: oh :b4
22:43  rudi_s: infid: Yep. :h:ls tells you what's the meaning of u.
22:43  rudi_s: iaj: Yeah :-/
22:43  iaj: ^^
22:44  infid: pretty cool. thanks
22:44  rudi_s: np
22:45  rudi_s: Always try Vim's help first, it's really great (best documentation I know).
22:51 --- progs is now known as sudarshan
22:53  FernandoBasso: I am not that much happy with vim.
22:53  FernandoBasso: It can't cook.
22:54  infid: when would be a good time to use :bad
22:55  iaj: FernandoBasso: true dat :\ we still need women
22:55  infid: cause women are personal chefs?
22:55  infid: sexist :P
22:59  FernandoBasso: What is that world var vi on youtube?
23:06  abstrakt: anyone know if there's a vim syntax file for the django templating language?
23:06  FernandoBasso: http://www.vim.org/scripts/script.php?script_id=1487
23:06  FernandoBasso: The first match on google:
23:07  minh: FernandoBasso: I did the same thing - you were about 1 second ahead of me ;-)
23:07  minh: hahaha
23:07  FernandoBasso: ☺
23:23  kenda: how can i disable the highlighting of the opening/closing bracket under cursor?
23:26  FernandoBasso: kenda: set matchpairs-={:} <-- But perhaps this is not what you want...
23:29  kenda: FernandoBasso: i thought there would be a single option, but thats ok. it works, thanks!
23:29  FernandoBasso: kenda: Also, :highlight MatchParen ctermbg=none ctermfg=none
23:29  DHulme: kenda: see :help matchparen
23:30  DHulme: that has the single option you want
23:30  DHulme: (only it's not an option, but a variable, since the highlighting is implemented as a plugin)
23:30 --- SolarisBoy is now known as CreamySolaris
23:31  kenda: DHulme: perfect :)
23:31  kenda: thank you
23:44  ku0n: hello
23:46  ku0n: Is it possible to set some "hook" on save?
23:46  ku0n: like somscript.sh myfile
23:46  ku0n: each time I save
23:51  rson: ku0n: :help autocmd
23:51  FernandoBasso: ku0n: What do you want to accomplish?
23:51  spiiph: ku0n, :h BufWritePre, :h BufWritePost
23:52  ku0n: thanks all:)
23:53  ku0n: FernandoBasso: nothing, just wondering.
23:53  ku0n: Might be handy someday.
23:53  FernandoBasso: That is funny! Really! 'might be handy someday'.
23:54  ku0n: sarcasm?
23:54  FernandoBasso: I think you are making a research to decide if vim is worth it. But this is just a wild guess. hehe
23:54  ku0n: err no, been using vim for 2 years now, quite happy with it
23:54  FernandoBasso: ku0n: Oh. Great.
23:55  ku0n: still need to get proper ctag configuration, but overall I'm happy
23:55  FernandoBasso: Don't get mad at me please. I was just kidding.
23:55  ku0n: Ho, I'm very mad, I'm fuming with rage:P
23:56  FernandoBasso: Okay. :)
--- Log closed Mon Oct 25 00:00:49 2010
