--- Log opened Fri Jan 14 08:48:30 2011
--- Log closed Fri Jan 14 08:48:30 2011
--- Log opened Fri Jan 14 08:53:49 2011
08:53 --- Users 561 nicks [0 ops, 0 halfops, 0 voices, 561 normal]
08:55 --- Channel #vim was synced in 81 seconds
09:04  bairui: Axioplase_: here's my lame attempt. http://vim.pastey.net/144847  . At the very least, it might show you what not to do.   :p   I have to fun now. Good luck! :)
09:05  Axioplase_: bairui: thanks. It's not a hardcoded motion then. That's what I was asking. But thanks for the code, I'll use it as a base.
--- Log closed Fri Jan 14 09:16:01 2011
--- Log opened Fri Jan 14 09:26:23 2011
09:26 --- Users 558 nicks [0 ops, 0 halfops, 0 voices, 558 normal]
09:27 --- Channel #vim was synced in 78 seconds
10:02  the_isz: hehe... always funny to see people joining this channel via the emacs OS^^
10:09  iaj: gnaa--- does someone know of a way to be able to edit osx's mail.app messages in vim?
10:22 --- silex is now known as Silex
10:35  Silex: what's the vim command to escape \ into \\ for filenames?
10:35  Silex: I thought it'd be fnameescape but it's something else
10:35  Silex: do I have to simply substitute() it?
10:35  Silex: (I'm writing a plugin)
10:37  the_isz: Silex: there's escape(), but it's not specific to file names...
10:38  Silex: the_isz: okay, thanks. Btw, how do I use a ' char inside a 'foo' string? I thought it'd be simply \' but it's not
10:39  strull: its ''
10:41  Silex: interesting, so let foo='this doesn''t look very intuitive' ?
10:41  Silex: yes it's that
10:41  Silex: thanks!
11:39  Silex: DirDiff plugin... is there anything vim isn't AWESOME for?
11:39 * Silex upgrades from vim fan to evangelist
11:40  strull: Silex: wrong channel, join #emacs
11:40  babilen: Silex: chatting on irc maybe? (but i consider that a good thing)
11:40  Silex: strull ;)
11:40  babilen: yeah, you are preaching to the choir here :)
11:40  Silex: babilen: actually with ConqueTerm plugin, as you can run irssi inside vim :)
11:41  babilen: Silex: That's still irssi ...
11:41  Silex: shush let me live in my delusion
11:41  Silex: :)
11:46  Dynetrekk: Silex: wow! (ConqueTerm, that is)
11:46  Dynetrekk: Silex: now, vim is an operating system too
11:47  Dynetrekk: I can finally run emacs in vim :P
11:47  Silex: Dynetrekk: yeah... ConqueTerm is pretty wow
11:47  Silex: discovered it 2 days ago
11:47  Dynetrekk: Silex: nice combo with bpython for python development
11:47  Silex: it's nice for anything that requires a console
11:47  Silex: e.g I imagine editing bash scripts to be ridiculously easy now
11:48  Dynetrekk: a decent language should have an interpreter, and it's nice to do that in a vim window
11:48  Silex: start a term inside vim, start with some input and do all your commands on it until it work
11:48  Dynetrekk: right, then remove the extra garbage and you're done
11:48  Silex: then edit the term windows using vim removing wrong comamnds and shit, :w foo.sh, done
11:48  Dynetrekk: right
11:48  Silex: looks sexeh
11:49  Dynetrekk: \like[+1]{conqueterm}
11:51 --- jhoepken is now known as jhoepken|aw
11:55 --- jacobat_ is now known as jacobat
12:11  thrope: hi - I am setting up a windows workstation and moved my vimrcs and .vim tree from linux/mac machines
12:11  thrope: the first problem is I cant get ruby working
12:12  thrope: I have official binary from vim.org which :ver says has dynamic ruby 1.9.1
12:12  thrope: I installed ruby 1.9.9, but I get E320 cant find ruby dll error
12:12  thrope: can anyone help me get this working?
12:14  thrope: its E370: Could not load library msvcrt-ruby191.dll
12:16  Silex: thrope: add C:\Ruby\bin to path
12:16  Silex: (and make sure you see that dll in that path to validate you installed the correct stuff)
12:16  thrope: ah cool
12:16  thrope: thanks
12:16  _jgr: How do I copy text from one terminal into a vim session?
12:16  _jgr: in another terminal*
12:17  Silex: _jgr: you mean with mouse?
12:17  thrope: Silex: how do I add a path on windows (sorry) - and do I need to log out?
12:17  Silex: s/mouse/clipboard/
12:17  _jgr: Silex: yes
12:17  Silex: _jgr: + is the clipboard register, so "+p
12:17  _jgr: thanks
12:17  Silex: _jgr: * is the "middle mouse button" register
12:18  Silex: if you use that feature
12:18  thrope: Silex: it worked! thanks so much
12:18  Silex: thrope: right click my computer, advanced, environment variables
12:18  Silex: add to the PATH variable there
12:19  Silex: no need to reboot
12:19  thrope: now I need to get git, and ctags
12:19  thrope: does anyone know windows binaries for these that work with vim scripts?
12:19  Silex: thrope: I'm using dropbox as my automagic vim config importer
12:20  Silex: so installing vim on a new box is a matter of installing dropbox and copy-pasting a single .vimrc on the new machine
12:20  Silex: and then tada my full vim config is directly working
12:20  thrope: yep - I have my vim config is svn
12:20  thrope: problem is this is first windows machine I set up in a while
12:20  thrope: so I have to install all the tools
12:41 --- MinceR_ is now known as MinceR
13:02  madmac2501: there is someway to make vim autoformat code?
13:02  madmac2501: not just autoidenting
13:03  bosie: what could be the reason that C-w j will get me to the quicklist (from a window right on top of it), but when i remap C-j to C-w-j it doesn't.
13:04  cubuanic: madmac2501: depending on language. for html, xml and friends, use tidy. for perl, use perltidy. for others, try to find formatters. just usual "unix way"
13:04  strull: bosie: C-w-j is not a valid in vim
13:04  madmac2501: cubuanic, do you mean to use an external program?
13:05  bosie: strull: C-w and then j
13:05  strull: bosie: be precise !!
13:05  bosie: strull: didn't know there was a difference
13:05  cubuanic: madmac2501: yes
13:06  madmac2501: cubuanic, fo-table can be used for source code?
13:06  cubuanic: what is fo-table?
13:06  madmac2501: cubuanic, :help fo-table
13:07  cubuanic: are you propose me reading help to help you? may be, you'll read it yourself? :)
13:07  abhijeet: how can i copy the line from gvim to gnome
13:07  madmac2501: cubuanic, you asked what is fo-table
13:08  abhijeet: there is copy option in windows but it is not there in the linux gvim
13:09  cubuanic: you asked me "is fo-table can be used", and then propose read help for it. i don't know about fo-table and have no time to read help. so answer yourself, please
13:09  madmac2501: cubuanic, ok, thanks
13:18  the_isz: thrope: you're still here?
13:19  rson: bosie: show us your mapping
13:21  bosie: rson: nmap <C-j> <C-w>j<CR>
13:22  rson: bosie: no need for the <CR>, that is probably throwing it off
13:22  rson: bosie: i just tried :nnoremap <C-j> <C-w>j and it worked fine
13:23  rson: it's probably switching to the qf window, then immediately jumping to whatever was hilighted in the quickfix window
13:23  bosie: rson: gotcha
13:24  bosie: rson: works!
13:24  iaj: what are nice window movement mappings? :-) ?
13:24  bosie: rson: thanks
13:26  rson: iaj: for a while i had used this script called submode (i think) so that i could hit ctrl-w one time, then hjkl to freely move around, then enter to exit the submode, however i realized that most of the time i only have two windows open so C-w C-w sufficed
13:27  thrope: the_isz: yep
13:28  rson: i hate that library/autoload functions can begin with lowercase letters but normal functions can not.
13:29  iaj: hmm,   au! BufRead Mail\ -* nnoremap <buffer> ,d :silent write \| :bd<CR>    what's wrong about that one... if the file name is "Mail - faskldfja sldfsadf.txt" ?
13:29  bosie: one other thing that bugs me is that fugitive only shows up every 'now and then'. even if i am in a git-ted directory, Gcommit won't be available. anybody knows why?
13:29  the_isz: thrope: just as a note: git is awesome, but its window$ implementation is very buggy. so if you can, either choose a different versioning system or have it run in a virtual machine on a unix file system.
13:29  thrope: the_isz: yeah... I'm using git in cygwin for version control stuff... but this was just for the gist.vim plugin
13:29  thrope: I guess I can disable it
13:30  the_isz: thrope: i have bad experience with that approach, too. for me, git under window$ is a no-go, unfortunately.
13:43  iaj: for a BufRead how would I tag all files starting with 'Mail -' ?
13:48  rson: iaj: you can probably escape the space with a \, but i'm not sure.  Try Mail\ -*
13:48  thrope: hmmm... now vim crashes every time I open a file... I hate windows
13:48  spiiph: That's probably not windows' fault.
13:49  tmr: But i's easy and populat to blame it.
13:49  tmr: Popular even.
13:49  spiiph: Yes, very.
13:49  dindinx: hum, am I at the MS helpdesk?
13:55  Silex: thrope: not sure what your question is about, but msysgit works pretty fine on windows
13:55 * Silex has is used  to switch between *nix and windows on a regular basis
13:55  thrope: now vim crashes whenever I try to open a file
13:55  Silex: s/has//
13:55  thrope: or use lusty explorer
13:56  Silex: thrope: I don't know what you did for this to happen, my experience in this regard is usually tied to loading wrong dlls
13:56  Silex: e.g putting ruby-1.8.dll in PATH when vim is compiled with ruby 1.9.1
13:56  thrope: maybe its to do with ruby
13:56  thrope: althought :ruby puts('hello') works fine
13:57  thrope: I uninstalled ruby and it stopped
13:57  thrope: can anyone point me to the correct ruby download to use with vim from vim.org
13:57  thrope: I'm not sure if it is 32 bit or 64 bit
13:57  thrope: but my windows is 64 bit
13:57  Silex: thrope: :version
13:57  thrope: ms-windows 32 bit version
13:57  Silex: this should mention which ruby it wants, in any case latest gvim 7.3 usually wants 1.9.1 32 bits
13:58  thrope: it wants 1.9.1
13:58  thrope: I had 1.9.1-p430 from ruby-lang
13:58 --- cascalheira is now known as cascalheira|away
13:58  thrope: dont know if its 32 or 64
13:58  thrope: maybe I'll try -p378
13:59  Silex: I have Vi IMproved 7.3 (2010 Aug 15, compiled Oct 27 2010...) and installed rubyinstaller-1.9.1-p430.exe
13:59  Silex: it works fine by me
13:59  Silex: but you talked about cygwin and stuffs... are you running vim from inside it?
13:59  thrope: i have the same
13:59  thrope: no
14:10  thrope: i think its a bug in lusty explorer : http://markmail.org/message/trzp34py5duxazua
14:11  Silex: I'm not using lusty explorer, so sounds likely
14:12  rson: i don't think lusty works with ruby 1.89
14:12  rson: 1.9*
14:15  Silex: thrope: is lusty explorer like FuzzyFinder or more like Command-T ?
14:15  thrope: yeah - but I mainly use it for buffers
14:15  thrope: oh I dont know which one it is more like
14:15  thrope: fuzzyfinder probably
14:17  brugidou: is there a "most popular" vim configuration? independent of the programming language
14:18  brugidou: where you could "easily" add support for ruby, python or whatever
14:20  Silex: brugidou: there's the example config on vim.org
14:20  Silex: but you'd be more precise about what you're asking
14:21  brugidou: some sort of "advanced" config where you have the most common plugins that you'd use
14:22  Silex: this depends pretty much on what kind of coder you are
14:22  Silex: I can give you my plugin list if that helps you
14:22  brugidou: yep, i was just wondering if there's a "popular" setup
14:22  brugidou: because obviously anyone has their own mix of stuff
14:22  Silex: NERD_tree, snipmate, surround, FuzzyFinder is often seen
14:23  rson: brugidou: there are a few "bundles" of plugins on github that might suffice for what you want
14:23  rson: let me see if i can find one
14:25  rson: i can't think of the name :(
14:25  Silex: let s:plugins = 'The_NERD_tree FuzzyFinder snipmate matchit.zip scons rails FSwitch Command-T Decho clang_complete visualstar YankRing PickAColor ideone surround vcscommand DirDiff textobj-rubyblock Conque_Shell'
14:25  Silex: that's my plugin list
14:25  Silex: used along vim-addon-manager
14:26  Silex: the plugin's plugin installer
14:26  rson: you use all of those?
14:26  Silex: yeah
14:26  Silex: not all the time tho
14:26  sw4: https://github.com/scrooloose/vimfiles this one seems to be popular
14:27  sw4: but i suggest starting from scratch
14:27  brugidou: thanks
14:28  brugidou: that's a *lot* of plugins o_O
14:28  sw4: yep.. plus all vim defalt options and you'll be lost most of the time
14:29  rson: Silex: i just listed mine, it actually looks like more than it is ;)
14:30  rson: supertab pathogen markdown snipmate gundo nerdcommenter matchit endwise
14:30  rson: markdown is just a syntax file
14:31  rson: i don't really use matchit or gundo that often
14:31  rson: endwise is just because i've been writing vimscript here recently, usually i don't have that installed
14:32  the_isz: i mainly use NERD_commenter, snipMate and yankring
14:35  rson: brugidou: https://github.com/spicycode/bringing-vim-to-the-people is a big collection of plugins, not sure i'd ever consider using that setup myself
14:36  brugidou: rson: thanks, i'll probably pick stuff
14:36  spiiph: It's setting mapleader to ,, and i'ts setting t_Co
14:36  spiiph: Hence, not trustworthy. :P
14:36  spiiph: It's also changing the value of tabstop. :P
14:36  brugidou: waht's t_Co ?
14:36  brugidou: what's your mapleader ? i use ,
14:37  spiiph: The default, \
14:37  rson: spiiph: you referring to that setup i posted?  i was talking more about the collection of plugins than anything
14:37  brugidou: i don't know why everyone told me to use , people say it's easier to access the key i guess
14:37  spiiph: rson, the setyp, yes.
14:37  rson: setting t_Co is just silly
14:37  Silex: rson: endwise looks redondant when there's snipmate
14:38  spiiph: brugidou, because they don't know what , does, and how useful it is.
14:38  rson: Silex: it prevents you from having to hit tab or define snippets for simple if/endif type of blocks
14:38  spiiph: There are a few people who know what , does, and doesn't care. But mostly it's just ignorance.
14:38  brugidou: what does it do?
14:38  rson: I use comma, I know what it does.
14:38  Silex: btw, is NERD_Commenter to comment out code or to create comments for code?
14:38  spiiph: :h ,
14:39  Silex: rson: yeah but those are by default in snipmate (if/else/etc)
14:40  brugidou: ok i see
14:40  brugidou: interesting
14:41  rson: Silex: indeed, i've never gone through the vim snippets that are shipped with it
14:42  Silex: rson: yeah, it's  pleasant surprise to find them
14:49  rson: Silex: there is a python snippet shipped with snipmate that imo is retarded.  . -> self., it's annoying because if you use the same key to trigger snippet expansion and autocompletion (e.g. Tab), you can't omnicomplete after a . in python.
14:49  rson: i've been meaning to fork snipmate, remove that snippet and file a pull request for a long time now but i never do it
14:52  MarcWeber: rson: If you change snippets a lot consider using my fork. It reloads snippet files on the fly and there is a :SnipMateOpenSnippetFiles command
14:52  MarcWeber: It can also reindent your patches (visual select them and press <cr>) because snippets should be stored using tabs
14:53  rson: MarcWeber: i'll take a look, thanks.
14:54  iaj: rson: i couldn't escape the space with \ : (
14:55  iaj: shouldn't a BufRead Mail\ -*  match all files that have a filename like 'Mail -'.* ?
14:56  Silex: rson: sure, snipmate still requires a lot of work and unfortunately its author deserted the scene
14:56  d0ugal: How do I do a search replace like :%s/apples/oranges/ within a visual block?
14:57  Silex: I had to see how it's implemented, and some of the stuffs the plugin does is kinda retarded imho
14:57  iaj: furthermore: is there some way to have a fuzzylike buffersystem,explorersystem on netrw?  eg ftp sites?
14:57  MarcWeber: Silex: what do you mean by "deserted" ?
14:57  iaj: d0ugal: '<,'>s...
14:57  MarcWeber: I asked him about one year ago to review my changes. It never happened.
14:57  Silex: MarcWeber: msanders has like 16 pull requests and his last commit is from 6 months ago?
14:57  Silex: MarcWeber: ho, for me "deserted" means he vanished
14:57  Silex: so snipmate is kinda abandonware atm
14:57  MarcWeber: Silex: THat time he replied after some delay.
14:58  Silex: well, still snipmate isn't active
14:58  d0ugal: iaj: aha, thanks
14:58  MarcWeber: Silex: Do you know what those requests are about?
14:58  Silex: the pull requests?
14:58  Silex: mostly changing/adding the default snippets
14:59  Silex: those pull requests aren't very important
14:59  Silex: except yours maybe
14:59  rson: the one thing i hate about snipmate is that it makes it a pain for me to have a "local" snippets directory that can contain snippets that override the provided snippets.  I haven't found a way to cleanly do that
14:59  MarcWeber: I partially think it was a design failure to add snippets to the main repo. Because different people have differetn preferences.
14:59  Silex: rson: g:snippets_dir?
15:00  MarcWeber: rson: Get my patch.
15:00  MarcWeber: You can define 'snippet sources'.
15:00  Silex: MarcWeber: for me the whole code is pretty weird. For example he has two separate hash for single snippets and multiple snippets... but if you only add one snippets to the multiple snippets hash it works like the single snippets one
15:00  MarcWeber: rson: If you're at it: Use VAM and you'll get my version for free :)
15:00  Silex: why not simply remove the single snippets one and avoid ugly if() everywhere to handle the two cases?
15:00  MarcWeber: Silex: It is. But its the most simple somewhat working snippet library.
15:00  MarcWeber: Silex: I never had time to make xptemplate read snippet snippet.
15:01  Silex: MarcWeber: oh don't get me wrong I love snipmate. I just find it sad nobody works on it
15:01  MarcWeber: Or to patch it to read snippets on the fly.
15:01  MarcWeber: Silex: Its to complicated. Many ways to add snippets. snippet(s)/snippets* directories and files.
15:02  Silex: MarcWeber: what is complicated?
15:02  Silex: snipmate?
15:02  MarcWeber: THe way it looks for sinppets.
15:02  MarcWeber: The way you can "tag" them.
15:02  rson: jesus christ, there are 158 forks of snipmate on github.
15:02  MarcWeber: rson: That's why I said its a design failure to add snippets to the main repo.
15:02  MarcWeber: Most of them only change 10 lins of a snippet.
15:02  Silex: snipmate needs a rewrite
15:02  Silex: that's about it
15:03  Silex: if I have time once I'll just clean the retarded things in it so we have something easier to work on
15:03  Silex: and probably remove many ways of loading snippets in the same time
15:03  Silex: :)
15:04  MarcWeber: rson: Do you know about VAM?
15:04  Silex: rson: btw, I'm using g:snippets_dir and I think it overrides the default snippets
15:04  Silex: but maybe I'm wrong
15:04  rson: MarcWeber: yeah, i've not used it, i've been using pathogen for quite some time now and i'm happy with it
15:05  rson: Silex: i think that would stop me from using the shipped snippets
15:05  Silex: MarcWeber: do you think the snippets separation where each snippets has its own file is worth it?
15:06  MarcWeber: Silex: Yes. I'd drop that. Most snippets are some lines only.
15:06  Silex: rson: doens't look like happening to me
15:06  MarcWeber: Having many files only increases load time etc.
15:06  Silex: MarcWeber: I think the same
15:06  rson: MarcWeber: i'm going to try out your fork here in a bit.  Might I request that you clean up the help file so that the tags are all correct?  some of the tags don't match the ones in the header and are missing the snipMate prefix (left over from your original fork probably because snipmate has this same issue)
15:06  Silex: honestly sometimes I'm considering forking snipmate and taking over its development
15:06  MarcWeber: rson: The advantage of VAM is that you can maintain a list of "default sources". Eg you can replace retarded "snipMate" versions by improved ones.
15:06  Silex: just to make it the plugin it'd be
15:07  MarcWeber: rson: Which tags?
15:07  rson: MarcWeber: snippet-syntax for one
15:07  rson: Filename()
15:07  rson: multi_snip
15:07  MarcWeber: rson: Well. Let's talk about that after you've tried my changes.
15:07  Silex: I think he meant the docs?
15:08  MarcWeber: rson: Also note that I added {VISUAL} support or such.
15:08  Silex: what is visual support?
15:08  MarcWeber: Silex: Add {VISUAL}.
15:08  Silex: I'm sorry I don't get it
15:08  rson: MarcWeber: yeah i'm just looking through the help now to see this snippet sources thing
15:09  MarcWeber: Then you can select code visually, press tab and it will be inserted after selecting the next snippet where the text {VISUAL} appears
15:09  Silex: oh, ok thanks
15:09  MarcWeber: Silex: Most snippets have kind of "body". Then you don't have to copy paste the text yourself.
15:09  MarcWeber: Its hacky but works for me.
15:11 --- cascalheira|away is now known as cascalheira
15:28  iaj: Is someone familiar with FuzzyFinder here?
15:29  mgedmin: I use command-t, which is a bit like fuzzy-finder
15:29  mgedmin: I guess the answer is "no"
15:30  robgleeson: iaj: i am
15:31  iaj: robgleeson: do you happen to use the MRU option?
15:32  iaj: I want to not show files coming from a certain dir (like /tmp) 
15:32  robgleeson: iaj: nope, no idea what that is, actually. I use it for buffers & files, that's it.
15:32  iaj: but I can't get it to work
15:32  iaj: robgleeson: ahhh ok... as most would do :)
15:32  robgleeson: probably :D
15:33  iaj: mhhh something wrong about that line? au! BufRead Mail* set ft=mail|nnoremap <buffer> ,d :silent write \| :bd<CR>   shouldt silent write act silent :)
15:39  MarcWeber: rson: Have you had any problems?
15:43  Silex: iaj: I use MRU often... not sure how you'd excluse /tmp from it tho
15:43  Silex: *exclude
15:44  mgedmin: so, if gvim --serverlist is empty, why does a new gvim get the name 'VIM1' instead of just 'VIM'?
15:45  Silex: iaj: can't you simply edit g:fuf_mrufile_exclude  ?
15:46  Silex: iaj: by default it's already ignoring /media... just add /tmp to it?
15:46  rson: MarcWeber: sorry, i've been in meetings.  I probably wont get to this til sometime this weekend.
15:47  MarcWeber: :)
15:51  iaj: Silex: its set to, let g:fuf_mrufile_exclude = '\v\~$|\.(bak|sw[po])$|^(\/\/|\\\\|\/mnt\/|\/media\/)'    and I want to add /private/var/folers... wouldn't it look like let g:fuf_mrufile_exclude = '\v\/private\/var\/folders\/|\~$|\.(bak|sw[po])$|^(\/\/|\\\\|\/mnt\/|\/media\/)'
15:53  Silex: iaj: http://ideone.com/XAeB5
15:54  Silex: you added it to the beggining changing the regex
15:55  iaj: not working Silex :(
15:55  Silex: check inside vim that it's really the default value
15:55  Silex: :let g:fuf_mrufile_exclude
15:55  Silex: maybe the doc doenst' reflect the reality
15:55  Silex: I mean, the old value
15:55  iaj: i extracted that one by C-R = fuf_mrufile_exclude
15:56  Silex: wait, remember FuzzyFinder is cached
15:56  Silex: I suggest you quit vim & run it again
15:56  iaj: i do all the time :)
15:57  iaj: even doing :FufRenewCache
15:58 * Silex tests
15:58  Silex: ah wait, MRU
15:58  Silex: does this means it only works for the new files?
15:59  Silex: yeha it's probably that
15:59 * Silex tests
16:01  Silex: yeah ok, seems it doens't work.
16:02  iaj: hmmm
16:02  iaj: im not giving up:)
16:03  Silex: iaj: debug function fuf#updateMruList(mrulist, newItem, maxItem, exclude)
16:03  Silex: it apparently ignores the exclude param or smth
16:03  Silex: basically, find why let result = filter(result, 'v:val.word !~ a:exclude')
16:03  Silex:  doens't do its job
16:04  Silex: I'd probably simplify the regex much more to follow what's going on in an easier way
16:15  DainDwarf: Hey, I forgot how to search for "the word currently under the cursor"
16:15  fruight: how can i switch :DiffOrig off again?
16:15  the_isz: DainDwarf: *
16:15  the_isz: fruight: :diffoff
16:15  DainDwarf: thx
16:16  fruight: the_isz: thx
16:24  iaj: Silex: alright... Im just trying another thing... how would I specify 2 different BufRead patterns, someone know?
16:24  iaj: BufRead /var/folders/*/*, *.txt   isn't working :)
16:24  fow: you mena like au BufRead foo*,bar* awesome stuff
16:24  fow: *mean
16:24  fow: I believe the space matters
16:25  iaj: it does: ) thanks fow
16:25  fow: you're welcome
16:36  iaj: huh.. can't i do let @r=<C-R>=&omnifunc    ?
16:37  fow: is there something wrong with :let @r = &omnifunc   ?
16:38  iaj: hm oh I don't need to extract the contents..
16:39  Silex: or you need to add quotes
16:50  iaj: :-)) Yay.. thanks...
16:50  iaj: Silex: btw, that one let g:fuf_mrufile_exclude = '\v\~$|\.(bak|sw[po])$|^(\/\/|\\\\|\/mnt\/|\/media\/|\/var\/folders\/)'  did the job :-)
16:51  iaj: dunno why private has to be absent..
16:56  number_number: I'm trying to write a shortcut.. for writing a buffer and moving to the next one, for some reason using ":wn" doesn't always work how I want and I end up doing ":w| bn" .. so I want my shortcut to be ":Bn" .. but I'm having no luck getting it working.. help?
17:14  varnie: hi all. how to force vim to add '\' symbol in cases it splits the long Python code-lines (>80 chars per line) into the next line?
17:24  MetaCosm: might, have, to, kill, neighbor
17:24  MetaCosm: alarm going off for hours
17:25  mgedmin: varnie, usually it's better to avoid backslashes
17:25  mgedmin: and instead use parentheses for line continuations
17:25  mgedmin: for code like if (..... <newline ....):, you don't need a backslash
17:25  mgedmin: and to answer your direct question: I've no idea
17:26  varnie: it will be correct if it would deal with strings only.
17:27  varnie: i.e. if this is a string (it starts from " or ' or """ maybe) and if it longer than 80 chars, wrap it to the next line and prepend '\' accordingly
17:27  mgedmin: ugh
17:28  mgedmin: consider something like this instead: http://pastie.org/1460523
17:29  varnie: yeah, it looks cool!
17:29  mgedmin: now it _would_ be nice if vim added those " on the first and on the continuing lines
17:29  mgedmin: when it wrapped an expression in the middle of a string
17:29  mgedmin: but again, I've no idea how to do that
17:29  varnie: I get your idea.
17:30  mgedmin: iirc python.vim has some support for doctests: when you have a docstring, and inside  >>> foo(... and then press enter, you get "... " in front of your cursor
17:30  mgedmin: but that works badly with indentation
17:30  mgedmin: (the ... is indented to match the (, rather than being left below the >>>)
17:31  mgedmin: still, if you researched how that is implemented, maybe you could figure out how to get vim to insert stuff when you break lines
17:32  varnie: thanks again. I have to check it
17:40  wooden: Is there a keyboard shortcut for pasting from the X clipboard in gvim on Linux?  When I do shift-insert it just prints <S-Insert> instead of pasting.
17:40  mgedmin: you can map it
17:40  mgedmin: the keyboard shortcut is "*p or "+p
17:41  mgedmin: actually, if you open gvim's Edit menu, you'll see Paste is "+gP
17:41  mgedmin: (which results in a slightly different cursor placement than just "+p)
17:49  wooden: mgedmin: Thanks, that seems like it'll work.  Is there a single map command that will cover insert and normal mode, or do I need to define the mapping for each mode?
17:49  mgedmin: /usr/share/vim/vim72/debian.vim has two on my machine:
17:49  mgedmin:   map <S-Insert> <MiddleMouse>
17:49  mgedmin:   map! <S-Insert> <MiddleMouse>
17:50  mgedmin: these cover all the modes, I believe
17:50  LeoNerd: map + map!  should cover them all yes
17:50  wooden: Ah, I see.
17:50  wooden: Thanks.
18:11  foocraft: how can I configure ctags to allow java completion?
18:24  rindolf: foocraft: shouldn't it do it automatically?
18:27  foocraft: well, I guess what I'm not getting is prolly what ctags actually does
18:33  tlonim: when matching file for autocmd, is there a way to exclude unnamed(new not saved) files ?
18:34  homekevin: tlonim: What autocmd?
18:34  homekevin: Many of them aren't even applicable to a new buffer
18:35  tlonim: homekevin:  doing this --- au CursorHoldI * write | stopinsert
18:35  tlonim: homekevin: but on new buffer it gives me an error since it is not saved yet
18:35  tlonim: so how do i exclude the new buffers ?
18:35  Araxia: you could check the 'buftype'
18:36  homekevin: I'm not sure what the pattern even is for CursorHoldI.
18:36  homekevin: tlonim: I think the filename will be empty, so you can check for that.
18:36  tlonim: ok. let me try
18:37  homekevin: I don't think 'buftype' helps for new files, but you might need it to skip other kinds of files, like help files.
18:38  elm_: Is it possible to open up sth. like a dialogue window in the middle of the screen above all other windows?
18:39  homekevin: Terminals don't have dialog windows, but there are some functions for user interaction.
18:39  homekevin: E.g., confirm()
18:40  homekevin: And input()
18:40  Araxia: elm_: you could look at preview-window, too.
18:43  iaj: any way to have persistent undo also enabled on netrw editing?
18:48  tlonim: homekevin: so if expand('%') | write | stopinsert | endif
18:48  tlonim: homekevin: should work right ?
18:50  tlonim: actually  au CursorHoldI *  stopinsert | if expand('%') |  write | endif in full
18:52  tlonim: how do you get whether function returns nothing or something ? if function can't evaluate that ?
18:53  tlonim: i guess i will do strlen(function)
18:54  iaj: someone in here using netrw and undo?
19:04  elm_: what is preview-window meant to do?
19:05  elm_: it does not seem to open up an own window
19:05  elm_: ?
19:08  devn: I need an easy way to export all of the currently open tabs in vim to a file that I can parse with another editor. Suggestions?
19:08  mgedmin: devn, check out :h :mksession
19:08  mgedmin: elm_, :h preview-window doesn't answer your questions?
19:09  clownish: hey folks. im tring to use vim with scala. there is a plugin which highlights quite well, but function names are just highlight when they get defined with 'def'. is there a way to determine if a function was defined with a name, and if so, color this function name also without the 'def' befor it?
19:14  Araxia: clownish: don't know scala, but you should know that vim's syntax highlighting is just expression matching, it has no greater knowledge of your code as a compiler would.
19:19  clownish: Araxia: so there is no way to constantly search for strings with "def" in front of it while entering something new? i need a function which search every time i enter somthing new into the file, determines if the string i entered was entered with a "def" in front of it previously, and if this is true color this string somehow.
19:20  Araxia: clownish: yeah, that's where vim's being a text editor not an ide starts to show. it may be *possible* to add this capability, but it would likely be ugly.
19:21  clownish: Araxia: mh okay, thank you
19:21  peter_w: uhm
19:21  mgedmin: well, so
19:21  peter_w: you want syntax highlighting?
19:21  mgedmin: pythonhelper.vim parses the source code on every CursorHold event
19:22  mgedmin: you could do essentially the same, construct the list of function names, compare with cached version, if different, update your syntax rules
19:22  mgedmin: pythonhelper does not slow my vim down
19:22  mgedmin: (it has some kind of smart caching to only do the re-parsing when the buffer has changed)
19:23  rson: anyone have a second to test out a plugin i just pushed to github?  you _shouldn't_ have to configure anything, just drop it in your plugin folder and fire up vim with a couple buffers
19:24  mgedmin: rson, if the plugin is interesting ...
19:24  clownish: peter_w: no, the highlighting it self works *allmost*.
19:24  clownish: mgedmin: ok thanks, ill look at pythonhelper
19:24  rson: mgedmin: it's just a buffer list in the statusbar, essentially buftabs.vim but rewritten and trimmed up a bit
19:27  iaj: gna mb someone got a solution... when I'm using netrw.. is there some way to keep track of them files... (some way to enable something like persistent undo)?!
19:29  rindolf: iaj: do you want version control?
19:29  rindolf: iaj: I think vim-7.3 has persistent-undo.
19:30  iaj: rindolf: yeah it does - but not working on netrw (ftp edited files)
19:30  rindolf: iaj: are you using version control?
19:30  iaj: rindolf: unfort. I don't have shell access on that website.. so I can't do any version controlling - can I ?
19:30  mgedmin: rson, I can give it a try, if you want just "works or not" type of feedback
19:30  rindolf: iaj: you can on the local copy.
19:30  rindolf: iaj: and create a "make upload" target.
19:31  mgedmin: my statusline is generally full and I usually have a lot of open buffers, so I don't imagine I'll find the plugin useful for my style of vimming
19:31  rson: mgedmin: yeah that's all i'm looking for.  http://github.com/rson/vim-bufstat
19:31  mgedmin: if it's a single-file, I'd prefer a wgettable url
19:31  rson: k
19:31  rson: sec
19:31  mgedmin: otherwise wait until I have five free minutes ;)
19:31  iaj: rindolf: huh... never heard about  make uplaod  target? 
19:32  iaj: rindolf: what's its purpose?
19:32  rson: mgedmin: https://github.com/rson/vim-bufstat/raw/master/plugin/bufstat.vim
19:32  iaj: rindolf: hm so I always edit the file locally?
19:32  mgedmin: (why https for public repos? grr invalid certificates)
19:32 * mgedmin got it
19:33  mgedmin: it looks neat
19:33  mgedmin: but a bit buggy?
19:33  rson: your statusbar problaby looks horrible if you have a bunch of stuff in it
19:33  rson: mgedmin: how so?
19:34  elm_: .
19:34  mgedmin: is there a command-line tool to upload to imgur?
19:34  rson: i don't know of one.  i haven't needed such a thing in a long time
19:34  mgedmin: no, maybe just not buggy, I don't understand what it's showing
19:35  elm_: mgedmin: I just didn`t get what the preview window is and how it works. Any simple command I could try out?
19:35  rindolf: iaj: yes, you do.
19:35  mgedmin: rson, http://i.imgur.com/oGwAU.png
19:35  rindolf: iaj: well, you create a makefile, which uploads the file to the remote server explicitly.
19:35  mgedmin: I got confused by "bufstat.vim" being shown twice
19:35  mgedmin: elm_, do you use ctags?
19:36  iaj: rindolf: hmmm can you tell me how that makefile looks like?
19:36  mgedmin: or do you use python omnicompletion?
19:36  rson: mgedmin: the second one, the one with the : is presumably from your &statusline
19:36  elm_: mgedmin: I know what it is and I plan to use it with vim so far.
19:36  mgedmin: rson, could very well be!
19:36  mgedmin: I don't know how your plugin interacts with my custom statusline
19:37  rindolf: iaj: yes.
19:37  mgedmin: elm_, so the idea of the preview window is this: you're writing code, you call a function dosomething(, and you forget the signature
19:37  mgedmin: so you move over dosomething, hit Ctrl-w }, and a preview window appears showing the function definition
19:37  rindolf: iaj: all:\n\nupload:\n\tncftpput myfile.txt
19:37  mgedmin: you look at it, then hit Ctrl-w z to hide the preview window
19:37  elm_: mgedamin: ahh
19:37  mgedmin: this requires that you have a tags file built with exuberant-ctags
19:38  rson: mgedmin: it takes over the left half of the statusline, then uses your &statusline for the right half.  if you had a %= separator in your statusline to divide the sides before vim ignores it.
19:38  mgedmin: yeah, my &statusline is now "  statusline=%<%#StatusLine#1 buffstat.vim[#]  2 python-imports.vim  %#Statuslin
19:38  mgedmin: eNC#3 bufstat.vim%#StatusLine#  %=%#StatusLine#%n:%<%f %h%m%r%2*%{HasLocalDir()}
19:38  mgedmin: %* %1*%{TagInStatusLine()}%* %=%-10.(%l,%c%V%) %4L %P"
19:38  iaj: rindolf: omg that seems wicked :)  where do I put that file? in the git root folder?
19:39  rindolf: iaj: whereever your file is.
19:39  rindolf: iaj: you need to type make where the "Makefile" file is.
19:39  rson: yeah, since you use your statusline for a bunch of information, this won't work well for you.  but it appears to be working anyway.  thanks for testing it
19:39  mgedmin: np
19:39  mgedmin: sorry for the confusion
19:40  mgedmin: interesting how the current buffer is not-bold while all the others are bold
19:40  mgedmin: is that me using reverse video or something?
19:40  iaj: the filename is Makefile and I place it in /sub/my/dir/here   and when I execute 'make' there its invoking the upload of file myfile.txt .. but where?   hmm... i guess the \n are new lines :D
19:40  rson: mgedmin: it it uses StatuslineNC for the active buffer, StatusLine for the inactve buffers.  You can change that via global settings in your vimrc
19:41  rson: mgedmin: highlight groups, that is
19:41 * mgedmin nods
19:42  mgedmin: so, in my real session I have 22 buffers open
19:42  mgedmin: and this is a short session, started today
19:43  rson: mgedmin: this really isn't going to work well for you, however you can scroll left and right via <Left> and <Right> if you didn't already have those mapped
19:43  rson: otherwise you'd need to map those functions
19:43  mgedmin: nah, I prefer bufexplorer.vim
19:43  tlonim: is there a way to make fold marker appear on separate lines ?
19:44  rson: yeah, once you have more than 5-6 bufers open, this becomes useless.
19:44  tlonim: in many cases it breaks the syntax otherwise
19:44  trutkin: I use tabs for different buffers.  then each one has a title.
19:46  mgedmin: using location lists leads to buffer number inflation
19:46  mgedmin: my 22nd buffer has number 158
19:47 --- Natch is now known as Natch|
19:53  Nyoxi: tlonim: breaks syntax? normaly it should be put in a comment
19:53  Nyoxi: if you're creating folds by zf
19:54 --- Natch is now known as Natch|
19:58  elm_: I just don`t get the preview window to work. It should show an arbitrary text.
19:58  elm_: However :pedit myfile simply does nothing
19:59 --- Silex is now known as silex
20:00  wide_awake: hello
20:01  Nyoxi: elm_: nothing means it doesn't even open the window?
20:01  wide_awake: When I'm editing some kinds of files and using autoindent and smartindent, vim always wants to shove lines beginning with "#" all the way to the left into column 0.  How can I fix that?
20:02  wide_awake: happens with .sh and .rb, and possibly others
20:02  mgedmin: wide_awake, I think it's a setting in 'fo, try :h fo-table
20:02  elm_: it writes "escaped" in red - but nothing else
20:02  mgedmin: or maybe it's a setting in 'comments
20:02  fow: try not using smartindent instead using filetype plugin indent on
20:02  mgedmin: or maybe in 'cino
20:03  mgedmin: this used to annoy me very hard, and I found how to switch it off once
20:03  pattern: vimgor: smartindent
20:03  vimgor: Don't you mean stupidindent? In all seriousness, 'smartindent' is an obsolete option for C-like syntax. It has been replaced with 'cindent', and setting 'cindent' also overrides 'smartindent'. Vim has indentation support for many languages out-of-the-box, and setting 'smartindent' (or 'cindent', for that matter) in your .vimrc might interfere with this. Use 'filetype indent on' and be happy.
20:03  mgedmin: ooh, a comment in my .vimrc says it was 'smartindent'
20:03  Nyoxi: wide_awake: :he 'smartindent
20:03  pattern: wide_awake: see vimgor's answer above
20:03  wide_awake: hrm
20:04  wide_awake: thanks folks
20:04  pattern: how can i join all the lines in a paragraph?
20:04  wide_awake: vimgor: should I just remove 'set si' in my vimrc?
20:04  vimgor: No idea.
20:05  pattern: wide_awake: vimgor is a bot
20:05  wide_awake: heh
20:05  wide_awake: oh
20:05  pattern: vimgor: cookie
20:05  vimgor: Thanks!
20:05  wide_awake: vimgor: help me with my problems
20:05  vimgor: wide_awake: Error: There is no command "me with my problems".
20:05  wide_awake: dang
20:05  pattern: don't break him!
20:05  pattern: ;)
20:05  Nyoxi: wide_awake: yes, remove it
20:05  wide_awake: I was going to invite him over for pizza next
20:05  wide_awake: anywho
20:06  wide_awake: Nyoxi: thanks
20:06  Araxia: pattern: you could: vipJ
20:06  pattern: Araxia: thanks
20:08  wide_awake: what about the "filetype indent on" comment - I didn't really get that
20:09  mgedmin: :h :filetype
20:09  tlonim: Nyoxi: ok
20:10  mgedmin: hmmm
20:10  mgedmin: :h filetype-indent-on is better
20:10  wide_awake: mgedmin: thanks
20:12  wide_awake: ahh, much better.
20:12  wide_awake: now to go around and change it on 500 machines :(
20:13  mgedmin: version control!
20:13  mgedmin: well, configuration management, I should say
20:13  wide_awake: ya
20:13  wide_awake: closest thing I have is that my .vimrc is in dropbox :-/
20:13  mgedmin: my ~/.vim is in subversion, and that is awesome
20:13  tlonim: for certain assignments vim is complaining  .. "number required after =" what does this mean ?
20:13  mgedmin: it would be even more awesome to have it on github, I suppose
20:13  Araxia: do yourself a favor and use a dvcs for your dotfiles.
20:13  wide_awake: can you tell vim to source it from the interwebs?
20:14  mgedmin: no
20:14  wide_awake: alas
20:17  mgedmin: one thing I like about vim is that I don't need my ~/.vimrc for simple sysadminish editing tasks
20:17  mgedmin: I remember the one or five commands I need to make vim not suck
20:17  mgedmin: (it's probably something like set nocp bs=2 et sts=4)
20:18  mgedmin: now software development without my ~/.vim/plugins would suck
20:19  wide_awake: I haven't gotten into plugins yet
20:20  wide_awake: but I've only been using vim for 12 years or so, so I'm still a noob ;)
20:27  Nyoxi: tlonim: ok what? :)
20:28  wide_awake: thanks again everyone.  One more annoyance bites the dust :)
20:33  wide_awake: another question
20:34  wide_awake: does anyone know if i can make vim behave kind of like a hex editor, such that it only loads a portion of the file, and only writes out the bytes that have actually changed?
20:34  wide_awake: I occasionally need to edit huge SQL dump files
20:35  wide_awake: and hex editors are not so friendly for searching / editing.
20:35  wide_awake: and vim is not so friendly for rewriting the entire file when you save.
20:41  rindolf: wide_awake: on Unix and Unix-like systems, one cannot insert bytes into the middle of the file, or remove them from there.
20:41  wide_awake: rindolf: I don't want to
20:41  rindolf: wide_awake: you'll need to move away the rest of the data too.
20:41  wide_awake: just want to overwrite
20:42  wide_awake: I almost always just want to comment-out sections
20:42  wide_awake: which I can do by overwriting the first 2 characters of a line with "--"
20:42  Araxia: wide_awake: :help hex-editing
20:42  wide_awake: ooh
20:42  wide_awake: Araxia: thanks, reading
20:43  Araxia: no partial loading/writing.
20:43  wide_awake: ah, ok
20:43  wide_awake: is that something that could theoretically be done with a plugin?
20:44  Araxia: no, that's baked in pretty deep.
20:44  wide_awake: k, that's what I figured.
20:45  wide_awake: I should probably just learn how to properly use an existing hex editor
20:56  peleg: I can't unmap something, and it is quite weird. For some reason, :nmap <cr> gives me n  <CR>         @"\r".AddItem() -- but in my .vimrc file I don't find any such mapping, and :unmap <cr> or :nunmap <cr> do not help.
20:56  Araxia: try :verbose nmap <cr>
20:57  peleg: Zuletzt gesetzt von ~/.vim/view/~=+Documents=+Math=+Graph Theory=+Random Graphs=+LectureNotes=+connectivity.tex=
20:57  peleg: it is something saved with the file, I guess.
20:58  fow: peleg, :unmap <buffer> <CR>
20:58  peleg: hmm
20:58  peleg: great :)
20:59  peleg: thanks.
20:59  fow: you're welcome
21:08  tlonim: how do i make one of my scripts to be sourced at the end of initialisation sequence ?
21:18  McManiaC: how can you see where a setting has been set?
21:18  McManiaC: theres somethine like :verbose or sth (it isnt verbose…)
21:18  Raimondi: McManiaC: :verbose set option?  the ? is part of the command
21:19  McManiaC: ah
21:19  McManiaC: hm
21:19  McManiaC: this wont work for the colorscheme stuff
21:20  rson: tlonim: put it in the ~/.vim/after/ directory
21:21  tlonim: rson: but the problem with that is if I want it to be independent of filetype I can't do it
21:21  tlonim: rson: ~/.vim/after/ftplugin/xyz.vim will be sourced only for xyz filetype
21:21  rson: tlonim: put it in ~/.vim/after/plugin/
21:21  McManiaC: Raimondi: is there a way to see where the colorscheme has been set?
21:24  peth: tlonim: or you could call it from an autocmd on VimEnter or some such
21:24  tlonim: rson: tried that..a few others were getting sourced even after that..
21:25  tlonim: peth: VimEnter..good idea..
21:25  tlonim: rson: /syntax/ ones were getting sourced after that
21:25  McManiaC: can you start the vimtutor from within a running vim instance?
21:26  rson: tlonim: vimenter is indeed a good idea
21:26  spiiph: Yes, you can source vimtutor.vim
21:29  Raimondi: McManiaC: I don't know
21:31  tlonim: btw, how do you search in the output/command window ?
21:31  Raimondi: tlonim: You can't, but check  :h :redir
21:31  tlonim: ok
21:37  tlonim: peth: rson that is also not working since some plugins are overriding VimEnter too.. hmm
21:38  tlonim: isnt there a way I can make ~/.vimrc be sourced at the end ?
21:39  tlonim: nah.. that wont work
21:40  tlonim: peth: rson nvm.. i think it is working now somehow :P
--- Log closed Fri Jan 14 23:44:11 2011
--- Log opened Fri Jan 14 23:55:02 2011
23:55 --- Users 593 nicks [0 ops, 0 halfops, 0 voices, 593 normal]
23:56 --- Channel #vim was synced in 73 seconds
23:58  chalcedony: ~$ diff -y 2011-01-14newnotes.txt 2010-11-09newnotes.txt  isn't giving me the nice columns and colored highlights?
23:59  sente: chalcedony: if you have colordiff it'll colorize output
--- Log closed Sat Jan 15 00:00:08 2011
