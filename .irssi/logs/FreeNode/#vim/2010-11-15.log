--- Log opened Mon Nov 15 00:00:10 2010
--- Log closed Mon Nov 15 00:09:23 2010
--- Log opened Mon Nov 15 00:09:49 2010
00:09 --- Users 573 nicks [0 ops, 0 halfops, 0 voices, 573 normal]
00:10 --- Channel #vim was synced in 72 seconds
00:16  agenteo: gkatsev: ta!
00:27  walt: I have been using vim only on windows until now. I have all my scripts and plugins in an svn repository. How do you guys have your vim repositories set up in linux?
00:27  walt: atm I made a symling from $home/.vimrc to the vimrc in my repo
00:27  walt: but I don't know what to do with the vimfiles
00:28  walt: symlink the $home/.vim to it?
00:30  xtagon: walt: That's what I do.
00:50  gkatsev: I just have my home dir be a repo that only keeps track of my dotfiles...
00:56  drizzd: walt: you can make .vim a symlink too
00:57  walt: drizzd: yeah did that now
00:57  walt: works nice
01:08  kwtm: Hi! I'm trying to pass the contents of a visual block to an external command. It seems to pass a blank string instead.  Here's what I do:
01:08  kwtm: I drag my finger across the screen to select text (activates Visual mode).  I press my key combo (in this case, the three keys ",pp").  THis is mapped with:
01:09  kwtm: :vmap ,pp  <Esc><Esc>"+y:!echo <C-R>"<CR>
01:09  kwtm: (The "echo" is the sample external command, until this works, and then it will become "phone" which will actually dial the phone number that I've highlighted in the text.)
01:10 --- Guest10739 is now known as gdoteof_home
01:10  kwtm: When I do the above, it seems to output nothing (or a blank line) (and then "Press Enter to return to Vim" or whatever), even if the text I highlight is well-behaved text, e.g. all letters.
01:10  rson: kwtm: why must you stomp on the register?  selecting text then running :!sort (for instance) works for me, where : from visual mode fills in :'<,'> for me.
01:11  kwtm: rson: I guess I don't have to stomp on the register. Would like to be able to.  So, what should I do?  Just put ":!echo"?
01:11  rson: try it without a map.  hilight the text, then run manually :!something
01:11  kwtm: rson: Do I need to put in :'<,'> in a key mapping, or will it be filled in automatically?
01:11  rson: echo doesn't seem to work here
01:11  rson: in the mapping you probably have to add that
01:11  rson: but if you are doing it yourself, you don't
01:12  kwtm: rson: Well, I guess doing it without a map would be defeating the purpose...
01:12  rson: not to test it wouldnt
01:12  kwtm: rson: Well, I guess I'll try, but am not sure what it means if the test works.  Still doesn't mean the mapping works.  Okay, here goes.
01:13  kwtm: Okay, even that doesn't work, but it seems to fail in a way that is unrelated.  It replaced my line with a blank line.
01:14  rson: kwtm: are you specifically trying to use echo or is that just an example? because echo fails here too
01:15  kwtm: Do I type ":!echo", then?  So it turns it into ":'<,'>!echo".  No, echo is an example but if it specifically fails for this then I would need to know why it wouldn't also fail for my script.
01:16  rson: kwtm: here is an example that works for me.  create an empty buffer.  add 5 lines with the numbers 1-5 in them.  visually select the lines and run :!sort
01:16  rson: which vim automatically turns into :'<,'>!sort because you were in visual mode when typing :
01:16  kwtm: rson: Will try.
01:17  kwtm: rson: ?? Oh, okay, I think I know what's happening.
01:18  kwtm: Your example, :'<,'>!sort , will take the output of the command and replace the visually selected block with it.  That's not what I want.
01:18  kwtm: I want to run an external command --ie. launch a shell and then run a command/script, with the register as argument.
01:19  kwtm: I want to see the output of the command (if I tell it to output text), but I don't want that output replacing the text file.
01:19  kwtm: The end goal is that I want to select a phone number from my text, and then using a key mapping, dial that number easily.  But not modify my text.
01:21  Araxia: kwtm: sounds like you want :! (no range) together with exec
01:21  kwtm: I have been able to do this:  :!echo <C-R>"<CR>  which will run the command "echo <whatever's in the default register>
01:21  peth: why don't you just use <cWORD>?
01:21  rson: kwtm: ok, i see then, why are you using <ESC><ESC> before yanking? that's why there is nothing in the register.
01:22  kwtm: But I thought there was a name for the register "whatever's visually selected" --it's not +?
01:22  kwtm: Araxia: Hmm, good thought there ...
01:22  kwtm: peth: WHat's <cWORD>?  Is that something I literally type?  Or is that a :help keyword?
01:23  kwtm: rson: Oh!  I see.  I thought I'd have to go to command mode to yank.  Does the y key work in visual mode, then?  I know next to nothing about visual mode, other than how to spell it.
01:23  kwtm: rson: Take out both <Esc>'s, then?
01:23  peth: it's replaced by the WORD under the cursor in cmdlines
01:23  rson: kwtm: yes, otherwise you aren't yanking anything
01:23  peth: :!echo <cWORD> or :!echo <cword>
01:23  rson: peth has you on a better track though, assuming a cWORD captures an entire phone number in your locale
01:24  kwtm: rson: YESS!! Thank you!
01:24  rson: !echo expand('<cWORD>') will echo a phone number in the us for instance
01:24  kwtm: peth: Will try your ideas.
01:25  peth: whatever works, kwtm :)
01:25  Araxia: kwtm: here's an example of a function i use for opening a uri in a line: http://pastey.net/142874
01:25  kwtm: peth: At this point, I will probably just stay with yanking the whole line, and letting my script process the selected text to find a phone.  That way, I can include abbreviations and other commands like "If the selected text says 'honey' then dial (415)911-0247" or something.
01:27  kwtm: Thanks Araxia.
01:31 --- TK is now known as Guest48474
01:32  kwtm: Hey, if I've defined my key mapping in normal mode, like: ':nmap ,pp :!echo <whatever>', then in visual mode can I replace ':vmap ,pp "+y:!echo <whatever>' with ':vmap ,pp "+y,pp' ?  In other words, during visual mode does the key sequence "+y bring it back into normal mode, so that the next key sequence ,pp will trigger the normal mode mapping?
01:35  kwtm: It does not seem to work for me, but I want to know if it's something I'm doing wrong.  Otherwise, is there a way to say "(visual-mode-)map this key sequence to whatever ,pp is mapped to in command mode"?
01:37  Rakko: I think it should go back into normal
01:39  Rakko: kwtm: if you use :map instead of :nmap, it will automatically map it in normal, visual, and operator-pending modes
01:39  kwtm: Aww, crumm, it's not going to work.  If I select more than one line, then it's going to pass the multiple lines, complete with CR's, as a command argument.  I think that will trigger some errors.
01:39  Rakko: hmm
01:40  kwtm: Rakko: For some reason :map doesn't always work (even for simple things like :map <euro symbol> <question mark>) in my implementation of vim, and I decided I'm not going to spend time testing when it does or does not work...
01:40  Rakko: hmm
01:40  kwtm: I guess I'll just have to write a function ... write to file, then have my script read from file.  Too bad...
01:40  Rakko: also, vim has a built-in echo, so you can do :echo instead of :!echo
01:40  kwtm: Rakko: "echo" is just a sample.  I'm actually doing "phone <register contents>"
01:41  kwtm: Rakko: But I'm not going to go phone someone by mistake if my script doesn't work, so I'm testing it on "echo" first.
01:42  Rakko: ah
01:43  kwtm: rson: Oh, wait, I just noticed your line up there: "!echo expand('<cWORD>') will echo a phone number in the us for instance".  Does this mean we can pass the output of functions to external commands?  I could do :!echo strip_all_but_digits_of_register_contents()  , then, for example?
01:43  Rakko: no, you can't do that
01:44  kwtm: Ahh, wait, I don't *have* to write to file.  I just have to write a function to sanitize the register contents --like strip out all occurrences of [^0-9A-Za-z] or something.
01:45  kongo: kwtm: why don't you just write a small function that takes a range as an argument and process the lines in there
01:45  kwtm: kongo: Okay.  And the range is the visually selected lines, then.
01:45  kongo: exactly
01:46  Rakko: now I'm curious as to how you pass vim values to an external program
01:46  kwtm: kongo: The main reason is that I was hoping to avoid writing a function, but I guess this is not the sort of thing that can be squeezed into a simple keymapping.  Oh, well.
01:46  peth: you're pretty much writing a function in mapping language anyway as it is :)
01:46  Rakko: I guess you could use :system()
01:47  kwtm: Rakko: Well, my command above already works.  It's just that if the visually selected text starts with "#" then it thinks I'm trying to say ":!phone #4159910247" which apparently to vim means "look for a file named #<something> and pass it instead"...
01:47  Rakko: like :let files = system("ls " .  shellescape(expand('%:h')))
01:47  ArMo3: How to make Vim not get mysterious characters when using the keypad numbers?
01:48  Rakko: ArMo3: is your num lock off?
01:48  ArMo3: Nope.
01:48  kwtm: peth: Well, I was hoping to do it simply.  Part of it is because I only have, like, 10-minute stretches of time to do this in between running after my toddler.  I'm already very lucky being able to ask for all this help without being called away from the computer (my toddler is napping right now)
01:49  kwtm: However, if such is the will of The Creator*, then a function it shall be!
01:49  kwtm: (*"Creator" = Bram Molenaar)
01:49  Rakko: lol
01:50  ArMo3: Does he idle here?
01:51  kwtm: Aaargh... I have sample functions I wrote in my vimrc file and now I have to remember why I wrote them that way.  THere's a reason why there's a "!" in ":function!", right?  I think it means "define this even if it's already been defined elsehwere"...
01:51  kwtm: ArMo3: No, it was just a joke about the Will of God vs. the Will of the guy who wrote this software.
01:51  kwtm: I'm comparing Mr. Molenaar to God
01:51  Rakko: I've never run into Bram that I know of
01:51  kwtm: You know what, it's not funny anymore if it has to be explained.
01:52  kwtm: Just pretend I said a different very funny joke and laugh your head off, ok?
01:52  Rakko: well :function lists functions
01:53  Rakko: oh, you're right - ! overwrites
01:55  kwtm: Aargh.  I dare not ask for so much handholding in writing functions, but can someone get me started?  Doing ":h function" doesn't seem to get me to the built-in functions available for me to: a) assign the text in the Visually Selected register to a variable, and b) delete all non-alnum characters.    Is there some web page that anyone recommends?
01:56  Rakko: :h functions
01:57  kwtm: Alternatively, can I specify a range command for the "s" command that means "operate on the register contents, not on the text file itself"?
01:57  Rakko: I'm not sure how to assign selection to a variable, but that would be good to know
01:57  Raimondi: kwtm: :h substitute()
01:57  Rakko: Raimondi got me started in writing functions
01:58  Raimondi: Registers can be accessed prepending their name by @:  @a
01:58  Rakko: oh, cool!
01:58  Raimondi: Isn't it :)
01:59  Rakko: Raimondi: is the selected text in a register before yanking it?
02:00  kwtm: Raimondi: Thanks.  So, could I, for example, do   "+y:@+s/[^0-9A-Za-z]//g:!phone <C-R>+   and that would pass a sanitized version of the visually selected lines to the external command "phone" (a script that I wrote)?
02:00  Raimondi: No
02:01  kwtm: Boy, reading what I wrote, even I'm confused.  I'm going to commentate for my own sanity:  "+y   yanks Visually selected text into register "Plus".   @+s/[^0-9A-Za-z]//g  would delete any non-alnums.  Oh, I see!  I'm missing a <CR> at the end of that before the next part   :!phone <C-R>+   oops, I'm missing a <CR> at the end of this, too.
02:01  kongo: kwtm: I don't know exactly what you want to achieve but I would start more like this: http://paste.pocoo.org/show/291434/
02:01  Rakko: I don't think you can use @+s
02:02  kwtm: Thank you Raimondi.
02:02  kwtm: oh oh, toddler's up.
02:02  Raimondi: kwtm: No, use substitute() to change the content of the + register
02:03  kwtm: Okay, still sleeping.
02:03  Rakko: hehe
02:03  Raimondi: kwtm: YOu want to use whole lines or just the selected text?
02:04  kwtm: Raimondi: Still trying to avoid a function if possible, so: can I use the normal mode ":" command (is that the same as "command mode"?) to use substitute() without writing a function?
02:04  Raimondi: Yes, but it works on lines
02:05  kwtm: Raimondi: I want to grab all the alnums from the selected text, even if it's multiline, turning it into a single line (since CR's will be removed).
02:07  Raimondi: kwtm: OK, what do you want ot do with the resulting text?
02:07  Raimondi: Are you replacing the text?
02:07  kwtm: Raimondi: I want to pass it to an external command, a script I wrote called "phone".  So if I selected 3 lines with this text:  abc / def$#^$&# / ghi, then I want to invoke the command "phone abcdefghi"
02:08  Raimondi: OK
02:08  kwtm: Raimondi: Yes, I find that I have to replace the text, or else the external invocation chokes if the text begins with # (I guess it means something to vim).
02:09  kwtm: It looks like what I would need to know next is how to put the contents of register + into a variable so I can pass it to the substitute() function, but I'll see what you have to say first --you may have a better idea.
02:09  Rakko: what does vim do with #?
02:10  Rakko: the only thing I know of is that it means "alternate file" in some contexts, but that shouldn't be the case with external programs
02:10  kwtm: Rakko: It seems like it's trying to substitute a filename.  Possibly the name of the buffer with that number.  Not sure.  It means something, though, and triggers an error instead of passing it to the external script.
02:10  Rakko: kwtm: let l:text = @+
02:10  kwtm: AHHH!!!  *That*'s what Raimondi meant by "accessing registers by prepending their name".  Ok, will try.
02:11  Rakko: yep
02:13  dpecka: hi there
02:14  dpecka: howto enable highligting of :searched string .. thanks
02:14  Rakko: :set hlsearch
02:15  Raimondi: kwtm: A starter  http://vim.pastey.net/142875
02:16  Raimondi: I shellescape isn't necessary since everything is alnum...
02:16  Raimondi: I think*
02:17  witquicked: so, how would i indent a selection "as filetype"? I have embedded javascript in a ruby file that I would like to get good re-indentation on...
02:17  kwtm: Raimondi: Thanks!  Is "echom" a special function, or a typo?
02:17  Raimondi: :h :echom
02:17  kwtm: Raimondi: Got it, thanks.
02:20  kwtm: And I would call the function, named Phone() in this example, from a keymapping using ":imap <C-R>=Phone()<CR>", right?  (or  :vmap "+y<Esc>a<C-R>=Phone()<CR>  is what I'm actually using)
02:21  kwtm: Wow!  It actually did something sensible!  Now to remove all those debugging echos and start using real world examples...
02:22  Rakko: what's the <Esc>a<C-R>= for?
02:22  Raimondi: kwtm: inoremap key <C-O>:call Phone()<CR>  :vnoremap key "+y:<C-U>call Phone()<CR>
02:23  Raimondi: kwtm: <C-R>=  will insert the text returned by the function, is that what you want?
02:23  kwtm: Raimondi: No, I don't want to insert text, but didn't know how else to call a function.  Thanks for help on :<C-U>call phone()<CR>
02:25  kwtm: Raimondi: I would like to know more about <C-U>  Do I type ":h <C-U>
02:26  kwtm: Do I type ":h <C-U>"?  Doesn't seem to work.  (Sorry, " key next to CR key)
02:26  Raimondi: kwtm: You want  :h c_CTRL-U
02:26  Araxia: kwtm: i think you mean <C-o>. :help i_Ctrl-O
02:26  KeeperOfTheSoul: also c_^U works normally
02:26  Raimondi: The c_ means it's related to command line mode
02:29  kwtm: Araxia: I was referring to the visual mode key remap.  I think I'd end up using visual mode more, at least in the beginning --but I do intend to use command mode more later, so I can make phone calls while driving without having to look at the screen of my "smart"phone (with a very clumsy interface)
02:29  witquicked: how would i indent a selection "as filetype"? I have embedded javascript in a ruby file that I would like to get good re-indentation on...
02:29  Rakko: C-u deletes the <,> that would be automatically put on the command line
02:30  Rakko: kwtm: while driving? really?
02:31  kwtm: Raimondi: Hey, your :vnoremap key example: does that work whether or not I entered visual mode while in insert mode or command mode?  Ie. when I type "+y and it comes out of visual mode, does it go back to command mode / insert mode depending on what mode I was in before?  If so, then I'd want "+y<Esc>: and not "+y: to make sure I go into command mode and not insert.  Wups, s/command mode/normal mode/g
02:32  kwtm: Rakko: ?  Are you surprised that the phone interface is so clumsy (stupid Nokia engineers) or that I talk on the phone while driving?
02:33  Raimondi: The <Esc> should be harmless.
02:34  dpecka: blooooody hell .. help me
02:34  dpecka: my vim is trying to be smarter then me
02:36  xtagon: Go to college?
02:36  dpecka: i reinstalled my distro to latest version and vim is just doing things like automatically add ^\t{$n} and when commenting and press enter new line begins with ^# .. wth?
02:36  Araxia: witquicked: you could manually change the filetype to javascript, indent your block, then switch it back to ruby.
02:36  dpecka: howto disable these inane extensions please
02:36  witquicked: Araxia, aha... hmm, I'll give that a try
02:37  xtagon: dpecka: What distro?
02:37  Araxia: witquicked: i doubt using multiple filetypes will work in this instance, but sometimes it can, e.g. :set ft=ruby.javascript
02:37  dpecka: opensuse
02:37  dpecka: xtagon: there are just enabled some extensions which i've seen never before
02:37  witquicked: oic.... I'm giving that a try right now.
02:37  dpecka: i just want to disable them
02:38  dpecka: sorry for probably confusing explanation
02:38  witquicked: Araxia, nope, the dual filetype didn't work... gonna try the other method
02:39  witquicked: Araxia, that worked like a charm!
02:39  witquicked: thanks
02:39  xtagon: dpecka: Sorry, I'm not familiar with opensuse.
02:40  Araxia: witquicked: if you do this regularly, it might be worthwhile to look for something like a rails plugin that might be designed to accommodate embedded html/js.
02:40  xtagon: dpecka: Does this only happen for a certain filetype, or any normal file?
02:41  witquicked: right... like rails.vim
02:41  witquicked: I'm not in ruby all that much, but if I start getting into more, I'll be installing that plugin
02:42  kwtm: Raimondi: Sorry, winding down with last questions --it mostly works now.  How do I store the contents of a register into another register?  E.g. when register + contains a phone number with which I invoked the Phone() function, I also want to store the number in register p (let's say).
02:42  Araxia: witquicked: in general mixed languages require a specially tailored plugin.
02:42  Raimondi: let @p = @+
02:42  Raimondi: kwtm: ^
02:44  kwtm: Raimondi: I see, still need to do it in a function.  Not a problem, though.
02:44  witquicked: that kinda makes sense... I know that IDEs generally have a whole bunch of plumbing to do language-type detection, and that vim is relying on much more straightforward methodology
02:46  Araxia: witquicked: yup. no static analysis going on here. just pattern matching.
02:46  kwtm: Raimondi: Final question: how do I invoke a normal mode keymapping from visual mode? I want to   :nmap ,pp :call Phone()    and then   :vnoremap ,pp "+y<Esc>,pp   So that if I (say) decide to replace Phone() with Phone2(), I only need to replace the nmap keymapping, without needing to replace the vnoremap mapping also (otherwise is an invitation for errors and inconsistency)
02:47  Raimondi: :h :normal
02:47  kwtm: However, the example I gave above doesn't seem to work -- the mapping does not come out of visual mode after the "+y<Esc>   so that the   ,pp   part is not recognized as something to be remapped to in normal mode?
02:50  kwtm: Raimondi: checked ":h :normal"; it doesn't seem to be what I'm looking for.  Maybe I'm asking wrong.  For example, this works:   :nmap ,pa A      :imap ,pa <Esc>,pa    which puts me into insert mode at the end of the current line whether I'm in normal mode or insert mode.
02:50  kwtm: Note that if I decide to change this to "insert mode at BEGINNING of line, I can change to    :nmap ,pa I   and I won't need to change the :imap mapping since it automatically goes to the nmap mapping.  How do I do this for visual mode?
02:53  Raimondi: use vmap instead of vnoremap
02:55 --- peth_ is now known as peth
02:57  dpecka: xtagon: it's .pl suffixed perl script .. sorry for lag
02:59  xtagon: dpecka: Not sure how to help you, sorry :(
02:59  dpecka: xtagon: it just seems like some feature .. nothing more .. it tries to act smart and help you by automaticaly manage tabs from left side and adding ^# on new line if previous is comment
02:59  dpecka: no problme .. thanks anyway xtagon
03:00  xtagon: Try looking for /usr/share/vim/vim72/indent/perl.vim
03:00  xtagon: Might be different on your system
03:00  jamessan: dpecka: :help 'fo   for the # behavior
03:00  kwtm: It all works!  Thanks all.  Toddler up now --done nap --must resume running after him.  Thanks all!
--- Log closed Mon Nov 15 04:11:18 2010
--- Log opened Mon Nov 15 04:11:39 2010
04:11 --- Users 565 nicks [0 ops, 0 halfops, 0 voices, 565 normal]
04:12 --- Channel #vim was synced in 69 seconds
04:48  dsetchell: hello all, I've a few utility functions that I'd like to use in multiple plugin scripts. Should I make them global, i.e. g:basename or is there some other best practice?  ps, i'm quite new to vim and thanks in advance
04:49  ormaaj: So, which of these is true: "There are in fact four main methods available for indentation, each one
04:49  ormaaj: overrides the previous if it is enabled" or "Normally 'autoindent' should also be on when using 'smartindent'."
04:50  ormaaj: Unless that's just ambiguous wording to mean "smartindent is a superset of autoindent"
04:52  lumgwada: dsetchell: :he autoload is often a good spot for utility functions
04:54  lumgwada: dsetchell: :he write-library-script probably gives a better overciew
04:56  dsetchell: lumgwada: awesome, thanks so much!
--- Log closed Mon Nov 15 06:58:47 2010
--- Log opened Mon Nov 15 08:19:47 2010
08:19 --- Users 554 nicks [0 ops, 0 halfops, 0 voices, 554 normal]
08:20 --- Channel #vim was synced in 67 seconds
08:20 --- daniel___ is now known as daniel
08:21  jorrit: Hi
--- Log closed Mon Nov 15 09:07:12 2010
--- Log opened Mon Nov 15 09:12:21 2010
09:12 --- Users 561 nicks [0 ops, 0 halfops, 0 voices, 561 normal]
09:12  iaj: lo' there
09:13 --- Channel #vim was synced in 70 seconds
09:30  iaj: can I somehow delete everything but not the currently visual selected?
09:48  the_isz: iaj: ygg"_dGP  if you need it often, just make a mapping :)
09:52  iaj: the_isz: yeaah that's right... I did a "a... and normally removed the document now ;)
09:52  iaj: thought theres some way of using :v :D
09:53  the_isz: iaj: don't know one...
09:59  tonymec: iaj: well, you could e.g. do :1,'<-1d | '>+1,$d (that's two ex-commands on one line: delete from line 1 to just before '< (the start of the visual area) and from just after '> to the end. You may need to hit Ctrl-B after the colon to remove the '<,'> or else insert the first ex-command between them
10:00  tonymec: iaj: but unlike the previous solution (the_isz's) this always works linewise
10:11  pif: hi, how do I put vim in utf8 mode?
10:12  FernandoBasso: pif: :set encoding=utf-8 for the content of the buffer, but not the file itself, and :set fileencoding=utf-8 for the file and its contents.
10:12  pif: thanks
10:13  FernandoBasso: pif: :help 'fileencoding'.
10:18  tonymec: pif: http://vim.wikia.com/wiki/Working_with_Unicode
10:21  pif: oki
10:21  iaj: tonymec: thanks.. heh.. I just hoped there would be an easy - already implemented way to achieve my task in vim
10:23  tonymec: iaj: well, paste the code snippet from that article into your vimrc; and if it doesn't work, come back to the wiki page
--- Log closed Mon Nov 15 10:27:45 2010
--- Log opened Mon Nov 15 10:34:16 2010
10:34 --- Users 583 nicks [0 ops, 0 halfops, 0 voices, 583 normal]
10:35 --- Channel #vim was synced in 72 seconds
10:54  _rane: is there a better alternative for minibufexplorer? I'm getting some very weird behavior on MacVim occasionally... sometimes the minibuf split takes up the whole window and I have to resize it back to 1 row with mouse which is annoying
--- Log closed Mon Nov 15 11:07:41 2010
--- Log opened Mon Nov 15 11:08:26 2010
11:08 --- Users 582 nicks [0 ops, 0 halfops, 0 voices, 582 normal]
11:09 --- Channel #vim was synced in 73 seconds
11:14  erez: Hey, I've added the 'relativenumber' option to vimrc, only it only work on the first window in a split window screen
11:16  spiiph: Did the split exist before you set the option?
11:20  zoran119: i tried to use terminus font i gvim, but every time i move the cursor, the cursor will cover the character completely for half a second and only then will i be able to see the character
11:20  zoran119: anyone experiencing the same?
11:26  ivaldi: hi - the "ver{N}"-curser doesn't work in the console-ui ?
11:32  the_isz: does anyone here speak ivaldic?
11:32  the_isz: AND english?
11:35 --- TK is now known as Guest72436
11:40  bsod1: I just started to use gvim, I copied someone else's .vimrc file but now I can't use ctrl+arrow keys, do you have any idea which command that might be?
11:44  FernandoBasso: bsod1: First of all, don't use arrow keys.
11:44  bsod1: FernandoBasso: yea I know but I just started to use vim and I have some bad habits which are hard to break
11:44  FernandoBasso: Secondly, it is not a good idea just copying someone else's vimrc without understanding it.
11:45  FernandoBasso: bsod1: Vim takes some time to grasp. There is no shortcut.
11:45  FernandoBasso: bsod1: If you really want to help yourself, run *vimtutor* and then don't be afraid to ask any question you have.
11:46  FernandoBasso: Now concerning your vimrc, paste it somewhere and someone can take a look.
11:46  sqz: I just rename a random mp3 to vimrc, works as a charm!
11:46  sqz: everybody should try it! :P
11:47  FernandoBasso: bsod1: Also, not being able to use arrow keys, is probably something someone did on purpose, to force himself/herself to use vim properly.
11:48  FernandoBasso: And, using arrow keys is not a *bad* habit in other editors. You just *have* to use them. There is no escape.
11:48  bsod1: FernandoBasso: real problem is I can't use ctrl+hjkl or ctrl+arrows, it's not about just arrow keys
11:49  FernandoBasso: bsod1: Paste your .vimrc file.
11:49  bsod1: here is my .vimrc http://bpaste.net/show/11039/
11:49  bsod1: I just stole it from stackoverflow
11:50  FernandoBasso: bsod1: Vim's config is much to personal for each person anyway.
11:51  bsod1: FernandoBasso: don't you use ctrl+hjkl keys?
11:52  FernandoBasso: Those no.
11:52  bsod1: :S I think it's useful.
11:52  bsod1: so did you see why I can't use ctrl key with my .vimrc
11:53  FernandoBasso: I use ^h to delete the char on the left, or ^w to delete the word on the left, and things like this.
11:53  FernandoBasso: You ctrl right/left are mapped to deal with tabs.
11:54  FernandoBasso: Delete those lines that start with "nnoremap" and restart vim. It 'should' work then.
11:55  bsod1: FernandoBassıo: thanks, and how do I use multiple tabs? Do I need any additional extensions? *sorry I'll read vimtutor*
11:56  FernandoBasso: bsod1: You can use tabs, yes. Not need to be installed to this. But be aware that thera are more than tabs to manages open files.
11:56  FernandoBasso: vimgor: tabs
11:56  vimgor: Tab pages are not buffers, don't try to force them to act like buffers. Consider tab pages like viewports, layouts, or workspaces. Trying to setup 1 tab page == 1 buffer is an exercise in futility. Do ':set hidden' and get started. Get FuzzyFinder, LustyExplorer or BufExplorer to make getting around your buffers easier. See http://vim.wikia.com/wiki/Category:Tabs for more info.
11:56  FernandoBasso: That might sound foreign to you, if you just started using vim.
11:57  bsod1: so C means ctrl in .vimrc, but what is ALT key?
11:57  FernandoBasso: bsod1:  :help A
11:58  FernandoBasso: sorry,
11:58  FernandoBasso: :help alt
11:58  FernandoBasso: (it explains better than I do. :D)
11:58  bsod1: FernandoBasso: great, thank you very much
11:59  FernandoBasso: bsod1: And, basically, to open a file in a new tab, from inside vim do :tabedit my_file
11:59  FernandoBasso: And to navigate through tabs user :tabnext, :tabprevious, :tablast, etc...
12:00  bsod1: FernandoBasso: I assigned them to M-left and M-right
12:00  cheater99: how can i make vim use windows line endings?
12:01  bsod1: vim is really fast, I was using Komodo Edit for python on ubuntu linux, it does nothing useful but it's the slowest editor(or ide) I've ever seen
12:01  bsod1: how do I save a file :P
12:01  FernandoBasso: cheater99: See if this helps --> http://vim.wikia.com/wiki/File_format
12:02  cheater99: thanks, looking
12:02  FernandoBasso: boysetsfrog: :write file_name or :write if it already has a name.
12:03  FernandoBasso: bsod1: :help vim-modes
12:04  FernandoBasso: You basically need: normal mode, insert mode, and command-line mode.
12:06  bsod1: FernandoBasso: how can I open vimtutor in a new tab?
12:09  FernandoBasso: bsod1: You have  to type it in a terminal, not *from* within vim.
12:10  FernandoBasso: (at least I don't know other way)
12:16  bsod1: which command to set gvim's height and width? I want it to open 500, 500 for example
12:17  FernandoBasso: Are you using gvim, or in vim in terminal?
12:17  the_isz: bsod1: that's not part of (g)vim. in linux, you would configure that with .Xdefaults.
12:17  bsod1: FernandoBasso: gvim
12:18  _rane: is there a non-plugin way to increase/decrease a number?
12:18  FernandoBasso: bsod1: the_isz is right. You can set the lines and columns if you want.
12:18  bsod1: FernandoBasso: how?
12:18  FernandoBasso:  ~/.gvimrc set lines=n and set columns=n
12:19  ggergelz: hi. how can i set expandtab only for python files?
12:19  the_isz: FernandoBasso: so you mean i'm wrong ;)
12:19  FernandoBasso: the_isz: No, you are right.
12:20  the_isz: FernandoBasso: i said it wasn't part of (g)vim, that's not true if you can configure the width and height in .gvimrc
12:20  FernandoBasso: Oh, my level of English is always embarrassing me.
12:20  FernandoBasso: You can configure the numbers of lines and columns. Not the width and height. I'm confused.
12:21  bsod1: FernandoBasso: :) thanks that's what I was looking for
12:21  FernandoBasso: You can also have (in gvimrc) autocmd GUIEnter * winpos 200 300 (just for sake of illustration)
12:22  the_isz: ggergelz: try something like  au FileType python set expandtab  in your .vimrc
12:22  FernandoBasso: I have that to always start gvim in the place where I like it on the screen.
12:22  the_isz: ggergelz: or create a file ~/.vim/after/ftplugin/python.vim and put  set expandtab  in there.
12:23  ggergelz: ok. thanks
12:23  the_isz: ggergelz: you're welcome
12:26  bsod1: since :w is saving the file, can I add my .vimrc nnoremap <silent> <C-s> :w ?
12:28  spiiph: The RHS should be :w<CR>
12:28  bsod1: spiiph: thanks
12:28  bsod1: but :w gives me E510
12:28  bsod1: do you have any idea about e510? it says it can't create backup file
12:28  FernandoBasso: bsod1: :help E510
12:29  FernandoBasso: bsod1: You have a backup line in .vimrc, but didn't create the dir for saving the backup files.
12:29  spiiph: bsod1, probably a permission problem.
12:30  bsod1: FernandoBasso: great, thanks
12:31  FernandoBasso: bsod1: That is one of the reasons I said it is not a good idea just copying a vimrc file without understanding its contents. But you are doing fine, anway.
12:31  FernandoBasso: :d
12:32  bsod1: :P
12:33  ggergelz: thanks. bye
--- Log opened Mon Nov 15 12:43:08 2010
12:43 --- Users 585 nicks [0 ops, 0 halfops, 0 voices, 585 normal]
12:44 --- Channel #vim was synced in 72 seconds
12:44  paissad: i would like to delete all lines not containing "stuff"
12:44  paissad: :g/!stuff/d
12:44  paissad: does not work
12:45  iaj: paissad: :v/stuff/d
12:46  paissad: iaj, thanks
12:49  iaj: yw
13:01  complete: HEy People! How do I cut to the first previews "?" sign?
13:02  complete: say: the current line is "abc?defghij" and im on the "g". how do i delete "def"?
13:05  spiiph: dT?
13:06  complete: thanks!
13:09  bsod1: how can I customize my vimrc to get another line with full word? when a line is long enough, my vim enters new line with some letters of same word, not the complete word *sorry for my english*
13:12  peth: bsod1: see :h 'lbr'
13:13  dfrank: guys, does anybody use project.tar.gz plugin?
13:13  bsod1: peth: so set lbr?
13:14  peth: should do it, yes
13:27  grobda24: I just want to quickly make simple HTML text formatting and colours, links and images. Is HtmlHelper the best script/plugin for this ?
13:33  BuenGenio: hello, is this channel logged?
13:34  complete: BuenGenio: how would you know if someone logs it?
13:35  FernandoBasso: I log it.
13:35 --- silex is now known as Silex
13:35  FernandoBasso: BuenGenio: You mean, somewhere online, I assume.
13:35  FernandoBasso: Correct?
13:35  complete: is it legal to log freenode channels?
13:35  BuenGenio: I need to see some history of my conversation with somebody here
13:36  BuenGenio: I got some help about two weeks ago, but didn't save the commands
13:38  FernandoBasso: BuenGenio: Try asking again.
13:39  BuenGenio: okay, I have a 800,000 lines long CSV file, and I have a list of lines (in a separate file) that I need to copy from that CSV
13:39  BuenGenio: how do I do it?
13:39 --- tk is now known as Guest89582
13:39  BuenGenio: I remember something like @let:=map(copy('lines.txt'),join('getline',':v')) something like that
13:39  Silex: so file A has 800K records
13:40  Silex: file B has what exactly?
13:40  Silex: and what do you need with A & B?
13:40  BuenGenio: file B has the line numbers of lines I need in file A
13:40  Silex: ah
13:44 --- fedesilva_ is now known as fedesilva
13:45  BuenGenio: is that possible?
13:45  BuenGenio: I mean, of course
13:45  BuenGenio: I mean, would anyone know how to do it?
--- Log closed Mon Nov 15 13:56:52 2010
--- Log opened Mon Nov 15 13:57:00 2010
13:57 --- Users 600 nicks [0 ops, 0 halfops, 0 voices, 600 normal]
13:57  FernandoBasso: I agree. Searching for 'windows new lines' in a #vim log would be perhaps even more efficient that reading the faq.
13:58 --- Channel #vim was synced in 73 seconds
13:58  tmr: General freeode policy is that public logging should not be done unless it's made clear to all users that someone is doing so.
13:59  FernandoBasso: tmr: How to 'make it clear' to all users?
14:00  BuenGenio: like saying it in the topic, I would have thought
14:00  FernandoBasso: Having it in  /topic enough?
14:00  tmr: Topic, announce it when user joins, ...
14:02  mgedmin: I could set up irc logs, but IIRC last time I offered most people didn't want that
14:02  mgedmin: well, for values of "most people" meaning 1 or 2 that were awake at the time and bothered to answer
14:03  FernandoBasso: I'd like to have #vim logs. Also, extremely useful.
14:03  BuenGenio: I'd like to have logs back from when there were no logs
14:04  PlasmaHH: hi, doey anyone know if there is a patch available that makes vim 7.3 work with glibvs FORTIFY_SOURCE strcpy checking stuff?
14:06  dfrank: tmr: i just asked about logging at #freenode, people said nothing about 'policy'. Just said that some channels have logging bot, some not.
14:06  spiiph: mgedmin, it's enough that someone who is farily regular doesn't want it.
14:06  spiiph: Anyway, I think there are some unofficial logging going on anyway. I've seen logs on the net.
14:06  mgedmin: spiiph, could be that was the case; my recollection was hazy
14:07  mgedmin: dfrank, iirc there's policy that users must be informed if logging is going on; I think you can find that on freenode's web page somewhere
14:07  bsod1: when I search something, the word's color is changing, how can get it back?
14:07  mgedmin: bsod1, :noh
14:07  tmr: dfrank, then tell them to update server motd which say otherwise.
14:07  sitaktif: bsod1: (and you probably want to map it)
14:08  bsod1: great, thanks
14:10  bsod1: so when I search something, n gets next word, but which key gets previous word?
14:10  sharat87: N
14:10  kenda: bsod1: N
14:11  bsod1: oh, thanks
14:11  dfrank: tmr: well, nothing prevents to put in header something like "NOTE: channel logging enabled. You can look for logs here: http://blablabla.ru"
14:12  sharat87: bsod1: Its like this, if you search forward with `/` then n gives next result and N gives previous, but if you search backward with `?` then n gives previous and N gives next :)
--- Log closed Mon Nov 15 16:31:38 2010
--- Log opened Mon Nov 15 17:03:52 2010
17:03 --- Users 616 nicks [0 ops, 0 halfops, 0 voices, 616 normal]
17:04 --- Channel #vim was synced in 75 seconds
--- Log closed Mon Nov 15 17:13:40 2010
--- Log opened Mon Nov 15 17:14:02 2010
17:14 --- Users 612 nicks [0 ops, 0 halfops, 0 voices, 612 normal]
17:15 --- Channel #vim was synced in 73 seconds
17:37  unkanon: how do I indet a block so that all of the = operators are aligned?
17:38  unkanon: indent*
17:40  kurkale6ka: vimgor tabular
17:40  vimgor: Tabular is godlygeek's plugin to align text in vim, http://github.com/godlygeek/tabular
17:41  unkanon: great, thanks!
17:44  RoosterJuice: is there a way to delete without putting what you delete into the buffer?
17:44  RoosterJuice: er
17:44  RoosterJuice: the copy?
17:44  RoosterJuice: delete vs cut
17:44  deryni: "register" and see :help "_
17:46  squ: hi
17:46  squ: I need to insert a text
17:46  squ: inside a sentece
17:47  squ: between to words :)
17:47  squ: two
17:47  squ: with :s
17:47  jink: Ok, good
17:47  jink: for you,
17:47  jink: maybe enter
17:47  jink: isn't punctuation.
17:48  squ: answer or silence plz
17:48  jink: Hahahah. :)
17:48  jink: Silly squ. :)
17:49  squ: s/text1\zs.*$/insert\&/
17:49  unkanon: if I download that tabular plugin, can I :so it so that I don't have to close vim?
17:49  unkanon: I'm using pathogen
17:50  squ: unkanon, you may try to save a vim session
17:50  squ: and then reopen the vim in the same state as you closed it with vim -S
17:51  unkanon: squ: does saving the session save the layout of the windows I have? (btw this is the console vim, not gvim)
17:51  squ: wow console vim
17:51  squ: this changes everything
17:51  unkanon: no it doesn't :P
17:51  squ: so why ask?
17:52  unkanon: 'cause calling the viewports "windows" could be confusing
17:52  unkanon: idk
17:52  squ: you could try at least two times of what I suggested by that time
17:52  squ: :)
17:53  unkanon: i still have to google how to save a session though
17:53  squ: :h
17:53  unkanon: plus git clone https://github.com/godlygeek/tabular ain't working anyway (server error it says)
17:53  unkanon: squ: thx
17:53  squ: what that plugin is about?
17:54 * squ removed everything from plugin directory :)
17:54  unkanon: oh I had to do git clone https://github.com/godlygeek/tabular.git, silly me
17:54  unkanon: it's for aligning text based on some string in the middle of the lines
17:54  unkanon: so that var = 6 and mylongvar = 7 have their = signs aligned
17:57  sudoer: i have "word1.word2.word3CURSOR_HERE"  and i am in insert mode, how can I delete word3 and leave the rest? i know cntrl-w will delete the whole thing
17:58  FernandoBasso: sonne_: dT.
17:58  spiiph: sudoer, you probably shouldn't have . in your 'iskeyword'
17:58  FernandoBasso: sudoer: dT.
17:59  peth: sudoer: it shouldn't, by default. if it does, check your 'iskeyword'.
18:00  sudoer: what is iskeyword? is that a vim option?
18:00  peth: yes
18:00  peth: :h 'isk'
18:02  sudoer: k, awesome, thanks
18:02  sudoer: i dont want to change iskeyword, so i guess no simple way to do it
18:04  kurkale6ka: sudoer: ^ocvb
18:08  helo: is there a way to search and replace within a function body?
--- Log closed Mon Nov 15 18:13:42 2010
--- Log opened Mon Nov 15 18:14:10 2010
18:14 --- Users 616 nicks [0 ops, 0 halfops, 0 voices, 616 normal]
18:14 --- Server: [niven.freenode.net] [freenode-info] if you're at a conference and other people are having trouble connecting, please mention it to staff: http://freenode.net/faq.shtml#gettinghelp
18:14  jink: :set fileformat=unix
18:14  jink: Then save it.
18:14  ivan-kanis: jink: thanks
18:15 --- Channel #vim was synced in 73 seconds
18:19  bsod1: how can I indent a block which I select in visual mode?
18:20  bsod1: and how can I paste something from clipboard
18:20  kurkale6ka: =
18:20  deryni: :help >  :help "+
18:23  bsod1: I don't understand anything about this help subject
18:23  bsod1: I want to indent some text, not a code block
18:24  bsod1: and I want to copy some text to clipboard and then paste from clipboard
18:26  kurkale6ka: = on your visual block
18:26  deryni: :help > was for indenting, :help "+ was for the clipbaord, as is :help clipboard and :help 'clipboar
18:26  bsod1: kurkale6ka: no it doesn't work
18:27  kurkale6ka: bsod1: what is your file type
18:27  bsod1: kurkale6ka, python
18:27  bsod1: ok, > worked
18:27  bsod1: but = didn't work
18:27  kurkale6ka: what is :filetype giving
18:28  bsod1: detection on filetype on indent on
18:28  deryni: = isn't going to work for python, it can't really.
18:30  bsod1: I think I need a shortcut to copy something to clipboard and paste from clipboard
18:32  jwmann: Is there a way to wrap text on an element? Like for example I want to comment out something on the line. I'd go /* before and */ after.
18:32  isaacs: bsod1: i put this in my .vimrc: set clipboard=unnamed
18:32  jmcantrell: jwmann: there are good plugins for that
18:32  bsod1: isaacs: so how can you paste or copy after this command?
18:32  jwmann: jmcantrell: Yea?
18:33  isaacs: bsod1: y=copy, d = cut, p = paste
18:33  isaacs: bsod1: or i can switch into input mode and do Cmd-V to paste
18:33  bsod1: isaacs: so after this command every time you copy something it copies to clipboard right?
18:33  jmcantrell: jwmann: i would recommend NERDcommenter, but there are others
18:33  isaacs: bsod1: you have to compile with clipboard
18:33  isaacs: bsod1: yeah, unless you set the register
18:33  bsod1: isaacs: what do you mean by compile with clipboard?
18:33  deryni: The default setting of clipboard should work correctly for that when vim can talk to X.
18:34  isaacs: bsod1: because i wanted to have "x" be just a "throw away" command (since it's often just one char at a time anyway), i also did this:  noremap x "_x
18:34  isaacs: bsod1: i mean, when you compile vim, you have to do ./configure --with-clipboard or something
18:34  isaacs: bsod1: it might already be compiled that way
18:34  isaacs: bsod1: run `vim --version` to see what it was built with
18:35  isaacs: bsod1: you should see "+clipboard" in the list of options.  if you see "-clipboard", then it won't work.
18:35  bsod1: isaacs: -clipboard :(
18:36  isaacs: bsod1: yeah, i had to compile from source.
18:37  bsod1: isaacs: is it the only way to copy to clipboard?
18:37  isaacs: bsod1: well, it's how i got it working on my system, there are probably other ways.
18:37  isaacs: bsod1: you could also maybe map stuff to !pbcopy and !pbpaste
18:38  isaacs: bsod1: but compiling it really isn't that bad
18:38  deryni: What sort of system are you on?
18:38  bsod1: deryni: ubuntu 10.04
18:40  deryni: vimgor: vim-tiny
18:40  vimgor: vim-tiny is the default Vim package for Debian/Ubuntu. It is built with a small subset of features and is not intended to be used full-time. You most likely want to install a more capable package of the Vim editor. If you want gvim install the vim-gtk package, otherwise install the vim package.
18:41  rindolf: Hi all.
18:42  peth: that vimgor entry is a little off. it should recommend vim-gnome, not -gtk.
18:43  deryni: I believe those are functionally identical.
18:43  peth: deryni: :h gnome-session
18:45  peth: or rather :h gui-gnome ("It looks a bit different though, and implements one important feature that's not available in the plain GTK+ GUI:  Interaction with the session manager.")
18:47 --- WebDragon|laptop is now known as WebDragon
18:47 --- zorzar is now known as zorzar_away
18:48  deryni: <shrug>
18:49  peth: :P
19:11  sanmarcos: is there a way to get a file from the net?
19:11  sanmarcos: also is there a way to catch a ctrl/cmd-v and :set paste before?
19:13  mgedmin: :e http://example.com/ works
19:13  mgedmin: (you can't save, though)
19:13  mgedmin: I don't know how cmd-v works in your vim
19:13  mgedmin: if the terminal intercepts it, then no, there's no way to set paste automatically
19:14  mgedmin: if you've a custom mapping in your vim, then set paste is not necessary, "+p does the right thing
19:14  mgedmin: but now that I think of it, mere existence of your question implies "terminal interceptS"
19:17  sanmarcos: then can I map cmd-v to "*p?
19:20  mgedmin: only if your terminal lets that key through to vim
19:20  mgedmin: or if you use gvim
19:20  sanmarcos: i am using a graphical client
19:21  mgedmin: is cmd a separate key from ctrl?
19:21  sanmarcos: yes
19:21  sanmarcos: i am using MacVim In fact
19:21  rson: yeah, it's <D-x> instead of <C-x>
19:22  sanmarcos: I get ^R+ if I do ctrl-v cmd-v
19:22  mgedmin: interesting
19:22  mgedmin: very interesting
19:22  mgedmin: because in insert mode <C-R>+ is supposed to insert the contents of the clipboard
19:22  sanmarcos: and ^Y for ctrl-v cmd-c
19:29 --- rivoot_ is now known as rivoot
19:33  gustavderdrache: is there a way to have vim obliviously fold any multi-line (), [], or {}?
19:33  gustavderdrache: I'm trying to use perl_fold, but it's messing up on my cuddled elses
19:33  gustavderdrache: and it won't fold things like my %hash = ( ...
19:43  rindolf: Hi all.
19:59  solarwar: hi, how can I change my $HOME variable in vim?
20:01  telemachus: solarwar: What do you mean change it? It's an environment variable
20:01  telemachus: solarwar: Do you mean change where vim looks for something?
20:01  solarwar: well, I'm on windows, and I start up gvim, and it points my $HOME variable to U:\
20:02  solarwar: which is supremely annoying since U: is a mounted drive and its killing gvim's performance
20:02  solarwar: so i'm interested to know 1. why U:\ is the home directory, 2, how I can change it
20:02  bosie: anyone in herer using latexbox
20:03  gkatsev: looks cool, except for the whole 'smartindent' thing
20:03  telemachus: solarwar: Sorry, I don't know how you might switch that.
20:04  rindolf: solarwar: what does set say in CMD?
20:05  rindolf: solarwar: I mean the "set" command.
20:05  solarwar: rindolf, E518: Unknown option: HOME=C:\                                                                                                     746,14-38     50%
20:06  rindolf: solarwar: hmm....
20:06  rindolf: solarwar: I mean "set" alone.
20:07  rindolf: solarwar: http://ss64.com/nt/set.html
--- Log closed Mon Nov 15 20:13:40 2010
--- Log opened Mon Nov 15 20:14:01 2010
20:14 --- Users 628 nicks [0 ops, 0 halfops, 0 voices, 628 normal]
20:14  solarwar: anr78, capslock :)
20:15  gkatsev: but that isn't a vim mapping
20:15 --- Channel #vim was synced in 73 seconds
20:15  anr78: :)
20:15  gkatsev: I prefer ctrl there, personally.
20:16  anr78: I'm a long time emacs-user, but want to give vim a shot for c and python. I got as far as the start of the tutorial before I stuck ;)
20:16  ch077179: I am editing a latex file, and whenever I type $$ I get an annoying <++> appended. How can I stop that?
20:16  solarwar: ch077179, that looks to me like you programmed an abbriviation..
20:16  solarwar: or maybe the synatx file did?
20:17  solarwar: but I've never used a syntax file that would dos omething like that
20:17  solarwar: anr78, you don't like the capslock idea? :(
20:17  deryni: vimgor: latexsuite
20:17  vimgor: latexsuite is see latex-suite, deryni
20:17  solarwar: anr78, i've switched caps with escape
20:17  deryni: vimgor: latex-suite
20:17  vimgor: An slightly-maintained, buggy, over-complicated plugin intended to make it easier to author (La)Tex files. Often, this is better served by using a standalone snippets plugin (like snipMate) to define the snippets you actually find useful as well as using the command ':compiler tex' to allow using Vim's quickfix feature when compiling TeX to an output format.
20:18  bosie: how do i use the let command from the "command line" in vim?
20:18  bosie: if i type ":let ..." it doesn't seem to like it ;)
20:18  _rane: works for me, i think...
20:18  ch077179: thanks solarwar, this behaviour is there since I installed vim. How can I switch it off?
20:18  gkatsev: :let foo = 5
20:19  gkatsev: bosie: :h :let
20:19  deever: hi
20:19  bosie: my fault, nevermind guys
20:19  anr78: solarwar: I thought you were joking :)
20:20 --- me is now known as Guest38258
20:20  deever: how can i map to a command containing a search without getting E488 "Trailing characters"?
20:21  Guest38258: Hi. How can I set vim to break line at the end of windows width but with end of line include?
20:22  strull_: deever: what did you try?
20:24  deever: strull_: no, forget it! a | char was the problem! ;)
20:24  strull_: mmm ... I will never forget this :)
20:42  bosie: anyone knows how i can get vim-latex to not automatically show the quickfix list?
20:43  rudi_s: vimgor: latex-suite
20:43  vimgor: An slightly-maintained, buggy, over-complicated plugin intended to make it easier to author (La)Tex files. Often, this is better served by using a standalone snippets plugin (like snipMate) to define the snippets you actually find useful as well as using the command ':compiler tex' to allow using Vim's quickfix feature when compiling TeX to an output format.
20:43  rudi_s: bosie: I don't know, just FYI.
20:43  bosie: yea i know latex-suite is shit
20:43  rudi_s: Or is vim-latex something different?
20:43  bosie: and buggy
20:44  bosie: i thought its the same
20:44  Guest38258: How to automatic wrap whole word that extends 80th character in line?
20:44  unkanon: what's the command that does the same as :set ro  but local to the window instead of the buffer?
20:44  rudi_s: Guest38258: :set tw=80
20:44  rudi_s: :h tw
20:44  rudi_s: :h'tw
20:45  Guest38258: rudi_s, Thank you.
20:45  rudi_s: np, there's also gq to reformat :h gq
20:46  rudi_s: Very useful in combination with ip gqip to (re-)format a paragraph.
20:49  bsod1: how can I open a file with relative path?
20:50  KeeperOfTheSoul: bsod1: just specify a relative path?
20:51  bsod1: KeeperOfTheSoul: didn't work
20:51  KeeperOfTheSoul: bsod1: what's your current working directory?
20:51  KeeperOfTheSoul: bsod1: :pwd
20:52  unkanon: bsod1: also, try using <TAB> as you type, to autocomplete paths
20:52  bsod1: KeeperOfTheSoul: when I type :pwd I realized that I'm not the same directory with file I'm editing
20:52  gkatsev: bosie: rudi_s: vim-latex and latex0suite are the same thing
20:52  rudi_s: Guest38258: Good to know, thanks.
20:52  rudi_s: gkatsev: ^
20:53  gkatsev: :)
20:53  rudi_s: Sorry, pressed enter too fast,
20:53  bosie: gkatsev: good, now i just need to know how to hide quickfix ;)
20:53  KeeperOfTheSoul: bsod1: :he cd also see 'autochdir
20:54  gkatsev: bosie: :h :cq
20:54  gkatsev: also :h :ccl
20:54  bosie: gkatsev: the quickfix list is a vim feature?
20:54  gkatsev: yes
20:54  gkatsev: :h quickfix
20:54  gkatsev: all there
20:54  gkatsev: also :h :lcl
20:55  bosie: ok
20:55  anr78: for c/python, are there any must-haves that I should install before even starting to learn vim? I have added basic setup for cscope, and omnicompletion + pylint for python.
20:55  bosie: didn't know that, thought it was a vim-latex thing
20:55  gkatsev: bosie: nope. vim thing :)
20:56  gkatsev: anr78: not much, really. You should enable python support :echo has('python') or something like that
20:56  bosie: but if i read this :h quickfix thing correctly
20:56  bosie: vim-latex has to invoke quickfix
20:56  gkatsev: yes
20:56  anr78: gkatsev: thought that was there already.
20:56  anr78: I need a good git-plugin
20:56  gkatsev: anr78: it depends on whether it was compiled or not.
20:57  gkatsev: anr78: what OS?
20:57  bosie: gkatsev: so i never want to see it except for errors, i can't actually tell quickfix it but vim-latex has to filter it?
20:57  Typh: I've been using vim for a few years and my only must-have is nerdtree
20:57  gkatsev: nerdcommenter is also great
20:57  anr78: gkatsev: it is compiled in. right now I'm on MacVim @ home. @ work I'm on Ubuntu
20:57  bosie: Typh: and command-t
20:57  Typh: and csappox, but that's just to get my theme working in non-gvim
20:58  gkatsev: anr78: yeah, then most likely you have python support (:h :python) you can eval some python stuff. Windows vim doesn't have python  support by default.
20:58  gkatsev: anr78: you way want to take a look at the conque plugin http://code.google.com/p/conque/
20:58  gkatsev: anr78: especially since you said you are coming from emacs.
20:58  gkatsev: anr78: any particular reason for the switch? or just testing the waters?
21:00  anr78: gkatsev: testing the waters :)
21:00  gkatsev: ok
21:01  gkatsev: personally, i've gotten much more efficient in editing code in vim
21:01  gkatsev: though, emacs is more powerful if you are programming in stuff like scheme or w/e where evaling the sexprs right there is kind of nice and cool actually
21:01  gkatsev: but conque actually provides simliar functionality and vim can do it for python and ruby and a few others as well
21:03  anr78: I'm usually doing C, C++ and Python. Conque looks really nice.
21:18 --- WebDragon|away is now known as WebDragon
21:35  fifou: hi
21:37  fifou: When I launch vim 'c' command is already on (i see it with showcmd). This is a problem because if I do 'j' to go in the ligne below, it deletes lines and start insert mode :S
21:38  fifou: I have this problem only with vim (not gvim). Probelm is related to this line in my vimrc (there is no more issue if I comment it) :
21:39  fifou: nnoremap <silent> <Esc> :nohlsearch<CR><Esc>
21:39  chairabanta: I use ruby.vim script and I would have an autocompletion feature during typing text how do I do?
21:39  graywh: fifou, don't map <Esc>
21:40  fifou: why ? It seemed to be a great idea to "automatically" nohl my window
21:47 --- ajpiano is now known as opera
21:47 --- opera is now known as ajpiano
21:48  fow: fifou, use this instead: au InsertLeave :nohlsearch<CR>
21:49  fow: fifou, err, that should be au InsertLeave nohlsearch
21:50 --- rivoot is now known as rivoot_away
21:54  fifou: thank you graywh and fow : i'm about to test
21:57  fifou: it doesn't work fow :(
21:58  dfrank: ls
21:58  dfrank: oops, i'm sorry
21:58  fifou: ;)
21:58  fow: ah, "This command doesn't work in an autocommand, because the highlighting state is saved and restored when"
21:59  fow: ... "executing autocommands"
22:00  fifou: indeed :S
22:01  strull_: vimgor: nohl
22:01  vimgor: :nohl will disable current search highlighting until the next search is performed. A common map to avoid typing :nohl is ':nnoremap <silent> <C-l> :nohl<CR><C-l>'. See also, :help 'incsearch' and :help 'hlsearch'
22:03  fifou: yes, I did that before I thought to map Exc
22:04  fifou: Esc, sorry
22:07  fifou: I choose to use this again. too bad :)
22:24 --- y3llow_ is now known as y3llow
22:25 --- cuba33ci_ is now known as cuba33ci
--- Log closed Mon Nov 15 22:57:23 2010
--- Log opened Mon Nov 15 23:02:44 2010
23:02 --- Users 614 nicks [0 ops, 0 halfops, 0 voices, 614 normal]
23:02  jhaddad_: do a lot of people use version control on their .vim folders and keep them synced across machines?
23:03  rindolf: jhaddad_: I do.
23:03 --- Channel #vim was synced in 76 seconds
23:05  jhaddad_: rindolf: do you ever want different settings on different accounts?
23:06  rindolf: jhaddad_: yes, I have a .local.vimrc.vim for that.
23:07  jhaddad_: rindolf: ah, cool.  and you just have an ignore on it?
23:07  rindolf: jhaddad_: ignore?
23:07  rindolf: jhaddad_: it's in ~/
23:07  rindolf: $HOME
23:07  rindolf: I don't keep my entire ~/ under version control.
23:07  rindolf: Though some people do that too.
23:08  jhaddad_: rindolf:, oh, right, right.  i was going to put my .vimrc in the .vim directory and symlink it.
23:09  rindolf: jhaddad_: I symlink my .vimrc too.
23:09  rindolf: jhaddad_: though not to someplace under ~/.vim/
23:09  rindolf: lrwxrwxrwx 1 shlomif shlomif 60 2010-03-07 20:59 .vimrc -> /home/shlomif/conf/trunk/shlomif-settings/vim-conf/vimrc.vim
23:24 --- zorzar_away is now known as zorzar
--- Log closed Mon Nov 15 23:27:57 2010
--- Log opened Mon Nov 15 23:33:20 2010
23:33 --- Users 603 nicks [0 ops, 0 halfops, 0 voices, 603 normal]
23:34 --- Channel #vim was synced in 72 seconds
23:42  Guest38258: Good night.
--- Log closed Tue Nov 16 00:00:30 2010
