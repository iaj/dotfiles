--- Log opened Fri Nov 26 00:00:49 2010
00:24  mhi^: Hmm, I never really used augroups. Can someone give me a good example when to use those?
00:26  mhi^: I mean, what's the advantage over just using normal autocmds?
00:26  Raimondi_: mhi^: If you reload your vimrc it'll duplicate the autocmds unless you can unset them, augroups make that easy.
00:27  mhi^: Hmm, I never do that :>
00:27  Raimondi_: ME neither, but that's just to give you an idea :)
00:28  mhi^: :)
00:30  mhi^: I could use a aug 'perl'. One au could set up general perl stuff, and another one, which only triggers at BufNewFile, could include the shebang at top of the file.. or something like that.
00:30  Raimondi_: augroup helps to manage autocmds as a group, nothing less, nothing more...
00:31 --- Raimondi_ is now known as Raimondi
00:34  homekevin: If you want your own autocommands ungrouped go for it. But if you write a plugin, please put autocommands in a group
00:35  homekevin: Ungrouped autocommands are awfully annoying when one wants to list the current autocommands, or turn off some autocommands.
00:37  mhi^: Ah, okay. For plugins it does make sense. :>
00:41 * mhi^ reorganizes his vimrc
00:59  DasEi: voice ?
01:15  mhi^: How do I insert 2 empty lines from normal mode?
01:15  mhi^: :pu='' | pu=''
01:15  mhi^: ? :-P
01:16  fow: 2o<Esc>
01:18  homekevin: "="\n\n"<Enter>p
01:19  homekevin: 2"="\n"<enter>p
01:21  mhi^: Hmm.
01:21  mhi^: fow: Well, with my mappins I'll get a timeout with 'o'. :)
01:22  mhi^: homekevin: Hmm, nice thinking. I tried something like "let @x = blabla | put x", but didn't know how to include newlines.
01:22  fow: decrease the timeout or change the mappings? ..or create another mapping...
01:23  homekevin: mhi^: Including newlines should always just be \n in a double-quoted string.
01:24  mhi^: Hmm, yea. I thought I did that.
01:24  homekevin: Single-quoted strings are extra-literal. They use exactly what you put in them.
01:24  mhi^: Yea, I know
01:24  mhi^: then I'll go with "let @x="\n\n" | pu x"
01:24  mhi^: thanks to both of you!
01:30  elspeth: hey, can anyone help me with installing snippets? I seem to have something oddly screwy going on.
01:32 * mhi^ is only familiar with snipmate
01:33  elspeth: darn.
01:33  mhi^: If you have trouble with it, try snipmate :)
01:34  elspeth: the main problems i'm finding is that after opening snippy_plugin.vba, doing ls on my .vim directory looks like this: http://pastebin.com/CKwk9Cve and I get the following error when I try and open a new vim: http://pastebin.com/yhaxNccs
01:35  elspeth: problem is i need it for docbook, in particular the mangled variety my workplace is using :/
01:37  mhi^: What does line 973 look like?
01:37  rindolf: Hi all.
01:37  mhi^: hey, rindolf
01:37  rindolf: mhi^: what's up?
01:37  elspeth: mhi^: lemme check.
01:37  mhi^: rindolf: going to bed soon :>
01:38  rindolf: mhi^: ah.
01:38  rindolf: mhi^: I also would like to go to bed soon.
01:38  rindolf: It's 02:37 here.
01:38  elspeth: mhi^: doc/snippets_emu.txt
01:38  elspeth: and that's all it says, which is more than a little odd.
01:40  homekevin: elspeth: Wait, that can't really be the 'ls' output??
01:40  elspeth: homekevin: honest to god, it is.
01:41  mhi^: Than your system is horribly messed up. :P
01:41  homekevin: elspeth: Are you sure 'ls' is still the ls program, and not aliased to something weird?
01:41  elspeth: homekevin: ls -la gives this: http://pastebin.com/VE5q25RM
01:41  elspeth: absolutely certain.
01:41  homekevin: Ah, bizarre.
01:41  mhi^: omg
01:41  mhi^: So, maybe the .vba gone postal?
01:42  elspeth: yeah, thinking there is something very strange going on somewhere
01:42  homekevin: How did you "open", the vba?
01:42  elspeth: vim /path/to/snippy_plugin.vba
01:42  elspeth: then :source %
01:44  elspeth: homekevin: which i believe is the right procedure ..
01:44  elspeth: homekevin: i could be wrong, of course
01:44  homekevin: Yeah, I'm not sure. I don't use vimballs if I can avoid it.
01:44 * mhi^ agrees
01:44  homekevin: But I'd have to guess that vimball is severely broken. Can you point us to where you downloaded it from?
01:45  elspeth: sure
01:45  elspeth: http://www.vim.org/scripts/script.php?script_id=1318
01:46  mhi^: My advice.. clean your folder and just get https://github.com/msanders/snipmate.vim
01:47  elspeth: it's pretty old, so i would have thought any bugs would have been noted already
01:47  elspeth: mhi^: does it do docbook?
01:47  mhi^: It does, if you tell him to ;)
01:47  mhi^: *it
01:48  mhi^: It's really easy to write ones own snippets, so I'd go for it.
01:48  elspeth: i might just do that instead of struggling along with this
01:50  homekevin: How annoying. Every time I switch from the help window to the .vba window I get an error from a BufEnter autocommand trying to modify the help file.
01:51  homekevin: Oh, no it's trying to modify the VBA.
01:51  homekevin: By setting ff=unix
01:51  spiiph: That's DrChip's scripts for you.
01:52  mhi^: ;]
01:52  homekevin: I don't know what that means, but I'll agree.
01:52  mhi^: vimgor: drchip
01:52  vimgor: Dr Charles E Campbell is a pretty nice guy who gives a lot to the vim community, but whose prolific scripts are a 50-50 split between good idea horribly implemented and bad idea even more horribly implemented
01:52  mhi^: he's the author of vimball
01:53  elspeth: i see.
01:54  rindolf: Isn't he also the author of perl-support and c-support?
01:54  mhi^: hmm, I thought this was a German guy
01:55  mhi^: Fritz Mehner
01:55  homekevin: Also, apparently the vba scripts are an example of what I was pleading against earlier: Ungrouped autocommands.
01:55  elspeth: it says felix ingram on the vim.org page ..
01:55  rindolf: mhi^: well, I'm going to bed.
01:56  rindolf: Good night.
01:56  mhi^: gn, rindolf
01:56  homekevin: elspeth: The author of the vimball stuff is different from the author of the snippets stuff.
01:56  rindolf: mhi^: bye.
01:56  elspeth: homekevin: ah, i see.
01:57  LinuxMafia: hi
01:58  LinuxMafia: where i have to type this --> ctags -R -f ~/.vim/systags /usr/include /usr/local/include
01:58  elspeth: mhi^: any major differences between the .zip on vim.org and the github repo?
01:58  elspeth: mhi^: for snipMate, that is.
01:58  fow: LinuxMafia, all the paths are absolute, so...what do you think? :)
01:58  mhi^: elspeth: Well, I manage all my plugins with pathogen, so I only do repos :>
01:59  LinuxMafia: fow, ctags: cannot open tag file : No such file or directory
01:59  mhi^: elspeth: also, the git repo is more up-to-date
02:00  fow: LinuxMafia, that's...strange... It really doesn't name a file?
02:00  LinuxMafia: no
02:00  LinuxMafia: i dont even have .vim in ~
02:00  LinuxMafia: i am using gvim though
02:01  fow: perhaps you should mkdir ~/.vim first
02:01  mhi^: LinuxMafia: Well.. did you look up the manpage what ctags '-f' does?
02:02  LinuxMafia: mhi^, i was using help of gvim . for omni copleteion
02:02  elspeth: mhi^: what's pathogen?
02:02  mhi^: vimgor: pathogen
02:02  vimgor: tpope's script for manipulating comma delimited path options. http://www.vim.org/scripts/script.php?script_id=2332
02:03  elspeth: oh, right
02:03  elspeth: cute.
02:03  mhi^: elspeth: basically you just create a new folder .vim/bundle/ and put all plugins in their own directories.
02:03  elspeth: interesting
02:04  mhi^: pathogen cares about finding those plugins then.. so you avoid chaotic .vim/{,ft}plugin folders
02:05  elspeth: hm, admittedly it might be overkill for what i use
02:05  elspeth: mostly i just have a themes/colours pack and now, snipmate
02:05 --- peth_ is now known as peth
02:07  mhi^: elspeth: it makes updating easy: http://d.imagehost.org/0321/update.png :)
02:09  homekevin: elspeth: If you still have it, can you post the content of the .VimballRecord file from your .vim?
02:10  jmcantrell: ick. vimball
02:12  elspeth: homekevin: lemme see.
02:14  elspeth: homekevin: http://pastebin.com/1aEywVi1 is it, i believe.
02:15  homekevin: Hm, interesting.
02:15  homekevin: It looks like it properly recorded all the crap it did, at least.
02:15  mhi^: yeehaw ;p
02:15  homekevin: I don't see anything obviously wrong with the vimball, and it extracted correctly for me.
02:16  elspeth: it is possible it just hates me.
02:16  homekevin: My best guess now is that there's a bug in the vimball scripts that's triggered by some options or plugin configuration.
02:17  mhi^: homekevin: That's the problem with Vimballs. It's like Russian roulette.
02:17  elspeth: mhi^: yes, well, i seem to be finding an awful lot of bullets :P
02:17  mhi^: ;)
02:18  homekevin: I wonder how that "game" came to be known as "Russian".
02:19  jmcantrell: mhi^: you should share vim-update.zsh. i have something similar, and i'm curious how you handled it
02:23  LinuxMafia: omnifunc is not set
02:24  LinuxMafia: how can i set it for all availabe programms?
02:39  spiiph: :filetype plugin indent on in your .vimrc
02:43  LinuxMafia: i need perl omni-completion
03:23  spiiph: Then you probably have to get an omni-completion script for perl, and follow its installation instructions.
03:23  Eiler: how would i open all .cpp and .h files in a dir with gvim?
03:23  spiiph: :args *.cpp *.c
03:24  Eiler: ah, works
03:24  spiiph: Of course
03:25  spiiph: Although I said *.c instead of *.h, but I guess you got the point. :)
03:25  Eiler: one annoying thing, when i use make in gvim and start stepping through the errors, the tabs (the files) changes
03:29  spiiph: That's not annoying, it's helpful.
03:29  spiiph: You should learn how to use buffers, and not depend on tabs, which is what I guess you're doing right now.
03:39  Eiler: yes i am
03:39  Eiler: and i prefer the tabs way
03:39  Eiler: i can still change between buffers
03:40 --- chrischambers_ is now known as chrischambers
03:48  dhruvasagar: Hi, is anyone using vim-ruby ?
05:13  LinuxMafia: hi
05:13  LinuxMafia: when i press tab ^I shows up
05:15  LinuxMafia: any one?
05:15  jmcantrell: ^i is a tab
05:15  fow: LinuxMafia, se nolist
05:16  LinuxMafia: fow, oh what should id o
--- Log closed Fri Nov 26 09:16:33 2010
--- Log opened Fri Nov 26 09:16:54 2010
09:16 --- Users 559 nicks [1 ops, 0 halfops, 0 voices, 558 normal]
09:18 --- Channel #vim was synced in 88 seconds
09:25  afuentes: hows the shortcut to switch between opened buffers?
10:00 --- dpyro_ is now known as dpyro
10:01 --- daniel__ is now known as daniel
10:38  turre: vim complains this thing doesn't have endfunction: http://pastebin.com/1ja2vTkW
10:41  turre: anyone?
10:43  Geralt: Hi, is it possible to access registers in vimscript indirectly? I want to access "0-9 via a variable that contains the numbers 0-9
10:44  fow: turre, call append(
10:45  vanity: cmake has pretty colors
10:45  vanity: however, when I run ":make" in vim I don't get those pretty colors
10:45  vanity: how can I get the pretty colors back ?
10:47  turre: fow: thanks
10:47  fow: you're welcome
10:48  vanity: fow: can you solve my problem too?
10:54  unknown: i'd like to have two terminal windows, each with vim, but sharing a session. if i have two monitors i'd like to have one showing some file(s), which on the other window, i can work on some other file(s), possibly the same. is this possible?
10:54  unknown: i'd like to have two terminal windows, each with vim, but sharing a session. if i have two monitors i'd like to have one showing some file(s), which on the other window, i can work on some other file(s), possibly the same. is this possible?
10:54  unknown: whoop
10:54  unknown: s
10:55  vanity: unknown: i wnt to solve the same problem
10:55  vanity: unknown: when you solve it; please let me nkow
11:01  vanity: unknown: basically the goal is to have a vim "server", and all vim instances are just "clients" conecting to one server right?
11:04  mhi^: afuentes: there's none. Apart from ":h CTRL-6". Either use ":b" or map ":bp", ":bn" etc.. or both.
11:04  afuentes: thanks mhi^
11:04  afuentes: mhi^,  thats what I was suspecting. It seems slow to be doing :bn to change
11:04  afuentes: but i guess is alright
11:05  afuentes: maybe it seems slow to me because I have to press shift and a key to get :
11:05  mhi^: you could also use a plugin like bufexplorer, but I'm no fan of those :)
11:06  afuentes: I have a general wonder
11:06  afuentes: the more i learn about vim the more i think vim only show its true potential with an american keyboard
11:07  afuentes: i have to press shift to get : ^ and $ and = and *
11:07  afuentes: and /
11:07  afuentes: do you change the locale of your keyboard to english?
11:07  afuentes: do you have locale bindings?
11:07  afuentes: do you just type slower than english users of vim?
11:08  mhi^: Well, I changed from qwertz to qwerty, yes
11:08  iaj: i'm using qwerty as well
11:08  afuentes: but isnt it confusing if your keyboard is labeled otherwise?
11:08  mhi^: I'm not really looking at my keyboard anymore ;p
11:09  afuentes: ^^ but what about when you use another keyboard that is not yours?
11:09  afuentes: either you get used to the normal keyboard in your country
11:09  afuentes: or to you specific settings
11:10  mhi^: Well, I used qwertz long enough to just rethink quickly and.. it only happens seldomly that I have to user keyboards of others
11:10  afuentes: ive got the spain keyb layout
11:10  the_isz: i changed from qwertz to qwerty in the beginning and then bought a qwerty keyboard. it's not that i'm looking at the key labels, but the english layout is a little more comfortable to me (position of \ and stuff)
11:11  afuentes: I have to press shift to get most of the regular english binds in vim. I already know where the english counterparts are and I guess I could just switch to english. But for example, Ñ is not in the english layout, and i have to type spanish with this keyboard aswell...
11:13  afuentes: I am tempted to switch to english layout... everything seems easier in linux for english layout
11:13  unknown: vanity: yes, just like that. i have as of yet no idea how to do this.
11:13  afuentes:  / is a pretty nice example
11:13  mhi^: yup, that was my main reason :)
11:13  mhi^: and easier typing of brackets/parentheses
11:14  unknown: vanity: http://ajayfromiiit.wordpress.com/2009/10/21/server-and-client-mode-in-vim/
11:14  afuentes: the_isz, i dont have to look at the keyb either... but dont you miss any letter in your mother tongue in the english layout?
11:14  the_isz: afuentes: i'm using the us intl layout, so i can get Ñ by pressing ~ first which is a dead key and then N, giving me Ñ
11:14  vanity: unknown: reading
11:14  the_isz: afuentes: the same holds for " and a for ä (german umlaut)
11:14  afuentes: mmm i guess it worths trying
11:15  afuentes: thanks, you definetly convince me
11:15  afuentes: :D
11:15  the_isz: afuentes: i takes some time getting used to, but i'm comfortable with it now
11:16  the_isz: afuentes: just do 'setxkbmap us intl' (assuming you're using linux) and you're ready to test :)
11:16  turre: how do i get "value" of a character, so i can retype it with i_ctrl-v?
11:16  afuentes: I think i will give it a try
11:16  afuentes: thanks :D!
11:17  vanity: unknown: can you ahve two sepraaate vim sessions connect to the same server?
11:18  vanity: i feel like I can send commands
11:18  vanity: but I can't connect a vim instance to an existing server
11:18  unknown: vanity: you'll have to try it to be sure
11:19  vanity: unknown: I just tried it
11:19  vanity: unknown: the first one is named DEFAULT
11:19  mhi^: turre: ehm, what do you mean?
11:19  vanity: unknown: the second one names itself DEFAULT1
11:19 --- silex is now known as Silex
11:19  vanity: unknown: did you get different reulsts?
11:20  turre: mhi^: to replace control characters
11:20  unknown: vanity: vim --servername foo (creates vim server called foo)
11:21  unknown: vanity: vim --servername foo --remote .... (connects to vim server foo and send ....)
11:21  unknown: but no local editor for the remote vim
11:21  vanity: unknown: yeah; it sends commands; but can you have two running vim instances share the same server ?
11:22  vanity: perhaps our problems are different
11:22  turre: mhi^: you can type characters literally by doing ctrl+v in insert mode, and typing something, like ctrl+c or something. Or give number after ^v... I want to get this number of a character cursor is on top of
11:22  unknown: vanity: no, i want a local vim to show a remote session
11:23  unknown: but this only allows you to send commands to the remote vim, not view it
11:23  vanity: unknown: so 1) we have the same problem 2) the link doesn't solve your problem either
11:24  turre: ga in normal mode :)
11:24  mhi^: turre: you can enter certain terminal escape sequences, but I don't see what do you mean about their value. Also... yea, you meant the ASCII value, I guess.
11:24  unknown: vanity: yes, seems that way :(
11:25  vanity: unknown: sad thing is  .... if there's already support to send commands, why hasn't someone just wrapped the server-remote in a for loop and make it locally viewable too :-)
11:26  unknown: vanity: because it is not as simple as it seems :)
11:27  unknown: vanity: with what we want, you can have multiple clients editing the same file at the same time.
11:27  unknown: vanity: which causes all kinds of synchronisation problems
11:27  vanity: you can already send commands via server-remote
11:28  vanity: ah, sever-remote is async
11:28  vanity: with what we want
11:28  vanity: when one client makes a change
11:28  vanity: all clieents have to be notified
11:28  vanity: it's basicaly like multiplayer notepad
11:28  vanity: and then there's issues like race conditions
11:28  unknown: yes
11:28  vanity: what if one window deletes a line another client was editing
11:28  vanity: bah
11:29  tlonim: regarding conceal mode, can i tell vim to conceal/hide comment lines starting with say '#' ?
11:29  unknown: there are only a handful of editors which allow this
11:29  unknown: one is/was, i think, in netbeans?
11:29  unknown: at least a java ide
11:30  unknown: but what i want, is just a single vim session, no `multiplayer', but multiple windows/views on the same machine
11:30  mhi^: turre: if you often need that, you can also display the ACSII value of the current character in your statusline
11:31  vanity: unknown: well, the problem is you want the locking/synchronization at the human level
11:31  vanity: but vim doesn't know that
11:31  turre: mhi^: i don't need it often. I forgot how to show it and couldn't find it in manual
11:31  mhi^: turre: ah, okidoki
11:45  tlonim: http://www.rtfm-sarl.ch/articles/hide-comments.html -- this can be done with conceal too right ?
11:46  mhi^: afuentes: you could also read about ":h mark-motions", if you want to quickly jump between several buffers
11:47  mhi^: tlonim: yup
11:48  tlonim: mhi^: do you have any function written for that ? i was thinking to write one ..
11:48  mhi^: nope, haven't used conceal at all so far
11:48  tlonim: ok
11:48  tlonim: let me check
11:49  mhi^: the year before I just used a little mapping which set the fg color of my comments to the bg color.. so I hid my comments as well :]
11:49  mhi^: *years
12:08  jerojasro: do you know of any plugin that shows you the size (amount of characters selected) when in visual mode?
12:09  mhi^: jerojasro: ehm, you don't need any plugins for that.. let me find out, how I enabled that for me.. :)
12:09  jerojasro: I wrote a small hack to put that in the status line, but I'd like to check if there are better implementations/alternatives
12:09  jerojasro: ooh, nice
12:09 * jerojasro waits ...
12:13  mhi^: jerojasro: hmm
12:14  mhi^: jerojasro: Ah, right... :set showcmd
12:14 * mhi^ is blind
12:20  Ddorda: ‎hey, how do i del text between two tags? i saw something about "dim" but can't find how to do it
12:20  Ddorda: ‎dit*
12:20  afuentes: thank mhi^ :)
12:22  mhi^: Ddorda: dit
12:22  mhi^: afuentes: np :>
12:22  Ddorda: ‎mhi^: yesm but how do i run this? just typing "dit" doesn't do it.
12:23  Ddorda: ‎i'm supposed to type something before dit?
12:23  mhi^: Nope, should work out of the box in normal mode
12:23  mhi^: it's a text-object.. see ":h text-objects" and scroll down to 'it'
12:29  tlonim: mhi^:  ok..got the conceal thing ..  http://sprunge.us/hOSJ
12:29  mhi^: tlonim: nice :)
12:31  mhi^: _qwerty: I hope you're not really running your client as root.
12:35 --- jiansong_ is now known as jiansong
12:36  thp: how can I execute something that I selected in visual mode as if I typed it in in command mode (with :)?
12:37  jerojasro: mhi^: ooh, thanks! it also shows the size in lines when selecting line-wise, or more than one line!
12:38  turre: thp: you mean visually select something, and use a command on it? Just visual select, press : and write your command
12:39  the_isz: thp: if i get you correctly,  y:<c-r>"<cr>  should do the rick
12:39  thp: turre: no, not using a command on it, but using it *as* a command (i.e i have ":wq" in my buffer, and i then select this visually and now want to say "please execute my selection as command")
12:40  thp: the_isz: yes, that's about what I want, but does it work for multi-line commands (like defining a function?)
12:41  turre: copy it to a register, and do :exec @register
12:41  the_isz: thp: hmm... i don't think so... in this case, i'd probably create a file for testing and go with  :source %  instead of operating on a selection, but maybe there's a better way...
12:42  the_isz: thp: what turre said in commands:  "ay:exec @a
12:44  thp: turre, the_isz: thanks, that's what I was looking for :)
12:44  Ddorda: ‎mhi^: okay, working. many thanks :)
12:45  the_isz: thp: yw
12:47  kryl: hi
12:47  kryl: how to delete all line before cursor ?
12:47  turre: dgg
12:48  turre: that includes the line the cursor is on
12:48  kryl: and for lines after ? :)
12:49  turre: dG
12:49  kryl: nice
12:49  kryl: is it very different to del lines from a block?
12:49  kryl: for example 450 to 1000 from a 2000 lines file ?
12:49  turre: you mean visual? I select visual line (shift+v) and c or d that usually
12:50  turre: but you could also check [range]
12:50  turre: you can use line numbers and marks for it
12:51  turre: (for example :450,1000d)
12:52  kryl: thank you very much
12:52  kryl: it's helpful
12:52  kryl: vim is very powerful, I love it lol
12:52  kryl: I'll need to train myself anymore
12:53  kryl: I'll have to find a good book
12:53  tlonim: in vim set for numeric arguments, does += wrap around ?
12:55  mhi^: kryl: IMO, the books out there aren't worth it. Just learn how to use the help system and ask your questions here :)
12:55  turre: kryl: have you done vimtutor?
12:56  tlonim: otherwise how do i incorporate that logic in a generic way
12:56  tlonim: to wrap around the value
12:56  mhi^: tlonim: no, += works
12:56  kryl: nop
12:57  kryl: turre, I'll find it thanks
12:57  tlonim: mhi^: but it doesnt wrap around
12:57  tlonim: mhi^: it will keep increasing
12:57  mhi^: uhm, what do you mean with wrap around?
12:57  tlonim: mhi^: say max value for a setting is 3,   if I set xyz+=1 when xyz is 3 it should go to 1 o
12:58  mhi^: Are we talking of variables or setting options?
12:59  tlonim: mhi^: options
12:59  tlonim: mhi^: in my case i want to be able to toggle between 3 values of conceallevel easily
13:03  tlonim: btw, instead of saying ==  syntax match matchComment "\v^\s*\".*"  conceal cchar=    ... how do i state match comment based on syntax defined for that filetype ?
13:04  mhi^: tlonim: The naive approach would be something like this: http://pastey.net/143296
13:08  the_isz: tlonim, mhi^: vimscript surely has a modulo operator, doesn't it?
13:08  tlonim: mhi^: thanks.. will check that
13:08  mhi^: the_isz: look what I used there :)
13:10  tlonim: mhi^: but instead of explicity saying 3, is there a way to obtain explicit bounds of a setting ?
13:10  the_isz: mhi^: sorry, didn't look before typing
13:10  mhi^: tlonim: I don't think so
13:21  the_isz: tlonim: i don't have much experience with vimscript, but it should be possible to define constants/variables that define the bounds of another setting
13:21  tlonim: ok.
13:22  tlonim: syntax region matchComment contains=Comment  conceal cchar=.   --> anything missing here ?
13:23  mhi^: 1) Sure, you can just use "let x = 3", if 3 is the bound, but an additional variables makes no sense in this case. 2) I only have 7.1 at work :(
13:29  mhi^: tlonim: I check out your conceal later when I'm home. It's less hacky then changing the fg color of comments :)
13:30  tlonim: mhi^: ok.. i was wondering if instead of specifying comment RE i could override comment syntax group already defined and add conceal to it
13:30  tlonim: so how can one override an existing syntax group -- say Comment
13:31  mhi^: as I said, can't test it here :\
13:31  tlonim: mhi^: no problem :)
13:40  wanderley: hello, how can I highlight lines after column 80?
13:40  wanderley: I want to higlight this 'overflow'
13:42  muffinmad: wanderley: highlight rightMargin guibg=#4f4f4f
13:42  muffinmad: wanderley: match rightMargin /.\%>79v/
13:43  muffinmad: for example
13:43  mgedmin: vim 7.3 also has a nifty 'colorcolumn' option
13:44  wanderley: it's help me alot!
13:44  wanderley: thanks!
13:49  the_isz: wanderley: please consider what mgedmin said, the colorcolumn is really cool
13:52  Silex: can you really avoid using arrow keys at all times? if yes, I have a few questions
13:53  mgedmin: Silex, yes, you can avoid
13:53  mgedmin: opinions differ as to whether you should avoid
13:53  Silex: how do you naviguate the completion menu? ^N/^P? how do you do the equivalent of :<Up> to go through the previous commands? How do you edit the previous command using <Left> to modify?
13:54  Silex: mgedmin: so you say basically everyone agrees on NOT using arrows for insert mode, but in other mode it's ok?
13:54  Silex: s/ok/debatable/
13:54  mgedmin: well, no; I'm saying that there are people who think arrow keys are just fine in insert mode (and in those cases you mentioned)
13:55  the_isz: Silex: editing the command is the only gripe i have with vim's keys, too. but for that, there's c_CTRL-f!
13:55 * mgedmin hates c_CTRL-f
13:56  iaj: mgedmin: how comes?
13:56  mgedmin: I can't quite explain why I have that reaction
13:57  iaj: what are you using for navigating up/down/
13:57  the_isz: Silex: though i use c_CTRL-f only if i'm editing a complex command really. otherwise i'm referring to the cursor keys and fret about it...
13:57 * mhi^ does the same
13:57  Silex: why doens't :h c_CTRL-f bring me help?
13:58  Silex: tried :h c^f
13:58  Silex: :h c_<C-f>
13:58  Silex: nothing
13:58  the_isz: Silex: for navigating through previous commands you can also use ^N and ^P
13:58  the_isz: Silex:  :e c_CTRL-f  works for me
13:58  the_isz: Silex: :he even
13:59  mhi^: Silex: Version?
13:59  the_isz: Silex: otherwise try  :he q:
13:59  Silex: ah the history thing
13:59  Silex: ah shit, I still have 7.2 on that box
13:59 * Silex installs 7.3
14:00  Silex: ok the history thing is a convenient alternative yes
14:00  Silex: you can edit the command with hjkl etc
14:00  Silex: and all the textobjects
14:00  Silex: and ^N/^P to scroll
14:00  Silex: good! thanks guys
14:01  the_isz: Silex: you're welcome
14:01  mhi^: Hmm. I just wanted to cmap ^n/^p to up/down, when I noticed, that it's builtin already
14:05  tlonim: is there a way to access match of a syntax group in scripts ?  like the pattern pythonComment defines i want to embed it into another RE
14:11  cizra: Hi guys. How could I get currently selected text into :s/?
14:12  Silex: "ay:%s/<C-R>a
14:12  Silex: yank to register a, then use ^R to paste register content
14:13  mgedmin: or just yank and <C-R>0
14:13  Silex: right
14:14  cizra: ahh.
14:14  cizra: What does C-R do? I don't think I've seen it
14:14  cizra: also, is O the default buffer?
14:14  mgedmin: these things are called registers
14:14  cizra: well, default register then
14:14  mgedmin: :help registers
14:14  mgedmin: will tell you the meaning of each
14:14  mgedmin: 0 contains the last yanked text
14:15  mgedmin: " is the default register
14:15  the_dark_warrio: I usually do ^R "
14:15  mgedmin: it contains the last yanked _or_ deleted text
14:15  cizra: okay, and C-R <register> just pastes the stuff into the : command? Cool!
14:16  cizra: Cool, thanks.
14:17 * cizra isn't actually using vim, but ViEmu, a commercial plugin for Visual Studio
14:18 * mgedmin used some free addon for "integrating" the real gvim with visual studio, back in 2001
14:19  mgedmin: although a bit later I discovered the syntax for building a msvs project from the command line and wrote a makefile for that
14:21  Silex: I use scons with a custom .vcproj for debugging
14:21  Silex: with clang-complete for autocompletion in vim
14:26  Eiler: clang-complete doesnt seem to exist in portage
14:27  mhi^: http://www.vim.org/scripts/script.php?script_id=3302
14:27  Eiler: are there any one good completion scripts for c++ (with g++)?
14:28  mhi^: http://www.vim.org/scripts/script.php?script_id=3302
14:28  mhi^: ah
14:28  mhi^: Eiler: do you really need completion for a specific compiler?
14:29  Eiler: im not sure, i need some kind of good c++ completion
14:29  Silex: Eiler: I recommand https://github.com/Rip-Rip/clang_complete
14:29  Silex: installing clang is easy
14:29  Silex: but well, you can also use gccsense, which requires to build a custom gcc
14:29  Eiler: how come this completion is clang specific?
14:29  Silex: Eiler: clang has the --code-completion-at option builtin
14:29  mhi^: Eiler: the plugin just uses clang to complete your C++ without using tags. You can compile it with g++ anyways
14:29  Silex: yeah, it's just the completion that uses clang
14:30  Silex: also, clang is faster at parsing files. But as I said you can use gccsense, it works fine too. The plugin is less complete tho
14:30  mhi^: otherwise you'd need a tags file which contains all boosts functions etc. which can be biiig :)
14:30  Silex: and not under active development
14:31  Silex: tags doens't work for c++
14:31  Silex: well, for very simple c++ maybe
14:31  mgedmin: worked great for me
14:31  mgedmin: granted, I knew the names I wanted to complere
14:31  Silex: mgedmin: you use boost?
14:31  mgedmin: not back in 2001, no
14:32  Silex: are you still coding c++?
14:32  mgedmin: thankfully, no
14:32  mhi^: :)
14:32  Silex: ok, well ctags just doesn't scale for stuffs like boost
14:32  mgedmin: interesting, tell us more
14:32  Silex: so you were in the "very simple c++" case
14:33  mgedmin: is it the parser that can't parse advanced c++ templates?
14:33  mgedmin: or the size of the tags file?
14:33  Silex: mgedmin: the last time I tried (2 months ago), ctags couldn't parse some of the advanced c++ templates stuffs, and the tags file was 150+Mb
14:33  Eiler: what is the flag i need for gccsense?
14:33  Silex: Eiler: follow the manual, but basically you need to download and build a custom gcc
14:33  Eiler: im using portage
14:34  Eiler: so maybe it just requires a use flag
14:34  Silex: then you'll have g++-code-assist, which has a --code-completion-at like clang does
14:34  mgedmin: yeah, my biggest tags files are maybe 40 MB
14:34  Silex: Eiler: I doubt it's in portage
14:34  Silex: I mean, it's edgy stuffs
14:34  Eiler: oh how come?
14:35  Silex: well, tbh I don't really know portage, but I know gccsense is a different gcc branch
14:35  Silex: not sure it's even in the main repo
14:35  Silex: probably just a fork
14:35  Silex: Eiler: is it trouble to install clang?
14:36  zulax: is it possible to open directory structure in gvim
14:36  Silex: Eiler: ah, http://bugs.gentoo.org/330391
14:37  mgedmin: zulax, you mean like :Explorer, or NERDtree.vim?
14:37  Silex: so apparently it's somewhere in portage...
14:37  mgedmin: :Explore -- there's no r at the end, dunno where it came from
14:37  Eiler: havent tried to install clang yet, but i will
14:38  zulax: mgedmin, something like my folder structure stays on the left pan, and i can open any files on the right side
14:38  Silex: Eiler: I have experience with both gccsense and clang_complete as I'm trying to find an autocompletion solution that works on all platforms
14:38  Silex: I managed to make both work on every platforms
14:39  Eiler: oh
14:39  Silex: but, in my opinion clang_complete is much more active
14:39  Silex: I tried to email the author of gccsense and he never responded
14:39  Eiler: ive used omni complete, but i dont want to create a tags file for every project, and also, i want the autocompletion to give me the members automatically
14:40  Silex: his git repo isn't on github, while the dev of clang_complete answers my requests and everything. The clang_complete plugin is more mature than the quick gccsense.vim hack
14:40  Silex: Eiler: clang_complete does that
14:40  Silex: gccsense.vim is very limited, the author is more an emacs user
14:41  Silex: so you'll need to modify it to popup on . and ->
14:41  Eiler: oh
14:41  Silex: clang_compelte does that out of the box
14:41  Eiler: nice!
14:41  Silex: Yeah. On gentoo you just "emerge clang" and get going
14:41  Silex: with gccsense you extract, ./configure & make & make install etc
14:42  Silex: the only thing where gccsense is better than clang_complete atm imho is the automatic precompiled headers thing
14:42  Silex: which will soon be reproduced for clang_complete ;)
14:43  zulax: mgedmin, thank you, nerdtree seems to work :)
14:43  Silex: basically without boost the popup menu is instant, with boost it takes half a second.
14:43  Silex: With precompiled headers it's instant too, I just need to port the autopch script from gccsense to clang
14:43  Eiler: Silex i've just started coding in linux and vim, is there any additional tools you can recommend? or how i should configure my .vimrc?
14:44  mhi^: Eiler: use snipmate
14:44  mgedmin: c++ has this jobs-ian reality distortion field
14:44  mgedmin: I remember when I was working with it, I was completely convinced it was the greatest language ever
14:44  Silex: mgedmin: c++ sucks, but sometimes you have no choice
14:45  Silex: Eiler: I work with windows, MacOSX and linux on a regular basis, so my solution involves my vim config into a dropbox folder so whatever change I do is found when I log on the other machine
14:45  Silex: Eiler: my plugin list consists of:
14:45  Eiler: i mostly use windows but i run gentoo through vmware emulator now
14:45  Silex: there's gvim for windows btw
14:46  Silex: Eiler: basically, I use https://github.com/MarcWeber/vim-addon-manager to automate the plugins installation
14:47  Maahes: It saddens me that C++ and Java are the two largest languages by code base activity.
14:47  Silex: Eiler: some people use pathogen. I suggest you use one of the two to avoid the pain of installing/uninstalling plugins
14:47  Silex: Eiler: then I use the follwing plugins: The_NERD_tree FuzzyFinder snipmate scons rails FSwitch matchit.zip Command-T bufkill Decho clang_complete'
14:47  Eiler: http://paste.pocoo.org/show/296251 thats my .vimrc
14:48  mgedmin: MarcWeber, how about putting installation instructions on the front page of https://github.com/MarcWeber/vim-addon-manager, i.e. in README?
14:48  Silex: Eiler: if I had to recommend only one it'd be snipmate
14:48  mhi^: Maahes: The one is fast in execution, the other is portable. Both a OO. What more could you want? :>
14:48  Eiler: i really like to develop in c++, it is nice
14:49  mgedmin: s/installation instructions/getting started/
14:49 * mgedmin feels incoherent today
14:49  Maahes: mhi^: -_-
14:51 * Maahes has 38 plugins
14:52  mhi^: Maahes: Really, these criteria are more important to most firms than let's say code complexity.
14:54  Maahes: mhi^: I didn't say there wasn't a logic behind it. I said it was sad. Reality is sometimes saddening :P
14:54  Silex: mhi^: btw, c++ is portable
14:55  mhi^: Maahes: I agree. ;)
14:56  mhi^: Silex: Sure, if you recompile it.
14:56  Silex: I like this sentence from
14:56  Silex: Michael Feldman: "C++ is history repeated as tragedy. Java is history repeated as farce."
14:56  Silex: kinda sums it up well
14:56  Maahes: Someone needs to write a language like Clay/BitC/whathaveyou. And make it so it can import C++ libraries.
14:56  Maahes: I know, easier said than done
14:56  Maahes: but in a perfect world...
14:57  cirwin: Is it possible to have vim open in multiple terminals instead of multiple windows open in vim? (i.e. so it doesn't keep moaning that I already have the file open somewhere else) Otherwise do people have tips for remembering where files are open?
14:58  mhi^: cirwin: I'm not too sure what you mean, but you might want to:
14:58  mhi^: vimgor: hidden
14:58  vimgor: An option that allows you to switch the buffer being displayed in the current window without requiring that you save it first. This also allows you to keep undo/redo history on multiple files. If you don't know whether or not you want this option, you want it; it makes working with multiple files much more reasonable. See also, :help 'hidden'
14:59  cirwin: hm, I already have hidden set — so that's not what I want; though it sounds similar
15:00  cirwin: essentially I want to be able to use my window manager instead of vims splits
15:00  Silex: cirwin: just open several terminals, run vim from it?
15:00  Silex: I don't understand your question
15:00  mgedmin: 'hidden' is awesome, but it means you can't use other vim instances to open files you've got open
15:00  cirwin: Silex: yeah — but then I keep opening the same files in multiple places
15:00  cirwin: and that causes vim to complain
15:01  Silex: why would you want to open the same file in several terminals?
15:01  Silex: tell us what you're doing
15:01  cirwin: Silex: I just forget that the file is already open
15:01  cirwin: and open it again
15:01  cirwin: then I have to go round and track down which vim it's open in
15:01  cirwin: which takes a while
15:02  cirwin: so I tend to have four terminals open on a screen, one has the code; another has the spec code; another I run the specs in, and the fourth I use for looking up other information
15:03  cirwin: and I often find that I try to open a file while looking up information that I was previously editing in one of the other two windows
15:03  mgedmin: and you want four terminals instead of one with four vim splits because ... ?
15:04  wanderley: or vim tabs ...
15:04  the_isz: cirwin: hmm... i tend to open one vim per project and i think that's the idea vim has. if you want to have different views on the same project, this is one of the rare situations in which you can use tabs
15:04  cirwin: two of the four of them switch between being vims and command lines
15:04  cirwin: well, I want to see everything all the time
15:04  cirwin: so it would have to be splits
15:05  cirwin: but I can't open a terminal in a split
15:05  mgedmin: hmm
15:05  the_isz: cirwin: so use your window manager to open a terminal
15:05  cirwin: and besides, my window manager already steals the switch focus key-bindings
15:05  mgedmin: I see three options, none of them ideal:
15:06  the_isz: cirwin: are you using a tiling window manager?
15:06  mgedmin: (1) set nohidden, (2) try the whatitsname plugin that lets you embed terminal sessions inside vim, (3) find a different workflow that works for you
15:06  cirwin: so one thing I thought of was having it magically detect if a file was open, and if so using vim-server or something to just close it in the other vim
15:06  cirwin: the_isz: yes
15:06  mgedmin: well, the .swp file has the pid of the other vim
15:06  mgedmin: if you could map the pid to the server name somehow ...
15:07  Maahes: cirwin: tmux/screen do splits, as does dvtm (Technically dvtm does splits the best IMO, but I use Tmux) Then there's Terminator, which is a tiling Terminal. And there's a window manager like Awesome. Which is what it says.
15:07  the_isz: cirwin: then it should be easy. open one terminal for one instance of vim, setup windows in it as you please and open another terminal for shell tasks
15:07  the_isz: cirwin: in the terminal for shell tasks you can run screen, tmux or whatever you please
15:08  cirwin: the_isz: about half of the shell commands I run are "just look at this file in vim"
15:08  cirwin: so I suppose I could try and remember to switch back to a vim at that point
15:08  mgedmin: cirwin, vim --serverlist, then for each vim --remote-expr 'getpid()' and compare with the pid you got from the .swp file
15:08  the_isz: cirwin: yeah, you'd do that in vim then
15:08  mgedmin: and then vim --remote :bdel filename
15:08  the_isz: cirwin: oh, mgedmin's idea is good, too
15:08  mgedmin: is there an expr for deleting buffers?
15:08  cirwin: mgedmin: it sounds like a suitably forceful solution :)
15:08  mgedmin: I dislike --remote-send ...
15:09  mgedmin: actually maybe :bunload instead of :bdel
15:09  mgedmin: now, how to trigger that _before_ vim's warning
15:09  the_isz: cirwin: you can start your vim instance with the --servername option and alias a command in the shell to use the same.
15:10  cirwin: mgedmin: some shell aliases methinks
15:10  mgedmin: and how to extract the pid from the .swp file
15:10  mgedmin: there's a SwapExists autocmd
15:10  the_isz: cirwin:  alias vim='vim --servername myvim'  should be everything you need
15:10  mgedmin: it has the name of a swap file
15:10  the_isz: cirwin: along with 2 terminals
15:11  cirwin: the_isz: ok, well I'd want it to open the new file in a split
15:11  cirwin: but yes, that sounds reasonable too
15:12  mgedmin: two bytes at offset +0x18 look like the pid to me
15:12  the_isz: cirwin: cirwin try -o2 as an extra parameter to --servername
15:13  mgedmin: so, with a lot of painful hackery it should be possible to support your workflow
15:13  the_isz: yeah, or just do what i said^^
15:14 * cirwin will try the isz solution first
15:16 * mgedmin wonders why vim's spell checker thinks "ans" is a word
15:17  mgedmin: and "raied" too
15:17  mgedmin: ah, syntax highlighting!
15:17  the_isz: mgedmin: for "ans" i would have guessed it's set to French^^
15:18  mgedmin: wait, syn region rstQuotes ... contains=ALLBUT,rstEmphasis,rstStrongEmphasis,rstBibliographicField
15:18  the_isz: iirc, "ans" would be "years" in French
15:18  mgedmin: that should mean it contains @Spell
15:18  mgedmin: right?
15:19  mgedmin: hm, the ALLBUT also means it contains @NoSpell, probably
15:19  mgedmin: yes!
15:19  mgedmin: contains=ALLBUT,...,@NoSpell fixed it!
15:19  mgedmin: omg what a gotcha
15:20  wanderley: How can I execute a command like !ls and open it in a preview window?
15:20  wanderley: I want to do something like :Gstatus.
15:20  wanderley: I want to open return for '!bundle exec cucumber' in a preview buffer
15:22  mgedmin: :sp | 0r !ls
15:23  mgedmin: for bonus points set 'buftype' etc. appropriately
15:23  mgedmin: I'd go an see how vcscommand does that
15:23  mgedmin: or any other plugin you know that does that
15:23  julienXX: Hi! I'm having a little issue with snipmate, the first file I try to open with NERDtree or :e triggers "Warning in snipMate.vim: Snippet xxx is already defined" but when I open with  command-t I don't have the error. Can somebody help ?
15:31  wanderley: let ls = system("ls") get output from ls
15:31  wanderley: but how to display this output in a preview window?
15:32  mgedmin: :0put =ls
15:32  mgedmin: after opening a window
15:32  mgedmin: and setting its type to preview
15:35  malesca: Is there anything that expands to the dir of the current file, like "%" expands to the path of the file itself?
15:35  mgedmin: yes, %:h
15:35  malesca: mgedmin: thank you
15:35  mgedmin: there's a bunch of those modifiers
15:36  mgedmin: check out :h ::h
15:36 --- trone is now known as moroon
15:37  wanderley: thanks mgedmin
15:37 --- moroon is now known as trone
15:46  MarcWeber: mgedmin Do you think that a pointer to the doc/* document would be enough? I dislike duplicating anything.
15:46  mgedmin: hm
15:46  mgedmin: there is a pointer
15:46  mgedmin: it's not clickable
15:46  MarcWeber: mgedmin: Which browser are you using?
15:47  mgedmin: chromium
15:47  MarcWeber: g0bl1n: In opera selecting and mmb works.
15:47  MarcWeber: Don't know about chromium.
15:47  MarcWeber: mgedmin: Which kind of plugins are you interested in?
15:47  mgedmin: https://github.com/MarcWeber/vim-addon-manager#readme
15:48  mgedmin: "Continue reading the documentation: doc/vim-addon-manager.txt."
15:48  mgedmin: the doc/vim-addon-manager.txt is a bit of plain text...
15:50 * mgedmin scratches head thinking how to make the github page friendly to potential new users without cluttering the top level README too much with long links like 
15:50  mgedmin: https://github.com/MarcWeber/vim-addon-manager/blob/master/doc/vim-addon-manager.txt#L46
15:53  MarcWeber: mgedmin: Now there is a clickable link.
15:53  mgedmin: cool!
16:00 --- Tricia is now known as Guest53263
16:07  rindolf: Hi all.
16:09  mhi^: Hey, rindolf :>
16:09  rindolf: mhi^: what's up?
16:10  mhi^: killing my last 50 minutes at work :)
16:10  mhi^: (for this week)
16:10  rindolf: mhi^: ah, nice.
16:10  mgedmin: ah, in that sense
16:10  rindolf: mhi^: do you have anything concrete to do?
16:10  mgedmin: I thought you had a power outage or an rm -rf accident
16:10 * mgedmin once lost 5 hours of work to a power outage
16:11  rindolf: mgedmin: you had unsaved buffers?
16:11  mhi^: :P
16:11  mgedmin: buffers shmuffers I was using Turbo Pascal and hadn't developed my "save at least once every 5 minutes" reflex yet
16:11  mgedmin: it was a very educational experience
16:11  mhi^: nothing concrete to do.. apart from a little perl project. But I feel too tired today.
16:22  avinashhm: hi, i often use cscope with my vim ... i am a fan of 'cscope f e xyz' ... which greps the xyz in all files .. Is anyone aware if i can restrict this to filetype .. like all .C files or .H files ...??
16:23  qzio: is there a way to start vim and search for a word. like, vim file.txt +123 but instead of going to the row 123, got o some word?
16:23  cirwin: +/word
16:24  qzio: cirwin: thanks!
16:24  cirwin: it's easy when you know how :)
16:24  mgedmin: avinashhm, dunno about cscope; you could do :vimgrep /xyz/ **.c instead
16:26 --- Guest53263 is now known as Tricia
16:27  avinashhm: mgedmin, so doesn it search all .c recursively files in curr dir ??
16:29  Azzkikr: when i do:   <Esc>80i-<Esc>   vim inserts 80 `-' characters. Where is this documented? I'm curious to what else is possible
16:29  Fandekasp: hi
16:29  Fandekasp: Is it possible to color part of the statusline ?
16:30  mgedmin: Azzkikr, :help count
16:30  mgedmin: Fandekasp, yes, see :help 'statusline'
16:31  mgedmin: avinashhm, that's what :vimgrep does, yes -- although I think you'd have to do **/*.c instead of just **.c
16:31  avinashhm: mgedmin, aha ... yep .. i ll dig up more with :h vimgrep .. thanks a lot mgedmin ....
16:32  Fandekasp: ok I suppose it's the higlight group, thanks
16:33  mgedmin: Fandekasp, you can use User1 ... User9 groups for parts of the statusline with %1* I think ... I don't remember exactly, that's why I suggested the :help
16:33  Fandekasp: ok
16:35  Silex: is **.c like **/*.c and *.c combined?
16:45  Silex: to write and close the buffer, I'd type :w|bd right?
16:45  Silex: is there something shorter?
16:49  rindolf: Silex: doesn't :wq work?
16:50  sitaktif: Silex: a custom command
16:50  sitaktif: or a cmap
16:50  sitaktif: you could define :WC
16:51  sitaktif: ( :h user-commands )
16:53  Silex: rindolf: q quits
16:54  Silex: sitaktif: okay
16:55  mhi^: rindolf: :x is the cool :wq, BTW :)
17:08 --- sh1m is now known as sh1mmer
--- Log closed Sat Nov 27 00:05:28 2010
