--- Log opened Tue Nov 23 00:00:02 2010
00:00  EspadaV8_W: has anyone else found a bug when opening a session with sessionman and then opening a different session causes NERDTree to break
00:04  s34n: jamessan: I don't know any particular setting that got changed, but when I begin to edit a new file, it inserts a bunch of header text and places me automatically into insert mode
00:05  s34n: jamessan: it also autocompletes stuff in annoying ways
00:10  cryptic0: hey guys, where can I find fromdos or dos2unix for mac?
00:11  cryptic0: I can't find either one of these files on my mac
00:13  EspadaV8_W: cryptic0: macports has it
00:13  EspadaV8_W: or you could probably use sed, or just vim
00:29 --- gf3 is now known as gf3`
00:35  cryptic0: EspadaV8_W:  I ddin't know vim can convert end of the line characters
00:35  cryptic0: hwo do you do it?
00:37  Nyoxi: cryptic0: :he 'ff  and :he ++ff
00:37  mhi^: vimgor: ff
00:37  vimgor: See :h 'fileformat'. E.g. ':set ff=unix' or ':w ++ff=dos' or ':e ++ff=mac'. Explanations: http://vim.wikia.com/wiki/Change_end-of-line_format_for_dos-mac-unix
00:39  cryptic0: perfect thanks.
00:39  cryptic0: I swear I had fromdos or dos2unix on my machine, but I simply cannot find it.
00:40  elik: cryptic0: aptitude install unix2dos, or the other way around
00:40  cryptic0: elik:  yeah, I just installed it through ports
00:41  lewis1711: is there a way for gvim to have sessions *without* having to explicitly save them? ie, quit gvim, open it up again, and all the buffers are just as I left them
00:45  strull: lewis1711: you can probably  make an :au with VimLeave for this
00:51  lamdk: is there a way to delete a sourced vimscript function?  im workin on a plugin and im trying to retest after making changes etc.
00:51  lewis1711: strull: thanks for that tip. wasn't quite what I wanted but a few links later led me to this http://peterodding.com/code/vim/session/, which seems to be just the ticket ^_^
00:52  lamdk: oh its :delfunction
01:03  ormaaj: Can I get XML style DTD highlighting for internal subsets when ft=xhtml?
01:05  ormaaj: There's some nice aspects of both XML and html modes that you have to choose between
01:05  ormaaj: CDATA is another
01:20  daaku: hi all. quick question - is there a way to lookup ctags based on the highlighted section? (names here include : and - which doesnt get picked up)
01:25  igors: hi... can I use numbers in map? like map <A-1> 1gt
01:26  heeen: mh I'd like to replace the vim syntax parser with my own some how
01:28  heeen: does vim support hooks for coloring buffers
01:28  heeen: to vim scripts
01:32  qfr: Yeah it would be nice if you could use some generic language with it
01:32  qfr: Python, Ruby, Perl
01:36  mhi^: heeen: coloring buffers?
01:37  heeen: like syntax highlighting
01:37  heeen: but without the syntax engine
01:38  heeen: like set characters 40-50 on line 13 to green foreground, default background
01:39  mhi^: if you can find a regular expression for it, then you can color it
01:39  mhi^: for this particular example you wouldn't even need a regex, I guess
01:40  mhi^: I guess you start with reading ":h syntax.txt" and follow the links
01:43  jeffszusz: hey, i can't find anything on google or in  :h buffers
01:43  jeffszusz: i'm looking for something i can include in a map that will do something with the current focused buffer
01:44  jeffszusz: basically :! open -a firefox <current buffer><CR>
01:45  mhi^: <current buffer> should contain the filename?
01:45  jeffszusz: yeah
01:45  mhi^: jeffszusz: echo expand('%:p')
01:45  strull: no need for expand here
01:46  strull: just :! opern -a firefox %<cr>
01:46  jeffszusz: i was trying expand('%')
01:46  jeffszusz: but it did nothing
01:46  mhi^: well, in this particular example you need expand()
01:46  jeffszusz: why expand?
01:46  strull: yes, why?
01:47  mhi^: in MY particual example.. which uses ":echo" you need expand()
01:47  mhi^: *particular
01:47  jeffszusz: ah
01:47  mhi^: ;p
01:47  mhi^: it was meant as a pointer in the right direction
01:48  strull: ok, the example is wrong then :)
01:48  mhi^: no, it's a valid pointer ;p
01:48  strull: sure. as valid as :he :he
01:50  mhi^: you're pretty good at exaggerating ;p
01:50  strull: I'm the best in this area :)
01:50  mhi^: :>
01:53  jeffszusz: lol
01:53  jeffszusz: sweet, now my \ff is mapped to prev something in firefox
01:54  mhi^: I guess you're a webdev then ;)
01:55  iaj: any way to have a verbose output when I do a gg=G?
01:55  mhi^: what output would you like to have?
01:56  iaj: like 50 lines indented
01:56  iaj: 100 lines indtended.. etc
01:57  strull: doesn't it already?
01:57  mhi^: yea, I'm confused :)
01:59  iaj: for me it doesn't show it :\
02:01  strull: iaj: what gives :set report  ?
02:05  mhi^: jeffszusz: if you're doing a lot of HTML (and related techs), have a look at http://www.vim.org/scripts/script.php?script_id=2981
02:11  strull: he seems to have dropped dead. My question was too hard for him. (Just to exaggerate again)
02:13  mhi^: ;D
02:21  jbwiv_: can someone tell me what the keystroke is to go back through cursor position history? what about forward as well?
02:23  drbean: <Ctrl-O> and <CTRL-I>
02:23  jbwiv_: drbean, great. thanks. what's that actually called?
02:25  xtagon: jbwiv_: It's called navigating through the jump list. See also   :help :jumps
02:28  jbwiv_: xtagon: great, thank you
02:28  xtagon: jbwiv_: No problem
02:29  leandroal: how can I setup vim to do line-break for each line with at most 80 chars?
02:31  strull: you mean "at least" ?
02:34  MagusOTB: is there a hotkey to repeat the last macro used?
02:34  leandroal: strull, sorry, yes, at least
02:35  jga: MagusOTB, try @@
02:35  strull: leandroal: try:  :s/.\{80}\zs/\r/
02:35  strull: i mean :%s
02:36  leandroal: strull, I'd like this automatically, as I type the text... I mean, I'd like an auto-wrap in 80 chars...
02:36  leandroal: strull, not after I type the text...
02:36  strull: :he 'tw
02:37  jeffszusz: mhi^: zencoding eh?
02:40  iaj: strull: sorry was afk... report is #0
02:40  iaj: report=0 actually - sorry
02:41  iaj: set by taglist.vim.
02:43  strull: this is good. you should see the message then.
02:44  leandroal: strull, so, "set textwidth=80" is the correct command... Thank you. How can I make this enabled everytime I open a file of a certain directory? I mean, I want set textwidth=80 only for oppened files of a certain directory... just putting a .vimrc in this directory does not work... any clue?
02:44  strull: leandroal: :he :au
02:51  leandroal: strull, got it! thank you....
02:52  strull: np, have fun!
02:56 --- peth_ is now known as peth
02:56  leandroal: strull, let me as you a more complicated question (at least I think it is). I made a aucmd to always set textwidth when I open any *.xml file. I know that :vs <filename> opens <filename> splitting the window with the current opened file. Everytime I open an .xml, I'd like to open in another vwindow a file which basename is the same of the xml file, but its extension is .txt. How to do this?
02:58  fow: untested: au BufRead *.xml vsp %:r.txt
02:58  iaj: strull: dunno not seeing anything
02:59  leandroal: fow, I already have "au BufRead *.xml set textwidth=80", should I do: "au BufRead *.xml set textwidth=80 vsp %:r.txt"?
03:00  leandroal: fow, in other words, how can I execute multiples commands in the same autocmd?
03:00  strull: you can have multiple :au entries
03:02  leandroal: strull, ok... will try
03:04  leandroal: strull, fow, yes, it worked... finally, inside vim I'd like to execute make in the current directory... so I do: ":!make", but when make is execute, vim hide the current window and show it again only after make ends, how to execute this command and tell vim to not hide the current window?
03:12  tex3l: hey everybody- kinda noobish question here...
03:12  tex3l: i can't seem to map the chort ctrl-shift-">"
03:12  tex3l: sorry chord
03:13  tex3l: I try <C-S-\>>
03:13  tex3l: that doesn't work
03:13  tex3l: anyone got ideas?
03:13  strull: you cannot map this sequence
03:13  tex3l: strull: dang, that's what i was afraid of
03:13  tex3l: so the > key is unmappable?
03:14  strull: > is mappable, but c-s-> not
03:14  tex3l: oh interesting- is there any particular rule at work there?
03:14  mhi^: leandroal: Don't use "!make". Have a look at ":h :make", ":h :compiler" and ":h quickfix". But since Vim doesn't do asynchronous processes the problem remains, you have to wait until the compile cycle finished or use another shell to do that.
03:21  leandroal: mhi^, got it! thank you, I'm using :make now...
03:22  leandroal: after "make" vim asks me to type ENTER or a command to continue... is it possible to tell vim to avoid this and avoid this putting the cursor back to the text?
03:24  leandroal: strull, if I use | I can put multiples commands in the same au... "au BufNewFile,BufRead *.xml set textwidth=80 | vsp %:r.txt"
03:27  strull: I know. You can also call a function and put as many commands in there as you wish
03:28  leandroal: strull, nice, this is beautiful!!
03:29  leandroal: strull, you know, ctrl-w + R rotate the window, is there a command to do this, instead of using ctrl-w + R?
03:30  strull: :wincmd R
03:31  qkeen: sometimes I use Ctrl+Shift+V to paste text from kde, but it trims first one or two characters -- how to fix it?
03:31  strull: type i first
03:32  qkeen: works, cool
03:32  qkeen: but identations are skewed...
03:32  strull: :he 'paste
03:35  qkeen: works, nice
--- Log closed Tue Nov 23 03:42:19 2010
--- Log opened Tue Nov 23 03:42:40 2010
03:42 --- Users 569 nicks [0 ops, 0 halfops, 0 voices, 569 normal]
03:43 --- Channel #vim was synced in 67 seconds
03:44  leandroal: strull, "set autoread" is reloading/refreshing the file only if any command executed in vim changes it, but if an external program changes the file, vim does not load it... is it possible to fix this?
03:44  strull: leandroal: don't direct your questions to a single person.
03:46  strull: and :he :checktime
03:46  leandroal: strull, ok, sorry. Just asked to you because you suggested the use of autoread...
03:46  leandroal: "set autoread" is reloading/refreshing the file only if any command executed in vim changes it, but if an external program changes the file, vim does not load it... is it possible to fix this?
03:46  deryni: That only happens when vim notices you focusing the buffer, which it doesn't do if you don't change windows in terminal vim, would that be the problem?
03:53  leandroal: deryni, well, I have the file opened in vim, I run an external program that changes this file and vim does not reload the text, even if I have set autoreload
03:53  spiiph: The option is 'autoread'
03:54  spiiph: Nevermind, that was already covered.
03:54  deryni: Terminal vim or gvim?
03:54  leandroal: spiiph, ops... I meant autoread
03:55  leandroal: deryni, terminal vim
03:55  deryni: Does :checktime make vim notice?
03:58  leandroal: deryni, yes...
03:58  deryni: Does switching buffers?
03:59  leandroal: gvim notice when I change windows...
03:59  deryni: Yes, gvim sees focus events. Terminal vim doesn't.
03:59  leandroal: deryni, yes, it does...
03:59  deryni: Because the terminal gets the focus, not vim.
03:59  leandroal: deryni, interesting...
04:02  leandroal: deryni, so, for terminal vim I have to run checkt, right?
04:02  deryni: Or switch buffers (or a couple other things I think but I don't rememeber what).
04:06  strull: such as issuing external commands with :!cmd
04:06  strull: probably also <c-z> and fg
04:44  harleypig: Is there "vim/perl best/common practices" tutorial somewhere?  I'm wondering how I would 'use SomeModule' ... would it be available permanently, or would I have to load it in each function I wanted to use it from?
04:45  tpope: Maahes: you were talking about markdown.vim...
04:45  leandroal: how can I make my own command? I want to do :my_own_command
04:46  Raimondi: leandroal:  :h :command
04:46  Maahes: tpope: yes. :) There's 3 different version, you have one, brad something or other has one, and then hallison has one. I went with hallison's because the scriptmate support, but yours looked very interesting, I don't quite know enough vimscript/regex to decipher it entirely.
04:47  tpope: well, mine was designed to be included with vim (and now is), and there isn't support for the snippet plugin du jour in any vim ftplugin
04:47  hornairs: is there a way to figure out where a key combination was mapped?
04:48  tpope: there was one existing one when I created mine, and I found it unsatisfactory
04:48  Raimondi: hornairs:  :verbose map key
04:48  hornairs: Raimondi thanks!
04:48  Raimondi: np
04:49  hornairs: hm, that doesnt work since the mapping in question closes the window
04:50  hornairs: Raimondi: doesn quite work me because somehow i mapped cmd-w to close window, so i cant put the mapping into the command because the window gets closes
04:51  deryni: Don't push cmd-w, type out the vim mapping string for it.
04:51  Raimondi: hornairs: It's mapped to a menu, see the second last tip from  :h macvim-hints
04:52  hornairs: deryni duh, thanks
04:53  factor: What is a good plugin to convert DOS format to UNIX or mac, the one in vim sucks
04:53  Raimondi: :)
04:54  leandroal: Raimondi, thank you!
04:54  deryni: What plugin to do that? :set ff=<format> works fine.
04:54  harleypig: hmph ... all right then, does anyone know of a plugin that uses perl--*not* supports perl, but uses it as part of its process?
04:55  factor: I need vim to remove all the ctrl m characters form the end of lines
04:55  deryni: If you are seeing them in vim then the file is malformed.
04:56  harleypig: factor: what's wrong with :%s/<Ctrl-V><Ctrl-M>$// ?
04:56  deryni: And you can remove them with :%s/\r$//
04:56  harleypig: or Ctrl-Enter, can't remember off the top of my head.
04:56  harleypig: heh ... yeah ... \r would be easier.
04:57  factor: nice thanks
05:17  harleypig: Do I have to create a separate function! myPerlFunc() perl << EOP ... EOP endfunction for each function I want to call from vim?
05:18  harleypig: Or can I somehow do something like perl << EOP sub func1 {} sub func2 {} EOP ?
05:24 --- yano is now known as notyano
05:25 --- notyano is now known as yano
05:26 --- yano is now known as notyano
05:26 --- notyano is now known as yano
05:30  leandroal: I use vim to edit a script, while editing the script, I press F9 and vim save the file and execute "make", which in the end generate an output file. While executing the commands, vim hides the edit window and just after finish them, it shows again the edit window again. What I want is to press F9, continue editing the text. I'd like to make vim show the output file after "make" finishes in another viewport (the right side, using vsp for example) and also c
05:30  leandroal: ontinue editing the text while "make" is executed, how to do this?
05:31  leandroal: in my .vimrc I have this: map <F9> :wall<enter>:silent make<enter>:redraw!<enter>
05:32  Raimondi: You can't run a background command in Vim.
05:32  leandroal: I'd like to run this command in background, at least the make command, and when it finish, open a specific file...
05:36  leandroal: Raimondi, according to someone, this script should run commands in background: http://code.google.com/p/lh-vim/source/browse/BTW/trunk/plugin/BuildToolsWrapper.vim
05:37  leandroal: Raimondi, but it is a little hard for me to understand it and use for my case
05:37  leandroal: Raimondi, waht do you think?
05:38  leandroal: Raimondi, someone mentioned this in this thread: http://www.groupsrv.com/computers/about655546.html
05:43  Raimondi: leandroal: I don't need to run things on the background, so I'm not familiar with that. The other plugin I think is this one: https://github.com/MarcWeber/vim-addon-async
05:45  yuriks: is there a mapping command that will map a key *everywhere*?
05:45  Raimondi: yuriks: No.
05:45  mdance: what line would i use in my vimrc to bind cntrl+tab to :bn? im trying: map <silent> <Ctrl><Tab> :bn<CR>
05:46  yuriks: I want to map <M-hjkl> to the arrow keys, <M-io> to page up, page down, etc
05:46  Raimondi: mdance: map <silent><C-Tab> :bn<CR>
05:46  yuriks: Raimondi: so I should do both a :map and a :map!?
05:47  Raimondi: yuriks: Which modes do you want to cover?
05:47  yuriks: Raimondi: as many as possible
05:48  Raimondi: That doesn't sound right, what are you trying to do?
05:48  leandroal: Raimondi, ok, thank you....
05:48  mdance: Raimondi: what about cntrl+` to :bp
05:48  mdance: ?
05:48  yuriks: like I said
05:48  yuriks: I want to map <M-hjkl> to the arrow keys, <M-io> to page up, page down, etc
05:49  yuriks: so that I never need to take my finger out of the homerow, even while in insert mode
05:49  Raimondi: mdance: <C-`>
05:49  Raimondi: mdance: I don't know if those mappings will work, but that'sho w they're written.
05:50  yuriks: (or editing a command)
05:50  mdance: what does the <silent> mean?
05:50  Raimondi: mdance:  :h <silent>
05:51  mdance: with the cntrl+` it keeps display: Type :quit<Enter> to exit Vim
05:51  yuriks: Raimondi: hmm, actually, maybe I want :map and :lmap?
05:52  Raimondi: yuriks: :map!  covers command line and insert mode
05:53  Raimondi: yuriks: see :h :map
05:53  Raimondi: yuriks: and :h map-modes
05:53  yuriks: Raimondi: so I should do the mappings twice?
05:54  Raimondi: yuriks: no mapping command covers all modes. See those help topics for more details.
06:07  yuriks: Raimondi: using both map and map! seems to have worked well enough
06:08  Raimondi: Good :)
06:08  yuriks: I use the colemak keyboard layout, so hjkl is a bit hard to use for navigation =P
06:09  yuriks: so I mapped moving around to alt- (which I hit with my thumb) and where jkl; would be
06:10  homekevin: yuriks: As a Dvorak user, I recommend not trying to remap things to suite your keymap.
06:10  homekevin: Granted, Colemak may be worse than Dvorak.
06:10  yuriks: homekevin: why?
06:11  homekevin: But generally I think it's better to have the mnemonics and not have to reconfigure for every new system you use.
06:11  yuriks: oh, I'm keeping all commands
06:11  yuriks: I'm just adding some commands on the 'alt-' namespace
06:11  homekevin: Adjusting to your editor is often easier than adjusting all the world's editors to you. ;)
06:12  homekevin: That's all well and good, but you may find it a headache if commands you are accustomed to don't work on other systems.
06:12  homekevin: Granted, that happens no matter what if you have anything substantial in .vimrc.
06:13  yuriks: yup, I mostly work on two machines that have synced vimrcs, when I'm elsewhere I ssh in
06:13  xtagon: hjkl don't really have a mnemonic anyways.
06:13  homekevin: That's true, hjkl don't.
06:13  homekevin: But when you start remapping things you can't really expect to keep the mnemonics the same.
06:14  homekevin: Unless you just swap around the few non-mnemonic commands.
06:14  homekevin: hjkl was a big concern for me at first, but on Dvorak it's only slightly weird.
06:15  homekevin: h and l are still left and right of each other.
06:15  yuriks: what I did was (all these are meta-something mappings, so, hold alt) jkl; -> <Left>, <Down>, <Up>, <Right>; h' -> <Home>, <End>; io -> <PageUp>, <PageDown>; d -> <Esc>
06:15  homekevin: j and k are still in the same order, next to each other, close to index and middle fingers.
06:16  yuriks: homekevin: in colemak hjk and l are all typed with the same finger =)
06:16  homekevin: Yuck.
06:16  homekevin: Why would you use this horrible keymap? :P
06:16  yuriks: h>h, j>y, k>n, l>u
06:17  yuriks: homekevin: tbh, I tried dvorak for a week before colemak and thought colemak was much, much better
06:17  homekevin: Hmmm...
06:17  frogonwheels: yuriks: :help 'langmap    might help
06:21  harleypig: Anyone willing to take a look at https://github.com/harleypig/dot_vim/blob/master/.vim/after/ftplugin/perl.vim (lines 97-138) and tell me why I'm getting an undefined subroutine &main:: error?
06:24  frogonwheels: ^^^ nested perl - so perl programmers anybody?
06:24  yuriks: not me =P
06:24  homekevin: harleypig: You might get more willing people if you linked to the line: https://github.com/harleypig/dot_vim/blob/master/.vim/after/ftplugin/perl.vim#L97
06:25  homekevin: But I wouldn't have been willing if I'd known it was perl. :P
06:25  harleypig: homekevin: oh, thanks.  I didn't know I could do that.
06:25  yuriks: the only time I messed with perl (to make a short irssi plugin) the syntax and file handling absolutely baffled me
06:25  harleypig: homekevin: sorry, I've been asking about embedded perl for the last hour off and on, but you're right, I should have made that clear.
06:26  harleypig: yuriks: :/
06:26  homekevin: Not knowing much about perl, I don't know if I can help. Is &main:: supposed to be a subroutine name? Or some kind of namespace?
06:27  harleypig: namespace
06:27  homekevin: And is & for a reference or something?
06:27  harleypig: It means it's trying to execute an anonymous subroutine (& means the next token is a sub) ...
06:27  homekevin: Perl's not supposed to need a blessed main() function like C, right?
06:27  harleypig: but &main:: is meaningless
06:27  harleypig: right
06:28 --- Bart is now known as Guest46007
06:29  harleypig: hmmm ... it may not like the closure used for $sub_name
06:30  homekevin: Huh, I don't know. I can't even make this work: :perl print "hello world"
06:30  harleypig: homekevin: what does echo has('perl') show you?
06:30  homekevin: harleypig: 1
06:30  homekevin: But to clarify, that command seems to print nothing.
06:30  harleypig: try :perl VIM::Msg( 'hello world' )
06:31  harleypig: yeah, print goes to STDOUT, but vim seems to be intercepting stdout and stdin
06:31  homekevin: Yeah, that works.
06:31  homekevin: Does Perl use a shell-like interpretation of single-vs-double quotes? Single being "raw"?
06:32  homekevin: (Totally not related to the question, just curious)
06:32  harleypig: yeah
06:33  harleypig: '$now' -> $now while "$now" -> whatever $now is equal to
06:34  lamdk: isnt there a vimscript function to get the first non-blank column on a line?
06:34  Raimondi: harleypig: DOesn't DOCommand executes ex commands?
06:34  lamdk: like where ^ would move cursor to
06:34  Raimondi: harleypig: nvm :)
06:35  homekevin: lamdk: Not that I know of, but getline with one of the match functions could to it.
06:35  Raimondi: lamdk: :h match()
06:35  lamdk: kk
06:36  homekevin: It seems like most of the general text manipulation stuff isn't really mirrored into Vim's functions.
06:38  homekevin: harleypig: Are those subs anonymous or is that just the way subs are defined?
06:38  homekevin: Because if they are anonymous, then I suppose that's why it's looking for main::
06:38  homekevin: Why it doesn't find it I couldn't guess.
06:39  homekevin: I'm guessing main:: is the default namespace at the top level.
06:41  homekevin: Yeah, a quick google shows those are anonymous. Maybe that just doesn't work right in Vim for some reason.
06:42  lamdk: hmm wait im noob,  isnt there a way to use \s inside a character class?  [^\s] no work
06:42  harleypig: homekevin: they are anonymous
06:43  homekevin: lamdk: I think so...
06:43  Raimondi: lamdk:  :h /\]
06:43  harleypig: and yeah, main:: is default toplevel namespace
06:43  Raimondi: Only some.
06:43  homekevin: lamdk: No, I think you have to use [[:space:]]
06:44  homekevin: lamdk: The possible \ escapes are listed under :h /\[] if you scroll down far enough.
06:44  Raimondi: [:blank:] == \s
06:45  homekevin: Huh, weird. There's :blank: and :space:.
06:45  Raimondi: You're right, I wonder...
06:45  homekevin: But apparently \s is only space and tab.
06:47  homekevin: So [:blank:] seems to be the same as \s, but [:space:] might be better in general.
06:47  homekevin: I don't think I would use [[:blank:]] when [ \t] works just as well.
06:50  homekevin: Is there an Ex command to just insert some text (where the text is part of the command)?
06:53  Raimondi: homekevin: You can use :normal to do that, but I'm not sure what you need to do.
06:54  lamdk: thanks all, i got it woot
06:54  homekevin: Raimondi: I'm just trying to make a function to add some generic test text to a new file.
06:55  Raimondi: homekevin: If you want to insert lines of text, see :h :append  and  :h :insert
06:55  homekevin: I guess I could to setline()
06:55  Raimondi: Yes.
06:58  homekevin: No matter how many vim functions I write I will never remember to add a: in front of the arguments consistently.
07:00  homekevin: I've resigned myself to forever see E121 when I run new functions.
07:08  FranciscoD: hello, how would one yank a *sentence*, not the entire line please?
07:09  Raimondi: yis  see  :h is
07:12  FranciscoD: Raimondi: ^ ?
07:12  Raimondi: Type yis in normal mode.
07:12  FranciscoD: Raimondi: aye, looking into it. Thanks!
07:14  FranciscoD: Raimondi: would you also know a way of grammar checking with vim?
07:15  FranciscoD: I know the in-built spell check, but grammar?
07:15  Raimondi: Nope
07:15  FranciscoD: Raimondi: ah, never mind. Thanks
07:15  Raimondi: FranciscoD: http://www.vim.org/scripts/script.php?script_id=3223
07:20  FranciscoD: Raimondi: I've already seen that one. I'll have to setup LanguageTool first so wanted to confirm if there was an alternative :)
07:23  Raimondi: Good luck there :)
07:29  homekevin: Speaking of language, I was looking at :h 'thesaurus' today and the link it points to gave me a 403 error.
07:30  homekevin: http://www.hyphenologist.co.uk/
--- Log closed Tue Nov 23 07:42:08 2010
--- Log opened Tue Nov 23 07:42:35 2010
07:42 --- Users 575 nicks [0 ops, 0 halfops, 0 voices, 575 normal]
07:43 --- Channel #vim was synced in 70 seconds
07:44 --- hakunin_ is now known as hakunin
07:52  subsume: how to paste the characters in the buffer?
07:52  subsume: (for a find and replcae)
07:52  subsume: replace.
07:53  Raimondi: <C-R>"  for register "
07:53  subsume: thanks.
07:54  d0m:                                     *g:CommandTAcceptSelectionVSplitMap*
07:54  d0m:   |g:CommandTAcceptSelectionVSplitMap|  <C-v>
07:54  d0m: (This is what it says in the doc)
07:55  d0m: What is the command to map it to another key? I would like <cr> to open it in a new split v tab instead.
07:55  d0m: I've tried set g:Command... set Command, map Command.., no success so far :p
07:56  Raimondi: d0m: let g:Commm...
07:56  d0m: damnit, so true. thanks
07:57 * d0m feel idiot
07:59  sh1mmer: I linked the vim 7.3 binary from macvim to /usr/local/bin but whenever I run it in a terminal I get a bunch of e254 errors about colour allocations
08:00  sh1mmer: any suggestions for what might be causing it an how to fix?
08:01  Raimondi: sh1mmer: Did you make a symlink to MacVim/Contents/MacOS/Vim  ?
08:01  sh1mmer: yes
08:02  Raimondi: That won't work
08:02  sh1mmer: any suggestions for the "best" way to install 7.3
08:02  Raimondi: Either create an alias or install the mvim script
08:03  sh1mmer: sorry if this is a stupid question but how is an alias different to ln ?
08:04  Raimondi: An alias is expanded by the shell, ln creates a file that points to other file. Sort of :)
08:04  d0m: Bleh, let g:CommandTAcceptSelectionVSplitMap="<cr>", followed by a :CommandTFlush, shouldn't this work? I really don't see why it doesn't :-/
08:06  d0m: google isn't on my side for this one
08:06  Raimondi: d0m: I'd try with  '\<CR>'
08:06  d0m: (Or, obviously, I don't know what to search)
08:06  Raimondi: or '\\<CR>'
08:06  d0m: ok trying this :)
08:08  sh1mmer: another random question
08:08  d0m: doesn't work
08:08  sh1mmer: any way to get vim.app into all the "open with" menus?
08:11  d0m: anyhow, I'll check this tomorrow. Thanks Raimondi, good night
08:11 --- d0m is now known as d0m|zz
08:12  sh1mmer: Raimondi: mvim fixed it. Thanks :)
08:12  Raimondi: sh1mmer: There is a Preferences panel called Default Apps, you can handle that from there.
08:13  sh1mmer: Raimondi: apparently not in Leopard
08:13 * sh1mmer mutters about corporate IT
08:16  jorrit: Hi
08:17  Raimondi: sh1mmer: IT's not installed by default: http://www.rubicode.com/Software/RCDefaultApp/
08:18  sh1mmer: Thanks. Actually I think I installed this 2-3 macs ago
08:18  sh1mmer: :)
08:25 --- daniel___ is now known as daniel
09:17  dsdeiz: hi! what might be the reason if i've set a colorscheme to xoria256 though when i check using :colo it says 'default'? :/
09:49  rolnxyz: How can I get the start and the end line numbers of a selection?
09:51  rolnxyz: "vim.current.buffer.mark('<')"
09:52  malesca: What's a good way to quickly jump to the last edited buffer, or to get a list of buffers in order of last edited? (Similar to how one might use Command+T in TextMate, other than the file path filtering.)
09:52  rolnxyz: nice, that explains why '<,'>
09:54  malesca: last visited rather than last edited, actually
10:01  the_isz: malesca: try  :bprev
10:02  the_isz: malesca: also  <c-6>  is very useful
10:02  Spidey01: <c-6> ?
10:05  the_isz: Spidey01: is the same as  <c-^>  just easier to type :)
10:06  Spidey01: lol
10:06  the_isz: works in vimperator, too, btw
10:09  jozefk: can I join lines which ends with </td> ?  sample of what I want to do: http://pzt.me/ldbt
10:09  Evanlec: hey, can the `sudoedit' command be used in diff mode?
10:10  the_isz: jozefk: i'd try something like  :g/<\/td>$/normal J
10:11  jozefk: thanks I'll try
10:12 * the_isz gets coffeee.
10:12  jozefk: :))
10:17  jozefk: the_isz: after that command I got this: http://pzt.me/iy77
10:17  jozefk: shall I repeat the command?
10:18  jozefk: ok after repeat I'm almost there
10:19  jozefk: the last command was :g/<tr>$/normal J    and that's it. Thanks the_isz!
10:21  the_isz: jozefk: you're welcome :)
10:28  bookses: Hi all, glad to see you. I love vim, and all you vim users
10:35  the_isz: bookses: hi. don't be offended by the quietness after your praise, i guess most people here felt addressed and are now feeling better than they did before :)
10:38  bookses: :-)
10:38  FernandoBasso: :)
10:39  sharat87: hello, is there a command to say run a command on all css/*.css files, something like windo or bufdo, but apply to all files matching a pattern I give..?
10:40  the_isz: sharat87: this sounds like a task for a small shell script to me
10:41  the_isz: sharat87: of course, you can open all those files in vim and then apply, but it feels circumstancial to me
10:41  FernandoBasso: sharat87: Can't you just open the *.css file (only them) and run the command you want?
10:41  the_isz: s/feels/seems
10:41  sharat87: I'd assume it would be possible with a plugin may be..
10:42  sharat87: FernandoBasso: well I can, but it felt like vim is powerful enough to save me that trouble
10:42  the_isz: sharat87: you _can_ use your fridge as a bookshelf :P
10:42  sharat87: the_isz: wait, you mean you don't already? ;)
10:43  FernandoBasso: I really don't know if vim can do that.
10:43  the_isz: sharat87: and all my friends don't believe me reading books is cool^^
10:43  FernandoBasso: As the_isz said, sound like a shell task.
10:43  sharat87: bah, I'll try googling again and if nothing comes up, may be I'll make up something :)
10:43  sharat87: why/how is it a shell task?
10:44  sharat87: i think there is a misunderstanding, I want to run a vim command on all files
10:44  the_isz: sharat87: well, you want to do something on your file system...
10:44  sharat87: not a shell command
10:44  sharat87: the_isz: isn't doing something with file system *easily* the whole point of vim? :)
10:44  the_isz: sharat87: hmm... in that case you'd either have to open all the files first or run vim from a shellscript
10:45  FernandoBasso:  find -name cee/*.css -exec something...
10:45  the_isz: sharat87: hmm... discussably yes. but vim is about editing i thought. that the data is coming from files in the filesystem is mere coincidence :P
10:45  FernandoBasso: s/cee/css/
10:46  the_isz: FernandoBasso: you mean  find css -name '*.css'
10:46  sharat87: lets say I have a vim command that I can do :Filedo *.css normal @q    <- I want it to open every *.css file and do a :normal @q. for me it doesn't sound too out-of-vim
10:47  the_isz: sharat87: you can open all those files and then issue a :bufdo, it's the find command that doesn't suit vim imho.
10:48  the_isz: sharat87: but you can use vim in a script. try  find css -name '*.css' -exec vim -c ':q' {}  and modify as needed
10:48  the_isz: (one option)
10:49  sharat87: so, to do the above mentioned, I have to manually open the files, close any others I have open and then do a :bufdo?
10:49  sharat87: no, I don't want to use shell for this, I don't want to move from the comfort of vim for such a seemingly simple thing :)
10:49  the_isz: sharat87: that's another option, yes
10:50  the_isz: sharat87: then i'm out of ideas, sorry.
10:50  sharat87: I think I'll try implementing Filedo command as a plugin
10:50  sharat87: does anyone know of something similar existing already?
10:53  mavvert: i think there's some sort of batch processing possible in EX mode, dont ask me how it works though
10:54  mavvert: sharat87: http://superuser.com/questions/22455/vim-what-is-the-ex-mode-for-batch-processing-for
10:54  mavvert: not sure that is what you want ?
10:55  sharat87: mavvert: thanks, will check out
10:55  the_isz: mavvert: nice find.
10:57  mavvert: i'd still prefer to do stuff like that in shell though.
10:58  the_isz: mavvert: your find is a good combination of both worlds imho
10:59  sharat87: well, nice solution, but if its a carefully constructed macro, which I want to use with the :g command, I want to do it from inside vim, am I making sense? :)
11:00  mavvert: if the point is editing those files using vim commands, why does it have to be from _inside_ vim ?
11:00  the_isz: sharat87: actually it is from inside vim. just not the instance you're using right now ;P
11:01  mavvert: lol
11:01  sharat87: :)
11:01 * mavvert agrees. xD
11:02  sharat87: alright, I think I'll give the Ex mode solution a try
11:03  sharat87: but I use gvim, and so I have to open a terminal, cd to that directory I am working in with vim, and then.. I'm sure I'll forget what I was doing by then :P
11:03  sharat87: thanks mavvert and the_isz
11:04  d0ugal: What does ^M mean?
11:04  d0ugal: It is some funky windows return character?
11:04  mavvert: its a control character for a newline
11:05  Dynetrekk: hi. is it possible to open 2 files in a vertically split window? along the lines of vimdiff, but with the usual vim mode
11:05  d0ugal: hrm, Why do I only see it sometimes?
11:05  Dynetrekk: d0ugal: I've seen it with dos files. if you write unix files you shouldn't see them. well... what os are you on?
11:06  d0ugal: Dynetrekk: I'm on osx, but some people have been editing it in windows, hence I was wondering if it was a windows newline character
11:06  d0ugal: guess its that then
11:06  Dynetrekk: d0ugal: from my experience that sounds right
11:06  ToRA: Dynetrekk: :help :vs  (for vertical split windows)
11:06  d0ugal: Ok, thanks
11:06  Dynetrekk: ToRA: I'd like to do it from the terminal. vim +vs file1 file2 does not work, for instance.
11:06  ToRA: ah
11:07  Dynetrekk: ToRA: laziness ftw :)
11:07  ToRA: vim /tmp/a.txt +vs /tmp/a.txt
11:07  ToRA: works for me
11:07  sharat87: d0ugal: I think you can set ff=dos or something to tell vim about it :)
11:08  Dynetrekk: ToRA: that opens a file called +vs for me. in macvim, that is.
11:08  Dynetrekk: ToRA: heh, it works in terminal vim. annoying
11:08  ToRA: ah ok
11:09  Dynetrekk: ToRA: no, by the way, it does not work in terminal vim either
11:09  Dynetrekk: it opens both files in a vsplit
11:09  Dynetrekk: which isn't what I want
11:09  Dynetrekk: eh, one file in 2 splits
11:09  Dynetrekk: and you have to do :next to get to the second file in one of the splits
11:11  ToRA: ah good point
11:11  Dynetrekk: that's what I did before, it's almost there, but not quite
11:12  d0ugal: sharat87: cool - thanks, I'll give it a go
11:13  ToRA: vim file1 -c "vs file2", though that's hardly satisfactory
11:13  ToRA: guess you could create a shell script wrapping it though
11:13  ToRA: (on linux though, so no idea how that interacts with macvim)
11:13  Dynetrekk: ToRA: an alias would be the best I suppose. with a script you could do all sorts of stuff, so I guess that's more powerful and general
11:14  Dynetrekk: ToRA: macvim is reasonably close to gvim I guess..
11:14  ToRA: (also, it should be vim file2 -c "vs file1" if you want file1 in the left hand window)
11:14  Dynetrekk: ToRA: vim +vs +next f1 f2 works like that, too
11:14  ToRA: nod
11:15  ToRA: hm
11:15  ToRA: or vim -O file1 file2 file4
11:17  ToRA: -o[N] is open N stacked windows (no N means open a split for each file), -O[N] is vsplits and -p[N] is tab pages
11:17 * ToRA learns something new
11:24  ToRA: Dynetrekk: ^ does the above work with macvim?
11:27  mavvert: ToRA: yes, if you use the mvim wrapper
11:39  Dynetrekk: ToRA: sure works! sorry, I was away for  a sec. it doesn't work with the alias I've set though. I'll have to check out what that was..
11:41  malesca: the_isz: Thanks!
11:44  balint: hey, I have "set rnu" in my vimrc but it only works on the first file I open (usually the NERDTree navigator), whatever file I open from there is opened with absolute line numbers
11:44  balint: if I do ":set rnu" it works but I want this done automatically, for every file
11:54  iaj: balint: you could do  :verbose set rnu?  in a buffer where there are no RNU set.. and see where it comes from.
11:56  balint: iaj: hmm, I don't see anything, it just sets the rel. line numbers. Where shoud I see that?
11:57  iaj: balint: it should say something like "Last set from ..."   did you omit the '?'?
12:01  balint: iaj: I in fact omitted the ?, it now says: norelativenumber
12:02  iaj: huh? when you have set rnu  in your vimrc.. it must be unset somewhere ;\
12:02  balint: sorry, that was displayed because I played around with it, so I explicitly said :set rnu
12:02  balint: I've now relaunched vim (MacVim) and it says: relativenumber Last set from ~/.vimrc
12:05  iaj: yeh... that's how it should be - no?
12:18  balint: iaj: exactly, that's why I'm surprised that the numbers are absolute, not relative
12:38  bosie: how can i actually select 2 sentences?
12:39  mhi^: bosie: v2is / v2as
12:40  bosie: mhi^: good, just wanted to make sure i don't fuck it up ;)
12:40  bosie: cos it only selects one sentence for me
12:41  mhi^: hmm, yea, v2is does for me too.. something is strange about sentence selection..
12:41  bosie: something is strange about sentence in general, i fear
12:42 * mhi^ nods
12:43  bosie: one thing i don't quite get and no clue where to look it up... when i press v and then is, on the right bottom corner i see numbers
12:43  bosie: that's the total number of selected chars?
12:44  bosie: it shows 'i' but no 's' and instead the total number of chars?
12:44 --- _Unode is now known as Unode
12:45  mhi^: bosie: it shows 'i' but no 's'? What? :)
12:45  bosie: mhi^: when i press 'v' it shows 1
12:45  bosie: i press i it shows i
12:46  bosie: but it never shows s
12:46  bosie: if i press vs it doesn't show anything
12:46  bosie: and i am wondering why it never shows s
12:46  bosie: if that's something to be worried about
12:46  mhi^: it doesn't show 'i' for me either
12:47  bosie: hm
12:47  bosie: in the command line where it says --VISUAL--?
12:47  mhi^: up
12:47  mhi^: yup
12:47  bosie: aha
12:47  bosie: great
12:47  bosie: you see a number?
12:48  mhi^: when I select something, yes
12:48  mhi^: that's due to 'showcmd'
12:48  bosie: which should be as soon as you press v no?
12:48  mhi^: yes
12:49  mhi^: ah, you meant while being in select mode.. yes, I see the 'i' too ;)
12:49  bosie: but you never see the s ?
12:49 * mhi^ nods
12:49  bosie: good, thanks
12:50  bosie: why wouldn't vs work though?
12:51  Fandekasp: hi
12:51  mhi^: bosie: does you cursor jump if you hit vs?
12:51  bosie: no
12:52  bosie: oh ye
12:52  bosie: it jumps to the command line
12:53  bosie: mhi^: not sure what you are getting at though
12:53  Fandekasp: I would like to change the map for pep8 to another key. How can I define this from .vimrc ? When I try map <F6> :call Pep8()<CR> , I get the error "E117: Unknown function: Pep8" . When I try map <F6> :call <SID>Pep8()<CR> , I get the error "E117: Unknown function: <SNR>1_Pep8"  :(  Here is the pep8 plugin code : http://paste.pocoo.org/show/294972/
12:54  spiiph: Yeah, the plugin writer should've created some <Plug> mappings for you.
12:54  bosie: mhi^: ok, it is the command for 'change' apparently
12:55  Fandekasp: spiiph, I don't know, I think there is only this file . And here http://www.vim.org/scripts/script.php?script_id=2914 He doesn't explain how to change the map
12:56  spiiph: No, it's a pretty sucky plugin.
12:56  spiiph: You could change it to a global function, or add a command to call the function
12:57  spiiph: Gah, that code does so many stupid and unnecessary things that my eyes are beginning to bleed.
12:57  iaj: spiiph: ^^
12:57  bosie: spiiph: are you volunteering to rewrite it? ;)
12:58  spiiph: Not a chance.
12:58  Fandekasp: spiiph, I don't know enough about vim to do this :S Could you help me ?
12:58  spiiph: Fandekasp, just edit the plugin and add some new mapping to it.
12:59  Fandekasp: ok :( thanks
13:12  Fandekasp: I would like to do a condition "if filetype == python" . How can I do this ?
13:12  MarcWeber: Fandekasp: What's your real goal?
13:13  MarcWeber: expand('%:something') will give you the .py ext. But I suspect there are better ways.
13:13  mgedmin: like :if &filetype == 'python'
13:13  Fandekasp: MarcWeber, I want to map a function to clean my file, and inside this function, if my filetype is python, I'll run the pep8 function
13:13  daniel: probably an autocommand is enough
13:14  Fandekasp: thanks mgedmin :)
13:15  MarcWeber: daniel:   noremap <m-s-f><m-s-t><m-s-p> :exec 'e ~/.vim/ftplugin/'.&filetype.'_mw.vim'<cr>
13:16  MarcWeber: Use a mapping like this. Then you're taken to the filetype file. the _mw is to make the name of the filetype file unique. You can use different chars there.
13:16  MarcWeber: Put your mapping in there.
13:16  mgedmin: wait, you can have more than one filetype plugin? I didn't know that
13:17  MarcWeber: mgedmin: That's one way. A different way is using multiple runtimepath directories having ftplugin/*.vim files
13:17  Kismet010: i'm trying to use codepad.vim script (or suggest me a better option) to upload my code, but it's say to me that it require +python support.. i have python3 installed so what happen?
13:18  squ: vim is not compiled with it
13:18  Kismet010: ah ok
13:18  squ: its selected on compilation stage
13:19  Kismet010: is there any plugin for upload to pastebin sites?
13:19  Kismet010: i don't want to recompile vim, i use binary packages
13:19  squ: I would use curl
13:19  squ: single mapping to upload current (%) file
13:20  squ: why python is needed for that ? :)
13:20  Kismet010: codepad plugin require it
13:23  mgedmin: Kismet010, what distro?
13:24  Kismet010: mgedmin: arch
13:24  mgedmin: and for pastebins, I use :w !pastebinit
13:24  mgedmin: doesn't Arch Linux have a vim built with Python support?
13:24  Kismet010: sure on AUR, but i prefer binary
13:25  MarcWeber: Kismet010: Try #arch channel if it exists.
13:25  squ: :w !curl --upload-file http://pastebin.com
13:25  squ: something like this with proper link
13:25  Kismet010: yes it's an important channel on freenode xD
13:27  Kismet010: squ: i don't think it's that simple...
13:27  squ: 23/11/2010 14:20:59 mgedmin !~mg@Maemo/community/contributor/mgedmin> and for pastebins, I use :w !pastebinit
13:27  squ: its exactly that simple
13:28  squ: :w !cmd. will issue ./cmd < currentfile
13:28  mgedmin: well, not really -- you've got to apt-get install pastebinit, and then fiddle with its config so it uses something nice (e.g. pastie.org) instead of pastebin.com
13:28  mgedmin: and its config is xml, so I've created an alias instead
13:28  squ: whats wrong with pastebin.co?
13:30  mgedmin: .co or .com?
13:30  Kismet010: in arch there are a wgetpaste to do that
13:30  Kismet010: and so many others
13:30  squ: com
13:30  mgedmin: there are zillions of command-line tools for pastebins; pastebinit happens to have an easily memorizable name
13:30  Kismet010: but i'm looking for a simple .vim script
13:30  mgedmin: pastebin.com offends me by rendering a fake chromium notification bar on top, and is ugly anyway
13:30  Kismet010: i like codepad to show compiled code
13:30  squ: Kismet010, why
13:31  squ: why you like .vim script instead of :w command?
13:31  Kismet010: squ: cos i have others computers with other distros
13:31  iaj: mgedmin: which one is your favorite pastebin?
13:32 * mgedmin already mentioned pastie.org
13:32  iaj: mgedmin: sorry .. is there a vim script to paste to pastie and adjusting the filetype?
13:32  squ: Kismet010, http://www.vim.org/scripts/script.php?script_id=1075
13:32  mgedmin: although pastey.net has vimscript highlighting support
13:32  mgedmin: no idea; I never went looking for vim scripts for this purpose
13:33  squ: why do you need that
13:33  iaj: mgedmin: so are there shellscripts for pastey or pastie?  that can be called by :w !...?
13:33  mgedmin: iaj, where have you _been_ for the last 15 minutes?
13:33  squ: like mentioned above pastebinit
13:34  mgedmin: oh, not in the channel
13:34  mgedmin: sorry, didn't notice you just joined
13:34  mgedmin: apt-get install pastebinit
13:34  mgedmin: is what I use
13:34  iaj: mgedmin: :\ :)
13:34  iaj: thanks
13:34  mgedmin: and then configure it to use pastie.org
13:34  Kismet010: i'd recommend
13:35  Kismet010: wgetpaste
13:35  Kismet010: it's updated
13:35  mgedmin: pastebinit is probably not the best tool out there, but it has an easy to remember name
13:37  iaj: mgedmin: hmm when I use pastebinit  - the resulting url ain't put to clipboard automatically, correct?
--- Log closed Tue Nov 23 13:42:59 2010
--- Log opened Tue Nov 23 13:43:21 2010
13:43 --- Users 596 nicks [0 ops, 0 halfops, 0 voices, 596 normal]
13:44 --- Channel #vim was synced in 71 seconds
14:10  d0m: Is there a quick way to ask for a string, but to be able to read it one character at a time? i.e. while (getchar())
14:12  squ: you dont want to use variable to iterate thru array, right?
14:12  d0m: I'm trying to emulate the incremental search if you want
14:13  d0m: to have a direct result while the user is typing
14:14  d0m: I was thinking of maybe creating a new small window and find a way to bind an event to "insert something", but still, I'm a bit in the dark there :p
14:17  d0m: I'll read CommandT plugin meanwhile to see how he did it
14:20  the_isz: Kismet010: i'm on arch, too, but my vim has python support...
14:21  Kismet010: mmm
14:21  d0m: so, new window and re-"map"-ing of all keys to fake an event handler.
14:21  Kismet010: weird xD
14:22  the_isz: Kismet010: what do 'pacman -Qi vim-runtime' and 'vim --version | grep python' tell you?
14:22  Kismet010: the_isz: codepad.vim script say that it hasn't
14:22  Kismet010: the_isz: how do you look that?
14:23  the_isz: Kismet010: i didn't understand that question
14:23  Kismet010: how do know your vim have python support?
14:24  elik: :version
14:24  _rane: :version
14:24  _rane: vim --version
14:25  the_isz: Kismet010: just run the two commands i gave you on the command line
14:25  the_isz: Kismet010: and watch their output
14:26  Kismet010: mine have -python and -python3
14:26  the_isz: Kismet010: ok, so what does 'pacman -Qi vim-runtime' say which version you have?
14:27  Kismet010: 7.3.3-2
14:28  the_isz: Kismet010: very strange... the same as i do...
14:28  Kismet010: x86_64?
14:28  the_isz: Kismet010: no, i'm on 32bit here, but that shouldn't make a difference.
14:28  the_isz: Kismet010: what does 'pacman -Qo $(which vim)' say?
--- Log closed Tue Nov 23 14:34:50 2010
--- Log opened Tue Nov 23 14:35:09 2010
14:35 --- Users 607 nicks [0 ops, 0 halfops, 0 voices, 607 normal]
14:36 --- Channel #vim was synced in 73 seconds
14:38  the_isz: Kismet010: yes, but they use the same runtime.
14:39  the_isz: Kismet010: well, i'm out of ideas, sorry. i suggested you might have a symlink or something... wait, do you have aliases in place? what does 'alias | grep vim' say?
14:39  Kismet010: the_isz: i'm reading about it
14:40  the_isz: Kismet010: does the above command give you any output?
14:41  Kismet010: https://bugs.archlinux.org/task/16177?opened=1479&status%5B0%5D=
14:42  Kismet010: see what said tobias (comment #4)
14:43  the_isz: Kismet010: yes, i see. now i wonder why i do have python support compiled in oO
14:49  Kismet010: anyway, i found a script to upload code to pastey.net
--- Log closed Tue Nov 23 14:59:13 2010
--- Log opened Tue Nov 23 14:59:36 2010
14:59 --- Users 606 nicks [0 ops, 0 halfops, 0 voices, 606 normal]
15:00 --- Channel #vim was synced in 70 seconds
15:42  helo: is it possible to launch a command, piping the current selection to the process' standard in?
15:44  trone: hi there. there is something in editing mode similar to ctrl+t in shell? switching of 2 adiacent chars... I know 'xp', but in normal mode.
15:45  the_isz: helo:  :w !cmd
15:45  the_isz: trone: xp is normal mode ;)
15:46  trone: the_isz: yes. and I know it. I would ask if exists a similar things, in editing mode (as ^T in shell)
15:48  the_isz: trone: not that i'd know if. but you can map  <c-o>xp  in insert mode if you really need it
15:48  silex: the_isz: write a mapping for i^T ?
15:48 --- silex is now known as Silex
15:48  Silex: well, the_isz beat me to it :)
15:48  the_isz: trone:  <c-o>x<c-o>p  is the right thing
15:48  the_isz: Silex: yay :D
15:49  trone: :) I start to read map. :-P
15:49  trone: thankyou.
15:49  the_isz: trone: :inoremap <c-t> <c-o>x<c-o>p
15:50 --- Guest46007 is now known as fr0gprince_
15:51  trone: the_isz: lol. wow. :) i have to study
15:51  the_isz: trone: you're welcome. have fun :)
15:59  trone: what is <c-o> ? :)
16:02  the_isz: trone: CTRL-o
16:03  the_isz: trone:  :he i_CTRL-O
16:04  trone: the_isz: ok. :) thankyou again
16:04  the_isz: trone: yw
16:05 --- EselTheo_ is now known as EselTheo
--- Log closed Tue Nov 23 16:20:33 2010
--- Log opened Tue Nov 23 16:20:51 2010
16:20 --- Users 612 nicks [0 ops, 0 halfops, 0 voices, 612 normal]
16:21  Silex: typing :new<CR>:only<CR> is kinda boring
16:21  peth: Silex: :ene?
16:21 --- Channel #vim was synced in 68 seconds
16:22  Silex: peth: perfect, thanks
16:24 --- sipior_ is now known as sipior
16:24 --- fedesilva_ is now known as fedesilva
16:49  trone: the_isz: ok, I created my mapping (as your, but <c-o>h before: <c-t> <c-o>h<c-o>x<c-o>p ). I setted it with noremap! because I would that it works in Insert and Command mode (to change typos when I write :%s/regxe^t for example), but in cmdline it wrote <0f>h<0f>x<0f>p (so it seem get the <c-o> commands not how I expect.) There is a way to execute command in cmdline mode?
16:49  trone: And I can write this things with just one map, or I need two mappings (for insert mode and cmdline mode)?
16:50  graywh: trone, it's not going to work in cmdline mode
16:50  trone: graywh: I can't use <ctrl> there?
16:51  graywh: ctrl-o
16:51  trone: (err. I wrong. ctrl+v is ok to insert special chars)
16:51  catsup: for some reason, vim takes about 15 seconds to start on osx
16:51  catsup: i mean gvim
16:51  catsup: not in the terminal
16:51  catsup: anyone know wtf is up with that?
16:51  trone: graywh: yes. there is a way to insert normal command (as x, and p) in cmdline mode?
16:51  mgedmin: catsup, vim --startuptime debug.txt
16:51  graywh: trone, nope
16:52  mgedmin: s/vim/gvim/
16:52  mgedmin: then look if it's plugins or what
16:52  graywh: trone, you can use the cmdline window, though
16:52  mgedmin: trone, at best you have to open the commandline window (<C-F>) and do normal commands there
16:53  catsup: well, no plugins installed
16:53  trone: graywh, mgedmin : ah, ok. I don't use it often. thankyou (Again, at all).
16:53  catsup: & no vimrc
16:54  bosie: why is it that my map <C-j> <C-w>j doesn't go to the quicklist?
16:54  bosie: it works fine with 'regular' windows but not the quicklist
17:00  crankharder: if I have two windows open, is there a command to switch them without chnging their sizes?
17:01  graywh: crankharder, you can rotate windows
17:01  peth: crankharder: or exchange with CTRL-W x
17:02  graywh: :h window-moving
17:02  crankharder: yea that keeps window A the same size -- I want to keep my window sizes the same just switch the content... no big deal
17:03  d0m: Is there any way to call "/" manually to search? (i.e. :search "test")
17:03  peth: crankharder: if the alternate file is set correctly, :b#^W^W:b# might work for you
17:04  peth: or even ctrl-^ ^W^W ctrl-^
17:07 * d0m can use directly "/"
17:08 --- Leonidas_ is now known as Leonidas
17:19  squ: vim opens all folds if I do ( or [
17:20  squ: how to avoid that except by putting first ], then [
17:23  squ: how to J but without space added
17:23  squ: ?
17:23  graywh: gJ
17:23  squ: it will add tabs
17:23  gkatsev: I was gonna say $Jlx
17:24  graywh: gJ doesn't add/remove anything but the EOL
17:24  squ: J removes tabs
17:24  squ: but adds space
17:24  squ: gkatsev, you better not
17:24  graywh: Jx
17:24  graywh: or Jdw
17:25  squ: it that space hardcoded into vim?
17:25  squ: so I safely remap J to Jdw
17:25  squ: ?
17:25  gkatsev: ah, yeah, Jx, I forgot that J moves you to where the break was
17:26  graywh: it inserts up to 2 spaces
17:26  gkatsev: squ: see :h 'js'
17:26  graywh: read the help for J, etc.
17:26  gkatsev: more specificlaly 'js'
17:26  graywh: the help after J has more than just 'js'
17:26  graywh: s/has/mentions/
17:27  squ: gkatsev, I set nojs, but space is added
17:27  gkatsev: yes, it will always add a space at least
17:27  graywh: then you don't know what 'js' even does
17:28  squ: gkatsev, no that space is hardcoded into vim itself?
17:28  gkatsev: ...
17:28  squ: or it takes that space from file somehow
17:28  gkatsev: read the help
17:28  squ: did you?
17:29  gkatsev: I did.
17:29  fow: The help for 'js' clearly states that it will add either one or two spaces, squ. I'm not sure where you're confused
17:30  squ: ah
17:30  squ: so I can safely remap J to Jdw, and expect it to always delete artificial space
17:30  squ: :)
17:30  peth: what's wrong with graywh's gJ ?
17:31  squ: peth, Im joining lines, where they are preceded with tabs
17:32 --- Silex is now known as silex
17:42  crankharder: how can I performan action on a set of line numbers... like say yank lines 15-22? hopefully w/o performing mental math
17:43  gkatsev: :15,22y
17:45  creidiki: maybe im atypical but most of the stuff i work with is in the 4-figure line count, so i find it easier to move to the first line and use relnumber for -> :<number>yy
17:46  creidiki: rather than typing :1231,1245y
17:46  gkatsev: yes, rnu ftw
17:47  crankharder: so :123y would copy from the current line to line 123?
17:48  crankharder: er, yy
17:48  creidiki: no, 123 lines down including current
17:48  creidiki: so 3yy is yank current line and the two underneath
17:49  crankharder: er, yea, i knew that :/
17:49  creidiki: :)
17:49  peth: :123y yanks line 123 afaik
17:49  peth: :+123 yanks 123 lines down
17:50  peth: uh, no
17:50  creidiki: dont confuse me dude, vim is hard 'nuff :D
17:50  crankharder: 's okay -- the :15,22yy is what i needed -- no counting required
17:50  homekevin: Hm, docs say the first number is a range... but :y also accepts a count.
17:50  homekevin: So :y 123 should yank 123 below the cursor.
17:51  peth: :,+123y should work in any case
17:58  creidiki: that seems like a laborious alternative to 123yy
17:59  peth: doesn't it
17:59  gkatsev: it has the overhead because it is a command
17:59 --- Unode is now known as _Unode
17:59  gkatsev: well, generally.
18:00  gkatsev: copying all text in a file is faster with a command than normal mode keystorkes
18:00  gkatsev: :%y vs ggyG
18:01  qfr: How do I copy stuff in gvim to the system clipboard? yanking it doesn't do the job - it only stays in a vim register then
18:01  creidiki: ggyG is still faster to type for me than :%y (fingers dont move as far), but yeah :)
18:01  peth: qfr: yank into the right register
18:01  peth: qfr: "+y
18:01  gkatsev: or *
18:01  peth: depending :)
--- Log closed Tue Nov 23 18:08:13 2010
--- Log opened Tue Nov 23 18:13:33 2010
18:13 --- Users 596 nicks [0 ops, 0 halfops, 0 voices, 596 normal]
18:14 --- Channel #vim was synced in 73 seconds
--- Log closed Tue Nov 23 18:44:46 2010
--- Log opened Tue Nov 23 18:45:10 2010
18:45 --- Users 598 nicks [0 ops, 0 halfops, 0 voices, 598 normal]
18:46 --- Channel #vim was synced in 72 seconds
18:46  rson: anyone using the lusty juggler plugin?  any time i try to run it i just get "no other buffers".
18:47  creidiki: rson: i dont use it much, but ive never got that
18:48  rson: what version of vim?
18:49 --- WebDragon|away is now known as WebDragon
18:50  creidiki: rson: 7.3.062
18:50  creidiki: ruby 187
18:50  rson: hmm. ahh, that could be it, i'm using ruby 1.92
18:50  rson: 1.9.2
18:50  rson: thanks
18:53  creidiki: rson: lustyexplorer crashes flat out with 192 so that might ell be it
18:53  creidiki: at leats for me
18:55 * mgedmin had vim segfaults trying to use lusty/commandt until he rebuilt vim without perl support
19:34  disgrntld: sup gang, how can I load a file of vim commands from my .vimrc?
19:35  fow: disgrntld, :h :source
19:35  fow: disgrntld, depending on what you want to do, though, it may not be the best option
19:36  disgrntld: ahh, thanks.. I share this account with other people so I can't much up the .vimrc.. was gonna make a leader-command to load my configs
19:36  disgrntld: ..does that sound right?
19:36  disgrntld: s/much/muck/
19:36  fow: ah
19:37  peth: disgrntld: :h -u
19:38  disgrntld: nice, I'll check that out
19:38 * helo wonders about the shared account
--- Log closed Tue Nov 23 19:44:50 2010
--- Log opened Tue Nov 23 19:45:10 2010
19:45 --- Users 601 nicks [0 ops, 0 halfops, 0 voices, 601 normal]
19:45 --- Server: [asimov.freenode.net] [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
19:46 --- Channel #vim was synced in 69 seconds
19:46  disgrntld: heh, no.. just a sloppy setup where I work :\
19:46  helo: individual user accounts are the traditional way to ensure each user has their own config ;)
19:47  helo: and it will automatically place you in your own working directory!
19:47  disgrntld: yeeeaaaaaa, I don't really want to rock the boat, but I concur
19:48  helo: yeah... heh
19:48  disgrntld: ..if that was the only oddity here, I might try to fix it
19:48  disgrntld: anyway, thanks for the help everyone
19:51 --- WebDragon|laptop is now known as WebDragon
19:54  consumerism: in netrw tree mode, i want to make a given directory the new top of my tree...how can i do this?
19:54  rson: is there a setting for how long text stays when you echo it?  i'm attempting to write a plugin that persistantly puts text in that space except when you are using it to type a command and sometimes it seems i can't overwrite what's there until some time has passed
20:25  gdoteof: on centos I have installed vim-enhanced
20:25  gdoteof: and done :syntax on
20:25  gdoteof: but i have no syntax highlighting
20:25  gdoteof: ugh
20:26  gdoteof: nm i am noob.  vi != vim
20:41  walt: Anyone here using this script? http://www.vim.org/scripts/script.php?script_id=1160
20:41  walt: or can recommend another file skeleton script
20:46  deryni: :help skeleton ?
20:46 --- WebDragon|laptop is now known as WebDragon
20:46  unkanon: O gods of vim! how do I save a file with another name and start working on it immediately?
20:46  unkanon: some sort of mix between w and e
20:47  unkanon: I've been doing :w newname -> :e newname -> :bp -> :bd for too long
20:49  peth: unkanon: :h :sav
20:50  bsod1: I downloaded the latest vim source but how can I modify my vim before compiling for some features like gui option, clipboard support, etc
20:50  xtagon: bsod1:   ./configure --help
20:50  peth: bsod1: depends on your os. there should be an explanatory README
20:51  bsod1: peth: ubuntu 10.04
20:51  peth: see xtagon
20:51  peth: :)
20:51  bsod1: :S
20:52  bsod1: vim with gui means gvim, right?
20:53  squ: yeah
20:54  rindolf: Hi all.
20:54  rindolf: mhi^: hi, here?
20:54  squ: hi
20:54  rindolf: squ: what's up?
20:54  squ: why do I remember you?
20:54  squ: :)
20:54  squ: are you bot?
20:54  unkanon: peth: thanks
20:54  rindolf: squ: I'm not a bot.
20:54  rindolf: squ: at least I don't think I am.
20:55  rindolf: squ: http://www.shlomifish.org/ - that's my homepage.
20:55  squ: rindolf, well what to say.. is good or bad
20:55  squ: ah that fish is cool:)
20:55  rindolf: squ: it's from UserFriendly.
20:55  rindolf: It was so me.
20:55  squ: eyes is so trustful
20:56  squ: like our politics eyes when they tell they dont attacked iraq for no reason
20:56  squ: so whats your question?
20:57  rindolf: squ: no specific one at this point - I'm here just to chat.
20:57  rindolf: Or answer other people's questions.
20:57  rindolf: I am using Vim...
20:58  squ: cool
20:58  squ: let me ask you something
20:58  squ: vim opens all folds if I do ( or [
20:58  squ:  how to avoid that except by putting first ], then [
21:01  rindolf: squ: there are several [ commands.
21:02  squ: its not command
21:04  peth: squ: see :h foldopen
21:04  peth: squ: :h 'foldopen
21:07  squ: peth, ":set foldopen=" and it still opens if I [
21:10  peth: squ: ( or ) don't do that at all for me, nor does [. what does [ do for you normally?
21:11  squ: open array
21:11  deryni: Are you talking about inserting an ( in insert mode?
21:11  squ: deryni, yes
21:11  peth: uh
21:11  squ: how does [ or ( open fold in normal mode ?
21:11  deryni: I see that too, with fdm=syntax.
21:11  squ: deryni, its annoying do you agree?
21:12  squ: makes me mad :>
21:13  squ: also space which is appended to the end of line after J also annoys me
21:16  bsod1: I don't know c, and I don't understand anything in options.c, can anyone hlep my about compiling vim with some opetions?
21:17  squ: bsod1, you use bsd?
21:17  peth: bsod1: ./configure --with-features=huge --enable-gui=gnome2 --enable-cscope --enable-(...)interp=yes
21:17  bsod1: squ: ubuntu 10.04
21:17  bsod1: peth: where can I find full list of options and values they can have?
21:18  peth: if you use zsh you can ./configure -<TAB>
21:18  peth: don't know about bash
21:18  squ: with bsd I would recommend ports make install, which show configuration window with options
21:18  xtagon: Works in bash, at least for me.
21:18  deryni: squ: Yeah, the ( issue is definitely annoying.
21:19  xtagon: squ: gJ works like J but without adding a space.
21:19  squ: xtagon, it adds whatever blank preceeded botton line
21:20  bsod1: omg there are too many opetions
21:20  bsod1: so which values they can have?
21:20  Geralt: hi, do you know how I can include a tag for each header file in my ctags database, as it can be done with --extra=+f for source files?
21:20  bsod1: and where can I find information about this options
21:21  squ: Geralt, I dont know. but doesnt ctags manpage help? or ctags --list-kinds?
21:23  bsod1: where can I find information for vim options?
21:23  bsod1: like --disable-netbeans?
21:24  peth: bsod1: you can look up +features in the vim help itself, also like xtagon said ./configure --help
21:25  Geralt: squ: no, --list-kinds does not list any such flag
21:25  bsod1: path: I need more detailed informatin, what is the difference between normal and dynamic python interpreter, for example
21:28  xtagon: bsod1:    :help python-dynamic
21:29  xtagon: bsod1: That was linked to in the feature list which you can see with   :help feature-list
21:31  ezzieyguywuf: does vim have a function whereby I can visually select a number of lines and vim will 'flip' the lines about each other horizontally, such that 'a\nb\nc' becomes 'c\nb\na' ?
21:32  peth: ezzieyguywuf: !tac
21:32  ezzieyguywuf: peth: ah hah.
21:32  |dgs|: i'm trying to get the surround.vim plugin to work - it seems all the cs... and ds... keybindings work, but not the ys/yS.. bindings. I'm guessing they must be being clobbered by another plugin  - is there anyway to track where a binding is coming from?
21:32  peth: ezzieyguywuf: it is possible to do it *in* vim, but imo not worth the hassle :)
21:33  peth: |dgs|: ":verbose set <setting>?"
21:34  peth: mapping even
21:34  peth: :verbose map <key>
21:34  |dgs|: peth: thanks =)
21:35  |dgs|: though it seems surround.vim is the only thing setting bindings
21:35  bosie: ezzieyguywuf: i have the same wish but for paragraphs... any idea?
21:36  ycxiu: hi, is there a builtin function that returns the virtual column number?
21:36  peth: bosie: !]tac if at the start or vip!tac if inside
21:36  peth: damn it, !}tac
21:37  ezzieyguywuf: bosie: !tac worked great for me
21:37  ezzieyguywuf: but line-wise
21:37  bosie: not sure how to use it
21:37  ezzieyguywuf: bosie: what he said
21:38  bosie: i put the cursor at the beginning of a paragraph
21:38  bosie: and type ":!tac" ?
--- Log closed Tue Nov 23 21:44:41 2010
--- Log opened Tue Nov 23 21:45:01 2010
21:45 --- Users 613 nicks [0 ops, 0 halfops, 0 voices, 613 normal]
21:45  subsu: is there any way to make vim in a terminal wrap text at a specific column, like that was the width of the terminal?
21:46 --- Channel #vim was synced in 74 seconds
21:47  gkatsev: hard or soft wrap?
21:48  subsu: soft wrap
21:48  hacosta: im trying to copy to my clipboard, ( "*y<range> ) but whenever i type the * (or +) the thingy that shows the command im typing resets.
21:48  peth: bosie: visual select, then :g/^/m'<
21:48  subsu: I want vim to act like the terminal it's running in is 80(of course) columns wide, nothing else
21:49  peth: ok, not my day. disregard me.
21:49  bosie: yea
21:49  Raimondi: subsu: No.
21:49  DHulme: peth: that doesn't work, you need m N where N is the line number above the start of the selection
21:49  subsu: Raimondi: hehe, then I wasn't wrong, why do I feel bad about that:)
21:49  Raimondi: :)
21:53  hacosta: can this problem be related to my keyboard layout? i'm using us-intl which means i nees to type " followd by a space to actually get that char
21:53  Raimondi: bosie: Do you use MacPorts?
21:54  DHulme: hacosta: almost certainly
21:54  DHulme: hacosta: does it work if you just don't do the space?
21:59  deanc: I'm trapped inside a read only file in vim, anyway to force it (from within vim) to write
21:59  deanc: i  made changes without forgetting to drop the read-only flag
21:59  hacosta: DHulme: let me try
21:59  nvictor: hello vim :)
22:00  graywh: deanc, :set noro
22:00  bosie: Raimondi: yes
22:00  nvictor: i need some help with substitution
22:00  deanc: graywh: appears to have done nothing
22:00  hacosta: DHulme: nope, but the thing is, if i copy to another register (register?) it works fine, i can copy to a, b, etc. but not to +
22:01  graywh: deanc, how is it read only?
22:01  deanc: graywh: a colleague set the file to read only a few weeks ago as we didnt want our other colleague from removing the embedded harry potter theme tune that we added just for him
22:01  nvictor: so i have lines in my data that are formatted like this: county_name: state_name1; state_name2, state_name3, etc. what i want to so is transform those lines to county_name, state_name1; county_name, state_name2, etc..
22:01  nvictor: how can i do that?
22:01  deanc: I'm not sure how he did it :)
22:02  graywh: deanc, what filesystem?
22:02  deanc: urgh
22:02 --- Araxia_ is now known as Araxia
22:02  bsod1: when I press tab in command line it prints ^I instead of complating my folder's name, do you have any idea about this=?
22:02  graywh: b/c it sounds like *that* is where it's set as being read only
22:02  deanc: default i would guess. yes graywh. i would suspect that's the case
22:02  graywh: bsod1, trying to use :o ?
22:03  deanc: Oh colleague woke up, ill ask him to remove
22:03  bosie: Raimondi: can't seem to find tac on it though
22:03  DHulme: nvictor: what have you tried?
22:03  bsod1: graywh: what is :o?
22:03  graywh: bsod1, short for :open
22:03 --- WebDragon|away is now known as WebDragon
22:03  Raimondi: bosie: tac is part of the coreutils package, along with other utilities.
22:04  nvictor: DHulme: i'm stucked, since the number of states that follow a county name is not constant
22:04  deryni: Short for almost-certainly-not-what-you-want. =)
22:04  Raimondi: bosie: Although it's renamed to gtac, as well as the other utils.
22:04  graywh: too often, "i can't tab-complete file names" is code for "i'm using :o instead of :e"
22:04  bsod1: graywh: It was working one day before
22:05  graywh: bsod1, check your 'wildchar'
22:08  bosie: Raimondi: kinda don't feel like installing the entire coreutils package to get to tac though
22:08  Raimondi: bosie: Sure :)
22:20  bosie: hm, what is the abbrevation for Alt when setting a mapping ?
22:20  Raimondi: <A-
22:21  bosie: then i guess the problem lies somewhere else
22:22  Raimondi: bosie: :h 'macmeta'
22:22  bosie: it is set to nomacmeta
22:22  Raimondi: I think that isn't what you're looking for
22:23  bosie: if i have it on, it says that option-key presses are not interpreted, thus enabling bindings to <M-
22:23  bosie: that isn't what i want either
22:26  Raimondi: Is Alt the same as Meta?
22:27  bosie: i thought meta means command/apple key
22:27  Raimondi: Command goes by <D-
22:27  bairui: not on *nix - meta = alt
22:28  bairui: good morning, Raimondi :)
22:28  bosie: i have never used <D- and i have set apple key maps
22:28  Raimondi: Oh! that makes sense now, good morning, bairui
22:28  Raimondi: bosie: They're set for the menus
22:29  Raimondi: bosie: there was some talk to use one of the option/alt keys as alt and the other as option, there is even a patch for that in the vim_mac list
22:30  bsod1: can I use eclim with vim 7.2?
22:31  bosie: Raimondi: weird thing is, if i do :map <M-t> i get the same list as :map <A-t> ;)
22:31  lamdk: is there a way in vimscript, to find the matching paren? like with %?
23:03  harleypig: If I define an autocmd in .vim/after/ftplugin/perl.vim , will that autocmd only work when in a perl file? or do I still need to define autocmd FileType perl autocmd ... ?
23:03  graywh: harleypig, depends
23:03  harleypig: graywh: on what?
23:03  graywh: did you use <buffer>
23:04  harleypig: no
23:04  graywh: and does your ftplugin have a way to delete the autocmd if 'ft' gets changed for the buffer
23:04  harleypig: I don't think so.
23:05  harleypig: It's a simple function that strips white space from the end of lines
23:05  unkanon: how do I recompile vim so that I can use perldo?
23:05  unkanon: do I pass a certain flag to ./configure?
23:06  harleypig: graywh: but, if the filetype was changed, it wouldn't be in effect anymore would it?
23:06  unkanon: --enable-perlinterp I guess
23:06  frogonwheels: unkanon: what system?   :echo has('perl')
23:07  unkanon: frogonwheels: ubuntu linux
23:07  DHulme: harleypig: it would if your plugin doesn't have a way to delete the autocmd
23:07  frogonwheels: unkanon: then no need to recompile
23:07  graywh: depends on what your autocmd is
23:07  ntiy: hey dear All. I have strange problem: when I open vim on my machine and then close it i get this message:
23:07  ntiy: E138: Can't write viminfo file /home/eugene.dedits/.viminfo!
23:07  ntiy: Press ENTER or type command to continue
23:07  unkanon: frogonwheels: that returns 0
23:07  unkanon: frogonwheels: but :perldo doesn't work
23:07  ntiy: after enter vim closes normaly
23:07  deryni: ntiy: Permissions on .viminfo?
23:07  frogonwheels: unkanon: ok then install vim-gnome
23:08  ntiy: now I do
23:08  ntiy:  ls -l ~/.vim*
23:08  ntiy: ls: /home/eugene.dedits/.viminfo: No such file or directory
23:08  ntiy: -rw-r----- 1 eugene.dedits 2600 532 May  4  2010 /home/eugene.dedits/.vimrc
23:08  ntiy: wtf?
23:08  graywh: what about permissions for $HOME
23:08  unkanon: frogonwheels: what does vim-gnome have to do with perl?
23:08  harleypig: graywh: currently it's autocmd FileType perl autocmd FileWritePre * :call TrimTrailingWhitespace()
23:08  frogonwheels: unkanon: (you can  install vim-perl, but that's a virtual package for vim-gnome/vim-gtk /vim-nox
23:08  harleypig: sorry, s/grayh/DHulme/
23:08  deryni: vimgor: vim-tiny
23:08  vimgor: vim-tiny is the default Vim package for Debian/Ubuntu. It is built with a small subset of features and is not intended to be used full-time. You most likely want to install a more capable package of the Vim editor. If you want gvim install the vim-gtk package, otherwise install the vim package.
23:08  graywh: harleypig, and that's in your perl ftplugin?!
23:09  harleypig: yes
23:09  graywh: harleypig, you probably want :autocmd <buffer> FileWritePre ... instead
23:09  graywh: b/c i don't think that will work
23:09  ntiy:  ls -la ~ | grep vim
23:09  ntiy: ?---------  ? ?             ?           ?            ? .viminfo
23:09  harleypig: *shrug* It's been working.
23:09  ntiy: -rw-r-----  1 eugene.dedits 2600      532 May  4  2010 .vimrc
23:10  graywh: ntiy, no, ls -ld $HOME
23:10  DHulme: ntiy: just delete .viminfo
23:10  graywh: oh, heh
23:10  ntiy: I can't delete it
23:10  DHulme: as root
23:10  harleypig: it just occurred to me that it seemed redundant if the autocmd, in the perl.vim file was only in effect when the file was a perl filetype anyway.
23:10  frogonwheels: harleypig:   you proably want   autocmd FileWritePre *  if &filtype=='perl' <bar>call TrimTrailingwhiltespace()<bar>endif
23:10  unkanon: frogonwheels: I'm trying recomp;iling with --enable-perlinterp first :)
23:10  graywh: harleypig, and it would affect non-perl buffers, too
23:11  frogonwheels: unkanon: you're much better off just installing the package.
23:11  ntiy: <root@karle:~> rm /home/eugene.dedits/.viminfo
23:11  ntiy: rm: cannot remove `/home/eugene.dedits/.viminfo': Permission denied
23:11  ntiy: <eugene.dedits@karle:~> rm ./.viminfo
23:11  ntiy: rm: cannot remove `./.viminfo': No such file or directory
23:11  DHulme: ntiy: try with rm -f
23:11  ntiy: the same: permission denied
23:12  DHulme: wow
23:12  DHulme: what did you do?
23:12  DHulme: could it have been caused by mounting the directory over NFS or something similar?
23:13  ntiy: yep. I think /home is mounted over NFS
23:13  ntiy: does that matter?
23:13  DHulme: you probably need to delete it from the machine it's hosted on
23:13  unkanon: frogonwheels: I just did sudo apt-get install vim-gnome, it installed, I still don 't have :perldo :(
23:13  harleypig: graywh: what I have now will affect non perl filestypes?
23:14  graywh: harleypig, it should
23:14  harleypig: frogonwheels: I'm curious, how is that different/better than autocmd FileType perl autocmd ... ?
23:14  harleypig: graywh: hmmm ... experimenting
23:14  DHulme: harleypig: the file is sourced when you set a file's filetype to Perl, but to make it only affect the Perl buffer, you need to make sure you only use commands that affect the current buffer
23:14  DHulme: but autocmd without the <buffer> option affects all buffers
23:15  ntiy: that worked. I logged to nfs server and deleted it. what could be the cause of this?
23:15  harleypig: graywh: it doesn't appear to be
23:15  DHulme: ntiy: well, with NFS all the machines need to have the same users
23:15  ntiy: they do...
23:16  DHulme: ntiy: with the same user IDs too
23:16  ntiy: ehmmm.... ok. thanks for help.
23:16  frogonwheels: harleypig:  the first means that as soon as you've loaded a perl file, then it will strip spaces from everything from then on
23:16  frogonwheels: unkanon: you should  :help has('perl')
23:17  DHulme: ntiy: so it could be something like doing 'sudo vim' from the server machine and the user id being unknown to the client machine
23:17  harleypig: DHulme: oic ... so in my perl.vim file I should have "autocmd <buffer> FileWritePre * :call ..." and that will only be effective in perl filetypes?
23:17  graywh: harleypig, right
23:18  ntiy: oh I see. that's possible, yes. I did sudo vim on the nfs machine recently
23:18  DHulme: harleypig: yes, and you need to set a special variable that tells Vim how to undo the effect of the ftplugin if the filetype is changed away from perl
23:18  ntiy: thanks
23:18  DHulme: ntiy: don't do sudo vim, use 'sudoedit' instead
23:18  unkanon: frogonwheels: no help for it, it says
23:18  frogonwheels: unkanon: I mean  :echo has('perl')
23:18  frogonwheels: sorry
23:18  harleypig: DHulme: ok, how do I do that? (:h keyword is fine)
23:18  DHulme: look at one of the built-in ftplugins
23:18  unkanon: frogonwheels: it stills gives me 0
23:19  frogonwheels: unkanon:   :ver
23:19  frogonwheels: ??
23:19  unkanon: frogonwheels: 7.3
23:19  harleypig: DHulme: oh ... the if exists("g:did_ftplugin") line?
23:19  frogonwheels: unkanon: ok. have you installed your own?
23:19  unkanon: frogonwheels: yes, compiled it Aug 15th
23:20  DHulme: harleypig: no, near the end you should see something like :let g:undo_ftplugin = 'set ai< cin<'
23:20  DHulme: only I can't remember the name of the variable offhand
23:20  unkanon: frogonwheels: well actually compiled a month ago
23:20  unkanon: frogonwheels: I confused the dates
23:20  frogonwheels: unkanon: Ok - well yeah - you'll need to recompile then *sigh*
23:20  unkanon: frogonwheels: at which point in an installation from source do I pass a +perl flag?
23:20  graywh: b:undo_ftplugin
23:21  graywh: DHulme, close
23:21  frogonwheels: unkanon: edit the config file iirc
23:21  frogonwheels: unkanon: or look at config --help
23:21  graywh: but it has to be buffer-local, not global
23:21  DHulme: graywh: oh, of course
23:21  unkanon: frogonwheels: I've alread tried recompiling passing --enable-perlinterp to ./configure, didn't work. now I want to try that +perl thingy
23:21  harleypig: DHulme: ok, I see it.  reading up on it now.
23:22  unkanon: frogonwheels: config --help doesn't work inside the bunzip'ed vim73 dir
23:22  tyebud: Hi vim
23:23  frogonwheels: unkanon:  in src  ./config --help   !!!
23:23  tyebud: Got a quick question:  Can I bind a series of commands to a key ie. :w :sh ./current_buffer
23:23  frogonwheels: jamessan: is there a vim 7.3 package yet?
23:23  unkanon: frogonwheels: trying now
23:24  graywh: frogonwheels, in unstable
23:24  strull_: tyebud: :he :bar
23:27  harleypig: DHulme: so, any setlocal commands and variables I used should be unset via "let b:undo_ftplugin="setlocal <op <op | unlet b:var b:var" ... but I don't see how I would turn off an autocmd
23:27  unkanon: frogonwheels: just recompiled using --enable-perlinterp=yes like the configure --help says to
23:27  unkanon: frogonwheels: doesnt work :(
23:27  unkanon: has perl = 0
23:28  graywh: harleypig, :h autocmd-remove
23:28  graywh: best to make a group for your ftplugin
23:28  graywh: an :augroup, that is
23:29  unkanon: frogonwheels: thanks for tryign to help though
23:29  harleypig: graywh: thanks, reading up on augroup now too
23:29  frogonwheels: unkanon: did you read the configure output - did it say it couldn't find the dev library for perl?
23:30  hendry: how do i run two commands on startup? vim +"set makeprg=make:set foo=bar"
23:31  frogonwheels: hendry:  iir  you can use  +  multiple times  or  use  |
23:31  unkanon: frogonwheels: checking --enable-perlinterp argument... yes
23:31  unkanon: checking for perl... /usr/bin/perl
23:31  strull_: hendry: or use one set with many options
23:31  graywh: hendry, you can combine :set's too
23:31  unkanon: frogonwheels: it finds it alright, I have perl 5.10.1
23:32  graywh: :set makeprg=make foo=bar
23:32  hendry: ah thanks guys
23:33  harleypig: graywh: so I create augroup mygroup ... augroup END then in the undo_ftplugin I can just use "augroup! mygroup" and all my autocmd's will be removed?  Cool
23:33  graywh: but now that i think about it...
23:33  graywh: it might remove the autocmds for the other buffers, too
23:34  harleypig: graywh: you mean any other open perl files?
23:34  graywh: harleypig, yeah
23:35  graywh: it might be better to use frogonwheels' suggestion
23:35  graywh: :au Event * if &ft == 'perl' | do something | endif
23:36  frogonwheels: harleypig: thats' not really any good. you're not considering different filetypes in different windows/buffers
23:40  hakunin: If I have my screen split like this |---|  how do I run :vsplit to get | |-|?
23:40  graywh: :topleft vs
23:41  frogonwheels: hakunin: or  :vs    then <c-w>J
23:41  harleypig: graywh, frogonwheels, DHulme: thanks for your help.  I see what I'm doing wrong, and why I'm getting some weird errors I didn't even realize were realted.
23:41  frogonwheels: err H
23:45  akahn: Is there a command to move to the position where the cursor was before I used I to insert something at the beginning of the line?
23:46  graywh: you can try ``
23:49 --- ChanServ sets modes [#vim +o tpope]
23:49 --- tpope sets modes [#vim -b *!*bug@*.wi.res.rr.com]
23:51  hakunin: graywh: thanks!
23:54  Buglouse: yayy
--- Log closed Wed Nov 24 00:00:02 2010
