--- Log opened Fri Nov 26 00:00:49 2010
01:44  jsz`: Hi ! I wonder if it is possible to use a egrep-like syntax in a sed substitution command. eg. syntax with egrep, echo '-42' | egrep -o '(\-|'')([0-9]*)' ; example with sed that doesn't work, echo 'ab42' | sed 's/^(ab|cd).*//' ; example with sed that works but with two sed's, echo 'ab42' | sed 's/^ab.*//;s/^cd.*//'
01:45  Riviera: What exactly do you refer to by "egrep-like syntax", the alternation operator "|", the missing backslash-escaping or both?
01:46  jsz`: The both, especially the operator "|"
01:46  Riviera: okay
01:46  Riviera: well, standard sed does not support that
01:46  Riviera: so you have to work-around it, for example like you did, with two s commands
01:47  Riviera: but many common sed implementations, like GNU sed (and I believe BSD sed, unsure though), actually offer the \| operator
01:47  Riviera: 4# sed 's/one\|two/three/' <<< one
01:47  shbot: Riviera: three
01:47  Riviera: 4# sed 's/one\|two/three/' <<< two
01:47  shbot: Riviera: three
01:48  jsz`: Oh, nice ! Thanks a lot :)
01:48  Riviera: In versions of sed that don't support \|, still the grouping would be done by \( and \), the backslashes belong to the syntax
01:48  Riviera: that's called "basic regular expressions" (posix term, BREs)
01:48  Riviera: but
01:48  Riviera: there is an option for GNU sed
01:49  Riviera: that even would get rid of these
01:49  Riviera: I believe that's -r
01:49  Riviera: let's try
01:49  Riviera: 4# sed 's/one|two/three/g' onetwo
01:49  shbot: Riviera: sed: can't read onetwo: No such file or directory
01:49  jsz`: (my version support \| by the way)
01:49  Riviera: err.
01:49  Riviera: 4# sed 's/one|two/three/g' <<< onetwo
01:49  shbot: Riviera: onetwo
01:49  Riviera: 4# sed -r 's/one|two/three/g' <<< onetwo
01:49  shbot: Riviera: threethree
01:49  Riviera: so, yes.
01:50  Riviera: To emulate these egrep-features (egrep uses "Extended Regular Expressions", EREs), use GNU sed with the -r option
01:50  Riviera: :)
01:51  jsz`: Works !
01:51  jsz`: Thanks Riviera ;)
01:52  Riviera: welcome :)
03:40 --- chrischambers_ is now known as chrischambers
--- Log closed Fri Nov 26 09:16:33 2010
--- Log opened Fri Nov 26 09:16:55 2010
09:16 --- Users 90 nicks [0 ops, 0 halfops, 0 voices, 90 normal]
09:18 --- Channel ##sed was synced in 117 seconds
14:35  Lantizia: I don't suppose theres a clever way of saying.... add BLAH after the line with MEOW but keep the indentation that line BLAH has
14:47  probonono: Lantizia, do you mean keep the indentation that line MEOW has?
14:47  Lantizia: yes sorry :)
14:52  probonono: Lantizia, something like:  sed '/MEOW/{h;s/\([[:blank:]]*\).*/\1BLAH/;x;G;}
14:53  Lantizia: probonono, mega crazy! does it work? :D
14:55  probonono: Lantizia, let's see:
14:55  probonono: 4# echo '   MEOW' | sed '/MEOW/{h;s/\([[:blank:]]*\).*/\1BLAH/;x;G;}'
14:55  shbot: probonono:    MEOW
14:55  shbot: probonono:    BLAH
14:55  Lantizia: 4# echo -e '\tMEOW' | sed '/MEOW/{h;s/\([[:blank:]]*\).*/\1BLAH/;x;G;}'
14:56  shbot: Lantizia: 	MEOW
14:56  shbot: Lantizia: 	BLAH
14:56  probonono: 4# echo '\t\tMEOW' | sed '/MEOW/{h;s/\([[:blank:]]*\).*/\1BLAH/;x;G;}'
14:56  shbot: probonono: \t\tMEOW
14:56  shbot: probonono: BLAH
14:56  probonono: 4# echo -e '\t\tMEOW' | sed '/MEOW/{h;s/\([[:blank:]]*\).*/\1BLAH/;x;G;}'
14:56  Lantizia: need the -e
14:56  shbot: probonono: 		MEOW
14:56  shbot: probonono: 		BLAH
14:57  Lantizia: can't really tell over irc if it's kept the tabs or not :S
14:57  Lantizia: lemme try it with a file
14:57  Lantizia: wow that's perfect
14:57  Lantizia: thanks
14:58  probonono: Welcome. Got to get one right every now and again, eh? :)
14:59  Lantizia: probonono, it'll be so handy for cleanly adding lines to config files
14:59  probonono: Excellent. Have fun with it.
15:00  Lantizia: probonono, I don't suppose theres a way of doing it that is simpler/shorter that I'd be able to understand in my lifetime? :D
15:02  probonono: Heh, it's pretty simple. You know about sed's "s" command, right? Just go read up on "h", "x" and "G" and it'll fall out, I'm sure.
15:09  Buba: how i can implement "uniq" with sed?
15:10  probonono: Buba, see:  http://sed.sourceforge.net/sed1line.txt
15:11  Buba: tnx
15:11  BlessJah: i'm putting \n character in the middle of line, how can i make sed to treat this line as a two separate lines after this action? (it's *.sed script, quite long script)
15:12  Riviera: BlessJah: well, you can't
15:12  Riviera: BlessJah: you cannot have sed "loop" over these lines as if they'd come from the input
15:12  Riviera: BlessJah: but, what exactly would you like to do?
15:13  BlessJah: Riviera: i want to make ascii table from html table, so i'm removing all \n characters (tr -d '\n') from file and piping it to sed
15:14  BlessJah: then i change <td> to | and <tr> to \n, i want to do some magic with those lines
15:14  Riviera: use "elinks -dump" :P
15:15  Riviera: well either treat the \n-separated parts of the lines separately or use the hold buffer
15:15  Riviera: like "store the whole line into the hold buffer, remove everything after the first \n, process that part,
15:15  Riviera: get the line back from the hold buffer,
15:15  Riviera: remove everything up to the first \n, store that in the hold buffer,
15:15  BlessJah: Riviera: bad idea, i have over 300 files stored locally with html tables
15:15  Riviera: and start again"
15:16  Riviera: BlessJah: which one, the elinks idea? :)
15:16  BlessJah: yes
15:16  Riviera: BlessJah: mh, why is elinks bad with 300 locally stored files?
15:16  Riviera: I mean, no offense, but processing html with sed is not a very good idea too :)
15:16  BlessJah: as i said, i want to make some magic with those lines, elinks cannot make this magic for me
15:16  Riviera: okay :)
15:16  Riviera: BlessJah: so, what do you think about that hold buiffer thing?
15:16  Riviera: buffer*
15:17  BlessJah: i dont know, i think faster and better would be piping it to another sed process
15:17  Riviera: that might be possible too, sure
15:17  Riviera: or just to use a scripting language
15:17  BlessJah: but i already have 3 sed's in row
15:18  Riviera: well.
15:18  Riviera: :)
15:18  Riviera: Then either do or don't do it 8)
15:18  BlessJah: iconv | sed -f pre.sed | tr -d '\n' | sed -f mid.sed | sed -f post.sed
15:18  Riviera: Some versions of sed, btw, have problems with data that is not \n-terminated.
15:19  BlessJah: my version works
15:19  Riviera: sure
15:19  Riviera: otherwise you wouldn't have continued to use it
15:19  Riviera: I just told you.
15:19  Riviera: So you know.
15:19  Riviera: I mean.
15:19  Riviera: What the fuck do you want :)
15:19  Riviera: I answer your question
15:19  Riviera: suddenly you say
15:19  Riviera: "no, I don't want an answer to my question, because maybe another sed would be better"
15:19  Riviera: then you say
15:19  Riviera: "but what the fuck, I already use too many invocations of sed."
15:20  BlessJah: nah, it's the way i think, i try to solve one problem in some pararel ways at the same time
15:20  Riviera: Well, fine, but I try to solve your problem too.
15:20  BlessJah: i just wanted to know if there is a better way than using another sed invocation
15:21  Riviera: But I think for that I'd need to know more about how you want to process the input.
15:21  Riviera: Yes, there might be a better way indeed, like for example not even removing the newlines. But I don't know :)
15:21  Riviera: Would you like to show what exactly you try to do?
15:22  Riviera: Like, representative input and desired output?
15:22  BlessJah: ok
15:23  Riviera: (if it's a lot, use a pastebin)
15:24  BlessJah: http://pastebin.com/h9ytvcKg
15:24  BlessJah: Riviera: first is ascii table, i want to get sth like that for whole week
15:24  BlessJah: Riviera: second part...
15:27  BlessJah: Riviera: http://pastebin.com/WniydTs4 with some html tags removed (pre.sed)
15:28  Riviera: BlessJah: well, since I don't see how the several fields in the ascii table come from the html,
15:29  Riviera: BlessJah: for example, there don't seem to be any numbers similar to "123", no "kp", could you tell me what exactly happens there?
15:29  Riviera: BlessJah: I guess <td class="nr">5</td>
15:29  Riviera: BlessJah: is that first number in each row
15:30  BlessJah: Riviera: yes i see the problem, gimme second or two
15:30  Riviera: sure
15:33  BlessJah: http://pastebin.com/QGKXhAVs
15:33  BlessJah: number, hour, two items
15:34  Riviera: Would all input look like that?
15:34  Riviera: Or are there other cases?
15:35  BlessJah: this part is already solved
15:35  Riviera: ah, okay
15:35  Riviera: Well, sorry. I will be away for about 10 minutes, maybe 15.
15:36  BlessJah: yep
15:36  BlessJah: Riviera: i'll prepare two most annoying cases
15:48  Riviera: BlessJah: am back; Let me try to create an example sed script for the second paste you showed, maybe that approach might help for the other cases too.
15:48  Riviera: Will need a few minutes, of course. :)
15:49  BlessJah: http://pastebin.com/gRdaEMux
15:49  BlessJah: Riviera: use this pastebin, i have already enough scripts
15:49  BlessJah: Riviera: http://blessjah.tk/oddzial.txt this is ouptut from my scripts (yeah i know, screwed first and second row)
15:49  Riviera: BlessJah: well, the main idea is to process the input line-wise
15:50  Riviera: BlessJah: that might ease the whole process
15:50  Riviera: BlessJah: lessening the amount of sed scripts and so.
15:50  Riviera: BlessJah: So I'd like to start from the html.
15:50  BlessJah: no, i'll use pipes
15:50  Riviera: well, okay :)
15:50  BlessJah: rewriting it from zero isn't good idea, you can spend whole day with it
15:51  Riviera: Who knows ..
15:53  BlessJah: i know
15:54  Riviera: I doubt that, because your approach is quite complicated IMHO, first to transform everything into one line, then dealing with that. But okay, I won't argue on that, let's try to do it the way you want.
15:55  BlessJah: Riviera: i transform each <tr> instance into \n, so next sed instance have one row in one line
15:55  Riviera: 4# sed 's/\(.\)[^[:blank:]]*[[:blank:]]*\([^[:blank:]]*\)[[:blank:]]*\([[:digit:]]*\)/\1\2\3 /g' <<< 'fr-3/4 #Fh 313ros-4/4 #Rh 515lat-1/2 pa 112ti-2/2 zm 208'
15:55  shbot: Riviera: f#Fh313 r#Rh515 lpa112 tzm208
15:55  BlessJah: Riviera: it's much easier than fighting with one row in several lines
15:55  Riviera: Sadly:
15:56  Riviera: 4# sed 's/\(.\)[^[:blank:]]*[[:blank:]]*\([^[:blank:]]*\)[[:blank:]]*\([[:digit:]]*\)/\1\2\3 /g' <<< 'fr-3/4 #Fh 313ros-4/4 #Rh 511&nbsp;'
15:56  shbot: Riviera: f#Fh313 r#Rh511 &
15:56  Riviera: The &nbsp; is annoying here.
15:56  BlessJah: yes
15:56  BlessJah: dont worry
15:56  BlessJah: i'll remove them at the end of script
15:56  Riviera: Okay.
15:56  BlessJah: look at http://blessjah.tk/oddzial.txt
15:57  BlessJah: &nbsp; will be removed at the end
15:57  Riviera: okay
15:58  BlessJah: hum... what does it mean [[:blank:]? i've always thought that it should be [:blank:]
15:58  Riviera: No, [:blank:] would mean any character out of :, b, l, a, n and k
15:59  BlessJah: so that's why it didn't work
16:01  Riviera: With that syntax, you could match strings like '3.1416" by [.[:digit:]]*
16:01  Riviera: Which would match digits and the dot.
16:02  BlessJah: yep
16:11  BlessJah: R/3
16:14  BlessJah: 7/7
16:15  BlessJah: Riviera: your's script is too hungry, eats 's' in 'mat ws 515'
16:16  BlessJah: and doesn't remove 1/2 in wf-1/2 #siwf-2/2 ksg
16:18  Riviera: Okay, let's see.
16:18  Riviera: Meanwhile, just FYI: http://pastebin.com/YCjhKPGH
16:20  BlessJah: some magic that i dont understand
16:20  BlessJah: but looks better than my scripts
16:20  Riviera: That's maybe a bit the point, I believe that approach might be easier.
16:20  BlessJah: yep much easier
16:21  Riviera: No idea how much sense it would make to try to use it, though.
16:21  Riviera: Want me to explain it so you could decide if using it could make sense?
16:21  BlessJah: but try to replace j.polski in second <td> to sth shorter, like po chem or anything you want
16:21  BlessJah: i have over 300 files with html tables, schedule for whole school
16:22  BlessJah: i want to transform it into ascii table and print
16:22  Riviera: IMHO you make your life unnecessarily hard by using sed for that.
16:23  Riviera: A normal scripting language like python, perl, whatever, maybe even just awk, might be so much simpler (and in the end more powerful).
16:23  Riviera: So, what do you propose:
16:23  Riviera: Trying to fix the "doesn't remove 1/2 in wf-1/2 #siwf-2/2 ksg" thing
16:23  Riviera: or explaining the script I just showed? Or something else?
16:23  BlessJah: you can explain me script you just showed
16:23  Riviera: Okay.
16:23  Riviera: Let's do that line by line:
16:24  BlessJah:  /<td class="nr">\([[:digit:]]\)<\/td>/!d
16:24  Riviera: /<td class="nr">\([[:digit:]]\)<\/td>/!d  --  this line just skips over every line until it finds one that matches that "<td class="nr" pattern
16:24  BlessJah: yes, you can skip to !d part
16:24  Riviera: !d means "if the pattern does not match, delete the line and process the next one"
16:25  Riviera: s//\1/
16:25  Riviera: this only will be executed when a line with that "nr" pattern was found,
16:25  Riviera: it changes the whole thing just to the number (7 in our case)
16:25  Riviera: (because when using s// the former regex will be used)
16:25  Riviera: clear so far?
16:25  BlessJah: hum... it remembers \([[:digit:]]\) from previous line???
16:25  Riviera: yes
16:26  BlessJah: huh... didnt know that
16:26  Riviera: // always is "last regex"
16:26  BlessJah: ok
16:26  Riviera: I could also just repeat that pattern, this way it's just shorter to type
16:26  Riviera: (and probably faster in execution)
16:26  Riviera: okay, next line:
16:26  Riviera: :a
16:26  Riviera: only a label to which we can jump
16:26  Riviera: $!N
16:26  Riviera: reads in the next line if we did not yet reach the end of input
16:26  BlessJah: wait, what does it mean
16:26  Riviera: the label thing?
16:26  BlessJah: yes
16:27  Riviera: sed has labels and jumps
16:27  Riviera: for example:
16:27  Riviera: sed -e :a -e ba
16:27  Riviera: is an infinite loop in sed
16:27  BlessJah: i see
16:27  Riviera: b for "branch", branch to label a in this case
16:27  Riviera: There are two jump commands in sed, b and t
16:27  BlessJah: sth like goto instruction
16:27  Riviera: yes, exactly like goto
16:27  Riviera: b is unconditional jump, will always jump
16:27  Riviera: can be used like /pattern/ba
16:28  BlessJah: sed is more powerfull than i even thought
16:28  Riviera: will jump if pattern matches
16:28  Riviera: the other goto command is t
16:28  Riviera: which jumps if the previous s/// command did some substition
16:28  Riviera: that's a bit tricky, because it remembers state, in some seds it has to be "nullified"
16:28  Riviera: like be ta; :a
16:28  BlessJah: on which line we're now?
16:28  Riviera: but ... let's not worry about that now.
16:28  BlessJah: yes
16:28  BlessJah: line 9?
16:28  Riviera: so, let's continue
16:28  Riviera: we cleared the :a
16:29  Riviera: now let's go to the $!N
16:29  BlessJah: kk
16:29  Riviera: that reads in the next line of input (if there is any)
16:29  BlessJah: ok, i see
16:29  Riviera: the $! is there because some seds have problems when N tells them to read the next line when there is no next line
16:29  Riviera: so that's just a precaution and can be ignored
16:29  Riviera: so, what do we now have in our input buffer?
16:29  BlessJah: ok, its clear to me now
16:29  Riviera: the number from the "nr" line
16:29  BlessJah: two lines
16:29  Riviera: and the next line of input,
16:30  Riviera: separated by \n
16:30  BlessJah: yes
16:30  Riviera: what's next
16:30  Riviera: /<\/tr>/bb
16:30  Riviera: that just checks if we read in a line of input that contains </tr>
16:30  Riviera: if yes, goto to label b
16:30  Riviera: next line:
16:30  Riviera: $!ba
16:30  Riviera: that jumps to label a again
16:30  BlessJah: it solves my problem with pipelining, and deleting '\n' characters to get everything in one line
16:30  Riviera: as long we did not reach the end of input ($!)
16:30  Riviera: yes
16:31  Riviera: that's what I meant before, that I think it might be easier to do that in sed
16:31  Riviera: not to remove everything with tr
16:31  Riviera: and then to have to deal with long lines
16:31  Riviera: and so.
16:31  Riviera: sooo..
16:31  Riviera: what does that mean so far:
16:31  Riviera: we read in all lines until we find either the end of file
16:31  Riviera: or a </tr>
16:31  BlessJah: read next line, until we get </tr>
16:31  Riviera: so, basically, the buffer looks like that:
16:32  Riviera: <number of the "nr" line>
16:32  Riviera: <newline character>
16:32  Riviera: <td ...> ... </td>
16:32  Riviera: <newline character>
16:32  Riviera: <td ...> ... </td>
16:32  Riviera: <newline character>
16:32  Riviera: and so on
16:32  Riviera: so, with that we reach the label
16:32  BlessJah: yep
16:32  Riviera: :b
16:32  Riviera: there now three commands are waiting:
16:32  Riviera: s/<[^>]*>//g
16:32  Riviera: that tries to remove all tags
16:32  BlessJah: remove all html tags
16:32  Riviera: exactly
16:32  Riviera: s/\n/ | /g
16:33  Riviera: that changes all the newline characters to " | "
16:33  Riviera: and
16:33  Riviera: finally
16:33  Riviera: s/[[:blank:]]*$//
16:33  Riviera: just removes the trailing space
16:33  Riviera: because we also changed the last \n (before the </tr>) to " | "
16:33  Riviera: while it should only be changed to " |"
16:33  Riviera: just cosmetics
16:33  Riviera: that's about it
16:33  BlessJah: ok
16:33  Riviera: Now ... the questions is if this script could be changed in ways that would be useful for you.
16:33  BlessJah: nah, it's so easy with jumps and labels
16:34  Riviera: :)
16:35  BlessJah: 9 lines, i had to use 30 and tr
16:35  BlessJah: brb
16:35  Riviera: ok
16:36  BlessJah: re
16:39  BlessJah: Riviera: doesnt work, returns only one row
16:39  BlessJah:  | wj 2I historia
16:39  BlessJah:  | fe 2E historia
16:39  BlessJah:  | ml 3N historia
16:41  Riviera: well, it was supposed to be an example for the example data, that's why I several times suggested that it has to be adapted for your other input :)
16:42  Riviera: that's also the reason why I thought explaining what it does might be helpful
16:42  Riviera: so you could see if it could work and how it might have to be changed to make it work :)
16:42  Riviera: because you know your input data better than I
16:42  BlessJah: ok, i'll try to do it
16:42  BlessJah: gtg, cya and thanks for help
16:43  Riviera: I'd try to help if I knew more
16:43  Riviera: good luck!
16:43  Riviera: :)
--- Log closed Sat Nov 27 00:05:28 2010
