--- Log opened Tue Jan 18 00:00:37 2011
--- Log closed Tue Jan 18 00:13:44 2011
--- Log opened Tue Jan 18 00:14:05 2011
00:14 --- Users 93 nicks [0 ops, 0 halfops, 0 voices, 93 normal]
00:15 --- Channel ##sed was synced in 110 seconds
--- Log closed Tue Jan 18 01:33:10 2011
--- Log opened Tue Jan 18 01:33:31 2011
01:33 --- Users 92 nicks [0 ops, 0 halfops, 0 voices, 92 normal]
01:35 --- Channel ##sed was synced in 108 seconds
--- Log closed Tue Jan 18 02:20:02 2011
--- Log opened Tue Jan 18 02:20:26 2011
02:20 --- Users 92 nicks [0 ops, 0 halfops, 0 voices, 92 normal]
02:22 --- Channel ##sed was synced in 105 seconds
--- Log closed Tue Jan 18 02:51:41 2011
--- Log opened Tue Jan 18 02:52:04 2011
02:52 --- Users 92 nicks [0 ops, 0 halfops, 0 voices, 92 normal]
02:53 --- Channel ##sed was synced in 105 seconds
03:43  pyoor: Not sure if this is a repost, I got disconnected. Can anyone tell me why this regex is greedy?  I'm using ssed with perl regex (-R): sed -R '/(?<!start)xref*?trailer/p'
03:44  pyoor: A sample of the file I'm trying to parse is here: http://pastebin.com/gM9UghUU
--- Log closed Tue Jan 18 04:12:07 2011
--- Log opened Tue Jan 18 04:12:31 2011
04:12 --- Users 92 nicks [0 ops, 0 halfops, 0 voices, 92 normal]
04:14 --- Channel ##sed was synced in 110 seconds
--- Log closed Tue Jan 18 04:37:43 2011
--- Log opened Tue Jan 18 04:38:06 2011
04:38 --- Users 93 nicks [0 ops, 0 halfops, 0 voices, 93 normal]
04:39 --- Channel ##sed was synced in 105 seconds
--- Log closed Tue Jan 18 05:05:17 2011
--- Log opened Tue Jan 18 05:05:38 2011
05:05 --- Users 93 nicks [0 ops, 0 halfops, 0 voices, 93 normal]
05:07 --- Channel ##sed was synced in 107 seconds
--- Log closed Tue Jan 18 05:34:51 2011
--- Log opened Tue Jan 18 05:35:13 2011
05:35 --- Users 93 nicks [0 ops, 0 halfops, 0 voices, 93 normal]
05:36 --- Channel ##sed was synced in 105 seconds
--- Log closed Tue Jan 18 06:53:13 2011
--- Log opened Tue Jan 18 06:53:32 2011
06:53 --- Users 91 nicks [0 ops, 0 halfops, 0 voices, 91 normal]
06:55 --- Channel ##sed was synced in 110 seconds
--- Log closed Tue Jan 18 07:19:45 2011
--- Log opened Tue Jan 18 07:20:05 2011
07:20 --- Users 90 nicks [0 ops, 0 halfops, 0 voices, 90 normal]
07:21 --- Channel ##sed was synced in 108 seconds
--- Log closed Tue Jan 18 09:02:36 2011
--- Log opened Tue Jan 18 10:14:49 2011
10:14 --- Users 92 nicks [0 ops, 0 halfops, 0 voices, 92 normal]
10:16 --- Channel ##sed was synced in 95 seconds
12:08  basti198551: hello sed gurus .. ne need help to escape a " --> i must replace/delete this: user_pref("browser.download
12:10  Bop: basti198551, /user_pref("browser.download/d
12:10  Bop: i think its this
12:11  Bop: hmm !d
12:15  basti198551: thanks for the tip but i think there is a problem with win* i remenber
12:17  vkues: " is not special ot sed, it might be special to the tool that sed is started with (the shell)
12:24  basti198551: Bop there wars a problem with sed the new release run wel
12:24  basti198551: well
13:35  basti198551: i have a 2nd question .. i run this command sed -n /user_pref(\"browser.download*/!p -i "prefs.js" thats run well but i get a file like sedFT51A2 .. every time i run the command
13:35  basti198551: (win xp)
13:38  vkues: sed -i normally uses a temporary file, I guess sedFT51A2 is that one and sed did not delete it for some reason.
13:38  vkues: Which version of sed do you use, by the way?
13:40  basti198551:  vkues i think also that this is a temp file version is 4.2.1
13:41  vkues: 4.2.1? then GNU sed it is
13:41  vkues: it might be a bug, but I don't know much about GNU sed, and even less about sed on Windows
13:45  basti198551: yes thats gnu
14:03  geirha: Are you running commands from bash or command.com?
14:26  basti198551: geirha cmd
14:43  geirha: Ah, cmd has some odd ways of using quotes
14:43  geirha: I'd install bash if I were you, and run from there instead.
14:44  elkng: I've a very long string "xxxx xxx <str word1> xxx xx <str word2> xxxx xxx <str word3> xxx xx <str word4> xxxx xxx <str word5> ..." how can I get all symbols just only between "<str " and ">" all those "word1 word2 ..." ?
--- Log opened Tue Jan 18 14:48:26 2011
14:48 --- Users 98 nicks [0 ops, 0 halfops, 0 voices, 98 normal]
14:48  waldner: not easily with sed
14:49  waldner: 4# sed 's/<str \([^ ]*\)/\x1\1\x2/g;s/^[^\x1]*\x1//;s/\x2[^\x2]*$//;s/\x2[^\x1]*\x1/\n/g' <<< 'xxxxx <str word1> xxxxx <str word2> xxxx'
14:49  shbot: waldner: word1>
14:49  shbot: waldner: word2>
14:49  waldner: 4# sed 's/<str \([^ ]*\)>/\x1\1\x2/g;s/^[^\x1]*\x1//;s/\x2[^\x2]*$//;s/\x2[^\x1]*\x1/\n/g' <<< 'xxxxx <str word1> xxxxx <str word2> xxxx'
14:49  shbot: waldner: word1
14:49  shbot: waldner: word2
14:49  waldner: and don't multipost
14:50 --- Channel ##sed was synced in 97 seconds
14:54  elkng: waldner: what the symbol after "sed 's/<str \([^"  <---   "\n" or " " ?
14:58  elkng: waldner: thanks
15:02 --- grrrrrr is now known as barbanegra
15:02  waldner: it's a space
16:03 --- chrischambers_ is now known as chrischambers
--- Log closed Tue Jan 18 17:15:31 2011
--- Log opened Tue Jan 18 17:15:42 2011
17:15 --- Users 94 nicks [0 ops, 0 halfops, 0 voices, 94 normal]
17:17 --- Channel ##sed was synced in 116 seconds
19:10 --- ghoti_ is now known as ghoti
20:47  pyoor_: Is there anyway to tell sed to ignore new lines and treat the entire file as a single line?  I'm trying to do a search and replace based on the instance number ('s/regex/replacement/1') and the regex matches on more than 1 line.
20:47  pyoor_: i'd like to replace all instances of "regex" incrementally throughout the file.
20:47  csabo: what if you combined everything into one line, then parsed it?
20:47  csabo: not physically of course
20:48  e36freak: # sed '/foo/s//bar/' <<<$'foo\nfoo\nfoo'
20:48  e36freak: 4# sed '/foo/s//bar/' <<<$'foo\nfoo\nfoo'
20:48  shbot: e36freak: bar
20:48  shbot: e36freak: bar
20:48  shbot: e36freak: bar
20:48  e36freak: bah
20:48  csabo: haha
20:48  pyoor_: I had considered it and will do it if I need.  I was curious if there was a way to do it in sed without
20:48  e36freak: 4# sed '0,/foo/s//bar/' <<<$'foo\nfoo\nfoo'
20:48  shbot: e36freak: bar
20:48  shbot: e36freak: foo
20:48  shbot: e36freak: foo
20:48  pyoor_: there may be binary data in the file that removing \n will break it
20:48  e36freak: pyoor_: ^
20:48  e36freak: (assuming GNU sed for 0)
20:49  pyoor_: hrmm let me give it a shot
20:51  csabo: e36freak:  is there a way to remove chars between a particular identifier?
20:52  e36freak: csabo: elaborate
20:53  csabo: e36freak: i've got a filename, that i want to truncate, i was able to get rid of everything on the filename i wanted with PE, however I'm still left with the directory structure of the file (eg: /dir1/dir2/filename)
20:54  csabo: i'm weary of removing x chars from the line incase the path ever changes
20:54  waldner: pyoor_: sed ':a;$|{N;ba;};s/foo/bar/4'
20:54  csabo: waldner:  was that off the top of your head?
20:54  waldner: it's a commn way of doing it
20:54  waldner: *common
20:54  pyoor_: e36freak: the first example didn't work.  trying waldner's alternative
20:55  pyoor_: sed: -e expression #1, char 5: Unknown command: `|'
20:55  e36freak: waldner: you just wanna keep "filename" ?
20:55  waldner: yes, should be !
20:55  waldner: typo
20:55  pyoor_: oh gotcha
20:56  waldner: that was for pyoor_ 's question, not csabo 's
20:56  pyoor_: sweet that works
20:56  pyoor_: thanks waldner
20:56  waldner: np
20:56  csabo: i know you can replace, with s/\/dir1\/dir2
20:56  waldner: for that, IIUC sed 's|.*/||'
20:56  steve___: csabo: I was saying that line should go in your for loop.
20:56  steve___: csabo: f="${f%.domain*}" echo -e "\t\t\t\t f=${f##*/}" >> "$prt_log"
20:57  waldner: but PE can do it too
20:57  waldner: yes
20:57  csabo: the domain is variable
20:57  e36freak: yeah, PE is best for that
20:57  e36freak: much faster
20:57  csabo: k
--- Log closed Tue Jan 18 21:21:56 2011
--- Log opened Tue Jan 18 21:22:19 2011
21:22 --- Users 96 nicks [0 ops, 0 halfops, 0 voices, 96 normal]
21:23  csabo: e36freak: the PE didnt work at all
21:23  csabo: computer caught fire even
21:24 --- Channel ##sed was synced in 116 seconds
21:24  vkues: but then it worked
21:24  csabo: yup
21:24  csabo: that bit of output worked, however it broke the rest of the loop :(
21:24  vkues: no one ever expected the rest of the loop to work :)
21:24  pyoor_: waldner: I had a question about an earlier sed solution you provided me with.  The following line works but throws an error when I wrap it with double-quotes (I need to use a variable in the replace): sed ':a;$!{N;ba;};s/[0-9]\{10\}\( [0-9]\{5\} n\)/$var\1/134'
21:25  pyoor_: Using double quotes throws - bash: !{N: event not found
21:25  vkues: pyoor_: set +H
21:26  steve___: csabo: what is the error?
21:26  vkues: pyoor_: alternatively, only wrap your variable in double-quotes
21:26  vkues: pyoor_: as in
21:26  vkues: pyoor_: 'alternatively, only wrap your '"$variable"' in double-quotes"
21:26  csabo: steve___:  i got a cannot open on each file within the dir, they arent there
21:26  vkues: pyoor_: sed ':a;$!{N;ba;};s/[0-9]\{10\}\( [0-9]\{5\} n\)/'"$var"'\1/134'
21:26  csabo: steve___:  i tihnk i see what he did wrong, im testing now
21:26  pyoor_: ahh thanks vkues.  I tried initially just wrapping it in " but I thought if I interjected a single-tick it'd break the syntax
21:26  pyoor_: thanks
21:27  vkues: well, single quotes and double-quotes do completely different things, don't expect changing them works without knowing what's going on :)
21:27  csabo: dammit
21:29  csabo: steve___:  either one or the other none of these actually work
21:29  csabo: steve___: his works fine in the sense that it removes all but hostname, but due to the semicolon, it broke the loop, and the rest of the text that gets echo'ed into that file never takes place
21:29  pyoor_: vkues: I knew I had to wrap it in double quotes to get the variable to expand but just didn't have the right syntax
21:30  csabo: steve___:  so i ended up with a list of hostnames.. i removed the ; and got the FULL filename again
21:30  csabo: but the rest of the data shows up properly in the file
21:30  vkues: pyoor_: no no
21:31  vkues: pyoor_: it's not a question of syntax, it's a question of understanding what's going on :)
21:31  pyoor_: and I've failed :)
21:32  vkues: but that's totally okay
21:32  vkues: !
21:32  vkues: :)
21:38  e36freak: csabo: can i see more of what you want to do?
21:42  waldner: pyoor_: sed ":a;\$!{N;ba;};s/[0-9]\\{10\\}\\( [0-9]\\{5\\} n\\)/$var\\1/134"
21:43  pyoor_: thanks waldner
21:43  waldner: you may also need to escape the exclamation mark
21:43  pyoor_: i tried that initially and it threw an error
21:43  pyoor_: 1 sec
21:43  e36freak: so many escapes
21:43  pyoor_: oh I see why now
21:44  pyoor_: i didn't notice you double escaped
21:44  vkues: $ echo "!"
21:44  vkues: bash: !: event not found
21:44  vkues: $ echo "\!"
21:44  vkues: \!
21:45  pyoor_: yeah I was just going to say: sed: -e expression #1, char 5: Unknown command: `\'
21:45  vkues: Hence "set +H" or single quotes.
21:45  pyoor_: when trying to escape !
21:45  waldner: disable history expansion
21:45  e36freak: histexpansion is for nubcakes
21:45  vkues: set +H disables history expansion
21:45  e36freak: that it does
21:46  e36freak: then just "set -o vi"
21:46  e36freak: and your life will be more betterer
21:53  csabo: e36freak:  got it
21:54  csabo: with yours and steves help of course
21:54  csabo: 	i="${f%%.*}" i="${i##*/}" ; echo -e "\t\t\t\t $i \n\n" >> "$prt_log"
21:54  e36freak: i would switch the order of PE, actually
21:54  csabo: no way
21:54  csabo: after all that
21:54  e36freak: do "${f##*/}" first
21:54  e36freak: won't make a differenc
21:54  csabo: uh huh
21:54  e36freak: the current way
21:54  csabo: thats like saying to the guy who cured cancer "do it again without x"
21:55  csabo: e36freak:  you're just out to get me
21:55  e36freak: if one of the dirs has a "." in the path
21:55  csabo: ah yeah
21:55  csabo: itll break
21:55  e36freak: like /dir1/dir.2/blah
21:55  e36freak: yaeh
21:55  e36freak: the other way, it will not
21:55 --- y3llow_ is now known as y3llow
--- Log closed Tue Jan 18 23:35:29 2011
--- Log opened Tue Jan 18 23:40:57 2011
23:40 --- Users 91 nicks [0 ops, 0 halfops, 0 voices, 91 normal]
23:42 --- Channel ##sed was synced in 111 seconds
--- Log closed Wed Jan 19 00:00:10 2011
