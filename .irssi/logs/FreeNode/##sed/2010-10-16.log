--- Log opened Sat Oct 16 11:43:50 2010
--- Log closed Sat Oct 16 11:48:51 2010
--- Log opened Sat Oct 16 11:49:13 2010
11:49 --- Users 92 nicks [0 ops, 0 halfops, 0 voices, 92 normal]
11:50 --- Channel ##sed was synced in 97 seconds
13:31  rafael: in this script:   sed -e :a -e 's/<[^>]*>//g;/</N;//ba'   what happens after the first semicolon?
13:32  waldner: if the pattern space matches /</, a new line of input is read, and the code jumps back to label a
13:33  rafael: so slash capital N makes the newline?
13:33  waldner: yes
13:34  rafael: thanks a lot!
13:34  waldner: it reads in a newline and appends it separated by \n
13:34  waldner: np
13:34  waldner: s/newline/new line/
13:34  rafael: thats clever.
13:34  waldner: I'd have written that /</{n;ba;}
13:35  waldner: clearer to me, but it's the same basically
13:35  waldner: er, /</{N;ba;}
13:35  rafael: yeah :)
13:35  waldner: it should also check that the current line is not the last on the input, some seds misbehave when N is used on the last line
13:36  waldner: so /</{$!{N;ba;}}
13:36  rafael: $! for last line?
13:37  waldner: though if it assumes well-formed markup, there will never be an open < alone on the next line after the paired ones have been removed
13:37  waldner: s/next/last/
13:37  waldner: yes, $! means "if not last line"
13:38  rafael: true,< alone shouldnt happen
13:38  waldner: not on the last line
13:38  rafael: no
13:38  rafael: thank you.
13:38  waldner: then you can avoid checking for $!
13:38  waldner: np
--- Log closed Sat Oct 16 23:58:41 2010
--- Log opened Sat Oct 16 23:59:04 2010
23:59 --- Users 92 nicks [0 ops, 0 halfops, 0 voices, 92 normal]
--- Log closed Sun Oct 17 00:00:34 2010
