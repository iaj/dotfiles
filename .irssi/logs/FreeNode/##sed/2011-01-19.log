--- Log opened Wed Jan 19 00:00:10 2011
--- Log closed Wed Jan 19 00:03:04 2011
--- Log opened Wed Jan 19 00:08:27 2011
00:08 --- Users 92 nicks [0 ops, 0 halfops, 0 voices, 92 normal]
00:10 --- Channel ##sed was synced in 108 seconds
--- Log closed Wed Jan 19 00:21:25 2011
--- Log opened Wed Jan 19 00:21:49 2011
00:21 --- Users 91 nicks [0 ops, 0 halfops, 0 voices, 91 normal]
00:23 --- Channel ##sed was synced in 111 seconds
--- Log closed Wed Jan 19 00:32:48 2011
--- Log opened Wed Jan 19 00:38:15 2011
00:38 --- Users 93 nicks [0 ops, 0 halfops, 0 voices, 93 normal]
00:39 --- Channel ##sed was synced in 109 seconds
--- Log opened Wed Jan 19 02:03:53 2011
02:03 --- Users 91 nicks [0 ops, 0 halfops, 0 voices, 91 normal]
02:05 --- Channel ##sed was synced in 106 seconds
--- Log closed Wed Jan 19 04:02:50 2011
--- Log opened Wed Jan 19 04:03:12 2011
04:03 --- Users 91 nicks [0 ops, 0 halfops, 0 voices, 91 normal]
04:04 --- Channel ##sed was synced in 111 seconds
06:01  e36freak: if you have two groupings, like \([^[:space:]]*\)[[:space:]]*\(.*\), would you be able to do a substitution just on the second grouping?
06:06  vkues: as in s/\([^[:space:]]*[[:space:]]*\).*/\1substitution/ you mean?
06:07  e36freak: well, i would just want to say, get rid of all of the "."s in the second grouping
06:07  e36freak: i guess i could just use a longer regex
06:07  e36freak: just curious
06:08  vkues: i don't yet fully understand the question
06:08  e36freak: nevermind
06:08  e36freak: it's easier with straight bash anyway
06:08  vkues: hm, okay .)
08:31  roland-: hello
08:31  roland-: I have an output, like this: xxx wwww, 64877373
08:32  roland-: how do I sed to get the output before the "," only ?
09:18  homie: sed -e '/.*\,/p' ?
12:05 --- bLuCiFeR is now known as blu
12:37  mcnster: hi.  i have c preprocessor multi line defines that i want to replace with new text... any ideas?
12:38  mcnster: say:  #define FOO bar \ baz \ barq where each \ is followed by a newline....
12:38  mcnster: s///g doesn't seem to match multi-lines.... mayday
12:39  geirha: And what do you want change do you want to do to that FOO ?
12:40  mcnster: geirha, i want to change the above to "#define FOO smurf" and delete the original and the following line-continuations
12:41  geirha: sed '/^#define FOO.*\\$/,/[^\]$/c
12:41  geirha: #define FOO smurf'
12:42  geirha: err a \ after that c
12:42  mcnster: trying...
12:44  mcnster: sed -i -e"\#define YY_CURRENT_BUFFER.*\\$/,/[^\]$/c\#define FOO smurf"
12:44  mcnster: like that?
12:45  geirha: No
12:45  geirha: 4# printf '%s\n' a '#define FOO bar\' 'baz' b | sed '/^#define FOO.*\\$/,/[^\]$/c\'$'\n''#define FOO smurf'
12:45  shbot: geirha: a
12:45  shbot: geirha: #define FOO smurf
12:45  shbot: geirha: b
12:46  geirha: With GNU sed, you can do /startpattern/,/endpattern/c replacement. But for portability, you need /startpattern/,/endpattern/c\<newline>replacement
12:49  waldner: wouldn't /begin/,/end/c something insert something for each line of the interval? (untested)
12:50  waldner: 4# printf 'begin\naaa\nend\n' | sed '/begin/,/end/c ZZZ'
12:50  shbot: waldner: ZZZ
12:50  waldner: ah, cool
12:51  waldner: and it's even documented to work that way
12:52  waldner: though the POSIX description isn't as clear
12:52  waldner: (not that I'm surprised)
12:54  waldner: 4# printf 'begin\naaa\nend\n' | sed '/begin/,/end/i ZZZ'
12:54  shbot: waldner: ZZZ
12:54  shbot: waldner: begin
12:54  shbot: waldner: etc... ( http://pastebin.com/nYB01KGd )
12:54  geirha: sed: command garbled: /begin/,/end/c ZZZ
12:54  geirha: (solaris sed)
12:55  waldner: yes, I know that the real syntax must have the backslash etc.
12:55  waldner: but shbot has gnu sed, so for testing it was ok
12:55  geirha: aye
12:56  mcnster: geirha, got it.  many thanks :)
14:15  tuxnani: hi there, i have this command sed -e 's/"~~</secondary>"/"</secondary>"/g' 35563_2418278_mp.xml , but it doesnt run properly, what all characters must have escape character \ before them?
14:38  waldner: either sed -e 's/"~~<\/secondary>"/"<\/secondary>"/g' or sed -e 's_"~~</secondary>"_"</secondary>"_g'
14:44  tuxnani: waldner, it doesnt work at all, it didnt change the file even a bit
14:45  waldner: that has absolutely nothing to do with sed
14:45  waldner: I just fixed the sed errors you had
14:50  tuxnani: ok
14:56  ramok: tuxnani: sed -i -e 's,"~~\(</secondary>"\),"\1,g'
14:56  tuxnani: ok
14:56  tuxnani: thanks
--- Log closed Wed Jan 19 14:59:34 2011
--- Log opened Wed Jan 19 15:02:26 2011
15:02 --- Users 96 nicks [0 ops, 0 halfops, 0 voices, 96 normal]
15:04 --- Channel ##sed was synced in 110 seconds
--- Log closed Wed Jan 19 15:09:12 2011
--- Log opened Wed Jan 19 15:48:24 2011
15:48 --- Users 95 nicks [0 ops, 0 halfops, 0 voices, 95 normal]
15:49 --- Channel ##sed was synced in 94 seconds
--- Log closed Thu Jan 20 08:34:25 2011
