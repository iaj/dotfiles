--- Log opened Tue Dec 21 00:00:01 2010
--- Day changed Tue Dec 21 2010
00:00  cthuluh: then on line 5 do 's/\r\r/\r/g'
00:00  cthuluh: (the g flag is important)
00:00  pyoor: I can't understand for the life of me why that's working now
00:01  pyoor: cthuluh: What if I did want to remove the \n at the end?
00:01  pyoor: remove ba?
00:01  cthuluh: nope
00:01  cthuluh: you can't. sed automatically prints a newline
00:01  pyoor: ahh I see
00:02  pyoor: can I not do -i in this situation?  When I check it with hexdump it doesn't work.
00:03  cthuluh: so you want to take a file in dos formatand put it in mac format, right?
00:03  pyoor: but cat file | sed ... |hexdump -C works
00:03  pyoor: cthuluh: no, I'm trying to normalize the whitespace being used in a pdf file
00:03  pyoor: in pdf "         " is the same as " " and \r\r\r\r is the same as \r
00:03  cthuluh: oh...
00:03  pyoor: yeah kind of silly i know :)
00:04  cthuluh: why three sed invocations?
00:04  cthuluh: one would be enough
00:06  cthuluh: sed -e 'foo' -e 'bar' -e 'baz' file
00:07  pyoor: cthuluh: do I need to loop through the \r\r/\r to make sure it converts all \r\r's to a single \r
00:07  pyoor: I'm still seeing consecutive \r's
00:07  pyoor: Using: cat 1.pdf | sed -e ':a; $!{ N; }; s/\n/\r/g' -e 's/\r\r/\r/g' |hexdump -C |grep --color=auto 0d
00:08  cthuluh: sed 's/\r\{1,\}/\r/g'
00:09  cthuluh: or, if your sed understands \?, sed 's/\r\{1,\}/\r/g'
00:09  cthuluh: err
00:10  cthuluh: sed 's/\r\?/\r/g'
00:10  pyoor: the first example you gave me works perfectly
00:10  pyoor: should I use "sed 's/\r\?/\r/g'"
00:11  pyoor: I take that back.  Using this fails: cat 1.pdf | sed -e '/stream/,/endstream/b' -e ':a; $!{ N; }; s/\n/\r/g' -e 's/\r\?/\r/g' |hexdump -C |grep --color=auto 0d
00:11  pyoor: you probably don't need to see the rest of the |'s
00:11  cthuluh: well. \? is rather non portable. \r is probably a bit more commonly recognized
00:11  cthuluh: pyoor: also, sed takes file names as arguments. you don't need the cat
00:12  pyoor: right, dunno what I was thinking.
00:13  pyoor: http://pastebin.com/NFaKd4Ut
00:14  cthuluh: why  did you remove the 'b a;' part?
00:15  pyoor: oh, I didn't realize I did
00:15  pyoor: up arrow fail
00:15  cthuluh: :)
00:15  pyoor: still repeating \r\r's
00:15  cthuluh: argh
00:16  cthuluh: I'm really, really sorry for saying so much crap :P
00:16  cthuluh: it's \+, not \?
00:16  pyoor: haha hey no worries.  you've helped me more times than I can count
00:16  cthuluh: I'm not used to \+ and \? in sed 8)
00:17  pyoor: still repeating \r's :(
00:18  cthuluh: but not when you're using \{1,\} ?
00:19  pyoor: no, always.
00:20  pyoor: I take that back.
00:20  cthuluh: 8)
00:20  pyoor: if i cat 1.pdf | sed 's/\r\{1,\}/\r/g' by itself it works fine.  It breaks when I try to leak them together
00:21  cthuluh: to leak?
00:21  pyoor: lol
00:21  pyoor:  /leak/link/
00:23  pyoor: damn and I noticed too that when I pass it -e '/stream/,/endstream/b' it also fails.
--- Log closed Tue Dec 21 09:20:17 2010
--- Log opened Tue Dec 21 09:25:41 2010
09:25 --- Users 90 nicks [0 ops, 0 halfops, 0 voices, 90 normal]
09:27 --- Channel ##sed was synced in 105 seconds
--- Log closed Tue Dec 21 12:10:49 2010
--- Log opened Tue Dec 21 12:11:12 2010
12:11 --- Users 91 nicks [0 ops, 0 halfops, 0 voices, 91 normal]
12:12 --- Channel ##sed was synced in 105 seconds
--- Log closed Tue Dec 21 12:43:37 2010
--- Log opened Tue Dec 21 12:45:00 2010
12:45 --- Users 92 nicks [0 ops, 0 halfops, 0 voices, 92 normal]
12:50 --- Channel ##sed was synced in 342 seconds
14:00  hemanth: i have CSV file, trying to convert it into space separated, with just start and end "
14:16  waldner: example?
14:30  hemanth: waldner, hey, you had helped me few days back to make a new line separated file to a CSV, now made that to a space separated file, again feeling CSV is better, gosh, me having two files on data file and the other is a keyword file, need to filter data to extract the keywords...phew
14:41  waldner: sample input, and expected output
14:43  hemanth: waldner, file1 "Mary had a little lamb", file2 'little','big','medium','lamb','cat','dog' ; expected in file3 is lamb and little
14:43  hemanth: :)
14:49  hemanth: waldner, much of a grep job ?
14:50 * hemanth takes leave ...
--- Log closed Tue Dec 21 15:40:20 2010
--- Log opened Tue Dec 21 15:40:40 2010
15:40 --- Users 92 nicks [0 ops, 0 halfops, 0 voices, 92 normal]
15:42 --- Channel ##sed was synced in 97 seconds
20:18  dentifrice: hey there, I have a list of items separated by spaces that looks like that "jn-whatever jn-foobar jn-qwerty"
20:19  dentifrice: I would like sed to strip the 'jn-' part and use the word that's right afterwars to create an email address,
20:19  dentifrice: so I've been using sed -e 's/jn-\(.*\)/\1@domain.tld/g'
20:20  dentifrice: unfortunately, .* is too greedy, and so the change applies to the last item only
20:20  dentifrice: how can I tell sed to replace each occurence on the whole line, separated by spaces?
20:25  waldner: use [^ ]* instead of .*
20:27  dentifrice: waldner: thanks, does [^ ] mean 'next word' ?
20:27  waldner: no, it means "not space"
20:28  dentifrice: waldner: right, makes sense
20:28  waldner: as in [^abc] etc.
20:30  dentifrice: waldner: thanks, that did the trick!
20:33  dentifrice: waldner: 's/jn-\([^ ]*\)/\1@domain.tld/g'
20:34  dentifrice: waldner: so basically, \([^ ]*\) means : put in a register everything that does not have a space?
--- Log closed Tue Dec 21 20:40:05 2010
--- Log opened Tue Dec 21 20:40:31 2010
20:40 --- Users 91 nicks [0 ops, 0 halfops, 0 voices, 91 normal]
20:40  dentifrice: so
20:40  dentifrice: [ ] means everything ?
20:40  dentifrice: and '^ ' "but space" ?
20:41  waldner: have you ever used [abc] or [0-9] for example?
20:41  dentifrice: yes
20:41  waldner: ok, so you know that [^0-9] negates the 0-9 interval right?
20:42  dentifrice: I think of [] as an array
20:42 --- Channel ##sed was synced in 102 seconds
20:42  dentifrice: well, now I do :)
20:42  waldner: no, it represents a set of characters
20:42  waldner: so [abc] matches either a, b or c
20:42  waldner: and[^abc] matches everything that's not a, b or c
20:42  dentifrice: yeah, that I know (sorry array wasn't the right word)
20:42  waldner: in the same way, [ ] matches a space
20:43  waldner: and [^ ] matches a "non-space"
20:43  dentifrice: oh, ok I think I get the logic
20:43  dentifrice: adding the * just repeats the 'non-space' rule until a space is encountered
20:44  waldner: yes
20:44  waldner: like saying .* or a*
20:44  dentifrice: thanks for explaining that to my bonehead :)
20:44  waldner: the * means "zero or more of what's before"
20:45  waldner: (the rhyme is accidental)
20:45  dentifrice: pleasant nonetheless =)
--- Log closed Tue Dec 21 20:59:22 2010
--- Log opened Tue Dec 21 21:14:50 2010
21:14 --- Users 91 nicks [0 ops, 0 halfops, 0 voices, 91 normal]
21:16 --- Channel ##sed was synced in 96 seconds
--- Log closed Tue Dec 21 21:40:45 2010
--- Log opened Tue Dec 21 21:46:12 2010
21:46 --- Users 90 nicks [0 ops, 0 halfops, 0 voices, 90 normal]
21:46 --- Server: [gibson.freenode.net] [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
21:47 --- Channel ##sed was synced in 98 seconds
--- Log closed Tue Dec 21 22:41:38 2010
--- Log opened Tue Dec 21 22:47:13 2010
22:47 --- Users 93 nicks [0 ops, 0 halfops, 0 voices, 93 normal]
22:48 --- Channel ##sed was synced in 102 seconds
--- Log closed Wed Dec 22 08:13:10 2010
