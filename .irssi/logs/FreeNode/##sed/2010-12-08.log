--- Log opened Wed Dec 08 00:00:16 2010
--- Day changed Wed Dec 08 2010
00:00  Riviera: May I please
00:00  Riviera: ask what you are doing there?
00:00  Riviera: :)
00:00  tm512: cant i simulate block comments by putting all the stuff i want excluded in a "while false; do ......... ; done"?
00:00  tm512: irc bot, in bash :)
00:00  Riviera: tm512: but
00:01  Riviera: tm512: well.
00:01  Riviera: tm512: :)
00:01  Riviera: tm512: no, you should not do this, doesn't your editor have features for commenting parts of your code? :)
00:02  tm512: im using nano
00:02  Riviera: like a boss
00:02  Riviera: :)
00:02  tm512: will the "while false" thing work if i plan on just keeping around the old code for reference?
00:02  tm512: and deleting it later?
00:03  Riviera: depends
00:03  Riviera: the shell still parses it
00:03  tm512: or if false; then ....; fi
00:03  Riviera: same
00:03  Riviera: you cannot put arbitrary text in the then part
00:03  tm512: but its just stuff i want to prevent from running
00:03  tm512: but i dont feel like manually commenting it
00:03  guther: vim
00:04  Riviera: consider using a better editor
00:04  tm512: ugh vim
00:04  tm512: nonononono
00:04  Riviera: it's not the only choice
00:04  Riviera: :)
00:04  tm512: inb4 emacs
00:05  Riviera: consider writing your own text editor instead of an irc client then. :)
00:05  Riviera: also
00:05  Riviera: you know
00:05  Riviera: use nano.
00:05  Riviera: and manually comment.
00:05  Riviera: If you go for the task of writing an IRC bot in bash,
00:05  Riviera: you ask for pain.
00:05  Riviera: Don't run away from the pain now.
00:05  tm512: haha
00:08  tm512: manually commented :P
00:08  tm512: here's what I have so far, for what its worth
00:08  tm512: http://bitbucket.org/tm512/bashboat/overview
00:08  tm512: made some changes since but nothing huge
00:16  tm512: anyway, what easy to use editors are out there that are better than nano?
00:16  tm512: vi(m) is out of the question
00:17  Riviera: Why, by the way?
00:17  Riviera: or well
00:17  Riviera: rather
00:17  Riviera: Why, if I may ask? :)
00:18  tm512: i dont feel comfortable with the way to navigate it
00:18  tm512: the whole command mode/input mode
00:18  tm512: all I know is ":q!" for if i accidentally open it
00:18  Riviera: :)
00:18  jsz`: haha
00:19  jsz`: vim is the best :)
00:20  tm512: for some, yes
00:21  Riviera: well i don't know of any editors
00:22  Riviera: only about emacs and vim
00:22  tm512: is emacs hard to use?
00:22  Riviera: yes
00:22  Riviera: or well
00:22  Riviera: let's say
00:22  Riviera: as vim, emacs is easy to use, but it requires learning
00:25  tm512: heh
00:25  Riviera: they are not so much optimized as other software
00:25  Riviera: like MS Word is optimized for being intuitively used
00:26  Riviera: or at least, it once was
00:26  Riviera: or at least again, it once was tried to .. :)
00:26  tm512: MS word 5.1 for the mac was the greatest
00:26  tm512: i still have it on an old Mac Plus
00:26  tm512: :>
00:27  jsz`: tm512, maybe watch this http://youtu.be/71YTkxUNwmg ; easier to memorize
00:28  tm512: lol, WeeChat
00:28  tm512: so grep -q "^:.*!.* PRIVMSG #.* :${PREFX}.*" <<< "$1" # generic catch-all for any channel privmsg
00:28  tm512: doesnt seem to be working :/
00:29  tm512: its supposed to grep that from a raw irc line
00:29  tm512: and do:
00:29  tm512: echo "`cut -d : -f 2 <<< $1 | sed -e 's/[:!]/ /g' -e 's/  / /g' -e 's/^ //g' -e 's/ PRIVMSG//'` `cut -d : -f 3 <<< $1`"
00:29  jsz`: use $(...) instead of `...`
00:29  tm512: where at?
00:30  jsz`: in the line you just pasted, and in your bot.sh
00:31  tm512: $(grep -q "^:.*!.* PRIVMSG #.* :${PREFX}.*" <<< "$1") ???
00:31  jsz`: no
00:31  jsz`: in the second beginning with echo
00:32  jsz`: "The backquote (`) is used in the old-style command substitution, e.g. foo=`command`. This syntax is deprecated in favor of foo=$(command). Backslash handling inside $() is less surprising, and $() is easier to nest. See http://mywiki.wooledge.org/BashFAQ/082"
00:32  tm512: echo "$(cut -d : -f 2 <<< $1 | sed -e 's/[:!]/ /g' -e 's/  / /g' -e 's/^ //g' -e 's/ PRIVMSG//') $(cut -d : -f 3 <<< $1)"
00:33  tm512: ?
00:34  jsz`: yes
00:34  tm512: still doesnt work
00:34  jsz`: and put quotes on $1
00:35  jsz`: I told that for the syntax
00:36  jsz`: I don't know what you really want to do with your cut and sed... Maybe you can paste an example line?
00:36  tm512: turns out the "grep" doesnt even catch
00:37  tm512: anyway, the cut and sed it supposed to turn:
00:37  cthuluh: this is rather a general shell problem, don't you agree, tm512 ? :)
00:37  tm512: :tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs :fdgufidhguidfhguihsdfigudhfiugdhs
00:37  tm512: to
00:37  tm512: :tm512 tm512@lsn-4p97t6.fios.verizon.net #seraphimlabs fdgufidhguidfhguihsdfigudhfiugdhs
00:37  cthuluh: not really a sed problem, I mean
00:37  tm512: without the first :
00:37  jsz`: well
00:38  jsz`: s/://g;s/!/ /;s/ PRIVMSG//
00:39  tm512: ok, that looks simpler :P
00:39  jsz`: 4# sed 's/://g;s/!/ /;s/ PRIVMSG//' <<< ":tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs :fdgufidhguidfhguihsdfigudhfiugdhs"
00:39  shbot: jsz`: tm512 tm512@lsn-4p97t6.fios.verizon.net #seraphimlabs fdgufidhguidfhguihsdfigudhfiugdhs
00:39  tm512: but still, the initial grep isnt working
00:40  tm512: 4# grep "^:.*!.* PRIVMSG #.* :${PREFX}.*" <<< ":tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs :fdgufidhguidfhguihsdfigudhfiugdhs"
00:40  shbot: tm512: :tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs :fdgufidhguidfhguihsdfigudhfiugdhs
00:40  tm512: hmm, so why isnt it triggering for me
00:41  tm512: oh wait
00:41  tm512: haha, i think i got it
00:41  jsz`: it returns the entire string because your grep isn't working... PREFIX is not declared there...
00:42  jsz`: PREFX*
00:48  tm512: now its working
00:48  tm512: except for one part
00:48  tm512: s/  / /g isnt working
00:48  tm512: i presume that is unneeded though..?
00:49  tm512: since whitespace doesnt matter for arguments to a function
00:49  jsz`: why this?
00:49  tm512: *in between arguments
00:49  tm512: privmsg recieved
00:49  tm512: tm512 tm512@lsn-4p97t6.fios.verizon.net #seraphimlabs  ok
00:49  tm512: echo "$(cut -d : -f 2 <<< $1 | sed 's/://g;s/!/ /;s/ PRIVMSG//;s/  / /') $(cut -d : -f 3 <<< $1)"
00:51  jsz`: to catch the "ok" ?
00:51  tm512: it appears as though the last s/  / / is not doing anything
00:51  tm512: since theres 2 spaces before it
00:53  jsz`: echo "$(sed 's/://g;s/!/ /;s/\sPRIVMSG//;s/\s\{2\}/ /g' < <(cut -d: -f2 <<< "$1")) $(cut -d: -f3 <<< "$1")"
00:55  tm512: trying to actually read that haha
00:57  tm512: but what you did also prints out two spaces :)
00:58  jsz`: it prints what?
00:58  tm512: same thing
00:58  tm512: tm512 tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs  ok
01:00  jsz`: weird
01:00  tm512: however, since that string is sent as arguments to a function, the extra space wont be a source of any problems.. right?
01:00  tm512: i mean:
01:00  jsz`: look
01:00  tm512: echo                   "lol"
01:00  jsz`: 4# sed 's/://g;s/!/ /;s/\sPRIVMSG//;s/\s\{2\}/ /g' <<<"tm512 tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs  ok"
01:00  shbot: jsz`: tm512 tm512@lsn-4p97t6.fios.verizon.net #seraphimlabs ok
01:00  jsz`: no 2 spaces
01:01  tm512: the "tm512 tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs  ok" is the result of the sed
01:01  tm512: the original line is:
01:01  tm512: :tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs :ok
01:01  jsz`: oh !
01:01  tm512: lol miscommunication
01:02  tm512: so just add s/ :/ / as the first command in the sed?
01:02  jsz`: echo "$(sed 's/:\|\s://g;s/!/ /;s/\sPRIVMSG//;s/\s\{2\}/ /g' < <(cut -d: -f2 <<< "$1")) $(cut -d: -f3 <<< "$1")"
01:02  jsz`: it should works
01:03  jsz`: hmm wait
01:03  jsz`: echo "$(sed 's/:\|\s://g;s/!/ /;s/\sPRIVMSG//' < <(cut -d: -f2 <<< "$1")) $(cut -d: -f3 <<< "$1")"
01:03  jsz`: this
01:03  tm512: alright
01:04  jsz`: hm
01:04  jsz`: it doesn't work, right?
01:05  tm512: two spaces still
01:05  tm512: anyway
01:05  jsz`: i see
01:05  tm512: disregard, two spaces will be ignored by the parser, since its being sent as a set of arge
01:06  tm512: get_chanprivmsg "tm512 tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs  alright"
01:06  tm512: well, it'll take that as one argument huh
01:06  tm512: damn it
01:06  jsz`: or use awk
01:07  tm512: never used awk
01:07  jsz`: 4# awk '{print $5}' <<< "tm512 tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs  alright"
01:07  shbot: jsz`: alright
01:08  tm512: hmm
01:08  tm512: looks simple enough for this use
01:09  tm512: i think, anyway
01:11  jsz`: well
01:11  jsz`: tm512, this works: sed 's/^.//;s/\s:/ /;s/\sPRIVMSG//'
01:12  tm512: i think I already got it
01:12  tm512: what is the \s though
01:12  jsz`: space
01:12  tm512: any number of spaces?
01:12  jsz`: one
01:12  tm512: ok
01:13  jsz`: \s\{2\} for two, etc
01:13  jsz`: does it work with the last sed?
01:13  tm512: testing it
01:15  tm512: no, your latest did not work:
01:15  tm512: m512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs  test AGAIN
01:15  jsz`: with this line : :tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs :ok
01:16  jsz`: 4# sed 's/^.//;s/\s:/ /;s/\sPRIVMSG//' <<< ":tm5124p97t6.fios.verizon.net PRIVMSG #seraphimlabs :ok"
01:16  shbot: jsz`: tm5124p97t6.fios.verizon.net #seraphimlabs ok
01:16  tm512: still not what I want
01:18  jsz`: haha
01:18  jsz`: I'm sleepy, sorry I took the wrong line
01:19  jsz`: 4# sed 's/^.//;s/\s:/ /;s/\sPRIVMSG//' <<< ':tm5124p97t6.fios.verizon.net PRIVMSG #seraphimlabs :fdgufidhguidfhguihsdfigudhfiugdhs'
01:19  shbot: jsz`: tm5124p97t6.fios.verizon.net #seraphimlabs fdgufidhguidfhguihsdfigudhfiugdhs
01:19  jsz`: damn
01:19  tm512: I got it to:
01:19  tm512: tm512 tm512@lsn-4p97t6.fios.verizon.net #seraphimlabs  still not what I want?
01:20  tm512: now, I just need to split that up and send each individual token to a function
01:20  tm512: which, as was said, awk can do
01:21  jsz`: got it
01:21  jsz`: 4# sed 's/^.//;s/!/ /;s/\s:/ /;s/\sPIVMSG//' <<< ':tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs :fdgufidhguidfhguihsdfigudhfiugdhs'
01:21  shbot: jsz`: tm512 tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs fdgufidhguidfhguihsdfigudhfiugdhs
01:21  jsz`: finally took the right line
01:21  jsz`: hehe
01:22  tm512: change "PIV" to "PRIV"
01:22  jsz`: you can use red
01:22  jsz`: read*
01:22  tm512: how
01:24  jsz`: hmm
01:24  jsz`: 4# read a b c d e < <(sed 's/^.//;s/!/ /;s/\s:/ /;s/\sPIVMSG//' <<< ':tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs :fdgufidhguidfhguihsdfigudhfiugdhs'); printf '[%s] [%s] [%s] [%s] [%s]' "$a" "$b" "$c" "$d" "$e"
01:24  shbot: jsz`: [tm512] [tm512@lsn-4p97t6.fios.verizon.net] [PRIVMSG] [#seraphimlabs] [fdgufidhguidfhguihsdfigudhfiugdhs]
01:25  jsz`: see?
01:26  tm512: so read a b c d <<< "$msg"; chanprivmsg "$a" "$b" "$c" "$d"
01:26  tm512: i set $msg to contain the sed output
01:26  tm512: for now anyway
01:28  tm512: ooooh wait a sec, that sed line still doesnt work
01:28  tm512: and I just realized
01:29  tm512: this isnt GNU sed afaik
01:29  tm512: im on FreeBSD
01:29  jsz`: huh
01:29  jsz`: replace \s by space
01:30  tm512: k
01:31  tm512: 4# read a b <<< "lol1 lol2 lol3 lol4"; echo "A: $a B: $b"
01:31  shbot: tm512: A: lol1 B: lol2 lol3 lol4
01:31  tm512: alright, as expected
01:32  tm512: also, still two spaces :/
01:32  jsz`: 4# read a b < <(echo "lol1 lol2 lol3 lol4"); printf '%s %s' "$a" "$b"
01:32  shbot: jsz`: lol1 lol2 lol3 lol4
01:33  jsz`: huh i fail
01:33  jsz`: 4# read a b <<< "lol1 lol2 lol3 lol4"); printf '%s %s' "$a" "$b"
01:33  shbot: jsz`: bash4: syntax error near unexpected token `)'
01:33  jsz`: 4# read a b <<< "lol1 lol2 lol3 lol4"; printf '%s %s' "$a" "$b"
01:33  shbot: jsz`: lol1 lol2 lol3 lol4
01:33  jsz`: still
--- Log closed Wed Dec 08 01:48:25 2010
--- Log opened Wed Dec 08 02:00:04 2010
02:00 --- Users 94 nicks [0 ops, 0 halfops, 0 voices, 94 normal]
02:00  jsz`: 4# foo() { echo "$1"; }; foo '              bar'
02:00  shbot: jsz`:               bar
02:00  tm512: that's beside the point now
02:00  tm512: *now* i need to make it so that the message sent can have : in it
02:00  jsz`: you didn't need to remove the spaces, i think
02:00  tm512: like what Im saying right:now
02:00  tm512: needs to be sent to the function as-is
02:00  tm512: and I have to go
02:01  tm512: i'll be back in around 20 min
02:01  tm512: basically (straight from log):
02:01  tm512: ---> :tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs :fuck:shit:up
02:01  tm512: tm512 tm512@lsn-4p97t6.fios.verizon.net #seraphimlabs fuck
02:01  tm512: not good
02:01  tm512: how to fix?
02:02 --- Channel ##sed was synced in 148 seconds
02:07  jsz`: paste your sed
02:08  jsz`: because I'm a little lost :)
--- Log closed Wed Dec 08 02:26:18 2010
--- Log opened Wed Dec 08 02:26:43 2010
02:26 --- Users 94 nicks [0 ops, 0 halfops, 0 voices, 94 normal]
02:26 --- Server: [niven.freenode.net] [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
02:29 --- Channel ##sed was synced in 149 seconds
02:30  tm512: back
02:32  tm512: jsz`: look in the irc_parse function
02:32  tm512: https://bitbucket.org/tm512/bashboat/src/4ceac6ff83c6/bot.sh
02:35  jsz`: let me check that :)
02:37  jsz`: 4# sed 's/://;s/!/ /g;s/ :/ /;s/ PRIVMSG//' <<< ':tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs  :he:he'
02:37  shbot: jsz`: tm512 tm512@lsn-4p97t6.fios.verizon.net #seraphimlabs  he:he
02:37  jsz`: 4# sed 's/://;s/!/ /g;s/ :/ /;s/ PRIVMSG//' <<< ':tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs :he:he'
02:37  shbot: jsz`: tm512 tm512@lsn-4p97t6.fios.verizon.net #seraphimlabs he:he
02:38  jsz`: like that?
02:40  tm512: yeah
02:40  tm512: but cut removes it
02:40  tm512: so where field 3 is just "he"
02:40  jsz`: f3,4
02:41  tm512: I want field 3 and every subsequent field
02:41  jsz`: hmm
02:41  tm512: inluding the delimiter
02:42  tm512: so typing :) to irc will send :) to the function's 4th argument
02:42  tm512: i guess "cut" isnt for that
02:43  jsz`: you guess right
02:44  jsz`: hmm
02:44  jsz`: need a regex
02:45  tm512: need to remove everything before the second :
02:45  tm512: :tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs  :he:he
02:45  tm512: turns into
02:45  tm512: he:he
02:45  jsz`: 4# sed 's/.*#.* \(.*\)/\1/' <<< ':tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs :he:he'
02:45  shbot: jsz`: :he:he
02:46  jsz`: 4# sed 's/.*#.* \(.*\)/\1/' <<< ':tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs he:he'
02:46  shbot: jsz`: he:he
02:46  tm512: the second one would not happen
02:47  tm512: the first one, but without the first :
02:47  tm512: pipe it and s/^:// ?
02:48  jsz`: first part:
02:48  jsz`: sed 's/://;s/!/ /g;s/ :/ /;s/ PRIVMSG//' <<< ':tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs :he:he'
02:48  tm512: not ever going to run
02:48  tm512: i never put that in the source :/
02:49  tm512: echo "$(cut -d: -f2 <<< $1 | sed 's/!/ /;s/ $//;s/ PRIVMSG//g') $(cut -d : -f 3 <<< $1)"
02:49  tm512: $1 = ':tm512!tm512@lsn-4p97t6.fios.verizon.net PRIVMSG #seraphimlabs :he:he'
02:49  tm512: the second "$()"
02:49  tm512: needs to turn into he:he
02:50  jsz`: yes
02:50  tm512: currently with that, it puts "he"
02:50  jsz`: replace cut -d -f3
02:50  jsz`: by
02:50  jsz`: sed 's/.*#.* \(.*\)/\1/'
02:51  tm512: that prints :he:he
--- Log closed Wed Dec 08 02:55:00 2010
--- Log opened Wed Dec 08 02:55:22 2010
02:55 --- Users 96 nicks [0 ops, 0 halfops, 0 voices, 96 normal]
02:57 --- Channel ##sed was synced in 148 seconds
--- Log closed Wed Dec 08 08:55:23 2010
--- Log opened Wed Dec 08 09:05:48 2010
09:05 --- Users 91 nicks [0 ops, 0 halfops, 0 voices, 91 normal]
09:08 --- Channel ##sed was synced in 148 seconds
--- Log opened Wed Dec 08 10:03:38 2010
10:03 --- Users 90 nicks [0 ops, 0 halfops, 0 voices, 90 normal]
10:05 --- Channel ##sed was synced in 89 seconds
13:09  jsz`: hemanth, you cannot use %s, it's not printf
13:10  hemanth: jsz`, i'm aware of that, i was using it as a sub process in py script, so...
13:10  jsz`: oh
13:11  jsz`: what's the script's line and what do you want do to?
21:51  kotique: How do I substitute in a matched block?
21:53  kotique: do a match, then after it do a second match with substitution
21:54  Riviera: These are two questions, right?
21:54  Riviera: or say "two problems"?
21:56  kotique: sed '/\[epel\]/,/enabled=*/p' /etc/yum.repos.d/epel.repo
21:57  kotique: I want to set enabled to 0
21:57  kotique: but only for first match after [epel]
21:57  Riviera: ah
21:58  Riviera: and then, the same for the rest of the file, if more epels are found? :)
21:58  kotique: no
21:58  kotique: only the first match after epel
21:59  Riviera: okay, still not sure if I really understand you, but maybe try this:
22:00  Riviera: sed '/\[epel\]/,/enabled=/{/enabled=/s//&0/;}'
22:00  Riviera: well
22:00  Riviera: did you mean
22:00  Riviera: enabled=.*
22:00  Riviera: or really enabled=*
22:00  Riviera: because the latter actually matches strings like
22:00  Riviera: enabled=====
22:00  Riviera: enabled=
22:00  Riviera: enabled
22:00  Riviera: etc.
22:01  Riviera: :)
22:01  kotique: enabled=\d
22:02  kotique: enabled=01
22:02  kotique: crap, it doesn't stop at first match
22:02  Riviera: sed '/\[epel\]/,/enabled=/{/enabled=[[:digit:]]*/s//enabled=0/;}'
22:02  Riviera: ah, right.
22:02  Riviera: let's see:
22:03  ka1ser: I'm not sed super expert, but I think you need an end match for that edel
22:03  Riviera: sed '/\[epel\]/,/enabled=/{/enabled=[[:digit:]]*/s//enabled=0/;:a;$!n;$!ba;}'
22:03  Riviera: maybe like that
22:03  Riviera: not sure if that treats the last line correctly, please test.
22:04  ka1ser: I mean, for whatever is between *this* and *this, substitue *this* with *this*
22:05  Riviera: ka1ser: That unfortunately does not make sense to idiots. :(
22:05  Riviera: kotique: no success?
22:07  kotique: erl -pe 'if (/\[epel\]/){ $sec=1; next; } if ($sec and s/(enabled=)\d/${1}0/){ $sec=0 }'
22:07  kotique: full success!
22:08  ka1ser: something like sed '/\[edel\]/,/this/ s/enabled=.*/enabled=0/g'
22:08  ka1ser: well yeah an script would do
22:08  ka1ser: =)
22:11  kotique: okay, now how do I match between maches?
22:12  kotique: sed /first/,/last/ ; then grep for that
22:12  Riviera: The match would be one on of those lines? Or potentially spanning multiple lines?
22:13  kotique: one of those lines, the last one
22:13  Riviera: Like I did in the example above
22:14  kotique: :a;$!n;$!ba; i don't quite understand this
22:14  Riviera: /first/,/last/{/last/...;}
22:14  kotique: it's like writing @#SDF$W%#@@!13DSF for me
22:14  Riviera: that part was for
22:14  Riviera: just outputting the rest of the input
22:14  Riviera: because you only wanted the first occurance to match
22:16  kotique: okay, that seem to work. but how do I tell sed to shut up and just resturn the exit status, like grep -q
22:17  Riviera: ah, that you can't
22:17  kotique: damn:)
22:17  Riviera: maybe GNU sed can, let me see
22:17  kotique: how about awk?
22:17  Riviera: yes, awk could :)
22:18  Riviera: with exit(...);
22:18  waldner: gnu sed can with Q (IIRC)
22:18  waldner: oh no, even just "q n"
22:19  Riviera: yes, also just found
22:19  Riviera: Q and q take optional exit codes in GNU sed
22:20  kotique: great
22:36  mdpatrick: I'm trying to replace all occurrences of '> with "> using sed -i on a text file. Can you please tell me what is wrong with this syntax? sed -i.bac 's/\'>/\">/' atlanta_links2_singlequote.txt
22:36  kotique: one last question, how do I enable right click menu in konsole?
22:37  waldner: sed "s/'>/\">/"
22:37  waldner: or /g if you want global replacement
22:47  mdpatrick: thanks waldner, that did it
23:46  craiggle1: hey guys.
23:47  craiggle1: my file is in the form id: \d+ name: .+\n .. can someone show me what sed i'd use? thanks.
23:47  craiggle1: sed 's/id: (\d+) name: (.+)/_id.put("$1", "$2");/i' Item\ Codes.txt Item\ Codes.txt didn't work.
23:48  craiggle1: ID: 4250 Name: Ghostspeak amulet .. just an example of a line.
23:50  craiggle1: ive also noted it should be \1 and \2 not $1 and $2
23:51  craiggle1: but then i get invalid reference to \{n}
23:56  cthuluh: because you should use \([[:digit:]]\{1,\}\) not (\d+)
23:56  cthuluh: !bre > craiggle1
23:57  cthuluh: haha
23:57  cthuluh: 23:57 <greybot> Posix Basic Regular Expressions: http://www.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap09.html#tag_09_03
--- Log closed Thu Dec 09 00:00:18 2010
