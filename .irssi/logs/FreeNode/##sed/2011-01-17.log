--- Log opened Mon Jan 17 00:00:47 2011
--- Log opened Mon Jan 17 01:10:14 2011
01:10 --- Users 91 nicks [0 ops, 0 halfops, 0 voices, 91 normal]
01:11 --- Channel ##sed was synced in 98 seconds
--- Log closed Mon Jan 17 02:52:47 2011
--- Log opened Mon Jan 17 02:58:07 2011
02:58 --- Users 90 nicks [0 ops, 0 halfops, 0 voices, 90 normal]
02:59 --- Channel ##sed was synced in 106 seconds
04:20  NTU: how do i add "tar zxf" to every line before the file name?
04:20  NTU: http://pastebin.com/k9rjJyMB
04:20  NTU: btw hello!
04:20  black_13: i have a txt file that was converted from a pdf file
04:21  e36freak: black_13: and?
04:21  NTU: wait i think i got it
04:21  e36freak: NTU: sed 's/^/tar zxf /'
04:21  NTU: oh, thank you!
04:21  black_13: there are lots of \365 and \364's
04:22  black_13: i want to remove those
04:24  NTU: let me answer this one!
04:24  e36freak: sed 's!\\36[45]!!g'
04:24  NTU: arghh
04:24  NTU: haha
04:24  black_13: how about anything in that range
04:25  gnomon: Well played, e36freak.
04:25  e36freak: 4# sed 's!\\36[45]!!g' <<<"\364 \365 \366 364 365 366"
04:25  shbot: e36freak:   \366 364 365 366
04:25  e36freak: black_13: what "range" ?
04:26  NTU: now i want to remove all text from a file except the package name (the "-" sign and everything after it)
04:26  e36freak: \300 to \399? \000 to \999? \360 to \369?
04:27  NTU: so its libFS-1.0.3.tar.gz -> libFS
04:27  NTU: wait no.. thats not what i want nvm figured it out
04:27  e36freak: NTU: bash? just use PE
04:27  NTU: sed -i 's/.tar.gz//g' xorg.txt
04:27  e36freak: well, assuming it's a variable and you're doing something by line
04:27  NTU: now it only keeps the package name and version :)
04:28  e36freak: you would wanna escape the "."s
04:28  e36freak: otherwise ftarbgz or something would match
04:34  NTU: ooohh yeah http://code.google.com/p/neo-technical/wiki/xorglatest
04:34  NTU: <3 thank you sed!
04:35  e36freak: why is make not in there?
04:35  e36freak: and i would much rather write a bash script to do that line by line, with error handling
04:36  NTU: good point
04:36  NTU: thanks!
04:36  NTU: anyway guys i have to go, ill be back like.. if i need help.. im sed noob so i cant rly help much
05:12  al_nz1:  Hi guys
05:12  al_nz1:  trying to get a string of latitude longitude from degrees minutes decimal minutes - ie "36 48.528 S,175 06.945 E" - to degress minutes seconds decimals secdonds, ie "-36 48 31.68, 175 06 56.7"
05:13  al_nz1: I have a csv file of them to do, and I am pretty bad at awk/sed
05:13  al_nz1: anyone able to pls help?
05:13  e36freak: that's a bit much for sed, can't handle arithmetic operations afaik
05:14  al_nz1: e36freak: hey man
05:14  al_nz1: e36freak: I had a similar file once and it was done with sed
05:14  al_nz1: lemme post it
05:16  al_nz1: http://pastebin.com/H7Tg1cCM
05:16  al_nz1: I cant remember who on which channel did that for me
05:17  e36freak: dunno, that's a bit beyond my sed-fu though
05:17  al_nz1: but he pipes each value seperated by comma to a variable?
05:17  al_nz1: e36freak: yeah its pretty good work
05:18  e36freak: also, i would use herestrings :) much faster
05:20  al_nz1: e36freak: do you know anyone else on the channel? whose really good?
05:21  e36freak: patience, someone will be around
05:22  al_nz1: k
05:25  al_nz1: lets start with something simple, if I have "36 43.183" how would I insert a "-" sign at the start, ie "-36 43.183" ?
05:25  e36freak: well, that depends on N vs S, right?
05:25  al_nz1: they are all S south
05:25  e36freak: this is probably something that should be done in awk tbh
05:26  e36freak: unless you wanna just do 'tr "," "\n" <file' first
05:26  e36freak: sed handles things line by line
05:26  e36freak: you can do that, and then just do 's/^/-/'
05:26  Bop: al_nz1, sed -e 's/^/-/g'
05:27  e36freak: Bop: no need for g for that :)
05:27  Bop: he sayed he had a bunch of them
05:27  e36freak: ok? it will do that for each line either way
05:27  Bop: oh ok
05:28  al_nz1: yeah I got about 50 lines of em
05:28  e36freak: 4# sed 's/^/-/' <<<$'foo\nbar\nbaz'
05:28  shbot: e36freak: -foo
05:28  shbot: e36freak: -bar
05:28  shbot: e36freak: -baz
05:28  e36freak: g is needed for multiple instances on the same line
05:28  Bop: oh ok
05:28  al_nz1: only one instance per line, but multiple lines
05:29  al_nz1: so first run to get rid of " S" on "36 48.528 S,175 06.945 E" is "sed s/ S//" ?
05:30  Bop: yes
05:30  Kerrick: al_nz1, yes
05:30  al_nz1: actually "sed s/ S// <infile >outfile"
05:30  Kerrick: al_nz1, actually I'm pretty sure you should quote the s/... part
05:31  Kerrick: it has a space in it
05:31  al_nz1: quote with? '
05:31  al_nz1: \ ?
05:31  Kerrick: in general I always make a habit of putting '...' around the s/ part
05:31  Kerrick: al_nz1, if you are passing an argument to a command that has spaces in it, you have to quote that argument
05:32  Kerrick: that's a limitation of bash
05:32  Kerrick: you can use '...' or "..." (I think there are others maybe). Those two act differently
05:32  al_nz1: ok that worked
05:33  Kerrick: '...' will always do exactly what is quoted; "..." will expand some stuff, rtm for details
05:33  al_nz1: now I have "36 43.183,174 37.005" so I need to do the maths bit
05:33  al_nz1: ie .183*60
05:34  al_nz1: so "36 43 10.98, 174 37 0.3"
05:34  Kerrick: al_nz1, I think this will help you on that: http://tldp.org/LDP/abs/html/dblparens.html
05:35  al_nz1: Kerrick: I should be able to hack the code @ http://pastebin.com/H7Tg1cCM
05:35  al_nz1: to make it do it
05:36  al_nz1: but that sed code is waaaay above me
05:37  al_nz1: it be something like find the "." and 3 digits after it, assign to var then bc *60? then replace?
05:37  Bop: find between dot and comma
05:37  Bop: better , i think
05:38  al_nz1: Bop: but the longitude doesnt have comma
05:38  Kerrick: al_nz1, look up the manual for sed on the internet
05:38  al_nz1: cause end of line
05:38  al_nz1: Kerrick: lol I am
05:38  Kerrick: also, I would recommend converting it to "extended regular expression" format
05:39  Kerrick: to do this, you have to pass the -r option to sed
05:41  Kerrick: There are basic regular expressions and extended regular expressions. Extended regular expressions were made to have more functionality; basic regular expressions in the case of programs like sed and grep were retroactively modified to have the same functionality as extended ones, but the syntax for expressing this advanced functionality in basic regular expressions is shitty
05:41  Kerrick: So, it's best to do everything in extended regular expressions because they're less of a hack, essentially.
05:41  e36freak: yeah, BRE sucks
07:06  uber-n00b: hi
07:09  uber-n00b: looking for something i can stick in a bash script that will rename any txt file (*.txt) in the /home/file/ dir, transforming any '_' char to '.' and any 'v-' to 'v.'
07:10  uber-n00b: oops, '-v' to '.v'
07:11  uber-n00b: Some_Dumb-v1.2.3-final.txt to Some.Dumb.v1.2.3-final.txt
07:12  uber-n00b: Other_Dumb_Thing-v1.2.3-FINAL.txt to Other.Dumb.Thing.v1.2.3-FINAL.txt
07:13  Bop: for i in $(ls -1) ; do
07:13  Bop: sed -e 's/_/./' -e 's/-v/.v/'
07:13  Bop: something like that
07:17  probonono: with something like:  mv "$i" $(echo "$i" | sed ...)
07:23  e36freak: Bop: No.
07:23  e36freak: never put ls in a script
07:23  e36freak: and never do "for i in $(..)"
07:24  Bop: why
07:24  e36freak: http://mywiki.wooledge.org/ParsingLs
07:24  e36freak: that will break for filenames with spaces
07:24  e36freak: and for newlines
07:24  e36freak: uber-n00b: do you need it to be recursive?
07:26  e36freak: for file in *; do mv "$file" "$(sed 's/_/./g;s/-v/.v/g' <<<"$file")"; done
07:27  Bop: e36freak, for this case , for i in "($ls -1)" would work :)
07:28  Bop: but ok for i in * also its cool
07:29  e36freak: no, quoting the command substitution would cause the for loop to treat the whole thing as one iteration
07:30  e36freak: 4# touch foo; touch bar; for f in "$(ls -l)"; do printf "<%s>" "$f"; done
07:30  shbot: e36freak: <total 0
07:30  shbot: e36freak: -rw-r--r-- 1 root root 0 Jan 17 06:30 bar
07:30  shbot: e36freak: -rw-r--r-- 1 root root 0 Jan 17 06:30 foo>
07:30  e36freak: 4# touch foo; touch bar; for f in "$(ls)"; do printf "<%s>" "$f"; done
07:30  shbot: e36freak: <bar
07:30  shbot: e36freak: foo>
07:30  Bop: quoting is because the spaces and stuff in filenames
07:30  e36freak: no, that's not how it works
07:30  e36freak: even with the new line, you'll notice that printf saw it as one argument
07:31  e36freak: 4# touch foo; touch bar; for f in *; do printf "<%s>" "$f"; done
07:31  shbot: e36freak: <bar><foo>
07:32  Bop: i see
07:32  e36freak: 4# touch foo; touch bar; mkdir foobar; for f in *; do mv "$f" foobar; done
07:32  shbot: e36freak: mv: cannot move `foobar' to a subdirectory of itself, `foobar/foobar'
07:32  e36freak: bah
07:32  e36freak: but yeah
07:32  e36freak: 4# touch foo; touch bar; mkdir foobar; for f in "$(ls)"; do mv "$f" foobar; done
07:32  shbot: e36freak: mv: cannot stat `bar\nfoo\nfoobar': No such file or directory
07:35  uber-n00b: its going to be run in current dir, with only one .txt file in the dir, but the name will change, so i need *.txt
07:35  uber-n00b: do not need recursive
07:35  e36freak: uber-n00b: see the above line
07:35  e36freak: oh wait
07:36  e36freak: for file in *.txt; do mv "$file" "$(sed 's/_/./g;s/-v/.v/g' <<<"$file")"; done
07:36  e36freak: there you go
07:36  uber-n00b: k
07:36  uber-n00b: ty
07:37  e36freak: (assuming you're using bash)
07:37  e36freak: otherwise the herestring won't work, you'd need to use ``echo | sed''
07:44  probonono: If you're making it bash-centric, then you can also eliminate sed with something like:  dest=${file//-v/.v}; mv "$file" "${dest//_/.}"
07:44  e36freak: yeah
07:45  e36freak: he asked in ##sed though :)
07:47  e36freak: PE would probably be faster, too
07:51  uber-n00b: works great. thanks guys and gals
--- Log closed Mon Jan 17 08:39:29 2011
--- Log opened Mon Jan 17 08:44:40 2011
08:44 --- Users 92 nicks [0 ops, 0 halfops, 0 voices, 92 normal]
08:46 --- Channel ##sed was synced in 105 seconds
--- Log opened Mon Jan 17 08:52:00 2011
08:52 --- Users 92 nicks [0 ops, 0 halfops, 0 voices, 92 normal]
08:53 --- Channel ##sed was synced in 106 seconds
--- Log opened Mon Jan 17 13:25:08 2011
13:25 --- Users 93 nicks [0 ops, 0 halfops, 0 voices, 93 normal]
13:26 --- Channel ##sed was synced in 95 seconds
17:30 --- Vorpal_ is now known as Vorpal
--- Log closed Mon Jan 17 21:26:37 2011
--- Log opened Mon Jan 17 21:32:07 2011
21:32 --- Users 91 nicks [0 ops, 0 halfops, 0 voices, 91 normal]
21:33 --- Channel ##sed was synced in 114 seconds
--- Log closed Mon Jan 17 21:57:19 2011
--- Log opened Mon Jan 17 22:07:46 2011
22:07 --- Users 94 nicks [0 ops, 0 halfops, 0 voices, 94 normal]
22:09 --- Channel ##sed was synced in 109 seconds
--- Log closed Mon Jan 17 22:19:44 2011
--- Log opened Mon Jan 17 22:20:04 2011
22:20 --- Users 95 nicks [0 ops, 0 halfops, 0 voices, 95 normal]
22:20 --- Server: [card.freenode.net] [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
22:21 --- Channel ##sed was synced in 106 seconds
22:33  paxcoder: how to replace something with a regular expression? :-P
22:33  paxcoder: iykwim
22:34  paxcoder: can i escape it somehow?
22:35  paxcoder: (without escaping the whole expression i want to replace the thing with)?
22:35  dualbus: paxcoder, exemplify
22:35  paxcoder: 's/something/\+/'
22:36  paxcoder: can i do it somehow without going through the regex and replacing all \+'s with \\+?
22:37  paxcoder: dualbus, png
22:39  cthuluh: but what if there's \\+ or \\\+ in the input?
22:41  paxcoder: wha?
22:41  paxcoder: there isn't
22:41  paxcoder: i just want to replace SOMETHING with a REGEXP
22:42  vkues: then do so.
22:42  vkues: s/SOMETHING/REGEXP/
22:43  paxcoder: vkues, wth?
22:43  vkues: Maybe fucking state what your fucking problem is.
22:43  vkues: Did you try?
22:43  vkues: What's the error? What does not work as you want?
22:43  dualbus: paxcoder, and what's the problem with escaping all the backslashes?
22:43  paxcoder: vkues, did you read it?
22:43  vkues: Please, fucking be verbose.
22:43  vkues: Ask questions.
22:43  paxcoder: dualbus, there's alot of them
22:43  vkues: Meaningful ones, not if I read something. Of course I did.
22:44  paxcoder: vkues, also, i don't think it's enough
22:44  dualbus: paxcoder, I don't know if sed has a flag to disable backslash escaping
22:44  dualbus: and I don't think so
22:44  e36freak: 4# sed 's/foo/^\([[:digit:]]\{2,\}\)-[^abc]*/' <<<"foobar"
22:44  vkues: Everything is a regular expression.
22:44  shbot: e36freak: ^([[:digit:]]{2,})-[^abc]*bar
22:44  e36freak: tada!
22:44  vkues: 8)
22:45  e36freak: need more escaping for some of it, but just play with it
22:45  paxcoder: -_-
22:45  paxcoder: so the answer is no?
22:45  paxcoder: great
22:46  dualbus: e36freak, but imagine that the regexp is /\*\+\\/
22:46  e36freak: have fun with picketing
22:46  dualbus: that becomes \\*\\+\\\\
22:46  e36freak: pretty
22:46  dualbus: :P
22:46  e36freak: it's all slanty
22:47  paxcoder: picketing string:
22:47  paxcoder: '[A-Za-z]\+ \+[1-9]\+0* *, *[1-9]\+0* \+[A-Za-z]\+.*\'
22:48  e36freak: oh, that'll be a fun one
22:48  e36freak: also, use [[:alpha:]]
22:48  e36freak: and [[:digit:]]
22:48  e36freak: they're not locale-specific
22:48  paxcoder: e36freak, paz X
22:48  paxcoder: e36freak, works in python.
22:49  paxcoder: (if \+ is replaced w/ +)
22:49  e36freak: ...with your locale
22:49  paxcoder: oh right
22:49  paxcoder: now that you say that, it doesn't work with my locale ;-P
22:50  vkues: e36freak: sure [[:digit:]] is locale-specific
22:50  e36freak: well, it's [1-9], not [0-9] anyway
22:50  e36freak: [[:alpha:]], [[:upper:]], [[:lower:]], and [[:space:]] are the important ones
22:50  paxcoder: nope
22:51  paxcoder: i can't remove 1-9 for e36freak's stated reasons
22:53  paxcoder: 4# sed 's/d/\'\[\[:alpha:\]\]\\+  \\+\[1-9\]\\+0\* \*, \*\[1-9\]\+0* \+\[\[:alpha:\]\]\+\.\*\'' <<"ada"
22:54  shbot: paxcoder: Missing terminating quote, bracket or keyword
22:54  paxcoder: yippie
22:54  paxcoder: 4# sed 's/d/\'\[\[:alpha:\]\]\\+  \\+\[1-9\]\\+0\* \*, \*\[1-9\]\\+0\* \\+\[\[:alpha:\]\]\+\.\*\'' <<"ada"
22:54  shbot: paxcoder: Missing terminating quote, bracket or keyword
22:54  paxcoder: takes him a while XD
22:54  dualbus: # echo '\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b' | sed 's/\\/\\\\/g'
22:54  dualbus: 4# echo '\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b' | sed 's/\\/\\\\/g'
22:55  shbot: dualbus: \\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\b
22:55  dualbus: :P sweet
22:55  e36freak: heh, there you go
22:55  paxcoder: wat?
22:55  cthuluh: sweet
22:55  paxcoder: what yuh talking bout willis?
22:57  dualbus: sed 's/ada/[[:alpha:]]\\+ \\+[[:digit:]]\\+0* *, *[[:digit:]]\\+0* \\+[[:alpha:]]\\+.*\\/g' <<< "ada"
22:57  dualbus: paxcoder, why don't you just sed 's/\\/\\\\/g' your regexes
22:58  paxcoder: dualbus, you ain't buildin my fence
22:58  vkues: Obviously because he has no clue what he even wants.
22:58  paxcoder: vkues, i know what i want, i don't know how to get it
22:58  vkues: paxcoder: No, you don't.
22:58  paxcoder: (hence i'm here, having to listen to you)
22:59  paxcoder: vkues, don't project, now
22:59  dualbus: paxcoder, y u no speak simple engrish :P?
22:59  dualbus: sorry, I don't understand some of your idiomatic expressions
22:59  paxcoder: simple englis ftw bbq wysiwyg
23:00  dualbus: what's the problem with just 's/\\/\\\\/g' all your regexes again?
23:00  vkues: "don't project" :DDD
23:00  paxcoder: dualbus, you have to escape more than just backslashes.
23:02  dualbus: paxcoder, metacharacters lose their meaning in the replacement part
23:02  paxcoder: oh?
23:02  dualbus: only backreferences and some GNU sed specific commands work there
23:02  vkues: \ and & are special.
23:03  vkues: and some other issues.
23:03  paxcoder: ok, thx
23:03  vkues: Yeah, no idea what you want, but shitstorming crap like "don't project"
23:03  vkues: Fucking imbecile. Emergency slaughtering.
23:04  dualbus: paxcoder, info sed
23:04  dualbus: vkues, what's your problem?
23:04  paxcoder: vkues, your vocabulary is way better than mine
23:04  paxcoder: oh yeah.
23:04  vkues: dualbus: Why do you ask, do you care?
23:05  dualbus: I don't care, but, I dislike the fact that you are displaying your emotional problems in this channel
23:05  paxcoder: vkues, that's his way of telling you you kept on projecting
23:05  cthuluh: I suggest that we all read the documentation for our sed utility, then that we all recite our prefered software license three times, then smoke a cig :)
23:06  vkues: dualbus: so it's an emotional problem to be upset when people bullshit, lie, don't respond to questions, eh?
23:06  paxcoder: cthuluh, that's a BSD-fanboy trick! ;-)
23:06  vkues: in your fucking mind it's probably generally an emotional problem to be upset
23:06  vkues: 8)
23:06  vkues: idiots, alleverywhere.
23:06 * paxcoder tries to find a question
23:07  cthuluh: paxcoder: the proof that you are wrong is that I'm not a fanboy (anymore)
23:07  cthuluh: so anybody could use this trick
23:11  dualbus: paxcoder, sed 's/\\/\\\\/g;s/&/\\&/g' <<< "regexp" will help a bit, I think
23:12  vkues: dualbus: sed 's/[\\&]/\\&/g'
23:12  vkues: unsure about [\&] vs. [\\&], though.
--- Log closed Mon Jan 17 23:46:14 2011
--- Log opened Mon Jan 17 23:46:33 2011
23:46 --- Users 94 nicks [0 ops, 0 halfops, 0 voices, 94 normal]
23:48 --- Channel ##sed was synced in 105 seconds
--- Log closed Tue Jan 18 00:00:37 2011
