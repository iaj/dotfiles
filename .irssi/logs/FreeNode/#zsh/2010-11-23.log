--- Log opened Tue Nov 23 00:00:02 2010
01:57 --- blueyed_ is now known as blueyed
02:56 --- peth_ is now known as peth
--- Log closed Tue Nov 23 03:42:19 2010
--- Log opened Tue Nov 23 03:42:40 2010
03:42 --- Users 150 nicks [0 ops, 0 halfops, 0 voices, 150 normal]
03:43 --- Channel #zsh was synced in 70 seconds
03:47  datafirm: Hi
03:47  datafirm: Is there a way to have up-line-or-search search on all characters up until the point where my cursor is?
03:48  datafirm: vs just the first word?
03:57  peth: you can bind history-beginning-search-forward and -backward
04:43  datafirm: peth: Thats what I've done.  But that does not solve my problem.
04:43  datafirm: I'd like to have it search on the first n characters until my cursor when I hit the up arrow (for example)
04:53  peth: datafirm: ? that's exactly what it does
05:41  datafirm: peth: Hmm, mine only works as described in the docs.
05:41  datafirm: It looks up based on the first word.  Here is how I've bound the keys
05:41  datafirm: bindkey '^[[A' up-line-or-search
06:18  teratorn: datafirm: history-beginning-search-forward -backward
06:19  teratorn: it searches based on the characters from the beginning of the buffer to the character prior to the cursor position, which is what you want
06:20  datafirm: teratorn: perfect!  thanks
06:21  teratorn: I use the bindings '^[p' and '^[n' for them
06:31  datafirm: teratorn: do you have a list of all these bindings?  codes to keys?
06:32  teratorn: if you want to find out the code, type Ctrl-V followed by the binding you want to see the code for
--- Log closed Tue Nov 23 07:42:08 2010
--- Log opened Tue Nov 23 07:42:35 2010
07:42 --- Users 148 nicks [0 ops, 0 halfops, 0 voices, 148 normal]
07:43 --- Channel #zsh was synced in 72 seconds
08:03 --- wuehlmau1 is now known as wuehlmaus
09:39  aep: can i use completion in ^r somehow? I often happen to have lots of entries with the same prefix
09:40  selckin: start typing the part after the prefix
09:41  aep: well, that'll work for limited use cases, yeah
09:42  aep: most recent use case. i wanted to complete shell-fm artist/Bäume+Statt+Bürger , but i have no ä on my keyboard, and i'm to lazy to type all the prefix until the B, but i have many entries like that
09:43  aep: ^r B  would probably show something entirely unrelated, but i cant type the ä
09:43  aep: actually, i just realized i can use /B 
09:43  aep: thanks! :D
09:45  selckin: ^r statt ^r ^r ^r 
09:46  aep: oO
09:46  aep: interesting
09:47  aep: but not very usefull, it strips all non ascii chars from the actual _result_ too, so the command wont work
09:47 * aep wishes lastfm would just use proper stemming
09:47  selckin: sounds like a bug
09:48  selckin: or get a real lastfm client
09:48  aep: gimme one that doesnt require a gui?
09:49  selckin: my phone, err wait
09:49  aep: heh
09:49  aep: well, mine can't do it. something about lastfm not allowing it. meh
09:50  selckin: it should get non ascci from history just fine btw
09:51  aep: the resulting command from your suggestion is "shell-fm artist/baeume+statt+burger"
09:51  aep: ooh wait, *facepalm*
09:51  aep: thats IN my history
09:51  aep: i tried to type it...
09:52  aep: works just fine. sorry.
11:50  tzervo: hi all. I want to define some autocompletion functions (zsh newbie here). read the faq and it points to zshcompsys. I started to read it and got a little swamped. is there an easy tutorial somewhere to have quicker results? or is zshcompsys manpage the only recommendation?
11:51  ft: Which FAQ? the wikifaq? That one gives more references than just zshcompsys(1)
11:52  tzervo: http://zsh.sourceforge.net/FAQ/zshfaq04.html#l49, section 4.5
11:52  tzervo: ah, sorry, must have got it wrong. this is not the one posted in the topic, right?
11:53  tzervo: no, thats it
11:53  ft: see /topic -> wikifaq, too.
11:54  tzervo: ft: ok, thanks
--- Log closed Tue Nov 23 13:42:59 2010
--- Log opened Tue Nov 23 13:43:21 2010
13:43 --- Users 151 nicks [0 ops, 0 halfops, 0 voices, 151 normal]
13:44 --- Channel #zsh was synced in 73 seconds
--- Log closed Tue Nov 23 14:34:50 2010
--- Log opened Tue Nov 23 14:35:09 2010
14:35 --- Users 150 nicks [0 ops, 0 halfops, 0 voices, 150 normal]
14:36 --- Channel #zsh was synced in 75 seconds
--- Log closed Tue Nov 23 14:59:13 2010
--- Log opened Tue Nov 23 14:59:36 2010
14:59 --- Users 152 nicks [0 ops, 0 halfops, 0 voices, 152 normal]
15:00 --- Channel #zsh was synced in 72 seconds
--- Log closed Tue Nov 23 16:20:33 2010
--- Log opened Tue Nov 23 16:20:51 2010
16:20 --- Users 156 nicks [0 ops, 0 halfops, 0 voices, 156 normal]
16:21 --- Channel #zsh was synced in 70 seconds
16:32  ft: hum, some people don't seem to get how the -users and -workers mailinglists are combined.
16:38  et: "i don't want clueless users to answer my question, i want people who know what they are talking about!"
16:39  ft: hm?
16:40  et: i thought you were complaining about people asking questions about usage on -workers
16:41  ft: My point is, the guy dragged the mail from -users to -workers - although it's clearly a -users topic - without setting Cc: And you can't assume that everyone is on -workers, too. Especially when the OP doesn't know `extended_glob'.
16:42  ft: Nope. I didn't mean that. :)
16:42  ft: (that happens, too. - which is not nice, because lurkers on -users won't see any of the traffic.)
17:04  anon33_: is the following valid zsh or do I need to tweak it some? http://pastebin.com/raw.php?i=kU3WRWCG
17:16  anon33_: anyone?
17:16  anon33_: I'm pretty sure $PS1 isn't valid for zsh, but don't know what the alternative is
17:28  fow: anon33_, PS1 is valid. But the better way to test for interactivity is [[ -o interactive ]]. Of course, you shouldn't need to test for interactivity in zshrc, as zshrc is supposed to only be sourced by interactive shells
17:40  tlonim: print **/*(e:'reply=(${REPLY:e})':)  i get missing end of string 
17:41  tlonim: anything wrong there ?
17:47  paradigm: How would one go about disabling zsh's ability to "cd username"?
17:47  paradigm: Or more specifically, disable the tab completion for it?
17:48  ft: setopt nocdablevars
17:48  ft: But that option isn't set by default.
17:49  paradigm: Can I disable just the username, but keep the ability to cd to other vars?
17:49  paradigm: my username doens't show up in env
17:50  ft: what do you mean vars?
17:51  ft: man zshoptions | less -p CDABLE_VARS
17:52  paradigm: hmm
17:52  tlonim: zstyle ':completion:*' users {comma separated list} ?
17:55  paradigm: ft: with cdablevars, I can do something like this: vv="/dev/shm/", and then just type "vv" to cd to "/dev/shm/"
17:55  paradigm: I lose that ability without cdablevars
17:55  paradigm: well, with cdablevars and autocd
17:56  paradigm: I could just make aliases for all the variable shortcut thing
18:00  paradigm: ft: I managed to get around it with your direction, thanks
--- Log closed Tue Nov 23 18:08:13 2010
--- Log opened Tue Nov 23 18:13:33 2010
18:13 --- Users 153 nicks [0 ops, 0 halfops, 0 voices, 153 normal]
18:14 --- Channel #zsh was synced in 76 seconds
18:25 --- FauxFaux_ is now known as FauxFaux
18:33  testzircui: zsh + curses + zirc = works <3
18:34  testzircui: far from finished but it works currenttly <3
18:35  sshc: How do I escape a ' in a string surrounded by 's?
18:35  testzircui: http://planet.etoilebsd.net/zshircui.png
18:36  thrig: echo 'It'\''s a bit ugly'
18:36  testzircui: only 649 lines of code
--- Log closed Tue Nov 23 18:44:46 2010
--- Log opened Tue Nov 23 18:45:10 2010
18:45 --- Users 154 nicks [0 ops, 0 halfops, 0 voices, 154 normal]
18:45  tlonim: testzircui: cool.. will check
18:46 --- Channel #zsh was synced in 75 seconds
18:47  testzircui: it is quite easy and fast to write curses ui with zsh
18:48  peth: also impressive
18:50  testzircui: I found some bugs on zsh/curses while writting the irc client
18:50  testzircui: but hard to debug
18:51  testzircui: I only happens when launching the ui from ssh->tmux->ssh and when all the env are in utf8
18:54  testzircui: it is quite good in resources compared to irssi
18:54  testzircui: 93949 bapt            1  44    0 27388K  6196K select  18:25  0.00% irssi
18:54  testzircui: 10936 bapt            1  44    0 14392K  4056K select   0:02  0.00% /usr/local/bin/zsh ./ziif
18:54  testzircui: but it is true it doesn't have as much features :)
18:56  testzircui: un client irc 100% zsh <3
18:56  testzircui: hehe bug
18:56  testzircui: this message should not appear here :)
19:15  paradigm: with `:completion:*:description' I can get zsh to list the types of things it is proposing to complete as well as the completion options themselves.  Is there a way to have zsh pist the completion options under their relevant catagory, rather than just listing catagories and options separately?
19:15 --- mren|off is now known as mren
--- Log closed Tue Nov 23 19:44:50 2010
--- Log opened Tue Nov 23 19:45:10 2010
19:45 --- Users 154 nicks [0 ops, 0 halfops, 0 voices, 154 normal]
19:46 --- Channel #zsh was synced in 71 seconds
20:04  cYmen: bapt: was that you?
20:17  bapt: cYmen: yes
20:20  bapt: regarde https://github.com/bapt/stuffz/blob/master/feedz
20:20  bapt: c'est propre ça
20:20  bapt: le code de zircurse est aussi beau
20:20  bapt: même plus je dirai :)
20:21  bapt: fail
--- Log closed Tue Nov 23 21:44:41 2010
--- Log opened Tue Nov 23 21:45:01 2010
21:45 --- Users 154 nicks [0 ops, 0 halfops, 0 voices, 154 normal]
21:46 --- Channel #zsh was synced in 76 seconds
21:48  cYmen: bapt: mon francais n'est pas trop bien
22:10  Dieterbe: is there a way to quickly try all oh-my-zsh themes? changing zshrc, starting new zsh, going in some dirs etc gets cumbersome
22:10  Dieterbe: i mean, i could easily automate most parts, but not the actual loading of the theme at runtime
22:36  Dieterbe: d'oh. just discovered https://github.com/robbyrussell/oh-my-zsh/wiki/themes
23:08  Dieterbe: i'm trying to get a 3-char wide representation of the last exitcode in my prompt
23:08  Dieterbe: local ret_status="%(?:   :%{$fg_bold[red]%}$(printf '% 3i' %?)%{$reset_color%})"
23:08  Dieterbe: it mostly works, except the printf part
23:08  Dieterbe: so what happens is, if there was exit(0), it shows 3 spaces, but if exit >0, it should show the exitcode, left-padded with spaces
23:38  peth: Dieterbe: you could setopt prompt_subst and use ${(l:3:)?} or ${(l:3:):-%?}
23:38  Dieterbe: peth: thanks but i already went for a different approach :)
23:38  peth: ah well :)
23:39  Dieterbe: i now just colorcode an existing part of my prompt, i don't really need to see the full exitcode, just red/green is enough
23:43 --- mren is now known as mren|off
--- Log closed Wed Nov 24 00:00:02 2010
