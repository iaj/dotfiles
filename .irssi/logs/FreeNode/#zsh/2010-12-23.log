--- Log opened Thu Dec 23 00:00:55 2010
--- Log closed Thu Dec 23 01:30:08 2010
--- Log opened Thu Dec 23 01:30:29 2010
01:30 --- Users 147 nicks [0 ops, 0 halfops, 0 voices, 147 normal]
01:31 --- Channel #zsh was synced in 91 seconds
--- Log closed Thu Dec 23 05:28:25 2010
--- Log opened Thu Dec 23 05:34:14 2010
05:34 --- Users 148 nicks [0 ops, 0 halfops, 0 voices, 148 normal]
05:35 --- Channel #zsh was synced in 90 seconds
08:07 --- berniyh_ is now known as berniyh
--- Log closed Thu Dec 23 09:30:08 2010
--- Log opened Thu Dec 23 09:30:37 2010
09:30 --- Users 148 nicks [0 ops, 0 halfops, 0 voices, 148 normal]
09:30 --- Server: [calvino.freenode.net] [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
09:31 --- Channel #zsh was synced in 94 seconds
09:33 --- insomnia1alt is now known as insomniaSalt
10:43  Dynetrekk: hi. when I do scp with a * in bash, it works. in zsh, it says: zsh: no matches found: host:/some/folder/*
10:44  asyd: noglob scp
10:44  asyd: or escape the *
10:45  Dynetrekk: asyd: hm, noglob goes in my .zshrc I suppose. sounds good.
10:45  asyd: nop
10:45  asyd: noglob scp host:/home/folder/* .
10:45  asyd: that prevent zsh to interpret *
10:57  fow: perhaps you want setopt nonomatch
11:01  ft: I really find zsh's default behaviour to be best for interactive use. And I don't find quoting some metacharacters too hard.
11:09  fow: same
11:10  asyd: +1
11:15  iaj: hm.. one question - some guys using bindkeys -v ?
11:16  asyd: sure
11:16  iaj: what key do you use for escaping? any remappings?
11:19  iaj: ^asyd
11:20  asyd: nothing, I don't use it ;p
11:22  iaj: huh.. you don't use escaping when you got bindkeys -v?
11:22  iaj: strange ;D
11:33  ft: you mean another key instead of esc to go to normal mode?
11:33  ft: (vicmd)
11:33  iaj: jip.
11:34  ft: I'm using ^d
11:34  ft: (that's what I'm using in vi(m) and emacs-viper, too)
11:34  iaj: how does that binding in your zshrc look like?
11:38  ft: bindkey '^d' vi-cmd-mode should do.
11:40  ft: I don't have exactly that in my zshrc, because my vi-mode-fu is a little more complicated. But I think it should do the trick.
11:41  iaj: thanks, huh a little more complicated- what does that mean :))
11:42  ft: <http://bewatermyfriend.org/posts/2010/08-08.21-16-02-computer.html>
11:42  ft: the code I'm linking to there is a little broken, though.
11:42  ft: <http://paste.debian.net/download/102910> <- that's the fixed code.
--- Log closed Thu Dec 23 12:29:36 2010
--- Log opened Thu Dec 23 12:29:57 2010
12:29 --- Users 150 nicks [0 ops, 0 halfops, 0 voices, 150 normal]
12:31 --- Channel #zsh was synced in 92 seconds
12:38  pattern: i'd like to list all the files that have permissions 600 in directory "foo" and any of its subdirectories
12:38  pattern: i tried:  ls -l foo/**(f600)
12:39  pattern: but that only matched a file directly in "foo" itself, not in its subdirectories
12:39  Dynetrekk: pattern: what about ls -lR ? does that work?
12:39  pattern: nope
12:40  pattern: same affect as without the -R
12:40  Dynetrekk: pattern: hm, probably due to the 600 thing, folders don't usually have 600 permissions
12:41  Dynetrekk: sorry, I don't really know then...
12:43  asyd: pattern: works here, are you sure you have file with 600?
12:43  pattern: yep
12:43  asyd: http://pastealacon.com/26434
12:44  ft: files are not f, they're .
12:45  ft: oh wait.
12:45  ft: you want a certain mode.
12:45  ft: ls -l foo/**/*(.f600)
12:45  ft: [x] untested.
12:46  pattern: almost..
12:46  asyd: foo/** is not suppoed to go insides subdirectiories?
12:47  pattern: http://paste.pocoo.org/show/308840/
12:48  pattern: "ls -l foo/**/*(.f600)" didn't get "foo/bar/baz/10" and "foo/bar/baz/12"
12:48  asyd: and there are fils, right?
12:48  asyd: files
12:48  asyd: flat files, even
12:49  pattern: they're plain files
12:51  pattern: oops
12:51  pattern: i mistyped what ft wrote
12:51  pattern: i did "ls -l foo/*/**(.f600)" instead of "ls -l foo/**/*(.f600)"
12:51  pattern: ok :)
12:52  pattern: that did work
12:54  pattern: thanks!
--- Log closed Thu Dec 23 13:28:58 2010
--- Log opened Thu Dec 23 13:34:27 2010
13:34 --- Users 150 nicks [0 ops, 0 halfops, 0 voices, 150 normal]
13:35 --- Channel #zsh was synced in 92 seconds
13:40  blueyed: Can I use "~" right away to expand a variable? I have tried the following: files=${~${"./**/*.txt"}} - this works: files=./**/*.txt; echo $~files
13:46  blueyed: My problem is that ${'foobar'} does not work. Do I have to use ${a='foobar'} ?
13:47  Valodim: I think you want ${:-"stuff"}
13:48  blueyed: yes, thanks!
13:48  Valodim: ${~:-"stuff"} works as well, not sure how that'd be useful though
13:49  blueyed: it is useful to expand globs in a shell script, isn't it? like e.g. ${~:-'**/*'} - or would I use "ls" instead?
13:50  Valodim: what's wrong with **/*?
13:51  Valodim: for f in **/*; do print $f; done
13:51  blueyed: it does not get explanded in e.g. "files=**/*" (in a script)
13:51  Valodim: files=( **/* )
13:52  Valodim: you may need setopt extendedglob for the **, but it should work
13:52  blueyed: ok, I see. Thanks.
13:52  blueyed: no, I think it's a regular glob.
13:53  Valodim: just checked, it is
13:55  blueyed: something else: is there a function/binary to get a relative path from file a to file b? Linke when creating symlinks and you want to use a relative path.
13:58  Valodim: not that I knew of
13:59  blueyed: that might work: http://stackoverflow.com/questions/2564634//3024738#3024738
13:59  Valodim: http://stackoverflow.com/questions/2564634/bash-convert-absolute-path-into-relative-path-given-a-current-directory ridiculously complicated oO
14:07  blueyed: Why is this a parse error? if [[ $a[8] ]]
14:07  blueyed: (works with single-bracket-test)
14:09  ignu: can anyone tell me why sometimes when i press the up arrow i see a command that i haven't actually typed in months?  
14:09  blueyed: ignu: have you entered a prefix then? it only matches those starting with the same command/command+args (bases on some option)
14:11  ignu: nope, like i type "spec" then enter... then i switch windows (not doing anything in a different terminal) press up arrow again and see "gitx" or "jspec init" 
14:12  ignu: it didn't used to happen, but i formatted my machine a month ago and has been happening since.  :-/
14:12  blueyed: no idea then. there's also automatic history merging, but if you're not doing anything in another shell..
14:14  Valodim: blueyed: [[ -n $a[8] ]] or -z, depending on whether you want to check if it's empty or not
14:20  blueyed: Valodim: thnaks again. actually I am using a subscript $a[(r)8], but will test for non-empty. So, "[[" expects a option in this case, where other "[" are involved? Or what's the reason?
14:21  Valodim: [[ $emptystring ]] evaluates to [[ ]]
14:21  Valodim: which is an error
14:22  Valodim: [ $emptystring ] evaluates to just test, which is false
14:22  blueyed: ah.. thanks!
14:42  blueyed: Here is a relpath function: http://www.zsh.org/mla/users/2002/msg00268.html
14:59  mrBliss: I'm using zsh in cygwin. After manually tampering with my .zsh_history, I get this message "zsh: can't rename /home/USER/.zsh_history.new to $HISTFILE" when exiting a shell. I tried deleting my .zsh_history and .zsh_history, but the message keeps coming back.
15:08  david00: Hi all, recently upgraded zsh, now when I start a login shell zsh just hangs.  If I hit ^C I get "bad set of key/value pairs for associative array" error from my zshrc, and my prompt is all messed up.
15:08  david00: The line number given is 89 but the file is only 42 lines long.
15:09  ft: sounds weird.
15:09  ft: rm ~/.zcompdump
15:09  ft: retry.
15:10  david00: ft: same :(
15:11  ft: when you say hang, does it hang indefinitely?
15:11  ft: or are you getting annoyed and pressing ^c quickly? :)
15:12  david00: nope it hangs indefinitely
15:13  david00: ps says 3 processes are running
15:13  david00: first one "rt_sigsuspend([INT]" from strace
15:13  ft: david00: only login shells?
15:13  david00: ft: yeah only login shells
15:13  david00: normal shells work fine
15:14  david00: ie 'zsh --login' reproduces, 'zsh' doesn't
15:14  david00: second process has "read(3," on strace
15:14  asyd: david00: check the file correspinding to fd 3 ?
15:15  david00: isn't that some special FD...
15:15  david00: not sure how I would find out which file corresponds to it anyway?
15:16  asyd: check the first line finished by "= 3" before this line
15:18  ft: david00: zsh -lx where does that hang? or does that enter some sort of infinite loop?
15:19  david00: asyd: Sadly 'strace -o foo.log zsh --login' doesn't reproduce the problem
15:19  david00: though i can attach to an existing zsh that is hung
15:20  asyd: david00: are you using linux? 
15:20  asyd: if yes, cd /proc/<pid/fd; ls -l
15:20  asyd: ah hmm cygwin
15:20  david00: ft: hmmm, it hangs here: + [ -d /bin ']'
15:21  ft: huh.
15:21  david00: ft: lots of other output I will take a look..
15:21  david00: ft: that code is part of my .profile
15:22  david00: ft: part of some loop that I use to iterate over existing paths...
15:22  david00: then once I hit ^C it skips the rest of .profile
15:22 * david00 comments out that part
15:25  david00: There we go
15:25  david00: I use "emulate sh" and the following line of code:
15:25  david00: if [ -d "$element" ] && (echo "$PATH" | grep -vqF "$element"); then
15:26  david00: Works without 'emulate sh', causes a hang using 'emulate sh'
15:26  david00: If I remove the second part of the condition it works with both
15:26  david00: strange it looks legal under sh
15:27  david00: Thanks ft, asyd
15:27  david00: you guys rule
19:10 --- mren|off is now known as mren
--- Log closed Thu Dec 23 19:45:30 2010
--- Log opened Thu Dec 23 20:00:57 2010
20:00 --- Users 153 nicks [0 ops, 0 halfops, 0 voices, 153 normal]
20:02 --- Channel #zsh was synced in 86 seconds
20:15  eikenberry: I have a program that formats its arguments like so "command:filename" where command is an action taken w/ the filename being the target of said command. Enabling command completion is easy, but I'm trying to figure out how to get filename completion working after the colon. Any tips?
--- Log closed Thu Dec 23 20:26:18 2010
--- Log opened Thu Dec 23 20:31:40 2010
20:31 --- Users 155 nicks [0 ops, 0 halfops, 0 voices, 155 normal]
20:33 --- Channel #zsh was synced in 90 seconds
21:10  chris2: hi. how can i bind a key to always perform filename completion?
21:12  ft: zle -C complete-files complete-word _generic ; zstyle ':completion:complete-files:*' completer _files ; bindkey '^xf' complete-files
21:13  chris2: thanks!
21:15  blueyed: How can I expand the output of a command into an array, split by newlines (only)? a=$(command); a=( ${(f)a} ) works, but is two commands. This must be easier?!
--- Log closed Thu Dec 23 21:27:36 2010
--- Log opened Thu Dec 23 21:33:01 2010
21:33 --- Users 153 nicks [0 ops, 0 halfops, 0 voices, 153 normal]
21:34 --- Channel #zsh was synced in 86 seconds
21:45  ft: blueyed: http://zshwiki.org/home/scripting/paramflags
21:45  ft: take a look at the (f) flag.
21:51  blueyed: That describes it, but does not explain it though. Is it because without quotes it will get split by words internally, and there's no newline to split by?
22:22  berniyh: hi, two questions: 1) is it possible to expand a path when assigning a parameter (i.e. FOO=dir1(:a) )?
22:22  berniyh: 2) is it possible to bind a key which doesn't return a character shown cat > /dev/null?
22:23  berniyh: (my keyboard has got an `undo` key (using the x.org undo function), which I would like to use)
--- Log closed Thu Dec 23 23:15:36 2010
--- Log opened Thu Dec 23 23:31:03 2010
23:31 --- Users 150 nicks [0 ops, 0 halfops, 0 voices, 150 normal]
23:32 --- Channel #zsh was synced in 85 seconds
--- Log closed Thu Dec 23 23:57:24 2010
