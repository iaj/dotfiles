--- Log opened Tue Nov 02 00:00:13 2010
01:57  ArchGT: hi, I'm trying $ rae () { curl "http://rae-quel.appspot.com/json?query=$@" } being the $@ the command line parameter but it doesn't work
01:58  ArchGT: any ideas?
02:01  ArchGT: hmm it worked with $1
02:56  teratorn: ArchGT: doesn't work? however it's not advisable, since if you specific more than one argument to the function... $@ will expand to a space-separated list and won't be url-escaped (%20) correctly
02:58 --- estragib_ is now known as estragib
03:04  ArchGT: teratorn: it dit work, and now it's set to $1 not to $@
--- Log closed Tue Nov 02 05:10:54 2010
--- Log opened Tue Nov 02 07:45:23 2010
07:45 --- Users 137 nicks [0 ops, 0 halfops, 0 voices, 137 normal]
07:46 --- Channel #zsh was synced in 71 seconds
--- Log closed Tue Nov 02 09:14:15 2010
--- Log opened Tue Nov 02 09:14:38 2010
09:14 --- Users 140 nicks [0 ops, 0 halfops, 0 voices, 140 normal]
09:14 --- Server: [card.freenode.net] [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
09:15 --- Channel #zsh was synced in 75 seconds
15:53  KarlHungus: how do you do substitutions on variables with groups? like: myvar=foobar;echo $myvar:s/foo(bar)/my $1/
15:58 --- Yorokobi is now known as Guest37517
15:59  ft: ${myvar:s/(#b)foo(bar)/my $match[1]}
15:59  ft: (backreferences)
16:00  KarlHungus: ahh. $match. awesome =)
16:00  KarlHungus: ty
16:00  ft: doesn't seem to work with :s, though.
16:00  ft: ${myvar/(#b)foo(bar)/my $match[1]} works.
16:03  Mikachu: it works here
16:03  Mikachu: % myvar=foobar
16:03  Mikachu: % echo $myvar:s/(#b)(foo)/hello$match[1]ninja/
16:03  Mikachu: hellofooninjabar
16:04 --- Yorokobi_ is now known as Yorokobi
16:04  ft: myvar=foobar; print ${myvar:s/(#b)foo(bar)/my $match[1]/}
16:04  ft: foobar
16:04  Mikachu: % myvar=foobar; print ${myvar:s/(#b)foo(bar)/my $match[1]/}
16:04  Mikachu: my bar
16:05  Mikachu: ah, probably setopt hist_subst_pattern
16:05  ft: okay. wtf? is this option depended?
16:05  ft: yes.
16:05  ft: that's the one.
16:05  ft: another reason to use ${param/.../...}
17:33 --- kalkin- is now known as kalkin-afk
--- Log closed Wed Nov 03 09:20:57 2010
