--- Log opened Wed Nov 24 00:00:02 2010
00:26 --- et is now known as twitter
00:26 --- twitter is now known as et
01:13 --- Howitzer_ is now known as Howitzer
--- Log closed Wed Nov 24 01:44:39 2010
--- Log opened Wed Nov 24 01:44:59 2010
01:44 --- Users 150 nicks [0 ops, 0 halfops, 0 voices, 150 normal]
01:46 --- Channel #zsh was synced in 77 seconds
02:59 --- peth_ is now known as peth
--- Log closed Wed Nov 24 05:45:38 2010
--- Log opened Wed Nov 24 05:45:58 2010
05:45 --- Users 148 nicks [0 ops, 0 halfops, 0 voices, 148 normal]
05:45 --- Server: [kornbluth.freenode.net] [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
05:47 --- Channel #zsh was synced in 76 seconds
06:38  sanjoyd: Hi! I'm trying to write a shell script with will execute a program, passing it some command line arguments. The command line arguments are in a variable foo. When I try to do this: program $foo, it seems that the program gets the whole string as one argument, and gets confused.
06:38  teratorn: sanjoyd: $=foo
06:38  sanjoyd: How do I make invoke the program _as if_ I typed out program and then the arguments in the command line?
06:39  sanjoyd: teratorn: I'd also like to be able to understand the solution :). Can you give me a term I can Google?
06:39  teratorn: sanjoyd: that turns on word-splitting
06:41  sanjoyd: teratorn: thanks!
07:53  SpookyET: hello
08:00  SpookyET: Where is the ZSH bug tracker
08:01  SpookyET: ?
08:02  ft: there's one on the sourceforge page. but it's not really used.
08:02  ft: send a mail with a proper report to the -workers mailinglist.
08:04  SpookyET: ft: There is a bug on Mac. SCREENSHOT: http://i.imgur.com/huNpI.jpg
08:06  SpookyET: That % character appears before every prompt. Then it's replaced by the prompt. So, it only flashes for a fraction of a second. However, if there is nothing in the buffer when ZSH starts, such as when you have a ~/.hushlogin file, you get  the result in the screenshot, % followed by many blank lines. 
08:07  SpookyET: Before you ask, that screenshot was taken via a new user account. There is no zshrc. That's the defualt ZSH with no configuration files.
08:08  ft: Could be the global configuration files. Could be the terminal. But I need head off to work right now, sorry.
08:08  ft: need to
08:09  SpookyET: I just said no global configuration files. Yes, it could be Terminal.app; it probably is, but there is nothing one can do about it.
08:09  SpookyET: It only happens with ZSH and no other shell.
08:31  SpookyET: I'll post on the mailing list once I'm subscribed. Thanks. Bye.
09:16  ft: ...he actually said "new user account". didn't mention global files at all. oh, well.
--- Log closed Wed Nov 24 10:44:41 2010
--- Log opened Wed Nov 24 10:50:03 2010
10:50 --- Users 157 nicks [0 ops, 0 halfops, 0 voices, 157 normal]
10:51 --- Channel #zsh was synced in 75 seconds
11:27 --- Guest12714 is now known as qwerty
12:03  Dieterbe: 223123/wc
12:03  Dieterbe: sorry about that
15:44 --- paradigm is now known as paradig
15:53  mmaret: hello everybody!
15:53  mmaret: I'm looking for some help about completion
15:54  mmaret: I would like to add completion for the "t" option of vim
15:54  mmaret: this option in combination with ctag to open vim at the desirated tag
15:54  mmaret: but I don't succeed to do it correctly
15:55  mmaret: I've been trying to modify th _vim file in /usr/share/zsh/functions/Completion/Unix
15:57  mmaret: http://pastebin.com/huxTU08T
15:58  mmaret: but that's writing the possiblity on the shell, not really allowing completion
15:58  mmaret: any idea ?
15:59  mmaret: I've also been trying for .zshrc with something like "zstyle ':completion::complete:vim:option-t-1" but I don't know how to call a fonction from here with parameters
17:01 --- peth_ is now known as peth
17:24  myrkraverk: Is it possible to do "and not" with the ^ glob operator?
17:24  myrkraverk: like rm ^*.c++ ^Makefile ?
17:27  teratorn: huh?
17:29  teratorn: ^ matches everything *except* files matching the following pattern
17:29  teratorn: myrkraverk: *~*.c++~Makefile
17:29  myrkraverk: Hmm.
17:31  fow: I guess you could do ^(*.c++|Makefile)
17:31  myrkraverk: ^*c++~Makefile~DESCRIP.MMS~*make
17:31  myrkraverk: is my pattern so far.
17:31  teratorn: fow: yeah, that works also, but I think it's more natural to use ~
17:32  fow: teratorn, me too, actually
17:32  teratorn: myrkraverk: why do you want to use ^ at all? that dosn't look right
17:33  myrkraverk: What else is there?
17:33  teratorn: myrkraverk: *~<but not this>~<and not this>~<and not this either>
17:34  myrkraverk: teratorn:: Because I have a miriad of generated files?  It's not just a matter of rm *.o
17:34  teratorn: so what
17:35  teratorn: you want to nuke everthing except files matching certain patterns right?
17:35  myrkraverk: Yes.
17:35  teratorn: this is for "make clean" ?
17:35  myrkraverk: No, just a one shot rm (for now)
17:35  teratorn: ok
17:35  teratorn: so
17:35  teratorn: don't use ^
17:36  teratorn: use * to match everything, then tack on ~pattern for each pattern you want excluded
17:36  myrkraverk: Ok.
17:37  myrkraverk: But how do I match Makefile*<not literal ~>
17:37  myrkraverk: That is, begins with Makefile and does not end with ~
17:38  myrkraverk: Ah Makefile*[^~]
17:40  myrkraverk: And using ~ is good for make cleans too?
17:40  myrkraverk: Or is there something else better then?
17:40  teratorn: no, I would never do this for a make clean
17:40  teratorn: you should always delete the things you *know* will be there, not blow away random files
17:40  myrkraverk: Hmm, ok.
17:41  teratorn: i.e. explicit rm is better than implicit rm
17:41  myrkraverk: Yeah, I guess.
17:42  myrkraverk: I'll just have to tack on *.map *.lst *.obj ....
17:42  myrkraverk: Or even better, have them in a separate directory.
18:16  tlonim: i have ${+elements[(r)*$word*]} .. how do i make it case insenstive 
18:17  tlonim: the $word matching  irrespective of the case of the value of $word
18:19  fow: untested: [(r)*(#i)$word*]
18:19  Dieterbe: Hi!
18:19  Dieterbe:     preexec () {
18:19  Dieterbe:       print -Pn "\e]0;%n@%m: $1\a"  # xterm
18:19  Dieterbe:     }
18:19  Dieterbe: that works, and updates the window title with user@host: <command>
18:20  tlonim: fow: works ..thanks
18:20  Dieterbe: now i'm trying to add a misc var in there. so s/$1/$myvar $1/, this causes the following output in my terminal:
18:20  Dieterbe: 01;32mws sleep 1% 
18:20  Dieterbe: (when command is 'sleep 1')
18:21  fow: you're welcome
18:23  Dieterbe: aha, it seems to be caused by some data *in* my var.. if i put a regular string in there it works. i'll debug a bit further
18:23  Dieterbe: is there a way to strip all "markup" (like colors etc) from a string?
18:35  peth: Dieterbe: best not to put a $1 in a print -P i guess
18:36  Dieterbe: hmm that's something from oh-my-zsh i'm using
18:39  peth: you could either split the line to two prints (print -Pn "\e]0;%n@%m: "; print -n "$1\a") or do a print -n and use explicit prompt expansion on %strings with ${(%):-%string}
18:40  peth: or you could escape all % in $1
18:40  peth: or something i don't know :)
--- Log closed Thu Nov 25 08:25:10 2010
