--- Log opened Fri Nov 19 09:59:40 2010
--- Log closed Fri Nov 19 10:04:41 2010
--- Log opened Fri Nov 19 10:04:50 2010
10:04 --- Users 149 nicks [0 ops, 0 halfops, 0 voices, 149 normal]
10:06 --- Channel #zsh was synced in 77 seconds
--- Log closed Fri Nov 19 12:14:04 2010
--- Log opened Fri Nov 19 12:14:25 2010
12:14 --- Users 155 nicks [0 ops, 0 halfops, 0 voices, 155 normal]
12:15 --- Channel #zsh was synced in 75 seconds
12:15  mountains: ft: Yeah, that looks right-- but how can I get that to run from the prompt?
12:16  ft: create a function?
12:17  ft: where do you get the "foobar:332" string from?
12:18  mountains: I copy it to the clipboard then shove it in any random xterm I have open, and then currently fix up the string manually.
12:19  ft: I'd create an nvim wrapper function for that then.
12:49  iaj: any good zsh book out there
12:59  teratorn: _From Bash to Z-Shell_ is the only one I'm familiar with
13:00  teratorn: how do i create a binding for ctrl-shift-e ? bindkey ... '^E' does not seem to do it... it activates with just ctrl-e...
13:12  cYmen: mountains: maybe you should solve that problem where you generate the foobar:332 strings ;)
13:15  ft: teratorn: ^e and ^E are the same character.
13:16  teratorn: ft: so what do I do? :)
13:16  ft: teratorn: you need to deal with it. :)
13:17  teratorn: what does that mean
13:17  ft: there's no way around it.
13:18  ft: you could use alt instead of ctrl. if your terminals sends escape sequences for alt-key combinations, you'd get ^[e and ^[E.
13:19  ft: well, the "there's no way around it" isn't entirely true. it's true for real terminals.
13:20  ft: there are some terminal emulators (read: xterm), that can be configured to send all sorts of escape sequences for all sorts of key combinations.
13:20  ft: to the point where xterm sends an escape sequence instead of ^c, ^z, ^d etc...
13:21  ft: ...which means that normal shell behaviour will be pretty damn broken.
13:21  ft: (yes, I tried once)
13:23  tlonim: teratorn: if you use rxvt then also it can be configured pretty well
13:23  ft: The resources you'd be looking for are modify.*Keys
13:23  teratorn: ft: yes my alt- bindings do differentiate this case fine
13:29  teratorn: *sigh*, why doesn't my ctrl-s appear to send _anything_?
13:30  ft: that's usually a character that does flow control.
13:30  ft: ^q does the opposite.
13:30  ft: setopt noflowcontrol
13:31  teratorn: i see, thanks
13:31  idl0r: ft: hey, i'm using grml's /etc/zsh + the clint prompt but the color stuff for vcs_info seems to be a bit broken in clint http://qasl.de/~idl0r/clint-vcs_info.png - any ideas?
13:31  idl0r: it's zsh-4.3.10
13:32  ft: idl0r: what version of grml-etc-core?
13:32  idl0r: ft: latest git
13:32  idl0r: master branch
13:32  ft: oh wait. clint's prompt.
13:32  idl0r: yeah, the default works fine
13:32  ft: I think he passes the vcs_info values through psvar[].
13:33  ft: And IIRC, that doesn't work with colours.
13:33  idl0r: p_vcs="%(2v.%U%2v%u.)"
13:33  idl0r: [[ -n $vcs_info_msg_0_ ]] && psvar[2]="$vcs_info_msg_0_"
13:33  ft: yep. there you go.
13:33  idl0r: that worked fine with "my" old /etc/zsh
13:34  idl0r: it was a old version of grml's /etc/zsh too :D
13:34  teratorn: I noticed in my .zshrc I have some old commented bindings like "\M-e", but they don't appear to work any more... anyone know what they might be from?
13:34  teratorn: I assume \M is supposed to mean "meta key"
13:35  ft: idl0r: but not clint's prompt, right?
13:35  ft: idl0r: either not clint's prompt, or no colours.
13:35  idl0r: ft: clint & colours
13:35  ft: It could be a but in zsh, that it doesn't hand colours down in psvar[].
13:36  cYmen: hm...so echo ${(s:-:)foo}[2] doesn't work but echo ${${(s:-:)foo}[2]} does...what's going on here?
13:36  ft: idl0r: I can't quite believe that. Unless that's a regression in zsh's psvar[] handling.
13:36  ft: Since I don't *use* psvar, I can't tell.
13:36  idl0r: ah, wait
--- Log closed Fri Nov 19 13:42:33 2010
--- Log opened Fri Nov 19 13:42:51 2010
13:42 --- Users 155 nicks [0 ops, 0 halfops, 0 voices, 155 normal]
13:44 --- Channel #zsh was synced in 80 seconds
--- Log closed Fri Nov 19 13:47:54 2010
--- Log opened Fri Nov 19 13:48:26 2010
13:48 --- Users 155 nicks [0 ops, 0 halfops, 0 voices, 155 normal]
13:48  ft: But as I said, I don't know if that's intended behaviour or not.
13:49 --- Channel #zsh was synced in 75 seconds
13:49  ft: idl0r: are you contacting the mailing list?
13:50  idl0r: i guess i'll do
13:51  ft: idl0r: I could do it, I wanted to avoid a double posting. :)
13:52  idl0r: ft: please do and CC me please idl0r <AT> qasl <DOT> de :)
13:52  ft: idl0r: ok.
13:52  idl0r: ft: i bet you can describe it much better than me
13:54  idl0r: i'll try to find a solution or workaround for now but the prompt and extended PS1 stuff is new for me :D
13:59  cYmen: hm...I have a lot of files name foo-* bar-* stuff-* and such and I would like to rename them so that they end up as foo0001 fooo02... bar0001 bar0002 and so on. Is there a clever way to do that?
14:09  ft: idl0r: arg.... I sent the mail, but mistyped your address. Replaced AT and DOT with a `.'. (Yes, I'm an idiot.)
14:09  cYmen: Can I loop over the output of another loop? 
14:10  cYmen: hm...definitely can with ` `
14:10  idl0r: ft: hehe, no problem
14:11  ft: cYmen: sure you can. there are other loops than `for' loops, you know. pipe the first loop into a while loop.
14:11  ft: while read...
14:13  cYmen: I really need to start using multiple lines.
14:15  cYmen: hm...does zsh have a match like a . in regex?
14:15  cYmen: like a one char *?
14:16  ft: ?
14:17  ft: that's not meant as an extremely short and rude question. :)
14:17  ft: I meant the `?' character. :)
14:18  cYmen: oh.
14:18  cYmen: I was about to explain.
14:19  cYmen: Is it possible to insert newlines in a line after it's completed? So if I move up in the history can I reformat the line?
14:20  ft: alt-enter?
14:21  cYmen: wow
14:21  cYmen: and I can tabs
14:21  cYmen: this almost feels like programming now :o
14:22  idl0r: brb
14:25  ft: idl0r: <http://www.zsh.org/mla/workers/2010/msg00864.html>
14:25  idl0r: ft: thanks :)
16:26 --- paradigm is now known as BigBrother
16:26 --- BigBrother is now known as Big_Brother
16:26 --- Big_Brother is now known as paradigm
16:26 --- paradigm is now known as BigBrotherBot
16:27 --- BigBrotherBot is now known as paradigm
--- Log closed Fri Nov 19 19:02:21 2010
--- Log opened Fri Nov 19 19:02:48 2010
19:02 --- Users 157 nicks [0 ops, 0 halfops, 0 voices, 157 normal]
19:03  Mikachu: doesn't look like it
19:06 --- Channel #zsh was synced in 213 seconds
19:12  Valodim: wow. that's the first thing I ever find missing in zsh
19:12  Valodim: ..and such a simple thing
--- Log closed Fri Nov 19 19:35:50 2010
--- Log opened Fri Nov 19 19:36:38 2010
19:36 --- Users 153 nicks [0 ops, 0 halfops, 0 voices, 153 normal]
19:41 --- mren|off is now known as mren
19:42 --- Channel #zsh was synced in 404 seconds
19:46  Mikachu: Valodim: it is identical to bash, afaict
19:51  Valodim: Mikachu: since when is that an argument for anything? (:
19:53  Valodim: Mikachu: do you think a patch for that would be accepted in reasonable time? I'm entirely unfamiliar with the zsh dev cycle
20:03 --- whiteing1 is now known as whiteinge
20:17  tdn: I some files with special chars in their names. They show up as '20040721-exported_??LR-2272 x 1704-IMG_0501-2.jpg' with ls, but when I autocomplete them with zsh, they show up as: 20040721-exported_$'\177'$'\177'LR-2272\ x\ 1704-IMG_0501.jpg
20:18  tdn: How can I rename those files with zsh, so that the special chars are deleted/sanitized?
20:18  tdn: The problem is, that when I try to do anything with them in zsh, I get errors such as: Use of uninitialized value $177 in regexp compilation at (eval 75) line 1.                                   
20:21  teratorn: that's odd
20:21  tdn: I have tried using the 'rename' command line tool. But I get the same error.
20:21  teratorn: using $'\177' should generate any errors
20:22  teratorn: can you do echo $'\177' without issue?
20:22  tdn: teratorn, that gives me an empty line. No error.
20:24  teratorn: maybe your zsh is buggy, because mine works fine with files that have odd bytes in them
20:24  teratorn: s/files/filenames/
20:25  tdn: teratorn, strange. I use the one that comes with Ubuntu.
20:25  teratorn: tdn: echo $ZSH_VERSION
20:25  tdn: 4.10.3
20:25  teratorn: 4.3.10 you mean
20:25  tdn: 4.3.10 even.
20:25  tdn: Yes :)
20:25  teratorn: same here
20:25  teratorn: maybe it's some option you have set
20:25  teratorn: that is causing something to be eval'ed as a regex
20:25  teratorn: exec zsh -f
20:26  teratorn: then try it
20:26  tdn: teratorn, hmm... Now ctrl+r does not work....
20:26  tdn: Appearently I have no history now.
20:26  teratorn: you'll survive
20:27  tdn: Ok. I just got affraid that the special char had made my history borked.
20:28  tdn: Hmm... No problems now.
20:28  teratorn: so it's something in a startup file, like .zshrc
20:29  teratorn: either an oddball option, or maybe a precmd or something that is borking 
20:29  tdn: Ok.
20:29  tdn: Thanks.
20:30  teratorn: np :)
20:30  tdn: I have this working: for x in *$'\177'$'\177'*; do echo $x; done     But I would like to rename each $x so that the special chars are removed. How can I do that?
--- Log closed Fri Nov 19 20:37:13 2010
--- Log opened Fri Nov 19 20:42:40 2010
20:42 --- Users 154 nicks [0 ops, 0 halfops, 0 voices, 154 normal]
20:43 --- Channel #zsh was synced in 74 seconds
20:59  catsup: man, zsh is cool
21:05  f8l: catsup: Agreed.
--- Log closed Fri Nov 19 21:12:58 2010
--- Log opened Fri Nov 19 21:14:22 2010
21:14 --- Users 153 nicks [0 ops, 0 halfops, 0 voices, 153 normal]
21:17  Mikachu: Valodim: not sure if you could come up with a syntax that doesn't collide with anything
21:17  Mikachu: Valodim: i don't use banghist myself so i'm not sure
21:18 --- Channel #zsh was synced in 335 seconds
21:24  idl0r: ft: do you know clint's mail address? or is he reachable via IRC sometimes?
21:55 --- whiteing1 is now known as whiteinge
--- Log closed Fri Nov 19 22:14:07 2010
--- Log opened Fri Nov 19 22:14:31 2010
22:14 --- Users 150 nicks [0 ops, 0 halfops, 0 voices, 150 normal]
22:15 --- Channel #zsh was synced in 69 seconds
22:49  lauyuen: Hi zsh, I have a question: I'm not root, trying to compile zsh in HOME env
--- Log closed Sat Nov 20 13:48:31 2010
