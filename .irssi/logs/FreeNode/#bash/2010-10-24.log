--- Log opened Sun Oct 24 00:00:09 2010
00:22  galaxywatcher_: What tools would I use if I wanted to do a join or a diff between two files on two separate servers? The obvious thing to do is to move one of the files over to the same server, but in this case, the files are so large I don't have that option.
00:32  jordanm: galaxywatcher_: mount one server location on the other using sshfs?
00:34  galaxywatcher_: jordanm: hmm...interesting...Never heard of this before. I was thinking of using nc (if possible) but this looks like a good way.
00:37  Ward|: i made a littel speech bot for a IRC channel, now i want people to be able to toggle wether it says what they type or not
00:37  Ward|: any idea whats the best way to get that in?
00:38  Ward|: right now its a huge pipe that removes lines and changes stuff liek smileys and common things like wtf
00:38  Ward|: i mean a huge chain
00:38  Ward|: one-directional basically
00:38  Ward|: but i am using a bahs irc client, so i can just echo stuff to it i guess
00:42  dustybin: man im stuck
00:42  Ward|: with?
00:42  Ward|: i'm not a very experienced bash programmer but you never know
00:43  dustybin: i am trying to create a script what creates incremental backups using tar
00:43  dustybin: that part works perfectly
00:43  dustybin: but i need a way so that the files rotate every 2 weeks
00:43  dustybin: http://codepad.org/dPwv6Euv
00:43  dustybin: i think i need: weekly.1  and weekly.2
00:44  dustybin: when weekly.2 has 7 files inside it, delete weekly.1 and re-create
00:45  \DSAFEW\: dustybin, what you're doing is a very very common task for sysadmins, and cron is a reliable service to use for it
00:46  \DSAFEW\: don't go re-inventing the wheel, look up "cron backup" or something along those lines
00:46  dustybin: \DSAFEW\: the cron just activates the script, i need a way for it to rotate, that will involve some bash trickery
00:46  dustybin: \DSAFEW\: all the tar incremental backup scripts on google are from 2000
00:48  \DSAFEW\: dustybin, use cron weekly for your file replacement script, and a cron daily for your incremental "script", there's not much to it, gotta rtfm on cron and look at some examples
00:49  dustybin: interesting
00:58  ross`: can someone help me, im trying to have it show ross@sparkles ~ $ on my bash promt, and i want each letter in sparkles to be a different color, i typed this out but its broken...
00:58  ross`: PS1='\[\033[01;32m\]\u@\e[31s\e[36a\e[33r\e[34k\e[35l\e[32e\e[37s\e[0m\[\033[01;34m\] \w \$\[\033[00m\] '
--- Log closed Sun Oct 24 01:04:35 2010
--- Log opened Sun Oct 24 01:04:59 2010
01:04 --- Users 517 nicks [0 ops, 0 halfops, 0 voices, 517 normal]
01:05  \DSAFEW\: pretty colors
01:05  ross`: i cant get it working
01:05  ross`: :(
01:05  ross`: this sucks
01:06  ross`: it looks right to me
01:06 --- Channel #bash was synced in 93 seconds
01:06  \DSAFEW\: paste your new ps1
01:08  ross`: i deleted it
01:08  ross`: i have no idea what was wrong
01:08  ross`: i want it to instead of \h show sparkles
01:08  ross`: with the letters being different colors
01:08  ross`: like a rainbow
01:09  \DSAFEW\: here's a list of colors http://networking.ringofsaturn.com/Unix/Bash-prompts.php
01:12 --- hunterm is now known as all
01:12  ross`: so wait
01:12  ross`: do each of my colors
01:12 --- all is now known as hunterm
01:12  ross`: have to be in their own []
01:12  ross`: so like \[\e[31\]s
01:12  ross`: for s to be red
01:14  ross`:  \[\e[31\]s\[\e[32\]p\[\e[33\]a\[\e[34\]r\[\e[35\]k\[\e[36\]l\[\e[37\]e\[\e[31\]s
01:14  ross`: is that what i want
01:14  ross`: i think
01:14  ross`: \DSAFEW\: ?
01:14  ross`: does that look correct
01:15  ross`: to show sparkles with each letter a different color
01:15  Ward|: i made a littel speech bot for a IRC channel, now i want people to be able to toggle wether it says what they type or not
01:15  Ward|: any idea whats the best way to get that in?
01:15  Ward|: right now its a huge pipe that removes lines and changes stuff liek smileys and common things like wtf
01:15  \DSAFEW\: ross`, you seem to be missing "m"s right?
01:16  ross`: \DSAFEW\: do i need them
01:16  ross`: one tutorial i looked at didnt include them
01:16  \DSAFEW\: ross`, I think so.
01:16  ross`: i only want foreground color
01:16  ross`: not backgground
01:17  ross`: what m do i use hmmm
01:17  ross`: \[\e[31\]s\[\e[32\]p\[\e[33\]a\[\e[34\]r\[\e[35\]k\[\e[36\]l\[\e
01:17  ross`: oops
01:18  \DSAFEW\: PS1='\[\e[31m\]test>'
01:18  \DSAFEW\: you need the m
01:18  ross`: its not 23;1m
01:18  ross`: ?
01:18  ross`: every damn tutorial shows different stuff
01:20  \DSAFEW\: try it out and see what works :D
01:20 --- JmZ is now known as JmZ_
01:21  ross`: \DSAFEW\: nice i got it working
01:22  \DSAFEW\: ross`, grats :D
01:22  ross`: \DSAFEW\: version two is gonna have it so it randomly generates the colors
01:22  ross`: for each letter
01:22  ross`: so every tmie i open a terminal
01:22  ross`: its different colors
01:22  The-Compiler: because they're all...
01:22  The-Compiler: !crap
01:22  greybot: The overwhelming majority of bash scripts, code, tutorials, and guides on the Internet are crap. Sturgeon was an optimist.
01:30  ross`: will those color codes work in an issue.net
01:30  ross`: file
01:30  ross`: to add color to an ssh issue banner
01:30  ross`: are the color codes part of bash
01:30  ross`: or how are they used
01:31  geirha: They mean nothing to bash
01:31  geirha: They may mean something special to your terminal though.
01:45  Ward|: sed -u 's/http[^ ]* /website /' this does not work if the URL is at the end of a line, any ideas?
01:48 * yitz_ prods memimomu
01:49  Ward|: never mind it was the stupid space
01:50 --- bLuCiFeR is now known as blu
02:10  Ward|: whats the best way of substituting all words that start with http:// ?
02:12  ferret: sed 's#http://[^ ]*#whatever#g'
02:14  Ward|: can you please explain the command?
02:14  Ward|: thanks :)
02:15  Ward|: works great though just what i needed :)
02:16  ferret: you can use any printable character in place of #, as long as it isn't something that is used between them
02:16  ferret: so you can't use h or t or p or : or / etc.
02:16  yitz_: ferret: non-printable, too
02:17  ferret: not portably ;)
02:17  Ward|: what would be a good char for a URL?
02:17 * Ward| is thinking whats not allowed in a URL
02:17  ferret: % or # or , are often used
02:17  Ward|: yeah
02:17  ferret: there isn't any really
02:18  yitz_: Oh... ferret: I thought you could do sed $'x\0x01blah\0x01foo\0x01'  or similar :S
02:19  Ward|: URL's wont have spaces i guess
02:19  ferret: you probably can in most seds
02:20  ferret: posix allows you to use any character except \ or newline, but I'm not sure what it means exactly by character.
02:20  ferret: But, there are historical seds that allow newline
02:20  ferret: Ward|: actually spaces should be ok
02:21  Ward|: ferret, to use for the sed line right?
02:21  Ward|: ferret, or you mean ok in a url? (that would be really strange)
02:21  ferret: you can have spaces in a url
02:21  Ward|: damn thats annoying
02:22  Ward|: then the IRC client probably wont even highlight it correctly anymore though
02:22  ferret: you can have pretty much anything after the third / in a http url, except perhaps newline or NUL, and those you can maybe still have theoretically
02:22  Ward|: yeah but aspaces... i never saw that afai remember
02:23  ferret: Ward|: it's considered pretty rude to copy urls with spaces in to people
02:23  ferret: Ward|: most web browsers will change all the spaces to %20 when you put the URL on the clipboard
02:24  Ward|: ferret, yeah so space is a good choice :)
02:26 --- naveen_ is now known as nibnob
02:37  belak: How can I make sure when I do &> file that it keeps flushing to the file?
02:38  belak: Or how can I start something in screen and have it not attach so I can put it in rc.local?
03:40  latenite: Hi folks, When I open "bash" I want the prompt to change with it. How can I do that in ONE command? http://pastie.org/1244068
03:40  ferret: with "it"
03:41  ferret: I see
03:41  ferret: try PS1=blah bash
03:42  ferret: var=value command    # is a syntax for setting environmental variables, which for bash should also become shell variables
03:43  latenite: ferret, isn t working  http://pastie.org/1244071
03:44  ferret: that's probably because when starting bash, PS1 is being set in some initialisation file or whatnot
03:45  latenite: ferret, ook? So is there a way around that? When I open bash I realy need it to look different in the prompt.
03:46  ferret: Well, the best way would probably be to put a line like this at the bottom of ~/.bashrc
03:46  ferret: [[ $OPS1 ]] && PS1="$OPS1"
03:47  ferret: then you can use OPS1 as an override variable using the syntax I gave above
03:47  latenite: ferret, I am using that script on a remote box. So editing bashrc will not be good
03:48  ferret: Well, then, your only option really is to tell it not to run initialisation files like bashrc or bash_profile that might alter PS1
03:48  ferret: bash -c 'IFS="whatever"; exec bash --norc --noprofile'
03:49 --- Tramp_ is now known as Tramp
03:50  latenite: ferret, this is just not doing it http://pastie.org/1244082
03:50  ferret: wait, that's not quite right
03:50  ferret: Sorry, bit tired
03:51  ferret: bash -c 'PS1="whatever " exec bash --norc --noprofile'
03:51  ferret: you can replace the bash -c bit with ssh or whatever
03:51  Colloguy: why not just: PS1=whatever bash --norc --noprofile
03:51  Colloguy: oh, nvm
03:51  ferret: Because the profile will contain some env vars and the exec will preserve them
03:52  ferret: Skipping the initialisation files isn't a particularly amazing workaround but that does negate some of the damage (everything in ~/.bash_profile should be process-inheritable in theory)
03:53  latenite: ferret, I am sorry but I cant get ot to work: http://pastie.org/1244088
03:53  ferret: # bash -c 'PS1="whatever " exec bash --norc --noprofile'
03:53  evalbot: ferret: whatever
03:53  ferret: WFM
03:54  ferret: You put a ; in there
03:54  ferret:  <ferret> var=value command    # is a syntax for setting environmental variables
03:54  ferret: var=value; command   # isn't
03:55  latenite: ferret, Ah cool that did the trick :)  man thank you
03:55  ferret: that just sets a normal shell variable, not an environment one
04:10  CodeHelpMachine: Can I delete all files except the specified ones?
04:10  CodeHelpMachine: rm -rf ^(v8.c|php_v8.h|config.m4)
04:13  CodeHelpMachine: I'll try enabling extended pattern matching and use rm !(file1|file2|file3)
04:14  latenite: Hi, I cant use "df" to awk the used space BECAUSE it breaks lines: http://pastie.org/1244123 How would I reliably define used space on filesystem?
04:22  Colloguy: latente, maybe you can count from the back...
04:22  Colloguy: df | awk 'NF > 5 { print $(NF-3) ; }'
04:32  Ward|: if i do echo "foo" | i want it to replay with echo "bar" , but the stream must stay open, and it must work every time it receives foo
04:32  Ward|: since echo "foo" is really just IRC output
04:48  Bushmills: # output=foo;  echo "${output/foo/bar}"
04:48  evalbot: Bushmills: bar
04:56  Ward|: Bushmills, thanks
04:57  Ward|: Bushmills, its inside a chain though
--- Log closed Sun Oct 24 05:05:42 2010
--- Log opened Sun Oct 24 05:06:06 2010
05:06 --- Users 505 nicks [0 ops, 0 halfops, 0 voices, 505 normal]
05:07 --- Channel #bash was synced in 89 seconds
05:16  Ward|: Bushmills, i think you misunderstand
05:17  Ward|: Bushmills, i'm using this irc client written in bash, itjust uses stdin and stdout, so when someone says something specific i want to reply to it
05:17  Ward|: so the client will output "foo" into the pipe, then "bar" should be replied
05:18  Ward|: thanks though for the help :)
05:18  skered: What do you do when bash won't accept vi mode?
05:18  skered: esc, k... types a k
05:20  skered: I think it's screen fucking shit up...
05:21  skered: How do you validate you're in vi mode? set | grep vi?
05:21  skered: I see it in SHELLOPTS
05:24  skered: jebus I can't operate if I'm not in vi mode..
05:43  CodeHelpMachine: Is there a better way to write this:? phpize && ./configure --with-v8 && make && sudo make install && sudo /etc/init.d/apache2 reload
05:43  CodeHelpMachine: As soon as one command fails I want it to exit
05:44  CodeHelpMachine: Kind of like try catch?
05:45  CodeHelpMachine: command && another && yetanother && andagain && andagainstill && blah && blahblah && echo "Everything completed successfully"
05:48  Tramp: CodeHelpMachine: check errexit, (set -e) and maybe the ERR trap
05:49  CodeHelpMachine: The err trap sounds nice, thanks Tramp
05:49  Tramp: yw
05:58  twb: Using pattern substitution, is it possible to prepend a string to each value in the "$@" array?
05:59  CodeHelpMachine: You can use a while [$1] loop and before you shift, you prepend the string to $1?
05:59 * CodeHelpMachine is not sure about changing the $1 variables though
06:00  twb: Yeah, I know I can do it with a loop, but I can't be bothered -- it'd make the line too long.
06:00  twb: It's for a one-liner in .bashrc such that "cve YYYY-NNNN [...]" will run $BROWSER cve.mitre.org/foo?YYYY-NNNN
06:01  twb: If I can make it variadic while still fitting into 80 characters, that'd be a nice bonus.
06:04  CodeHelpMachine: Something like: function cve() { $BROWSER "cve.mitre.org/foo?$1" "${@[@]:2}" }
06:04  CodeHelpMachine: I'm sure it's horrible wrong
06:05  CodeHelpMachine: # $@
06:05  evalbot: CodeHelpMachine: no output
06:05  CodeHelpMachine: # echo "$@"
06:05  evalbot: CodeHelpMachine: no output
06:06  CodeHelpMachine: # function cve() { echo "firefox blah.com?$1 ${@:2}" }; cve 2010-blah --some args
06:06  evalbot: CodeHelpMachine: Missing terminating quote, bracket or keyword
06:06  CodeHelpMachine: # function cve() { echo "firefox blah.com?$1 ${@:2}"; }; cve 2010-blah --some args
06:06  evalbot: CodeHelpMachine: firefox blah.com?2010-blah --some args
06:06  CodeHelpMachine: aha!
06:07  Ward|: i want to do something whenever i get a certain string as input, in a piped chain of commands
06:07  CodeHelpMachine: Ward|: e.g. for each line that is output?
06:07  Ward|: CodeHelpMachine, yeah, but the pipe uses grep --line-buffered and sed -u
06:08  CodeHelpMachine: `buffer
06:08  Ward|: CodeHelpMachine, its IRC output
06:08  CodeHelpMachine: !buffer
06:08  CodeHelpMachine: I can't remember the command
06:08  CodeHelpMachine: !faq buffer
06:08  greybot: http://mywiki.wooledge.org/BashFAQ/009 -- What is buffering?  Or, why does my command line produce no output: tail -f logfile | grep 'foo bar' | awk ...
06:08  Ward|: CodeHelpMachine, the pipe works fine as is
06:08  Ward|: i need to use -u
06:08  Ward|: else it will not work
06:08  twb: CodeHelpMachine: sorry, you missed the point
06:09  twb: CodeHelpMachine: the idea is cve 1 2 3 will add the http://.../ part to all of 1 2 and 3
06:09  twb: So "f 1 2 3" ==> $BROWSER http://example.net/{1,2,3}
06:09  CodeHelpMachine: Ward|: tail -f /var/log | while read -r line; do echo $line; done ?
06:10  Ward|: CodeHelpMachine, no, i use a IRC client written in bash, so i dont need to tail a log :)
06:10  CodeHelpMachine: I know that was just an example lol
06:10  CodeHelpMachine: and wow cool a bash irc client
06:10  Ward|: yeah let me get you the link
06:11  Ward|: its really awesome
06:11  Ward|: CodeHelpMachine, http://github.com/halhen/shic
06:12  CodeHelpMachine: twb: I guess I dont understand.. What would I get if I did $(foo 'my' 'name' 'is' 'eboyjr') ?
06:12  CodeHelpMachine: where foo is cve
06:12  twb: You'd get an error
06:14  Ward|: CodeHelpMachine, sorry i have no idea how i could use that in a pipe
06:14  CodeHelpMachine: What arguments does cve expect? Maybe someone else here can help too
06:14  twb: cve takes zero or more arguments that are CVE IDs.  It calls $BROWSER once, with the set of URLs corresponding to those CVE IDs.
06:15  CodeHelpMachine: Ward|: grep | sed -u | while read -r line; do something with $line; done
06:15  twb: e.g. CVE ID 2010-0001 corresponds to the URL http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-0001
06:17  CodeHelpMachine: Would that be $(cve 2010-0001)?
06:17  CodeHelpMachine: twb: ^
06:18  twb: CodeHelpMachine: if you didn't run it in a subshell, yes.
06:19  CodeHelpMachine: well yeah
06:20  CodeHelpMachine: so why can't it be function cve() { $BROWSER blah?name=$1; }
06:21  twb: Because it should accept ZERO OR MORE arguments, *not* exactly one argument.
06:22  twb: That's what "variadic" means.
06:22  CodeHelpMachine: twb: Does it open more browser tabs if you enter more ids?
06:22  twb: CodeHelpMachine: that's up to $BROWSER.
06:22  twb: If BROWSER=echo, for example, it would print all URLs on a line, separated by whitespace.
06:23  CodeHelpMachine: Ahhh okay that makes sense
06:23  CodeHelpMachine: I don't know to do it in a few lines
06:23  CodeHelpMachine: I know know*
06:24  twb: No problem.
06:24  CodeHelpMachine: One sec
06:24  Ward|: CodeHelpMachine, thanks again i'll try it
06:26  CodeHelpMachine: okay i have something just let me test it
06:30  Ward|: CodeHelpMachine, the pipe also cotinues afterwards
06:31  tmr: twb, why do you care about how long it is?
06:32  twb: tmr: because I don't like bloating my .bashrc with code I use occasionally
06:33  CodeHelpMachine: This is what I have so far http://pastie.org/1244272
06:33  CodeHelpMachine: If you get my point.. but I get ./cve.sh: line 8: ${@[*]}: bad substitution
06:35  Ward|: CodeHelpMachine, >irc output comes in> | if there's a string foo comming in i want to echo bla | grep -v --line-buffered 'z' |
06:35  Ward|: CodeHelpMachine, something liek that
06:36  CodeHelpMachine: twb: printf "$PREPEND%s" "${@}"
06:36  Ward|: CodeHelpMachine, with echo'ing bla i mean liek if i would enter it in the terminal after the irc lcient is connected and the lines are comming in when someone speaks
06:37  Ward|: CodeHelpMachine, i want to do an IRC command when someone asks for it basically :)
06:38  Ward|: CodeHelpMachine, i hope its more clear now what i mean
06:38  CodeHelpMachine: tmr: printf "$BROWSER http://cve.mitre.org/cgi-bin/cvename.cgi?name=$PREPEND%s\n" "${@}"
06:38  CodeHelpMachine: Whoops
06:38  CodeHelpMachine: twb: printf "$BROWSER http://cve.mitre.org/cgi-bin/cvename.cgi?name=%s\n" "${@}"
06:39  CodeHelpMachine: Ward|: one sec
06:39  Ward|: CodeHelpMachine, yes of course i didn't mean to cut in :)
06:40  Ward|: CodeHelpMachine, figured i would just explain my story and then wait for your reply :) i'm in no hurry
06:40  CodeHelpMachine: lol okay
06:41  CodeHelpMachine: command=${line%% *}; if [ $command = "!foo" ]; then echo "!foo is bar"; fi
06:41  CodeHelpMachine: Thats like a bot
06:42  CodeHelpMachine: "$command" = "!foo" rather
06:42  Ward|: wont the ; break the pipe?
06:42  CodeHelpMachine: Ward|: If it's in a while loop then no
06:43  Ward|: i;m wildly confused
06:43  Ward|: lol
06:43  CodeHelpMachine: okay
06:43  Ward|: (i see no while)
06:43  tmr: twb, then don't but it in .bashrc.
06:44  CodeHelpMachine: ircoutput | while read -r line; do command=${line%% *}; if [ "$command" = "!foo" ]; then echo "!foo is bar"; fi; done;
06:45  Ward|: CodeHelpMachine, and is there should be | ircoutput at the end ?
06:45  Ward|: jsut to make sure
06:46  Ward|: to pipe it further to other stuff
06:46  Ward|: espeak is the end of the pipe
06:46  CodeHelpMachine: no to continue piping, you have to put it inside the while
06:46  CodeHelpMachine: echo $line | outputline
06:47  CodeHelpMachine: echo $line" | espeak
06:48  lhunath: piping to read is generally a bad idea
06:48  lhunath: !faq disappear
06:48  greybot: http://mywiki.wooledge.org/BashFAQ/024 -- I set variables in a loop. Why do they suddenly disappear after the loop terminates? Or, why can't I pipe data to read?
06:48  lhunath: unless you understand the consequences.
06:49  lhunath: still; while read; do ..; done < <(command) # is still a better idea
06:49  Ward|: replace done with the command?
06:50  CodeHelpMachine: no done is still there
06:51  CodeHelpMachine: lhunath: is still; a command or are you just saying still
06:52  Ward|: i'm experimenting with it
06:52  Ward|: i'll try some things first
06:53  CodeHelpMachine: I have been using tail -f with while read, can someone tell me if it is bad?> wget -q -O - 'http://eboyjr.ath.cx:8080/scripts/webaccess.sh'
06:54  CodeHelpMachine: wget -q -O - http://eboyjr.ath.cx:8080/scripts/webaccess.sh
07:30  hunterm: anyone mind helping me with my bash prompt?
07:30  hunterm: whenever i type out a long command, it starts overwriting the prompt
07:30  hunterm: it's just a prompt (thought it didn't do this when it had no color in it)
07:34  CodeHelpMachine: I had the same problem
07:35  CodeHelpMachine: It's something about your escape sequences for your colors
07:35  CodeHelpMachine: But I wasn't able to solve it and just used a non-colorful one instead
07:35  CodeHelpMachine: I didn't try using $(tput setf 5) instead though
07:35  CodeHelpMachine: Maybe that will work for you
07:36  hunterm: nope
07:38  go|dfish: !faq prompt
07:38  greybot: http://mywiki.wooledge.org/BashFAQ/053 -- I have a fancy prompt with colors, and now bash doesn't seem to know how wide my terminal is.  Lines wrap around incorrectly.
07:38  hunterm: Oh.
07:38  hunterm: :-)
07:40  CodeHelpMachine: Good to know
07:40 * CodeHelpMachine likes change the color of part of the prompt depending on whether $? is 0 or not :)
07:49  hunterm: It still doesen't work fine....
07:50  CodeHelpMachine: What's wrong with it?
07:51  hunterm: It still overwrites the prompt, after checking the shopt, and changing my color variables to use tput
07:52  CodeHelpMachine: hunterm: Ubuntu?
07:52  CodeHelpMachine: I still have the same problem
07:52  hunterm: CodeHelpMachine: No, arch linux
07:53  CodeHelpMachine: ah
07:53  CodeHelpMachine: !faq colors
07:53  greybot: http://mywiki.wooledge.org/BashFAQ/037 -- How can I print text in various colors?
07:57  CodeHelpMachine: hunterm: What do you have so far?
08:00  TheBonsai: yß
08:00  TheBonsai: er
08:00  TheBonsai: y0
08:01  yitz_: y1
08:01  CodeHelpMachine: y2?
08:01  yitz_: !y2
08:01  greybot: !y1
08:01  yitz_: !y3
08:01  CodeHelpMachine: !y0
08:01  greybot: y1
08:02  CodeHelpMachine: dumb.
08:02  yitz_: !y1
08:02  greybot: # read v <<< "y1"; n=${v#y}; r=y$((n+1)); echo $r
08:02  evalbot: greybot: y2
08:03  CodeHelpMachine: !y7
08:07  CodeHelpMachine: !y1
08:07  greybot: # read v <<< "y1"; n=${v#y}; r=y$((n+1)); echo $r
08:07  evalbot: greybot: y2
08:07  hunterm: CodeHelpMachine: Sorry, was brb, what do you mean?
08:08  CodeHelpMachine: hunterm: What did you put as PS1? Maybe there was something you missed or something
08:09  pgas: often the solution to PS1 problems is to put \[ \] around the colors
08:10  CodeHelpMachine: Yeah that didn't work either
08:10  CodeHelpMachine: For me too
08:10  CodeHelpMachine: even the set +e thing
08:13  hunterm: CodeHelpMachine: http://pastebin.com/NrYvGNMC
08:14  pgas: you need \[ \] around all the colors
08:14  hunterm: when i did \e\[, that messed up everything
08:15  pgas: PS1="\[$varwiththecolor\]"
08:15  hunterm: oh
08:16  TheBonsai: \[ \] tags regios that bash does not have to count into the value for the line length
08:16  hunterm: YAY!
08:16  hunterm: It's working fine now :)
08:16  TheBonsai: for example because they don't move the cursor forward, as color codes do.
08:17  hunterm: Thanks :)
08:17  CodeHelpMachine: Should probably use tput, but it's alrigt
08:18  hunterm: Considering I only use this one computer, it'll be fine :-)
08:18  hunterm: And really, who uses obscure terminals that don't accept those codes anymore? ;-D
08:19  TheBonsai: enough
08:19  hunterm: plus, who cares about my color codes?
08:19  TheBonsai: less enough :)
08:19  See093: how to configure crontab to schedule a backup of the home directory for Monday,Tuesday,Wednesday,Thursday,Friday. the backup is to use tar.
08:20  TheBonsai: read man bash about the crontab
08:20  hunterm: man crontab you mean
08:21  TheBonsai: i mean man bash, since he asks in #bash he thinks crond(8) is a plugin for bash.
08:21  hunterm: oh
08:21  hunterm: lol
08:21  drake1: hi, look I wrote a new bash program http://pastebin.com/GnnD5jA9 :-)
08:21  See093: ok thnks for the help
08:22  TheBonsai: drake1: ok, let it run some 60 years :
08:23  drake1: TheBonsai: it's only for small caches
08:23  CodeHelpMachine: bash is wayyyyyyy to slow to do anything like that
08:24  drake1: so that one wont shift ones own cache by default
08:24  TheBonsai: drake1: oh, it's a formatter. sorry :)
08:24  drake1: only had to be done one time
08:28  drake1: take for example a cache with 911 entries, one could quickly calculate some more / less random cache to shift
08:28  pgas: printf "%6i%6i%6i%6i%6i%6i%6i%6i%6i%6i%6i%6i%6i\n" $(<primes.txt)
08:29  drake1: good one pgas, did you eval first?
08:29  pgas: eval?
08:29  drake1: for the complete printf template
08:29  pgas: no idea what you are talking about
08:29  drake1: rather cumbersome to adjust
08:30  CodeHelpMachine: You can use a str_repeat function instead
08:30  drake1: good idea
08:30  pgas: well no more or no less than yout test $COL = ----------
08:30  drake1: s,$,---
08:30  drake1: to add three columns
08:31  drake1: yours is faster though
08:31  CodeHelpMachine: Here my function, http://eboyjr.ath.cx:8080/scripts/phpbash/str_repeat.sh (not portable). printf "$(str_repeat 4 "%6i") $(<primes.txt)
08:32  drake1: interesting
08:33  drake1: `perl -e 'print "%6i" x 4'` could also work
08:33  CodeHelpMachine: seq is gnu i think (or something)
08:34  yitz_: !seq
08:34  greybot: seq(1) is a highly nonstandard external command used to count to 10 in silly Linux howtos. Use one of these instead: for x in {1..10} (bash3.x) or for ((x=1; x<=10; x++)) (bash 2.04+) or i=1; while [ $i -le 10 ]; do ...; i=$(($i+1)); done (ksh/POSIX)
08:36  CodeHelpMachine: Cool I updated my code
08:36  sn18: CodeHelpMachine: also i would not use command substitution
08:36  TheBonsai: printf "%6i %6i %6i %6i %6i %6i\n" $(<file)
08:36  CodeHelpMachine: sn18: Where am I doing that?
08:36  TheBonsai: $()
08:37  CodeHelpMachine: !$()
08:37  greybot: Command Substitution: "$(foo bar)" causes the command 'foo' to be executed with the argument 'bar' and "$(..)" will be replaced by the *output*. See http://mywiki.wooledge.org/BashFAQ/002 and http://mywiki.wooledge.org/CommandSubstitution
08:37  CodeHelpMachine: !`
08:37  greybot: The backquote (`) is used in the old-style command substitution, e.g. foo=`command`. This syntax is deprecated in favor of foo=$(command). Backslash handling inside $() is less surprising, and $() is easier to nest. See http://mywiki.wooledge.org/BashFAQ/082
08:37  CodeHelpMachine: sn18: Why wouldn't you use it?
08:38  CodeHelpMachine: Either way I'm using a while loop now
08:40  sn18: CodeHelpMachine: subshell
08:40  TheBonsai: it takes memory, for example. the way drake1 (or me) used it for the other thing assumes the file is small+
08:41  drake1: 23 file page items might be enough cache
08:41  CodeHelpMachine: Ah right
08:45  drake1: ( had to tr '\n\r' ' ' < primes.htm > primes.htm first )
08:46  drake1: s,.htm,.txt,2
08:47  pgas: tr -d '\r' would have been enough
08:47  drake1: true
08:47  CodeHelpMachine: !faq subshell
08:47  greybot: CodeHelpMachine: No matches found at http://mywiki.wooledge.org/BashFAQ
08:47  pgas: IFS+=$'\r'
08:47  CodeHelpMachine: !subshell
08:47  greybot: http://mywiki.wooledge.org/SubShell
08:48  drake1: or IFS=$'\r\n '
08:55  dannyboy775: Is there any way I could pipe the variables in my bash script in to python in order to do arithmetic on them?
08:57  drake1: exec 3>fifo ; echo $param >&3
08:57  pgas: dannyboy775: echo "$var + $othervar" | python
08:58  CodeHelpMachine: a=5; b=7; python -c "a = $a; b = $b; print a*b"; as well (as long as they are integers)
08:58  pgas: (if you need integer arithmetic bash can do it)
08:58  CodeHelpMachine: # python
08:58  evalbot: CodeHelpMachine: bash: python: command not found
--- Log closed Sun Oct 24 09:04:49 2010
--- Log opened Sun Oct 24 09:05:12 2010
09:05 --- Users 498 nicks [0 ops, 0 halfops, 0 voices, 498 normal]
09:06 --- Channel #bash was synced in 90 seconds
09:08  drake1: missing curlies
09:09  drake1: # echo 1 2 3 |awk '{ print $1 * $2 * $3 }'
09:09  evalbot: drake1: 6
09:09  drake1: there
09:09  CodeHelpMachine: function dopython() { python -c "import sys; bash = sys.argv[1:]; $1" "${@:2}" }; dopython "print(bash)" these are all arguments
09:10  CodeHelpMachine: That way you can use python without worrying about syntax issues
09:12  sn18: CodeHelpMachine: missing ; before } :p
09:14  CodeHelpMachine: Heh, thanks
09:20  TheBonsai: using "function" keyword :D
09:22  drake1: how would a number be able to exist without a prime?
09:22  drake1: j/k
09:22  drake1: bye
09:28  invisibl: I'm absolutely retarded and just started familiarizing myself with bash so I can manipulate the filesystem better on a server I'm working with
09:28  invisibl: I just unzipped a file in a directory... I want to move all the contents in that newly created directory to the one above it
09:29  invisibl: so basically, i just want to move the contents of one directory to another
09:32  CodeHelpMachine: mv -v ./tardirectory/* ./
09:32  CodeHelpMachine: Moves everything from tardirectory into the current directory
09:35  invisibl: does that move all folders within that directory too?
09:35  CodeHelpMachine: Oh I think you need the -R flag, but probably now
09:35  CodeHelpMachine: Try it ;) You can move directories with this command so I dont see why now
09:35  CodeHelpMachine: not*
09:36  invisibl: i think it worked
09:36  invisibl: most files seem to be there
09:36  CodeHelpMachine: great
09:36  CodeHelpMachine: check for hidden files
09:36  invisibl: i'm used to using a visual interface like winscp since im on a windows box
09:36  invisibl: (i've got absolutely 0 experience with linux)
09:36  invisibl: so this is insanely foreign to me
09:37  CodeHelpMachine: Ah okay
09:38  CodeHelpMachine: Go to the tardirectory folder and run
09:38  CodeHelpMachine: ls -a
09:38  CodeHelpMachine: check for anything besides . and ..
09:42  TheBonsai: or use -A
09:42  CodeHelpMachine: whats that?
09:42  TheBonsai: "almost all"
09:42  TheBonsai: filters . and ..
09:42  CodeHelpMachine: oh so its besides . and ..
09:42  CodeHelpMachine: cool
09:54  vahid: hi all
09:56 --- vezeena is now known as genjix
10:00  vahid: i recover my damage hard disk, some file restore without name and only number instead of regular name, i need find some type of file, i use "file" commad to check type of files, but how can i give all files to this command (file)?
10:01  vahid: for filename in `find . -name "*" ; do .... is slow
10:01  vahid: any idea?
10:01  yitz_: !find
10:01  greybot: http://mywiki.wooledge.org/UsingFind
10:01  yitz_: Running 'file' on * will be slow. It needs to read a chunk of each file
10:03  vahid: yitz_ i need check all files
10:04  yitz_: Then it will be slow. With bash4, you can do: shopt -s globstar ; for i in ** ; do if [[ $(file "$i") = *ASCII* ]] ; then ... ; fi ; done
10:07  vahid: yitz_ tnx
10:20  Richlv: this is probably more of a gnu date question... but maybe somebody here knows how could i do something like "date -d 2010-09-30T05:20:33+6hours" ? "date -d now+6hours" works, but specifying date & time does not :/
10:24  yitz_: Richlv: 2003-07-31 -1 month is an example from the info doc
10:24  yitz_: $  date -d '2003-07-31 -1 month'
10:24  yitz_: Tue Jul  1 00:00:00 EDT 2003
10:24  yitz_: Or: date --date="$(date +%Y-%m-15) -1 month"
10:25  Richlv: yitz_, yes, that works - but as soon as input is iso date string, it does not. iso date string alone works, though, so it is properly recognised...
10:30  Richlv: mm. replacing 'T' with a space seems to make it work
10:30  ibqn: can this script http://paste.pocoo.org/show/279527/ be improved or it's already perfect?
10:39  geirha: !tests
10:39  greybot: In bash; consistently use [[ .. ]] to test strings or files and (( .. )) to test numbers or arithmetics. Do *NOT* use [ .. ] in bash, *only* in sh. See http://mywiki.wooledge.org/BashSheet#Tests
10:39  Kharec: hi all :)
10:50  ibqn: geirha, is this one better? http://paste.pocoo.org/show/279529/
10:54  geirha: if ((started)); then
10:54  dknight: I have directories 00001 to 00739 with some directories missing in between for which I cant setup a for loop like for foo in {00001..00739}
10:54  sn18: ibqn: why do you do ntp-client ... | grep outside the if..then..else when you use it only in if part
10:54  dknight: how can I check whether $foo exists?
10:55  geirha: shopt -s extglob    then   for foo in +([0-9]); do
10:56  geirha: Should iterate filenames with only digits
10:56  dknight: geirha: thank you
11:00  geirha: Another approach; for dir in */; do [[ $foo != *[!0-9]*/ ]] && (( 10#$foo < 740 )) || continue
11:00  geirha: err, either s/foo/dir/g or s/dir/foo/g ^^
11:01  geirha: and ((10#${foo%/} < 740))
11:01 * geirha needs coffee
11:11  xenol: hello guys. is there a way to modify stderr output to have it say "Error: '<directory>': Permission denied" instead of "<program_name>: '<directory>': Permission denied". can it be done without redirecting stderr to stdout?
11:19  dustybin: im having problems with my incremental backup script
11:20 --- JmZ_ is now known as JmZ
11:21  brabo: dustybin: just ask the question you want to ask
11:27  geirha: xenol: ... 2> >(sed 's/^Error:/<program_name>/' >&2)
11:28  evelyette: hi
11:28  evelyette: is there any good tool available that let's you write grammatic of your bash scripts ... maybe bash completion or something
11:28  flippo: geirha, your kungfu is powerful
11:30  xenol: geirha: find /root -type f 2> >(sed -e 's/^[a-z]+:/Error:/g' >&2) doesn't seem to work
11:31  veleno_: hello. how do I force bash to be the default shell when doing an ssh x.x.x.x ? currently, it seems it is set to /bin/zsh
11:31  veleno_: in particular, i would like ssh x.x.x.x <<< "echo $SHELL" to be /bin/bash, instead of /bin/bash
11:31  veleno_: (instead of /bin/zsh )
11:32  geirha: xenol: Oh, I got it the other way around. Anyway, change the + to \{1,\}
11:33  dustybin: brabo: here are my crontab options and 2x scripts   http://codepad.org/sI4Omn9h
11:34  dustybin: brabo: this system works, however, every time it rotates, the first backup is big because the increment starts again
11:35  dustybin: maybe i should use a already built solution instead of trying to code this myself..
11:36  evelyette: can I use bash completion to define my own command ./text and on a tab press, the list of parametrs would be displayed, let's say [a, b, c, d]
11:36  evelyette: so "./text a", "./text b", ... are possible commands
11:36  evelyette: ?
11:37  geirha: Yes, ''help complete''
11:37  geirha: And ''man bash'' -> Programmable Completion
11:39  evelyette: geirha, can I  go even further and define this: "./text a eleanor host", "./text b eleanor temperature" to be possible commands ...
11:40  dustybin: If one uses a incremental / snapshot backup system, will there be a time when the script will stop incrementing changed data and start fresh with a full backup, then start the incremental process again?
11:41  geirha: evelyette: I believe so. Haven't bothered learning completion properly.
11:41  evelyette: aha ok thanks, I'll read it
11:44  Uriziel: Sup, I've got this in script i found: zenity --info --text="$TEXT"; and I'm not really intrested in this window, I'd like to copy $TEXT to my clipboard instead
11:44  Uriziel: any ideas how?
11:45  geirha: Uriziel: man xclip
11:45  Uriziel: Thanks
11:46  Uriziel: geirha: Did you mean xclipboard?
11:46  Uriziel: or is it something else?
11:49  geirha: xclipboard is something else
11:50  geirha: xclip is not standard, so you may have to install it first.
11:50  Uriziel: k, thanks
11:50  maligree: is there a whereis equivalent that checks the whole of my $PATH instead of just the few standard dirs *quote* "returned by ``sysctl user.cs_path''"?
11:51  geirha: type -a foo
11:51  xok: hello all...
11:52  xok: are we able to change user password from a script?..
11:52  geirha: passwd
11:53  geirha: Though I suspect you may really be looking for newusers(8)
11:54  maligree: geirha: thanks
12:06  taylanub: using 'su' doesn't seem to change $UID. so it lies. $(id -u) is always correct
12:07  taylanub: is that a bug, or intentional, etc.?
12:08  pgas: $ su -c "bash -c 'echo \$UID'"
12:08  pgas: Password:
12:08  pgas: 0
12:09  pgas: so if UID is exported, it keeps its value
12:09  taylanub: what you did doesn't work with me
12:09  pgas: su -c "UID=123 bash -c 'echo \$UID'" # prints 123
12:09  pgas: s/so/though
12:11  taylanub: i do exactly what you did and the result is different. although my 'su' seems to pass the environment on default... what's your version? GNU coreutils 8.6 here
12:12  pgas: UID is normally not in the environment
12:12  taylanub: my bash version is 4.1.7(2) by the way
12:13  taylanub: env output has $UID here
12:13  pgas: well, that's why you see this result
12:14  taylanub: oh, using a login shell with 'su' changes $UID
12:14  taylanub: i don't somehow manually export UID though
12:15  taylanub: (it should also change without a login shell though, not?)
12:17  pgas: I don't know exactly what changes when you use su - (except from the .files involved)
12:17 --- cga_ is now known as cga
12:22  vdv: hi all
12:22  monkey_d_luffy: I have a directory with 900 subdirs and I want to archive each one of those.   I was thinking on using find with exec.   The problem is that it always returns the current directory as well (the . which holds the 900 subdirs).  What's the best way to pull this one off?
12:23  vdv: i know it's not ash channel, but maybe anybody knows, doesn't HISTSIZE variable affect count of elements stored in .ash_history? (as in bash happens)
12:24  taylanub: vdv: the manpage has it
12:25  taylanub: monkey_d_luffy: define 'archive'. do you want to tar them?  also, does the directory have anything else than the 900 subdirectories?
12:31  monkey_d_luffy: taylanub: I would like to rar them.  And the directory only has those 900 subdirs  (I moved the subdirs into an empty dir to make things easier).
12:32  taylanub: with tar that'd be:  for dir in dirwith900subdirs/*; do tar -cf "${dir#*/}".tar "$dir"; done
12:32  taylanub: i'm not sure about your rar version and how its command line arguments are
12:35  monkey_d_luffy: "for"... of course. I was so stuck up with find that I didn't see another solution.  Thanks
12:36  monkey_d_luffy: what does this means:  "${dir#*/}"   I know ${dir} is the variable, but what about the #*/  ?
12:36  koala_man: !pe
12:36  greybot: Parameter Expansion is the expansion of a parameter: "$foo", "$1". You can use it to perform string operations: "${file%.mp3}", "${0##*/}". Remember to *always* quote them. See http://mywiki.wooledge.org/BashSheet#Parameter_Operations
12:38  monkey_d_luffy: thanks, I got it
--- Log closed Sun Oct 24 13:04:55 2010
--- Log opened Sun Oct 24 13:05:23 2010
13:05 --- Users 526 nicks [0 ops, 0 halfops, 0 voices, 526 normal]
13:05  Uriziel: if [ (zenity --timeout=3 --title=='Edit with gimp?' --text='Edit with gimp?' --question) = "1" ]; then
13:05  Uriziel: how do i fix? :D
13:06  geirha: You fix it by using correct syntax.
13:06  Uriziel: yeah, so, what's wrong there?
13:06 --- Channel #bash was synced in 93 seconds
13:06  Uriziel: if you don't mind
13:06  Uriziel: helping
13:06  koala_man: if ! zenity --timeout=3 --title=='Edit with gimp?' --text='Edit with gimp?' --question; then echo lol. fi
13:08  koala_man: also
13:08  koala_man: !$?
13:08  greybot: The special parameter ? (you use $? to expand it) contains the exit status of the previous command, an integer from 0 to 255 inclusive. In general, an exit status of 0 implies success (or "true") and non-zero implies failure ("false").
13:08 --- vezeena is now known as genjix
13:09  Uriziel: thanks
13:24  frostbyt3: my tail doesn't work, it just sits there with the file open but doesnt refresh when i change the file in an editor: tail -f x.txt
13:26  Nezmer: # abc=1 ; l=abc ; m=${!l} ; echo $m
13:26  evalbot: Nezmer: 1
13:27  Nezmer: that works for variables, is there away to make m equals an array with a variable name?
13:29  fas3r: salut
13:32  fas3r: can i do case "$MYVARTOTEST" in `test ${MYVARTOTEST} -gt 0`)  echo "greater than 10" ;; `test ${MYVARTOTEST} -lt 10`)  echo "less than 10" ;; esac ?
13:33  geirha: No
13:33  fas3r: geirha: :/
13:34  fas3r: geirha: how can i do ? :/
13:34  geirha: if (( var > 0 )); then ...; elif (( var < 10 )); then ...; fi
13:35  geirha: err, well that logic doesn't make any sense
13:35  fas3r: hum ok i already did it with if .. i thought it was possible to do it with case
13:36  fas3r: geirha: yes i know it's just to give you an example
13:37  geirha: case $var in [0-9]) echo "0-9";; [1-9][0-9]) echo "10-99";; esac
13:38  fas3r: geirha: thank :D
14:18  fas3r: can i return the line number which contain the word "ethernet" with grep and wak ?
14:18  fas3r: awk*
14:20  poisonbit: grep -n ethernet "$file"
14:20  Coded1: hey all, i'm a noob at bash scripting and I am writing a small script to change channels using ivtv-tune, so far so good.  I am using the arrow keys as my primary method of interaction and using "read -s -n3 press" but I would also like to be able to input channel numbers, integer followed by carriage return but the -n3 option is messing me up is there another option
14:20  Coded1: ?
14:21  fas3r: poisonbit: thank :D
14:21  fas3r: perfect :D
14:24  poisonbit: fas3r, if you need only clean line numbers (without text):   awk -F: '/ethernet/{print NR}' "$file"
14:25  poisonbit: errr awk '/ethernet/{print NR}' "$file
14:25  poisonbit: "
14:26 --- JmZ is now known as JmZ_
--- Log opened Sun Oct 24 14:30:23 2010
14:30 --- Users 515 nicks [0 ops, 0 halfops, 0 voices, 515 normal]
14:31 --- Channel #bash was synced in 87 seconds
14:34  poisonbit: Coded1, didn't know about ivtvdriver, but any read option your shell can do, should be reflected in: help read
14:34  poisonbit: If i can remember ok, there are entries in the topic wikis about reading user input
14:34  Coded1: poisonbit: the script is here if you want to take a look http://pastebin.com/z5ttGfts
14:34  Coded1: will do
14:41 --- k-man_ is now known as k-man
14:44  oxikcza: sup
14:45  poisonbit: Coded1, maybe you just need to add  *)  while read -r cmd; do...  ;;  to your case, I don't know if it could work
14:45  oxikcza: whats koting
14:50  Coded1: poisonbit: it would but it waits till 3 chars are in the buffer because the char code for up,down,etc is //A,//B,etc
14:51  Coded1: if it could return right after any key press it would be better
14:51  poisonbit: then you need 3 char cmds  :)
14:51  poisonbit: i.e.  ch1 instead of 1
14:52  Coded1: true true
14:52  Coded1: 044, 003, 001, etc
14:52  poisonbit: I don't know if there is a better way... didn't know the arrows trick
14:53  oxikcza:  -> /dev/sda7 (ext4) space:  22G total, 976M 96% free, 21G used}
14:53  oxikcza:     ~ (  files( size: ) and  dirs - 0 sub)tty 4 bg 0
14:53  oxikcza:  $ < cat nlo.runway
14:53  oxikcza: nolossoptimize
14:53  oxikcza: identify
14:53  oxikcza: ask
14:53  oxikcza: gather
14:53  oxikcza: analyze
14:53  oxikcza: parse
14:53  oxikcza: interpret
14:53  oxikcza: recognize
14:53  oxikcza: realize
14:53  oxikcza: optimize
14:53  oxikcza: doreown
14:53  oxikcza: experimenting
14:53  oxikcza: stable
14:53  oxikcza: current
14:53  oxikcza: main\
14:53  Coded1: pastebin...
15:00  oxikcza: ey sukajic, watch this
15:00 --- MuzerAway is now known as muzer
15:00  oxikcza:  $ < cat runway
15:00  oxikcza: sukajgy
15:00  oxikcza: blowajgy
15:00  oxikcza: normagjy
15:00  oxikcza: lolagjy
15:01  oxikcza: roflajgy
15:01  oxikcza: litajgy
15:01  oxikcza: harmajgy
15:01  oxikcza: pwnajgy
15:01  oxikcza: ownajgy
15:01  oxikcza: godajgy
15:01  oxikcza: everyajgy
15:01  oxikcza: allajgy\
15:01  oxikcza: 7{+alex+}
15:06 --- EqS is now known as EgS
--- Log opened Sun Oct 24 15:08:11 2010
15:08 --- Users 519 nicks [0 ops, 0 halfops, 0 voices, 519 normal]
15:09 --- Channel #bash was synced in 86 seconds
15:14  Tobias|: Are things my bash scripts create in /tmp automagically purged by some garbage collecting service?
15:14  enzotib: Tobias|, on debian and ubuntu /tmp is cleared at startup
15:15  Tobias|: Cool beans :)
15:16  geirha: Tobias|: Make an EXIT-trap that removes them
15:16  Tobias|: Was wanting to make sure they wouldn't be removed accidentally, geirha
15:17  Tobias|: Another question: is it possible to get the name of an alphabetically last file simply?
15:18  geirha: f=(*); echo "last file: ${f[@]:(-1)}"
15:19  Tobias|: Brilliant; thanks :)
15:21  oxikcza: ......
15:21  Tobias|: oxikcza?
15:22  oxikcza: i pasted greatnec and recieved some nothing
--- Log closed Sun Oct 24 15:31:15 2010
--- Log opened Sun Oct 24 15:31:38 2010
15:31 --- Users 523 nicks [0 ops, 0 halfops, 0 voices, 523 normal]
15:31  Ward|: this is for a IRC speechbot i'm messing with
15:32 --- Channel #bash was synced in 84 seconds
15:37  oxikcza: wardi, whiat, sounds interesting
15:37  oxikcza: tell me more
15:37  oxikcza: im a master awk and bash koter
15:37  Ward|: oxikcza, i suck at it
15:37  Ward|: lol
15:38  oxikcza: i bet
15:38  Ward|: just a noob here
15:38  oxikcza: thats why i thought i can help prolly
15:38  oxikcza: there is a ' say' kommand
15:38  Ward|: oxikcza, let me think how i can further explain
15:38  oxikcza: by open or nextstep
15:38  oxikcza: windowmaker installs it
15:38  oxikcza: u can just pass text to it and it says it
15:38  oxikcza: schure thing
15:38  Ward|: lol everything is working allready...
15:38  oxikcza: k
15:38  oxikcza:  opi
15:39  Ward|: atm it uses espeak but i will use festival eventueally
15:39  oxikcza: kopi
15:39  Ward|: but the problem is i do not know how to make it reply
15:39  oxikcza: reply what
15:39  Ward|: if someone says a certain string i want to do a command or echo something back
15:39  oxikcza: i see
15:39  Ward|: liek in text
15:39  oxikcza: that needs the reverse
15:39  Ward|: yep
15:39  oxikcza: speech recognizion
15:39  Ward|: right now its fully one-directional
15:40  oxikcza: is espeek that ?
15:40  Ward|: a huge grep to drop the lines that need to be dropped and some seds to replace stuff mainly
15:40  geirha: while IFS= read -r line; do [[ $line = "SomeCommand "* ]] && echo "${line#* }"; done | espeak
15:40  Ward|: oxikcza, there is no recognition.... wtf
15:40  oxikcza: k
15:40  oxikcza: lenmme check
15:40  geirha: while IFS= read -r line; do [[ $line = "SomeCommand "* ]] && printf '%s\n' "${line#* }"; done | espeak
15:40  Ward|: oxikcza, i don;'t think i can explain it..
15:40  oxikcza: no man
15:40  oxikcza: i got all
15:40  Ward|: geirha, aaaaah :)
15:41  oxikcza: i msg ya my resultz
15:41  Ward|: :s
15:41  Ward|: ok?
15:41  oxikcza: did co
15:41  geirha: Just ignore oxikcza, he comes around here once in a while and talks in tongue
15:42  Ward|: geirha, he's a master you know :-p
15:42  oxikcza: yec thats /me
15:42  Ward|: :)
15:42  oxikcza: and speaking ' asic' ( as+is) is more master than your gay ignore, noob
15:43  Coded1: if I have a file with lines "channel = int" how can I use grep to get just the int part?  grep -o will give "channel =" is there an inverse?
15:43  oxikcza: .* in the end of the regex
15:43  oxikcza: do u run multispeaker setup ?
15:44  Ward|: geirha, thanks its making sense now, got it working
15:44  Ward|: oxikcza, never mind it is working
15:44  Bushmills: Coded1, use sed
15:44  oxikcza: =)
15:45  Bushmills: (or awk)
15:45  oxikcza: grep -o chan.*=.*
15:45  oxikcza: awk awk awk
15:45  oxikcza: pown own own
15:45  oxikcza: own now
15:45 * Ward| stares
15:45  Sonderblade: how can you replace all instances of '-' of all filenames with '_' in the current directory?
15:46  erUSUL: !faq rename
15:46  greybot: http://mywiki.wooledge.org/BashFAQ/030 -- How can I rename all my *.foo files to *.bar, or convert spaces to underscores, or convert upper-case file names to lower case?
15:46  oxikcza: ! fag ensul
15:46  Sonderblade: thanks
15:50  Ward|: geirha, :( its still not working in the pipe :(
15:51  Ward|: geirha, into the pipe is comming IRC text, i use a bash IRC client that will send to IRC whatever is typed in the terminal while the pipe is running
15:51  Ward|: so the pipe is only one direction, but the bash IRC client can reply, when i jsut enter some text in the terminal
15:51  oxikcza: umm
15:51  oxikcza: then use a fifo
15:51  oxikcza: wanna see my newsix ?
15:51  oxikcza: the news irc bot
15:52  Ward|: sure
15:52  oxikcza: lemme digg addr up
15:52  Ward|: a small example of how to do this isn a pipe would be nice aswell :)
15:53  oxikcza: hmm
15:54  Ward|: right now the part i added just broke the chain of commands / pipe
15:54  Ward|: its working fine though, just not what i want
15:54  oxikcza: hmm my newsix is nowhere
15:54  oxikcza: i can just show u som superior kommunikatzschion solution
15:54  oxikcza: thats not working yet
15:55  Ward|: lol
15:55  oxikcza: there
15:55  oxikcza: //xmb.home.cosmic-cow.net/code/new/haxi++/
15:56  oxikcza: i couldnt figure the fifo work u know eh
15:56  oxikcza: the rest is kindof komplete
15:56 --- taylanub0 is now known as taylanub
15:57  oxikcza: also something great to look at is @ //xmb.offenders.org/xf + the a and d lines
16:00  Ward|: geirha, what this does is pipe somthing to whatever i echo back
16:00  Ward|: my goal was the other way around
16:00  oxikcza: with new bash there are koprozessing pipes
16:00  oxikcza: or whatsoown eh
16:00  oxikcza: whats owning eiyh
16:01  fas3r: can i remove a line in a file with awk ?
16:05  ferret: fas3r: using what information?
16:05 --- muzer is now known as MuzerAway
16:07  ferret: isn't xmb supposed to be banned?
16:13  geirha: Ward|: I don't quite follow
16:16  Ward|: geirha, let me retry
16:18  Ward|: geirha, i ised this IRC client written in bash, which outputs the IRC lines to stdout, i piped that to a grep that drops lines that need to be droppen, that is piped to some seds to replace some stuff, and that is piped to espeak to speak what someone says on IRC
16:18  Ward|: geirha, now i want to figure out how to add interactivity
16:18  Ward|: geirha, i hope its clear now?
16:22  geirha: !fifo > Ward|
16:22  greybot: Ward|: http://mywiki.wooledge.org/NamedPipes
16:23  Ward|: geirha, ah ok, didn't know what to think of it before when fifo got suggested
16:23  Ward|: will take a look
16:23 --- oxikcza is now known as pown
16:23  sircrisp: http://kpvz7ki2v5agwt35.onion/wiki/index.php/Main_Page
16:23  michelem: hello folks
16:23  michelem: I have a number N and need to mkdir $x for x=0 to N-1
16:23  geirha: Ward|: You typically need that when you want to both read from and write to the same process
16:24  Ward|: geirha, yeah makes sense :)
16:24  michelem: is there a portable way? My best bet now is use awk to print the number and pipe to xargs mkdir
16:24  Ward|: never needed it before as far as i can remember, but i lost all my littel scripts do i don't have examples anymore
16:25  geirha: for ((x=0;x<n;x++)); do mkdir "$x"; done
16:27  heiner: michelem: i=0; while [ $i -lt $n ]; do mkdir "$i"; i=`expr $i + 1`; done
16:28  michelem: heiner: is the assignment inside while not lost being while it run in a subshell?
16:28  heiner: michelem: geirha's suggestion works for bash 3, ksh93, but is not POSIX
16:28  michelem: indeed
16:28  heiner: michelem: with the exception of "expr" there is no subshell involved
16:29  cthuluh: and the subshell can easily be avoided with i=$(($i+1))
16:29  cthuluh: (which is posix)
16:30  sircrisp: you guys know any .onion sites?
16:30  Ward|: geirha, pipe will be an actual file right?
16:30  michelem: thanks
16:31  michelem: heiner: how does that relate to http://mywiki.wooledge.org/BashFAQ/024 , just FMU ?
16:31  Ward|: geirha, never mind i missed the beginning :)
16:31  michelem: nevermind, I got it
16:32  michelem: it's about the pipe not loop
16:32  heiner: cthuluh: agreed, arithmetic expressions are POSIX, but still are not as portable as using "expr"
16:33 --- bronz_ is now known as Bronze
16:34  michelem: for efficiency I'll print the dirnames inside the body and mkdir externally with xargs mkdir -p
16:35  heiner: michelem: the problem is only relevant if input or output of the *loop* are redirected, not if some redirection appears within a loop
16:36  Ward|: geirha, oh it DOES create files :(
16:36  Ward|: i wanted to avoid that
16:36  cthuluh: !xargs > michelem
16:36  greybot: michelem: xargs(1) is dangerous (broken) when processing filenames that are not NUL-terminated. If you're working with filenames, use find's -exec {} + instead (yes, it does multiple-filenames-per-invocation, too).
16:37  michelem: cthuluh: should I still care if I generate the names? (ie I know they are Null term)
16:37 --- taylanub0 is now known as taylanub
16:39  cthuluh: michelem: what do you mean "I know they are NUL terminated"?
16:40  michelem: I make them :)
16:40  michelem: while [ $i -lt $n ]; do echo foo/$i ; done
16:40  cthuluh: this is not what "NUL-terminated" means
16:40  cthuluh: NUL-terminated means that filenames are separated by a NUL byte, aka '\0'
16:40  michelem: I think my C background is tricking me.
16:41  cthuluh: 4# printf '%s\0' foo bar | xargs -0 echo
16:41  shbot: cthuluh: foo bar
16:42  michelem: alright, I can use that
16:42  michelem: thanks
16:49  Ward|: lol im still extremely confused on how i could use fifo for this
--- Log closed Sun Oct 24 17:04:48 2010
--- Log opened Sun Oct 24 17:05:08 2010
17:05 --- Users 528 nicks [0 ops, 0 halfops, 0 voices, 528 normal]
17:05  Ward|: geirha, i understand fifo but i have no idea whatsoever how i could use it to solve my problem
17:05  Ward|: oops sorry wrong channel....
17:05  pown: whatsoowneh
17:06 --- Channel #bash was synced in 85 seconds
17:16 --- Yvemath_ is now known as Poke-Man
17:18 --- Poke-Man is now known as Yvemath
17:20 --- pragma_ is now known as Guest3725
17:25 --- MuzerAway is now known as muzer
17:42  variable: is there something like grep -c but don't print files with zero matches?
17:43  viric: Hello
17:43  viric: How can I iterate in all characters of a string?
17:43  viric: (UTF-8 aware). Can bash do this?
17:44  JayDugger: I don't know an answer to either of your questions, viric.
17:44  viric: ah, thank you for the interest anyway :)
17:45  viric: I wonder in what language should I write a script for that
17:45  JayDugger: No worries. Someone in #bash might know.
17:49  evelyette: hi
17:49  JayDugger: Good morning.
17:50  evelyette: is there any way to do lexical analysis with bash
17:50  JayDugger: I don't know.
17:50  evelyette: I have a number of argument that can be passed to my bash script and I don't want to do checking if they are correct ... let the lex do that
17:51  viric: evelyette: it has getopts
17:51  evelyette: I don't like getopts, it's too robust
17:51  evelyette: I need something that can strech its legs
17:54  cthuluh: viric: for ((i=0; i < ${#string}; i++)) { echo "${string:i:1}"; }
17:55  viric: cthuluh: uhm, yes, and utf-8 aware. great!
17:58  viric: cthuluh: and know the unicode value of the character? :)
17:59  viric: the number I mean
18:00  fas3r: is it correct ? echo "ethernet"$NBELEMENT".present = \"TRUE\" " >> $DIR/$VMXFILE
18:01  trash: printf 'ethernet%s.present = "TRUE"' "$nbelement" >> "$dir/$vmxfile"
18:01  trash: !varcaps
18:01  greybot: By convention, we capitalize environment variables (PAGER, EDITOR, ..) and internal shell variables (SHELL, BASH_VERSION, ..). All other variable names should be lower case. Remember that variable names are case-sensitive; this convention avoids accidentally overriding environmental and internal variables.
18:04  fas3r: trash: %s ?
18:05  trash: fas3r: Yes. man 1 printf    for explanation of the format.
18:07  fas3r: trash: ok
18:07  fas3r: thank :D
18:07  fas3r: why its better to use printf instead of echo ?
18:08  trash: It's more convenient in your case, you can see by the readable code.
18:08  juanmabc: both of them have they own differentiable arguments
18:09  trash: Every time you have to escape something in your shell, you have to think you are doing something wrong.
18:11  fas3r: trash: thank for explanation
18:12  evelyette: hi, what about lex & yacc for checking for correct arguments to scripts
18:12  evelyette: ?
18:14 --- muzer is now known as MuzerAway
18:15  cthuluh: evelyette: fine, learn them, then write a C program, then use it. 8)
18:15  evelyette: cthuluh, so how would this work ... every command would then be passwd to that c program first
18:15  evelyette: which would evaluate it
18:15  evelyette: and then say ok | nak ?
18:16  evelyette: is there an alternative to that ... because I don't really want to program it in C (because of compilation)
18:16  cthuluh: !faq easily > evelyette
18:16  greybot: evelyette: http://mywiki.wooledge.org/BashFAQ/035 -- How can I handle command-line arguments (options) to my script easily?
18:18  evelyette: cthuluh, the problem is that I'm using command line arguments like this "./program arg1 arg2 arg3" ... and I want to check if the arg2 belongs under arg1 ...
18:18  evelyette: there are also other arguments  like this
18:18  evelyette: "./program arg1 arg4"
18:18  evelyette: or "./program arg2 arg3 arg4"
18:19  cthuluh: I don't understand what "belongs under..." means
18:19  evelyette: don't bother with it, I just types is a little confusing
18:20  evelyette: let's say that the args form a hierarchy
18:20  evelyette: and the sequence is when you're traversing down the tree to leaf
18:20  evelyette: and the command is only corrent if the path to the leaf is found
18:20  evelyette: I want something like that
18:21  cthuluh: then why no /arg1/arg2/arg3 arg5/arg6?
18:21  evelyette: it can be that way too, doesn't matter
18:22  evelyette: I just want a way to do it
18:22  cthuluh: then why not do as any other programs out there? give your script paths to files as arguments
18:49 --- taylanub0 is now known as taylanub
19:29  gnusar: is there a way to start an app from my bash terminal in a way that it runs independently from the console? by that i mean that it does not "block" my terminal like i was running it from a desktop icon or menus
19:30  yitz_: !& > gnusar
19:30  greybot: gnusar: If you put the control operator & at the end of a command, e.g. ''command args &'', the shell executes the command in the background in a subshell. The shell does not wait for the command to finish, and the return status is 0. Pid of the last backgrounded command is available via the special variable $!
19:30  gnusar: thank you very much yitz_
19:32  Ward|: i want to add soemthing to this pipe to make the speechbot respond to a certain string: (warning: it's not pretty) http://bash.pastebin.com/ANBihidV
19:36 --- hunterm is now known as rms
19:36 --- rms is now known as hunterm
19:38 --- karthik is now known as Guest13904
20:15  Bersam: hi everbody ... how can i export a man page ?
20:15  yitz_: What are you trying to do?
20:15  Bersam: yitz_: i want to have python3 man page on my PDA ...
20:16  Bersam: yitz_: i can't find it on the net !
20:17  Bersam: yitz_: it's in /usr/share/man/... but that man page there is wrote for man tool ... i want get an output of $man python3.1 into a txt file
20:18  yitz_: Change the man pager to cat and redirect to a file
20:18  yitz_: man blah > file
20:19  Bersam: yitz_: tnx :)
20:23  pgas:  man foo | col -b > foo.mantxt # says the manpage here
20:27  alkisg: Bersam: http://manpages.ubuntu.com/python3
20:30  Bersam: pgas: tnx ... nice tool. alkisg: hmmm :D ! i googled it but i don't find this that time ;).
20:40 --- gwz2 is now known as gwz
20:41  hunterm: you can also do:
20:41  hunterm: $ man --pager=cat foo >txt
20:43  ferret: or a posix compliant version, PAGER=cat man foo
20:46  alkisg: I want to replace the "A" in "this is A text" with the contents of $var. But $var may contain anything, e.g. slashes, so I don't think I can easily use sed. So I'm thinking to use prefix/suffix patterns like ${text%A*}$var${text#*A} - any better way for this?
20:48 --- juan_man is now known as juanman
20:48  ferret: alkisg: that way seems fine
20:49  alkisg: Thank you ferret (of course I'll need to check if A is there first)
20:49 --- Yvemath_ is now known as Yvemath
20:50  enzotib: alkisg, ${text/A/$var}, also
20:51  alkisg: Thanks, didn't know about that... /me reads man bash once more :)
20:56  gwz: hey, is there a online regex tester for bash? just to see if my regex matches some strings
20:58  doublehp: who does iptables -L ${INPUT} -v -n -x 2>/dev/null | awk '$8 ~ /[0-9]/ { if (done[$8]!=1) {print $8; done[$8]=1;}}' list my IPs properly, but not ip6tables -L ${INPUT} -v -n -x 2>/dev/null | awk '$8 ~ /[0-9]/ { if (done[$8]!=1) {print $8; done[$8]=1;}}' ?
21:00  doublehp: found
--- Log closed Sun Oct 24 21:05:59 2010
--- Log opened Sun Oct 24 21:06:22 2010
21:06 --- Users 523 nicks [0 ops, 0 halfops, 0 voices, 523 normal]
21:06  snappy: 7
21:07 --- Channel #bash was synced in 86 seconds
21:21  gwz: would this match [A-Z]\{1\}[0-9]\{4\} - [0-9]\{5\} - [0-9]\{5\} ---> I2392 - 13332 - 32224
21:21  geirha: No. Bash uses ERE.
21:21  geirha: !ere
21:21  greybot: Posix Extended Regular Expressions: http://www.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap09.html#tag_09_04
21:21  hendry: when iterating through `find` results, one should use `while` right? Is there a example of the right way to do it somewhere ... ?
21:22  ferret: -exec
21:22  ferret: !find
21:22  greybot: http://mywiki.wooledge.org/UsingFind
21:23  arcsky: evening guys. i wonder why this not works "cut -d[ES] -f2"
21:23  hendry: ferret: there is no `while` example there. I like using a `for` loop personally...
21:24  geirha: arcsky: cut's -d doesn't take a glob, only one char. Use read instead.
21:24  geirha: Or a PE
21:24  geirha: ... or two
21:25  geirha: If my mind reading is correct; s=${var#S} s=${s%%E*}
21:27  ferret: hendry: sadly, that page only contain good examples; which actually work
21:27  geirha: faq 20 has examples on while-loops
21:28  ferret: if you want you could use something like find . -name '*whatever*' -print0 | while IFS= read -r -d '' file; mungify "$file"; done
21:28  ferret: But it seems easier to do find . -name '*whatever*' -exec mungify {} \;
21:29  mar77i: I'm one of those -exec bash -c 'file={}; ...' abusers :)
21:30  mar77i: ...where I actually do need to "quote", and \; is also missing
21:31  hendry: ferret: or maybe you can just review http://video.natalian.org/my-tube.txt
21:31  geirha: !faq 20 > hendry
21:31  greybot: hendry: http://mywiki.wooledge.org/BashFAQ/020 -- How can I find and deal with file names containing newlines, spaces or both?
21:32  mar77i: for i in $(find $STATICDIR $LAST  \( -iname "*.ogg" -o -iname "*.ogv" \) -type f)
21:32  mar77i: will break on filenames with whitespace iirc? :)
21:32  mar77i: !umq > hendry
21:32  greybot: hendry: "USE MORE QUOTES!" They are vital. Also, learn the difference between ' and " and `. See <http://mywiki.wooledge.org/Quotes> and <http://wiki.bash-hackers.org/syntax/words>.
21:32  geirha: It'll also do globbing
21:33  geirha: You can do -iname "*.og[gv]" btw
21:35  hendry: geirha: thanks
21:36  mar77i: !test
21:36  greybot: help test <Enter> http://mywiki.wooledge.org/BashGuide/TestsAndConditionals | http://bash-hackers.org/wiki/doku.php/commands/classictest
21:37  mar77i: umm, are test's file capabilities the same as [['s?
21:39  geirha: mar77i: In bash, yes.
21:41  geirha: -ef, -nt and -ot are not posix
21:45  drizztbsd: are you sure -nt and -ot works on bsd
21:45  drizztbsd: ?
21:46  twkm: in bash?  yes.
21:54  esmhammer: how to copy file to itself+date?
21:55  nDuff: esmhammer, you mean you just want to append the date to the filename?
21:55  cthuluh: cp file itself+date
21:57  esmhammer: yes but using the date command to be added to the file name.
21:57  nDuff: esmhammer, cp "${file}" "${file}.$(date +%Y%m%d.%H%M%S)"
21:57  nDuff: ...or whatever format you want, but keep it ASCII-sortable to avoid trouble.
21:58 --- JmZ_ is now known as JmZ
21:58  nDuff: date formats like MonDDYYYY (yes, I've seen it done) are awful.
21:59  nDuff: ...actually, it might have been DDMonYYYY (yes, a 3-character month descriptor, like "AUG") that the DBA from Hell imposed on our backups a long time back.
22:00  nDuff: implementing robust sorting and aging is a right pain with poorly-thought-out names.
22:02 --- Guest3725 is now known as pragma_
22:03  chalcedony: i want to grep in a filename like this: (message log) xplo:UndernetScot-07-2010.log vs filenames like: #channel:UndernetZ1-07-2010.log, i'm having a health problem and can't think how, right now?
22:03  esmhammer: nDuff: cp "${a}" "${a}.$(date)" >> no such file or directory?
22:04  nDuff: esmhammer, err, you really don't want just $(date) -- seriously, use a format string to specify a specific date format, like in the example I gave you.
22:04  nDuff: esmhammer, ...second, make sure a actually has the filename.
22:04  nDuff: !set-x > esmhammer
22:04  greybot: esmhammer: Setting the -x option on bash enables a debugging mode that makes bash output the command name and arguments that it will run (after all parsing and expansion has been applied). Set it by starting a script with ''bash -x ./myscript'' or putting ''set -x'' before the code you want to debug. ''set +x'' turns this behaviour off.
22:06  esmhammer: nDuff: could I use that in a command line not in a scrpt?
22:06  esmhammer: s//scrpt/script/
22:07  taylanub: any posix way to break out of a "list" in:   case $foo in bar) _list_; esac   ?
22:08  nDuff: esmhammer, of course
22:09  taylanub: well i'll just wrap the rest of the list in a conditional statement
22:10  esmhammer: nDuff: cp a a.$(date +%Y%m%d.%H%M%S)" not working. a is a file and copy would be same file a.10.24.2010
22:11  Nashenas: is there a way to make the PS1 show the current time, as in the time changes without entering a command?
22:11  nDuff: esmhammer, "not working" is unusably vague. Use set -x to see what command is actually being run.
22:11  nDuff: esmhammer, ...and make sure your quotation marks are balanced.
22:13  esmhammer: nDuff: ok thanks, let try all variations and set -x too.
22:14  taylanub: Nashenas: that would require the shell to constantly re-write the prompt... it would probably be possible in some crazy way to make the shell do that, but i'm pretty sure bash can't.  (_maybe_ zsh)
22:15  Nashenas: taylanub: ok what about a version that when you enter a command, it re-writes the PS1 so that I see what time I entered a command
22:16  taylanub: Nashenas: sure that would be possible.  i'm not so good in writing PSes but you can probably find something via google
22:19  esmhammer: nDuff:  thanks again, cp "a" "a.$(date +%Y%m%d.%H%M%S)" worked.
22:22  gregor3005: hi, anybody know how i can read from pipe via bash script and pass it to another programm like mail.
22:23  gregor3005: important is that newlines not removed
22:29  cthuluh: gregor3005: just use mail
22:29  gregor3005: i found a solution
22:29  gregor3005: i need to build a filter before the mail passed to mail
22:29  gregor3005: or exactly passed to nail
22:30  cthuluh: mail reads on stdin anyway
22:30  gregor3005: but it doens't filter like i need it
22:30 --- gwz2 is now known as gwz
22:30  gregor3005: i separate between internal and external mails
22:31  gregor3005: in the meantime i found a solution
22:31  gregor3005: i read the stdin and passed it with printf to mail
22:31  gregor3005: so the \n are not ignored
22:31  cthuluh: printf '%s\n' Hi 'How are you?' . | mail -s news friend@example.com # newlines are not ignored, by default.
22:47 --- juanman is now known as kjuanman
23:03  sputnick: hi guys. this is not possible to do it like this ? bc <<< "ibase=2; obase=16; 00110001"
23:03  sputnick: should output 31 not 1211
23:03  snappy: # obase=16;ibase=2;
23:03  evalbot: snappy: no output
23:04  snappy: # bc <<< "obase=16;ibase=2;00110001"
23:04  evalbot: snappy: 31
23:04  sputnick: maybe I need to convert the result in dec, then convert it to hex
23:04  erUSUL: !faq hex
23:04  greybot: http://mywiki.wooledge.org/BashFAQ/071 -- How do I convert an ASCII character to its decimal (or hexadecimal) value and back?
23:04  snappy: bc is picky in the order you specify the base.
23:04  sputnick: damn
23:04  sputnick: good to know, thanks !
23:19  ritzt3ch: Question >>>> i have this
23:20  ritzt3ch:     links -dump http://10.10.101.1/cgi-bin/location.pl?query=$ip  | grep 99 | awk ' {print $3}'
23:20  ritzt3ch: and i have that directly printnig out can i put the results in a varible
23:22  ritzt3ch: on the same line somehow
23:22  go|dfish: variable=$( ... )
23:23  ritzt3ch: so i can still see the ouput printing on the screen
23:23  go|dfish: oh aswell.
23:23  go|dfish: hmm.
23:24  erUSUL: var=$(links -dump http://10.10.101.1/cgi-bin/location.pl?query=$ip  | awk '/99/ {print $3}'); echo "$var"
23:25  nDuff: ritzt3ch, anything links emits to stderr (as opposed to stdout) won't be captured
23:26  nDuff: ritzt3ch, ...and you should seriously consider quoting the URL; it may not matter in that specific case, but as soon as the query is of the format of ?foo=bar&baz=qux it'll make quite the large difference.
23:26  ritzt3ch: darn didnt work
23:32  nDuff: ritzt3ch, can you clarify beyond "didn't work"?
23:32  ritzt3ch: didnt see anything output on the screen
23:33  ritzt3ch: this is what i Currently run that does.
23:33  ritzt3ch: links -dump http://10.10.101.1/cgi-bin/location.pl?query=$ip | grep 99 | awk ' {print $3}'
23:34  ritzt3ch: and i want to some how take the results and put it in a $loc  variable so i can build some IF thens later on IF this site belongs to this Location blah blah
23:42  cjc2010: Hello I wish to write a script to automatically print new email + marking as read, what would be the commands needed and logic please?
23:43  Bushmills: ritzt3ch,    variable=$(command)
23:43  Bushmills: and no need for the grep, you can do that in the awk line
23:44 --- caemir_ is now known as caemir
23:44  Bushmills: cjc2010, bash doesn't have commands for that. you need external programs
23:44  ritzt3ch: how can i run it interactivity with it finishing the link dump becase it does a query on the database via perl on the Webpage side
23:45  ritzt3ch: AND show the user shall i do some sort of pause so it can execute the links and pull it ..
23:45  Cmdr_W_T_Riker: cjc2010: one of such external programs is procmail (to mark your mail as read), although it depends on the system you're using (mbox, Maildir, ..)
23:45  ritzt3ch: Sometimes it can take 2 seconds or 5
23:46  cjc2010: from, say, a gmail account?
23:46  cjc2010: how do you mean mbox, maildir?
23:47  redrocket: pine does this also
23:47 --- mikeplus64 is now known as mikeplus32
23:48  Cmdr_W_T_Riker: cjc2010: well if you were running your own mailserver, or, fetching your mail using fetchmail. Anyway, i don't know how one would accmplish this with gmail. I suppose you could periodically check for new e-mail, fetch the mail and perform your actions.
23:48  Cmdr_W_T_Riker: anyway, this probably isn't much related to bash
23:49  cjc2010: I think my Uni used to have "dumb terminals" providing access to email through pine
23:49  cjc2010: it doesn't have to be gmail
23:49  cjc2010: I could easily set up a standard POP3 email account and forward to it from gmail
23:50  jordanm: gmail supports pop3 and imap, so the fact that it is gmail shouldn't matter
23:50  cjc2010: that's what I thought
23:51  cjc2010: would fetchmail be the best program for this first stage: reading mail from the terminal?
23:51  jordanm: cjc2010: is this homework?
23:51  cjc2010: haha no
23:51  cjc2010: I just like to get advice before diving into something
23:51  jordanm: fetchmail is not a MUA, so no
23:52  jordanm: fetchmail pulls down the mail, for reading with a MUA
23:52  cjc2010: ah
23:52  cjc2010: good job I asked :)
23:53  cjc2010: fetchmail is a MTA?
23:53  jordanm: you didn't have to ask... you could have read the desciption section of the fethmail manpage.
23:53  jordanm: http://manpages.debian.net/cgi-bin/man.cgi?query=fetchmail&apropos=0&sektion=0&manpath=Debian+5.0+lenny&format=html&locale=en
23:53  erUSUL: cjc2010: nope
23:54  geirha: mutt is a decent curses based MUA
23:57  cjc2010: I'm thinking writing a thunderbird extension might be easier?
23:57  cjc2010: or evolution?
23:58  cjc2010: geirha: how do you mean curses?
23:59  geirha: cjc2010: http://en.wikipedia.org/wiki/Curses_(programming_library)
--- Log closed Mon Oct 25 00:00:20 2010
