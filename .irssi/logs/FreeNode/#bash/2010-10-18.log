--- Log opened Mon Oct 18 01:28:53 2010
01:28 --- Users 489 nicks [0 ops, 0 halfops, 0 voices, 489 normal]
01:29  Jzarecta: hi I want to download a website, but only specific links with wget
01:30 --- Channel #bash was synced in 94 seconds
01:30  Jzarecta: basically i want to download a mailing list
01:33  geirha: Try #wget and/or #curl
01:53  doublehp: I need to walk-around a system bug: command <<A | B >> never terminates because B expects EOF, and A never sends it. I want to try this: << A | M | B >> , where M would be a bash script that pipes stdin to stdout, but would terminates whatever happens after let say ... 10s. If A did not send EOF or close pipe withint 10s, M should suicide and close pipe to B. Is this possible in bash ?
01:57  ferret: doublehp: while read -t 10; do printf '%s\n' "$REPLY"; done
01:57  ferret: doublehp: that's 10s of not receiving a line
01:57  ferret: if it gets lines every 9s it would never terminate
01:57  doublehp: that's fine
01:58  ferret: should also have -r: read -r -t 10
01:58  doublehp: it does not work
01:59  doublehp: my man read does not report about -t
01:59  ferret: it's a bash feature so it isn't in the man page
01:59  ferret: ''help read''
02:00  doublehp: so, i should explicitely state as header of script to use bash
02:00  ferret: also, no, it doesn't work, because the pipe doesn't magically break... hmm...
02:00  thepro4ever: why am I unable to strip off the extension with the following command?? /home/thepro4ever/installable/SDL/SDL-1.2.14.tar.gz >  sed -e 's!.tar.gz!!'   /home/thepro4ever/installable/SDL/SDL-1.2.14.tar.gz: cannot execute binary file
02:00  geirha: doublehp: B < <(A)
02:01  geirha: err, no
02:01  doublehp: geirha: i can not do that ... i don't have hand over A ; i can only rewrap B the way i want
02:01  ferret: not sure how to make this work
02:02  geirha: while read -r -t 10; do printf '%s\n' "$REPLY"; done < <(A) | B
02:02  ferret: maybe put the whole thing in a subshell and change M to { while read -r -t 10; do printf '%s\n' "$REPLY"; done; kill $$
02:02  doublehp: i can not move A: it HAS to be head of line
02:02  geirha: Huh? why?
02:02  doublehp: very long story
02:03  geirha: !faq rename > thepro4ever
02:03  greybot: thepro4ever: http://mywiki.wooledge.org/BashFAQ/030 -- How can I rename all my *.foo files to *.bar, or convert spaces to underscores, or convert upper-case file names to lower case?
02:06  geirha: I really can't understand why you can't put the A in a process substitution. It'll likely solve your problem.
02:08  doublehp: ferret: i tried that, and, maybe i am not good enough, but it did not work
02:09  doublehp: ferret: i get broken pipe, what means M suicided correctly, but this did not close the pipes
02:09  ferret: dunno then
02:09  geirha: A > fifo & pid=$!; while read -r -t 10; do printf '%s\n' "$REPLY"; done < fifo | B; kill $pid
02:10  doublehp: geirha: i did not explain. B is an optionnal that can be configured in a conf file; the daemon is A, and pipes into B. I am not going to patch source
02:10  doublehp: geirha: but i believe i can make a clever B that will WA both bugs (daemon, and the normal B command that is bugged on several box )
02:11  geirha: patch the source? Why would it require patching the source?
02:12  doublehp: to make it end as it should
02:12  geirha: while read -r -t 10; do printf '%s\n' "$REPLY"; done < <(A) | B
02:12  geirha: Well, that'll make it end when read times out
02:13  doublehp: ferret: maybe you were right in first place ...
02:14  doublehp: yup << while read -t 10; do printf '%s\n' "$REPLY"; done >> works :)
02:15  ferret: o.o
02:16  doublehp: that in M, works. I thoght it did not because command / line did not terminate; in fact command lasts as long as A did not finish, but ps says that B get killed, what is (should hopefully ) be enough for me
02:22  eboyjr: How can I write command output to a file, stripping color codes, etc?
02:26  doublehp: thanks guys
02:27  doublehp: ( any girl ? )
02:27  go|dfish: lol
02:29  Jzarecta: any wget expert
02:30  Jzarecta: I am looking to download a site, but everytime I put a wget the URL is not parsed correctly
02:30  Jzarecta: I want to download a mailing list
02:30  Jzarecta: http://es.openoffice.org/servlets/BrowseList?listName=discuss_es&from=&to=&count=24441&by=&first=24001&windowSize=1000&selectedPage=25
02:30  Jzarecta: having the ? usually makes wget break
02:30  dagni: Jzarecta: wget "url"
02:31  dagni: this will prevent special chars from breaking
02:31  dagni: it's analogical question to the previous one, if one can do grep strings with space
02:31  doublehp: Jzarecta: wget -k -m -np URL
02:31  dagni: just quote it
02:31  Jzarecta: I get No such file or directory
02:31  Jzarecta: ok will try with those
02:32  geirha: eboyjr: Tell the command not to output colors.
02:32  doublehp: Jzarecta: also check ... wget -rc -l inf -N -np URL ... wget -r -c -l inf -N --no-remove-listing -np URL ... otherwise, try other clients: puf, acxel, curl ...
02:32  Jzarecta: dagni: umm it doesnt give me the ? error but still cant get it done
02:32  eboyjr: geirha: It's my own script that uses tput to output colors
02:32  Jzarecta: ok will look to them
02:33  geirha: eboyjr: Then do like ls, check if stdout is a terminal or not, and only output colors if it's a terminal.
02:33  geirha: if [[ -t 1 ]]; then
02:33  eboyjr: Cool thanks
02:34  eboyjr: Is there something like getopt for bash btw?
02:34  dagni: Jzarecta: or you have wrong link ;)
02:34  geirha: !faq easily > eboyjr
02:34  greybot: eboyjr: http://mywiki.wooledge.org/BashFAQ/035 -- How can I handle command-line arguments (options) to my script easily?
02:34  Jzarecta: dagni: well I am copying from the browser but is a servlet site done in java
02:34  Jzarecta: so the url are a bit, non-standard
02:35  Ghosty: is there a function that would allow me to generate a random text or number string, to be later called?
02:35  Ghosty: i tried using $RANDOM
02:36  Ghosty: but when I called it back, another random string was generated
02:36  geirha: var=$RANDOM
02:36  Ghosty: ie name="$RANDOM"
02:36  Ghosty: $name
02:36  Ghosty: but $name had 2 diff values when called 2 diff times
02:36  geirha: # echo "$RANDOM, $RANDOM"
02:36  Jzarecta: dagni: I want to copy a mailing ist
02:36  evalbot: geirha: 18011, 19672
02:36  Jzarecta: http://es.openoffice.org/servlets/BrowseList?listName=discuss_es&from=&to=&count=24441&by=&first=1001&windowSize=1000&selectedPage=2
02:36  Jzarecta: that's the url
02:37  geirha: # var=$RANDOM; echo "$var, $var"
02:37  evalbot: geirha: 27097, 27097
02:37  Ghosty: ah :D
02:37  Ghosty: thanks geirha
02:37  dagni: Jzarecta: i'm not sure if wget will follow this url
02:37  dagni: even with special options
02:38  Jzarecta: dagni: I tried axel and couldnt
02:38  dagni: Jzarecta: you could use the broswser plugin for that, one of many, if you use firefox, you can find the plugin that will do the stuff
02:38  dagni: hm.
02:38  dagni: Jzarecta: as you can see, the latest post is: http://es.openoffice.org/servlets/ReadMsg?list=discuss_es&msgNo=23443
02:39  dagni: you can decrement this latesst msgNo variable till you achieve the '1' value
02:39  dagni: this could be done with wget i believe, tho, not tried
02:39  dagni: check if it works
02:39  dagni: then you could write trivial bash script that can do it
02:39  Jzarecta: dagni: I'll try to download 1 page
02:39  Jzarecta: with wget
02:39  dagni: ok
02:39  Jzarecta: and see if maybe I can get the rest
02:40  dagni: be aware you can get banned by the server if doing it without delay
02:40  Jzarecta: read that
02:47  dagni: *burp*
02:51  Ghosty: i noticed
02:51  Ghosty: if i run
02:51  Ghosty: screen -A -m -d -S $NAME $BINFULLPATH $OPTIONS &
02:51  Ghosty: and NAME=$RANDOM
02:51  Ghosty: $RANDOM get executed twice
02:51  Ghosty: how do i make my name variable
02:51  Ghosty: print
02:52  Ghosty: rather than execute
02:52  Ghosty: in that line
02:53 --- Jzarecta is now known as JZA
02:54  Ghosty: # name="$RANDOM" binfullpath="/foo/bar/" options=stuff; $name $binfullpath $options
02:54  evalbot: Ghosty: bash: 27620: command not found
02:55  Ghosty: # name="$RANDOM"; binfullpath="/foo/bar/"; options="stuff"; $name; $binfullpath; $options; $name
02:55  evalbot: Ghosty: bash: 13024: command not found
02:55  evalbot: Ghosty: bash: /foo/bar/: No such file or directory
02:55  evalbot: Ghosty: etc... ( http://pastebin.com/iQdCtZzB )
02:55  Ghosty: bah
02:55  Ghosty: lemme not spam
03:23  dagni: nice conversation with yourself
03:23  dagni: ;-)
03:42  reggie: hi
03:42  reggie: i need set to secure password in automated password in bash script
03:43  reggie: using ssh over many servers
03:43  reggie: i dont want repeat each time password
03:43  reggie: can somebody help? please
03:44  reggie: can i define it in variable ? does ssh read it ?
03:53  Edong23: ok, so, when is "bash_history" commited?
03:53  Edong23: after logout?
03:54 --- Natch is now known as Natch|
03:56  hunterm: Edong23: yes, at shell exit
03:56  Edong23: DAMN!!!!
03:56  Edong23: lol
03:57  Edong23: i got kicked out... and i lost my long ass command
04:14 --- peshalto__ is now known as 13WAAKYDB
--- Log closed Mon Oct 18 04:24:22 2010
--- Log opened Mon Oct 18 04:24:45 2010
04:24 --- Users 485 nicks [0 ops, 0 halfops, 0 voices, 485 normal]
04:26 --- Channel #bash was synced in 85 seconds
04:28 --- 13WAAKYDB is now known as peshalto
04:43  eboyjr: Does bash have a documentation format like Javadoc or Doxygen?
04:45  Edong23: does anyone know what to use other than something like $(ls) for mass copying files from one machine to another in a script?
04:46  Edong23: using $(ls) gives executables an * after the filename..
04:46  Edong23: that's a problem
04:46  falconindy: Edong23: that's the least of your problems in parsing ls
04:46  falconindy: !ls>Edong23
04:47  falconindy: !ls >Edong23
04:47  greybot: Edong23: Don't try to parse ls output. http://mywiki.wooledge.org/ParsingLs
04:47 --- falconindy is now known as WallOfText
04:48 --- WallOfText is now known as falconindy
04:48  tmr: Mass copying files sounds like a rsync job.
04:50  twkm: eboyjr: hahahaha.
04:50  Edong23: falconindy: thanks, that is helpful   but it doesn't solve my issue.
04:50  twkm: Edong23: use just *.
04:51  Edong23: yeah, doesn't help my situation
04:54  Edong23: twkm: the * options is good to know for future, tmr:  yes, rsync was the better solution..
04:54  Edong23: thanks
04:55  twkm: * does help.  see the faq.
05:00  Edong23: twkm: not which what i was doing, it is good for future reference
05:00  Edong23: the issue was that i was using scp
05:03  eboyjr: twkm: lol guess not :p
05:23  twkm: Edong23: how does it not provide what you needed?
05:24  twkm: well, scp sucks, but even it can use * ... of course to get the * to the remote unmolested you'd be wise to quote it locally.
05:24  Edong23: with scp, whether i used * or $(ls)   it copied the filename with the * (being executable)
05:24  twkm: * does no such thing.  ls might, but using $(ls) to get a list of files is stupid.
05:24  Edong23: ok
05:24  twkm: test * yourself: echo *
05:25  twkm: look at all those nice filenames, without any wierdo trailing stuff.
05:26  Edong23: so.. would you like a screenshot? or would you like to continue acting like an asshole instead of paying attention to what im saying?
05:26  Edong23: the filename still has a trailing *
05:27  Edong23: doesn't matter,   rsync worked well
05:28  twkm: sure.
05:57  winkey: while ! mkdir mylockfile ; do sleep 1 ; done can run amuck if you get too many of them, is there any better ways of dealing with access to files from multiple procs?
06:11  jimisrvrox: n00b here in need of help :) : trying to find the file where I can edit network settings so that it will stay permanent when I reboot to set up a static IP
06:13  winkey: jimisrvrox i am assimeing linux here, ask in the channel for your distro
06:14  jordanm: jimisrvrox: that entirely depends on the OS
06:14  jimisrvrox: yes linux...and the chans for my distro are dead..
06:14  jordanm: they all have there different methods
06:14  jordanm: !nabq
06:14  greybot: Not A Bash Question. Ask the channel that supports your software, hardware, or OS.
06:14  jimisrvrox: PLOS
06:14  jordanm: jimisrvrox: I am sure there is documentation
06:14  jimisrvrox: PCLOS*
06:14  TheBonsai: y0
06:15  jimisrvrox: yeah I looked for that as well
06:15  jimisrvrox: I had it set but it didnt stay on reboot..but im trying to network two machines together via ethernet for ICS but cant ping btwn boxes
06:16  jimisrvrox: so Im in the networking chan..of course its dead as well
06:18  Edong23: jimisrvrox: what distro?
06:18  jimisrvrox: PCLinuxOS
06:18  Edong23: ah... hm...
06:19  winkey: no clue
06:19  Edong23: i can give you some pointers, as most people can.. but  we mgith and might not be right
06:19  Edong23: have you googled?
06:19  jimisrvrox: despise google :)
06:19  jimisrvrox: ive gone on yahoo though
06:20  Edong23: lol
06:20  Edong23: ok
06:20  jimisrvrox: but nothing seems to come close to what im looking for and if its staring me in the face..well..just seems like its more than what I think
06:21  Kerrick: An internet post on stackoverflow gave the following concise and dependency-less idiom for executing a bash function for 5 seconds: ( command ) & sleep 5; kill $!
06:21  winkey: /etc/sysconfig/network-scripts/ifcfg-eth0
06:21  winkey: http://www.pclinuxos.com/forum/index.php?PHPSESSID=22ccj2gvfjag76tblo0vefvna7&action=search2
06:21  winkey: should have just googled
06:21  Kerrick: This works fine if command is e.g. "yes". However, something like "yes | nl" doesn't work.
06:22  Kerrick: Why? How do I fix it?
06:24  TheBonsai: !faq timeout
06:24  greybot: http://mywiki.wooledge.org/BashFAQ/068 -- How do I run a command, and have it abort (timeout) after N seconds?
06:36  TheBonsai: OT: how does a X11 program that needs to be SUID for some reason usually manage the display access control complexity?
06:37  brick: TheBonsai, i dunno but you might also want to ask in #xorg
06:38  TheBonsai: merci
06:44  jbwiv: hi guys. Could someone explain to me why this (http://pastie.org/1229155) prints NOT EQUAL?
06:44  twkm: probably flawed code.  set -x is your friend.
06:46  TheBonsai: probably a space or two missing :)
06:46  jbwiv: ahhh...thanks
06:47  TheBonsai: # echo helloworld # i want it to print "hello world" but it prints "helloworld" instead - BUG
06:47  evalbot: TheBonsai: helloworld
07:05  sikilpaake: how come i can't do this?     ls "$some_dir"    ??
07:06  TheBonsai: you can do this. so what about just telling us more details instead of playing a quiz?
07:09  sikilpaake: TheBonsai: i don't understand what you mean?
07:09  TheBonsai: okay, then the answer is:
07:09  TheBonsai: you can do this.
07:09 * TheBonsai waits for the "eeeeeew, but it doesn't work"
07:10  sikilpaake: bsp_name="blah"; mkdir "$blah"
07:10  sikilpaake: oops
07:10  sikilpaake: bsp_name="blah"; mkdir "$bsp_name"
07:11  TheBonsai: will work, on the shell level
07:14  sikilpaake: TheBonsai: if my variable contains a "~", will it still work?
07:14  TheBonsai: yes
07:15  TheBonsai: well
07:15  TheBonsai: depends what you mean by "work"
07:15  TheBonsai: it will NOT be replaced
07:15  TheBonsai: when quoted
07:15  TheBonsai: hm
07:15  sikilpaake: bsp_name="~/Desktop/blah"; mkdir "$bsp_name"
07:15  TheBonsai: it won't be replaced anyways
07:15  TheBonsai: so what do you mean by "work", replace or not?
07:15  sikilpaake: that won't make a directory in my Desktop, right
07:15  sikilpaake: ?
07:15  sikilpaake: bsp_name="~/Desktop/blah"; mkdir "$bsp_name"
07:15  TheBonsai: right. but it works.
07:16  sikilpaake: ok
07:16  sikilpaake: how can i make it work and also make a directory in my desktop?
07:16  TheBonsai: bsp_name=~/Desktop
07:16  sikilpaake: ingenious
07:17  TheBonsai: or at least ~/"Desktop"
07:17  TheBonsai: ~ must be followed by a /, unquoted
07:17  sikilpaake: thanks
07:18  sikilpaake: why should desktop be in quotes?
07:18  TheBonsai: it was an example. imagine ~/'my cool fancy $$$$ desktop ### with an idiotic filename'
07:19  sikilpaake: heh heh heh
07:19  TheBonsai: or, if you have user input
07:19  sikilpaake: you got a point there
07:20  TheBonsai: read -p "Which subdirectory of your home directory?" dir
07:20  TheBonsai: then you must use quotes, here ~/"$dir"
07:20  TheBonsai: because user can input anything
07:20  sikilpaake: hmm
07:21  sikilpaake: i'm really tired, so i really can't imagine anything breaking
07:21  TheBonsai: on ~/Desktop - no.
07:32  sikilpaake: TheBonsai: hey, man.. could you please recommend me a good way of ending a bash file?
07:32  TheBonsai: exit :)
07:33  sikilpaake: line 85: syntax error: unexpected end of file <--
07:33  sikilpaake: TheBonsai: thanks!
07:33  TheBonsai: uh
07:33  TheBonsai: no
07:33  TheBonsai: wait
07:33  sikilpaake: no?
07:33  sikilpaake: hmm
07:33  TheBonsai: that's a syntax issue
07:33  sikilpaake: all tasks were done
07:33  TheBonsai: bash EXPECTS something but doesn't find it before end of file
07:33  TheBonsai: do ... done
07:33  TheBonsai: " ... "
07:33  TheBonsai: something like that
07:33  igli: you've missed a semicolon or a brace somewhere. that kinda thing yeah
07:33  sikilpaake: hmm
07:34  TheBonsai: use an editor with syntax highlighting
07:34  sikilpaake: cool, i'll check for loose ends
07:34  sikilpaake: thanks
07:34  sikilpaake: yeah, i need an exit
07:34  sikilpaake: the penultimate line ends with &&
07:35  sikilpaake: how can i um.. not get that exit displayed?
07:35  TheBonsai: can you pastebin the code?
07:35  sikilpaake: nevermind
07:36  sikilpaake: TheBonsai: if you really want to see it
07:36  sikilpaake: TheBonsai: promise you won't laugh
07:36  sikilpaake: TheBonsai: enjoy http://sikilpaak.pastebin.com/sbXc4RVJ
07:36  TheBonsai: i've seen enough bash code from #bash during the years. i will laugh without writing on irc, ok? ;)
07:37  TheBonsai: line 43 - what is that && for?
07:38  sikilpaake: TheBonsai: my logic stems from how i understand ; and &&
07:38  sikilpaake: as far as i know, you use && as "only proceed if previous command exited succesfully"
07:38  sikilpaake: and ; as "continue anyway"
07:38  TheBonsai: ; is not needed when you use a newline
07:38  sikilpaake: i didn't know that
07:38  sikilpaake: TheBonsai: actually, i think i do remember that, but
07:39  TheBonsai: and if you want to connect 2 commands with &&, they need to be on the same line (or done with line continuation)
07:39  TheBonsai: foo && bar
07:39  TheBonsai: foo && \
07:39  TheBonsai: bar
07:39  TheBonsai: foo && {
07:39  TheBonsai: bar
07:39  TheBonsai: }
07:39  TheBonsai: etc ...
07:39  sikilpaake: wait a sec
07:39  sikilpaake: TheBonsai: sometimes, when i test and debug my code, i paste that part into the commandline directly.. so the ; come in handy
07:40  sikilpaake: i have done && on seperate lines, it works, too
07:40  TheBonsai: hm, actually that doesn't seem to be that important (to have the 2,. command on the same line)
07:40  TheBonsai: yea, i just tested
07:40  TheBonsai: forget my noise ;)
07:40  sikilpaake: yeah
07:40  sikilpaake: TheBonsai: hey, no prob
07:40  TheBonsai: so, let's continue to check what bash is searching for
07:40  sikilpaake: TheBonsai: seems like i accidentally got you to learn something
07:40  sikilpaake: sure, please
07:41  igli: 52 and 69 the && look like part of the previous text
07:42  igli: use spaces a bit more
07:42  igli: in fact they all do, but I don't write stuff like that
07:43  igli: damn  i guess not
07:43  sikilpaake: huh?
07:44  sikilpaake: oh shit! spaces
07:44  sikilpaake: you're right
07:44  TheBonsai: ah yea
07:44  TheBonsai: it is the last command
07:44  TheBonsai: the very last &&
07:44  TheBonsai: it expects a next command
07:44  sikilpaake: right
07:44  TheBonsai: that's why it works with exit, because then the expected command is "exit"
07:44  sikilpaake: right :)
07:45  TheBonsai: since you exit anyways, you don't need a && here
07:45  TheBonsai: just stop the script
07:45  igli: i think you're looking for set -e
07:45  igli: too much &&
07:45  sikilpaake: nope
07:45  sikilpaake: igli: nope
07:45  igli: *shrug*
07:45  sikilpaake: TheBonsai: right, but i just add it in case i need to add more commands later in the next version or whatever
07:46  TheBonsai: i guess, too (set -e). since this massive manual error checking is unusual
07:46  sikilpaake: TheBonsai: you know, its just a thing i wanna do
07:46  sikilpaake: well, i want to have the script stop where there are problems, and not continue indefenetely
07:46  sikilpaake: so that's what the && is for
07:47  TheBonsai: that's what set -e is for
07:47  sikilpaake: on parts where i don't need it to &&, i use ;
07:47  igli: that's what set -e does; try ``help set'' in your terminal
07:47  TheBonsai: it bails out on any (unchecked) error
07:47  sikilpaake: yeah, but..
07:47  sikilpaake: i don't need that to be permanent
07:47  igli: hehe
07:47  sikilpaake: heh
07:47  sikilpaake: so i just "kludge" it this way
07:47  TheBonsai: yea, i see. your mkdir list only checks one time
07:47  sikilpaake: right
07:48  sikilpaake: if that base directory isn't created, then it stops
07:48  sikilpaake: no point in having all the other error messages
07:48  TheBonsai: no. it continues with the 3rd mkdir
07:48  TheBonsai: mkdir 1 && mkdir 2; mkdir 3
07:48  TheBonsai: mkdir 3 will run unconditionally
07:49  TheBonsai: aka "always"
07:49  sikilpaake: no, because the script stops at the && if the base directory is not created
07:49  sikilpaake: the one on the desktop
07:49  igli: if mkdir -p blah; then .. ; fi # and perhaps some brace expansion
07:49  TheBonsai: it can't stop at this point
07:50  TheBonsai: or you have set -e
07:50  sikilpaake: TheBonsai: i tested it already
07:50  TheBonsai: # true && echo true; echo next
07:50  sikilpaake: TheBonsai: thanks for checking my code
07:50  evalbot: TheBonsai: true
07:50  evalbot: TheBonsai: next
07:50  TheBonsai: # false && echo true; echo next
07:50  evalbot: TheBonsai: next
07:50  igli: hehe i've heard that before
07:50  igli: (i tested it..;)
07:51  sikilpaake: TheBonsai: fuck
07:51  sikilpaake: hmm
07:51  TheBonsai: what about this method
07:51  TheBonsai: mkdir 1 && {
07:52  TheBonsai: mkdir 2
07:52  TheBonsai: mkdir 3mkdir N
07:52  TheBonsai: }
07:52  sikilpaake: hmm
07:52  sikilpaake: sounds like a function
07:52  sikilpaake: TheBonsai: lemme try that
07:52  TheBonsai: no, it's a grouped command
07:52  igli: if mkdir -p blah; then mkdir blah/{foo,bar,baz} ; fi
07:52  TheBonsai: another way is what igli said, mkdir -p and brace expansion, yes
07:53  TheBonsai: far easier to hack
07:53  igli: yeah
07:53  igli: # echo foo{1,2,3}
07:53  evalbot: igli: foo1 foo2 foo3
07:53  TheBonsai: if ! mkdir -p blah/{foo,bar,baz}; then echo "AIIIIIEEEEEEE.... I'M MEEELTING"; fi
07:53  TheBonsai: er
07:53  igli: hehe
07:53  TheBonsai: insert an "exit 1" there
07:54  igli: if mkdir -p blah; then mkdir blah/{foo,bar,baz} ; else echo 'unable to make blah'>&2; exit 1; fi # seems nicer to me for some reason
07:55  likewhoa: s/exit 1/init 1/
07:55 * likewhoa hides
07:55  TheBonsai: if ! mkdir -p blah/{foo,bar,baz}; then echo "unable to create directory structure"; exit 1; fi
07:55  TheBonsai: is enough
07:55  igli: hehe m00 likewhoa :)
07:55  igli: true enough
07:56  likewhoa: m00 igli and TheBonsai
07:56  sikilpaake: here you guys go again, talking about shit that's way over my head and does not apply to my practical problem at hand
07:56  igli: sikilpaake: it does. you just haven't relaxed and thought about it
07:56  sikilpaake: igli: you have no idea all i have to do for tommorow, still
07:56  likewhoa: sikilpaake: it's only hard the first time
07:57  sikilpaake: igli: i appreciate your encouragement, but i'm not learning all of that stuff tonight
07:57  igli: it's making your problem easier to handle. ok, try set -e then
07:57  likewhoa: sikilpaake: do it for your country
07:57  sikilpaake: i still have to get this script to work, and then i have to learn how to make uv texturing in blender
07:58  sikilpaake: likewhoa: i *AM* doing it for my country.. wait.. am i? i don't even know anymore..
07:58  likewhoa: sikilpaake: see the new short film made in blender?
07:58  igli: if you have set -e it'll simply exit w/e a command fails (and isn't checked with eg foo || bar)
07:58  sikilpaake: likewhoa: no, is it good?
07:58  likewhoa: sikilpaake: google sintel
07:59  sikilpaake: likewhoa: dude, i know sintel, i'm asking you for your subjective opinion on it
07:59  likewhoa: oh it was a good film in terms of story line and i give it an 8 on graphics
08:00  sikilpaake: igli: maybe evalbot says otherwise, but eval can shove it just this once: if the first directory doesn't get created, the subdirectories don't get created either, bash doesn't even try, it stops right then and there
08:00  sikilpaake: likewhoa: cool
08:00  likewhoa: don't use eval?
08:00  sikilpaake: eval?
08:00  likewhoa: n/m
08:00  sikilpaake: heh
08:00  sikilpaake: i gotta go back to debugging this carcass
08:01  TheBonsai: m00 likewhoa
08:01  twkm: sikilpaake: mkdir isn't part of bash.
08:01  TheBonsai: now i'm off for work
08:01  TheBonsai: bye
08:02  sikilpaake: thanks, TheBonsai
08:12  phil_in_london: http://pastebin.com/0jL20zMx    looking for some help on extracting just the subject from that file.
08:17 --- vincent is now known as vincent_ardern
08:18  igli: sed '/^Subject:(.*)/{s//\1/;p;q}' file # afair
08:18  igli: er sed -n '...
08:20  igli: sikilpaake: your script would be a lot easier to follow with root=$netradiant_target_temp_path$bsp_name near the top and use $root instead of that all over the shop
--- Log closed Mon Oct 18 08:26:24 2010
--- Log opened Mon Oct 18 08:26:46 2010
08:26 --- Users 498 nicks [0 ops, 0 halfops, 0 voices, 498 normal]
08:28 --- Channel #bash was synced in 85 seconds
08:28  phil_in_london: igli, thanks very very much :)
08:28  igli: yw phil_in_london :)
08:29 * igli is glad it worked
08:29  igli: don't forget #sed and #awk btw phil_in_london
08:29  phil_in_london: I didn't even think there would be groups just for that :)
08:30  igli: the only there isn't is #grep ;p (and #sh but we deal with that here;)
08:30  phil_in_london: grep I'm cool with
08:31  phil_in_london: its just strings of unknown length that I still have trouble with.
08:32  phil_in_london: thanks again, ciao
08:34 * igli waves
09:42  shai__: Hi :) I have a list of virtual machines (approx. 12) in an array and I have another array that states the three Host machines which host these guests. I need to somehow correlate between the two arrays. What would be the best way of doing this?
09:43  twkm: you should have used an associative array.
09:43  lhunath: or config files if you have no bash4
09:44  shai__: I do have bash4
09:44  shai__: And that does seem like a good solution .. I'll check it out now.
09:44  lhunath: declare -A hosts=( ["host1"]="machine1 machine2 machine3" )
09:44  lhunath: !faq arrays
09:44  greybot: http://mywiki.wooledge.org/BashFAQ/006 -- How can I use variable variables (indirect variables, pointers, references) or associative arrays?
09:45  lhunath: !arrays
09:45  greybot: An array maps numbers to strings. Bash 4 also has associative arrays (maps strings to strings). See http://mywiki.wooledge.org/BashSheet#Arrays
09:51  ChrisBuchholz: Hey. Is it possible with grep to get the matched regex - not the whole line, and possibly get the different parts of a matched string? Or is there some other utility than grep i should use for that?
09:52  hipe: ChrisBuchholz: i'm more of a ruby person but pretty sure awk or sed will do fine for that
09:52  twkm: even bash.
09:53 * hipe interested in how
09:53  lhunath: hipe: see BASH_REMATCH.
09:54  lhunath: ChrisBuchholz: grep is a tool that selects a line from a stream or file.  if you don't want to do that; don't use it.
09:54  lhunath: s/a line/lines/
09:54  Uqbar: GNU grep has a "-o" option which does just that. if you really want to use grep.
09:55  ChrisBuchholz: well, i really wanna use the right tool, be it grep or something else
09:55  ChrisBuchholz: hipe: sed? really?
09:56  ChrisBuchholz: lhunath: maybe you can enlighten me about a more suitable tool for this?
09:57  lhunath: you already have been
09:57  lhunath: I'd be repeating hipe and twkm.
09:58  shai__: lhunath: it seems my partner doesn't have bash4 and you said to use "config files" ... what did you mean?
09:59  lhunath: shai__: for conf in /etc/vhosts/*.conf; do source "$conf"; ...; done  # each .conf file describes one machine, eg. host=host1 machines=(machine1 machine2 machine3)
10:00  lhunath: shai__: sourcing the config file will set those variables for use in the for body, then you can do your host specific stuff in the ...
10:00  lhunath: adapt to what makes sense in what you're really doing.
10:00  ChrisBuchholz: lhunath: well okay then. But tell me - how would sed be able to do this? Doesnt sed 'replace' stuff? Anyhow. I'm writing a bash script to do some extractions for me, and i need some way to match some stuff with regex, and print the matched stuff. I looked at grep because i knew that could find the lines where the matched stuff is on, but grep didnt do well for me when it came to getting the actual match.
10:01  lhunath: ChrisBuchholz: sed is a stream editor.  it does a whole lot more than "replace stuff".  but replacing stuff is all you need for this particular case.
10:01  lhunath: ChrisBuchholz: alternatively; bash's BASH_REMATCH can be used in a while loop.
10:02  lhunath: your problem is described too vaguely for me to be able to determine the most appropriate tool.
10:02  pgas: gnu grep has a -o option that you might like, otherwise the solution is very much dependant on the task
10:03  lhunath: gnu grep's -o is also very limiting in what it can show.  makes more sense to just use the right tool from the get-go so you can easily adapt as your problem becomes more complex.
10:04  ChrisBuchholz: lhunath & pgas: say i have an xml file with hundreds of items: <item><something id="23fdsf"></item><item><something id="5453dfd"></item>. Then i need to get all id-values.
10:04  shai__: lhunath: thank you :)
10:05  lhunath: ChrisBuchholz: XML is not line-based data.  there is a reason people created XSLT.
10:05  lhunath: or even just xpath.
10:07  ChrisBuchholz: lhunath: this was just an example of what i want to do. Should be adaptable to my task. I simple need to match <something id="..."> and then get the ... part. Matching the stuff is done. Getting the ... part, i have not done yet.
10:07  lhunath: $ xpath -e '//something/@id' <(echo '<root><item><something id="23fdsf"/></item><item><something id="5453dfd"/></item></root>') 2>/dev/null
10:07  lhunath:  id="23fdsf"
10:07  lhunath:  id="5453dfd"
10:07  ChrisBuchholz: looks promising
10:07  lhunath: ChrisBuchholz: stop raping your data.  your data is XML, that is a markup language
10:08  lhunath: built for parsability.  take advantage of that.
10:08  ChrisBuchholz: a proper solution would be needed is that was in case of an actual application, but i just need to recover my lost google reader feeds from the google reader api ;)
10:09  lhunath: <something  id=""> is the same thing as <something id="">.  are you going to define all those rules in some regex?  No, that would be stupid.
10:09  ChrisBuchholz: lhunath: i get ya' ;)
10:09  ChrisBuchholz: and thank you
10:11  lhunath: if this is just a one-time thing, you may like things like sgrep
10:11  Carmageddon1: guys, what do these2 lines mean?
10:11  Carmageddon1: set -x
10:11  Carmageddon1: exec 2>&1
10:11  lhunath: !-x
10:11  greybot: Setting the -x option on bash enables a debugging mode that makes bash output the command name and arguments that it will run (after all parsing and expansion has been applied). Set it by starting a script with ''bash -x ./myscript'' or putting ''set -x'' before the code you want to debug. ''set +x'' turns this behaviour off.
10:11  pgas: awk -v RS=\" '/something id=$/{getline;print}'
10:12  lhunath: !forget exec
10:12  greybot: OK, lhunath
10:12  Carmageddon1: ahh ok thanks lhunath, what about the exec 2>&1?
10:14  lhunath: !learn exec exec [command] [redirections] replaces the script's process by a new one that runs the command.  When no command is given, only the redirections are applied to the current shell.
10:14  greybot: OK, lhunath
10:14  ChrisBuchholz: lhunath&pgas cool too, indeed!
10:31  Uqbar: does bash's regex matcher support backreferences?
10:34  geirha: Yes, it puts them in the BASH_REMATCH array.
10:35  Carmageddon1: ok.. how can I modify the line exec 2>&1 to output (as well as set -x ) into a file?
10:35  taylanub: you just set -x first, it makes bash print to stderr (2)
10:36  taylanub: to redirect stderr to a file;  exec 2>file
10:36  Uqbar: I mean backreferences inside the regex, as in  grep '\(.\)foo\1'
10:36  geirha: exec >file 2>&1
10:36  twkm: Uqbar: grep != bash.
10:37  Uqbar: I know, hence my question: does bash's regex matcher support backreferences?
10:37  Carmageddon1: taylanub so just exec 2> /var/log/wipe.log would output everything there?
10:37  twkm: Uqbar: you can have groups in the regex used with [[.
10:37  Uqbar: yes, but can I also have backreferences?
10:37  twkm: sigh.
10:38  lhunath: Uqbar: no.
10:38  Carmageddon1: geirha whats the difference between exec 2> file and your syntax? is that the same?
10:38  taylanub: Carmageddon1: yes. after that command, everything that goes to stderr goes to /var/log/wipe.log
10:38  twkm: in three seconds you could have tested this.
10:38  taylanub: Carmageddon1: do you also want stdout to go to that file?
10:38  Uqbar: twkm: I tried and failed, so I asked in case there was some syntax I wasn't aware of.
10:38  Carmageddon1: yes, everything I need a way to debug automatic script
10:38  taylanub: Carmageddon1: then what geirha said.
10:39  lhunath: !2>&1 > Carmageddon1
10:39  greybot: Carmageddon1: Making sense of the copy descriptor operator: http://wiki.bash-hackers.org/scripting/copydescriptor
10:39  taylanub: x>&y  means  x>(where y goes to at the moment)
10:39  Uqbar: (thanks lhunath)
10:40  Carmageddon1: thanks lhunath :) will read it.. ahh, and good example taylanub thanks too :)
10:43  mar77i: Uqbar: lol your nick makes me want to type /nick Tloen :)
10:44  Uqbar: mar77i: heh :)
10:44  findingroute: hi, what would be the best way to do some word count for uniqe words in file ?
10:45  findingroute: so i could get how many times is there some word in file
10:46  geirha: All words or a specific one?
10:46  lhunath: define 'word' to yourself; extract all words from a file; and then count them.
10:47  erUSUL: tr ' ' '\n' < file | grep -c word
10:47  karthee: findingroute: open vim ...  :%s/ /\r/g  then :wq  .......   sort  filename | uniq -c
10:47  Uqbar: ouch
10:47  mar77i: there must be a one process solution with awk
10:47  m4n: if you have gnu grep, grep -ow 'word' file | wc -l
10:48  m4n: or even grep -ocw 'word' file
10:49  lhunath: a word is not "any non-space characters"
10:49  lhunath: or at least, I don't expect findingroute wants it to be that.
10:49  mar77i: m4n: umm, fail
10:49  mar77i: # grep -ocw word <<<$'word word\nword'
10:49  m4n: sorry, grep -ocw wont work if you have multiple instance in one line
10:49  evalbot: mar77i: 2
10:51  geirha: awk -F '[^[:alnum:]_]+' '{for (i=1;i<=NF;i++) a[$i]++} END {for (i in a) print a[i],i}'
10:52  tehbaut_: how can I check my server hardware stats?
10:52  lhunath: tehbaut_: ask your distro.
10:52  tehbaut_: ok
10:54 --- tehbaut_ is now known as tehbaut
10:58 --- Zenopus_ is now known as Zenopus
10:59  NOMADICUS: Hello, I am looking for a command that will continuously output the updates to a file.  The file I want to watch is: "/proc/bus/input/devices", how can I do this?
11:00  erUSUL: NOMADICUS: tail -f
11:02  koala_man: NOMADICUS: you'd have to do that by polling and diffing. how about using udev instead?
11:02  erUSUL: well maybe in this case tail -f is not what you wat ... « while inotifywait -e modify /proc/bus/input/devices; do cat /proc/bus/input/devices ; done »
11:02  koala_man: inotify works on /proc?
11:03  NOMADICUS: I'll find out?
11:03  erUSUL: really do no know
11:05  erUSUL: NOMADICUS: use udevadm monitor then like koala_man suggest?
11:08  fahmad: can some one tell me how can i allow ranges of ip addresses in firewall ...
11:09  taylanub: x.y.z.t/n    n is 0-32   it means "n bits from the right can vary"
11:09  taylanub: i.e.  0.0.0.0/24  =  00000000.00000000.00000000.(00000000-11111111)  in binary
11:10  lhunath: fahmad: join the channel that discusses whatever firewall you use.
11:10  fahmad: taylanub : i know that part but if i want to allow this range then v
11:10  fahmad: 64.4.0.0-64.4.63.255
11:10  fahmad: it will be hard though
11:10  lhunath: fahmad: join the channel that discusses whatever firewall you use.
11:10  fahmad: writing lines ...
11:10  taylanub: some apps support e.g.  x-y  for x to y range
11:10  taylanub: fahmad: listen to lhunath ...
11:15  NOMADICUS: I can't tell if this is working or not because the file isn't changing anymore.
11:15  NOMADICUS: O well, thanks for the help.
11:15  taylanub: use a file that does change :P  /proc/meminfo maybe
11:18  NOMADICUS: taylanub: It dosen't seem to be doing anything.
11:37  mattish: good morning :)
11:38 --- Weust`afk is now known as Weust`
11:38  mattish: If im using ssh -T user@host <<'EOI' in a bash script is there a way to pass a variable to the remote machine from the local ?
11:39  Naib: source <(ssh name@yourhost cat /some/file)   or echo "$some_variable"
11:39  taylanub: we're from all around the world mate. it's 12:40 here.   don't use "'EOI'" but "EOI", then escape properly.   i'm an ssh noob though, i think there's more proper ways
11:40  taylanub: !ssh
11:40  greybot: Secure SHell (See #openssh, http://mywiki.wooledge.org/CategorySsh) - To run bash code remotely; adapt: ssh user@host bash <<< "$(printf 'echo %q' "$localVar")"
11:41  MessedUpHare: I am trying to make a for loop detect a specific list of extensions with "for f in $PATH.{mov,mxf,wmv,wav}; do" which works ok but iterates over *.mov *.mxf etc.. am i missing something fundamental?
11:41  trash: MessedUpHare: Do you know PATH is special?
11:42  MessedUpHare: nope
11:42  trash: MessedUpHare: And you might want nullglob.
11:42  MessedUpHare: rename my variable?
11:42  taylanub: yes
11:42  trash: MessedUpHare: Yes.
11:42  MessedUpHare: ok
11:42  trash: !varcaps > MessedUpHare
11:42  greybot: MessedUpHare: By convention, we capitalize environment variables (PAGER, EDITOR, ..) and internal shell variables (SHELL, BASH_VERSION, ..). All other variable names should be lower case. Remember that variable names are case-sensitive; this convention avoids accidentally overriding environmental and internal variables.
11:42  trash: /foo/bar/.{mov,wmv} will also match nothing.
11:43  MessedUpHare: thats funny, its working ok but passes a literal *.(whichever ext I add)
11:43  MessedUpHare: also
11:43  soreau: Hello
11:47  soreau: I need help understanding this hunk of code http://pastebin.com/xfMqCiXX
11:47  soreau: If I try to pass an option, it just says invalid option
11:48  soreau: I don't really understand the while loop
11:54  zai: how can I direct a verbose bash output to a file? with verbose, I mean something like "bash -x script.sh > logfile" (which isn't giving me what I'm looking for)
11:54  trash: Redirect stderr.
11:55  zai: trash: can you tell me how? (/me is a unix noob)
11:55  trash: 2>file
11:55  trash: !redir > zai
11:55  greybot: zai: Learn about redirections! Syntax: http://bash-hackers.org/wiki/doku.php/syntax/redirection and http://mywiki.wooledge.org/BashGuide/InputAndOutput#Redirection ## Illustrated tutorial: http://bash-hackers.org/wiki/doku.php/howto/redirection_tutorial
11:55  zai: ty!
11:56  mattish: I still cant get this ssh thing working :(
11:56  mattish: !ssh
11:56  greybot: Secure SHell (See #openssh, http://mywiki.wooledge.org/CategorySsh) - To run bash code remotely; adapt: ssh user@host bash <<< "$(printf 'echo %q' "$localVar")"
11:57  soreau: while [[ $1 == -* ]]; do ... done
11:57  soreau: What does this mean?
12:02  lhunath: while the contents of the first positional parameter matches the glob "-*", do ...
12:02  lhunath: -* means, a dash followed by any number of any characters
12:07  mattish: taylanub, how would i escape the variable, it seems to still run the substitution on my local machine instead of the remote
12:07  mattish: eg track=`cat /etc/track` echo \$track
12:07  mattish: just trys to cat /etc/track on local machine still
12:07  taylanub: i said i'm an ssh noob (totally)
12:07  mattish: ok ta :)
12:07  taylanub: but i can tell you to use $() instead of ``
12:09  taylanub: probably  track='$(cat /etc/track)'  will work.
12:09 --- hasan is now known as Guest99466
12:11  Guest99466: I have a html file where I want to strip the html tags except the content of the <body>. so If I have "<html><body> CONTENT </body></html>". i want to make sure to strip the html tags to <body> and below the content from </body> </html>
12:12  Guest99466: how do I realize this? sed? awk? cut or head?
12:13  trash: !html > Guest99466
12:13  greybot: Guest99466: You can't realistically parse tag-based markup languages like HTML and XML using Bash or utilities such as grep, sed or cut. If you just want to dump/render HTML, see (links|links2|lynx|w3m) -dump, html2text, vilistextum. For parsing out pieces of data, see tidy+(xmlstarlet|xmlgawk|xpath|xml2), or learn xslt. Ask #xml and #html for more help. See http://www.codinghorror.com/blog/archives/001311.html
12:15  Guest99466: trash: http://pastebin.org/287095
12:16  Guest99466: imagine, I just want to cut the content. is it possible to say "search for string and cut everything out?" with sed?
12:17  trash: Guest99466: Did you even look at the tools?
12:17  trash: You have HTML, use an HTML parser. End.
12:17  Guest99466: no
12:17  Guest99466: ok
12:17  Guest99466: but I just can work with the tools I have on this workstation
12:17  Guest99466: and these are sed, awk, etc.
12:18  Guest99466: standard linux tools.
12:18  silasdavis: how can I start a forked forward daemon with 'ssh  -NfL ...', and then kill it after some other command
12:19  silasdavis: i.e. forward and fork; connect to forwarded port; disconnect and kill forwarding daemon
12:19  lhunath: silasdavis: don't use -f.
12:19  Knirch: Guest99466: if you really can't install a dedicated tool, I'd reluctantly suggest a google for strip html sed   or strip html awk
12:20  lhunath: making commands fork off is always a bad idea.
12:20  silasdavis: lhunath: I'd like a script that would connect me to locally forwarded port though, and if ssh is not forked I can't run next commnad..
12:20  lhunath: since you cannot manage them anymore.
12:20  Knirch: Guest99466: but I doubt you'd get much help with it here except people typing: !html > Guest99466
12:20  lhunath: silasdavis: run ssh asynchronously.
12:20  silasdavis: lhunath: do I run it in a subshell or something?
12:20  silasdavis: lhunath: how would I do that?
12:20  lhunath: ssh -NL ... & othercommand; kill $!
12:20  lhunath: & causes the command before it to run "in the background"
12:21  lhunath: !&
12:21  greybot: If you put the control operator & at the end of a command, e.g. ''command args &'', the shell executes the command in the background in a subshell. The shell does not wait for the command to finish, and the return status is 0. Pid of the last backgrounded command is available via the special variable $!
12:21  silasdavis: oh of course, thanks
12:21  Guest99466: Knirch: thank you. =)
12:21  silasdavis: !$!
12:21  greybot: $! expands to the process ID of the most recently executed background (asynchronous) command.
12:21  silasdavis: great
12:23  silasdavis: lhunath: anyway I can detect when the forward is initialized or will I need to just add an arbitrary wait?
12:24  lhunath: silasdavis: does ssh invoke the command you give it after setting up the forwards?  I believe so.  in which case you may be able to use a remote command to let your local code know
12:25  lhunath: silasdavis: got bash 4?
12:27  lhunath: if so, play with: coproc ssh satura 'sleep 1; echo foo; sleep 5'; echo "waiting"; read <&"${COPROC[0]}"; echo "read: $REPLY"
12:28  lhunath: the sleeps are just to demonstrate.  you'll want to echo something immeditatly; causing the local read to unblock as soon as ssh is done.
12:28  silasdavis: lhunath: remote is bash 4, is that good enough?
12:29  lhunath: no, the coproc runs locally.
12:30  lhunath: coproc ssh -L... host 'echo; read'; read <&"${COPROC[0]}"; othercommand; echo >&"${COPROC[1]}"
12:30  lhunath: that should do what you wan.
12:30  lhunath: t
12:30  lhunath: untested(tm)
12:31  silasdavis: lhunath: sadly I am on cygwin here which doesn't seem to have bash 4, but I'll try it next time I've got a local installation of bash 4
12:31  lhunath: if you have no bash4, you'd need to do the fifo handling yourself.
12:31  silasdavis: I'll read up on coproc
12:32  lhunath: just using coproc to make automatic temporary fifos, really.
12:32  lhunath: mkfifo infifo outfifo; ssh -L host 'echo; read' <infifo >outfifo & read <outfifo; othercommand; echo >infifo
12:33  silasdavis: lhunath: is the idea that you read the output of 'ssh -L' until EOF then execute connect?
12:33  lhunath: read one line of output from ssh
12:33  lhunath: echo gives me one line
12:33  lhunath: then the read in ssh waits for me to write one line to ssh.
12:34  lhunath: I do that with the last echo.  after that, the ssh's remote script is at an end so ssh shuts down
12:35  silasdavis: so is this relying on ssh -L printing one line once it has successfully initialized the forward?
12:35  lhunath: indeed
12:35  lhunath: relying on the ssh command to run after the forwarding has been initialized
12:35  silasdavis: ah, sorry I see now, the remote command
12:35  silasdavis: cunning
12:36  lhunath: aye
12:36  sikilpaake: i need to zip a directory
12:37  sikilpaake: or
12:37  sikilpaake: more to the point, in need to zip a bunch of directories, and name the file foo
12:39  jure_: how do I get "an-1.an" out of "a1.a2. ... an-2.an-1.an"?
12:42  silasdavis: lhunath:
12:43  silasdavis: sorry, slippery return, what does the read in 'echo; read' achieve?
12:44  silasdavis: or the echo perhaps.. doesn't read wait anyway
12:44  silasdavis: ah echo's output goes into local read
12:45  silasdavis: that pumps it back to remote read
12:45  silasdavis: which causes the termination?
12:50 * [gnubie] waves
12:50  silasdavis: !fifo
12:50  [gnubie]: i wonder why the line similar to "exec /tmp/test-2.sh > >(tee -a /tmp/test-`date +%Y%m%d`.log)" in my /etc/rc.local using centos 5.x 32bit gives me an error: syntax error near unexpected token `>'
12:50  greybot: http://mywiki.wooledge.org/NamedPipes
12:51  [gnubie]: in debian squeeze, it works without an error
12:51  jure_: probably because the two >'s aren't together
12:52  [gnubie]: is it?
12:53  [gnubie]: i remove the space in between the two > and executed in my debian squeeze and now i'm getting this error:  syntax error near unexpected token `('
12:55  [gnubie]: any idea?
12:56  jure_: try "exec /tmp/test-2.sh >>(tee -a /tmp/test-$(date +%Y%m%d).log)"
12:57  [gnubie]: jure_: in a script?
12:57 --- e-DIO-t_ is now known as e-DIO-t
12:57  jure_: works for me in the terminal
12:57  reggie: #/bin/bash --debugger
12:57  reggie: stty echo
12:57  reggie: read -s -p "PW:" pass;
12:57  reggie: stty echo
12:57  reggie: expect -c "
12:57  reggie: set timeout 20
12:57  reggie: spawn ssh user@hostname
12:57  reggie: expect *password:
12:57  reggie: send \"$pass\r\"
12:57  reggie: set timeout 5
12:57  reggie: send "uname\r"
12:57  reggie: send \"exit\r\"
12:57  reggie: "pls can somebody help me?
12:57  reggie: i want put passwd to ssh automaticaly
12:58  reggie: but its not working correctly
12:58  lil_cain: use ssh keys
12:58  reggie: i cant
12:58  reggie: i want do scrit to cisco switches
12:58  reggie: *script
12:58  lil_cain: Then I'd suggest using rancid
12:59  lil_cain: clogin, to be specific.
12:59  lil_cain: http://www.shrubbery.net/rancid/man/clogin.1.html
13:00  [gnubie]: reggie: use expect
13:00  [gnubie]: jure_: are you using centos-5.x ?
13:00  reggie: gnuyoga: do you see my code ? ^^ i try use expect
13:00  jure_: no
13:01  lil_cain: reggie: Just use rancid. It already has written, and very well tested code to do what you're tring to do.
13:01  [gnubie]: reggie: i tried last time combining bash and expect but i failed. i ended up using expect
13:02  [gnubie]: jure_: my script runs perfectly on debian squeeze but failed on centos-5.x
13:02  reggie: lil_cain: yes, but i must compile package on server, i dont have root on server where i can access to devices
13:02  [gnubie]: jure_: i'm not sure if it has something to do with the version of the bash installed
13:03  reggie: lil_cain: if i want compile i may use sshpass or perl ssh script
13:03  jure_: well if you're using 5.5 it can't be that old
13:04  [gnubie]: jure_: on debian squeeze, the bash installed has a version number 4.1-3 whereas on my centos-5.x where i want to execute it, the bash installed has a version number 3.2-24.5.
13:08  jure_: that command basically executes the test-2.sh script and directs all output to the log, right?
13:09  jure_: what's wrong with "/tmp/test-2.sh &> /tmp/test-$(date +%Y%m%d).log" ?
13:10  silasdavis: lhunath: I'm sure I had your fifo method working, but now when I run it I am getting bash: read: read error: 0: Communication error on send
13:10  silasdavis: on the line & read <outfifo
13:10  silasdavis: any ideas?
13:13  jure_: oh, you want to append the output :S
13:15  jure_:  /tmp/test-2.sh 2>&1 | tee -a /tmp/test-$(date +%Y%m%d).log
13:15  [gnubie]: jure_: yes
13:16  barby: hello
13:17  barby: i nedd to compare inside an if
13:17  barby: if $i is equal as a string
13:17  barby: how i can?
13:17  barby: :(
13:17  geirha: if [[ $i = foo ]]; then
13:17  geirha: !bashguide
13:17  barby: uhm
13:17  greybot: http://mywiki.wooledge.org/BashGuide
13:17  barby: fantastic
13:18  barby: i used if with only one [
13:18  barby: :)
13:18  barby: more thanks
13:18  geirha: !faq [[
13:18  greybot: http://mywiki.wooledge.org/BashFAQ/031 -- What is the difference between test, [ and [[ ?
13:18  karthee: HI .. I have this condition.. if user mentions the value of a variable then take it .. otherwise its hould be .* .... I m not getting this ..  http://pastebin.com/dqBBRzst
13:18  lhunath: [gnubie]: use bash.
13:19  lhunath: silasdavis: paste code?
13:19  jure_: lhunath, I think he's using bash already
13:19  barby: more thanks geirha
13:19  lhunath: >>() is wrong.
13:19  lhunath: you want file redirection followed by process substitution.
13:20  lhunath: > >() is correct, but doesn't work in sh.
13:21  silasdavis: lhunath: http://pastebin.com/CgQpWDXN
13:21  silasdavis: also playing with:
13:21  lhunath: karthee: var='.*'; read -r -p "var? [$var] " && [[ $REPLY ]] && var=$REPLY
13:22  silasdavis: mkfifo out; echo >out; read <out
13:22  silasdavis: why doesn't that work?
13:22  [gnubie]: lhunath: i'm using bash already. on debian squeeze, the bash installed has a version number 4.1-3 whereas on my centos-5.x where i want to execute it, the bash installed has a version number 3.2-24.5. i'm not sure if it has something to do with the version differences..
13:23  lhunath: 3# echo $BASH_VERSION; echo a > >(cat)
13:23  shbot: lhunath: 3.2.33(1)-release
13:23  shbot: lhunath: a
13:23  lhunath: does that command fail on your centos box in bash?
13:24  [gnubie]: my objective now is to make it work on my centos-5.x.. i basically need all the process executed in my script be logged to stdout and a log file
13:24  lhunath: silasdavis: not sure; looks fine to me
13:25  silasdavis: lhunath: should mkfifo out; read <out work?
13:25  lhunath: silasdavis: define work?  it shouldn't give an error
13:25  silasdavis: it gives: bash: read: read error: 0: Communication error on send
13:25  silasdavis: maybe something is broken with cygwin here..
13:26  lhunath: probably something to do with cygwin/windows' broken implementation of named pipes.
13:26  lhunath: maybe #cygwin can confirm that
13:27  [gnubie]: lhunath: 3.2.25(1)-release
13:27  silasdavis: lhunath: thing is I'm fairly sure I had it working before I added variables to that script and whatnot, perhaps a restart will help..
13:27  lhunath: [gnubie]: what about the echo a > >(cat) ?
13:28  zxd_: what does set -o pipefail do ?
13:29  lhunath: zxd_: considered reviewing man bash?
13:30  lhunath: If pipefail is enabled, the  pipeline's
13:30  lhunath:        return  status is the value of the last (rightmost) command to exit with a non-zero status, or zero if all commands exit successfully
13:30  gigo: hi all
13:30  [gnubie]: lhunath: in my domU, it says "a"
13:30  lhunath: ... is that your centos machine?
13:30  barby: returned
13:30  [gnubie]: but in my EC2 instance, i'm getting an error message: syntax error near unexpected token `>'
13:31  zxd_: lhunath: and if it is not set, return status comes from the leftmost command ?
13:31  barby: now i nedd to compare a command output with a string
13:31  [gnubie]: lhunath: sorry, my mistake.. not a domU.. it's just a chroot'ed environment of my centos-5.x image
13:31  barby: if they are equal
13:31  lhunath: [gnubie]: do me a favor.  stop referring to things with different names all the time and JUST copy paste the WHOLE command I gave shbot inyour your shell and the WHOLE output here.
13:32  [gnubie]: lhunath: ok. sorry.
13:34  lhunath: 2# echo a > >(cat)
13:34  shbot: lhunath: a
13:34  lhunath: it even works in bash 2, so your 3.2 should definately support it; unless it's nonstandard.
13:34  lhunath: or unless you're not running bash.
13:35  [gnubie]: ok, it's a in one of my running 5.x instance
13:35  [gnubie]: i mean, centos-5.x
13:36  [gnubie]: but in my /etc/rc.local , i added this line:  exec /usr/local/sbin/test.sh > >(tee -a /var/log/test-`date +%Y%m%d`.log)
13:36  [gnubie]: and the stdout says: syntax error near unexpected token `>'
13:37  [gnubie]: so that, during bootup, that line will be executed
13:37  lhunath: because the file is not executed by bash, obviously.
13:37  [gnubie]: lhunath: but inside the /usr/local/sbin/test.sh , the first line already comes with:  #!/bin/bash
13:38  lhunath: test.sh is not rc.local
13:38  lhunath: rc.local has bash code but is not parsed by bash.
13:38  lhunath: hence, error.
13:38  [gnubie]: i see.. so, i will change the first line of my /etc/rc.local from #!/bin/sh to #!/bin/bash
13:39  lhunath: assuming rc.local is executed.
13:39  [gnubie]: i was executed and that's how i found out the error message: syntax error near unexpected token `>'
13:39  lhunath: if it's just given to an sh interpreter that won't do anything other than changing a comment.
13:40  [gnubie]: s/i/it
13:40  lhunath: that's hardly proof of it being executed.
13:40  lhunath: that just means it's being interpreted.
13:40  lhunath: could be sourced, could be passed as argument to an sh command.
13:41  lhunath: only two ways to find out.  good luck
13:41  lhunath: though it may make significantly more sense to just move the redirection INTO the bash script.
13:41  [gnubie]: lhunath: thank you very much for the help! ;)
13:42  lhunath: (I'll ignore the sillyness of calling bash scripts .sh scripts)
13:46  cthuluh: well... using exec in an init file like /etc/rc.local is imho a bit silly too...
13:51  nunojpg: a="    x"; b="$a    y"; echo $b
13:51  nunojpg: why do all the spaces get stripped?
13:51  geirha: !wordsplitting
13:51  greybot: echo $foo; rm $foo -- If you leave $foo unquoted, bash will *remove* all whitespace (newlines, spaces, tabs) while expanding it, take each *word* as a separate argument. `echo` prints these words separated by one space and `rm` deletes each word. So ALWAYS *quote* your parameter expansions: echo "$foo"
13:57  [gnubie]: gtg now..
13:57 * [gnubie] waves
13:57 * [gnubie] thanks to all..
--- Log closed Mon Oct 18 15:43:00 2010
--- Log opened Mon Oct 18 15:48:21 2010
15:48 --- Users 531 nicks [0 ops, 0 halfops, 0 voices, 531 normal]
15:49 --- Channel #bash was synced in 83 seconds
15:49  c00kiemon5ter: hi all, using tee can I have some output manipulated while tee's part stays as it was. like: echo foo | tee -a test | sed "s/o/0/g"
15:50  c00kiemon5ter: so 'test' would be "foo" while the output would be "f00"
15:50  erUSUL: 4# date=2010-10-18 ; echo ${date%%-*}
15:50  shbot: erUSUL: 2010
15:50  erUSUL: !pe > feisar
15:50  greybot: feisar: Parameter Expansion is the expansion of a parameter: "$foo", "$1". You can use it to perform string operations: "${file%.mp3}", "${0##*/}". Remember to *always* quote them. See http://mywiki.wooledge.org/BashSheet#Parameter_Operations
15:50  feisar: erUSUL: thanks :)
15:51  sn18: !tias > c00kiemon5ter
15:51  greybot: c00kiemon5ter: Try It And See
15:51  lhunath: erUSUL: there is no set -x anywhere here.
15:51  lhunath: ergantu: ^
15:51  lhunath: anyhow; learn to quote; and get rid of your \r's
15:51  knob: Can I run a script via a crontab, by using    cd /directory; ./script.sh   ???
15:51  c00kiemon5ter: sn18: thanks :P I've already tried that, it doesnt work, that's why I asked and said 'like' :)
15:52  erUSUL: knob: what's wrong with using full path? /directory/script.sh
15:53  knob: I dn't know... can I just dump it into the crontab?
15:53  knob: Just like that?
15:53  knob: Going to try that now.
15:53  knob: Thanks erUSUL :)
15:53  magyarlatin: Hello everyone
15:53  knob: Morning Magy =)
15:53  magyarlatin: knob, =)
15:54  knob: kk... just set it now.. lets see if it runs =)
15:56  paxl: Is there a reason why bash is eating it's CR when I do something like this blah=$(hg tags)
15:57  knob: erUSUL, I don't know if it's my host, or what... but the script doesn't run that way.
15:57  knob: Do I have to "end" it any special way?
15:57  knob: with a semi-colon or something?
15:57  Naib: knob. what do you mean
15:57  lhunath: !wordsplitting > paxl
15:57  greybot: paxl: echo $foo; rm $foo -- If you leave $foo unquoted, bash will *remove* all whitespace (newlines, spaces, tabs) while expanding it, take each *word* as a separate argument. `echo` prints these words separated by one space and `rm` deletes each word. So ALWAYS *quote* your parameter expansions: echo "$foo"
15:57  erUSUL: !wordsplitting @ paxl
15:57  meth[phone]: can i profile bash ?
15:57  meth[phone]: script
15:57  erUSUL: aouch
15:57  paxl: lhunath, Thanks a lot :D
15:58  knob: Naib, I did this::: http://pastebin.com/WCkJ0Q1P
15:58  paxl: works perfectly :D
15:58  lhunath: meth[phone]: you have our permission.
15:58  knob: and it isn't running...  also did it   /directory/script.sh    yet that doesn't run either
15:58  knob: I... don't know why or what's up
15:59  erUSUL: knob: cd /home/comoesta/public_html/mobile; ./ochocp.sh <<< cd is not a command. just use full path. make sure you set up PATh if you need it in your script etc...
15:59  knob: Aaaahhh... ook ok
16:00  knob: :D
16:00  knob: let me try that... THANKS!
16:02  hendry: this syntax: echo foo | grep bar &>/dev/null
16:02  hendry: is "&>" OK?  or is "> /dev/null 2>&1" much better?
16:02  lhunath: &> is something bash inherited from csh afaik.
16:03  lhunath: I suppose it's fine.
16:03  erUSUL: hendry: bash specific wont work in other shells
16:03  hendry: i found a case of it in a PHP script which triggered a bug
16:03  knob: n00b question; when I setup my path in the script... would that line be like so >>>      cd /directory/mobile/ ;      is that the correct syntax?
16:06  engie: Hi. I'm running tar from a bash script, but if tar fails (I feed it an invalid .tar.bz2) my script is killed. How can I keep my script going & capture the return code in $? ?
16:06  geirha: knob: Depends on what you mean by "setup my path".
16:07  lhunath: engie: don't use set -e or check tar for failure; or don't exit your script yourself if it fails; it all sort of depends on WHY the script ends.  maybe you should figure that out first.
16:07  lhunath: engie: by default; bash doesn't exit when a command fails.
16:07  knob: The script is located in /directory11     and I want to run commands on files that are inside   /directory33
16:08  hendry: lhunath: i've written up the bug in detail here: http://dabase.com/e/13034/
16:08  knob: So... I *think* I have to setup the path to    /directory333
16:08  Kharec: d/c
16:09  lhunath: hendry: using system() is all kinds of stupid; and unexpected behaviour is what you deserve.
16:09  lhunath: hendry: &> is BASH CODE.  system() doesn't exec bash.  it probably exec's the EUID's login shell.
16:09  lhunath: maybe even /bin/sh
16:10  lhunath: either way; never ever use system.
16:11  hendry: lhunath: what should I be using instead? exec and name the sh interpreter explicity?
16:11  lhunath: don't run shell code from PHP.
16:11  hendry: lhunath: oh gawd
16:11  zxd_: can anyone explain the redirections here to me : http://pastebin.com/aMq6Yr6Z
16:11  lhunath: PHP is a richer language.  whatever you want to express in shell code; you can do far better in PHP AND keep it PHP-portable.
16:12  lhunath: !2>&1 > zxd_
16:12  greybot: zxd_: Making sense of the copy descriptor operator: http://wiki.bash-hackers.org/scripting/copydescriptor
16:12  hendry: lhunath: i prefer writing PHP/shell mixes. PHP for handling input and shell for doing the crunch.
16:12  geirha: knob: Depending on what you need to do, you could use cd, or just use absolute paths. E.g. for file in /directory33/*; do ...
16:13  geirha: knob: If you do use cd, make sure to check its exit status.
16:13  lhunath: hendry: why not throw in some awk and sed and perl and ruby and haskell too, while you're at it?
16:13  knob: thanks geirha... on my way to google  that exit status thing =)
16:13  geirha: !google
16:13  greybot: Google is NOT a preferred source for learning bash, because 90% of the "tutorials" and scripts out there are JUNK. Refer to the Guide and FAQ (see topic) instead.
16:13  erUSUL: !guide > knob
16:14  hendry: lhunath: i just might do that
16:14  greybot: knob: http://mywiki.wooledge.org/BashGuide
16:14  lhunath: hendry: the more the better; in fact; make sure your setup is so non-portable and your entire application is so reliant on one setup that nobody will ever be able to run your application without unexpected results without dd'ing your development box.
16:14  hendry: lhunath: all my systems run stable Debian.
16:15  hendry: lhunath: and I prefer writing the stuff in shell as it's fast and easier to debug than PHP
16:15  knob: LoL... ok ok , got it
16:15  lhunath: your application relies on your web user's login shell.  how rediculous is that?
16:15  knob: reading the wiki now...
16:15  knob: it all makes sense
16:15  lhunath: hendry: stop saying "shell".  "shell" is not a language.
16:15  knob: I think I'll get it working within the hour =D
16:15  hendry: lhunath: well i can fix it to use whatever POSIX shell interpreter I want
16:16  geirha: !cd > knob
16:16  greybot: knob: Never chdir in a script unless you check if it failed! cd $foo; bad. cd "$foo" || { echo failed; exit 1; } good. See /msg greybot pitfalls
16:16  lhunath: hendry: you think that will help you?  BSD boxes don't even use a POSIX shell as login shell!
16:16  erUSUL: shame on them ;P
16:17  lhunath: shame on whomever expects them to
16:17  hendry: lhunath: i don't run BSD. though you would think there is a shell to rely on. Web apps have backend (logs) tasks too to be managed...
16:17  knob: Wow... with what I have learned in the past 5 minutes... I have to change all the scripts I'm running!!
16:17  lhunath: hendry: "I don't run ..."  yeah.  my point exactly.  stop writing code that requires a snapshot of your development machine to run.
16:17 --- Obadiah is now known as Vivek
16:18  hendry: lhunath: i have had no problems getting my apps moved amongst the Debian stable machines I run
16:18  geirha: knob: Possibly, unless you like obscure bugs to happen "randomly"
16:18  lhunath: if you ever write a PHP application and sell it; thousands of people may run it on SunOS, Solaris, BSD, heck, many more will run it on windows.
16:18  lhunath: hendry: who cares about debian stable.
16:19  lhunath: when you're writing a webapp.
16:19  knob: geirha, obscure?!   I wish... my server is pinged constantly in the 20s, 30s and 40s when I use the 'top' command
16:19  knob: I think... that is very well part of the problem
16:19  knob: I have so much "bad code" running
16:19  zxd_: lhunath:  what is exec used for in "exec 3>&1"
16:20  lhunath: "Our new release of MyLeetForumSoft v5.3 now depends on Debian Stable 2010.5"
16:20  hendry: lhunath: i don't plan on selling me code. I provide a Web service. :-)
16:20  lhunath: !exec > zxd_
16:20  greybot: zxd_: exec [command] [redirections] replaces the script's process by a new one that runs the command. When no command is given, only the redirections are applied to the current shell.
16:20  CodeOfSilence: goto http://tinyurl.com/348ajfj for teh win. DO IT!
16:22  lhunath: hendry: you really don't get it, do you.
16:22 * lhunath goes back to work.
16:22  zxd_:  ` `   opens a subshell?
16:22  happolati: Hello. I try to echo a '%' character in a script, but/j #byobu
16:23  happolati: oop. sorry
16:23  zxd_: with new FD for 1 and 2 ?
16:23  lhunath: zxd_: yes, but it sucks.  use $() instead.  does the same thing.  most anything with () opens a subshell; it's a more consistent syntax.
16:23  lhunath: fds are inherited.
16:24  zxd_: what does it mean that the fds are inherited
16:24  zxd_: ah ok
16:28  liel: $ help
16:28  liel: # help
16:28  evalbot: liel: GNU bash, version 3.2.33(1)-release (i486-pc-linux-gnu)
16:28  evalbot: liel: These shell commands are defined internally.  Type `help' to see this list.
16:28  evalbot: liel: etc... ( http://pastebin.com/ADfxueE0 )
16:30  c00kiemon5ter: !dotfiles
16:30  greybot: http://mywiki.wooledge.org/DotFiles or - for a technical explanation - the INVOCATION section of man bash.
--- Log closed Mon Oct 18 19:10:02 2010
--- Log opened Mon Oct 18 19:10:22 2010
19:10 --- Users 530 nicks [0 ops, 0 halfops, 0 voices, 530 normal]
19:11 --- Channel #bash was synced in 83 seconds
19:15 --- Weust` is now known as Weust`afk
19:15  gwz: hey, how would you enable backspace to be used when reading a variable?
19:17  kojiro: gwz: that question doesn't make sense. Did you mean "how can I put a backspace character in a variable?" ?
19:18  gwz: no, so i have something like; read name ; now when user inputs a name but spells it wrong and tries to backspace, it displays as a backspace character which makes sense but is there anyway for it not tod o that
19:19  kojiro: that's up to your terminal
19:19  kojiro: not bash
19:19  gwz: aahh i see so it might just be putty doing it
19:19  taylanub: i hear putty is 'blergh'
19:19  kojiro: gwz: putty can be configured to send different characters as backspace
19:20  kojiro: putty is great if you configure it well, but its defaults are dumb.
19:20  gwz: ah I get it now, I am stupid :D thanks a lot
19:20  kojiro: you're welcome
19:25  knob: Hello, in this small script:   http://pastebin.com/bVJuWNe5
19:25  knob: What does 1>&2  mean?
19:25  yitz_: !redir > knob
19:25  greybot: knob: Learn about redirections! Syntax: http://bash-hackers.org/wiki/doku.php/syntax/redirection and http://mywiki.wooledge.org/BashGuide/InputAndOutput#Redirection ## Illustrated tutorial: http://bash-hackers.org/wiki/doku.php/howto/redirection_tutorial
19:26  knob: Ahh, thanks
19:26  knob: So it's ... redirecting...
19:26  knob: hm.. ok ok
19:27  Ward|: whats the best way to exec a script or program when a button is pressed?
19:27  Ward|: i can see the button presses with showkey
19:28  knob: So in that script, would I use      if [ "$?" = "/myDIRECTORY" ]; then           ??
19:28  trash: No.
19:28  knob: would it be literal, like     if ["/myDIRECTORY" = "/myDIRECTORY" ];    ??
19:28  knob: Sorry, but I don't understnad the   "$?"  part
19:29  trash: !faq 2 > knob
19:29  greybot: knob: http://mywiki.wooledge.org/BashFAQ/002 -- How can I store the return value/output of a command in a variable?
19:29  knob: thanks!
19:31  Nullslash: knob,
19:31  Nullslash: knob, exit status
19:31  Nullslash: nvm
19:32  knob: Thanks... Null/.  I'm reading the wiki now.... =)
19:32  knob: trying to 'grab' this :)
19:33  sowell_: greycat: your awesome snarkyness doesnt come off in  your blog...i feel cheated =)
19:33  greycat: It's a wiki, not a blog.
19:34  greycat: Check under GreyCat for a couple "rants" pages that might be more colorful.
19:34  sowell_: my point exactly ;)
19:36  skered: You're a blogger
19:36  greycat: I am?
19:36  skered: Welcome to the blogosphere
19:37  knob: Ok, n00b question:   I dropped the script into /public_html        the script copies some files that are inside /public_html/dir1          For the file cp commands,   can it be    cp ../dir1/file1.jpg    ../dir1/file2.jpg    ??
19:37  knob: are those   ../    necessary?    Are they correct
19:37  knob: ?
19:37  geirha: knob: The script is run from whatever directory you're in when you run it, not where the script is located.
19:38  knob: Ahhhhhh! ok ok
19:38  geirha: Putting it under public_html is probably not a good idea. Put it in ~/bin maybe.
19:38  knob: Always?   So, I would guess that if it's invoked by a cronjob,    it would be running from the root directory?
19:38  geirha: Correct
19:38  geirha: Or, that's common. There's no guarantee
19:39  knob: Ookkk ok ok =D
19:39  greycat: cron will usually run things in the invoking user's $HOME
19:39  knob: So, at the very start of the script, I should change over to the chdir  to the correct dir ?
19:39  knob: Ok
19:39  greycat: If your script *needs* to run from a specific place, then yes.  Do something like   cd /my/special/dir || exit 1
19:40  geirha: on my system, root's cron jobs have / as cwd
19:40  knob: Well, I don't know if it needs to be that way.    Just barely learning the ropes!
19:43 --- drizztbsd_ is now known as drizztbsd
19:45  knob: Ok, please excuse my n00bness, I just google this next question, yet I don't have an answer:::
19:46  Ward|: whats the best way to exec a script or program when a button is pressed? i can see the keystrokes with showkey
19:46  knob: In the script, I added the    cp /home/directory1    and it tells me "missing destination file operand after..."
19:46 --- twisted_ is now known as twisted`
19:46  greycat: cp requires at least two arguments
19:46  greycat: source and destination
19:46  sn18: knob: man cp
19:46  knob: OH CRAP
19:47  knob: I'm a moronic n00b
19:47  sowell_: greycat: this FTP must die rant is amazingly invaluable....and extremely true =)
19:47  knob: thanks for your patience guys
19:47  knob: and girls =)
19:58  knob: Ok, I'm going bonkers with this script.   Can somebody take a look? http://pastebin.com/jwA73r5d  I think the error is in the beginning
19:58  knob: I'm... out of ideas for the moment
19:59  Kharec: hi there
19:59  nDuff: knob, all that "yes | cp" really, really shouldn't be necessary
19:59  knob: =\   that was the latest addition
19:59  knob: I'll remove it
19:59  nDuff: knob, cp only prompts if given -i; you may have an alias cp='cp -i' by default, but that doesn't apply to scripts
20:00  knob: by "prompts" you mean,   so one could answer the 'yes' if applicable?
20:00  knob: btw, thanks a ton nDuff!
20:00  nDuff: knob, more to the point, if you want to operate on all files matching a pattern, you should consider using actual pattern matching
20:00  sn18: knob: use a function or a loop?
20:00  nDuff: knob, ...and if it's a static list of filenames that can't be matched by a pattern, that's what arrays are good for
20:01  knob: It's static... the names are always up to 10, and then back to 1
20:03  nDuff: knob, shopt -s nullglob; for f in 8ocho*.jpg; do cp "$file" "${foo#8}"; done
20:03  nDuff: !pe >knob (to understand what the ${foo#8} does)
20:03  greybot: knob (to understand what the ${foo#8} does): Parameter Expansion is the expansion of a parameter: "$foo", "$1". You can use it to perform string operations: "${file%.mp3}", "${0##*/}". Remember to *always* quote them. See http://mywiki.wooledge.org/BashSheet#Parameter_Operations
20:03  knob: wow... I'm... going to ... figure that line out even if it takes me 3 days
20:04  lupinstein: is there an easy way to like installing rpm then have that recorder into a log, I am doing a bash script and it seem to to like the >> $LOG after it.
20:05  nDuff: lupinstein, you could, but personally -- if you need a list of what was installed when, you can ask RPM to give you that data at any time
20:05  nDuff: lupinstein, ...so why bother keeping a separate log?
20:06  lupinstein: I need to for a script were I am going to install two rpm then set up a bunch off file and it fails I need to know why as the will be remotely installed.
20:06  nDuff: lupinstein, ahh -- so you don't want to know what was installed, you want to know what failed and why :)
20:06  nDuff: lupinstein, then be sure you redirect stderr, not just stdout
20:07  lupinstein: ok
20:08  retrospectacus: http://pastebin.com/9a8RiEXz   ... how can I get those ALL to run in the background?
20:09  erUSUL: retrospectacus: bg %1 %2 %3
20:10  retrospectacus: erUSUL: thanks but: http://pastebin.com/JAJRuneZ
20:12  erUSUL: retrospectacus: bg ;  should've worked afaics
20:13 --- drizztbsd_ is now known as drizztbsd
20:13  retrospectacus: I know, I'm not sure what is stopping the jobs
20:15  micols: cat > foo << EOF  something\nsomething more\nmore.. \nEOF , how do i get "something something more more.." into 'foo'  ? , can this be done with IFS?
20:15  micols: outputting spaces instead of \n's between the cat-EOF input
20:16  micols: I used a lot of \'s , but that is not very elegant :)
20:17  erUSUL: !heredoc
20:17  greybot: Here documents. cat <<EOF followed by several lines of text, followed by the literal string EOF on a new line, NOT indented. The portion between the EOFs is passed to the command as standard input. If 'EOF' is 'quoted', substitutions WON'T be done; otherwise they are. See <<- for the indented variety.
20:18  sn18: micols: why would you separate by newlines when you need them to be separated by spaces?
20:18  micols: http://pastebin.com/qWMTEniH  that is a better example, I want that piped to gnuplot, without \n's
20:18  nDuff: MicahElliott, tr '\n' ' ' >foo <<EOF ...
20:18  micols: and without adding lots of \'s in the heredoc :)
20:18  nDuff: ...oh, an example that shows what you _really_ want...
20:18  nDuff: (isn't there a bashphorism for this?)
20:19  nDuff: !b0
20:19  greybot: The questioner will never tell you what they are really doing the first time they ask.
20:20  micols: :)
20:21  micols: works, thanks
20:22  Ward|: whats the best way to exec a script or program when a button is pressed? i can see the keystrokes with showkey
20:22  retrospectacus: doesn't gnuplot take newlines as input separator anyways?
20:23  nDuff: Ward|, is read -N 1 not what you want?
20:24  micols: retrospectacus: don't think so
20:24  Ward|: nDuff, when i start that over ssh it waits for a key trough ssh
20:24  Ward|: not a key from the keyboard
20:27  nDuff: Ward|, ahh
20:28  nDuff: Ward|, ...well, then, why not read from the output of showkey?
20:28  Ward|: nDuff, showkey dhows the keys but that insitsts on exiting after there's no button press for ten seconds....
20:28  Ward|: the most annoying feature ever
20:29  Ward|: nDuff, it insists on exiting after ten seconds if no button is pressed in that time period
20:29  nDuff: Ward|, if this is Linux (which, as you're using showkey, I suspect it must be), you can read from the input core's event device under /dev/input
20:29  nDuff: Ward|, ...mind you, it's a packed binary structure, which makes it a little tricky to interpret in bash...
20:29  Ward|: nDuff, yes correct, but that output doesnt make any sense
20:30  nDuff: Ward|, well, you just need to use a more appropriate language for the job
20:30  Ward|: nDuff, thats fien by me
20:30  nDuff: Ward|, I've used it before from python with the struct module used to unpack/interpret
20:30  Ward|: fine
20:30  retrospectacus: micols: I found this PHP function I made years ago that generates a graph with gnuplot: http://pastebin.com/04kqrxN7   - it does use newlines in my case but maybe your setup is different
20:30  Ward|: nDuff, do you still happen to have the script?
20:31  nDuff: Ward|, afraid not -- it was almost a decade ago, before the new input core was even in the mainstream kernel
20:31  Ward|: :)
20:31  retrospectacus: micols: (line 64)
20:31  nDuff: (also, I left the employer who owned that code on not-particularly-good terms)
20:42  Varazir: Hello, can I exit a function without exting the script it self witch a command ?
20:43  retrospectacus: return
20:43  retrospectacus: ?
20:45  Lunar_Lamp: .wun 34
20:45  Varazir: ok
20:47  matt86861: Is it possible to make a script, which reads commands from a file one line after another, logs into a network device over a console connection(rs-232) and executes those commands wile sleeping 1s after each line? I have used minicom in order to connect over console line, but minicom is not scriptable as far as I know. Is it possible at all?
20:49 --- taylanub1 is now known as taylanub
20:51  Cyber_Beast: Can anyone tell me how to manipulate user entered "Float valued numbers" ? expr doesn't seem to work!
20:51  cthuluh: !faq float
20:51  greybot: http://mywiki.wooledge.org/BashFAQ/022 -- How can I calculate with floating point numbers instead of just integers?
20:52  Cyber_Beast: Got the link. Thank you.
20:52  erUSUL: a few minutes ago in #ubuntu ---> 36DAAOU58: use bc; bash can not do floats
20:59  DeRoSvOs: Hey guys, silly question, but, why is it that my "cp -rf" or "cp -r -f" command still generates the "cp: overwrite ... ?" dialogue?
21:01  enzotib: DeRoSvOs, is it an alias cp="cp -i" or similar?
21:02  enzotib: gone
21:06  Qantourisc: Are there any know bash-pipe related kernel issues ?
21:16  shadyabhi: Whats the command to move to previously accessed directory. I know its not "cd ..". I am talking about previously accessed one. I cant remember that. :S
21:16  cthuluh: cd -
21:16  cthuluh: ''help cd''
21:17  cthuluh: oh, seems like it's not explained in ''help cd'' :>
21:20  shadyabhi: cthuluh: thanks . :)
21:21  retrospectacus: you could also try cd $OLDPWD
21:22  retrospectacus: not sure what that's for actually
21:22  erUSUL: matt86861: http://www.cibomahto.com/2008/01/howto-macros-in-minicom/
21:29  matt86861: erUSUL: thanks! I'll take a look.
21:29  sowell_: shadyabhi: you could also technically use pop and push
21:31  shadyabhi: sowell_: ohk. Let me read about that.
21:31  pgas: help popd pushd
21:38 --- cloq is now known as display
21:38 --- display is now known as cloq
21:39  nDuff: Qantourisc, could you be a bit more specific about what you're seeing?
21:39 --- cloq is now known as cloak
21:39 --- cloak is now known as Guest26504
21:40 --- Guest26504 is now known as cloaca
21:43  Qantourisc: nDuff: well nothing stuff freezes up, cannot ssh in, can ping, cannot change temrminal (X11) etc
21:44  Qantourisc: nDuff: rather weird all
21:44  greycat: Qantourisc: ##linux or your OS channel.
21:44  Qantourisc: greycat: wouldn't this more be a kernel thing ?
21:45  greycat: Certainly.  Which is why you go to ##linux or your OS channel, not a shell channel.
21:45  Qantourisc: right pipes are handled by kernel iirc ?
21:45  greycat: *plonk*
21:46  Qantourisc: ok yes
21:46  Qantourisc: just digged specs
21:46  Qantourisc: thanks
21:47  Carmageddon1: is it possible to grep for a particular line in a file, but get as output the line just above it?
21:47  greycat: man grep, look for -B
21:47  Carmageddon1: eg I am grepping dhcp.conf for hostname, but I want the line above it with the ip
21:47  greycat: otherwise, use awk
21:47  Carmageddon1: greycat -B gives me both lines
21:48  Carmageddon1: I only want the one above
21:48  retrospectacus: grep -B |head -1
21:48  greycat: And I suppose I have to tell you how to remove a line of output?
21:48  greycat: Jesus.
21:49  Carmageddon1: thanks retrospectacus :)
21:54  AlexC_: morning
22:02  Carmageddon1: ok retrospectacus say I have something like this now: awk { print $1 } < cat /etc/dhcpd.conf |grep some.domain.com -B1 |head -1
22:03  Carmageddon1: but its not working, I tried piping at the end to awk too
22:03  greycat: < file
22:03  greycat: not < cat file
22:04  Carmageddon1: hmmm, then how to feed awk from single line without script file?
22:04  greycat: Speak English, man.
22:06  Carmageddon1: ok.. the 'cat /etc/dhcpd.conf |grep some.domain.com -B1 |head -1' output alone, gives me something like: 'fixed-address 999.666.333.107;' - how do I use awk on the same line, to end up with the IP only?
22:06  greycat: Go to #awk.
22:06  taylanub: !cat
22:06  greybot: cat(1) is used to concatenate multiple files together. It should NOT be used to feed file data to processes. There are far better ways to achieve this. The application might take a file as argument (eg. grep ^foo file); or you might want to use file redirection (eg. read line < file).
22:06  greycat: !uuoc
22:06  greybot: Useless Use of Cat (cat foo | grep bar). See http://partmaps.org/era/unix/award.html
22:07  Carmageddon1: yes I know grep can operate on file too.. but old habits die hard :D lol
22:07  nDuff: Carmageddon1, ...and awk can do the work of grep, _and_ the work of head, _and_ the work of cat
22:08  greycat: Granted, you'll actually have to do some programming to replace the -B1 part.
22:08  greycat: Like, oh my god, maybe a VARIABLE!
22:08  retrospectacus: too hard. use cut
22:09  Carmageddon1: greycat I prefer to keep output to 1 line, since I run scripts remotely to ssh into dhcp server and get the ip. I dont want to start processing in my script if I can avoid it by one liner
22:09  greycat: !myip
22:09  greybot: http://mywiki.wooledge.org/IpAddress
22:09  Carmageddon1: lol I heard a lot about this nDuff, but how long would it take me to learn, much less to build the awk expression for that? whole day?
22:09  greycat: By any chance, does your overall task fall into something covered on that page
22:09  greycat: ?
22:10  greycat: Carmageddon1: For you, I suspect it would take 3 years.
22:10  greycat: You appear not to be on the upper half of the brightness bell curve here.
22:11  Ward|: how do i do: if a line of output contains string "foo" execute script /bin/bar ?
22:12  greycat: if [[ $myvariable = *foo* ]]; then /bin/bar; fi
22:12  Ward|: line of output from a CLI tool
22:12  greycat: It's not in a variable?  Then either use read, or grep.
22:13  Carmageddon1: greybot it doesnt not even close, I am talking about dhcp.conf not ifconfig
22:13  Ward|: greybot, nvm its only 2 keys so i will jsut adept evtest to my needs and use 2 different version of it :)
22:13  Ward|: much more performant then grep on this pda
22:14  Ward|: thanks anyway
22:14  greycat: Carmageddon1: and truly, the best way to perform whatever-the-hell your actual task is, is to parse a dhcpd.conf file by hand?
22:15  Cyber_Beast: how do I fetch the most last modified file from a directory?
22:15  pgas: matt86861: also have a look a ckermit
22:15  greycat: !latest
22:15  greybot: Find the latest modified file in a directory: latest() ( shopt -s nullglob; local file files=("${1:-.}/"*) latest=$files; for file in "${files[@]}"; do [[ $file -nt $latest ]] && latest=$file; done; printf %s "$latest" )
22:16  Carmageddon1: greycat yes, because apparently my local machine gets wrong IP from DNS server.. sometimes. I cant rely on it, other scripts that wait on target machines cant be executed, or ports are open waitng, and I cant connect to release it
22:16  Cyber_Beast: greycat & greybot: Thank you.. will check it soon..
22:16  greycat: Really.  Your DHCP server is giving you the wrong address.  And rather than get your dhcpd fixed, your solution is to write some abominable bash hack.  Lovely.
22:17  retrospectacus: Cyber_Beast, greycat: what about ls -tr|tail -1
22:17  greycat: You'd be better off just NOT USING DHCP AT ALL.  Jesus.  Just hard-code the address in your OS's static-net-config files.
22:17  greycat: !ls > retrospectacus
22:17  greybot: retrospectacus: Don't try to parse ls output. http://mywiki.wooledge.org/ParsingLs
22:18  Cyber_Beast: retrospectacus: That will also do.. I didn't want to parse ls output anywhere. thanks
22:20  Carmageddon1: lol greycat as always so very helpful.. you think you are the smartest person in the world? I wish your suggestions were realistic. but the DHCP server is used by an entire automated system, is being updated on the fly, and used to boot target servers from PXE (or just gve them ip without PXE boot - depeding on the dhcpd.conf). besides I have deadlines... boss really doesnt care how pretty and perfect my solution is, he wants it working tomorrow.
22:20  greycat: You can only safely use "ls -tr | head" or |tail or whatever if you have a priori knowledge that your filenames contain nothing that will trigger a problem.
22:20  Carmageddon1: in an ideal world yeah I'd agree with you, and I'd demand to find the cause of the issue instead
22:20  retrospectacus: Carmageddon1: your problem is the DHCP server gives the wrong DNS address?
22:21  greycat: Carmageddon1: If you can't rely on the DHCP server then just use static IP addresses.  I don't really see what is wrong with that answer.
22:21 --- cloaca is now known as cloq
22:21  Carmageddon1: yes retrospectacus, which is why I want to build the grep line I mentioned
22:21  retrospectacus: why not just put the correct IP in there
22:21  greycat: Hacking the DHCP server by ssh-ing in and retrieving the dhcpd.conf file and parsing it.  You've gotta be fucking joking.
22:22  Carmageddon1: greycat but I am not the one who sets which IP address a machine recieves, I am not supposed to modify addresses on dhcpd.conf at all
22:22  Carmageddon1: retrospectacus and how would I find out the correct ip?
22:23  greycat: Fucking hell.  And I thought OUR networking department was bad....
22:23  retrospectacus: through dhcp. um
22:23  Carmageddon1: ohh, instead of DNS? interesting idea.. how easy is that?
22:24  greycat: WHAT?!?
22:24  greycat: I can't take it any more.
22:24  greycat: *plonk*
22:25  retrospectacus: DHCP is supposed to give DNS server IPs to the clients. How is this not working, again?
22:25  Carmageddon1: greycat I am not trying to find out my OWN ip.. but one given to another machine, while dns servers seem to give different ip (I assume old - nobody left here atm to ask)
22:26  cthuluh: if your dhcp server gives you a bad nameserver address, just don't ask it this information
22:27  retrospectacus: if your DNS servers have WRONG info, fix that
22:27  greycat: He's been talking about NAMESERVER responses this whole time?
22:27  cthuluh: that would be too complicated, I guess
22:27  cthuluh: yes
22:27  greycat: My god.
22:27  greycat: !nabq
22:27  greybot: Not A Bash Question. Ask the channel that supports your software, hardware, or OS.
22:27  greycat: Tell him to go to his OS channel and ask them how to override the DHCP server's nameserver responses.
22:28  greycat: There are at least 4 ways to do it in Debian.
22:28  Carmageddon1: ok.. from scratch networking 101: DHCP server gives IPs to all the virtual servers in the datacenter. machine A has hostname A.mydomain.com, DHCP server gave it .107 at the end. while if I do  ping/telnet whatever to that machine from MY comp (or server I am working on in ssh etc), TRANSLATE it into .140!! do you understand now guys, why I want to parse the dhcpd.conf?
22:28  greycat: Even "chattr +i /etc/resolv.conf" or whatever would be better than the shit he's come up with so far.
22:30  Carmageddon1: and greycat you turned this into a major problem.. I just want a fucking workaround the problem, leave the problem to the ADMINS! or I want even better, not to depend on them at all
22:31  Carmageddon1: so thanks, but no thanks I dont want your way of fixing the cause, I will stick to my original question about parsing the httpd.conf
22:31  Carmageddon1: which is a bash question
22:31  nDuff: Carmageddon1, we pointed you to ##awk when you first asked
22:32  nDuff: Carmageddon1, ...have you followed that advice yet?
22:32  greycat: !xy
22:32  greybot: http://mywiki.wooledge.org/XyProblem -- "I want to do X, but I'm asking how to do Y..."
22:32  greycat: APPARENTLY what he actually WANTS to do is boot some Unix machines as DHCP clients but not use the DHCP server's name server responses (/etc/resolv.conf).
22:32  Carmageddon1: I did  now nDuff, was too busy here with greycat hehe :)
22:32  greycat: This is not a bash question by any stretch of the imagination.  Hacking together ssh, awk, cat, grep, bash etc. is not the solution.
22:33  Carmageddon1: wrong again greycat, they ALREADY booted, and properly get their hostname and IP. but ME, MY machine which CONNECTS to them, gets from translation for their hostname!!
22:34  Carmageddon1: gets wrong* IP translation
22:34  nDuff: Carmageddon1, I tend to agree with greycat that fixing the problem that is causing you to resort to this kind of hackery would be much, much better than trying to put a convoluted workaround in place.
22:34  kojiro: There are two types of people in the world. Those who think greycat are wrong, and those who used to think greycat was wrong.
22:34  kojiro: and those who arbitrarily use the plural.
22:35  Ward|: i have a program that will output 1 if a button pressed, 2\n2\n2\n... while you hold the button and 0 when you release it, how can i now use this to launch a script or program when it outputs a 1?
22:35  retrospectacus: Carmageddon1, re-acquire your machine's IP and it should get the NS
22:35  Ward|: also 1\n and 0\n of course
22:35  Carmageddon1: rofl :) thing is in greycat's way, what I'd do right now is go home (which I should tbh.. past 10pm..) and tomorrow excuse myself and blame the admins instead
22:35  greycat: Ward|: probably a 'while read -n 1' loop
22:35  greycat: Ah, newlines after everything?  Then "while read" might be better.
22:36  Ward|: greybot, whatever is most performant, i can change the sourcecode so
22:36  Ward|: greycat,
22:36  Ward|: im confused because this keeps outputting stuff it needs to keep running
22:37  greycat: Since you're always getting lines with newlines included, just use 'while read'.
22:37  greycat: You won't need the -n part.
22:37  Ward|: yeah i realise that
22:38  Ward|: greybot, but i don't know how i could use that
22:38  Ward|: i'm googling for a small example
22:38  greycat: while read num; do case $num in 0) ...;; 1) ...;; 2) ...;; esac; done
22:38  Ward|: this is ocnfusing because this tool is not something you start, get output from and then terminate
22:38  Ward|: thats what i did so far
22:38  greycat: thistool | yourscript
22:39  Ward|: no
22:39  Ward|: the program that outputs the 1 0 and 2
22:39  Ward|: thats the tool im talking about
22:39  greycat: theprogramthatoutputs1_0_and_2 | yourscript
22:40  Ward|: thanks now the intire idea of how to do it is a bit more clear :)
22:41  raubvogel: How do I create a variable with that looks like this "    something      strange"
22:41  greycat: var="   something    strange"
22:41  Ward|: greybot, read just reads whatever gets piped to the script?
22:41  Ward|: greycat,
22:41  greycat: !pf echo > raubvogel
22:41  greybot: raubvogel: http://mywiki.wooledge.org/BashPitfalls#pf14 -- Don't do this! -- echo $foo
22:44  Ward|: man im so confused :(
22:44  Ward|: greycat, how do i tell it whatever gets outputted shjould be called num?
22:44  greycat: !guide > Ward|
22:44  greybot: Ward|: http://mywiki.wooledge.org/BashGuide
22:45  PythonNub: how do i set the title of a terminal window?
22:45  raubvogel: graycat, thanks
22:45  Ward|: greycat, yeah i lost all me damnscripts because my HD fell...
22:45  greycat: Depends on the terminal.
22:45  greycat: !title
22:45  greybot: You can change xterm titles with something like: printf '\e]2;%s\a' "title goes here"
22:45  Ward|: no examples anymore
22:46  PythonNub: yay
22:46  PythonNub: thanks
22:46  Ward|: ill jsut keep looking for examples
22:46  greycat: !faq 1 > Ward|
22:46  greybot: Ward|: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
22:46  Ward|: i'll find one in about 4 hours like usually
22:48  Ward|: now that clarifies a lot :)
22:48  Ward|: i iddint check the faq, didnt expect to find it there
22:52  PythonNub: if you don't mind me bugging you again
22:52  PythonNub: how would i do that from a script
22:52  PythonNub: typing it in manually works in Aterm, but putting it in a script then using the script doesn't
22:52  PythonNub: (Changing the title of a Aterm shell)
22:53  Cyber_Beast: In order to list only filenames from a directory, I came to (ls -dp $path | grep -v '/$' ) without brackets... what is use of '/$' as an option of grep?  (I had internet connectivity prob.. so posting this 2nd time)
22:54  iaindalton: I'm trying to print the non-zero exit values of commands, but trap 'echo $?' ERR doesn't work for pipelines. Is there a way to make pipelines do it in Bash?
22:54  pgas: !pipestatus
22:54  greybot: bash: use the PIPESTATUS array, posix sh: see http://sdf.org/l/55 and http://pipestatus.sf.net
22:54  prince_jammys: see ''man bash'', look for PIPESTATUS.
22:55  txdv:                 branchname=`git branch | grep \* | gawk 'END { print $2 }'` \
22:55  txdv:                 echo "${branchname}" \
22:55  Vayu: how can I check a .txt file for grammar errors?
22:55  txdv: How do i do this correctly, i just don't understand why it wont work
22:56  rickest: !nabq > Vayu
22:56  greybot: Vayu: Not A Bash Question. Ask the channel that supports your software, hardware, or OS.
22:56  Vayu: ok, thanks
22:57  {g}: now he needs to find the "check textfiles for grammar" os channel.
22:57  Cyber_Beast: Vayu: ispell checks for spellings.. for grammar, I'm not sure.
22:57  txdv: i dont understand why something simple as var="value" \ echo "$var" doesn't work when it's in a Makefile, maybe you got some suggestions
22:58  taylanub: !make
22:58  greybot: make is not bash. It has its own syntax that looks a bit like bash, but it isn't. Ask in ##workingset or ##c and read http://www.gnu.org/software/make/manual/ or the help documents of your version of make
22:58  iaindalton: pgas, prince_jammys: PIPESTATUS isn't the answer, because trap 'foo' ERR only traps nonzero exits of simple commands, not pipelines
22:58  Ward|: pffff
22:58  Ward|: cant even get any of the exampels to work
22:58  pgas: iaindalton: set -o pipefail
22:59  prince_jammys: that.
22:59 --- Evixion` is now known as Evixion
22:59  Cyber_Beast: Ward: May be you could share examples definitions!
23:00  Ward|: Cyber_Beast, huh?
23:00  iaindalton: pgas: It worked; thanks. What's the behavior when that's not set?
23:01  Cyber_Beast: Ward: Nothing.. I thought, you were doing your homework like me.
23:01  Ward|: i want to call a binary from my script, this binary will need to stay open all the time, it will output a 1 if a certain button is pressed on the device
23:01  pgas: iaindalton: the return status is the status of the last command
23:01  prince_jammys: iaindalton: only a failure in the last command of a pipeline would trigger your trap.
23:02  Ward|: i want to do something when it outputs a 1
23:02 --- jzacsh is now known as timcosgrove
23:02  iaindalton: OK. Can setting pipefail mess anything up?
23:02  prince_jammys: doubtful
23:02 --- timcosgrove is now known as jzacsh
23:02  pgas: Ward|: command | while read a;do case $a in 1)dosomething;;esac; done
23:03  pgas: iaindalton: it will cause your script to signal an error in cases that would not if you don't set pipefail
23:04  Ward|: pgas, thanks, but it just doesn't make any sense to me :(
23:04  iaindalton: pgas: I'm doing this for my interactive prompt. I assume it won't propagate to scripts I run?
23:05  pgas: it won't propagate
23:05  pgas: Ward|: well....what can we do about it?
23:05  iaindalton: OK; that's probably fine then.
23:05  Ward|: pgas, i'll read up on switch case in bash
23:06  iaindalton: Ward|: echo 1 | while read a;do case $a in 1)dosomething;;esac; done
23:06  iaindalton: will run 'dosomething'
23:06  iaindalton: echo 2 | while read a;do case $a in 1)dosomething;;esac; done
23:06  iaindalton: won't
23:06  txdv: How do I set shell variables in a Makefile and more important, how do i access theme?
23:06  txdv: them
23:07  rickest: !make > txdv
23:07  greybot: txdv: make is not bash. It has its own syntax that looks a bit like bash, but it isn't. Ask in ##workingset or ##c and read http://www.gnu.org/software/make/manual/ or the help documents of your version of make
23:07  Ward|: iaindalton, aha, yes it works like that, but not with the program i use
23:08  Ward|: iaindalton, the program i use does not get terminated, it doesnt stop
23:08  Ward|: it keeps running forever
23:08  Ward|: pgas, that does not work for programs that keep outputting lines and dont stop
23:08  Ward|: it seems
23:09 --- muzer is now known as MuzerAway
23:09  Ward|: echo of course stops
23:09  Ward|: my tool does not
23:09  Ward|: it keeps checking for key presses
23:10  txdv: my god even the manual doesn't have simple shit like that
23:10  Cyber_Beast: I want to list last modified file from user entered path,.. I'm using `ls -ltr | tail -n1` ... but it also includes directories... How can I make it  "FILES ONLY" ?
23:10  iaindalton: Ward|: AFAIK, pipelines run in parallel, so the second half won't wait for the first to finish
23:10  Ward|: iaindalton, then i dunno whats wrong :-s
23:10  erUSUL: Cyber_Beast: do not parse ls
23:10  erUSUL: !ls
23:10  greybot: Don't try to parse ls output. http://mywiki.wooledge.org/ParsingLs
23:10  nunojpg: any easy way to get the number of seconds like sleep does with all the suffix options(3s, 5m, 1h)? test if last char is a letter, extract it, test if the remaining is a number and multiply in a case according to the letter?
23:10  Ward|: i see the program output a 1 to my terminal when i press a button
23:10  erUSUL: !faq latest > Cyber_Beast
23:10  greybot: erUSUL: No matches found at http://mywiki.wooledge.org/BashFAQ
23:11  iaindalton: txdv: look under parameters
23:11  Ward|: so i guess bash doesnt see that for some reason
23:11  erUSUL: !faq latest
23:11  greybot: erUSUL: No matches found at http://mywiki.wooledge.org/BashFAQ
23:11  Cyber_Beast: erUSUL: will see..
23:11  prince_jammys: !latest
23:11  greybot: Find the latest modified file in a directory: latest() ( shopt -s nullglob; local file files=("${1:-.}/"*) latest=$files; for file in "${files[@]}"; do [[ $file -nt $latest ]] && latest=$file; done; printf %s "$latest" )
23:12  erUSUL: !faq newest
23:12  greybot: http://mywiki.wooledge.org/BashFAQ/099 -- How can I get the newest (or oldest) file from a directory?
23:13  Ward|: iaindalton, to clraify this is what i do: evtestF10 /dev/input/event1
23:13  Ward|: 1
23:13  Ward|: 0
23:13  Ward|: evtestF10 /dev/input/event1 | while read a;do case $a in 1)echo foo;;esac; done
23:13  Marchitos: how to tell QNetworkreply to accept redirection?
23:14  Ward|: iaindalton, that last one doesnt output anything
23:15  erUSUL: Marchitos: wrong channel?
23:15  iaindalton: Ward|: is evtestF10 separating input by spaces or newlines?
23:15  Ward|: iaindalton, new lines
23:15  Marchitos: uh sorry
23:15  Ward|: iaindalton, i can format it like i want i can change the code
23:17 --- MuzerAway is now known as muzer
23:18  Ward|: iaindalton, any more ideas?
23:18  iaindalton: Ward|: if you type help read in Bash, you'll see read tokenizes by lines, so you're good. Next thing to worry about seems to be the -a flag, which splits the input and stores in an array. So for $a to have 1, 1 has to be the first token on the line
23:19  Ward|: iaindalton, ok then this will not work at all for me
23:19  Ward|: i'm starting to think its just impossible
23:19  Ward|: might aswell start to write a C program
23:20  Ward|: i expected to find heapload of examplesd of something this simple
23:20  iaindalton: Ward|: I thought you could format the output like you wanted? Why not make 1 the first char on the line?
23:20  Ward|: iaindalton, ooooh the first char on the LINE
23:20  Ward|: iaindalton, sorry
23:20  Ward|: iaindalton, i though you meant the first line :)
23:20  Deltachaos: has anybody a idea how i can handle SIGINT and SIGTERM in bash?
23:21  prince_jammys: ''help trap''
23:21  Ward|: iaindalton, each line is only 2 chars, an interger and a \n
23:21  Deltachaos: prince_jammys: thx
23:21  Ward|: iaindalton, i started with simplifying the output so :)
23:22  iaindalton: Ward|: hmm. I don't know then.
23:22  Ward|: iaindalton, so both those 2 things you mentioned are covered, and it still wont work
23:22  Ward|: any more ideas?
23:22  Ward|: anyone else maybe?
23:26  iaindalton: Ward|: I'd try it on my end, but I can't think of a command that doesn't quit fast :|
23:26  erUSUL: Ward|: pgas solution did not work?
23:26  erUSUL: # printf "%d\n" 1 2 2 1 2 1 2 2 2 3 5 | while read a;do case $a in 1) echo "yay";;esac; done
23:26  evalbot: erUSUL: yay
23:26  evalbot: erUSUL: yay
23:26  evalbot: erUSUL: yay
23:26  Ward|: iaindalton, i can pastebin you the source its very tiny
23:27  Ward|: iaindalton, its just evtest but simplified output
23:27  Ward|: erUSUL, no, only with echo it did
23:27  iaindalton: alright, but judging by cat /dev/input/event1, I don't have a device on the other end of that file
23:27  Ward|: not with my little evtest
23:27  Ward|: iaindalton, use the event file that has your keyboard
23:27  erUSUL: Ward|: then the output is not like you describe it?
23:27  Ward|: press F9 should do the trick
23:28  iaindalton: Ward|: I don't know what files what devices are connected to -__-
23:28  Ward|: erUSUL, F9 will just output a 0 :)
23:28  Ward|: iaindalton, trial and error :p
23:29 --- drizztbsd_ is now known as drizztbsd
23:29  iaindalton: ok, found it :)
23:30  Ward|: iaindalton, ok hold on i'll pastebin it
23:32  Ward|: iaindalton, http://pastebin.ca/1966239
23:33  Ward|: iaindalton, this one should be for F9
23:35  Ward|: iaindalton, i tested it also works on my laptop when i press F9 :)
23:38  iaindalton: Ward|: weird; running it alone prints 1, but sudo ./a.out /dev/input/event3 |& while read a; do echo $a; done
23:38  iaindalton: does not
23:38  Ward|: iaindalton, yep like i said :)
23:38  Ward|: and its just a printf in the osurce too
23:39  iaindalton: heck, even just piping it through cat breaks it. I don't know what's up
23:39  Ward|: iaindalton, idem
23:40  Ward|: anyone else curious enough maybe?
23:40  Ward|: i really wanna know wtf is going on with it
23:42  Ward|: iaindalton, i'm asking in ##c aswell
23:45  Operator23: Is there an easy way to flip rows and columns? That is, make each row into a column in a (for example) tab-separated file
23:45  Ward|: this is really starting to piss me off :-O
23:57 --- Yvemath_ is now known as Yvemath
--- Log closed Tue Oct 19 00:00:59 2010
