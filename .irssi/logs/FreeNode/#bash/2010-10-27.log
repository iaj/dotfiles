--- Log opened Wed Oct 27 13:15:55 2010
--- Log closed Wed Oct 27 13:15:55 2010
--- Log opened Wed Oct 27 13:16:17 2010
13:16 --- Users 520 nicks [0 ops, 0 halfops, 0 voices, 520 normal]
13:17 --- Channel #bash was synced in 91 seconds
13:19  tolland: mapfile is only available in bash 4
13:20  geirha: If the file is 138k lines, consider dealing with it another way.
13:20  tolland: i am considering dealing with it in other way
13:21  tolland: hehe any suggestions on waht other way? i still have to iterate the lines in the file somehow
13:22  geirha: while IFS= read -r line; do ...; done < file
13:24  geirha: Depends on what you actually need to do with the lines in the file of course.
13:26  tolland: i need to iterate over them loads of times
13:35  tolland: can i serialize avariable in bash?
13:42  twkm: put all the stuff you want to do in a single loop.
13:50  grawity: How do I remove all spaces (or better, spaces or tabs) from the beginning and end of a given variable?
13:51  grawity: (preferably something simpler than shopt -s extglob && foo="${foo##*( )}".)
13:51  X-Raimo: how to make this: http://paste.org.ru/?jgglnx in right way?
13:51  Servercrash: hi, i have two files list list of ids, i want to file list of ids that are there in file 2 but not in file 1, this should show up in file 3, i tried diff file1 file2 > file3, but its confusing
13:52  grawity: Servercrash: try 'comm -23'
13:52  Servercrash: can anyone tell me a method where by only new ids of file2 will be stored in file3  and not the additional ides if file 1
13:52  karthee: spaceremoved=`echo variable | sed  's:/^\s\+//; s:/\s\+$//'`
13:53  clyphox: like a diff Servercrash ?
13:53  Dyresen: http://mywiki.wooledge.org/BashFAQ/067
13:53  twkm: karthee: ewww.
13:54  Servercrash: grawity, thinx i gues sits comm -13
13:54  karthee: twkm: you tried to tell something to me ?
13:54  grawity: Dyresen: Thanks, interesting
13:55  Dyresen: Don't thank me, I didn't write it :)
13:56 * grawity chooses extglob.
13:57  grawity: Now, I have another function that removes all spaces... how evil will this be, assuming I can guarantee that $1 will only contain valid variable names?
13:57  grawity: trim() { eval "$1"='${!1// /}'; }
13:59  tolland: for the record, it seems quicker to loop the file every time, than to read the file into the array and loop that
13:59  geirha: read -r foo <<< "$foo"
14:00  geirha: # foo=$'\t\tblah  blah  '; read -r foo <<< "$foo"; echo "$foo"
14:00  evalbot: geirha: blah  blah
14:00  tolland: presumably thats an effect of poor array implementation, or that the file is nicely cached
14:00  clyphox: once u <<<"$foo" you never go back
14:01  sn18: tolland:?
14:01  grawity: hmm, I didn't know 'read -r' still strips whitespace.
14:01 --- RaphaelT51 is now known as raphaelt
14:01 * grawity rereads 067
14:01  clyphox: i thought -r was raw?
14:02  geirha: When IFS contains whitespace, it'll trim off leading and trailing whitespace for each name
14:02  grawity: Hmmm
14:03  clyphox: sensible imo
14:03  geirha: If you don't want that trimming, you provide read with an empty IFS
14:03  geirha: # foo=$'\t\tblah  blah  '; IFS= read -r foo <<< "$foo"; echo "$foo"
14:03  sn18: unless you dont use REPLY
14:03  evalbot: geirha: 		blah  blah
14:04 * grawity has { IFS=":" read -r _ rcode rest <<< "$reply"; } and wants to apply the trimming to $rcode and $rest.
14:05  geirha: read -r rcode <<< "$rcode"; read -r rest <<< "$rest"
14:05  tolland: sn18: if i have a file with 136xxx lines in it "while read line; do something; done<file" seems faster than "for line in "${lines[@]}"
14:06  tolland: where ${lines[@]} is an array of the lines
14:06  sn18: incude tab and space in the IFS
14:06  geirha: Or, depending on what reply conatins, maybe  IFS=: read -r _ rcode rest <<< "${reply//$' \t'}"
14:06  geirha: That removes ALL spaces and tabs of course.
14:06  karthee: tolland: can you try with awk .. would be great to test its performance ..
14:06  grawity: tolland: maybe because "for line..." causes the array to be fully expanded into one really long line before executing?
14:07  grawity: Or does it not
14:07  tolland: grawity: yeah, i am suspecting that i might be iterating teh array wrong
14:08  tolland: hehe, it takes about 8 minutes to build the array
14:09  tolland: im doing it all wrong
14:10 * grawity finishes up identd-check.bash and begins irc.bash.
14:10  geirha: How are you building it? And why do you actually need to build that array?
14:17  grawity: Sometimes I wish /dev/tcp was part of the OS... at other times, it seems so limited. :(
14:22  clyphox: telnet pipes FTW
14:23  grawity: s/telnet/socat/
14:23  clyphox: true
14:23  clyphox: i wrote an entire bash
14:23  clyphox: erm ircbot in bash
14:23  clyphox: via telnet lol
14:23  Naib: they are not that hard
14:24  clyphox: no just time consuming if you want features
14:24  Naib: true
14:25  clyphox: i'm getting frustrated with vims bash syntax highlighting fails :/
14:26  clyphox: erm heres a good question... I'd like to make a script that outputs in conky format
14:26  clyphox: IE: "${conkyfoo bar}more stuff${etc}"
14:27  clyphox: but i cat really get bash to handle them without hardquotes and multiple echo -n type bits
14:28  clyphox: ideally I'd like a cat EOF block and be able to manipulate the stuff inside without fear of the ${conky} stuff being called
14:29  clyphox: any ideas? besides php/perl/rb/py
14:32  pgas: what do you mean by "manipulate the suff"? if you quote EOF the epansion won't take place in the here doc
14:33  pgas: cat < 'EOF' <newline>echo $blah is not expanded <newline>EOF
14:37 --- Skaag_ is now known as Skaag
14:47  Touns: Hello
14:49  Touns: I have a script that perfectly work when I launch it manually. When I add it to the crontab and execute it each minute, my script become empty. The file.sh isn't deleted, he become empty. I have no idea why. Someone have a clue about that please ?
14:51  clyphox: whack it into pastie.org
14:53  hkBst: what does it mean for a shell script to call ". <somefile>"?
14:53  Naib: source
14:53  hkBst: thanks Naib
14:54  geirha: ''help .'' gives you info about the dot command
14:56  hkBst: thanks geirha
15:00 --- JmZ_ is now known as JmZ
15:06  Touns: clyphox: here is my script and my crontab : http://pastie.org/1252649
15:06  clyphox: omw
15:07  Touns: it is made to watch any change of an annoucement website. If a new annonce is made, I get the new page into my email box
15:07  pgas: Touns: why do you have >  in your crontab?
15:08  Touns: I need to execute it sometimes
15:08  Touns: I don't know if I will execute it every minute or every 10 minutes
15:08  pgas: what do you thing  "> file" does?
15:08  Touns: oh sorry, I misunderstand your question
15:08  pgas: s/thing/think
15:09  clyphox: ye thats the major thing that jumps out
15:09  Touns: pgas: ok, thanks...
15:09  Touns: this is the error !
15:09  Touns: before it was */1 * * * * /myscript > /dev/null
15:09  clyphox: :)
15:09  Touns: maybe a vim error, thank you !
15:10  clyphox: vim doesnt make errors xD
15:10  Touns: yes, it's the guy into the screen and the seat
15:10  Touns: :)
15:10  clyphox: vim=god==no errors lolo
15:10  pgas: <clyphox> i'm getting frustrated with vims bash syntax highlighting fails :/
15:11  clyphox: so in techincal terms it was an interface issue between the keyboard and the chair
15:11  clyphox: pgas: yes vim isn't perfect <sadface>
15:12  geirha: Touns: */1 is the same as just * btw
15:13  geirha: Touns: As for line 3 in your script; you cannot have whitespace around the = in assignements.
15:18  clusterd: hi, how would I replace all newlines with a comma?
15:20  trash: tr '\n' ,
15:22  pgas: paste -s -d ,
15:23  clusterd: wow, that is a lot easier than awk
15:24 --- Nikoli_ is now known as Nikoli
15:26  pgas: really? awk -v ORS=, 1
15:27  trash: hihi.
15:29  SilverFox: I've got a cronjob that I have `ls /foo/bar/*/!(CVS)` in, and it works great from my shell, but seems to blow up when run from cron.  I have SHELL=/bin/bash, is there something that () does special in cron?
15:30  SilverFox: "syntax error near unexpected token `('"
15:30  falconindy: SilverFox: !() is an extended glob, which may not be enabled in the cron environment
15:30  clyphox: ! is trested differently in script and in shell
15:30  geirha: awk 1 ORS=, file
15:31  geirha: SilverFox: You must enable extglob, and it can't be on the same line as you use an extglob
15:32  SilverFox: can I fix this by setopt in cron?  If so, can I do so globally (for cron) ?
15:33  geirha: SilverFox: Dunno. You'll have to check cron's man-page. I'd just put the command in a script and run the script from cron instead.
15:33  SilverFox: geirha: fair enough
15:35  geirha: Or you could do it with sh syntax.  for f in /foo/bar/*/*; do case $f in */CVS) continue;; esac; something with "$f"; done
15:41  gooddesignusa: i'm very new to bash scripting. I understand some programming so i figured this wouldn't be to hard. I was basically trying to create a small script that will load a txt file. grab a link from each line, wget it. untar it and delete the tar file. I was manually using this "archive_file="views-6.x-2.11.tar.gz"; wget -c http://ftp.drupal.org/files/projects/$archive_file && tar -xzf $archive_file && rm $archive_file" to do it 
15:42  clyphox: million ways to skin a cat xD
15:43  trash: gooddesignusa: Looks sane.
15:43  trash: What is the question?
15:43  gooddesignusa: Well I just use that command in ssh. I've never made a bash script so was looking for someone to just point me in the right direction.
15:43  kojiro: gooddesignusa: did it fail over ssh?
15:43  gooddesignusa: I'm on google now but figured I would ask
15:43  trash: Just put it in a script-
15:43  gooddesignusa: no it works fine
15:43  kojiro: ok...
15:44  gooddesignusa: but i just dont feel like entering the command 20 times to d/l different files
15:44  kojiro: gooddesignusa: like trash said, put the script in a file on the ssh server so you can easily run it
15:44  Dyresen: Just loop over a list
15:44  kojiro: gooddesignusa: also, you probably want to use some quotes around "$archive_file"
15:44  randy2009: Hi, how do you guys handel return errors in a bash script? i have a few scripts with 20 commands, but i want to look @ the exit code's and act on it (send notification when fails)
15:44  kojiro: just for good measure
15:45  SilverFox: !faq 1
15:45  gooddesignusa: what do I save the file as? and how do I run it
15:45  greybot: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
15:45  geirha: randy2009: if command; then echo success; else echo fail; fi
15:45  geirha: Oh, greybot's back :)
15:46  randy2009: if looks @ exit code's?
15:46  geirha: gooddesignusa: You save it as a textfile with no extensions, make it executable and run it. See the guide in /topic.
15:46  gooddesignusa: ok thanks
15:46  geirha: randy2009: Yes, that's all if does.
15:47  kojiro: gooddesignusa: and put quotation marks around the variable expansion.
15:47  geirha: randy2009: [[ ... ]] and (( ... )) are commands...
15:47  randy2009: how can i put 20 commands in 1 variable? so i can do a 'for each'?:)
15:47  gooddesignusa: kojiro: ok
15:47  kojiro: gooddesignusa: http://dpaste.com/265078/
15:48  geirha: randy2009: Don't put commands in variables. Not if you want to stay sane at least.
15:48  gooddesignusa: kojiro: thanks thats a good starting point :)
15:49  fixxxermet: if I'm starting a program via a bash script, is there a way to find it's PID?
15:49  geirha: fixxxermet: If you background it, the pid will be in the special ! parameter.  program & pid=$!
15:49  randy2009: how can i use a 'for each' 'command' do if 'command'; then echo success; else echo booo; fi
15:49  geirha: !pm > fixxxermet
15:50  greybot: fixxxermet: http://mywiki.wooledge.org/ProcessManagement
15:50  fixxxermet: thanks
15:50  geirha: randy2009: Does any of the commands have arguments?
15:51  randy2009: geirha, commands like: psql -U postgres -d app-uitw -f ${DUMPFILE} >> ${LOGFILE} 2>&1
15:51  randy2009: yes
15:51  geirha: randy2009: Then it's not possible without ugly hacks
15:52  randy2009: ok, i'm trying to prevent writing a big bash script:)
15:52  geirha: !faq complex
15:52  greybot: http://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
15:54  randy2009: i put every exit code in a variable, in the end i have 20 variables ($EX_1 - $EX_20) how can i simply check them if one of them is not 0
15:54  randy2009: $EX_* ?
15:58  geirha: Use an array
15:58  geirha: !array
15:58  greybot: An array maps numbers to strings. Bash 4 also has associative arrays (maps strings to strings). See http://mywiki.wooledge.org/BashSheet#Arrays
16:01  fixxxermet: In my bash script I'm starting a screen, starting a process inside the screen, and then detaching from the screen.  The pid=$! doesn't seem to work if I want to capture the pid of the app insdie the screen.
16:01  fixxxermet: any recommendations?
16:03  geirha: Try asking #screen about how to get the pid of a process running in a screen.
16:04  fixxxermet: good idea
16:04  geirha: Hopefully it won't involve ps or pgrep
16:09 * clyphox shudders
16:14  randy2009: how can i get the highest value in an array?
16:14  randy2009: if i google i only get php
16:15  go|dfish: randy2009: loop through it and test...
16:16  yitz_: !oldest
16:16  yitz_: !newest
16:16  greybot: Find the latest modified file in a directory: latest() ( shopt -s nullglob; local file files=("${1:-.}/"*) latest=$files; for file in "${files[@]}"; do [[ $file -nt $latest ]] && latest=$file; done; printf %s "$latest" )
16:16  geirha: highest=0; for value in "${array[@]}"; do if ((value > highest)); then highest=$value; fi; done
16:18  geirha: Hm. The code in that factoid requires bash 3.1 or newer.
16:18  geirha: (I think)
16:21  gooddesignusa: thank you clyphox
16:21  gooddesignusa: idk if you guys have a bot that tracks karma or not like the drupal chan but
16:21  gooddesignusa: clyphox++
16:22  randy2009: HIGHEST=0
16:22  randy2009: myarray=( $EX_* )
16:22  randy2009: for value in "${myarray[@]}"; do
16:22  randy2009:         if (($value > $HIGHEST));
16:22  randy2009:         then
16:22  randy2009:         HIGHEST=$value
16:22  randy2009:         fi;
16:22  randy2009: done
16:22  randy2009: ouch
16:22  randy2009: sorry
16:22  randy2009: should this work?
16:23  clyphox: eeek not here pls
16:27  ferret: not here what?  This is #bash
16:27  ferret: randy2009: is myarray supposed to be a list of files?
16:27  randy2009: 20 exit codes
16:27  randy2009: exit status
16:27  ferret: Then no, it is not correct
16:28  ferret: $EX_* doesn't expand to the value of many variables
16:28  ferret: You should put them in an array straight away
16:28  randy2009: ah, myarray=+
16:28  ferret: instead of EX_0=$( whatever ) do exitcodes[0]=$(whatever)
16:29  ferret: or that, yes
16:29  ferret: uhhh
16:29  ferret: That's not quite the right syntax, but you get the idea
16:29  ferret: whatever; exitcodes+=( $? )
16:29  randy2009: thnx
16:29  randy2009: but the rest of the code is ok?
16:29  ferret: yes
16:29  randy2009: great
16:29  randy2009: thnx:)
16:30  geirha: Use lowercase variable names
16:30  randy2009: what is the standard
16:30  randy2009: lol
16:30  randy2009: just wanted to ask it:)
16:30  geirha: !varcap
16:30  greybot: By convention, we capitalize environment variables (PAGER, EDITOR, ..) and internal shell variables (SHELL, BASH_VERSION, ..). All other variable names should be lower case. Remember that variable names are case-sensitive; this convention avoids accidentally overriding environmental and internal variables.
16:30  geirha: Also, omit the $ in the (( .. )). (( value > highest ))
16:30  geirha: !arithmetics
16:31  geirha: !arithmetic
16:31  greybot: http://mywiki.wooledge.org/ArithmeticExpression
16:31  randy2009: !arthimetics
16:31  randy2009: i'll check
16:36  clyphox: !` > clyphox
16:36  greybot: clyphox: The backquote (`) is used in the old-style command substitution, e.g. foo=`command`. This syntax is deprecated in favor of foo=$(command). Backslash handling inside $() is less surprising, and $() is easier to nest. See http://mywiki.wooledge.org/BashFAQ/082
16:37  randy2009: weird, didn't knew that, so variables within a (( )) or don't need $
16:37  randy2009: why is that?
16:37  randy2009: (stupid question)
16:37  lhunath: words inside arithmetic context are "dereferenced" as variables.
16:38  clyphox: all i know its its nicer than the days when i was using let=
16:38  progressivpirate: hello. I am a novice linux user. I wrote a script a long time ago and now I forget what it does. I figured someone could look at it and tell me what it does
16:39  progressivpirate: sed -i ""  's@,@ @g' /Users/joe/scripts/smc.log
16:39  clyphox: is that the "script" ?
16:39  randy2009: change s@ to @ @g?
16:39  randy2009: in log?
16:39  progressivpirate: ok. It's a character replacement
16:39  lhunath: progressivpirate: depends what OS you run it on.
16:39  geirha: progressivpirate: It's a BSD sed command that replaces commas with spaces and overwrites the file with the new file.
16:40  progressivpirate: now I have to figure out why I wrote that lol
16:40  progressivpirate: thank you
16:40  randy2009: probaly a csv changing in normal log?
16:40  geirha: s/new/resulting/
16:40  progressivpirate: oh
16:40  progressivpirate: yup
16:41  progressivpirate: thanks!
16:41  geirha: If you want something portable, use ed
16:41  randy2009: if i do ssh user@server kaboem, and the kaboem gives me a exitcode of 1, the exit code is put back through ssh?
16:41  geirha: Yes, at least with openssh's ssh client
16:48  MTecknology: lol... a grep where the glob is more complex than the actual expression - grep '^\$db_url' */pressflow/sites/*.*/settings.php
16:53  sloof3: I have a script where I query a directory full of files with names that are IP addresses. (X.X.X.X) There are other files that I don't want to look at all.  I've defined a variable $DIR=/blah/foo/bar and use $DIR/* frequently in my script.  Is there a way to set $DIR that defines just the files with names that in the format x.x.x.x ?
16:56  karthee: find /path/to/dir  -type f  -name '192.168*'
16:56  karthee: find /path/to/dir  -type f  -name '192.168.[0-9][0-9][0-9].[0-9][0-9][0-9]'
16:57  falconindy: what's wrong with *.*.*.*
16:59  karthee: I tried it matches a lot of files ..   ./Downloads/dimdimDownloads/packages/console/mashup/flowplayer/toolbox.flashembed.min.js
17:00  randy2009: what does 2>$1 mean?
17:00  kojiro: heh
17:01  kojiro: randy2009: you mean 2>&1?
17:01  randy2009: yes
17:01  kojiro: randy2009: it means redirect the STDERR into STDOUT
17:01  lhunath: !2>&1
17:01  greybot: Making sense of the copy descriptor operator: http://wiki.bash-hackers.org/scripting/copydescriptor
17:02  randy2009: ok thnx
17:02  lhunath: it means, "send output to fd2 to where output to fd1 is going right now"
17:02  randy2009: this is the right usage?: >> ${LOGFILE} 2>&1
17:02  lhunath: learn to quote.
17:02  lhunath: !varcap
17:02  greybot: By convention, we capitalize environment variables (PAGER, EDITOR, ..) and internal shell variables (SHELL, BASH_VERSION, ..). All other variable names should be lower case. Remember that variable names are case-sensitive; this convention avoids accidentally overriding environmental and internal variables.
17:03  lhunath: !quotewhen
17:03  greybot: "Double quote" *EVERY* argument that contains whitespace or expansions ("$foo", "$(foo)", "`foo`"). 'Single Quotes' prevent expansions from happening at all. Also quote *, [, ], ? etc. if you don't want bash to expand them into filenames.
17:03  randy2009: ah yes, i know, but i got it from old scripts
17:06 --- MuzerAway is now known as muzer
17:07  emx: how do i quote/add slashes to make values csv-able?
17:08  geirha: With a csv parser
17:08  emx: is there one written in bash? =)
17:08  geirha: Not that I know of
17:08  emx: thought so
17:09  lhunath: time to switch to another language.
17:10  emx: not really. i just wanted to have an index for some files.
17:10  sloof3: Ok I think I have the find command I want.  Is there a way to macroize that results of the find command or at least macroize the find command itself for use with grep: i.e grep blah $RESULTS
17:11  geirha: !find > sloof3
17:11  greybot: sloof3: http://mywiki.wooledge.org/UsingFind
17:11  karthee: sloof3:   are you looking for this ..    find /path/to/dir  -name 'filename'  -exec grep  'searchstring' {} \;
17:17  sloof3: What I want to do is define my 'find' criteria once at the beginning of the script since I always want to use the same set of files throughout. Then be able to reference the results of the find many times later in the script.  I'm trying to reduce the quantity of changes I have to make if I need to change the find criteria.
17:19  lhunath: sounds like you want a function.
17:19  lhunath: or if you want to store the result rather than the command; an array.
17:27  Richlv: i'm reading lines from a file, and some of them contain single backslashes. then i echo them for some processing and concatenation - losing the backslashes, of course. is there some way how i could preserve those single backslashes ?
17:29  cthuluh: Richlv: read -r. type ''help read''
17:30  Richlv: cthuluh, very neat - thanks :)
17:40  dagni: i wonder, how to add "#" char to beginning of 3 lines before and one line after the line in which pattern match ?
17:42  ferret: a state machine with rotating buffers
17:42  sloof3: Here's the issue now. Since find is passing each result to grep I don't get the filename where the match is found.  I need this to happen.
17:42  ferret: grep has an option for that
17:43  ferret: perhaps
17:44  greycat: add an extra /dev/null argument to grep to force it to ALWAYS have 2+ filenames
17:44  sloof3: -l ...nice
17:44  greycat: -l is OK if you *only* want the filename, not the matching line
17:44  sloof3: I want just the filename
17:45  greycat: Ah, right-o then.
17:54  sloof3: If anyone's familiar with RANCID.  A network config backup script.  I'm querying the directory that has all the configs and sending out emails about specific devices if there is something wrong with the config.  So I just need to know the filename (which is the IP for the device) where foo or bar is missing or present depending on what I'm looking for
17:55  crankharder: say a program takes a file for input (but not STDIN) -- can I do some bash bit if awesome to fake the file input to this program?
17:55  crankharder: so it's normally executed like "some_prog input.txt", but I want to pipe something to it
17:55  greycat: Um... clearly 'foo' can't be in the filename if the filename is an IP address, so I guess you mean you want to know the names of files whose CONTENT includes the string 'foo', right?  Use grep.
17:56  kojiro: !faq versions
17:56  greybot: http://mywiki.wooledge.org/BashFAQ/061 -- Is there a list of which features were added to specific releases (versions) of Bash?
17:56  greycat: !<( > crankharder
17:56  greybot: crankharder: Process Substitution -- <(cmd) and >(cmd) -- see http://mywiki.wooledge.org/ProcessSubstitution , or http://mywiki.wooledge.org/BashFAQ/024 for a common use
17:56  greycat: crankharder: e.g. yourprogram <(echo hi)
17:57  kojiro: Anyone know offhand when leading-zeros support was added to brace expansion?
17:57  kojiro: Seems to have been an early v4
17:57  greycat: I thought it was 4.0
17:57  greycat: imadev:~$ bash-4.0 -c 'echo {01..05}'
17:57  greycat: 01 02 03 04 05
17:57  greycat: imadev:~$ bash-3.2.48 -c 'echo {01..05}'
17:57  greycat: 1 2 3 4 5
17:58  kojiro: found it
17:59  kojiro: I'll add it to the faq
18:03  sloof3: crankharder: This was already discussed before you joined. I was just clarifying my motivation.
18:05  Ward|: is there something i can use to list where a certain string is found within a text file, the linenumbers?
18:05  Ward|: is it used to check if there's something already available, which will then need to be replaced
18:06  devinus_: how would you guys pipe the output to a program and strip off newlines ?
18:06  devinus_: tr?
18:06  greycat: tr -d '\n'
18:13  crankharder: greycat: doesn't look like the result is getting to the program the way it expects it
18:13  crankharder: http://pastebin.com/TGUxv8B0
18:13  greycat: "Illegal seek" means it tries to do an lseek() or lseek64() on the file descriptor, so it wants a real file.
18:13  greycat: You'll have to use a temp file.
18:14  crankharder: ok, thanx
18:19  julian_: I have a script .. I put part of the code ... do mkdir "$ date" & & (cd "$ date" & & mkdir A), takes the variable as date and created directory ... and then go and create another directory with the letter A. .... (As I can do for example to check if A exists then the following point B. ... Or C, etc ...) Is that possible?
18:19  greycat: Your && needs to NOT have a space in the middle of it.
18:19 * greycat attempts to parse the actual question now...
18:20  greycat: You want to create "B" if "A" already exists?
18:23  julian_: greycat, yes... and C if B already exists... etc..
18:23  dagni: i wonder, how to add "#" char to beginning of 3 lines before and one line after the line in which pattern match ?
--- Log closed Wed Oct 27 18:24:12 2010
--- Log opened Wed Oct 27 18:44:37 2010
18:44 --- Users 545 nicks [0 ops, 0 halfops, 0 voices, 545 normal]
18:46 --- Channel #bash was synced in 91 seconds
18:48  pown: sup sukajigc
18:49  pown: hey baugarin
18:49  pown: kwo ctawa =:)
18:49  kojiro: um
18:51  pown: mu
18:53  pown: no a's suk
18:54  pown: alexalexalexalex
18:54  greycat: Please just stop.
18:55  pown: why dont u stfu
18:55  greycat: I am being polite.  Do I need to be impolite?
18:55  stockholm: i am sure we find someone with ops
18:55  pown: no u aint
18:55  pown: ' stop' isnt polite
18:55  pown: u need to be skilled, rather
18:56  greycat: No matter how many times you change your nickname, we know who you are, so please for the love of god just STOP BEING AN ASS.
18:56  pown: and what so on, my 25 body year old skills own j00'rs all
18:56  pown: whaaa lol
18:56  pown: ey
18:56  pown: im {xmb}
18:56  pown: so j00 kjnow
18:56  greycat: Yes, we know.
18:56  pown: k
18:56  trash: Oh, thank you for telling me again whom to ignore.
18:56  pown: some3 did not
18:56  trash: Nickname 56th on the xmb ignore list.
18:57  tuxdev: 56? wow
18:57  pown: i own all the shitlists
18:57  pown: so its nice
18:58  pown: see i just answered to someone in #awk
18:58  pown: ah well
18:58  pown: fix your face god greycat roflolz
18:59  pown: trash is doing like: " adding things to ignore && never deleting the list " which is the equivalent of " putting autoupdates and other eval features to ignore "
19:00  pown: greycat u should really respect your master much more
19:00  greycat: My wife isn't here.
19:00  pown: LOL
19:00  pown: else shed come to my place right
19:01 --- Weust` is now known as Weust`afk
19:04  pown: pownt
19:09  poisonbit: what is the utility of type -t ? in which scripting task could be used ?
19:10  tuxdev: I don't know offhand, but it seems like it could be useful for something
19:11  poisonbit: maybe for code generation decisions or something like ?  I can't imagine a escenario where it could be used
19:11  pown: whats -t saying
19:12  poisonbit: If the -t option is used, type prints a string  which  is  one  of alias, keyword, function, builtin, or  file if  name  is  an  alias,  shell  reserved  word,  function,builtin,  or disk file, respectively.
19:12  pown: sec
19:12  pown: well its type
19:13  pown: case 'type' builtin) .. ;; function) .. ;; esac
19:13  pown: like this
19:15  poisonbit: a yes, how to use it is clear... sorry, my question is more "but when can a program need to know if "something" is a function, keyword, builtin, etc" ?
19:15  poisonbit: dependency checking maybe
19:15  poisonbit: or shell/env capabilities checking
19:16  pown: what so pown
--- Log closed Wed Oct 27 19:28:09 2010
--- Log opened Wed Oct 27 19:28:30 2010
19:28 --- Users 545 nicks [0 ops, 0 halfops, 0 voices, 545 normal]
19:29 --- Channel #bash was synced in 91 seconds
19:31  PsciCodeliXHAt: heu when I pres alt and a number, it shows: (arg:) what it means?
19:32  greycat: It means (1) you're in emacs mode, (2) you're about to repeat the next keystroke N times
19:32  greycat: !arg:
19:32  greybot: "(arg: N)" (N is any number) is what you get in emacs mode when you press ESC and then type a number. The NEXT thing you press after the number will be repeated N times. Silly emacs.
--- Log closed Wed Oct 27 19:53:41 2010
--- Log opened Wed Oct 27 19:59:05 2010
19:59 --- Users 544 nicks [0 ops, 0 halfops, 0 voices, 544 normal]
19:59  cocoa117: how to put perl result into bash array?
20:00 --- Channel #bash was synced in 85 seconds
20:00  crankharder:  awk ' $1 ~ /(foo.*)/ {  }' foo.log -- what goes in the action to print what was matched by the pattern?
20:00  skered: A shoe horn
20:00  greycat: you'd have to ask #awk
20:01  greycat: !faq 5 > cocoa117
20:01  greybot: cocoa117: http://mywiki.wooledge.org/BashFAQ/005 -- How can I use array variables?
20:01  skered: crankharder: print $1
20:02  crankharder: skered: that's be the whole field -- just want the matched part
20:02  greycat: he didn't want all of $1; just part of it.
20:05  clyphox: !<<- > clyphox
20:05  greybot: clyphox: Indented Here documents. Here documents with a dash before the EOF will ignore preceding tabs on each line, allowing you to indent your here documents nicely. Refer to << for general information on Here documents. Note that only TABs will work - spaces will not. Some editors can replace the TAB character with spaces, so be careful.
20:05  julian_: with this command recursively look. txt files and stored in list-images ....
20:05  julian_: But as I can do to make you think list-images for each directory and files found .. 1 not only for all files found
20:05  julian_: find. -Name "*. txt"-exec cat> list-imagenes.txt {} \;
20:05  greycat: julian_: your redirection is happening *outside* of find.
20:06  greycat: If you want to perform a separate redirection for each file found, you need to do something like .... exec sh -c 'foo > "$1"' _ {} \;
20:06  julian_: what? sorry?
20:06  greycat: !find > julian_
20:06  greybot: julian_: http://mywiki.wooledge.org/UsingFind
20:07  julian_: greycat, ok, thanks.
20:09  skered: er.. I was reading that as (^foo...)
20:11  clyphox: julian_: do you want to just make an index of .txt files like:  find . -name "*.txt" > results.txt     ?
20:11  greycat: I'm not sure what he wanted.  I didn't look that hard.
20:12  greycat: he has a 'cat' in there, so maybe he just wanted to concatenate all the file contents...?
20:13  clyphox: ye i'm going by the strange stuff he said before that lol
20:13  julian_: clyphox,  need to use cat, then filter something .. and save the result in each directory and subdirectory ...
20:13  julian_: clyphox, directory1 = results.txt, subdirectory2 = results.txt
20:14  clyphox: ahh ye thats a little more complicated
20:14  clyphox: may be worth writing a full script for that
20:14  greycat: If you want to do a separate redirection per *subdirectory* then your outermost find command has to be finding *directories*, not files.  Then for the action, you'd do stuff to that directory (either a second find command, or a simple shell loop over a glob, or whatever).
20:14  Naznaz: Hi, I want to copy some files with the same file type located in different subdirectories to another folder without copying the directory, what's the command for that?
20:15  clyphox: yes so a find within a find
20:15  clyphox: then probably grep in the second find
20:15  greycat: julian_: EXAMPLE, because I cannot understand your actual questions:   find . -type d -exec bash -c 'cd "$1" || exit; printf "%s\n" *.txt > results && mv results results.txt' _ {} \;
20:16  Naznaz: I don't need to separate redirection by subfulder, I just want all my .mp3 files from Music/just/a/folder to test/
20:17  clyphox: Naznaz: one second i'm trying to understand the last thing u said /me sips tea
20:18  clyphox: Naznaz: so u have like a dir with lots of dirs+mp3s in... and u want to move just certain mp3s out?
20:18  greycat: Naznaz: find . -name '*.blah' -exec cp {} /other/dir \;
20:18  Naznaz: sort of, I want to move ALL mp3s out
20:18  karthee: Naznaz:  are you looking for this ...   find -type f -name '*mp3' -exec cp {}  test/ \;
20:18  karthee: Naznaz:  are you looking for this ...   find -type f -name '*mp3' -exec mv {}  test/ \;
20:18  Naznaz: Problem is the files are located on my NAS which i have to SSH and find tells me it doesn't have -exec
20:18  clyphox: mv /home/foo/music/just/a/folder/*.mp3 /home/foo/someotherplace/.
20:19  Naznaz: ok thx
20:19  Naznaz: but I want all mp3s from all possible subdirectories
20:19  clyphox: mv /home/foo/music/just/a/*/*.mp3 /home/foo/someotherplace/.
20:19  julian_: greycat, i have 10 o more files by directory... example:  directory1: file1.txt, file2.txt, file3.txt     AND  directory2: file1.txt, file2.txt, file3.txt .... I  need a cat recursive... example.. directory1: results.txt  AND  directory2: results.txt
20:19  clyphox: or use find
20:20  clyphox: it will recursivly move all that if finds ^^
20:20  greycat: I don't understand what "a cat recursive" means.
20:20  Naznaz: ok thx I'll try
20:20  greycat: What do you want INSIDE the results.txt files?
20:20  julian_: greycat, and have 2.000 o more subdirectorys.. etc..
20:21  greycat: I don't CARE how many there are.
20:21  clyphox: what results do u want..
20:21  Naznaz: FUCK
20:21  Naznaz: ups sorry
20:21  julian_: file1, file2, file3  to results.txt (but is by directory.)
20:21  greycat: Naznaz: for what?  You spelled it right.
20:21  greycat: julian_: the names?
20:22  Naznaz:  it works but I forgot to make a backup, now my folder structure is totally messed up (destroyed :D)
20:22  julian_: greycat, names? all files are to *. txt extension
20:22  greycat: julian_: WHAT.  DO.  YOU.  WANT.  INSIDE.  THE.  results.txt  FILE?
20:24  julian_: ALL *. txt files found in each directory, the goal in a results.txt files and store them in the same directory.
20:24  greycat: Their CONTENTS?  Or their NAMES?
20:24  julian_: contents.
20:24  julian_: :S
20:24  greycat: julian_:  find . -type d -exec bash -c 'cd "$1" || exit; cat *.txt > results && mv results results.txt' _ {} \;
20:25  karthee:  find /path/ -type -f  -exec cat {} \;
20:25  greycat: The example I gave earlier put their names into the results.txt file which is what I thought you were asking for.  You are very confusing.
20:25  greycat: karthee: he wants a separate redirection per subdirectory.
20:26  greycat: And I told him how to do that 3 or 4 times.
20:26  Naznaz: Now I have all my mp3s in one folder, gg :D I hope the tool to rename the files according to their id3 tags works :-)
20:26  karthee: ah .. i still couldnt understand that :-(
20:26  clyphox: Naznaz: i suggest wine+mp3tag
20:26  clyphox: it plugs into musicbrainz
20:27  Naznaz: clyphox, thanks, I'll try
20:27  Naznaz: clyphox, will it also create folders according to the pattern I feed it?
20:27  julian_: greycat, cat *. txt: No such file or directory
20:28  greycat: julian_: Oh well.  Ignore it?
20:28  karthee: greycat: yours is correct
20:28  clyphox: it has an intelligent renaming thing thats as much as I remember, i handle my folders manually
20:28  julian_: greycat, All files are in directories and subdirectories
20:28  greycat: And MY GOD, what the FUCK is wrong with your cut-and-pasting?
20:28  Naznaz: clyphox, okay, thanks :-) I'll give it a try
20:28  greycat: How can you cut-and-paste something that should obviously say *.txt and have it come out *. txt?
20:29  julian_: greycat, cat *.txt: No such file or directory
20:29  karthee: julian: Please explain properly or explain with  pastebin
20:29  julian_: karthee, ok, sorry.
20:29  greycat: I don't see a problem.  He has dirs with no txt files in them, so those won't have any content in their results.txt files.
20:29  karthee: julian_ : greycat asked to ignore the error 'No such file or directory'
20:30  greycat: Actually they won't have any results.txt files at all... they'll just have "results" files since the mv won't be done.
20:30  greycat: If you care about that, ADD SOME FUCKING ERROR CHECKING to it.  Jesus.
20:30  karthee: greycat: i think 'mv -f ' will help him .. isnt it ?
20:31  greycat: Not if he wants to delete the empty results file instead of renaming it.
20:31  greycat: God only knows what he really wants... he can't speak English.
20:34  clyphox: greycat: I've never seen that _ trick with find before its pretty neat
20:34  greycat: find > clyphox
20:34  greycat: !find > clyphox
20:34  greybot: clyphox: http://mywiki.wooledge.org/UsingFind
20:35  julian_: If only God knows ... but thou hast not paid attention to what I'm saying ..
20:35  clyphox: julian_: no we've been trying mate
20:36  clyphox: julian_: you want to drop into directries, look for .txt files in each and then .??something???.... results.txt in each directory ?
20:37  julian_:  It's working very well ... so:  find . -type d -exec bash -c 'cd "$1" || exit; cat *.txt > results.txt' _ {} \;
20:37  julian_: but
20:37  greycat: It would be simple enough to suppress errors from the cat command, or remove empty 'results' files, or both.
20:37  greycat: *sigh*
20:38  greycat: he FUCKED it up!
20:38  julian_: I do not understand that copies the file back out of the directory?
20:38  greycat: He got rid of the redirection to a NON-*.txt file.
20:38  greycat: So now he's going to be potentially catting a partial results.txt into the results.txt file.
20:38  greycat: It does not copy the file out of the directory!
20:39  clyphox: 19:24:30          greycat | julian_:  find . -type d -exec bash -c 'cd "$1" || exit; cat *.txt > results && mv results results.txt' _ {} \;
20:39  greycat: Why would you think it would do such a thing?  You said you wanted a results.txt file IN EACH DIRECTORY.
20:39  clyphox: Note :  > results && mv results results.txt
20:39  julian_: greycat, hey, relax .. are stressed ... Have a little patience ...
20:39  Operator23: I have one file with some numbers and one word per line and one file with 10k words, each on a line
20:39  greycat: *plonk*
20:39  Operator23: I want to remove every line from the first file that has a word from the second file
20:40  greycat: Operator23: use bash4, awk, or some other language that has associative arrays.
20:40  greycat: Read the 10k words into the AA, then use that to look up each word in turn from the other file.
20:40  Operator23: The 10k words are the ones I *don't* want
20:41  nDuff: Operator23, is ordering important?
20:41  nDuff: this sounds like a set operation to me
20:41  Operator23: nDuff: No, I can fix it with sort after
20:41  nDuff: !faq 036 > Operator23
20:41  greybot: nDuff: No matches found at http://mywiki.wooledge.org/BashFAQ
20:41  greycat: Operator23: Right.  So do what I said.
20:41  PsciCodeliXHAt: greycat: Hey man great wiki
20:41  nDuff: !faq 36 > Operator23
20:41  greybot: Operator23: http://mywiki.wooledge.org/BashFAQ/036 -- How can I get all lines that are: in both of two files (set intersection) or in only one of two files (set subtraction).
20:41  Operator23: Ah, thanks.
20:41  greycat: FAQ 36 assumes *exact* matches, though.
20:42  nDuff: greycat, he says one-word-per-line, no?
20:42  Operator23: Er, file 2 is one word per line
20:42  nDuff: so it sounds to me like it _is_ exact matches
20:42  greycat: The blacklist is one word per line.  The file he's redacting from has "numbers and a word" per line.
20:42  nDuff: ahh.
20:42  Operator23: File 1 is number number number number word
20:42  clyphox: cat test2 | cut -d " " -f 2 > tmpfile ; grep -f "tmpfile" test
20:42  greycat: So read in the 10k file first, into an AA.  Then read the 1st file line by line and if the word is in the AA, DON'T print that line.
20:42  greycat: Otherwise, do print it.
20:43  nDuff: Operator23, will each word occur more than once in file 1?
20:43  clyphox: where test2 is the file with the results u wanna look for
20:43  Operator23: greycat: Ah, gotcha.
20:43  pgas: if word is always the last you can easily adapt the 4th example of faq 36 using '$NF in a' instead of '$0 in a'
20:44  Ward|: if i try to redirect the output of awk back to the file i used as its input i end up with a blank file, how should this be done properly, please?
20:44  Operator23: Wait, can I do grep -v -f blacklist sourcefile?
20:44 --- thewoolleyman_ is now known as thewoolleyman
20:44  pgas: Ward|: with a temp file, there is no other way to do it properly
20:44  Operator23: nDuff: no, only once in file 1
20:44  Ward|: pgas, so i output to the tmp file, then i cat the tmp file to the original? :s
20:44  nDuff: Operator23, then you can always just strip out that one column, use comm against it, and then re-join to get the numbers back
20:45  greycat: Operator23: that would incorrectly match 'foo' when your word is 'afoot'.
20:45  Operator23: greycat: OK, that's what I was concerned about.
20:45  pgas: Ward|: cat or cp, well the other way would be to store the result in an array and to print the array back into the file in the END block
20:45  nDuff: well, wouldn't fgrep -x avoid that issue?
20:46  greycat: He has OTHER JUNK on the line, so he can't match whole lines.
20:46  clyphox: ye just thinking that
20:46  pgas: awk 'NR==FNR{a[$0];next} $NF in a' file1 file2
20:46  greycat: I don't understand the awk solutions.
20:46  nDuff: greycat, right, but the other junk can always be re-joined back in later
20:46  pgas: where file1 contains one word per line
20:47  nDuff: greycat, ...since the column we're operating on is unique
20:47  clyphox: maybe   cat test2 | cut -d " " -f 2 > tmpfile ; fgrep -xv "tmpfile" test > newfile
20:47  pgas: greycat: http://awk.freeshell.org/ComparingTwoFiles
20:48  pgas: in fact Operator23 see the link above too
20:48  Ward|: (pgas, he might be confused because he didn't see my question, he got me on ignore)
20:48 * greycat adds that link to 36
20:49  Ward|: thanks pgas i'll go for the temp file solution
20:49  greycat: The awk solution appears to be doing what I said originally -- load an AA with the blacklisted names, then iterate through the other file and check them against the AA.
20:50  greycat: It's just using super-cryptic syntax.
20:50  pgas: indeed
20:50  Operator23: pgas: Yup, checked it out
20:51  Operator23: Anyway, thanks guys; got it working.
20:51  Operator23: Unfortunately the blacklist is awful, but I can improve the results when I get a better one.
20:52  K3rmit: can someone help me go over a windows malware program that's infected me?
20:52  pgas: install linux?
20:52 --- openpercept is now known as Guest71332
20:52  K3rmit: I have linux
20:52  greycat: Go over... with a steam-roller?
20:52  greycat: !nabq
20:52  greybot: Not A Bash Question. Ask the channel that supports your software, hardware, or OS.
20:52  K3rmit: aah poop
20:52  Ward|: ##windows for instance
20:52  clyphox: rm -f virus.exe
20:52  clyphox: done!
20:53  K3rmit: yea except  how can I figure out which lines are the ones that create files
20:53  K3rmit: cause theres lots of this
20:53  greycat: Unless this Windows malware program is written in bash, I doubt we can help you.
20:54  K3rmit: got it
20:54  clyphox: you want to google: reverse engineering mate
20:56  hatten: is there an equivalent to "return" in bash, ie you exit a while loop
20:56  tuxdev: break
20:56  greycat: you want break
20:56  greycat: return is for functions
20:56  hatten: thanks
20:56  hatten: yah, i noticed return didn't work
20:57  clyphox: then use a variable
20:57  hatten: you talking to me?
20:57  clyphox: while var=1      bla bla .... and inside once its done var0
20:57  hatten: i just want break =p
20:57  clyphox: erm var=anything but 1
20:57  The-Compiler: clyphox: why the fuck would you want to do that?
20:58  clyphox: break.. IE line return?
20:58  The-Compiler: pardon?
20:59  hatten: i want to exit a while loop with an if statement, inside the if break works perfectly. In eg C# it's called return
20:59  clyphox: nm i didn't read entirely
20:59  hatten: =p
21:01  greycat: I don't know C#
21:01  greycat: In C, it's called 'break', so that's what bash uses.
21:02  greycat: There's also 'continue', which does the same thing as C's continue.
21:02  hatten: goes to the next 'iteration', right?
21:02  greycat: yes
21:02  tuxdev: you can't break or continue two levels up in bash, though
21:02  hatten: that's the same in C# then (wasn't my choice to learn it, windows-obsessed school)
21:03  greycat: tuxdev: ''help break''
21:03  tuxdev: huh, good to know
21:04  hatten: ooh, cool that you can break several loops at the same time
21:04  greycat: I don't think I've ever needed that in a bash scrip.
21:04  hatten: well, it's cool anyway :D
21:04  greycat: But still, it's good that it's possible.
21:05  hatten: i would say help is pretty cool too.../me never knew about it before
21:05  clyphox: a comment at beginning with your name (or pseudo), your e-mail, and the chosen license
21:05  clyphox: no shebang on first line (like '#!/usr/bin/perl'), it's not needed
21:05  The-Compiler: clyphox: huh?
21:05  clyphox: sry mispaste
21:06  The-Compiler: a shebang is a good thing though. :o
21:07  clyphox: sry i was moving my laptop, random bit from weechat docs
21:09 * Richlv used 2 level break once. don't recall where exactly, would have to do massive digging to find :)
21:09  Richlv: or maybe it was continue
21:10  The-Compiler: Richlv: grep -R 'break [0-9]' /
21:10  The-Compiler: :p
21:10  hatten: wow! you're so cool! xd
21:11  Richlv: The-Compiler, assuming i know on which system that piece of script is located ;)
21:11  The-Compiler: :D
21:12  hatten: what? there is no multi-system bash command for that?
21:12  greycat: there are plenty of distributed ssh type things
21:12  hatten: lmao
21:13  tonisius: greycat: cssh is a good one :D
21:15  republican_devil: burp
21:20  Naznaz: clyphox, how do I get mp3tag to work with my external device under Linux? The change directory button does nothing :(
21:22  republican_devil: lol
21:22  republican_devil: script it!
21:23  clyphox: cd ~/.wine/drive_c ; ln -s /real/mp3/dir linkname
21:23  Naznaz: thanks
21:38 --- thespider is now known as rustymyers
21:49  dagni: i wonder, how to add "#" char to beginning of 3 lines before and one line after the line in which pattern match ?
21:49  greycat: !ed > dagni
21:49  greybot: dagni: ed is a command-based file editor. See http://bash-hackers.org/wiki/doku.php?id=howto:edit-ed - http://sdf.lonestar.org/index.cgi?tutorials/ed - http://wolfram.schneider.org/bsd/7thEdManVol2/edtut/edtut.pdf
21:49  dagni: 3 links?
21:49  dagni: which one is best for what i need?
21:50  republican_devil: yes
21:50  republican_devil: ed is nice
21:50  republican_devil: man ed
21:50  kojiro: talk to man ed
21:50  republican_devil: ,n and the . after you apend with a are most important to me
21:50  clyphox: ed is like one of the oldest+best
21:50  republican_devil: ,n is cool
21:51  republican_devil: ,p too
21:51  dagni: Ed Fans Detected
21:51  dagni: ;>
21:52  Naznaz: I got the script: http://www.linuxquestions.org/questions/linux-general-1/bash-script-for-sorting-and-renaming-multiple-mp3-files-by-id3-tags-602105/ (the first one) but it puts a " " (maybe its "\n") after each variable, how do I modify it to don't do that?
21:53  Naznaz: (mp3tag doesn't want to create directories)
21:59  RenatoSilva: anyone used with bash source code? how is its behavior when compiled without encoding support (a dude from #mingw told bash.exe is so, that is, it works only with ascii (?!), he said: compiled without gettext and iconv)
22:00  republican_devil: bash is nice
22:00  republican_devil: a source of fun
22:02  dagni: can't find
22:02  dagni: in the links provided
22:02  dagni: how to delete 3 lines before pattern and one after the pattern
22:03  greycat: It should be obvious by now that nobody here is going to write the ed commands for you.
22:03  dagni: no need to use ed if one can write sed example for me
22:03  greycat: ha ha ha ha ha ha sed ha ha
22:04  greycat: I'd do it in vi, personally.
22:04  dagni: hi hi hi, yeah, right, i'm just trying to understand the general idea of how it's odne
22:04  dagni: but without lil example i'm lost
22:05  greycat: cp file file.bak; printf '/foo\nkkkddjjjdd:wq\n' | vi file
22:05  pgas: printf %s\\n  g/foo/-3,+1d w | ed -s file
22:05  greycat: Ok, apparently I was wrong.  pgas is going to write ed commands for you.
22:06  dagni: you see, sometimes you're simply wrong, hope it's not that bad feeling ;)
22:06  dagni: pgas: what is the ' w ' for ?
22:06  dagni: file name ?
22:06  cthuluh: *sigh*
22:06  dagni: ;P
22:06  greycat: man ed
22:06  dagni: ok
22:06  greycat: seriously, you're getting VERY annoying.
22:08  kojiro: uh-oh, my annoying badge is in jeopardy
22:08  kojiro: quick, someone tell me how to solve a really simple problem made unnecessarily complex for no obvious reason!
22:09  cthuluh: kojiro: RTFM?
22:09  cthuluh: (this is generally the most straightforward solution)
22:09  kojiro: lol
22:10  kojiro: assuming it's not an XY problem, maybe
22:10  cthuluh: oh yeah, so RTFFAQ too
22:12  dagni: pgas: thank you very much, now i solved my problem + i can start learning, basing on example you given, it's odd that someone tells you _HOW_ to learn stuff, i have my ways, other will just find 'man' enough, nothing to get disturbed about...
22:13  greycat: Nobody told you "how to learn stuff".  You were given 3 or 4 URLs and also told to read the official manual.  You were also given a vi example instead of an ed example, and then finally an ed example.
22:13  pgas: though there are lot of examples if you follow the first link that you were pointed to
22:13  poisonbit: by 0$
22:13  dagni: i followed first link but i was unable to find what i needed..
22:13  dagni: call me dumb ok, but i still try to learn
22:14  greycat: He apparently refused to read ANY of the material presented, since he couldn't even figure out that w means write.
22:15  pgas: hmm, bash-hackers seems to have changed its link namings...the correct link seems to now be http://wiki.bash-hackers.org/howto/edit-ed
22:16  pgas: ah no sorry, my bad
22:16  greycat: They both lead to the same page for me.
22:16  dagni: pgas: http://wiki.bash-hackers.org/doku.php?id=howto:edit-ed points me to http://wiki.bash-hackers.org/howto/edit-ed
22:16  dagni: same content for me
22:16  KarlHungus: does bash provide any mechanism for inspecting the PID struct it is executing as?
22:16  Naznaz: I got the script from http://www.linuxquestions.org/questions/linux-general-1/bash-script-for-sorting-and-renaming-multiple-mp3-files-by-id3-tags-602105/ to work, now I have an executable named mp3renamer, how do I get it to apply on all files in a directory? ./mp3renamer * doesn't work
22:17  pgas: yeah, it's just that my automatic link thing cut the url at the :
22:17  greycat: PID... struct?
22:17  KarlHungus: to clarify, i mean without inspecting any platform dependent features like procfs
22:17  greycat: What information are you trying to get?
22:18  greycat: Naznaz: if it only operates on a single filename argument, you need to add a loop to it, like   for file; do ... stuff ...; done
22:19  Naznaz: greycat, uuh okay, thanks, can you tell me how to do that if I post the file on pastebin or do I have to google? :-)
22:19  greycat: I just TOLD YOU.
22:19  Naznaz: greycat, yes, but as I'm not very experienced for file; do ... doesn't help me very much ;-)
22:20  greycat: It's literal!
22:20  greycat: for file; do
22:20  greycat:   ... YOUR CODE GOES HERE ...
22:20  greycat: done
22:20  Naznaz: okay, thanks
22:20  greycat: !loops
22:20  greybot: Loops repeatedly execute a block of code. See http://mywiki.wooledge.org/BashSheet#Loops
22:21  greycat: Hmm, the BashSheet stuff in that section is very odd.
22:23  Naznaz: hm it doesn't work the way intended :D
22:23  greycat: I assume your "working" code had something that operated on "$1" which was a filename argument.
22:23  greycat: So you wrap a "for file" loop around it and use "$file" in place of "$1".
22:24  Naznaz: ah it's $file, thanks, I only used file
22:24  greycat: !guide > Naznaz
22:24  greybot: Naznaz: http://mywiki.wooledge.org/BashGuide
22:25  Naznaz: thank you very much, it runs now :-)
22:37  paissad: is it possible to set the speed ot the cursor during the use of directional keys in a terminal ?
22:38  greycat: That would be done to the terminal, not to bash.  It may or may not be possible, depending on the terminal.
22:38  greycat: I suspect you are talking about the key repeat rate.
22:38  paissad: ok, i only expected to set some existing ENV vars for that ^^
22:39  greycat: Terminals would not see or know about the environment variables you set in the shell that is their child process.
22:39  greycat: Generally, terminals are configured by (a) command-line arguments TO the terminal, (b) X resources, (c) menus/mouse clicks in the terminal's UI.
22:39  greycat: Some of them take certain keystroke combinations as well.
22:40  greycat: !nabq
22:40  greybot: Not A Bash Question. Ask the channel that supports your software, hardware, or OS.
22:40  paissad: ok ;)
22:50  tharkun: What program should i use to grab the ip i am recieving a connection from on some non-standard port?
22:51  rickest: paissad: if you do mean repeat rate then you can change it with your window manager (usually), or:  xset r rate 175 30    'man xset' for valid values
22:51  go|dfish: tharkun: netstat, lsof
22:51  Ward|: if i want to read an intire line, and seperate "words" with for instance read foo _ bar, how sohuld i do that please?
22:51  tharkun: go|dfish: and parse the output constantly ?
22:51  Ward|: now i have read the seperate words, but i'm also gonna need the intire line seperately
22:52  go|dfish: tharkun: ah, unsure
22:52  go|dfish: Ward|: perhaps you want to use read's -a
22:52  Ward|: while read foo _ bar is what i have now
22:53  rickest: tharkun: ngrep or tcpdump, too. any of the libpcap utils
22:53  Ward|: go|dfish, but how would it fit in the while? can i just pipe the first read (for the intire line) to the second ?
22:55  tharkun: rickest: hmm not exactly what i was looking for but i think it will do. Thanks a lot
22:56  nDuff: Ward|, read -r whole_line; read -r first second rest <<<"$whole_line"
22:56  rickest: tharkun: might try #networking
22:57  Ward|: nDuff, right that makes sense :) thanks
23:00  b0ot: has anyone worked with writing a bash script to read data comming in rs 232?
23:01  nDuff: !faq 1 >b0ot
23:01  greybot: b0ot: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
23:02  nDuff: b0ot, see also socat
23:04  Ward|: what do i use if i want to read a value between 2 tags liek for instance html?
23:04  nDuff: !html > Ward|
23:04  greybot: Ward|: You can't realistically parse tag-based markup languages like HTML and XML using Bash or utilities such as grep, sed or cut. If you just want to dump/render HTML, see (links|links2|lynx|w3m) -dump, html2text, vilistextum. For parsing out pieces of data, see tidy+(xmlstarlet|xmlgawk|xpath|xml2), or learn xslt. Ask #xml and #html for more help. See http://www.codinghorror.com/blog/archives/001311.html
23:05  Ward|: thanks again nDuff
23:05 * nDuff is, personally, a big fan of XMLStarlet.
23:05  b0ot: nDuff, how do I actually access what is comming in from the serial port. I want to be able to read what the data is format it and send it to a specific ip/port
23:05  nDuff: b0ot, I pointed you at socat for that reason.
23:06  b0ot: oh
23:06  b0ot: thanks
23:09  b0ot: nDuff, have you ever written anything with socat?
23:09  nDuff: yes.
23:09  nDuff: frequently. Which is not to say I have time for hand-holding now.
23:13  mar77i: Hrhr, I found a real life appliance for bashphorism 2, it's mean, it can actually force people think for themselves... :D
23:15  Ward|: nDuff, this is a little overkill for me i think since the only thin i will need to do it read the data between an opening and closing tag
23:15  Ward|: i know the names of those already
23:15  Ward|: nice to know if i ever need it though
23:16  nDuff: Ward|, it's trickier than that, though
23:16  nDuff: Ward|, let's say your document happens to have another copy of the opening and closing tag, but inside a HTML comment
23:16  Ward|: nDuff, i know the exact 2 tags how can it be tricky then? :s
23:16  Ward|: nDuff, thats not the case
23:16  Ward|: nDuff, i just used some tag-like stuff in a txt file :)
23:17  nDuff: Ward|, ...let's say that instead of <foo>bar</foo> you suddenly get < foo qux=meh>bar</foo>
23:17  nDuff: Ward|, ...right, if you're restricting your input to a subset of valid HTML, it's a different problem than parsing HTML
23:17  Ward|: nDuff, well that does not match my tag so
23:17  Ward|: i know the exact tag names
23:17  nDuff: Ward|, ...but lots of people do that, and then don't document to the folks interoperating with them that they only accept a subset
23:17  nDuff: Ward|, ...and doing that is evil.
23:17  Ward|: like "<foo> and </foo>"
23:17  Ward|: so how can i go wrong knowing that?
23:18  nDuff: Ward|, ...nevermind the matter of XML namespaces, too...
23:18  nDuff: Ward|, I already gave you an example of how you could go wrong -- other copies of the same tags but inside a comment
23:18  b0ot: nDuff, so I would need to open some sort of connection to the serial port then get the data i need then format it the way i want then open another connection with the ip address/port i want to send it to and send it out with that
23:18  Ward|: nDuff, i control whats in the txt file though, i'm very sure it will never have crap like that in
23:18  Ward|: nDuff, thanks for the warning though
23:19  Ward|: if it was real HTML or closer to it it owuld definitely be usefull
23:19  nDuff: Ward|, again, you're following practices that ass-u-me that the restrictions you have in mind will be true forever. Unless you document that for anyone else who ever touches what you're doing, you're making for a world of hurt down the line.
23:19  Ward|: nDuff, i'm not exactly doing rocketscience here, as you might have noticed from my questions :p
23:20  Ward|: if you would see it i'm sure you would agree
23:21 --- JmZ is now known as JmZ_
23:21  nDuff: Ward|, *shrug*. I'm trying to push you away from writing fragile code -- much easier to move on to other, more interesting things when other people can usefully maintain what you wrote in the past. That said, of course, it's your life.
23:22  Ward|: nDuff, this is not like a gigantic project, nobody will ever want to maintain this
23:22  Ward|: nDuff, but liek i said its NOT HTML
23:22  Ward|: i just use <> and </> because i needed some sort of tags
23:23  Ward|: i'll just change the tags so you cannot call it html anymore :)
23:23  Ward|: lol
23:28  mar77i: !pe > Ward|
23:28  greybot: Ward|: Parameter Expansion is the expansion of a parameter: "$foo", "$1". You can use it to perform string operations: "${file%.mp3}", "${0##*/}". Remember to *always* quote them. See http://mywiki.wooledge.org/BashSheet#Parameter_Operations
23:28  mar77i: ...and no further comment, for the sake of peace :)
23:29  Ward|: mar77i, i'll take a look
23:29  Ward|: mar77i, thanks
23:31  poisonbit: (IFS=,; echo "${names[*]}")  # loving BashSheet, my join () was pretty huglier and longer than that
23:33  poisonbit: does '.' lookup the $PATH as source does ?
23:33  Jinxed--: What does NEMA mean?
23:34  pragma_: Now Enema My Ass
23:34  Jinxed--: I thought that might be it
23:34  poisonbit: repply my self: it does
23:34  poisonbit: didn't know, thats really nice
23:35 --- JmZ_ is now known as JmZ
23:35  poisonbit: so I can change my lib documentation/interface to  . mybashlib  (if it is in path)  and not . /path/to/my/lib
23:35  poisonbit: nice
23:36  poisonbit: source, check if loaded, and care a fuck by the user system layout
23:36  Jinxed--: I'm trying to write a script that would open up a serial connection periodacly send a command and wait for the response. Get the response do some simple formatting and send it out UDP style to specific ip/port? I have been told socat, but does anyone have some good reference examples on how I can make this current pipe dream of mine a reality?
23:37  poisonbit: Jinxed--, while true; do your_stuff; done  ?
23:38  tehbaut: is there a command like wget that doesn't actually download the page? I just need to create a web hit via command line for a cronjob...
23:38  tehbaut: or maybe a flag for use with wget?
23:38  Jinxed--: poisonbit, I know how to do the periodic stuff it's making the connection to the serial and sending the end formatted data that i don't know how to do
23:39  poisonbit: tehbaut, curl -I "$url" just ask for HTTP head (200 ok, etc)
23:40  tehbaut: interesting, ok
23:41  poisonbit: Jinxed--, if I where in debian I could try:  apt-cache search serial port, and look at programs docs... are you going to implement access to serial port using file descriptors, etc in bash? re-do the wheel ?
23:41  bleen_work: if i have folder/subA and I want to move all teh contents of subA into "folder" how di I do that?
23:42  poisonbit: there are C programs for that
23:42  Ward|: mar77i, no idea how i should use that :( do you know what specific function?
23:42  bleen_work: mv -r subA/* ./  ?
23:42  Ward|: i didn't find anything relevant
23:43  Rad: hi guys, i've got a question. i've got a script that echoes 'one two three' 100 times every line in 1 second, i do ./script | sed -e 's/one/four' and i get "four two three" 100 times every line in real time so it's ok, then i do ./script | sed -e 's/one/four' | sed -e 's/two/five' and i don't get the results in realtime but nothing shows and i have to wait until everything gets in buffor and then it all appears. why dont the lines show in real time?
23:44  poisonbit: bleen_work, or mv -- folder/subA/* folder/
23:45  Jinxed--: poisonbit, I was hoping just to use socat
23:46  poisonbit: Rad,  | sed -e 's/one/four/' -e 's/two/five/'
23:46  poisonbit: Jinxed--, I don't know it too much, I'm too many years using just ssh instead of netcat, and socat I've only used one or two times by a co-worker
23:46  Rad: poisonbit: ok, but can i use two differend seds?
23:47  Rad: different
23:48  poisonbit: Rad my sed has -u
23:49  poisonbit: --unbuffered
23:49  poisonbit: "load minimal amounts of data from the input files and flush the output buffers more often"
23:49  poisonbit: it seems like $|=1 in perl
23:50  cthuluh: !faq buffer
23:50  greybot: http://mywiki.wooledge.org/BashFAQ/009 -- What is buffering?  Or, why does my command line produce no output: tail -f logfile | grep 'foo bar' | awk ...
23:50  poisonbit: wiki++ each day more
23:50  poisonbit: too many pr0n
23:52 * poisonbit discovers stdbuf, unbuffer, the -l arg of tcpdump etc
23:53  Rad: i don't have -u option :/
23:55  cthuluh: Rad: why would you need -u when you can use a signe sed command?
23:55  cthuluh: single*
23:56  poisonbit: or... didn't you find in http://www.dest-unreach.org/socat/doc/socat.html the tasks you need to make ?
23:57  poisonbit: then bash will not help too much as other available options (C, perl, python, etc)
23:59  poisonbit: whit perl you can comunicate to serial port using a flash media server fork or things like webcam input.... just using freely available and pre-packaged modules
23:59  neekers_: can someone please tell me what the >&5 means in  $as_echo "$as_me:${as_lineno-$LINENO}: checking for libiconv_open in -liconv" >&5
23:59  poisonbit: neekers_, sure the bot has some faq for file descriptors
23:59  poisonbit: but I don't know the keywords
--- Log closed Thu Oct 28 00:00:03 2010
