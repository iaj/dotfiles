--- Log opened Wed Dec 15 00:00:31 2010
--- Log closed Wed Dec 15 00:02:36 2010
--- Log opened Wed Dec 15 00:07:58 2010
00:07 --- Users 528 nicks [0 ops, 0 halfops, 0 voices, 528 normal]
00:09 --- Channel #bash was synced in 101 seconds
00:12  vvsh: how can I use sed to change a recurring words within all the files in current directory, something like this: sed "s/foo/bar" < *
00:13  The-Compiler: vvsh: recursive?
00:14  vvsh: that just an idea, will be nice to recursive to files in sub directory:)
00:14  The-Compiler: !usingfind
00:14  The-Compiler: !find
00:14  greybot: http://mywiki.wooledge.org/UsingFind
00:14  The-Compiler: find . -exec sed -i 's/foo/bar/' \;
00:14  The-Compiler: something like that.
00:15  vvsh: The-Compiler: thanks, that's sort of thing i'm looking for
00:16  vvsh: maybe using find with xarg is safer :)
00:16  The-Compiler: vvsh: why should it?
00:16  The-Compiler: !xargs
00:16  greybot: xargs(1) is dangerous (broken) when processing filenames that are not NUL-terminated. If you're working with filenames, use find's -exec {} + instead (yes, it does multiple-filenames-per-invocation, too).
00:17  The-Compiler: find with -exec is 100% safe (okay, 99%, also -direxec is maybe 99.5%)
00:17  tharkun: How can i substitute this with a nice pipe? echo begin > insert.sql&& mysql ...... >> insert.sql&& echo commit >> insert.sql && sqlite3 file.db < insert.sql
00:18  vvsh: just in case of very long file name etc
00:18  cthuluh: tharkun: { echo begin && mysql ... && echo commit; } | sqlite3 file.db
00:18 --- death[note_away] is now known as deathnote[]
00:23  tharkun: cthuluh: thx i got this Error: incomplete SQL: commit but that is something else ;P
00:24  cthuluh: I guess you need a literal semicolon
00:27  vvsh: The-Compiler: what's the command to use sed to change strings within specific file, i tried " sed -i 's/foo/bar/g' < foo.txt", but it doesn't work - "sed: -i doesn't take stdin"
00:27  Snerf: how can I output the STDOUT of a program to a variable. I have tried newvar=$(command) and newvar=`command` but both produce blank variables
00:28  cthuluh: 4# var=$(pwd); echo "[$var]"
00:28  shbot: cthuluh: [/root]
00:28  cthuluh: !faq output > Snerf
00:28  greybot: Snerf: http://mywiki.wooledge.org/BashFAQ/002 -- How can I store the return value/output of a command in a variable?
00:29  cthuluh: vvsh: well, sed can't edit stdin. just don't make it read from stdin
00:29  rdz: how can i send a wget command in a subshell to the background? somehow the subshell doesn't return, also when using '&'
00:29  cthuluh: vvsh: sed takes file names as arguments, you could read this in man sed
00:30  cthuluh: you mean that wget ... &
00:30  cthuluh: doesn't guvce you back your prompt?
00:30  cthuluh: give*
00:31  rdz: cthuluh, no..
00:31  rdz: cthuluh, wget ... >&- 2>&- <&- &     does seem to work, though
00:32  cthuluh: well, if you get nothing printed then "it works"? :P
00:32  vvsh: The-Compiler: I read the man and tried "i tried " sed -i  's/foo/bar/g' < foo.txt"
00:32  cthuluh: rdz: if you read man wget you'll see an option that does what you're looking for
00:33  cthuluh: rdz: though I seriously doubt that wget doesn't give you back your prompt
00:33  vvsh: sorry i mean " sed -i 's/foo/bar/g' foo.txt
00:33  cthuluh: rdz: it can't do otherwise
00:33  cthuluh: rdz: try wget foo & echo FOOBAR
00:34  cthuluh: rdz: the fact that wget keeps printing on the screen doesn't mean that you didn't get back your prompt
00:34  rdz: cthuluh, this works fine, but my problem was with wget within a subshell
00:35  cthuluh: rdz: what was the code?
00:35  rdz: anyway. my problem seems to be adifferent one.. it's working now in a subshell... with --background
00:35  bakers: Can someone help me with this command
00:35  bakers: /usr/bin/mutt -s "test" [EMAIL PROTECTED] </dev/null 2>&1
00:35  bakers: What does the < /dev/null do?
00:35  cthuluh: rdz: wget -b doesn't imply a subshell, ok?
00:35  rdz: cthuluh,  bla=$(wget --quiet --background -O "/tmp/loeschi.flv" "http://gartenhof.live1-f.akamaihd.net/sf1_1_800@43046";echo $?); echo "exitcode: $bla"
00:35  bakers: Oh it passes a null message to mutt to send... nevermind
00:35  bakers: I got thrown off by the two directions of < >
00:36  cthuluh: bakers: do you think that you need mutt's full path?
00:36  rdz: cthuluh, thos whowever does not work:  bla=$(wget --quiet  -O "/tmp/loeschi.flv" "http://gartenhof.live1-f.akamaihd.net/sf1_1_800@43046" & echo $?); echo "exitcode: $bla"
00:36  bakers: cthuluh: I think so?
00:36  bakers: cthuluh: Why wouldn't you specifiy the full path?
00:37  cthuluh: bakers: useless? it can give problems if the binary's location changes
00:38  bakers: cthuluh: I was always taught to use the full path to binaries in shell scripts/cron/etc in case the calling script doesn't get the appropriate path.
00:38  cthuluh: bakers: fix the PATH then ;)
00:38  nDuff: bakers, it's the local environment's job to have an accurate PATH
00:38  cthuluh: rdz: why this?
00:38  nDuff: bakers, ...a script can't know what the paths will be for every environment it'll ever be run on
00:39  cthuluh: rdz: when you do wget foo & echo $?
00:40  cthuluh: rdz: in your shell. do you get an error if you give wget a bad url?
00:40  cthuluh: rdz: ie. echo $? prints 1 or 2?
00:42  rdz: cthuluh, no.. it seems alwaqys  to give '0'... so its actually kind of meaningless..but i need some  value for other reasons
00:44  cthuluh: rdz: that's because after "command" &, $? is always zero. how could it be different, since you don't know how "command" exited?
00:44  cthuluh: rdz: if you want to know the exit status, first don't use wget -b
00:45  rdz: cthuluh, totally true
00:45  cthuluh: rdz: then you have two options. 1) use wget ... & wait $!; echo "exit code: $?"
00:45  rdz: cthuluh, i guess. that script has an error.. it is supposed to return the PID, not the exitcode
00:45  cthuluh: rdz: 2) don't put anything in the backgroun
00:45  cthuluh: d
00:45  cthuluh: !$!
00:45  greybot: $! expands to the process ID of the most recently executed background (asynchronous) command.
00:45  rdz: cthuluh, gotcha
00:46  cthuluh: rdz: what about this: if ! wget -qO /foo/bar "$url"; then echo "An error occurred, please check with set -x" >&2; exit 1; fi
00:46  tharkun: cthuluh: literal semicolon ?
00:46  cthuluh: (also, please note that the wget ... & wait $!; ..  was ttally useless)
00:46  cthuluh: tharkun: as sqlite expects, no?
00:46  tharkun: yes
00:47  cthuluh: tharkun: you need a quoted semicolon
00:47  cthuluh: as in ';' or \;
00:47  cthuluh: !quotes > tharkun
00:47  greybot: tharkun: "USE MORE QUOTES!" They are vital. Also, learn the difference between ' and " and `. See <http://mywiki.wooledge.org/Quotes> and <http://wiki.bash-hackers.org/syntax/words>.
00:49  tharkun: cthuluh: \; outputs the following  line 17: syntax error: unexpected end of file
00:50  tharkun: as well as ';' and ";"
00:50  tharkun: And yes i am missing a semicolon
00:50  cthuluh: tharkun: ... && echo 'commit;' ; } | ...
00:51  tharkun: cthuluh: same story
00:51  tharkun: !paste
00:51  greybot: Please don't waste our time by making us go to a pastebin just for a five-line snippet. Paste it in the channel. If you have a larger script that's showing problems, trim it down to the bare minimum size that still shows the problem. You'll probably fix it yourself once you do that.
00:52  mac-: hi
00:53  mac-: which one key combination should clear entire line?
00:53  mac-: Ctrl+K or Ctrl+W ?
00:54  cthuluh: when at the beginning of the line, C-k
00:54  cthuluh: see man bash, all keybindings are explained
00:54  mac-: k
00:54  mac-: thx
01:00  tharkun: cthuluh: care to take a look at the code?
01:01  tharkun: { echo "begin transaction;" && mysql -u ... order by description"|sed -e 's/\t//g'|sed -e '1d' && echo 'commit;'} | sqlite3 parts.db
01:04  cthuluh: tharkun: see how I wrote the    echo 'commit;' ; } part
01:05  cthuluh: oh, nevermind, it should work ok (?)
01:05 * cthuluh cleans his glasses
01:05  cthuluh: it shouldn't work ok :P
01:07 * tharkun cleans his monitor
01:08  tharkun: cthuluh: bingo that was it. sorry i didn't realize the second semicolon
01:12 --- jaminja_ is now known as jaminja
01:22 --- Unknown[NF] is now known as Unknown[OFF]
01:38  neurodamage: how do I make it so that I can grep for two words together, is there a way to do that with grep?
01:40  cthuluh: !faq foo and bar > neurodamage
01:40  greybot: neurodamage: http://mywiki.wooledge.org/BashFAQ/079 -- How can I grep for lines containing foo AND bar, foo OR bar?  Or for files containing foo AND bar, possibly on separate lines?
01:46  neurodamage: cthuluh: thanks I've actually now got the BashFAQ on my todo read list :)
01:46  cthuluh: neurodamage: don't forget the bash guide also :)
01:47  neurodamage: the stuff in the topic? just confirming right ;), I always make sure and be polite and read the topic heh
01:47  neurodamage: cthuluh: but yeah I'll def be reading those things online for sure
01:51  notk0: hello, why does bash autocomplete *.c with all the files that match that in a current dir If I pass it as arguments to a program?
01:51  notk0: I have to use '*.c' instead
01:51  retrospectacus: because
01:51  UnholyTerror: greybot, egrep
01:51  cthuluh: exactly
01:52  notk0: hm
01:52  cthuluh: then quote it, as you said earlier
01:52  cthuluh: (on an other chan, for those who follow the discussion)
01:52  notk0: okay,  I never realized it is normal to do that
01:53  nDuff: !quotewhen > notk0
01:53  greybot: notk0: "Double quote" *EVERY* argument that contains whitespace or expansions ("$foo", "$(foo)", "`foo`"). 'Single Quotes' prevent expansions from happening at all. Also quote *, [, ], ? etc. if you don't want bash to expand them into filenames.
01:53  notk0: nDuff, I see thanks
--- Log closed Wed Dec 15 02:02:13 2010
--- Log opened Wed Dec 15 02:07:36 2010
02:07 --- Users 503 nicks [0 ops, 0 halfops, 0 voices, 503 normal]
02:08  JRummy16: specifically echo $line | awk '{print $1}
02:09 --- Channel #bash was synced in 98 seconds
02:09  JRummy16: *forgot '
02:09  nDuff: !faq 1 > JRummy16
02:09  greybot: JRummy16: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
02:10  cthuluh: there's also a better way to use awk on line 1
02:12  cthuluh: as in: awk '/codePath/ && !/\/system\// { sub() sub() sub(); $1=$1; print $1,$2,$3 }' /file
02:12  cthuluh: the sub() sub() sub() part is left as an exercise for the reader :)
02:13  JRummy16: thanks
02:13  nDuff: JRummy16, while read packageName codePath version _; do ...; done
02:13  nDuff: JRummy16, then no awk needed at all
02:13  JRummy16: perfect.
02:13  nDuff: JRummy16, (which you would know if you'd read FAQ 1)
02:13 * JRummy16 will read more
02:14  cthuluh: though there's still the need for awk on line 1
02:14  cthuluh: (but only on line 1)
02:21  nDuff: ahh, I missed line 1
02:21  nDuff: ewww!
02:21  nDuff: !xml > JRummy16
02:21  greybot: JRummy16: You can't realistically parse tag-based markup languages like HTML and XML using Bash or utilities such as grep, sed or cut. If you just want to dump/render HTML, see (links|links2|lynx|w3m) -dump, html2text, vilistextum. For parsing out pieces of data, see tidy+(xmlstarlet|xmlgawk|xpath|xml2), or learn xslt. Ask #xml and #html for more help. See http://www.codinghorror.com/blog/archives/001311.html
02:21  nDuff: JRummy16, ...please, please, PLEEEEEASE consider using XMLStarlet to extract the data with XPath. Whenever someone changes the formatting (but not the content) of the XML file you're reading, you'll be glad you did.
02:22  JRummy16: k
02:23  nDuff: JRummy16, ...have a sample input document available to pastebin by any chance?
02:24  JRummy16: here is the xml: http://pastebin.com/nuS4z7E6   it is for a phone so I don't have many tools
02:25  nDuff: JRummy16, ...oh, you're trying to run this on the phone?
02:26  JRummy16: yes
02:26 * nDuff was assuming this was code being run during the build process or such
02:26  nDuff: ...ya know, Java has really good XML APIs...
02:26  JRummy16: I know.. I probably will do it in java but was just for personal use and want something fast
02:27  nDuff: ...well, sounds like you might be in a case where the hackery with awk may be an adequate short-term solution
02:44 --- Martinp24 is now known as Martinp23
03:16  foocraft: hey all
03:17  foocraft: is there any permanent way to change the $PATH env variable without placing an ugly export $stuff:$PATH in my bashrc?
03:22  nDuff: foocraft, is using += to append less ugly?
03:22  nDuff: foocraft, ...I mean, the answer is "yes, lots of ways", but the question is really one about your personal taste in aesthetics, and I'm not a mindreader.
03:23  foocraft: no, I just don't want to pollute my bashrc file
03:23  foocraft: export $stuff:$PATH is beautiful :p
03:23  foocraft: just that I don't want my bashrc file to be filled with stuff like that
03:23  nDuff: you only need onesuch line
03:24  nDuff: no matter how many things you're appending or prepending
03:24  nDuff: so I'm not so sure about the "pollution" argument
03:24  sente: foocraft: /shouldn't your bashrc file be filled with things like that?
03:24  nDuff: and again, is PATH+=":/path/to/foo" prettier?
03:24  nDuff: foocraft, ...also, ya know, containing settings is what dotfiles are for.
03:24  sente: i've got a bunch of crap in mine as well as other files which are sourced
03:24  foocraft: I was just wondering if that's how people go about changing stuff in an environment variable or if they do something else
03:25  foocraft: nice, so I'm not sinning :)
03:25  sente: you could do it in your .bash_profile instead ;)
03:28  sente: exporting a new PATH in one's .bash_profile is common, while larger more elaborate things are often stuck in the .bashrc
03:36 --- zach is now known as Guest5495
03:48  flaccid: quotes
03:48  flaccid: !quotes
03:48  greybot: "USE MORE QUOTES!" They are vital. Also, learn the difference between ' and " and `. See <http://mywiki.wooledge.org/Quotes> and <http://wiki.bash-hackers.org/syntax/words>.
03:48  flaccid: somewhere here the other day helped me to create this rc_home=( "$(gem environment gemdir)/gems"/rest_connection* )
03:49  flaccid: i'm just trying to understand why the extra parenthesis around the assignment value
03:50  humpty: rc_home is an array
03:51  flaccid: any reason why i would put it into an array?
03:51  flaccid: i guess for multiple directories from the gem environment
03:53  flaccid: thanks y0
04:01  flaccid: is there a better way to do this kind of thing? config=$(echo ~/.rest_connection/rest_api_config.yaml)
04:01  flaccid: needs to expand ~
04:02  humpty: simply config=~/.rest...
04:02  flaccid: hmm let me try that again
04:03  flaccid: hmm weird. works, cheers!
04:14 --- drone4four_ is now known as Drone4four
04:33  silicong: I have a directory of 120000 images and I need to figure out the sizes and if the image is smaller then a certain size I need to move it to a different directory - imagemagick can do this right? Anyone know how to do this?
04:34  \malex\: silicong: does file work well enough?
04:35  silicong: it is a folder of 120000 files - we are trying to figure out which ones need to be replaced
04:35  \malex\: i guess file doesn't print size for all image types. imagemagick should have something, sure
04:35  \malex\: identify, probably
04:36  silicong: ok
04:37  tsolox: last week, i have a 'function ? { ... }' in my .bashrc which work. But today, i can no longer call the function...
04:38  \malex\: tsolox: that's because last week you didn't have a file in whatever directory you're in with a single character filename, and now you do
04:39  tsolox: shame on me.....nice find \malex\ ...
04:40  tsolox: is @ a safe funtion name?
04:40  \malex\: i would think so
04:40  tsolox: i want to use symbols for some of my cli weaponry..
04:40  \malex\: why?
04:41  tsolox: well. i use letters for most..but for the really cool ones, i chose symbols..
04:41  \malex\: "cli weaponory"?
04:42  tsolox: ? was suppose to query a dictionary...
04:42  \malex\: is dict realy that hard to type?
04:43 --- awb_ is now known as awb
04:45  silicong: I am a command line newbie - I want to determine the image size and if it is less then a certain size I want to move it to a specific directory - identify will give me the image size
04:48  \malex\: silicong: identify -format "%w %h %f\n" * | while read w h f; do if [ "$w" -lt somewidth -a "$h" -lt someheight ]; then poopout $f; fi; done
04:48  utu: what's a good perosnal project/script to write to get a feel of bash?
04:48  utu: personal*
04:49  \malex\: utu: what does utu need?
04:49  silicong: malex: that is awesome - is that really it... that is awesome!
04:49  \malex\: silicong: nope
04:50  utu: \malex\: I wrote few, very simple scripts, but I want to learn more about bash, I think I will pick O'reailly book or something
04:50  silicong: I see, ok - what do I need to change?
04:50  \malex\: utu: no. i mean what do you, utu, what do you need as far as a utility is concerned?
04:51  \malex\: utu: i needed an irc bot written in shellscript many years ago. that was my first step
04:51  \malex\: silicong: the parts that are wrong
04:53  utu: \malex\: Hmm I don't know, do you have any ideas? Something that would teach me bash very well, so if it comes time for me to use again I would know how to use it.
04:53  sente: utu: how about a script to post things on the web? 'bash post file.jpg' will upload it to a server, or blah blah
04:53  sente: i have many various of that
04:54  sente: s/various/variations/
04:54  \malex\: or how about a basic web browser written in shelslcript?
04:54  utu: sente: that sounds good, or something that maybe generates simple html sites when given some input
04:55  \malex\: parsing html in a script properly will make you very good :D
04:57  sente: i wrote some python and bash yesterday which cross referenced gawker's hacked database dumb with all my contacts/and various emails, (mutt,gmail,etc), and found a few matches
04:58  sente: i then tried tried the credentials for the websites and email, etc, and was glad they didn't work
04:58  sente: so i didn't end up writing any sketchy out of the blue emails to them telling them to change their shit
04:58  sente: :)
05:39  Bushmills: utu, when i wanted to improve my bash skills, i implemented a virtual machine based incremental compiler and interactive interpreter in bash
05:39  Bushmills: was two days of hard work to get it to the point that i was able to compile with it
05:42  Bushmills: it also gave me a good base to compare bash against other languages, both in terms of techniques used to implement, and the resulting (lack of) performance, as i tend to code the same thing in most languages i'm dabbling with.
05:42  jrmcm: What is the difference between an alias and a function? Other than the syntax for writing them.
05:43  Bushmills: to functions, arguments can be passed
05:43  \malex\: jrmcm: aliases only replace the beginning of a command
05:51  jrmcm: ah ok thx Ive been working more with the CL and that ? was kinda bugging me and i hadnt found any documentation about it
--- Log closed Wed Dec 15 06:02:27 2010
--- Log opened Wed Dec 15 06:07:52 2010
06:07 --- Users 490 nicks [0 ops, 0 halfops, 0 voices, 490 normal]
06:09 --- Channel #bash was synced in 98 seconds
06:43  doublehp: when i do liste=(a b c) ; for i in $(liste[@]) ... is there an env var that contains the actual index ?
06:59  prince_jammys: # liste=(a b); for i in ${!liste[@]}; do echo "Index: $i, item: ${liste[i]}"; done
06:59  evalbot: prince_jammys: Index: 0, item: a
06:59  evalbot: prince_jammys: Index: 1, item: b
06:59 * sente blinks
--- Log closed Wed Dec 15 11:04:11 2010
--- Log opened Wed Dec 15 11:09:32 2010
11:09 --- Users 504 nicks [0 ops, 0 halfops, 0 voices, 504 normal]
11:11 --- Channel #bash was synced in 99 seconds
11:11  chron_: how can i print everything besides the first N lines?
11:13  pgas: tail -n +$((N+1))
11:14  chron_: thx
11:22  champus: me again. any hint how to check if there is a substr "xx" more than one time in a string?
11:27  koala_man: champus: [[ foo = *xx*xx* ]]
11:31  champus: koala_man: hm, this checks whether xx is in there two times, am i right? or does this check whether the substring is in there for _more_ than one time?
11:33  koala_man: champus: two or more times
11:33  champus: nice, thanks again
11:33 --- ditha is now known as Ditha
11:47 --- DIFH-iceroot is now known as iceroot
12:01 --- Guest46610 is now known as Ammler
12:01 --- Ammler is now known as Guest46610
12:06  zajenc: :>
12:11  champus: -z in if clause checks whether variable is empty, right?
12:12  koala_man: no, but -z in a [ ] or [[ ]] does
12:13  champus: ah, yes, sure, i forgot to mentation that. so 'if [ -z $var ]; then' shoulda do it
12:13  mar77i: !if
12:13  mar77i: !why
12:13  champus: hm?
12:13  koala_man: champus: if [ -z "$var" ]
12:13  pgas: because: greybot (rfc1413@wooledge.org) has quit: Ping timeout: 255 seconds
12:14  mar77i: it's dead? greybot is... :'(
12:14  champus: uhm, yes...
12:17  cube: i've changed .bashrc through a script, how can i source .bashrc in the terminal that called the script, throuht that script ?
12:19  ferret: you can't change the environment of a parent (calling) process
12:19  stVKukus: you cannot 'souse' something
12:19  ferret: Grr, no bot...
12:20  ferret: cube: you would have to source the script you are talking about to make this work, since that would mean all the commands were being run in the same process
12:21  cube: ferret: thanks, will try that
12:22  cube: can i find if the script was run by sourcing ?
12:22  champus: bash negotiation is like 'if ! [ -z "$var" ]' right?
12:23  pgas: yes, or you could pass ! to the command [ , or use -n instead of -z
12:24  Fatal: or just if [ "$var" ]
12:25  champus: -n  - yes, sure, just took a small look on the test manpage, didn't realize that there's this param. cool :)
12:26  lhunath: -n is implied.  hence, Fatal's example working too.
12:42  champus: last question from me. koala-man postet this neat little sed execution expression, i have an little additional question: again, there is a string "(number)(-)(somechars)" like 313-fdwsf. In some part of my script,  have to double the (number)(-) part. So the example string should be "313-313-fdwsf". Regexing for the numberic part is easy, but how to add?
12:42  koala_man: sed -e 's/.*-/&&/'
--- Log closed Wed Dec 15 12:46:51 2010
--- Log opened Wed Dec 15 13:24:19 2010
13:24 --- Users 514 nicks [0 ops, 0 halfops, 0 voices, 514 normal]
13:25 --- Channel #bash was synced in 100 seconds
13:38  dowxp: how would i convert the first character of a string to upper case? (and vice versa)?
13:40  Bushmills: 4# var="foo"; echo ${var^}
13:40  shbot: Bushmills: Foo
13:41  Bushmills: 4# var="FOO"; echo "${var,}"
13:41  shbot: Bushmills: fOO
13:45  Tomasso: how do i make echo mystr >> file.txt to append as new line? i tried "\nmystr" but it actually prints the \n
13:46  pgas: echo adds a newline
13:46  pgas: you want another one?
13:46  pgas: ah one before?
13:46  pgas: printf  "%s\n" yourstr >> file.txt
13:46  pgas: sorry: printf  "\n%s" yourstr >> file.txt
13:47  mtk: echo -e "foo\n" works
13:47  Tomasso: yes or one after
13:47  pgas: or maybe '\n%s\n'  you get the idea
13:47  Tomasso: -e
13:47  Tomasso: let me check :D tthanx
13:50 --- Guest46610 is now known as Ammler
13:52  alez{xmb{bottz}}: sup
13:53  alez{xmb{bottz}}:    eralez
13:54  alez{xmb{bottz}}: 7
14:21 --- jzacsh is now known as jzacsh_
14:36 --- taylanub0 is now known as taylanub
14:48  CyberCr33p: hello
14:49  CyberCr33p: how can I remove a string from a array ?
14:49  greycat: unset 'array[i]'
14:51  CyberCr33p: if i is not known ?
14:51  CyberCr33p: I know only the string
14:51  greycat: Loop.
14:51  CyberCr33p: ok thanks
14:52  CyberCr33p: and how to find array size?
14:52  greycat: !faq 5
14:52  greybot: http://mywiki.wooledge.org/BashFAQ/005 -- How can I use array variables?
14:52  greycat: You want bash 3.0's index iteration.
14:52  greycat: "${!array[@]}"
14:57  mattymo: greycat, is your bot open source?
14:57  greycat: !greybot
14:57  greybot: I'm written in perl using POE::Component::IRC, and my source is at http://wooledge.org/~greg/greybot/
14:57  mattymo: cool
14:58  mattymo: I'm considering a bot that can link to knowledgebase articles
14:58  mattymo: and interpret bash is cool
14:59  pgas: interpret bash is koala_man's bot
14:59  pgas: !evalbot
14:59  mattymo: greycat, does it have flood-prevention?
14:59  greybot: evalbot runs each session in a new VM as root. Feel free to play with, or hack, the bot in #evalbot or look at it more closely on http://www.vidarholen.net/contents/evalbot/
14:59  greycat: It has whatever POE::Component::IRC does.
14:59  mattymo: thanks pgas
15:00  mattymo: what is <<<?
15:00  greycat: /msg greybot <<<
15:01  greycat: Or search for <<< in the man page.
15:02  mattymo: wow
15:02  mattymo: it hurts my brain this early... I think I overuse here documents
15:04  pgas: <<< is just syntactic sugar for a oneline heredoc
15:05  mattymo: one of my coworkers likes doing while read line; do commands; done < <(command that produces lots of lines)
15:06  mattymo: and it breaks when you run the command as sh -x
15:06  greycat: Good.
15:06  mattymo: any idea why?
15:06  greycat: Then don't run it like that!
15:06  greycat: !sh
15:06  greybot: sh is the POSIX or Bourne shell, not bash. Even if sh is a symlink to bash, running a script under 'sh' (either by typing 'sh myscript' or putting '#!/bin/sh' at the top) *disables* many bash features. See http://mywiki.wooledge.org/BashGuide/Practices#Choose_Your_Shell
15:06  greycat: Run it with "bash -x" instead, since it's a BASH script.
15:06  mattymo: you are a god
15:36  dudz_: has someone used rsync to copy from a file that has full paths to folders i want to copy ?
15:36  dudz_: i dont want to specify a path where i want to copy from, i just want rsync to use the log file that contains the paths
15:37  greycat: #rsync
15:37  dudz_: thanks
15:54  doublehp: it happens in some scripts, or even in CLI, when i do << cmd | grep >> or << cmd || /bin/true >> (even with spaces around the pipe), my debian says sometimes "grep command not found" or "true command not found". Any clue ?
15:55  nDuff: doublehp, (1) check that your PATH isn't being unset somehow; (2) can you reproduce this with set -x enabled?
15:55  doublehp: nDuff: my path is good; i think it has to do with locales, or keyboard layout
15:56  greycat: Most likely you have some non-ASCII garbage attached to the command name.
15:56  nDuff: which set -x will show
15:56  doublehp: some thing related with the fact, some computers show a compact pipe, and sopmetime the pipe is broken
15:56  nDuff: which is why I suggested it :)
15:56  greycat: fucking up $PATH wouldn't cause "true" not to be found, since that's a builtin
15:56  nDuff: *nod*
15:56  doublehp: greycat: yeah, how to fix this ?
15:56  greycat: Stop fucking up your keyboard configuration?
15:57  greycat: Identify the ACTUAL FUCKING PROBLEM first and foremost?
15:58  doublehp: greycat: locales ? UTF8 ? which way should i dig ?
15:58  greycat: If you're talking about the appearance of the | character as either a single straight line, or as two lines with a gap between them, that's just a FONT choice.
15:59  doublehp: ok
15:59  greycat: doublehp: WERE YOU OR WERE YOU NOT TOLD TO USE SET -X?
15:59  greycat: Did you DO THAT yet?
15:59  doublehp: not yet; i list things to try, for next time it bugs
15:59  doublehp: i put this on my list
16:01  doublehp: i hold one:
16:02  doublehp: << echo plio || grep plo >> => << +echo plio \n plio >>
16:02  doublehp: i was expecting either nothing, or a grep not found
16:03  greycat: You used || instead of |.
16:03  doublehp: this time, bash just ignores the latter part
16:03  doublehp: GRA
16:03  SuitCase: i have a kind of simple but kind of difficult problem copying a bunch of files into a single directory. i hope someone could help.
16:03  SuitCase: i have /dir1/, /dir2/, /dir3/, each contains 4-8 files called 1.psd, 2.psd, 3.psd, etc. i want to copy them all into /targetdir/, but they should be renamed in order, so instead of overwriting anything, it keeps iterating the number, and i end up with psds going up to 18.psd or whatever. that's what i want to do
16:06  greycat: SuitCase: easy enough if the target dir is empty to begin with.  Use a counter variable.
16:08  SuitCase: hmm. and you can get that to somehow interact with cp, so that as it goes through the files, it goes through in ascending order and renames them all appropriately?
16:08  greycat: LOOP!
16:08  Riviera: SuitCase: n=1; for file in dir*/*.psd; do cp -- "$file" "targetdir/$((n++)).psd"; done
16:08  greycat: You copy one file at a time.  Increment the counter.
16:08  SuitCase: oh, huh.
16:10  Riviera: greycat: Sorry.
16:10  greycat: I'm sure it would have come to that anyway.
16:10  mattymo: whoa increment at the same time
16:10  mattymo: that's too resourceful
16:13  doublehp: does exit 0 kill all background subprocess  ?
16:13  pgas: in a script? no
16:14  greycat: !pm > doublehp
16:14  greybot: doublehp: http://mywiki.wooledge.org/ProcessManagement
16:15  doublehp: i do in a script "su -c startx user" ; if i enclose this in { ... } & , startx fails, if i just use { ... } it works
16:15  doublehp: i don't understand
16:15  doublehp: it works on Gentoo, it fails on debian
16:15  greycat: !exact
16:15  greybot: Please tell us EXACTLY what you typed, and EXACTLY what the error is.
16:16  Bushmills: and what the first line of that script is
16:16  nDuff: ..."fails" is awfully vague.
16:16  nDuff: oh, good point re: shebang
16:18  pgas: su might insist on running in a terminal
16:20  SuitCase: Riviera, greycat: this seems to work really well. thank you so much.
16:20  doublehp: script : http://pastebin.com/QcuGXx5H
16:21  greycat: You're attempting to run startx WITHOUT being on a console.
16:21  doublehp: greycat: this works on gentoo
16:21  greycat: There is a config file in Debian that sets up who can or cannot run startx.
16:22  greycat: Did you even READ THE FUCKING ERROR MESSAGE?
16:22  greycat: You sure didn't PASTE it.
16:22  lazyliberal:  /msg NickServ identify donahue3
16:22  doublehp: error message: http://pastebin.com/2iSn8prx
16:22  lazyliberal: fuck
16:22  greycat: Time to change your password.
16:22  lazyliberal: yep
16:22  greycat: doublehp: /etc/X11/Xwrapper.config
16:22  greycat: !nabq
16:22  greybot: Not A Bash Question. Ask the channel that supports your software, hardware, or OS.
16:23  doublehp: greycat: will you give me 2 mn to paste logs ? thanks.
16:23  greycat: 10:15  greycat> !exact
16:23  greycat: 10:20  doublehp> script : http://pastebin.com/QcuGXx5H
16:23  greycat: That was 5 minutes already.  And I've already identified the problem for you.
16:23  doublehp: thanks; i am slow to read sometimes
16:37  doublehp: greycat: worked, thanks
16:37  SuitCase: oh. um. turns out the script copied the images out of order.
16:38  SuitCase: does bash not process things in terms of proper numeric order? like, it seems to have done 1,10,2,20,3,30, etc. i don't know what the real way to describe that is.
16:38  greycat: 10:08  Riviera> SuitCase: n=1; for file in dir*/*.psd; do cp -- "$file" "targetdir/$((n++)).psd"; done
16:38  greycat: It uses string ordering, not numeric.
16:39  SuitCase: is there a magic way to fix that? should i just attach prefixes to my directories?
16:39  greycat: Use 0001 for the filenames.
16:39  SuitCase: will string ordering work like "001", "002", "010", "010.1", "011"?
16:40  nDuff: yes.
16:40  SuitCase: because i have 9.1 in some cases
16:40  SuitCase: alright, cool. i'll try running it again
16:41  nDuff: # touch 001 002 010 010.1 011; LC_COLLATE=C; echo *
16:41  evalbot: nDuff: 001 002 010 010.1 011
16:41  nDuff: SuitCase, ^^^
16:41  SuitCase: nDuff: oh, that's a clever thing. cool.
16:42  SuitCase: oh, er. one other thing. is there any possible way i can get it to copy "/somewhere/separator.psd" and add it on inbetween every directory? i had a look but it seems like it'd make the script far more complex.
16:42  SuitCase: my real directory structure is like: for file in */600dpi-Photoshopped/*.psd;
16:42  greycat: Use two loops.
16:43  SuitCase: so in total, there's about 50 dirs called 600dpi-Photoshopped, and i'd want it to put a separator between them.
16:43  greycat: for dir in */; do for file in "$dir"/*; do ...
16:43  SuitCase: oh. haha, i keep missing obvious solutions. i am not good at thinking programatically.
16:43  SuitCase: let me try that. thanks.
16:55  SuitCase: greycat: http://pastebin.ca/2020420 er. shouldn't this work? after the for file loop runs on the contents of a dir, it copies the separator.psd in? but in practice it doesn't.
16:56  greycat: You didn't write the inner loop as I said to.
16:56  greycat: There's absolutely NO point in using nested loops here if the inner loop completely ignores the dir variable.
16:58  SuitCase: greycat: that was my attempt to adapt what you had suggested. clearly i got it wrong
17:01  SuitCase: oh, wait, you were suggesting your loop was within the one i already had..? *is playing with it*
17:01  greycat: No.
17:02 --- pixie__ is now known as dcyber_
17:03  Vide: is there a way to assign an array to another (in bash)?
17:03  greycat: You mean copy?  Yes.
17:04  greycat: argv=("$@")
17:04  Vide: greycat: yes, copying
17:04  i0nic: can i call a bash script from a bash script?
17:04  greycat: yes
17:04  i0nic: if so whats the syntac?
17:04  greycat: Same as calling any other program.
17:04  Vide: greycat: thanks, works as expected :)
17:05  Vide: back to scripting now !
17:13  f0ster: hey greycat
17:13  f0ster: what was that bash pitfalls link you had sent out ?
17:16  SuitCase: greycat: i worked out what you meant originally. you made me work for it but hey i understand loops a bit better now. thanks!
17:17  nDuff: !pf > f0ster
17:17  greybot: nDuff: No matches found at http://mywiki.wooledge.org/BashPitfalls
17:18  f0ster: ty nDuff
--- Log closed Fri Dec 17 18:23:32 2010
