--- Log opened Sun Dec 05 00:00:32 2010
00:24 --- abstract3d is now known as tzorvas
00:55 --- em is now known as emma
00:57  pixie__: http://pastebin.ca/2010781   how can i fix this to get it not to do this. it telling me this if i try to remove or update.
00:58 --- Unknown[NF] is now known as Unknown[OFF]
00:58  Riviera: pixie__: that only is an error message; also it is an error message from an application that is not bash.
00:58  Fatal: pixie__: #debian or #ubuntu
00:58  pixie__: k thanks
00:59  Fatal: (and a paste link for two lines? :/)
00:59  pixie__: it told me if i did that it would flood so meh
01:00  Riviera: hehe "flood"
01:00  Riviera: channel operators' aquaphobic vocabulary :)
01:03 --- Unknown[OFF] is now known as Unknown[NF]
01:08  jsz`: pixie__, your ubuntu software center might be launched.
01:12 --- emma is now known as em
01:16  pixie__: >.> blah... lol leave this noob alone!
01:21  netsan: hey guys, lets say i want to create a bash script to run a command inside a screen and then exit from it and say is screen number, theres any way to do it?
01:22  Riviera: netsan: I don't know. Maybe #screen does.
01:23  netsan: thanks
01:23  netsan: will try there.
01:27  ritztech: even if i try this this isnt working echo "${var1//$'\n'}""${var2//$'\n'}" is there something im grabbing wrong
01:27  ritztech: im grabbing the last 2 letters of
01:27  ritztech: Read: Address 0x00000037, Data: 0x000000f9
01:28  ritztech: Read: Address 0x00000037, Data: 0x0000000f
01:28  ritztech: and my thing should read f90f
01:28  ritztech: rfhlvl=$(echo "$outfbr" | grep "Read" | awk '{print $5}' | awk ' {print substr($0,9)}' )
01:30  Riviera: # printf %s\\n 'Read: Address 0x00000037, Data: 0x000000f9' 'Read: Address 0x00000037, Data: 0x0000000f' | awk '$1 == "Read:" { printf '%s', substr($0, length - 2) }'
01:30  evalbot: Riviera: awk: $1 == "Read:" { printf %s, substr($0, length - 2) }
01:30  evalbot: Riviera: awk:                        ^ syntax error
01:30  geirha: You couldn't put two and two together and at least do substr($5,9)?
01:30  Riviera: # printf %s\\n 'Read: Address 0x00000037, Data: 0x000000f9' 'Read: Address 0x00000037, Data: 0x0000000f' | awk '$1 == "Read:" { printf "%s", substr($0, length - 2) }'
01:30  evalbot: Riviera: 0f900f
01:30  Riviera: :-(
01:30  Riviera: # printf %s\\n 'Read: Address 0x00000037, Data: 0x000000f9' 'Read: Address 0x00000037, Data: 0x0000000f' | awk '$1 == "Read:" { printf '%s', substr($0, length - 1) }'
01:30  evalbot: Riviera: awk: $1 == "Read:" { printf %s, substr($0, length - 1) }
01:30  evalbot: Riviera: awk:                        ^ syntax error
01:30  Riviera: Okay, I better shut up.
01:31 --- Unknown[NF] is now known as Unknown[OFF]
--- Log closed Sun Dec 05 12:03:07 2010
--- Log opened Sun Dec 05 12:03:16 2010
12:03 --- Users 515 nicks [0 ops, 0 halfops, 0 voices, 515 normal]
12:04 --- Unknown[OFF] is now known as Unknown[NF]
12:05 --- Channel #bash was synced in 126 seconds
12:14 --- Unknown[NF] is now known as Unknown[OFF]
12:19  DeaD_SouL: hi, conky_status=`ps aux | grep -v grep | grep conky`, how can I check if $conky_status is not empty ?
12:20  trash: Ewwww.
12:20  trash: !pm > DeaD_SouL
12:20  greybot: DeaD_SouL: http://mywiki.wooledge.org/ProcessManagement
12:23  DeaD_SouL: Thanks,
12:25  DeaD_SouL: btw, this is my first bash script I've ever wrote,.. http://paste-it.net/public/l8dfb3a/ so, can you please check it and give me some comments, whether its good or not? what did I miss?..etc :)
12:30  DeaD_SouL: anyone ?
12:35  erUSUL: !`
12:35  greybot: The backquote (`) is used in the old-style command substitution, e.g. foo=`command`. This syntax is deprecated in favor of foo=$(command). Backslash handling inside $() is less surprising, and $() is easier to nest. See http://mywiki.wooledge.org/BashFAQ/082
12:35  erUSUL: !quotewhen
12:35  greybot: "Double quote" *EVERY* argument that contains whitespace or expansions ("$foo", "$(foo)", "`foo`"). 'Single Quotes' prevent expansions from happening at all. Also quote *, [, ], ? etc. if you don't want bash to expand them into filenames.
12:35  erUSUL: ![
12:35  greybot: [ is NOT part of the `if' syntax. It's a normal, ordinary COMMAND. The `if' just checks its exit status. See `help test', http://mywiki.wooledge.org/BashGuide/TestsAndConditionals , and http://partmaps.org/era/unix/award-example-backticks.html
12:35  erUSUL: ![[
12:35  greybot: [[ is a bash keyword similar to (but more powerful than) the [ command. See <http://mywiki.wooledge.org/BashFAQ/031> and <http://mywiki.wooledge.org/BashGuide/TestsAndConditionals>. Unless you're writing for POSIX sh, we recommend [[.
12:36  DeaD_SouL: thanks a lot
12:54  vbCrLf: Hello. How can I print the character of decimal value X? Like echo -e "\x10" but for decimal (not hex)
12:55  taylanub: there's pretty much no data types in the shell
12:56  xy: whats the difference between $(()) and $[]??
12:56  taylanub: !$[
12:56  greybot: Obsolete, deprecated syntax for math. Don't use it. Use $((...)) instead.
12:56  taylanub: i just learnt what it is
12:56  xy: it does the same, but $[] is older?
12:58  taylanub: i have no idea what $[] does, but i know that $(()) is also POSIX
12:58  taylanub: there seems to be no $[ in man bash
12:58  taylanub: i'd listen to greybot and forget about it already
13:05  DeaD_SouL: back, can you please check this now: http://pastebin.com/axeWqrfw
13:05  DeaD_SouL: :)
13:06  taylanub: !ps
13:06  greybot: Don't use ps(1) in scripts -- see http://mywiki.wooledge.org/ProcessManagement instead.
13:06  taylanub: !quotes
13:06  greybot: "USE MORE QUOTES!" They are vital. Also, learn the difference between ' and " and `. See <http://mywiki.wooledge.org/Quotes> and <http://wiki.bash-hackers.org/syntax/words>.
13:07  taylanub: it's #!/bin/bash, yes?  [[ is recommended over [
13:08  DeaD_SouL: yes
13:08  DeaD_SouL: ok
13:08  DeaD_SouL: I'm on it :)
13:10  taylanub: you can use  -z $var  instead of  $var == ""
13:12 --- taylanub0 is now known as taylanub
13:13  soapcontainer: In a bash SHH prompt, what command can I use to list the full path to my current location?
13:14  DeaD_SouL: soapcontainer, pwd
13:14  DeaD_SouL: taylanub, can you show me an example, i'm still newbie ^^
13:14  soapcontainer: thank you Dead_Soul.
13:14  DeaD_SouL: soapcontainer, welcome
13:16  taylanub: DeaD_SouL: [[ -z $variable ]]  is the same as  [[ $variable == '' ]]
13:16  soapcontainer: i ran this command: vi lenny.startup.txt and it's a bunch of bs, how do i quit the txt file without saving in "vi" editor
13:16  taylanub: and  [[ $variable ]] is the same as [[ -n $variable ]] which is the same as [[ $variable != '' ]]
13:17  taylanub: soapcontainer: :q!
13:17  soapcontainer: thanks that was easy
13:17  DeaD_SouL: soapcontainer, save & exit the file :wq , exit without saving :q!
13:18  DeaD_SouL: taylanub, thanks, so it means if the variable was empty
13:18  taylanub: ''man vi'' also, or google for a nice cheatsheet, etc.
13:19  taylanub: DeaD_SouL: -n is for "is not empty", -z is for "is empty".  -n applies on default
13:19  taylanub: ''man 1p test'' is nice, if you have it
13:20  DeaD_SouL: taylanub, I got it, thanks
13:20  soapcontainer: how can i put a desktop environment on my ubuntu server
13:21  taylanub: now that's definitely entirely related to bash
13:21  taylanub: /sarcasm :P
13:22  DeaD_SouL: soapcontainer, google it: http://www.google.com/search?sclient=psy&hl=en&safe=off&site=webhp&source=hp&=&q=%22ubuntu%22%20%22server%22%20%22install%22%20%22gui%22&aq=f&aqi=&aql=&oq=&gs_rfai=&pbx=1
13:23  peterrooney: soapcontainer: join #debian, they'll tell you how
13:23  taylanub: DeaD_SouL: maybe the link you meant was "http://www.google.com/" ?
13:23  soapcontainer: Sorry, by the way I still haven't gotten an answer on how to get selection to work in the sudo tasksel menu. when i hit enter on  a highlighted section, it doesn't select it
13:23 * peterrooney wonders how long he has left to live....
13:24  DeaD_SouL: taylanub, ^^
13:24  rot13: when i save the output of ls into a variable the \n get removed. how can i preserve these?
13:25  taylanub: !ls
13:25  greybot: ls shows you a representation of files. They are NOT file names (for simple names, they mostly happen to be equivalent). Do NOT try to parse it. http://mywiki.wooledge.org/ParsingLs
13:25  peterrooney: soapcontainer: try the space bar
13:26  syskk: whats the difference between `ls` and $(ls) ?
13:26  trash: !`> syskk
13:26  trash: !` > syskk
13:26  greybot: syskk: The backquote (`) is used in the old-style command substitution, e.g. foo=`command`. This syntax is deprecated in favor of foo=$(command). Backslash handling inside $() is less surprising, and $() is easier to nest. See http://mywiki.wooledge.org/BashFAQ/082
13:26  soapcontainer: thanks for all the help i know it was noob as hell
13:27  syskk: thanks
13:27  trash: rot13: You don't want to use ls at all.
13:28  peterrooney: so why are there no tutorials for USING ncurses?
13:28  taylanub: ncurses is a library for programmers
13:29  rot13: trash: ok. i tried to just select the last 10 files ordered by the date.
13:34  DeaD_SouL: taylanub, when you said quotes, which line did you mean?
13:35  taylanub: i saw a bunch of 'echo $foo's where the $foo seemed to possibly include inappropriate characters
--- Log closed Sun Dec 05 13:39:40 2010
--- Log opened Sun Dec 05 13:39:51 2010
13:39 --- Users 523 nicks [0 ops, 0 halfops, 0 voices, 523 normal]
13:41 --- Channel #bash was synced in 129 seconds
13:42  geirha: Don't do  command; if [[ $? -eq 0 ]]; then    just do  if command; then
13:44  geirha: And killing all processes with conky in their name ... as root ... sounds like a bad idea.
13:44  DeaD_SouL: taylanub, sorry I forgot about the pm :p
13:45  DeaD_SouL: geirha, because if user ran the conky as root, then he won't be able to kill it unless with sudo
13:46  geirha: DeaD_SouL: But you also kill it for all other users
13:46  geirha: !pm > DeaD_SouL
13:46  greybot: DeaD_SouL: http://mywiki.wooledge.org/ProcessManagement
13:46  cthuluh: just don't run conky as root...
13:49  DeaD_SouL: geirha, I'm afraid I neet the root permission in order to let conky reads /dev/sda temperature
13:50  DeaD_SouL: geirha, so you suggest that I should use pkill instead of killall ?
13:50  DeaD_SouL: need *
13:53  DeaD_SouL: geirha, if I used (if command; then) instead of (if [[ "command" ]]; then) I get this error: (line 15: 1: command not found)
13:55  taylanub: ... it must really be a command you know
13:55  taylanub: [[ foo ]] is a command itself. '[[' is a command, to be correct
13:57  DeaD_SouL: then I will leave it as it is with '[[' ... ']]'
13:57  twkm: DeaD_SouL: why do you use `` or $()?
13:57  taylanub: zenity foobar; if [[ $? -eq 0 ]]; then    =    if zenity foobar; then
13:57  taylanub: DeaD_SouL: ^^^ this is what was meant
13:58  tmr: '[[' is a shell keyword, to be pedantic.
13:58  taylanub: userpass=$(zenity foobar); echo "$userpass" | qux    =    zenity foobar | qux
13:58  taylanub: DeaD_SouL: ^^^ and this is what twkm means i think
14:00  DeaD_SouL: hmmm, I guess there are much that I need to read about :p
14:00  DeaD_SouL: aw, thanks all
14:06  Eiler: http://paste.pocoo.org/show/300813/ i get unexpected end of file here, it is in .bashrc
14:08  Eiler: how come?
14:12  taylanub: you needn't pastebin for a single or few lines
14:13  taylanub: { } expects ';' before }
14:13  taylanub: Eiler: ^^^
14:13  Eiler: i do need it since i dont have a webbrowser nor irc nor copy and paste in my virtual linux box
14:13  Eiler: otherwise i have to type it manually
14:14  taylanub: well that's a sucky system :P
14:14  Eiler: well its not done yet
14:15  Eiler: ok nice now it seems to work
14:15  taylanub: btw the actual rule is not " ';' before '}' " but something weirder i have no idea about. to give you an idea, " { if foo; then bar; fi } " works
14:15  Eiler: also putting {} on a new line seemed to solve it
14:16  Eiler: how can i get my current PS1?
14:16  taylanub: echo "$PS1"
14:17  taylanub: note that some non-bash echo parse \n etc. on default.  printf '%s\n' "$variable" is the portable way to go
14:20  geirha: printf '%q\n' "$PS1"   might be more useful
14:28  qubodup: hello
14:32  twkm: moo.
14:38  DeaD_SouL: this doesn't work (echo "first line \n second line" > test.txt) I mean it doesn't create new lines
14:38  DeaD_SouL: why?
14:38  geirha: help echo
14:39  geirha: Or just use printf instead
14:39  geirha: # printf '%s\n' "line 1" "line 2"
14:39  evalbot: geirha: line 1
14:39  evalbot: geirha: line 2
14:40  DeaD_SouL: ok thanks, about the pm, do you think that i should store the pid instead of using ps ax?
14:40  trash: DeaD_SouL: I told you not to use ps like 5 hours ago.
14:40  trash: !pm > DeaD_SouL
14:40  greybot: DeaD_SouL: http://mywiki.wooledge.org/ProcessManagement
14:42  DeaD_SouL: trash, I know, thats why I'm asking..
14:43  DeaD_SouL: should i store the pid in a file, then use it?
14:43  DeaD_SouL: because the script i wrote will exit once it started the conky
14:44  DeaD_SouL: so how can i get the pid if I didn't put it in some file?
14:45  taylanub: process management is also OS dependant
14:45  geirha: I don't understand the point of the script. Why don't you just run it? as your regular user.
14:46  geirha: Figure out how to give your user the necessary priviledges to read those temperature.
--- Log closed Sun Dec 05 15:35:24 2010
--- Log opened Sun Dec 05 17:19:28 2010
17:19 --- Users 544 nicks [0 ops, 0 halfops, 0 voices, 544 normal]
17:20  FernandoBasso: I am getting this error:
17:20  zayka: erUSUL, wrong iname =) all is ok
17:20  zayka: bash rules
17:20  FernandoBasso: my_server.bash: line 36: syntax error near unexpected token `elif'
17:20  FernandoBasso: my_server.bash: line 36: `elif [ $user_answer == 'Stop' ]; then'
17:21  FernandoBasso: http://pastebin.com/1erd8uiq Any help would be appreciated.
17:21 --- Channel #bash was synced in 126 seconds
17:23  erUSUL: FernandoBasso: line 19. a fi is missing afaics
17:24  FernandoBasso: erUSUL: Solved. Thanks. Now, how come it complain about line 36 if the problem is on line 19? (I'm not an experienced programmer.)
17:25  erUSUL: FernandoBasso: well bash thinks that elif corresponds to the if opened in line 14 ...
17:26  FernandoBasso: Ah. Okay. Thanks very much.
17:26  FernandoBasso: I was banging my head against a brick wall trying to figure out what was wrong with line 36. :|
17:28  erUSUL: FernandoBasso: :)
17:28  FernandoBasso: :)
18:16 --- Gallo is now known as Gallomimia
18:51 --- meiskam_ is now known as meiskam
18:51  callumacrae: How do I check someones username is something in bash?
18:52  callumacrae: eg if [ whoami -ne "callumacrae" ] ..
18:53  yitz_: [[ $USER = "blah" ]]
18:53  callumacrae: thanks
18:54  trash: Why would you want that?
18:54  callumacrae: I've got an app that runs itself whenever it's plugged in, I want to check it's the right computer before I throw files about
18:55  callumacrae: noob question, how do I echo new lines?
18:55  trash: printf, echo.
18:56  callumacrae: echo '<literalnewline>' ?!
18:56  callumacrae: oh can I use \n?
18:57  callumacrae: i ndouble quotes
19:00  Riviera: callumacrae: try this command line:
19:00  Riviera: callumacrae: echo
19:01  poisonbit: printf 'a\nb\n'    or   echo -e 'a\nb'
19:01  callumacrae: thanks! :)
19:04  poisonbit: perl -E 'print "\n" x 1000'
19:16  poisonbit: is there something for printf like leading zeros for %d, but leading "char" for %s  ?
19:24  nDuff: poisonbit, if you read man 3 printf, it makes it clear that the field width specifier is not specific to numeric types.
19:24  nDuff: # printf '<%9s>\n' foo
19:24  evalbot: nDuff: <      foo>
19:25  nDuff: poisonbit, ...now, if you want arbitrary characters, that's a bit different.
19:25  poisonbit: i know i can align rigth, but i say more something like "repeating n times a char"
19:26  gnubien: poisonbit:  printf abc%s\\n 1 2 3 4
19:27  poisonbit: like   printf '%0.8d\n' "1"  but for chars, currently I simply want to join two list items with .   item1_list1............item1_list2   and stay aligned
19:28  nDuff: do you need to support whitespace? That is, could you just use %20s or the like and then use PE to convert all spaces to dots?
19:28  poisonbit: I can read the item with bigger length in list1, and start list2 at that lenght + 1, and...
19:28  nDuff: if printf itself supported what you wanted, what I gave you would be in the C man page, and it's not
19:28  poisonbit: nDuff, that sounds like a great idea
19:29  poisonbit: print spaces and replace, I think i will go that way
19:43  pinkisntwell: very newbie question: why when i do "cd ./dir" i can go to directory "dir", but when i do "echo ." the current directory is not printed?
19:46  geirha: echo "$PWD"
19:47  geirha: echo has no knowledge of the filesystem. It prints whatever string you tell it to.
19:48  pinkisntwell: i thought . and .. were expanded by the shell before being passed to the program
19:49  nDuff: pinkisntwell, no; ~ is, but not paths are not made absolute.
19:49  geirha: No, "." and ".." are directories, just as "dir" in your example.
19:49  erUSUL: pinkisntwell: . .. are proper paths maintained by the kernel
19:50  pinkisntwell: so when i do "cd .", what's passed to cd is just a dot?
19:50  nDuff: correct
19:50  nDuff: and a dot is a valid thing to pass to the chdir() syscall
19:50  nDuff: so that's fine
19:51  pinkisntwell: thanks for that guys, i didn't know that at all
19:59  galaxywatcher: I want to pass the contents of a file to a bash command. e.g. I have 10 urls in  a text file and I want to run traceroute on them all sequentially. What is the syntax? I have tried: traceroute <(cat urlfile.txt) - but that doesn't work..Any suggestions?
20:00  yitz_: !faq 1 > galaxywatcher
20:00  greybot: galaxywatcher: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
20:01  galaxywatcher: thx yitz_
20:04  AlexC_: morning
20:05  AlexC_: what are some of the best ways to get a filename of a file whos contents contains a string, from a given directory? Currently I am using a combination of grep, head and cut - which seems messy
20:06  falconindy: AlexC_: man grep. it'll print filenames alone for you
20:07  nDuff: !faq 1 > AlexC_ (in combination with grep -l)
20:07  greybot: AlexC_ (in combination with grep -l): http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
20:08  sorabji: clear
20:11  AlexC_: nDuff: falconindy a ha, '-l' does it - though I'll still require `head` as I only want 1 filename (the first match). Anyway to do this without? I'm a little confused by the FAQ link though
20:11  nDuff: AlexC_, no need for head, just only read the first line
20:11  falconindy: -m flag seems appropriate
20:12  AlexC_: falconindy: unfortunately that only limits the match within a file, not the total amount of numbers
20:12  AlexC_: nDuff: what are the advantages of this vs head?
20:12  nDuff: AlexC_, head requires an extra fork and exec
20:12  nDuff: AlexC_, ...ie. actually creating a new process. Much more heavyweight by comparison.
20:15  AlexC_: nDuff: fair enough, ok I have it mostly working, though how do I only read the first line? Simply break out of the while ?
20:16  nDuff: # { echo foo > bar; }; { echo foo > baz; }; read filename < <(grep -l foo *); printf '<%s>\n' "$filename
20:16  evalbot: nDuff: Missing terminating quote, bracket or keyword
20:16  nDuff: AlexC_, no while needed.
20:16  nDuff: # { echo foo > bar; }; { echo foo > baz; }; read filename < <(grep -l foo *); printf '<%s>\n' "$filename"
20:16  evalbot: nDuff: <bar>
20:16  nDuff: AlexC_, ...after all, you aren't iterating if you only want one :)
20:17  AlexC_: true :) thanks, I'll give this a try. Just for future reference, I should always use this method instead of head to get the first?
20:17  nDuff: well, "always" is a little strong. If there are cases where you need to do something in a pipeline, then you need to do that something in a pipeline
20:18  AlexC_: but if I don't, then go for this?
20:19  nDuff: ...if you're writing code that doesn't try for POSIX sh compatibility, then yes.
20:19  AlexC_: one question, what is <( syntax?
20:19  nDuff: !<( > AlexC_
20:19  greybot: AlexC_: Process Substitution -- <(cmd) and >(cmd) -- see http://mywiki.wooledge.org/ProcessSubstitution , or http://mywiki.wooledge.org/BashFAQ/024 for a common use
20:19  galaxywatcher: Based on faq 1, I put this small script together which finds the first mx record for a file of urls: while read -r line ; do dig mx "$line"; done < urlfile.txt |awk '/^[a-z].*MX/ { if (a[$1]++ == 0) print $0; }' # one detail I would like to add is that it appends (or prepends) the original url from the text file. Maybe I have to read the line into a variable and then print it?
20:21  AlexC_: nDuff: awesome, thanks :)
20:23  nDuff: galaxywatcher, ...personally, I'd configure dig to not print anything but the content you want, and thereby take out the need for awk in that.
20:24  galaxywatcher: nDuff: hmm..I am not aware that it is possible to print just the first mx record from dig.
20:24  Wordpad: What is a faster way to send a file than ftp ?
20:24 --- Wordpad is now known as Guest61771
20:25  poisonbit: http
20:25  Guest61771: Yeah paired with a downloader which supports multiple connections would probably be good. let me try
20:26  nDuff: # while read -u 4 -r line ; do read digline < <(dig +noall +answer mx "$line"); echo "$line" "$digline"; done 4<<<$'gmail.com\nmsn.com'
20:26  evalbot: nDuff: bash: dig: command not found
20:26  evalbot: nDuff: gmail.com
20:26  evalbot: nDuff: etc... ( http://pastebin.com/R9Cvk9km )
20:26  nDuff: galaxywatcher, ^^^ (except for evalbot not having dig)
20:26  AlexC_: nDuff: just to take this further, within this single matched file that I have now I currently use 'awk' to get another line out of it. Is it possible to combine all of this into 1, or would that be less effecient?
20:28  nDuff: AlexC_, ...depends on the details, I expect (among those details, how many files you're scanning, how large they are, and how the line you're grepping for relates to the line you're extracting)
20:29 --- Unknown[OFF] is now known as Unknown[NF]
20:29  nDuff: galaxywatcher, ...just as an aside, by the way, if this isn't for a one-off, you really should consider being sure your software still works when the mailer pointed by the first MX record is unavailable.
20:30  nDuff: ...it's not really unheard of at all for a primary mailer to be intentionally down for maintenance while others are up in its place.
20:30  AlexC_: nDuff: http://paste2.org/p/1126594 - number of files max would probably be 200 roughly. Example file: http://paste2.org/p/1126595
20:32  nDuff: AlexC_, is optUser coming from a trusted source? What happens if a user tries to create a name which includes regex-sensitive characters? Remember that even a period is special in a regex.
20:33  AlexC_: nDuff: that's true, mostly trusted yes but it it user provided
20:33  nDuff: AlexC_, ...if I were going to use grep to work with usernames, I'd use -F and -x
20:34  nDuff: (and scrutinize the surrounding code very, very carefully)
20:34  AlexC_: ahh, interesting. Thanks - this will work much better
--- Log closed Sun Dec 05 20:39:27 2010
--- Log opened Sun Dec 05 20:39:52 2010
20:39 --- Users 547 nicks [0 ops, 0 halfops, 0 voices, 547 normal]
--- Log closed Sun Dec 05 20:43:48 2010
--- Log opened Sun Dec 05 21:00:00 2010
21:00 --- Users 549 nicks [0 ops, 0 halfops, 0 voices, 549 normal]
21:00  bulletxt: hi, how can I send an email from a bash script? if possible, it would be great if I can specify useraccount with pwd and smtp, thanks
21:01 --- Channel #bash was synced in 126 seconds
21:02  geirha: nail, mutt, mailx ... ask your OS channel for other alternatives
21:05  jsz`: it's better using  <<< $(command)  or  < <(command)  ?
21:06  jsz`: I have read that  < <(command)  is not portable, so...
21:07  nDuff: jsz`, what shebang line are you using?
21:08  nDuff: jsz`, if you're using #!/bin/bash, or for that matter #!/usr/bin/env bash, your software isn't portable anyhow, so use whatever makes it most performant, readable, etc.
21:08  nDuff: jsz`, ...that said, those constructs do very different things
21:09  nDuff: jsz`, <<<"$(foo)" has to buffer the entire output of foo, whereas < <(foo) streams it
21:09 * nDuff doesn't know that here strings are entirely portable either, btw.
21:10  nDuff: ...ahh, I can answer that definitively, they aren't.
21:10  nDuff: jsz`, ...so if you're writing for POSIX sh, you can't use <<< either anyhow.
21:12  jsz`: nDuff, oh ok :\ thanks
21:15  jsz`: nDuff, hmm it's me or it looks like  < <(foo)  is faster?
21:17  nDuff: jsz`, ...did I not tell you that < <(foo) would avoid the need to buffer?
21:17  jsz`: yes you did
--- Log closed Sun Dec 05 21:22:59 2010
--- Log opened Sun Dec 05 21:28:37 2010
21:28 --- Users 546 nicks [0 ops, 0 halfops, 0 voices, 546 normal]
21:30 --- Channel #bash was synced in 133 seconds
21:48  alexis: hi here !
21:55  rocktop: how do I insert " end" at the end of line matches by "DNS" in the first of the line ?
21:57  Fatal: [[ $line == DNS* ]] && line+=" end"
21:57  erUSUL:  rocktop awk '/^DNS/ { printf "%s end",$0 }' file > newfile
21:58  rocktop: erUSUL, I would like to do that in exist file
21:59  twkm: so copy newfile to the existing file when it competes.
21:59  twkm: completes.
21:59  rocktop: erUSUL, end will be a variable
21:59  Fatal: rocktop: then you need to look at an editor, ed is scriptable enough, but for smaller files, awk, sed etc with a temporary file should be just fine
21:59  twkm: keep changing things, erUSUL loves chasing around.
22:00 --- Pici` is now known as Pici
22:00  erUSUL: rocktop: awk -v awkvar=$var '/^DNS/ { printf "%s %s\n",$0,awkvar }' file > newfile
22:03  Fatal: ( awkvar="$var" of course )
22:06 --- Unknown[NF] is now known as Unknown[OFF]
22:07  rocktop: erUSUL, its possible to do that on the file with sed -i ?
22:09  alexis: I have an error message with this script, and I dont get why
22:09  alexis: http://friendpaste.com/6a8ZubGBP5APbTB9EGltBU
22:10  nDuff: !questions > alexis
22:10  greybot: alexis: Ask questions. Don't just paste 200 lines of code on a web page and say "HERE MY KODE <URL> WHATZ RONG". Describe the problem, clearly and concisely. If necessary, give the SMALLEST sample code that demonstrates the problem.
22:10  alexis: the error says $ to
22:10  alexis: to:2: command not found: you need to provide a name for the shortcut you want to use
22:10  Riviera: !set-x > alexis
22:10  greybot: alexis: Setting the -x option on bash enables a debugging mode that makes bash output the command name and arguments that it will run (after all parsing and expansion has been applied). Set it by starting a script with ''bash -x ./myscript'' or putting ''set -x'' before the code you want to debug. ''set +x'' turns this behaviour off.
22:11  twkm: looks like you run a command that does not exist.
22:11  nDuff: alexis, your script is trying to run the output of the program given in "output" as a command
22:11  twkm: rocktop: #sed
22:11  nDuff: alexis, ...which I doubt is what you really want to do.
22:11  alexis: nDuff: yes it is
22:11  alexis: nDuff: well, it depends what the output actually is
22:11  nDuff: alexis, you don't just want to run the program $output, but you want to run the OUTPUT of that program?!
22:12  alexis: if it's starting by "cd", I want that, otherwise I just want to echo it
22:12  nDuff: ...err...
22:12  rocktop: twkm, #sed closed only for invited users
22:12  twkm: umode -Q and try again.
22:12  nDuff: alexis, running a cd command in a subshell won't do you any good
22:12  nDuff: alexis, ...as when that subshell terminates you're back in your original shell, in its original directory.
22:12  alexis: arf
22:13  alexis: so how can I change this directory
22:13  alexis: ?
22:13  twkm: it is changed for your script.
22:13  alexis: yep, but I want to change it for the user
22:13  twkm: sounds idiotic.
22:13  nDuff: !pe > alexis (to get the directory name -- skip the awk please)
22:13  greybot: alexis (to get the directory name -- skip the awk please): Parameter Expansion is the expansion of a parameter: "$foo", "$1". You can use it to perform string operations: "${file%.mp3}", "${0##*/}". Remember to *always* quote them. See http://mywiki.wooledge.org/BashSheet#Parameter_Operations
22:13  twkm: but whatever, to change the current shell's directory you cannot run a separate program ... ''help source''.
22:14  alexis: twkm: it's the goal of this script, to change the directory for the user
22:14  twkm: sigh.
22:15  nDuff: alexis, ...if it's being run as a FUNCTION inside of the user's outer shell, not as a script, then it's _possible_; otherwise, it's not at all.
22:15  nDuff: # s='cd /foo/bar'; cd "${s#cd }"
22:15  alexis: twkm to have something like bookmarks for the shell
22:15  evalbot: nDuff: bash: cd: /foo/bar: No such file or directory
22:15  nDuff: alexis, ^^^
22:15  alexis: nDuff: ah right
22:16  alexis: it will be run as a functon
22:16  alexis: function*
22:16  nDuff: if [[ $s = "cd "* ]] ; then cd "${s#cd }"; else echo "$s"; fi
22:16  trash: Uhm.
22:17  twkm: alexis: functions aren't "left behind" either.
22:17  twkm: again, ''help source''.
22:17  alexis: yep, I'm looking at it :)
22:17  nDuff: ...and just to go again over how wrong $($output) is -- that's not running the cd command, it's running what cd emits on stdout as a command.
22:17  nDuff: well, it also runs the cd command, but inside a subshell
22:17  alexis: hmm, okay, got it
22:18  nDuff: (and then takes its output, and runs that output in the main shell)
22:18  alexis: sorry, i'm not so used with bash, so lot of mistakes
22:18  alexis: thx for the help so far :)
--- Log closed Sun Dec 05 22:23:40 2010
--- Log opened Sun Dec 05 22:29:06 2010
22:29 --- Users 544 nicks [0 ops, 0 halfops, 0 voices, 544 normal]
22:31 --- Channel #bash was synced in 136 seconds
22:44  Gurkenglas: Could you point me to a channel where I can ask stuff about converting files?
22:44  guampa: Gurkenglas: what kind of conversion? what OS?
22:45  Gurkenglas: Vista, swf to gif
22:45 * nDuff almost gave an answer for SVG, then realized that Gurkenglas said "swf"
22:45  guampa: hmm, sorry can't help with that combo
22:45  guampa: maybe in a Windows channel?
22:46  Gurkenglas: Will try that, thanks
22:46  guampa: k
22:46  AlexC_: how can I combine 2 arrays into 1?
22:46  nDuff: AlexC_, new_array=( "${old_array_1[@]}" "${old_array_2[@]}" )
22:47  AlexC_: nDuff: a ha, ok. Out of interest, why does array+=${another_array[@]} work?
22:47  guampa: nDuff: dya know if bash has native multi dimensional arrays?
22:47  AlexC_: well, it does - however the elements are not in correct order and spaces seem missing
22:48  AlexC_: sorry, I mean does *not* work (as expected, anyway)
22:48  nDuff: AlexC_, array+=( "${another_array[@]}" ) should work fine. Mind your quoting.
22:49  AlexC_: nDuff: ahh, working now :) thanks
22:53  Gurkenglas: Nobody in #windows seems to care
22:53  Gurkenglas: Tried SUPER, but it failed for unknown reason. Tried all what the error window proposed what I understood
22:54  Riviera: Gurkenglas: This channel is by the way about the bash shell.
22:56  Gurkenglas: It's the first channel /list gave me for "hack" that i could not instantly associate with a programming language, because "convert" gave nothing inpointless. Do you know a channel where I can ask about where to ask about something? :I
22:56  Gurkenglas: Im german btw, sry for probably terrible English
22:56  Riviera: Try #freenode.
22:57  Gurkenglas: kthxbye
22:57  Riviera: That's German?
22:57  Gurkenglas: ^^
22:59  poisonbit: maybe something like  ffmpeg -i file.swf -o file.gif    # or whatever options, ffmpeg -formats | grep -E '(swf|gif)' list both of them
23:04  adnap_: Can someone teach me how to run the same command for multilpe files which have similar names, but different numbers at the end?  For example, say I have files f01, f02, ... and I want to cat each one individually.
23:05  poisonbit: for file in f0*; do whatever "$file"; done
23:05  poisonbit: or just: whatever f0*
23:05  adnap_: thank you
23:05  poisonbit: # echo a > f01; echo b > f02; cat f0*
23:05  evalbot: poisonbit: a
23:05  evalbot: poisonbit: b
23:20  jorn: hey, I'm searching for an idea... i have a file listing a lot of sizes in human readable format... 59.9M, 12.3K... is there an easy way to add them up? can't be the first one to add up such "numbers"
23:23  Riviera: jorn: Did you think that through?
23:23  jorn: ?
23:24  Riviera: jorn: 59.9M does not even care for numbers as low as 12.3K
23:24  Riviera: jorn: adding 12.3 to the other is a bit off.
23:24  jorn: well, currently I'm substituting all Ms with *1024*1024+, all Ks with *1024+, then join all the lines but when pasting into bc it gets awkward
23:24  jorn: *g*
23:24  jorn: I know, don't post this on my daily wtf... please
23:25  jorn: well, it's a lot of smaller files as well
23:25  Riviera: No worries. The daily wtf stories are all made up anyway.
23:25  jorn: well, so this is a one shot
23:26  Riviera: And your approach is not at all silly, *of course* this is what has to happen, to convert the prefixes to numbers. :)
23:26  jorn: and i don't feel like writing a python script for that ;)
23:26  jorn: but pasting the long line into bc actually _still_ goes on
23:27  poisonbit: if you find easier to use curl Vs google and then parse html....
23:27  poisonbit: google sums different b kb mb etc
23:27  jorn: and did I mention i can't stop the "pasting" action
23:27  Fatal: jorn: I'd say change the format, but I guess you're stuck with that human readable crap :/
23:27  jorn: yupp
23:27  jorn: google actually would be awesome *g*
23:28  jorn: but i guess they don't allow that long queries :(
23:28  jorn: ah, nevermind... my "pasting" just ended
23:29  jorn: it's 354975167286.28672 bytes however that happened
23:29  Riviera: yes, that's bc bullshitting you
23:29  Riviera: the real result is rather 3.55GB or so.
23:30  jorn: whiked... i did it again (now piped it into bc)... 374155195190.28672
23:31  jorn: anyhow thanks for the Sunday night dwtf assist ;)
23:40 --- nohk_ is now known as nohk
23:43  asteroid: hello
23:45  asteroid: i'm little lost : I use ./myscript.sh http://url.com?with.php&using=fucking&esperluette=inside&  . I want to use this ugly url, using $1 in myscript.sh, but & (aka esperluette) is interpreted by the shell. How can i avoid this comportment ?
23:45  jsz`: !.sh
23:45  greybot: Don't use extensions for your scripts. Executables shouldn't have extensions. Just like you run 'ls' instead of 'ls.elf', you should run 'myscript' or './myscript', not 'myscript.sh'. In any case, putting 'sh' extensions on *bash* scripts (which are *not* sh scripts) is retarded.
23:45  cthuluh: asteroid: quote the url
23:45  Riviera: !' > asteroid
23:45  greybot: asteroid: Single quotes (') cause everything between them to be taken literally by bash. If you want to embed a ' inside a '...', write it as the four characters, '\'': echo 'It'\''s a blast!'
23:46  asteroid: so i need to use ./script.sh 'ugly&url' . There is no a way to work on $1 inside the script instead of on invocation ?
23:47  Riviera: asteroid: of course, if the shell you start your script with already interpreted the &, starting the script as
23:47  Riviera: asteroid: script part_of_url_up_to_the_esperluette
23:47  asteroid: mmmm ok, i understand
23:47  Riviera: asteroid: in the background and treating the rest of the URL as another command, how would your script know what the parameter (URL) originally typed was?
23:48  asteroid: yes i'm just understanding that when you write _the_esperluette, this make *bong* in my eye and I understand where I'm bad.
23:48  asteroid: thx for pointing it to me.
23:58  gwz: hey, how would I get rid of , in a file which has numbers like 300,000 310,000 etc
23:59  Somelauw: Are ' and " exactly the same in bash?
--- Log closed Mon Dec 06 00:00:07 2010
