--- Log opened Wed Nov 03 09:20:57 2010
--- Log closed Wed Nov 03 09:25:58 2010
--- Log opened Wed Nov 03 11:04:23 2010
11:04 --- Users 506 nicks [0 ops, 0 halfops, 0 voices, 506 normal]
11:06 --- Channel #bash was synced in 105 seconds
11:06 --- Weust`afk is now known as Weust`
11:07  ma10s: When I do echo "test" > /tmp/somefile then there is a newline appended to the string. Where does it come from?
11:07  pgas: echo
11:07  trash: haha.
11:08  ma10s: well, is it a switch I can toggle on/off?
11:08  ma10s: oh wait, never mind
11:08  ma10s: man echo.. sorry
11:09  trash: 'help echo'
11:09  trash: Or use printf
11:11  ma10s: Thanks for the help, even though it was a pebkac problem hehe
11:24  stonie: how can i use "tar c "$file" | tar x -C "$DIR"" and skip existing files?
11:26  pgas: use rsync?
11:26  twkm: it might be useful to review tar's documentation.
11:29  lhunath: yeah; the first tar doesn't know what files "exist" for the second
11:30  stonie: ok .. i tried rsync aswell but didnt work for me
11:30  stonie: what might be the command for the above task?
11:30  trash: rsync.
11:31  stonie: and further?
11:31  stonie: the thing is, i want the directory structure copied
11:32  trash: With your description so far
11:32  trash: rsync [OPTION]... SRC [SRC]... DEST
11:32  twkm: ''man rsync'' && /join #rsync
11:32  stonie: ty
11:43  tomeo: what program can I use if I get a two line output and just want the first line?
11:43  trash: tomeo: There are tons of ways.
11:43  trash: The best one depends on the actual task.
11:44  estan: hey folks.. been wrestling with this for a while..
11:44  estan: in the text:
11:44  estan: <li><strong>0</strong><a id="MainContent_MerInnehall_uiWebControlSnabblankar_uiSnabblankar_uiLï¿½nkNamn_1" href="LagenhetSok.aspx?sokid=6910">Bostadssnabben</a></li>
11:45  tomeo: trash: I have a file that looks like this http://pastie.org/1269098
11:45  trash: estan: Use a HTML parser.
11:45  estan: i need to have just the 0 inside the strong tag printed.
11:45  tomeo: trash: Im doing awk '/fps/ {print $6}' tmplist | sed 's/(//', which yields two lines
11:45  estan: trash: overkill for just this little thing.
11:45  trash: tomeo: You can do it all in awk. Join #awk
11:45  trash: estan: It's never overkill to use a HTML parser when parsing HTML.
11:45  tomeo: thanks trash
11:45  trash: Do not even start to think you can use sed.
11:46  estan: trash: well i know i can. but sure.
11:46  trash: estan: see tidy+(xmlstarlet|xmlgawk|xpath|xml2)
11:47  estan: alright then. thanks.
11:56  estan: trash: cat foo | tidy -q -xml | xml sel -t -c "//strong/text()", did the trick. thanks for the tip about xmlstarlet, awesome.
11:56  sybariten: hey, what does it mean when shell scripts use variables like this:  SHOWDIR=${PHOME}/storyboards/
11:57  sybariten: with that i mean the curly braces
11:57  pgas: they are just usefull when you need to do: echo ${var}sometext
11:57  mjrosenb: sybariten: it is just a way of saying what is part of the variable to be expanded, and what is other text
11:57  pgas: otherwise $var and ${var} are equivalent
11:57  trash: estan: :-)
11:58  mjrosenb: it is also useful if you want to do ${foo/bar/baz}
12:00  sybariten: hm, so its a little help to clarity then, but not really necessary if nothing follows right onto it
12:00  sybariten: mjrosenb: what does that do? (the last one)
12:00  lhunath: !{}
12:01  trash: greycat really needs to implement reconnecting for greybot.
12:01  lhunath: somebody needs to buy that bot a reliable uplink.
12:02  estan: (it's also used when doing tricks like ${#parameter} to get the length in characters of the value of the parameter)
12:02  estan: (see Parameter Expansion in the bash manual)
12:23  twkm: feh.  trick.
12:35  kotique: Hi. How do I make Bash speak?
12:35  kotique: I've got some profile or rc that's setting ulimit and I can't track it down
12:35  kotique: su user -c /bin/bash --  --norc --noprofile -v
12:35  kotique: didn't help
12:36  kotique: su user -c /bin/sh ; reports no limits were set, so it's purely bash related
12:36  trash: -x might help.
12:38  kotique: it doesn't, try yourself.
12:39  kotique: try to set +x
12:39  kotique: oh it was /etc/bashrc
12:40  kotique:  System command (blah) exited with status 32768. I thought it's 128+n, hmm...
12:40  kotique: it was definitely killed
12:46  tzervo: hm, does the dcc command work if the other end has googletalk?
12:46  tzervo: sorry, wring channel
12:46  pgas: set +x is the default, set -x enables the trace
12:53  Polochon_street: Hello!
12:53  Polochon_street: How can I cut all the "-" on a text file? I tried "cut -d "-" -f1", but it cuts the whole line
12:54  trash: With an editor.
12:54  trash: Checkout ed.
12:54  Polochon_street: Wait, that's not bash, isn't it?
12:54  trash: Neither is cut.
12:54  Polochon_street: Cut is a bash tool
12:54  trash: No, it's not.
12:55  Polochon_street: Oh, sorry.
12:55  pif: hi, what is the best way for a script to know the current X screen resolution?
12:55  trash: # type cut
12:55  evalbot: trash: cut is /bin/cut
12:55  trash: See,
12:55  trash: pif: Ask a X channel.
12:56  trash: bash has no way to interactive with X. X might have some tools of its own though.
12:56  trash: interact*
12:56  poisonbit: # line="aaa - bb c-c"; echo "${line//-/}"
12:56  evalbot: poisonbit: aaa  bb cc
12:56  poisonbit: Polochon_street,  ^^^
12:56  barjac: Polochon_street: what about "sed -i 's/-//g' filename"
12:56  trash: sed -i is nonstandard.
12:57  Polochon_street: May I use "tr"?
12:57  pif: trash: how about xrandr? (looking for other options as well)
12:57  trash: pif: Yes.
12:57  Polochon_street: barjac: Nothing appears on the screen
12:57  trash: pif: That might work.
12:57  trash: Polochon_street: You may, when using a temp file.
12:58  Polochon_street: trash: How? I tried "tr "-" " "", but it just replaced "-" by spaces
12:58  trash: tr -d '-' < file > file.new
12:58  barjac: Polochon_street: It edits the file in place
12:58  geirha: No, sed overwrites the file
12:59  geirha: sed -i  that is
12:59  barjac: geirha: same result :-)
13:00  Polochon_street: trash: I the '-' are replaced by spaces
13:00  Polochon_street: Now, how can I del all spaces?
13:00  geirha: barjac: some times, yes.
13:00  trash: Polochon_street: No, they are not.
13:01  Polochon_street: Wait a minute
13:01  trash: # echo 'foo-bar-moo' > file; tr -d '-' < file
13:01  evalbot: trash: foobarmoo
13:02  kotique: yeah, set -x enables the trace that doesnt work when new bash is spawned
13:03  Polochon_street: trash: try it on my file
13:03  Polochon_street: http://pastebin.archlinux.fr/425922
13:03  Polochon_street: It replace "-" by spaces
13:04  Polochon_street: replaces*
13:05  barjac: # echo 'foo-bar-moo' > file; sed -i 's/-//g' file;cat file
13:05  evalbot: barjac: foobarmoo
13:06  Polochon_street: ...Sorry, my fault
13:06  Polochon_street: My file was something like
13:07  Polochon_street: ' -Foobarmoo'
13:07  The-Compiler: # sed 's/-//g' <<< ' -Foobarmoo'
13:07  evalbot: The-Compiler:  Foobarmoo
13:07  The-Compiler: :p
13:08  lhunath: sed and tr edit streams.  if you want to edit a file; use a FILE EDITOR.
13:08  kotique: oh, I fucked up server access now
13:08  poisonbit: # echo ' -foo' > file; while read -r line; do echo "${line// -/}"; done < file
13:08  evalbot: poisonbit: -foo
13:08  lhunath: like the one suggested to you by trash all the way in the beginning.
13:08  kotique: placed exit in /etc/bashrc
13:08  mooperd: I am doing something very stupid here; ddate=date +%m/%d/%Y
13:08  mooperd: dtime=date +%H:%M:%S
13:08  lhunath: !faq 2 > mooperd
13:09  kotique: any way to circumvent that ? :)
13:09  lhunath: mooperd: go read the second FAQ.
13:09  kotique: holy fuckin shit
13:09  lhunath: kotique: don't run it.
13:09  kotique: run what? bash via sshd?
13:09  mooperd: lhunath: hum: url?
13:10  lhunath: kotique: don't parse the file if you don't want its exit to be invoked.
13:10  kotique: tell that bash
13:10  lhunath: mooperd: did you miss the topic when you came in?
13:11  mooperd: lhunath: sorry, I wasnt wearing my glasses
13:11  lhunath: kotique: you tell it.
13:11  lhunath: kotique: the magic word is --norc
13:11  kotique: i can't , root is only accessible via ssh
13:11  kotique: d
13:11  poisonbit: kotique, restore server backup of that file, or scp bashrc it to your desktop, edit and scp again to the server
13:11  lhunath: kotique: ssh is not bash.  I don't see what the problem is.
13:12  kotique: sshd invokes user's default shell which is bash
13:12  kotique: scp might work
13:12  lhunath: ssh u@h bash -i --norc
13:12  kotique: bash reads /etc/basrhrc, sees exit and fuckin exits instead of just returning
13:13  zplinux: hi all I want to compare all files in two directories using diff
13:13  kotique: wait, isn't sshd enforcing user shell and executing every command through it?
13:13  zplinux: I came up with this;
13:13  zplinux: for file in /net/10.240.38.131/etc/samba/* ; do diff /etc/samba/${file:-\/net\/10.240.38.131\/etc\/samba/} /net/10.240.38.131/etc/samba/$file ; don
13:13  lhunath: kotique: either way, bashrc is only executed for interactive shells
13:13  lhunath: kotique: and if you give ssh a command, it runs the command with a non-interactive version of your shell.
13:13  zplinux: how to remove the prefix /net/10.240.38.131/etc/samba/ ?
13:13  kotique: that's pretty cool, let's try it
13:14  lhunath: zplinux: diff -R dir1/ dir2/
13:14  zplinux: thanks
13:14  kotique: ssh root@xx /bin/uname -a
13:14  kotique: nothing.
13:14  zplinux: and how to remove the substring?
13:14  lhunath: err, -r
13:15  lhunath: remove what from where?
13:15  kotique: debug1: Sending command: /bin/uname -a
13:15  zplinux: in the for line
13:15  kotique: debug2: callback done
13:15  kotique: ;-)
13:15  zplinux: I want to get only the file name in the diff statment
13:15  lhunath: zplinux: toss out the for crap.
13:16  lhunath: diff -r dir1/ dir2/
13:16  zplinux: right
13:16  kotique: ssh root@u /bin/bash -i --norc   no luck
13:16  zplinux: let us assume I wanted to use for loop
13:16  kotique: it actually goes through /etc/bashrc even if it's non-interactive
13:16  kotique: so it actually what I thought - it enforces the user shell
13:16  zplinux: and let us assume I need the file names in the do statment
13:16  kotique: which is pretty good for security but bad for my situation
13:16  zplinux: how can I get the file names?
13:17  lhunath: kotique: hahaha.
13:17  lhunath: security.
13:17  lhunath: stupidity.
13:17  zplinux: I thought I could subtract the prefix using {file:substring}
13:17  zplinux: right?
13:17  kotique: why? there's no way I execute any command now thorugh ssh
13:17  lhunath: if your profile sources bashrc without checking whether the shell is interactive; that's your configuration being stupid.
13:18  pgas: try sh, since you are using debian it should not be bash
13:18  kotique: oh wait, but you told bashrc is only invoked on interactive shells, now you tell I have to chekc something
13:18  pgas: debian patches bash so that it reads /et/basrc
13:18  lhunath: pgas: when?
13:19  pgas: dunno
13:19  kotique: no, it's a standard centos install, but with cpanel on it.
13:19  lhunath: if it's only for interactive shells; it's a non-issue
13:19  kotique: no, no bashrc in sourced from profile
13:19  pgas: lhunath: ah yes sure
13:19  lhunath: well; if his /etc/profile sources /etc/bashrc regardless of whether the shell is interactive or not, then that might explain it.
13:19  pgas: I just found it strange that it was loaded even with --norc
13:19  lhunath: and then no command you give ssh is gonna fix it
13:20  lhunath: because the exit is invoked before the command you give ssh is evaluated
13:20  kotique: no bashrc in sourced from profile here
13:20  lhunath: fix your language.
13:20  lhunath: does that mean "profile sources no bashrc", or "no, bashrc is sourced from profile"
13:21  kotique: of course exit is evaluated before everything, that's why I had asked for solution
13:21  lhunath: I gave you one that would work perfectly on a sane ystem.
13:21  kotique: grep -qrn bashrc  /etc/profile* || echo NO
13:21  kotique: NO
13:21  kotique: $
13:22  lhunath: so I guess you meant the former.
13:22  lhunath: then it depends on what your distro has done to bash by means of patching
13:23  kotique: I'd like also to mention that scp doesn't work either
13:23  lhunath: of course not, your bashrc exits it.
13:23  kotique: haha, now you admit it
13:23  kotique: okay, let's go back to #1
13:23  lhunath: blink.
13:23  kotique: how do I correct the situation?
13:24  lhunath: connect to the serial console, log in, fix your bashrc.
13:24  mooperd: " ipmitool sel time set \"%ddate %dtime\" " - I want this to output " ipmitool sel time set "11/03/2011 00:00:00" " but its not working
13:24  lhunath: or boot into single user mode.
13:24  lhunath: or put your hard disk in another box.
13:25  mooperd: something like... ipmitool sel time set `"`%ddate %dtime\`"`  ?
13:25  lhunath: mooperd: don't use `` in bash.
13:26  mooperd: lhunath: ok
13:26  lhunath: mooperd: and don't escape quotes.
13:26  mooperd: :(
13:27  lhunath: if you want: [ipmitool] [sel] [time] [set] [11/03/2011 00:00:00], then run ipmitool sel time set [something that expands into 11/03/2011 00:00:00]
13:27  lhunath: what expands into 11/03/2011 00:00:00?
13:30  mooperd: lhunath: date +%m/%d/%Y
13:30  lhunath: no, that doesn't expand.  that outputs.
13:30  lhunath: what expands into the output of a command?
13:32  mooperd: lhunath: I dont understand
13:32  lhunath: what don't you understand?
13:32  kotique: understand
13:34  angelete2: hi
13:34  angelete2: i have a doubt
13:34  angelete2: where is history stored while you are login?
13:35  angelete2: in .bash_history only appears when you exit your session
13:35  angelete2: but what happens meanwhile?
13:35  angelete2: memory?
13:35  pgas: yes
13:35  angelete2: so the only way to view those commands are using bash facilities, ok
13:36  lhunath: or by flushing them out to file.
13:36  angelete2: thank you
13:39  mooperd: lhunath: what you mean by expand?
13:40  mooperd: lhunath: although node001..node010 would expand to node001, node002, node003.....
13:40  lhunath: mooperd: expansion is when a part of a command is replaced by something else before the command is executed.
13:40  lhunath: mooperd: eg.  echo "$name"  # here, $name expands into the contents of the variable name.
13:41  lhunath: for example, it expands into echo "mooperd"
13:41  lhunath: THEN, bash executes the command echo with the argument mooperd.
13:41  mooperd: ok
13:41  lhunath: what you need is a syntax that doesn't expand into mooperd but into 11/03/2011 00:00:00
13:41  lhunath: if you read FAQ number 2, you would know what that syntax is.
13:42  mooperd: lhunath: ipmitool sel time set "`date +%m/%d/%Y` `date +%T`"
13:42  trash: I wonder when this ugly ` will vanish from earth.
13:42  lhunath: mooperd: now stop using `` in bash.
13:42  lhunath: and start taking my advice if you want it.
13:42  lhunath: instead of forgetting it 5 minutes after I said it.
13:42  trash: otherwise you may leave.
13:43  lhunath: $() is the same thing as ``, only, it doesn't SUCK.
13:43  lhunath: "$(date ...) $(date ...)"
13:43  geirha: You also only need one date there
13:44  Ogedei: say i want a script to pass its arguments to another script, as in 'script2 $*', but I somehow want to preserve quoting of the arguments, so that 'myscript "a b" c' doesn't result in 'script2 a b c'
13:44  Ogedei: how would I do that?
13:47  lhunath: don't use $*
13:47  lhunath: ever.
13:47  lhunath: always use "$@"
13:48  lhunath: note the quotes.  always quote your expansions.
13:48  lhunath: all of them.
13:49  Ogedei: lhunath: that did the trick, thanks! how does the single pair of quotes around $@ cause the individual expansions to be quoted?
13:49  lhunath: bash magic.
13:49  lhunath: "${array[@]}" expands into "${array[0]}" "${array[1]}" "${array[2]}" ...
13:49  lhunath: same for "$@" -> "$1" "$2" ...
13:49  lhunath: as many as there are elements to expand.
13:50  Ogedei: lhunath: magic indeed! good to know
13:57 --- Weust` is now known as Weust`afk
14:04 --- Weust`afk is now known as Weust`
14:09  kotique: [pid  2905] execve("/bin/bash", ["bash", "-c", "/bin/uname -a"], [/* 8 vars */] <unfinished ...>
14:09  kotique: as I said
14:12  lwolf: hi
14:14  lwolf: how can i set a variable in a bash script that remain avaible after the end of script ? (is this even possible ?)
14:15  lhunath: no.
14:15  BlessJah: i want to make config (for bash script) with list of directiories to backup, has anyone idea how can i do it (config should also contain some more variables, so simple list of directories isn't best idea)
14:15  lwolf: lhunath, no hack possible ?
14:15  lhunath: lwolf: you should understand that it is impossible if you give a moment's thought to what it means to "remain availabel after the end of the script"
14:16  lwolf: lhunath, yeah. i see what you mean
14:16  lhunath: you have to keep the variable somewhere.
14:16  lwolf: but i still was hoping that using export or something like it it could be possible
14:16  lhunath: if the script has ended, there is no more place to keep the variable.
14:16  lwolf: lhunath, i echo it to the output
14:16  lhunath: ok.  so now it's in your output.
14:17  lwolf: hum.. this will be fun
14:17  lhunath: BlessJah: dirs=(/etc /home/* "/mnt/My Windows Drive")
14:18  lhunath: BlessJah: add assignments like that into a file.  then source the file when you want to read in the config.
14:18  lhunath: !wyttd
14:18  lhunath: lwolf: what are you trying to do/
14:19  lwolf: lhunath, creating a mysql database and its user in a bash script and having the mysql connection parameters in shell vars at the end of script
14:19  lwolf: lhunath, i've just thinked of a way to do it though
14:19  lhunath: whatever you think, don't do it.
14:20  BlessJah: lhunath: thx, this way is better to simple words, but it gonna work
14:20  lhunath: lwolf: you're trying to pass data in the wrong direction.
14:21  lhunath: let me ask you again; what are you trying to do?
14:21  BlessJah: other question, how can i edit config uding script? have i to use temporary files etc. or is better way to edit file in place?
14:22  lhunath: you edit it with an editor.  not with a script.
14:23  BlessJah: lhunath: yes, but i want to edit it with a script, it's other config
14:23  lwolf: lhunath, i run :  mysql-tools create-db MYDB
14:23  lwolf: lhunath, then, i can have create users for MYDB database in MYSQL_USER  and MYSQL_PASSWORD
14:23  BlessJah: lhunath: it will be replace plenty of something.lock files, and do some other stuff
14:23  lhunath: lwolf: ... Why are you trying to pass parameters from the script to the parent?
14:23  lhunath: lwolf: turn the script into a function.
14:24  lwolf: lhunath, and source ?
14:24  lhunath: no.
14:24  lhunath: one file.
14:24  lwolf: yeah i see what you mean
14:24 --- khaije1 is now known as khaije|amalt
14:24  lwolf: lhunath, ok, thank you
14:29  BlessJah: lhunath: any ideas welcome, hilight me, brb
14:30  kotique: anyone knows why is "ps wwl  -t /dev/pts/5 -C less -u 1000 "  selecting by OR ing selectors ?
14:31  kotique: not by AND ing them?
14:31  kotique: and how do I make them ANDed?
14:32  gnubien: what is the smartest,easiest way to run a bash script when user logs in or startx?
14:33  trash: kotique: Read the manual of ps.
14:33  sybariten: not sure if this is really bash-related, but... is there any way to do an ls -lrt and have the output with full absolute path?
14:33  sybariten: the way find would present it
14:33  kotique: gnubien, haha man
14:33  lhunath: gnubien: uh, edit .profile
14:34  trash: sybariten: No, you could use find with -printf if you have it.
14:34  sybariten: i do, but...
14:34  sybariten: hmmm its the whole -lrt thing i like
14:34  lhunath: BlessJah: if for some weirdo reason you are allergic to text editors, write your own config parsing crap.
14:34  sybariten: i basicly want to tail it through the last ten files...
14:35  trash: sybariten: You could use find with -printf if you have it. (and sort)
14:35  sybariten: but sort would only see a text list wouldnt it?
14:35  lhunath: BlessJah: it's probably gonna suck and be broken.  so either follow my earlier recommendation or stop using bash.
14:35  sybariten: (not knowing which files are newer)
14:35  trash: sybariten: DO YOU EVEN READ WHAT I SAY
14:36  trash: sybariten: USE FIND -PRINTF
14:36  gnubien: no special syntax for running a bash script on login in .bash_profile?
14:36  trash: Look up what it is capable of, for fucks sake.
14:36  taylanub: gnubien: .bash_profile is a bash script
14:36  Polochon_street: Wow, wow, WOWÂ§Â§Â§ It was obvious!
14:36  Polochon_street: He is the red spy!
14:36 * trash backstabs Polochon_street
14:36  sybariten: heh, if those things make you boil and reach for the caps, i wouldnt wanna see the rest of your life!
14:37  Polochon_street: AahahAAoh
14:37  taylanub: caps -- absolute last resort
14:38  lhunath: gnubien: :(){ _(){ "$@";};_ "$@";};: myscript
14:39  trash: Well done.
14:40  gnubien: only want my script to run once on login, not fork bomb :)
14:40  taylanub: lol
14:40  trash: It doesn't fork bomb.
14:41  lhunath: then I read your mind well.
14:41  lhunath: it's special syntax for running a command once.
14:41  taylanub: ... indeed, it doesn't fork bomb. lol it's the same thing as "myscript"
14:42  gnubien: lhunath: explain your special syntax
14:42  trash: oh man.
14:42  trash: gnubien: You've been here for years, I'm always amazed about your cluelessness.
14:43 * gnubien dons his asbestos knickers ;)
14:44  kotique: ;-)
14:45  kotique: how do I send a ctrl+c sequence programmically?
14:45  kotique: echo "\xc" or something, is there such?
14:46  pgas: kill -INT
14:46  kotique: tried, don't work.
14:46  kotique: it's different i think
14:47  pgas: C-c usually sends INT
14:48  taylanub: i think it passes through the shell though
14:48  pgas: no
14:48  kotique: how do I send a ctrl+c sequence programmically?
14:48  koala_man: it's handeled by the terminal
14:48  koala_man: kotique: < pgas> kill -INT
14:49  pgas: otherwise have a look at expect
14:49  pgas: you must add the pid number of your app after -INT
14:49  pgas: or maybe pkill -INT yourapp
14:49  kotique: i've tried , but somehow it doens't behave correctly
14:50  kotique: probably sigmasked
14:50  kotique: but it should handle it through
14:50  lhunath: because you're sending it to the wrong process, probably.
14:50  taylanub: kotique: well the program can do whatever it wants when receiving the INT
14:50  pgas: then C-c will not work either
14:50  kotique: nope, ps -p $pid is showing the correct onw
14:50  kotique: ctrl+c from keyboard behaves correctly. strange
14:50  kotique: thanks
14:50  lhunath: because you're sending it to the wrong process, probably.
14:50  lhunath: shrug.
14:51  taylanub: maybe he killed his client :P
14:54  b0ot: I'm convinced that there are less than 10 people in the world who know how to use socat
14:54  taylanub: define "know how to use"
14:55  taylanub: i made an irc bot in sh and it uses socat :P
14:55 * tobor wonders if its not better to be clueless about bash syntax then it is to clueless about being an asshole. 
14:55  erUSUL: simple things are simple ( not as much as in netcat ) and complex things are possible. seems like a good trade of ? ;P
14:56  SmartViking: taylanub Is the code for that bot available - it would be interresting to see :)
14:57  taylanub: SmartViking: http://79.217.84.49/bin/taybot and http://79.217.84.49/etc/taybot
14:59  SmartViking: taylanub: Cannot access, sure ISP doesn't block 80?
14:59  taylanub: possible
15:00  SmartViking: I hate when they do that
15:00  taylanub: or router misconfigured...
15:01  SmartViking: ah forwarding wrong IP i guess :)
15:01  taylanub: also my server is a bit broken, having switched to nginx and not finished the config yet, but it works locally so that's probably not it
15:01  SmartViking: maybe an IP conflict
15:01  taylanub: what error do you get?
15:02  SmartViking: connection timed out
15:03  taylanub: i think also the router lags a bit recently... (getting huge lag on irc sometimes)
15:05 --- jzacsh is now known as jzacsh_
15:05  SmartViking: your server wont work if you are forwarding IPv4 to another computer - small chance you are doing that though
15:05  taylanub: and the web interface to the router is broken... (might be because i use uzbl. even though it's actually webkit...)
15:17  BlessJah: lhunath: it's not alergic to text editors (nano with syntax highlighint looks nice), and reason isn't so weird as it seems to be
15:17  BlessJah: lhunath: configs should be edited automagically
15:17  lhunath: why?
15:20  BlessJah: cause it will in crontab, will make some tests and automagically create configs
15:20  BlessJah: s/in crontab/be in crontab/
15:21  pragma_: Jabberwocky bush wookie.
15:28  Zathraz: hi. When using Whiptail in Bash I get complains about the syntax, but I am not sure what I am doing wrong:
15:28  Zathraz: http://pastebin.com/VpNWM00X
15:29  Zathraz: complains are about box-options & options
15:29  Zathraz: any pointers much appreciated
15:31  skered: If you have a script (A) executing another script (B) can B use signal traps issued by A?
15:34  BlessJah: how can i print to stderr?
15:34  yitz_: printf stuff >&2
15:34  BlessJah: thx
15:34  BlessJah: whoah, nice
15:35  yitz_: !redir > BlessJah
15:35  greybot: BlessJah: Learn about redirections! Syntax: http://bash-hackers.org/wiki/doku.php/syntax/redirection and http://mywiki.wooledge.org/BashGuide/InputAndOutput#Redirection ## Illustrated tutorial: http://bash-hackers.org/wiki/doku.php/howto/redirection_tutorial
15:49  SpiderFred: hi
15:51  derenio: hi, I've got problem with enabling bash completion for $CDPATH
15:53  derenio: could anyone tell me what package enable to get it (the bashcomp) work for $CDPATH
15:53  cga: !continue
15:54  cga: !builtin
15:54  greybot: Builtins are commands that are built into bash. You cannot run them from outside bash. They do not have man pages but are explained in man bash. They also have a help page: ''help [builtin-name]''
15:57  Zathraz: nm, got it fixed, but can I leave the TAG invisible in Whiptail checkboxes?
15:59  derenio: greybot: I'm using getnoo and I've got bashcomp enabled for bash-builtins but in case of $CDPATH it doesn't work (although $CDPATH is exported and cd uses it)
16:00  Zathraz: I just want a multiple file selection box
16:00  Zathraz: derenio, you are talking to a bot now....
16:01  derenio: Zathraz: (...) true, I just mechanically retyped it's nick
16:03  pgas: you probably have to modify the bash-completion script
16:03  pgas: maybe it works better if you remove the programmable completion for cd? complete -r cd
16:03  pgas: (never used CDPATH so just guessing)
16:05  darkredandyellow: guys, I recently something interesting while sitting with a colleague who used the z-shell
16:05  cga: derenio: also, this might have been synchronicity, but that !builtin was for my pleasure
16:06  darkredandyellow: ps aux G mysql
16:06  darkredandyellow: with "G" meaning : " | grep -i "
16:06  darkredandyellow: is there a way to do the same thing in bash?
16:06  lhunath: no
16:06  cga: !alias > darkredandyellow
16:06  greybot: darkredandyellow: If you have to ask, use a function instead: myfunc() { foo "$@" | bar; }
16:07  cga: no? neither with alias?
16:07  lhunath: no.
16:07  cga: ohps, sorry
16:07  lhunath: aliases suck.  they can do nothing useful.
16:07  cga: just shorten things
16:07  lhunath: you can do something like it with a function provided the G is the command name.  not some argument.
16:07  darkredandyellow: cga, greybot I appreciate your input, but neither an alias nor a function does what I asked for
16:07  lhunath: G mysql ps aux
16:08  lhunath: darkredandyellow: hence my answer, "no."
16:08  darkredandyellow: alright
16:09  dirker: hi all, any quick way to store tuplets in an array and iterate over them?
16:09  dirker: the tuplets are hardcoded
16:09  lhunath: not if you care about order.
16:10  dirker: I dont
16:10  lhunath: otherwise, associative arrays may provide.
16:10  dirker: bash4 only?
16:11  lhunath: aye.
16:12  dirker: :-/ thanks for the tip anyways
16:12  lhunath: alternatively, see awk,python,ruby,perl or whatever other flavor bakes your cake.
16:13  pgas: darkredandyellow: it's easy to have |G do the same thing but not just G
16:15  darkredandyellow: pgas, yeah, I already got alias G='grep -ir'
16:16  bassliner: i wonder why tcl is so rarely used while everyone is using python and perl nowadays.
16:22  l1x: hey
16:22  l1x: is there a nativ support for egrep -o  in bash(print only the match) using ${}?
16:23  l1x: the multiple lie solution is using if [[ $var =~ $regexp ]]  and BASH_REMATCH
16:23  geirha: That's the way to do it in bash, yes.
16:24  geirha: Though, you can also use PEs and/or read instead of regex.
16:25  Bushmills: bassliner: probably killed when Sun marketed Java - tcl was a Sun development too
16:25  Bushmills: or, the lead developer was on Sun payroll
16:27  l1x: geirha couldnt i use something simplier?
16:27  l1x: PEs?
16:27  geirha: !faq 100
16:27  greybot: http://mywiki.wooledge.org/BashFAQ/100 -- How do I do string manipulations in bash?
16:27  bassliner: Bushmills: that wouldn't explain why java is so overused and why tcl is hardly found anywhere nowadays. i personally find it a very powerful scripting language - with very very evil cavearts and side-effects and some major possibilities to shoot your own foot tho.
16:27  l1x: och yeah this is what i was asking about
16:28  geirha: l1x: How easy it is mainly depends on what data you're trying to extract.
16:28  bassliner: l1x: this might help you as well: http://mywiki.wooledge.org/BashSheet#Parameter_Operations
16:28  Bushmills: well, marketing can have exactly this effect
16:29  l1x: so i would like to merge the full if blah into one line of code
16:29  l1x: thanks
16:30  l1x: alright i am in a hurry but thanks for the URLs i gonna review it
16:30  sybariten: hey, two questions on Good Practice (TM)
16:31  sybariten: 1. variable names in CAPITALS, is that ok?   and 2. what should my bash scripts end with, as extension
16:31  geirha: !varcap
16:31  greybot: By convention, we capitalize environment variables (PAGER, EDITOR, ..) and internal shell variables (SHELL, BASH_VERSION, ..). All other variable names should be lower case. Remember that variable names are case-sensitive; this convention avoids accidentally overriding environmental and internal variables.
16:31  geirha: !.sh
16:31  greybot: Don't use extensions for your scripts. Executables shouldn't have extensions. Just like you run 'ls' instead of 'ls.elf', you should run 'myscript' or './myscript', not 'myscript.sh'. In any case, putting 'sh' extensions on *bash* scripts (which are *not* sh scripts) is retarded.
16:31  c00kiemon5ter: :)
16:33  sybariten: uhm... so that means that when using my own variables in scripts, i should avoid caps?
16:33  geirha: Indeed.
16:34  sybariten: i guess maybe the discussions boils down to what can be considered an env variable -- we have a PRODUCER thats always present here for instance, and, uh well... its used heavily by a viz system....
16:34  sybariten: but ofcourse it doesnt come from the OS so to speak
16:39  geirha: environment variables are variables your script has inherited. Your script can set environment variables for its children to inherit by using the export builtin.
16:41  sybariten: hm, ok, well this one is indeed inherited, we set it in some .profile of the machines, so i guess caps are all right then
16:41  geirha: Yes.
16:42  sybariten: next question, whats the best way of putting the number of files in a dir, into a variable, from a script? using ls through wc or something else?
16:42  geirha: !faq empty
16:42  greybot: http://mywiki.wooledge.org/BashFAQ/004 -- How can I check whether a directory is empty or not?  How do I check for any *.mpg files?
16:43  sybariten: a script i'm modifying uses a temp file from wc | ls, but it feels ugly
16:43  sybariten: thanks
16:43  geirha: sybariten: Good, because that is ugly. :)
16:43  sybariten: yeah, even i reacted and i'm quite hardened when it comes to those things
16:44  kotique: what's the syntax for inline here documents?
16:44  geirha: !<<-
16:44  greybot: Indented Here documents. Here documents with a dash before the EOF will ignore preceding tabs on each line, allowing you to indent your here documents nicely. Refer to << for general information on Here documents. Note that only TABs will work - spaces will not. Some editors can replace the TAB character with spaces, so be careful.
16:44  geirha: You mean those? ^
16:44  kotique: thanks
16:55  iwkse: hi, even if not grep specific, is there a way to print only the backreferenced string with grep?
16:56  c00kiemon5ter: what does backreferenced mean ?
16:57  l1x: hmm is it possible to replace somehow the lat matching pattern a string? so i would use the ${var/pattern/replacement} way but i have multiple patterns in the var how can i be sure to match to the last one which is at the very end of the line, i presume i have to add $ to the pattern somehow
16:58  iwkse: c00kiemon5ter: such thing as ([0-9]*)\1
16:58  iwkse: in perl syntax is $NUM
16:58  iwkse: the subcontext
16:58  c00kiemon5ter: i get it :)
16:58  geirha: iwkse: You can't with grep. You can with sed. (see ##sed)
16:59  c00kiemon5ter: yep sed was on my mind
16:59  iwkse: yeah i know how to do with sed
16:59  iwkse: i was deadly find a way with grep :)
17:00  c00kiemon5ter: you can use sed like grep, except if you need some very specific switch grep uses
17:00  iwkse: so i have to use a couple of grep statements
17:00  geirha: l1x: the pattern is not a regex, it's a glob.
17:00  geirha: !glob > l1x
17:00  greybot: l1x: "Glob", the common name for pattern matching, filename expansion, "wildcards", etc. http://mywiki.wooledge.org/glob
17:00  iwkse: c00kiemon5ter: ah that could be useful
17:01  geirha: l1x: Maybe you want ${var/%pattern/replacement}
17:04  Zathraz: could someone please check my bash/whiptail script? I have two issues (documented) and I am a bit puzzled why this occurs...
17:04  Zathraz: http://paste.debian.net/98943/
17:11  l1x: geirha you are damn right man
17:12  Bushmills: !`
17:12  greybot: The backquote (`) is used in the old-style command substitution, e.g. foo=`command`. This syntax is deprecated in favor of foo=$(command). Backslash handling inside $() is less surprising, and $() is easier to nest. See http://mywiki.wooledge.org/BashFAQ/082
17:13  l1x: geirha thanks a million
17:13  l1x: saved me a headache
17:14  Bushmills: # file=/foo/bar/filename; echo "${file//*\/}"
17:14  evalbot: Bushmills: filename
17:15  Bushmills: # i=5; ((i++)); echo $i
17:15  evalbot: Bushmills: 6
17:17  Bushmills: # n=5; arr[n++]="foo"; echo "$n ${arr[5]}"
17:17  evalbot: Bushmills: 6 foo
17:17  Zathraz: free play?
17:18  Bushmills: saves a line which was wrong anyway
17:19  Bushmills: # i=5; i+=1; echo $i
17:19  Zathraz: anyone any idea why whiptail seems to have issues with arrays and removal of items please?
17:19  evalbot: Bushmills: 51
17:25 --- zouhair is now known as help
17:25 --- help is now known as zouhair
17:35 --- taylanub0 is now known as taylanub
--- Log closed Wed Nov 03 21:41:39 2010
