--- Log opened Thu Nov 11 00:00:32 2010
--- Day changed Thu Nov 11 2010
00:00  geirha: read -r "myarray[i++]"
00:00  geirha: You want quotes around it.
00:01  winkey: well i was pretty close
00:01  winkey: thanks geirha
00:03 --- MuzerAway is now known as Muzer
00:07  republican_devil: say I wanted to find all directories BUT the newest
00:07  republican_devil: [say I was cleaning out old verison of an app for instance liek I am here at work]
00:07  republican_devil: how modify that to get all but the newest?
00:07  republican_devil: http://mywiki.wooledge.org/BashFAQ/099
00:11  geirha: for d in "${dirs[@]}"; do if [[ $d != $newest ]]; then rm "$d"; fi; done
00:13  geirha: Hm. Or maybe better, enable extglob.  Then    rm -r !("${newest%/}")/
00:13  geirha: !extglob
00:13  greybot: "Extended globs" (shopt -s extglob) allow you to say things like "all files that do not end in .jpg". See http://mywiki.wooledge.org/glob
00:15  {xmb}{bottz}7man: republican_devil
00:15  {xmb}{bottz}7man: use recent( ) from //xmb.root.pe/xf
00:15  {xmb}{bottz}7man: that shows the most recent, then pack it into a var and do !($name)
00:17  dmarkey: do function in bash run in a seperate thread/process?
00:17  republican_devil: that page hurt my brain
00:17  {xmb}{bottz}7man: lolz i doubt that was the page
00:17  hamush: hi, i've got a simple question that i can't seem to find the answer to: how do i test for a failing exit code? in other words, what's the correct way to write "if [ ! false ]; then echo yay; fi"?
00:17  {xmb}{bottz}7man: rather your nearby environment
00:18  geirha: dmarkey: No.
00:18  nDuff: hamush, if ! your_program ; then echo yay; fi
00:19  dmarkey: geirha: so function1 | function2 are all in the same process space?
00:19  hamush: nDuff: perfect, thanks!
00:19  nDuff: dmarkey, not in and of themselves, no; however, if they're part of a pipeline, or enclosed in parens, or one of many other things are true, then they can end in a subshell.
00:19  geirha: dmarkey: No, the pipe will make both run in separate subshells
00:19  geirha: !faq disappear
00:19  greybot: http://mywiki.wooledge.org/BashFAQ/024 -- I set variables in a loop. Why do they suddenly disappear after the loop terminates? Or, why can't I pipe data to read?
00:20  dmarkey: so, that is a child process..
00:21  geirha: What are you trying to achieve?
00:21  nDuff: dmarkey, correct. Functions don't run in subshells (child processes) in and of themselves, but there are a great many things you can do which will cause that to happen.
00:22  dmarkey: geirha: im just boning up on my shell knowledge.
00:23  geirha: Right, well if you needed one function to not run in a subshell, you could use process substitution.  function2 < <(function1)
00:23  geirha: That would make function2 run in the same shell, function1 in a subshell
00:24  geirha: Apart from that, it's equivalent to function1 | function2
00:33  republican_devil: ok got it!!
00:33  republican_devil: woo hoo
00:35  {xmb}{bottz}7man: greatnec eh
00:36  republican_devil: http://pastebin.ca/1987637
00:36  republican_devil: OH YEAH!!
00:36  republican_devil: add to wiki?
00:37  republican_devil: geirha: thx
00:45  republican_devil: how wrong is that code?
00:48  republican_devil: http://pastebin.ca/1987646 fixed
00:52  Julian: OUT="$(mktemp)"
00:52  Julian: outpwd="$(pwd)"
00:52  Julian: for i in $(seq $1 $2); do cat "$i.txt" | $3 > $OUT | cp $OUT $outpwd/"$i.txt"; done
00:53  Julian: I want to take several files ... 1.txt, 2.txt ... etc ... and with the $ 3 ... use eg grep-v something ... and send me to the path where I stand ... taking it is with the $ outpwd and writing the file with the variable $ i. ..
00:53  Julian: I can have wrong. I still have the files empty?
00:53  Julian: ant to filter a file onto itself.
00:53  Julian: what to filter a file onto itself.
00:54  Julian: sorry
00:54  Julian: want to filter....
00:54  cthuluh: hmmmpf
00:54  Julian: any person.. help me plz..
00:54  cthuluh: I don't understand what you want to do
00:54  cthuluh: !quotes > Julian
00:54  greybot: Julian: "USE MORE QUOTES!" They are vital. Also, learn the difference between ' and " and `. See <http://mywiki.wooledge.org/Quotes> and <http://wiki.bash-hackers.org/syntax/words>.
00:54  cthuluh: !seq > Julian
00:54  greybot: Julian: seq(1) is a highly nonstandard external command used to count to 10 in silly Linux howtos. Use one of these instead: for x in {1..10} (bash3.x) or for ((x=1; x<=10; x++)) (bash 2.04+) or i=1; while [ $i -le 10 ]; do ...; i=$(($i+1)); done (ksh/POSIX)
00:54  Julian: want to filter a file onto itself.
00:55  cthuluh: cp doesn't read on stdin
00:55  Julian: by example...
00:55  cthuluh: so foo | cp ... doersn't do what you want
00:55  cthuluh: now, I already said that I don't understand what you want to do
00:56  {xmb}{bottz}7man: eval man
00:56  {xmb}{bottz}7man: heh
00:57  Julian: cthuluh, I have a file .. for example ... file1.txt, I say pass filter type GREP and rewriting the same file ... file1.txt in the same directory
00:58  gniourf_gniourf: you can't
00:58  cthuluh: you can't read and write a file at the same time
00:59  cthuluh: but you can use tmp files
00:59  cthuluh: for f in file*.txt; do grep -v foo < "$f" > "$f".tmp; mv "$f".tmp "$f"; done # something like that
01:00  gniourf_gniourf: you can also use sed with the -i switch
01:00  gniourf_gniourf: (it uses temp files behind the scene)
01:00  cthuluh: or ed (which doesn't use temp files): for f in file*.txt; do printf 'g/foo/d' w | ed -s "$f"; done
01:03  Julian: cthuluh, is better to use temporary files or not?
01:04  cthuluh: Julian: I have no opinion about that
01:04  Julian: cthuluh, mmm ok. thanks.
01:05  cthuluh: since you want to edit files, and since ed(1) is a file editor, I'd use ed(1), that's all, but do what you want
01:05  cthuluh: !faq replace > Julian, also
01:05  greybot: Julian, also: http://mywiki.wooledge.org/BashFAQ/021 -- How can I replace a string with another string in all files?
01:06  Julian: cthuluh, thanks...
01:09  bobbytek: if i use - to demarcate stdin for a command, how do I terminate it?
01:11  cthuluh: bobbytek: what do you mean, using 'demarcate' and 'terminate'?
01:11  JyZyXEL: is there a way to detect and block a script from being run multiple times at once
01:12  cthuluh: !faq mutual > JyZyXEL
01:12  greybot: JyZyXEL: http://mywiki.wooledge.org/BashFAQ/045 -- How can I ensure that only one instance of a script is running at a time (mutual exclusion)?
01:12  JyZyXEL: lock files are too slow
01:13  cthuluh: compared to what?
01:13  JyZyXEL: thats what im asking
01:13  JyZyXEL: i need something faster than lock files
01:14  cthuluh: you can't say that lock files are slow if you can't compare it with another system
01:14  JyZyXEL: i don't know other systems
01:14  JyZyXEL: i wanna know faster solutions
01:16  bobbytek: cthuluh, well there is a command that I need to run that uses stdin if you terminate the command with -
01:22  bobbytek: But, then it just keeps reading
01:22  bobbytek: I need to terminate the read somehow
01:22  bobbytek: Not sure the standard way
01:22  cthuluh: well, where does this command read from?
01:22  bobbytek: stdin
01:22  cthuluh: -_-
01:22  clyphox: and you want it to exit when?
01:22  gniourf_gniourf: bobbytek, tell us more... what command is it?
01:22  bobbytek: http://www.maatkit.org/doc/mk-visual-explain.html
01:22  bobbytek: "mk-visual-explain transforms EXPLAIN output into a tree representation of the
01:22  bobbytek: query plan.  If FILE is given, input is read from the file(s).  With no FILE, or
01:22  bobbytek: when FILE is -, read standard input.  For more details, please use the --help
01:22  bobbytek: option, or try 'perldoc /usr/bin/mk-visual-explain' for complete documentation."
01:22  geirha: republican_devil: That's good. You're only missing the shebang.
01:22  clyphox: have you got a script already bobbytek ?
01:22  bobbytek: just like the ricky martin song
01:23  bobbytek: clyphox: no, just invoking from command line
01:23  clyphox: example please....
01:23  bobbytek: I could just put my input in a file, but was curious what the convention is
01:23  clyphox: i just dont get the problem
01:23  gniourf_gniourf: mk-visual-explain << EOF
01:23  bobbytek: heredoc style?
01:23  bobbytek: lemme try that
01:23  geirha: republican_devil: Do the real directories have dates like that in their name? If so, it's much easier.
01:24  bobbytek: no dice, it just prints a > on the next line
01:24  gniourf_gniourf: bobbytek, type your stuff, and when you're done, type EOF (alone on a single line)
01:24  bobbytek: l
01:25  republican_devil: they do lol
01:25  republican_devil: rather a hardcore solution
01:26  clyphox: I'm totally confused, what is the problem bobbytek ?
01:27  geirha: republican_devil: dirs=(*/) n=${#dirs[@]}"; echo "Last is ${dirs[n-1]}"; echo "Everything before last is: ${dirs[@]::n-1}"
01:27  clyphox: you have mk-visual kicking out some lines from presumably a mysql stdin... you want to read it in the script?
01:29  geirha: geirha: Dates in the form YYYYMMDD will sort the same by the date as lexicographically (which bash does when expanding globs)
01:30  geirha: err
01:30  bobbytek: clyphox: no, just from stdin
01:30  bobbytek: I copy the query to the command line
01:30  bobbytek: and paste
01:30  geirha: republican_devil: ^   Accidentally got a rogue " in there too :/
01:30  bobbytek: but even with heredoc style it does nothing
01:30  bobbytek: oh well
01:30  bobbytek: fail
01:31  clyphox: u want to paste the mk-visual output into a script?
01:31  bobbytek: mk-visual-explain --host bidb01 --port 3306 --database mkschema --user bifxro --password ***** -<<EOF
01:31  bobbytek: followed by my query
01:31  bobbytek: followed by:
01:31  bobbytek: <EOF
01:31  bobbytek: it just terminates
01:31  clyphox: no <EOF
01:31  clyphox: line must be just EOF
01:31  bobbytek: well, EOF
01:31  bobbytek: that was the prompt
01:31  bobbytek: er, >
01:31  bobbytek: not <
01:32  clyphox: so the query u want as input for the script is only 1 liner SQL query right?
01:33  bobbytek: http://pastebin.com/7640w5Uc
01:34  bobbytek: less the 'explain' clause
01:34  bobbytek: I guess its the tool
01:35  clyphox: yes i've never used explain myself
01:35  bobbytek: anyways, thanks for your help :)
01:36  clyphox: one sec mate lol
01:37  republican_devil: damn it jim!
01:37  republican_devil: whats this [2] crap bash ararys?
01:38  clyphox: bash arrays suck
01:38  geirha: !array
01:38  greybot: An array maps numbers to strings. Bash 4 also has associative arrays (maps strings to strings). See http://mywiki.wooledge.org/BashSheet#Arrays
01:42 --- Muzer is now known as MuzerAway
01:43  clyphox: gdamnit i cant install mk
01:46  bobbytek: hehe
01:46  bobbytek: I think i figured out the issue
01:46  bobbytek: i needed to add --connect
01:46  clyphox: anyway it allows u to run it against a tmp file containing the query btw
01:46  clyphox: may have been easier that route too i guess
01:47  bobbytek: clyphox: http://pastebin.com/20N2bPNy
01:48  bobbytek: clyphox: ya, that's what I did to get it working
01:48  bobbytek: then I did the here doc style
01:48  bobbytek: as you can see, the query really needs the newlines!
01:48  bobbytek: :)
01:54  clyphox: yop yop
01:54  clyphox: most advanced mysql thing i know is union lol
01:55  psycho23: so I've got a problem and I think bash might be able to help
01:55  psycho23: any suggestions?
01:56  damnshock: mmm
01:56  mattcen: psycho23: Yes. Start by defining your problem.
01:56  damnshock: ...
01:56  clyphox: yop ^^
02:00 * clyphox just sent the answer via telekenesis
02:01  psycho23: no I've already tried rsync
02:01  clyphox: damn :/
02:02  psycho23: well for all of the people that didn't come from unarus:
02:02  psycho23: so I've got 3 directories:   a/banana b/banana c/banana Inside of each banana there are files.  What sort of bash command could I execute to get the differences between these three bananas (meaning, what files collide with each other if I decided to merge them into one directory?)
02:03  psycho23: within each banana there are also a hiearchy of directories
02:03  clyphox: thats easy
02:03  clyphox: find +md5sum
02:03  mattcen: I'd do it with two or three 'diff' commands.
02:03  clyphox: then diff the outputs
02:03  psycho23: but what about the files that are but aren't in other bananas?
02:04  mattcen: Or that, depending on what sort of precision you're looking for.
02:04  psycho23: Hmmm defining my problem, I think that would be good for defining what kind of output I want
02:05  clyphox: thing is u can only compare 2 at once
02:05  clyphox: i guess :/ never compared more stuff i suppose
02:06  mattcen: There's always diff3, but its output confuses me, and it doesn't recurse directories.
02:07  clyphox: cool i just learnt something :)
02:10  psycho23: well I need to keep track of which file is from which base directory: 'a' 'b' or 'c'.  Then I can `cd` into 'a' and then create a filelist with `find -type f > ~/a_file_list.txt`.  But then if I have 'a_file_list.txt', 'b_file_list.txt', 'c_file_list.txt' how can I get output that looks like this:    'a', 'b' have the same file: ./banana/chicko/zimbres/nachos/tacos.dat
02:11  psycho23: no no!
02:11  psycho23: Not 'same file'
02:12  psycho23: I mean, the output would be:       'a', 'b' would overwrite eachother: ./banana/chicko/zimbres/nachos/tacos.dat
02:12  murder: how can I use sed to replace a string in all files of the current directory?
02:13  psycho23: I don't think 'psycho23' and 'murder' should be in the same channel
02:13  murder: haha
02:13  psycho23: find -maxdepth 1 -type f -exec sed 's/banana/apple/' '{}' \;
02:14  clyphox: murder: sed -i surely
02:14  murder: do i really need the 'find' thing?
02:14  murder: wouldnt sed happen to work if I use * ?
02:15  psycho23: well as long as `echo *` doesn't print out a directory name, then yes.
02:15  clyphox: find . -type f -exec grep -l "one" {} \; | xargs sed -i 's+one+1+g'
02:15  clyphox: will replace all "one" with "1"
02:16  murder: the string is GVP_APPID=undefined, I need to replace it to GVP_APPID=12345
02:16  clyphox: nb: untested on files/dirs with spaces in names
02:16  murder: i just need to replace the cur dirs files
02:16  murder: do i need escape char for = ?
02:17  clyphox: find . -type f -exec grep -l "^GVP_APPID=undefined" {} \; | xargs sed -i 's+^GVP_APPID=undefined+GVP_APPID=12345+g'
02:17  psycho23: that looks scary
02:17  clyphox: it uses ^ so "lines starting with" "^GVP_APPID=undefined"
02:17  psycho23: because I don't know about those spaces
02:18  psycho23: filename spaces from grep -l
02:18  psycho23: to xargs
02:18  clyphox: yes spaces provides an issue
02:18  psycho23: but if there are no spaces then all is good
02:18  psycho23: and even if there are spaces, maybe the bash errors can be ignored
02:18  psycho23: if the files that had the error to be accessed by sed were not necessary to replace
02:19  murder: youre gonna laugh at me, i want to do that on windows, without bash, just using a win32 sed binary
02:19  clyphox: the smart way is to use one of a million search and replace scripts/programs
02:19  psycho23: HAAAAAAAAAAAAAAAHAHAHAHA
02:19  murder: HAHAHA
02:19 * clyphox points at the #bash thingee ;)
02:20  psycho23: yeah, I always wondered by win32 and bash and using sed, and maybe importing debian to windows xp
02:20  murder: rofl
02:20 --- qloc is now known as cloq
02:21  murder: its a god damn win2k3 server, i really hate to say that, they couldve at least put those log files @ solaris
02:21  clyphox: there is a nice win32 search/replace program but i forgot its name sry
02:23  likewhoa: nothing in windows is nice
02:24  psycho23: I didn't know windows used log files
02:24  psycho23: </badjoke>  Actually it depends on the software, like apache2 uses logs
02:25  clyphox: lies the new shell on windows is fantastic
02:25  clyphox: you can add a new administrator in under 120 bytes lol
02:25  clyphox: http://www.exploit-db.com/exploits/15202/
02:25  psycho23: if I were you murder, I would first try installing that linux-windows thing cyrex? cinrex? cybex?
02:26  psycho23: ciberex?
02:26  likewhoa: you mean powershell lol
02:26  likewhoa: psycho23: gentoo-prefix is nice
02:26  clyphox: cygwin?
02:26  psycho23: cygwin!
02:30  psycho23: cygwin's gotta have sed, plus awk, plus bash, plus grep, plus perl, plus vim, plus ed, plus emacs, plus wget, plus that linux keylogger for when you forget your password... *wink*
02:31  clyphox: screen?
02:31  murder: no, dont think it has screen
02:31  clyphox: aye
02:32  clyphox: i dont leave homewithout cygwin lol, memorystick<3
02:32  murder: theres a pack called GNU Utilities
02:32  murder: its a zip file with a lot of common *nix binaries
02:33  murder: like grep, awk, sed
02:33  psycho23: Yeah I went to this one college computer lab and I had this .bat script that used this executable to remove 34% of the running windows processes to make the computer run faster...and then I told the admin and then he made all of the computers unable to close the running processes that do nothing but clog up the ram :(
02:34  psycho23: well maybe they were for security reasons...
02:34  psycho23: or admin usages...
02:34  psycho23: or printer uses...
02:34  psycho23: or logging..
02:34  clyphox: voodoo
02:34  psycho23: but still!  the ram!
02:35  psycho23: good ol' windows batch, bash version .000001 alpha
02:35  psycho23: and bash is at currently about version .0000001 alpha
02:42  clyphox: gdamnit
02:42 * clyphox kicks firefox4
02:42  mingdao: God's last name is not damn!
02:43  clyphox: its fucking with my language
02:43  psycho23: uh oh
02:43 * psycho23 puts on his tin foil hat
02:43  clyphox: it wants me to spell like an american
02:44  clyphox: at least my main plugins work now but still i dont like "americanizations"
02:44  clyphox: </rant>
02:44  psycho23: i can't wait until urbandictionary becomes the official american dictionary
02:45  clyphox: may be awhile still lots of smart people there
02:48  psycho23: actually I was being silly at first but now that I think about it is possible!  That reminds me of the last time I stated to my cousenlor: "The psychiatrist is Spanish, everyone knows Spanish people can't be psychiatrists." At first I said that because I couldn't cope with someone that I couldn't defend myself against...and then I started thinking: "Maybe Spanish people _can't_ be psychiatrists!"
02:48  psycho23:  I swear, some of the silly stuff that comes out of my mouth might make me millions one day!
02:50  psycho23: I could write a book: "Urban Dictionary for Amendment 14 of the US Constition Act" or "Spanish people can't be psychiatrists for Dummies by psycho23" and then on the back of each book it'll have: "psycho23 has been researching this topic on #bash on freenode and has done forensic research on google to come up with smashing claims that even American society knows may or may not be true but he...
02:50  psycho23: ...unleashes great scientific evidence to support one-of-a-kind claims."
02:51  clyphox: i think you should write that book
02:51  clyphox: i've read worse
02:53  mingdao: psycho23: you picked the right nick
02:57 --- awb_ is now known as awb
--- Log closed Thu Nov 11 03:21:38 2010
--- Log opened Thu Nov 11 03:27:02 2010
03:27 --- Users 501 nicks [0 ops, 0 halfops, 0 voices, 501 normal]
03:28 --- Channel #bash was synced in 119 seconds
03:33  sente: murder: cygwin has screen
03:36  fbuilesv: Any idea of why my shell commands slow down once I set RUBYOPT="rubygems"? My .bash_profile (https://gist.github.com/671882) is not calling Ruby for anything AFAIK.
03:43  sente: fbuilesv: is there a reason for the extra 'sh -c' in [alias free='sh -c "du -sx /System/ &> /dev/null"'] instead of just [alias free='du -sx /System &> /dev/null']
03:44  fbuilesv: sente: not really, I just used to use the command by hand and ended up copying it like that.
03:44  sente: nod
03:47  sec^nd: hi
03:48  sec^nd: if I source a script in bash do the variables stored in that file come with it ?
03:48  fbuilesv: This small vid. illustrates what I meant in the early message by slow in case it helps: http://music.febuiles.com.s3.amazonaws.com/screen.mov
03:48  sec^nd: I'm trying to make a config.sh script
03:48 * [gnubie] waves
03:48  cthuluh: sec^nd: yes
03:48  damnshock: sec^nd: yes
03:48  cthuluh: !.sh > sec^nd , but...
03:48  greybot: sec^nd , but...: Don't use extensions for your scripts. Executables shouldn't have extensions. Just like you run 'ls' instead of 'ls.elf', you should run 'myscript' or './myscript', not 'myscript.sh'. In any case, putting 'sh' extensions on *bash* scripts (which are *not* sh scripts) is retarded.
03:48  sec^nd: thanks cthuluh and damnshock
03:48  [gnubie]: i need your advice on my simple bash script at http://www.pastie.org/1288833
03:49  sec^nd: ...
03:49  [gnubie]: somehow, line 9 of the http://www.pastie.org/1288833 is not being executed
03:51  sec^nd: can I have a '.' char in variable names ?
03:51  [gnubie]: basically, i just want to check if the $TMPFILE exist and it contains the word "Complete!"
03:51  cthuluh: sec^nd: no
03:51  cthuluh: !quotes > [gnubie]
03:51  greybot: [gnubie]: "USE MORE QUOTES!" They are vital. Also, learn the difference between ' and " and `. See <http://mywiki.wooledge.org/Quotes> and <http://wiki.bash-hackers.org/syntax/words>.
03:51  cthuluh: !varcaps > [gnubie]
03:51  greybot: [gnubie]: By convention, we capitalize environment variables (PAGER, EDITOR, ..) and internal shell variables (SHELL, BASH_VERSION, ..). All other variable names should be lower case. Remember that variable names are case-sensitive; this convention avoids accidentally overriding environmental and internal variables.
03:53  cthuluh: [gnubie]: your test verifies if there is only one line that contain exactly the string 'Complete!'
03:54  [gnubie]: cthuluh: exactly. and if the word "Complete!" exist in the $TMPFILE, i want the commands to be executed
03:54  cthuluh: [gnubie]: if [[ -f $tmpfile ]] && grep -qi "$complete" "$tmpfile"; then...
03:54  [gnubie]: but that doesn't happen
03:56  cthuluh: [gnubie]: let me rephrase it: with what you wrote, you verify that only one line in the file contains the word "complete", and that that line is exactly "Complete!"
03:57  cthuluh: it's not the same thing as checking that the file contains the string "Complete!"
03:57  cthuluh: !` > [gnubie] , also
03:57  greybot: [gnubie] , also: The backquote (`) is used in the old-style command substitution, e.g. foo=`command`. This syntax is deprecated in favor of foo=$(command). Backslash handling inside $() is less surprising, and $() is easier to nest. See http://mywiki.wooledge.org/BashFAQ/082
03:58  [gnubie]: i want to check if the $tmpfile exist and if it does, it should contain the word "Complete!" so that if both conditions are met, the lines 10-12 must be executed..
03:59  cthuluh: then use what I wrote
04:00  [gnubie]: thank you for your advices.. i will note them. now, i'm going to try the script..
04:01  cthuluh: good night, and good luck
04:02  [gnubie]: thank you very much.. good night.. ;)
04:37  Error404NotFound: how can i rename all filename.txt files in current dir to filename-`date +%b%d%Y`.ext?
04:41  yitz_: !rename > Error404NotFound
04:41  greybot: Error404NotFound: rename(1) could be one of three or four different programs -- or you might not have it on your system. A loop or find expression that uses mv is safer. See also !faq rename
04:41  yitz_: !lame > Error404NotFound
04:41  greybot: Error404NotFound: for f in ./*.wav; do lame "$f" "${f%.wav}.mp3"; done
04:41  Error404NotFound: i endeded up using "find . -type f -name *.ext" :)
04:55  nDuff: Error404NotFound, without more quoting, that would behave in a way you don't expect if files with names matching *.ext exist in the current directory
04:55  Error404NotFound: hmmm
04:57  nDuff: Error404NotFound, if you make it -name '*.ext', then that's safe...
04:57  nDuff: Error404NotFound, ...otherwise, if you have a file named foo.ext, it'll be passed to find like so:
04:57  nDuff: find . -type f -name foo.ext
04:57  Error404NotFound: hmm, is ee, thanks man, appreciate it :)
04:57  Error404NotFound: see*
05:01  winkey: how do you get the inputs for dialog --menu from a loop?
05:03  winkey: basicly an ap needs arg arg arg arg.... derived from a loop
05:04  winkey: !dialog
05:04  greybot: Dialog makes it easy to generate menus, progress bars and forms for your scripts. See dialog, xdialog, kdialog, gtkdialog, zenity and kommander.
05:05  winkey: ! dialog
05:07  winkey: !read
05:07  greybot: help read <ENTER> read http://wiki.bash-hackers.org/commands/builtin/read
05:16  winkey: ok that is in the faq
05:49  mattcen: Hi all, is it possible to prevent Tilde Expansion from being displayed on the command line when tab is pressed? That is, I would like 'ls ~/Mu<TAB>' to be displayed (and more importantly stored in history as 'ls ~/Music/' instead of 'ls /home/mattcen/Music/'
06:02  SkyMarshal: Hi matt, your question got me curious, found a good thread on doing that here:
06:02  SkyMarshal: http://www.linuxquestions.org/questions/linux-software-2/how-to-stop-bash-from-replacing-~-with-home-username-643162/
06:07  winkey: why does this fail but without mylist=$(...) it works? mylist=$(dialog --separate-output --checklist "$header" 40 150 20 "${m[@]}")
06:08  twkm: geez i hate blog urls.
06:12  transue_: Anyone know how to do a search and replace but replace with newlines in sed?
06:13 --- transue_ is now known as transue
06:13  transue: Anyone know how to do a search and replace but replace with newlines in sed?
06:15  twkm: don't use sed.
06:16  twkm: but if you insist, try asking ##sed.
06:16  transue: twkm: thanks
06:18  qubit: ok, I'm doing something like `output="$( cmd1 | cmd2 | cmd3; exit $(( ${PIPESTATUS[0]} + ${PIPESTATUS[1]} + ${PIPESTATUS[2]} )) )"; ret=$?` this works perfectly in my terminal, but when i put it in a script ret is always 0, no matter what it actually exits with, why?
06:25  qubit: nevermind, apparently if you do `local output="$( ... )"`, $? is the status of `local` not of the $()
06:25  qubit: so you can local the output of $() if you want its return status. that seems a bit stupid :-/
06:28  twkm: local output; output=$(...)
06:32  qubit: ya, i can do that. i guess i'm just used to programming, where thing like local arent actual functions that can have a return status
06:38 --- h4x0r` is now known as h4x0rham
06:39 --- h4x0rham is now known as h4x0r`
07:13  jmut: hi. I am grepping some content with    grep -inIEr --include="*.php"  '<h1>(.*)</h1>' ./                But I'd like to extract  the    (.*) part so I can further process it. currently it spits whole line and highlighting the match
--- Log closed Thu Nov 11 07:22:24 2010
--- Log opened Thu Nov 11 07:22:44 2010
07:22 --- Users 496 nicks [0 ops, 0 halfops, 0 voices, 496 normal]
07:23  jmut: Bushmills: thanks. will check
07:24 --- Channel #bash was synced in 114 seconds
07:31  TheBonsai: Jaja... die Pest...
--- Log closed Thu Nov 11 09:02:32 2010
--- Log opened Thu Nov 11 09:02:55 2010
09:02 --- Users 496 nicks [0 ops, 0 halfops, 0 voices, 496 normal]
09:04 --- Channel #bash was synced in 122 seconds
--- Log opened Thu Nov 11 09:11:20 2010
09:11 --- Users 496 nicks [0 ops, 0 halfops, 0 voices, 496 normal]
09:12 --- Channel #bash was synced in 84 seconds
09:15  jaalto: pgas: side note: the "^" was a bash alternative for "!"
09:17  jaalto: I have wird problem. Whenever I try to use "^" character in regular expressions it is ignored under Bash. If I change shells (tcsh), the same commands works fine. An example
09:17  jaalto: echo 1 | egrep '^[0-9]'
09:17  jaalto: => nothing
09:19  koala_man: # echo 1 | egrep '^[0-9]'
09:19  evalbot: koala_man: 1
09:20  koala_man: jaalto: how about LC_ALL=C LC_CTYPE=C LC_COLLATE=C grep '^[0-9]' <<< "1"
09:22  jaalto: koala_man:  LC_ALL is not option, because I want to retain UTF, but let's see the rest
09:24  koala_man: jaalto: this is what's known as troubleshooting. the point is to find out what's wrong
09:26  koala_man: it doesn't matter if the working case doesn't do exactly what you want, since it's only a step in finding the final solution
09:28  pgas: also setting LC_ALL will only modify how grep matches, not the output
09:32  {xmb}{bottz}7man: of the passthru
09:32  {xmb}{bottz}7man: btw php doesnt need quotes for text or nums
09:35  SkyMarshal: Noob bash question - I can see how to diff files in bash, but is there a command to merge them too, or do i have to use a vcs for that?
09:35  twkm: patch, vcs, ...
09:37  SkyMarshal: patch, gracias
09:41  Piratero: Hello everyone.
09:41  Piratero: I know that I can ignore all commands beginning with a space.
09:41  Piratero: But is it possible to have it do the complete opposite?
09:42  Piratero: my HISTSIZE is 16384 and I think I can limit that by only keeping the commands I really need
09:43  Piratero: I could very well just start using a space at the beginning of every command that I know I won't need, but that's a bit painful to get used to.
09:43  koala_man: [^ ]*
09:44  Piratero: Hm...
09:44  Piratero: Doesn't that just ignore things beginning with a space?
09:45  pgas: [^ ] matches anychar that is not a space
09:46  Piratero: Ah
09:46  Piratero: Oh, I see! Thanks!
09:50  {xmb}{bottz}7man: lab
09:59  Piratero: Wow, that works great.
09:59  Piratero: Eh, minor issue that I'll have to look into now... all commands that are saved in .bash_history now have an extra space...
09:59  Piratero: Maybe I can process the HISTFILE upon every logout?
10:00  psycho23: why don't we use mawk instead of gawk?
10:01  Bushmills: we don't know why you don't
10:02  Piratero: mawk?
10:02  Piratero: awk?
10:02  Piratero: gawk?
10:02 --- Natch is now known as Natch|
10:02  psycho23: well, I say replace all awks with mawks
10:02  pgas: most of the time it doesn't really matter
10:02  Bushmills:   /etc/alternatives/awk --> your.awk.of.choice
10:03  {xmb}{bottz}7man: yeah mawk++
10:04  psycho23: what!?  doesn't matter!?  *stands up on a podium* does it matter if we use vim or ed?  does it matter if we use firefox or opera?  does it matter that gawk would take 200 milliseconds more than mawk to process a 200,000 lined text file?  I say, down with communism!
10:04  Bushmills: oh, sry. this is bash, not debian ...
10:05  Piratero: Hahah
10:06 * Bushmills wonders why someone would carry awk implementation matters to #bash
10:06  psycho23: because awk to bash is like sprintf to C
10:07  Bushmills: strange notion
10:07  pgas: I've seen better trolls
10:07  psycho23: yeah I get my logic from the SAT
10:14  complete: Hey People! How do i do "watch dmesg | tail"?
--- Log closed Thu Nov 11 10:15:57 2010
--- Log opened Thu Nov 11 10:16:21 2010
10:16 --- Users 506 nicks [0 ops, 0 halfops, 0 voices, 506 normal]
10:16 --- Server: [hubbard.freenode.net] [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
10:16  izz: hey guys, what's the standard way in a script to 'wait until a ceratin line appears in a log file'?
10:17  Piratero: Heh
10:17  Piratero: Man, I can't believe I'm running QEMU on this little netbook.
10:18 --- Channel #bash was synced in 136 seconds
10:20  pgas: izz: tail -f log | grep blah | while read;do ..
10:21  pgas: so it's not perfect
10:21  pgas: !faq no output
10:21  greybot: http://mywiki.wooledge.org/BashFAQ/009 -- What is buffering?  Or, why does my command line produce no output: tail -f logfile | grep 'foo bar' | awk ...
10:21  pgas: s/so/though
10:24  {xmb}{bottz}7man: u dunno believe your own schtuff doing ? no good
10:28 --- user is now known as Kuaeser
10:30  SmokeyD: hey everyone. If I use find -type f -exec something '{}' \; Will find first find all the files and then start executing 'something' for each one? Or will it find the first result, and then execute something, and then look for the second result, etc. The reason I ask is if I can safely use it on a directory for all the current files in there, but know that if a new file is added to that directory after I executed the find command, but before it finishes,
10:33 --- r0dr1g0 is now known as Guest39521
10:36 --- Guest39521 is now known as r0dr1g0
10:42  koala_man: SmokeyD: it's unspecified. in practice it'll run it immediately, and the fs will decide if newly created files are also included
10:43  SmokeyD: koala_man: ok. I am running it on an ext3 fs. Any ideas what ext3 might decide?
10:44 --- mohan is now known as Guest5310
10:47  koala_man: SmokeyD: nothing predictable
10:50  nicola_pav: hello. i want to write a bash script that will return to me the CPU usage of a certain process like mysqld
10:51  nicola_pav: mysqld is consuming CPU. I want to grab this value via bash
10:51  nicola_pav: any ideas?
10:51  trash: ps might help.
10:52  nicola_pav: i use ps to check if services r unning?
10:52  nicola_pav: how can  iuse ps to return to me CPU usage?
10:53  trash: nicola_pav: man ps
10:56  SmokeyD: nicola_pav: the ps command can give you all sorts of info on a process, amongs which the user the process is running as, the memory usage, the cpu usage, etc.
10:56  nicola_pav: trash and SmokeyD thanks
10:56  nicola_pav: i am looking at ps now
10:57  SmokeyD: nicola_pav: ps auwx will give you a good amount of info, you can pipe that to grep to find only the mysql processes like ps auwx|grep mysql
10:58  SmokeyD: nicola_pav: and like trash sai, the man pages will give you the details of the commands. man grep and man ps.
10:58  nicola_pav: i always use grep with ps
10:58  nicola_pav: did not know what options to use to get out CPU
11:00 * sente uses ps -wwFC<process-name> 
11:00  sente: and use awk to grab certain columns if need b e
11:09 * [gnubie] waves
11:09  [gnubie]: what could be the problem on this script at http://www.pastie.org/1289420 ?
11:11  Knirch: [gnubie]: what's the problem?
11:11  [gnubie]: somehow, it cannot perform the commands
11:12  Knirch: set -x
11:12  Knirch: and see what it actually runs
11:13  [gnubie]: the current install version is 1.5 and the latest version in the repository is 1.16 already. now, somehow the comparison is not performed or maybe bash sees that 1.5 is 1.50 which is actually bigger than the 1.16
11:13  nicola_pav: sente: i use ps -eo to get the cpu
11:13  nicola_pav: but i am always getting a constant value
11:13  nicola_pav: where when i run htop
11:14  nicola_pav: i am getting real values
11:14  nicola_pav: how can i get the LIVE CPU usage of a process in bash script?
11:14  nicola_pav: like the values i m getting when i run htop
11:14  [gnubie]: ++ cat /tmp/tmpfile-1
11:14  [gnubie]: ++ cat /tmp/tmpfile-2
11:14  [gnubie]: + [[ 1.5 < 1.16 ]]
11:14  nicola_pav: ps is not returning real values
11:15  DSAFEW\: nicola_pav, man ps look for "--format"
11:15  pgas: gnubie < compares strings, bash cannot compare floats
11:15  [gnubie]: nicola_pav: call "top -n 1" perhaps?
11:16  Knirch: [gnubie]: well, that won't compare it the way you think it does, it's a lexicographically compare
11:16  [gnubie]: what do you guys suggest?
11:16  pgas: nicola_pav: a process is either using 100% or 0% at any given time, you have to sample. maybe look at the -b option of top
11:17  Knirch: [gnubie]: comparing version numbers is tricky to say the least, unless you're absolutely sure it has a specific format, that'll never change, if they start introducing +b9393 or such, your compare function could get really complex
11:17  nicola_pav: pgas: i want to get a similar value as i get with htop
11:17  [gnubie]: nicola_pav: or have sysstat installed on your system and call it for a daily stats
11:18  [gnubie]: Knirch: i see..
11:18  Knirch: [gnubie]: I'd probably if the format was always number.number split the string at . and compare the different chunks.
11:18  [gnubie]: but i need to do the automatic update of our in-house web app
11:19  [gnubie]: now looking for other ways to do it
11:19  Knirch: yes, hop to it, write a compare function :D
11:19  DSAFEW\: nicola_pav, are you runningthis? ps -eo %cpu
11:21  Knirch: you could always cheat and translate the version number to a bigger number, if (($(printf "%d%04d" ${value1//./ }) < $(printf "%d%04d" ${value2//./ }))); then .. :)
11:21  nicola_pav: DSAFEW\: yes i did.
11:21  nicola_pav: it returns always a constant value
11:21  nicola_pav: i want real CPU values liek the ones i get with htop
11:22  Knirch: [gnubie]: please note that will ONLY work as intended if the version number only has one dot and is always numbers
11:23  [gnubie]: Knirch: i will try that
11:24  [gnubie]: we use only 1 dot and all numbers
11:27  DSAFEW\: nicola_pav, I read the ps man page, it answered your question
11:28  nicola_pav: DSAFEW\: so i am missing sth?
11:28  nicola_pav: i run the command u indicated
11:29  Fridgeo: hey on a output for say ls -d /this/bob/this how would i split everything out just to leave this ? so everything after the last /
11:29  DSAFEW\: nicola_pav, and read what it does, it's not supposed to do top output
11:31  sente: nicola_pav: grep cpu /proc/ and /proc/cpuinfoinfo couldn't hurt either
11:33  Mohan: # VAR="/test/test1/dir1"; echo ${VAR%/}
11:33  evalbot: Mohan: /test/test1/dir1
11:38  Mohan: # VAR="/test/test1/dir1"; echo ${VAR#/*/*/}
11:38  evalbot: Mohan: dir1
11:38  Fridgeo: haha cool what should i google for to understand that substitution?
11:39  Fridgeo: does it have like a bash name thing liek bash substitution? or something? or expansion?
11:39  Mohan: man bash has an explananation
11:39  Mohan: or you can use basename command to do the same.
11:39  erUSUL: !pe
11:39  greybot: Parameter Expansion is the expansion of a parameter: "$foo", "$1". You can use it to perform string operations: "${file%.mp3}", "${0##*/}". Remember to *always* quote them. See http://mywiki.wooledge.org/BashSheet#Parameter_Operations
11:41  Fridgeo: cool thanks ;-)
11:42  [gnubie]: i added 2 lines just to remove the dot between numbers and try to compare again. but still, it doesn't work
11:42  [gnubie]: kindly check http://www.pastie.org/1289420
11:43 --- [1]The-Bat is now known as The-Bat
11:43  [gnubie]: this was the output when i executed the script:
11:43  [gnubie]: + [[ 15 < 116 ]]
11:43  [gnubie]: and this was the output after the comparison => There is no update as of this moment.
11:44  pgas: < compares strings not numbers
11:44  Bushmills: !((
11:44  greybot: ((...)) is an arithmetic command, which returns an exit status of 0 if the expression is nonzero, or 1 if the expression is zero. Also used as a synonoym for "let", if side effects (assignments) are needed. See <http://mywiki.wooledge.org/ArithmeticExpression>.
11:47  lundtor: when using the find command, how do i ignore a .directory and all things within it?
11:48  pgas: !svn
11:48  greybot: If you're considering removing .svn directories, first read "svn --help export". If you're still convinced: find . -depth -name .svn -exec rm -rf {} \; To remove everything but the svn directories: find . -name .svn -prune -o -exec rm -rf {} \;
11:48  lundtor: im trying to find all directories named .git, but theres also a .repo/something.git, and i dont want something.git to show
11:48  [gnubie]: pgas: yeah, i already changed the < to -lt and it worked
11:49  [gnubie]: thank you guys for all your help.. ;)
11:50  lundtor: since its inside .repo
11:50  Mohan: lundtor: find -type d -name '*.git' /dir
11:52  pgas: find . -name .repo -prune -o -type d -print
11:55  lundtor: Mohan: yes, but it still matches *git inside .repo, so it doesnt get me further
11:56  lundtor: i want to get rid of .repo and everthing inside this dir in my find output
11:57  lundtor: Mohan: http://pastebin.com/4kcT255x  lines 1,2,3 is the ones i want to get rid of
12:05  pgas: lundtor: just in case !svn and -prune were for you....
12:06  lundtor: pgas, i came a bit closer, but still no cigar
12:06  pgas: how so?
12:06  lundtor: find -type d -not -name '*.repo' -o -prune -name '*.git'
12:06  pgas: find . -name .repo -prune -o -type d -print
12:07  lundtor: now it lists all lines containing .git and .repo and its content is removed - which was what i originally asked, but...
12:07  lundtor: now it lists all directories inside .git as well, which was a side effect i didnt see coming :-(
12:08  crocket: hmm
12:08  crocket: tcsh has no channel in freenode.
12:08  pgas: lundtor: ok...maybe have a look at -path, it's a bit easier to use than -prune
12:08  pgas: !find
12:08  greybot: http://mywiki.wooledge.org/UsingFind
12:09  pgas: crocket: maybe try a bsd channel
12:09  crocket: pgas : why bsd?
12:10  pgas: IIRC freebsd still has it as their default shell no?
12:11  crocket: pgas : I use freebsd.
12:11  crocket: pgas : /bin/sh is the default shell for normal users, and /bin/tcsh is the default for root.
12:11  crocket: /bin/sh sucks
12:12  crocket: It doesn't even have auto-completion feature.
12:12  crocket: It looks like tcsh is slowly decaying.
12:12  crocket: Look at this channel. 513 users in total
12:12  crocket: tcsh has no channel
12:12  crocket: Even zsh has some users
12:13  pgas: hence my bsd suggestion
12:15  cthuluh: crocket: you still have usenet groups and the tcsh mailing list, though
12:16  crocket: cthuluh, usenet, I haven't used for decades.
12:17  lundtor: pgas: thanks... im getting extremely close now.. only one unwanted line left :-)
12:33  lundtor: how to start a shell from a script?
12:34  trash: lundtor: What are you trying to do?
12:35  lundtor: my find command fins a list od desired directories. I want to cd into each of them and perform a command
12:35  trash: !find
12:35  greybot: http://mywiki.wooledge.org/UsingFind
12:35  lundtor: right now it cd's into the first directory, but i need to get out again to go into the next one
12:35  trash: Read 5. there.
12:37  yacek19: hi
12:38  lundtor: trash, yup i already know. The thing is that i checks each string for a condition and only if its true, i want to execute something
12:38  trash: So?
12:38  lundtor: so the output of find contains items, that i want to ignore
12:38  trash: So ignore it, you have all of bash's capabilites at hand to do so.
12:38  trash: and even find's.
12:40  yacek19: I would like to make bash script that works as a daemon with pidfile, problem is thatI write $$ variable to pidfile and it is 1193, but ps ax shows that my script has pid 1196. Why is that?
12:41  Bushmills: !$$
12:41  greybot: $$ expands to the PID of the shell. In a () subshell, it expands to the process ID of the current shell, not the subshell.
12:41  yacek19: thanks, so how to get correct PID?
12:41 * [gnubie] waves
12:41  [gnubie]: gtg now
12:41  [gnubie]: thanks to all.. ;)
12:42  Bushmills: !process_management
12:42  Bushmills: !pm
12:42  greybot: http://mywiki.wooledge.org/ProcessManagement
12:42  nicark: What would be recommended to use here? TIME=`date +%m%d-%H%M`   or   TIME=$(date +%m%d-%H%M)
12:42  Bushmills: !`
12:43  greybot: The backquote (`) is used in the old-style command substitution, e.g. foo=`command`. This syntax is deprecated in favor of foo=$(command). Backslash handling inside $() is less surprising, and $() is easier to nest. See http://mywiki.wooledge.org/BashFAQ/082
12:43  nicark: Oh, thanks.
13:09  {xmb}{bottz}7man: ~~~~~moo
13:45  lwolf: hi, is there  a  way in bash to compare values with units ? (aka. 2G > 128M) ?
13:45  koala_man: no
13:46  lwolf: ok, thank you :)
13:46  Nulled: hello
13:46  koala_man: but obviously you can write your own function for that
13:47  Nulled: how can i write script direct to console
13:47  Nulled: nulled> for i in `blabla;do ..
13:47  Nulled: ?
13:49  Nulled: hey :)
13:49  gniourf_gniourf: # for i in {1..10}; do printf "%d " $i; done;
13:49  evalbot: gniourf_gniourf: 1 2 3 4 5 6 7 8 9 10
13:56  shai__: Hi :) I've got two lines that I copy/paste into a terminal and expect the latter line to echo the variable assigned by the 'read' command. For some reason, the read is executed but then the echo doesn't execute after it. How can I accomplish the echo after the read?
13:56  shai__: echo -n "Enter a number: " ; read number
13:56  shai__: echo $number
13:57  gniourf_gniourf: read -p "Enter a number: " number; echo $number
13:58  shai__: I actually need it in two lines...
13:58  shai__: Since I'll be entering a server name in the read, and then do a bit of backups and uploads using that variable.
13:58  gniourf_gniourf: read -p "Enter a number: " number
13:58  gniourf_gniourf: echo "$number"
13:59  shai__: # read -p "Enter: " number
13:59  shai__: Enter: 123
13:59  evalbot: shai__: Enter:
13:59  shai__: For some reason, the echo doesn't work ...
14:00  gniourf_gniourf: shai__, is it in a script?
14:00  shai__: Depending on your definition of a script.
14:00  shai__: It is a file, with approx. 5 lines in it.
14:00  shai__: Each lines, does something using the variable.
14:00  gniourf_gniourf: shai__, can you please upload it on pastebin?
14:00  shai__: The first line, reads the server number and uses it in each of the commands.
14:01  kusanagi_: where is the PATH read from? I have a daemon running in a computer. I need to change its path to be able to find some files... the daemon is launched via system init.d. Where can i modify this PATH?
14:01  shai__: gniourf_gniourf: but note, even this simple example doesn't work.
14:01  shai__: http://pastebin.com/KXkjinG6
14:02  shai__: gniourf_gniourf: copy those two lines and paste them in a terminal ... see if the latter line, the echo, works.
14:02  shai__: For me, it does not execute.
14:02  shai__: Only the 'read' works, and that's it.
14:03  gniourf_gniourf: shai__, this works fine here: http://pastebin.com/J3SxfmX9
14:04  gniourf_gniourf: shai__, put this in a file, say a file named mycoolscript, and chmod +x mycoolscript and execute it thus ./mycoolscript
14:04  shai__: gniourf_gniourf: I would rather not... is there no other way?
14:04  shai__: I don't want to put the code in a file...
14:05  shai__: I would rather just copy/paste it into the terminal
14:05  gniourf_gniourf: I don't get it
14:05  shai__: I don't want the extra step of creating a file and executing it.
14:05  gniourf_gniourf: shai__, then: read -p "Enter: " number
14:05  gniourf_gniourf: enter the number as prompted
14:05  gniourf_gniourf: then echo "$number"
14:06  gniourf_gniourf: shai__, or you can use a function
14:06  shai__: http://pastebin.com/x0vqUciu
14:07  shai__: You should be able to copy those three lines into your clipboard, and when pasting them into a terminal... they would all execute.
14:07  gniourf_gniourf: mycoolfunction() { read -p "Enter: " number; echo "$number"; }
14:07  shai__: Why can't I do the same when read is at hand?
14:07  gniourf_gniourf: shai__, then use a function
14:07  gniourf_gniourf: mycoolfunction() { read -p "Enter: " number; echo "$number"; }; mycoolfunction
14:09  shai__: This is still not working as expected.
14:09  gniourf_gniourf: it does work
14:09  shai__: I need more commands to use the same variable after I use 'read' ... and I can't do this.
14:09  gniourf_gniourf: mycoolfunction() { read -p "Enter: " number; PUT YOUR MORE COMMANDS HERE; echo "$number"; }; mycoolfunction
14:10  shai__: Why do I need to use a function?
14:10  shai__: My question is, why doesn't the echo, on the 2nd line run after the 'read' is executed?
14:13  gniourf_gniourf: shai__, I don't understand what you want to do
14:13  gniourf_gniourf: copying sequences of commands in the shell is usually not a good practise anyway
14:13  shai__: But it works.
14:14  gniourf_gniourf: not for read
14:14  shai__: And I don't have anything fancy... nor do I want to complicate it using a function
14:14  shai__: Why not for read?
14:14  gniourf_gniourf: think of it
14:14  gniourf_gniourf: read reads from stdin
14:14  shai__: Why is it different (asking out of curiosity now...)
14:15  gniourf_gniourf: when you paste things in the shell you're sending things via stdin
14:15  shai__: But read waits for user input and exits when the user inputs Enter ...
14:16  pgas: what what do you think copying in a terminal window does?
14:17  shai__: ah ha :)
14:17  shai__: so it considers my paste as part of my input?
14:17  gniourf_gniourf: shai__, for fun, try this: http://pastebin.com/mceD0v6D
14:17  gniourf_gniourf: paste it in a terminal
14:18  shai__: asks for user input
14:18  shai__: I typed test and pressed enter.
14:18  shai__: Got no output
14:18  gniourf_gniourf: then put more echo $REPLY
14:18  gniourf_gniourf: I put 1000, try 10000
14:19  gniourf_gniourf: it's funny
14:19  shai__: Ok, that shows some output
14:19  gniourf_gniourf: it shows "echo $REPLY", right?
14:19  shai__: yes
14:19  gniourf_gniourf: several times
14:19  shai__: yes
14:19  gniourf_gniourf: ok
14:19  gniourf_gniourf: for your purpose, you should use a script and/or a function
14:20  gniourf_gniourf: there's no other way
14:20  gniourf_gniourf: pasting a script in a shell is not good
14:20  shai__: Agreed.
14:20  shai__: And now I also understand.
14:20  shai__: Thanks guys :)
14:20  gniourf_gniourf: you're welcome ;)
14:20  shai__: Sorry for being a nag to understand :)
14:21  gniourf_gniourf: np
14:23 * G69 Boa tarde
14:24  k1k0: g69 bom dia
14:25  k1k0: G69 bom dia
14:25  shai__: gniourf_gniourf: worked like a charm (using the function)
14:26  gniourf_gniourf: :)
14:26  G69: :)
14:27  G69: k1k0, bom dia se for no Brasil, aqui em PT é boa tarde :P
14:30  Synthead: morning, y'all :)
14:31  Synthead: got another one for ya: arrays populated with variables with spaces.  In example ... (typing)
14:32  Synthead: # a="things to do" b="neat" c="things" array=( "$a" "$b" "$c" ); echo "${array[0]}"
14:32  evalbot: Synthead: things to do
14:32  Synthead: now why did that work here but not in my script?? :/
14:32  Synthead: well damn, gonna check this
14:36  Snowie: hi all
14:37  Snowie: could do with a hand writing my first bash script. I feel like im close i just need some help cleaning some variables and working out how to get it to go through file by file in a directory
14:37  Synthead: # a="things to" b="neat in" c="things neat in" array=( "$a" "$b" ); echo "${c/${array[1]}/${array[0]}"
14:37  evalbot: Synthead: Missing terminating quote, bracket or keyword
14:38  k1k0: G69 Sou do brasil aqui e quase boa tarde rsrsrs :D
14:38  Synthead: # a="things to" b="neat in" c="things neat in" array=( "$a" "$b" ); echo "${c/${array[1]}/${array[0]}}"
14:38  evalbot: Synthead: things things to
14:38  Synthead: that worked too? :S
14:40  bolt: http://pastebin.com/Xc0pSQit  <-- can anyone tell me why this doesn't work as I expect? I want it to close the connection when I say "exit". instead, it seems to halfway restart and then print an error and crash as soon as i type something else.
14:42  Synthead: okay, it's a problem with getopts and spaces :)
14:43  erUSUL: Synthead: go through file by file in a directory --> for file in dir/*; do ... something with "$file" ...; done
14:43  erUSUL: Synthead: you may want to discard dirs ...
14:43  Synthead: erUSUL, ??
14:48  Snowie: if i use  Artist=`id3v2 -l $File | grep TPE1`   i get    TPE1 (Lead performer(s)/Soloist(s)): Freestylers    is there a way to clear all but the title. the beginning will be the same every time
14:51 --- [1]The-Bat is now known as The-Bat
14:52  krzie: bolt,
14:52  krzie:     if (! wretry) {			/* is something hung? */
14:52  krzie: 	holler ("too many output retries");
14:52  krzie: 	return (1);
14:52  Snowie: anyone help a noob. been reading all day and i feel like im so close, i really do just have 2 questions im sure will be simpe
14:52  krzie: ../* net write retries sometimes happen on UDP connections */
14:52  krzie: that is from netcat source
14:53  krzie: (came up on a google of your error msg)
14:54  krzie: Snowie, above in your question you dont say which part is actually the "title"
14:54  erUSUL: Snowie: use pe?
14:54  erUSUL: !pe > Snowie
14:54  greybot: Snowie: Parameter Expansion is the expansion of a parameter: "$foo", "$1". You can use it to perform string operations: "${file%.mp3}", "${0##*/}". Remember to *always* quote them. See http://mywiki.wooledge.org/BashSheet#Parameter_Operations
14:55  erUSUL: # artist="TPE1 (Lead performer(s)/Soloist(s)): Freestylers" ; echo ${artist#*:}
14:55  evalbot: erUSUL: Freestylers
14:56  erUSUL: Snowie: "go through file by file in a directory" --> for file in dir/*; do ... something with "$file" ...; done
14:57  bolt: krzie: but i don't get why it doesn't close netcat in the first place
14:57  bolt: krzie: it gets to "connection closed". how can telnet still be connected?
14:58  bolt: krzie: if not running netcat anymore doesn't stop telnet... how do i close the connection, from the server, then?
14:58  Snowie: Thanks all, i think i get it. that will expand it to an array, and then i can remove what i dont want from the array???
14:58  krzie: Snowie, did you read the pe link given by greybot?
14:58  erUSUL: Snowie: array?
14:59  Snowie: lol, sorry, let me read and come back. wont be long
14:59  Synthead: I found it.  I put the optargs command in a function and needed to execute it with optargsfunction "$@" instead of optargsfunction $@ ^^
14:59  erUSUL: # artist="TPE1 (Lead performer(s)/Soloist(s)): Freestylers" ; artist="${artist#*:}"; echo "$artist"
14:59  evalbot: erUSUL:  Freestylers
15:02 --- Skaag_ is now known as Skaag
15:02  mrcarrot: how would you delete each line containing a pattern that is any line from another file
15:02  mrcarrot: i have been solving this before with a bash script
15:02  mrcarrot: but i lost it.. and instead of rewriting i would want to know if there is a more smart way to do it
15:03  mrcarrot: *nix is full of wonderful commands and there might be a command for it already
15:03  Knirch: grep
15:03  Snowie: wow, now i get why ive been having trouble reading this chat. if i am right, greybot is giving defenitions, and evalbot is actually performing operations on the chat when led with #, right???
15:03  koala_man: mrcarrot: gnu grep has a -f
15:03  koala_man: Snowie: yes
15:04  Snowie: THATS FREEKIN AWESOME!!!, oooh, sorry for the caps
15:04  mrcarrot: thanks koala_man... i did not know about grep -f... my script used grep but in a more inefficient way
15:05  krzie: what is -f in GNU grep?
15:06  h4x0r`: hi ive just been beaten up by a group of masked bandits
15:06  h4x0r`: is this the right channel to complain about it :s ?
15:06  Snowie: erUSUL,
15:06  koala_man: krzie: match any of the patterns from the file
15:06  krzie: in my BSD grep it is the same as --file, with patterns in the file
15:06  Snowie: erUSUL, sorry, so i could use artist="$Artist" ; artist="${artist#*:}"; echo "$artist"
15:07  krzie: ahh seems its not just GNU then
15:07  mrcarrot: hmm... 'grep -f patternfile textfile' is not giving anything
15:08  mrcarrot: is that the syntax?
15:08  mrcarrot: according to man grep it looks like it would be the syntax
15:08  erUSUL: Snowie: just use the pe in the vars that you have; no need to do artist="$Artist" if you named your var Artist then use "${Artist#*:}"
15:08  pgas: mrcarrot: it is
15:09  erUSUL: # foo="bar:baz" ; echo "${foo#*:}"
15:09  evalbot: erUSUL: baz
15:09  krzie: and no need to reassign even 1x, you can echo "${Artist#*:}"
15:09  pgas: 4# echo foobar > file;echo 'f.*' > pattern;grep -f pattern file
15:09  shbot: pgas: foobar
15:10 --- hemanth_ is now known as hemanth
15:12  Snowie: erUSUL, so Artist=`id3v2 -l $File | grep TPE1`
15:12  Snowie: artist="${Artist#*:}"; echo "$artist"
15:13  erUSUL: Snowie: Artist=$(id3v2 -l $File | grep TPE1) ; echo "${Artist#*:}"
15:13  Snowie: erUSUL, oh, but i dont need the last echo unless i want to print the artist
15:13  erUSUL: Snowie: that's shorter; isn't it ?
15:13  erUSUL: Snowie: correct; no echo. just use it in the place you want.
15:13  Snowie: erUSUL, ah, i think i get that now. let me run a test on that
15:15  Snowie: erUSUL, is there any reading i could do on the difference between backticks and dollars/bracket, i really am not getting that
15:17  cthuluh: !` > Snowie
15:17  greybot: Snowie: The backquote (`) is used in the old-style command substitution, e.g. foo=`command`. This syntax is deprecated in favor of foo=$(command). Backslash handling inside $() is less surprising, and $() is easier to nest. See http://mywiki.wooledge.org/BashFAQ/082
15:17  Snowie: erUSUL, so to set a variable   artist   that only has the title, would you agree   Artist=$(id3v2 -l $File | grep TPE1) ; artist=$("${Artist#*:}")
15:17  Snowie: erUSUL, thanks
15:36  Snowie: erUSUL, no brackets at the end, got that. i really appreciate your help. im closer, but now i need to remove spaces. Im trying to use the variables as dir/file names.
15:36  hawg: moring
15:36  hawg: err morning even
15:37  damnshock: morning hawg
15:37  hawg: my bash scripting is not as strong as it should be partially due to lazyness
15:37  hawg: can someone please explain what is going on here
15:37  hawg: http://pastebin.com/EX8ZmLxH
15:37  hawg: I understand parts just not the mix
15:38  hawg: any comments or just an understanding would rule
15:38  hawg: thanks in advance
15:38  trash: !heredoc > hawg
15:38  greybot: hawg: Here documents. cat <<EOF followed by several lines of text, followed by the literal string EOF on a new line, NOT indented. The portion between the EOFs is passed to the command as standard input. If 'EOF' is 'quoted', substitutions WON'T be done; otherwise they are. See <<- for the indented variety.
15:39  hawg: heh
15:45 --- jzacsh is now known as jzacsh_
15:46  pigdude: how are HISTSIZE and HISTFILESIZE related? Is the smaller or larger value of the two used? (will a smaller HISTFILESIZE truncate the history?)
15:55  pigdude: just curious. I have set them to be the same right now
15:55  pgas: HISTSIZE is the size in memory, HISTFILESIZE the size of the file
15:56  pgas: I'm not sure the 2 are related, the file can probably be bigger than the history in memory with append, and the opposite can probably true, if you keep the history in memory but not history file for instance
16:09  mrtnt: I tried to make a regular expression for an IP address. What is wrong with this: echo 192.168.1.100 | egrep "[[:digit:]]\.[[:digit:]]\.[[:digit:]]\.[[:digit:]]"
16:09  mrtnt: the problem is, that this grep does not match an IP address
16:09  koala_man: 192 isn't a digit, it's three of them
16:12  gniourf_gniourf: # echo 192.168.1.100 | egrep "[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}"
16:12  evalbot: gniourf_gniourf: 192.168.1.100
16:12  gniourf_gniourf: # echo 999.999.999.999 | egrep "[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}"
16:12  evalbot: gniourf_gniourf: 999.999.999.999
16:13  gnubien: mrtnt: echo 192.168.1.100 | egrep "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+" #prints 192.168.1.100
16:16  mrtnt: koala_man: ok, I see :)
16:17  CyberDomovoy: i do "LC_ALL="POSIX" sfdisk -l /dev/hda | sed -n 's/Disk \/dev\/.*: \([0-9]*\) cylinders.*/\1/p;s/Units = .* of \([0-9]*\) bytes, blocks .*/\1/p'", how could i put it in two vars, so that the first line goes to "nb_blocks" and the second one to "block_size"?
16:17  mrtnt: gniourf_gniourf: I did "egrep [[:digit:]]\{1,3\}\.[[:digit:]]\{1,3\}\.[[:digit:]]\{1,3\}\.[[:digit:]]\{1,3}", but it matches for example "echo 192.168.1" as well or 999.999.999.999
16:17  gniourf_gniourf: mrtnt, I know
16:18  mrtnt: gniourf_gniourf: ok. But is there a simple way to avoid this? Most likely not..
16:19  gniourf_gniourf: mrtnt, there's a way
16:19  gniourf_gniourf: mrtnt, m="([[:digit:]]{1,2}|2[01234][[:digit:]]{2}|25[012345])"
16:20  gniourf_gniourf: mrtnt, this matches numbers ranging from 1 to 255
16:20  gniourf_gniourf: mrtnt, then use egrep "^($m\.){3}$m$"
16:20  gniourf_gniourf: mrtnt, this will only match IP adresses
16:24  gniourf_gniourf: mrtnt, of course I missed a case in m
16:24  gniourf_gniourf: :D
16:26  gniourf_gniourf: this should be better m="([[:digit:]]{1,2}|1[[:digit:]]{2}|2[01234][[:digit:]]{2}|25[012345])"
16:26  gniourf_gniourf: crap
16:26  gniourf_gniourf: this should be better m="([[:digit:]]{1,2}|1[[:digit:]]{2}|2[01234][[:digit:]]|25[012345])"
16:26  gniourf_gniourf: anyways, you get the point
16:34  Synthead: what does \d+ mean in regex?
16:34  gniourf_gniourf: one or more digits
16:42  {xmb}{bottz}7man: digitalis genitalis xmbucsz
16:44  qwd: I have some files that I want to change the filename for. The names I want to change to are in a text file. The textlist has the files sorted by number. The files are sorted alphabetically and don't have a number in the beginning, so I need to sort them after change time. How can I apply the filenames in the text file to the files?
16:44  mrtnt: gniourf_gniourf: I think I did get the point :) Basically you said: egrep "0-99|100-199|200-249|250-255"
16:44  gniourf_gniourf: yup
16:45  {xmb}{bottz}7man: papa schnorf
16:47  pigdude: is there a standard unix command for b64?
16:47  pigdude: i.e. echo a | b64 # shows base 64 encoded "a"
16:48  tehbaut: isn't there a way to get your matches highlighted with grep?
16:48  CyberDomovoy: how can i tell sed to quit as soon as it made the s// replacement? (something like "sed -n 's/foo \(.*\) bar/\1/{p;q;}'" except this doesn't work)
16:48  tehbaut: I thought it was "grep --color yellow" but that didn't highlight anything
16:48  geirha: qwd: You'll need to show some sample data with that.
16:49  {xmb}{bottz}7man: pigdude: theres some uuencode and schtuff
16:50  pigdude: {xmb}{bottz}7man: looks like it takes an -m option for b64
16:50  {xmb}{bottz}7man: vgg
16:50  pigdude: hehe
16:50  {xmb}{bottz}7man: =:-)
16:51  tehbaut: aha, it's "grep --color=always"
16:51  mrtnt: gniourf_gniourf: ok, I did like this: http://pastebin.com/QgBWdqDk However, this doesn't quite work..
16:51  qwd: geirha: yeah I thought that might sound a bit confusing :)
16:51  gniourf_gniourf: mrtnt, you didn't define m properly
16:52  gniourf_gniourf: m="([[:digit:]]{1,2}|1[[:digit:]]{2}|2[01234][[:digit:]]|25[012345])"
16:52  gniourf_gniourf: use the quotes
16:52  {xmb}{bottz}7man: bottz64
16:52  pigdude: now my bash ignorance comes into play. why does this command do nothing? uuencode -m -o - <<<a
16:53  pigdude: usage: uuencode [-m] [-o outfile] [infile] remotefile
16:53  pigdude: how can I provide that infile inline?
16:53  pigdude: without creating a file
16:53  gniourf_gniourf: pigdude, where is the input comming from? a variable?
16:53  pigdude: gniourf_gniourf: no
16:53  pigdude: gniourf_gniourf: it is coming from my keyboard
16:54  qwd: These files http://pastebin.com/z4JdMswS should be sorted by "change time". I want to change the filenames to http://pastebin.com/fSHgErEr
16:54  pigdude: gniourf_gniourf: perhaps this is a limitation of uuencode, that you must have a real file>
16:54  pigdude: ?
16:54  CyberDomovoy: is sed -n '/foo .* bar/{s/foo \(.*\) bar/\1/p;q;}' the right way to quit as soon as i made the replacement?
16:54  gniourf_gniourf: pigdude, you can use a heredoc: uuencode -m -o - <<EOF
16:54  pigdude: that's what I thought I did
16:55  pigdude: if I do <<EOF I get a line with > for input
16:55  taylanub: CyberDomovoy: that should work
16:55  pigdude: I usu use <<<string for heredoc
16:55  pigdude: like in my first cmd
16:55  gniourf_gniourf: pigdude, then input your stuff, and type EOF (alone on a single line) when you're fone
16:55  gniourf_gniourf: *done
16:55  matthiasgorgens: hey, is there a way to `listen' for the termination of a background process?  (a bit like inotifywait, but for a process.)
16:56  pigdude: how very lame. thank you gniourf_gniourf!
16:56  gniourf_gniourf: you're welcome pigdude
16:56  yitz_: matthiasgorgens: while kill -0 pid ; do sleep 1 ; done
16:56  matthiasgorgens: why the sleep?
16:56  taylanub: CyberDomovoy: maybe 't' will work too, for that purpose.
16:56  matthiasgorgens: i wanted to avoid fixed delays.
16:56  matthiasgorgens: yitz, why the sleep?
16:57  matthiasgorgens: yitz, i am sending kill -15, and want to know when the process is ready with its cleanup stuff.
16:57  mrtnt: gniourf_gniourf: hmm..I tried even like this: NR="([[:digit:]]\{1,2\}|1[[:digit:]]\{2\}|2[0-4][[:digit:]]|25[0-5])"; echo 192.168.1.100 | egrep $NR
16:57  yitz_: Usually listening involves waiting until an event occurs
16:58  gniourf_gniourf: mrtnt, no backslash with the curly braces { }
16:59  matthiasgorgens: yitz, oh, yes.  sorry, i misread your answer at first.
16:59  mrtnt: gniourf_gniourf: hehh, now it works, thanks! But why no curly braces? I mean isn't { a special character, that needs to be escaped?
17:00  gniourf_gniourf: mrtnt, no,
17:00  matthiasgorgens: yitz, though it could be that some other process gets the same pid in the meantime.
17:00  mrtnt: gniourf_gniourf: ok..but "." is, right?
17:00  matthiasgorgens: _yitz, that's what i was trying to avoid.
17:01  matthiasgorgens: _yitz, otherwise i could just look for /proc/[pid] to disappear.
17:01  gniourf_gniourf: mrtnt, yes, escape the dot
17:01  gniourf_gniourf: mrtnt, otherwise, a non-escaped dot matches any character (and that's not what you want)
17:01  matthiasgorgens: _yitz, inotifywait /proc/[pid] doesn't seem to register an event when the process dies.
17:01  matthiasgorgens: _yitz, thanks anyway!
17:01  mrtnt: gniourf_gniourf: ok, tnx!
17:01  gniourf_gniourf: mrtnt, you're welcome
17:02  matthiasgorgens: _yitz, sorry, i have to be going now.  i will leave irc open and will see any answer later, though.
17:02  yitz_: matthiasgorgens: You could compine that with pgrep to check the process name for that pid matches what it was
17:03  taylanub: mrtnt: there's different kinds of regexes
17:06  tomoyuki28jp: How can I check if localhost is listening to a certain port?
17:07  tharkun: netstat
17:07  tomoyuki28jp: tharkun: thanks!
17:11  tomoyuki28jp: tharkun: what's the option to check if localhost if listening a certain port? `netstat -a` takes a while.
17:12  tharkun: tomoyuki28jp: i usually use netstat -pantu
17:12  mrtnt: tomoyuki28jp: i usually do: netstat -lt4n | grep PORTNUM
17:13  tomoyuki28jp: tharkun: mrtnt: thanks a lot!!
17:15 --- adventure is now known as Guest58730
17:15  mrtnt: gniourf_gniourf: looks like NR="[[:digit:]]{1,2}|1[[:digit:]]{2}|2[0-4][[:digit:]]|25[0-5]"; echo 192.228.1.567 | egrep "^($NR\.){3}$NR$"  matches as well, but it shouldn't :)
17:16  mrtnt: gniourf_gniourf: or this one should match, but it does not: NR="[[:digit:]]{1,2}|1[[:digit:]]{2}|2[0-4][[:digit:]]|25[0-5]"; echo 192.228.1.167 | egrep -x "^($NR\.){3}$NR$"
17:18  mrtnt: gniourf_gniourf: I tried with a simplified command like this: NR="[[:digit:]]{1,2}|1[[:digit:]]{2}|2[0-4][[:digit:]]|25[0-5]"; echo 192.228.1.167 | egrep -x "^$NR\.$NR\.$NR\.$NR$"   ..but still no success
17:23  gniourf_gniourf: mrtnt, because you missed the parentheses
17:23  gniourf_gniourf: NR="([[:digit:]]{1,2}|1[[:digit:]]{2}|2[0-4][[:digit:]]|25[0-5])"; echo 192.228.1.567 | egrep "^($NR\.){3}$NR$"
17:24  gniourf_gniourf: mind the parentheses in the definition of NR
17:24  gniourf_gniourf: # NR="([[:digit:]]{1,2}|1[[:digit:]]{2}|2[0-4][[:digit:]]|25[0-5])"; echo 192.228.1.567 | egrep "^($NR\.){3}$NR$"
17:24  evalbot: gniourf_gniourf: no output
17:24  gniourf_gniourf: # NR="([[:digit:]]{1,2}|1[[:digit:]]{2}|2[0-4][[:digit:]]|25[0-5])"; echo 192.228.1.167 | egrep "^($NR\.){3}$NR$"
17:24  evalbot: gniourf_gniourf: 192.228.1.167
17:25  mrtnt: gniourf_gniourf: yes, sry
17:25 --- Guest58730 is now known as duckx0r
17:27  Fisix_AIX: Hello
17:28  duckx0r: I am trying to make a script to use notify-send to all logged in users with an active X session. This is what I have so far:  `who | grep "(:[0-9])" | awk '{print $1,$5;}'`  How can I remove the parentheses around $5 and then use both $1 and $5 in a notify-send command?
17:29  xt3mp0r: cd ..
17:30  warmdrink: hi
17:31  warmdrink: how can I get an array size inside (( )) ?
17:31  gnubien: duckx0r: who | grep "(:[0-9])" | awk -F'[ ()]' '{print $1,$(NF-1);}'
17:31  Fisix_AIX: How would I get the loop to repeat 5 times >> http://fpaste.org/B0Dd/
17:31  Fisix_AIX: please
17:32  xt3mp0r: how can i read emails from an hotmail account using bash ?
17:32  Bushmills: # a=(a b c d); echo $(( ${#a[@]}*3))
17:32  evalbot: Bushmills: 12
17:33  warmdrink: Bushmills: not inside $(()). insdie only (( ))
17:33  warmdrink: like if (( ))
17:33  bashusr: # ls /etc/
17:33  evalbot: bashusr: fstab  group  inputrc  inputrc~  mtab  passwd  profile
17:33  bashusr: # cat /etc/passwd
17:33  evalbot: bashusr: root:x:0:0:root:/root:/bin/bash
17:34  bashusr: lol
17:34  Bushmills: # a=(a b c d); (( ${#a[@]}==4)) && echo four
17:34  evalbot: Bushmills: four
17:36  Fisix_AIX: is there anybody who could give me a little help on my loop question>?
17:36  Bushmills: xt3mp0r: you make a script. at top, you put:
17:36  Bushmills: !#!
17:36  greybot: Jargon, from "hash bang", or "#!". The shebang line is read by the kernel when a script is executed. See http://www.in-ulm.de/~mascheck/various/shebang/
17:36  duckx0r: gnubien, ah great that gets rid of the parentheses. i'm still not sure how to use the variables to execute a command with them though
17:36  Bushmills: below you put the command(s) to fetch your mail
17:36  gnubien: duckx0r: neither do i :)
17:36  gniourf_gniourf: Fisix_AIX, what is your question?
17:37  Fisix_AIX: How would I get the loop to repeat 5 times >> http://fpaste.org/B0Dd/ ?
17:37  xt3mp0r: Bushmills: thanks. where can i get list of command which can be used to fetch emails? Or what are they called?
17:37  dunpeal: Hi. `users` is telling me that two users
17:37  Fisix_AIX: gniourf_gniourf, How would I get the loop to repeat 5 times >> http://fpaste.org/B0Dd/ ?
17:38  dunpeal: are logged in. How do I get their IPs?
17:38  gniourf_gniourf: Fisix_AIX, then put the loop inside a for loop
17:38  dunpeal: (They are both logged in remotely, through SSH)
17:38  gniourf_gniourf: Fisix_AIX, e.g., for((i=0;i<5;++i)); do YOUR_LOOP_HERE; done
17:39  Bushmills: xt3mp0r: from the list of available packages or programs for your particular operating system
17:40  Fisix_AIX: gniourf_gniourf, How would that work with "for array in ${array[@]};"
17:42  xt3mp0r: Bushmills: hmm actually i am looking to read emails using pop3
17:43  Bushmills: xt3mp0r: try "gotmail"
17:44  gniourf_gniourf: Fisix_AIX, I don't get it... you want the loop to be executed for just the first five elements of the array?
17:44  Bushmills: (for pop, see getmail or fetchmail)
17:44 --- pyoor_ is now known as pyoor
17:44  xt3mp0r: Bushmills: got it. thanks
17:44  gniourf_gniourf: Fisix_AIX, or you want the whole thing to be executed five times?
17:45  Fisix_AIX: gniourf_gniourf, Its ok ive done it
17:45  Fisix_AIX: gniourf_gniourf, Thank you
17:45  gniourf_gniourf: you're welcome
17:48  Fisix_AIX: gniourf_gniourf, Lol no it didnt work
17:48  gniourf_gniourf: bad luck, eh
17:48  Fisix_AIX: gniourf_gniourf, It goes through all those hex colours in the array, but I want it to go through it multiple times, 5 time for example
17:49  zoidberg-: Hey guys I remember there being a command builtin to linux or bash that reverses the characters in a string on the command line, but i can't for the life of me remember what it was (im sure it was 3 letters, thought it was tee, but its not) can anyone remember what it is?
17:49  gniourf_gniourf: Fisix_AIX, and what did you do?
17:50  gniourf_gniourf: zoidberg-, tac
17:50  gniourf_gniourf: zoidberg-, or rev
17:51  Fisix_AIX: gniourf_gniourf, put a loop ((i=0;i<5;++i)) inside the loop , But it just done every hex in the array 5 times and then moved onto the next hex
17:51  gniourf_gniourf: Fisix_AIX, then put the for loop outside the loop
17:51  zoidberg-: gniourf_gniourf: ahhh thats it rev! thank you!!
17:52  Fisix_AIX: gniourf_gniourf, :| lol ill give it a try
17:52  gniourf_gniourf: zoidberg-, you're welcome
17:52  warmdrink: hi
17:52  Fisix_AIX: gniourf_gniourf, silly me
17:53  warmdrink: ehrm, can I ask here about gnu grep ?
17:53  gniourf_gniourf: :)
17:53  Fisix_AIX: gniourf_gniourf, It works now Thank you so much
17:53  gniourf_gniourf: you're welcome Fisix_AIX ;)
17:54  gniourf_gniourf: warmdrink, try
17:55  warmdrink: why does this give output with gnu grep ? :  echo "A" | grep "^[a-z]\+$" ?
17:55  warmdrink: on my system output is A
17:55  warmdrink: and I expect no output
17:56  qwd: I have several files that are sorted by filename, so they aren't in the correct order. I have a list of filenames in a text file that I want to apply to these files. These are the files http://pastebin.com/z4JdMswS that should be sorted by "change time" to appear in the correct order. I want to change the filenames to http://pastebin.com/fSHgErEr Can someone tell me how to do this?
17:56  warmdrink: nvm
17:56  warmdrink: my bash is broken
17:56  warmdrink: it seems
17:57  gniourf_gniourf: warmdrink, you might want to try grep "^[[:lower:]]\+$" instead
17:57  warmdrink: gniourf_gniourf: ehrm, it should not match though, or should it ?
17:58  warmdrink: gniourf_gniourf:
17:58  gniourf_gniourf: warmdrink, [[:lower:]] matches any lower case letter
17:58 --- taylanub0 is now known as taylanub
17:58  warmdrink: gniourf_gniourf: i know what lower does, but this should not match: echo "A" | grep "^[a-z]\+$"
17:58  gniourf_gniourf: warmdrink, why not?
17:58  gniourf_gniourf: warmdrink, do you know what [a-z] is ?
17:59  gniourf_gniourf: warmdrink, [a-z] depends on local implementations
17:59  matthiasgorgens: _yitz, ok, i'll try pgrep.
17:59  gniourf_gniourf: could be just lowers or all letters or even something else
17:59  warmdrink: gniourf_gniourf: hmm, really ?
17:59  gniourf_gniourf: yes
18:00  warmdrink: gniourf_gniourf: i would expect it to be all characters beteen a and z - and I dont see how A gets in there
18:01  gniourf_gniourf: a-z could mean aAbBcC...
18:02  duckx0r: how do I use a variable within backticks?
18:03  taylanub: just like that, but:
18:03  taylanub: !`
18:03  greybot: The backquote (`) is used in the old-style command substitution, e.g. foo=`command`. This syntax is deprecated in favor of foo=$(command). Backslash handling inside $() is less surprising, and $() is easier to nest. See http://mywiki.wooledge.org/BashFAQ/082
18:04  duckx0r: thanks taylanub
18:04  taylanub: # foo=bar; echo $(echo $foo)
18:04  evalbot: taylanub: bar
18:06  warmdrink: gniourf_gniourf, ok so how do i match only a-z (i.e. lowecase latin) ?
18:07  warmdrink: If i use [:lower:] then it matches lower case of other alphabets also ...
18:07  duckx0r: taylanub, looks like I'm still doing something wrong here. $numuser isn't being evaluated (I think)
18:07  duckx0r: taylanub, user=$(who | grep "(:[0-9])" | awk -F'[ ()]' '{ if (NR==$numuser) print $1,$(NF-1);}')
18:09  taylanub: it's inside single-quotes, duckx0r
18:10  duckx0r: taylanub, hmmm yeah you're right
18:11  duckx0r: taylanub, i'm not sure how to change it then since if I make it double quotes I get syntax errors
18:12  taylanub: duckx0r: escape the $1 and $(NF..
18:12  taylanub: e.g. \$1
18:12  taylanub: !quotes
18:12  greybot: "USE MORE QUOTES!" They are vital. Also, learn the difference between ' and " and `. See <http://mywiki.wooledge.org/Quotes> and <http://wiki.bash-hackers.org/syntax/words>.
18:13  duckx0r: taylanub, ahh yeah i get it now
18:14  matthiasgorgens: can i nest & and ; and && on the command line?  I.e. "(some_process && echo done) & some_parallel process" ?
18:16  taylanub: yes... i'd recommend some beginners guide, matthiasgorgens
18:16  matthiasgorgens: taylanub, ok. :o)
18:17  duckx0r: taylanub, I'm still getting a syntax error here:  user=$(who | grep "(:[0-9])" | awk -F'[ ()]' "{ if (NR==$numuser) print \$1,\$(NF-1);}")
18:17  taylanub: what does it say?
18:17  duckx0r: awk: line 1: syntax error at or near )
18:18  taylanub: you see, it's an awk error, and i focused on the bash aspect :P
18:18  gniourf_gniourf: warmdrink, I don't know in fact... I see two possiblities though
18:18  duckx0r: taylanub, but if I change $numuser to an actual number, it works fine
18:18  taylanub: duckx0r: you sure there's a thing such as $() in awk? (i don't know too much awk)
18:18  taylanub: oh
18:18  gniourf_gniourf: warmdrink, maybe grep "^[abcdefghijklmnopqrstuvwxyz]\+$"
18:19  taylanub: duckx0r: you sure numuser contains a valid value?
18:19 * duckx0r slaps face
18:19  duckx0r: $numusers
18:19  duckx0r: taylanub, thanks man
18:19  gniourf_gniourf: warmdrink, in fact [a-z] also matches accented letters here
18:19  taylanub: you're welcome
18:20  duckx0r: this is my first official bash script, so i'm allowed to screw up a bit :)
18:20  gniourf_gniourf: # grep "^[a-z]\+$" <<< "é"
18:20  evalbot: gniourf_gniourf: no output
18:20  gniourf_gniourf: but not for evalbot
18:20  taylanub: duckx0r: what exactly is the goal by the way? i can't quite figure looking at your line
18:20  taylanub: but it somehow looks like there might be a better way
18:20  duckx0r: taylanub, trying to send a notify-send message to all logged in users that have an X session up
18:21  taylanub: duckx0r: what does 'who' output look like, in Ubuntu..?
18:22  gniourf_gniourf: taylanub, output are lines of the form:    mylogin     pts/15       2010-11-09 22:39 (:0.0)
18:22  duckx0r: taylanub, http://pastebin.com/CcWWqwUq
18:23  duckx0r: taylanub, i could have also used w instead of who
18:23  taylanub: it's not GNU-coreutils ?  mine is, and doesn't have the X display in the output
18:24  duckx0r: taylanub, no idea
18:24  taylanub: ok
18:29  duckx0r: taylanub, yay! it works :)
18:33  pigdude: is there some way to copy to more than one location at the same time? this does not work: cp people/* ./{practices,events}
18:34  pigdude: I want to copy all files from people into both practices and events directories
18:35  bonsaikitten: pigdude: cp only takes one target
18:35  yitz_: Run cp twice
18:35  pigdude: bonsaikitten: thanks
18:35  bonsaikitten: but you could do something like
18:35  bonsaikitten: for i in foo bar; do cp baz/* $i; done
18:36  pigdude: bonsaikitten: yes, I suppose I can script around that
18:36  pigdude: yea
18:36  pigdude: ok, thanks, I was not sure
18:36  bonsaikitten: cp -t target * <-- is actually a bit nicer to read
18:40  clyphox: what does the \+$ bit do btw? ^^
18:44 * clyphox prods gniourf_gniourf
18:44  TheBonsai: today i noticed, after so many years, that *every*, especially the "if" compound command, can take stdin. after all these years of coding around for "dry running" commands that take stdin from a here document
18:44  TheBonsai: HEADDESK
18:44  henrik_: Can someone who knows this look at my script? http://paste.ubuntu.com/530136/ problem is that I can not execute DISPLAY=:0 /usr/bin/mythfrontend.real & in a screen it just terminates the screen
18:46  clyphox: try export DISPLAY=:0 maybe?
18:47  clyphox: doesnt it give you any errors?
18:48  henrik_: well just by running the command DISPLAY=:0 /usr/bin/mythfrontend.real & will do the job and it will start the frontend. However by doing that it outs alot fo debug infromation so the script can not continue, so my thaught was to just put that part into a screen and then close it. But the screen just terminates without any information
18:49  clyphox: i guess u could run it in a loop
18:50  willdye: henrik_: If 'pgrep' is available on your system, it is preferable to the form "ps|grep something".
18:51  clyphox: or ps | grep goo | grep -v "grep foo" lol
18:51  willdye: as for the screen-based program that won't start, consider running a test using a simple screen-based program such as "xload".
18:51  henrik_: I'm very new to allt his and can not anything about scripting... So i don't follow you about running it in a loop.. and yes pgrep is a part of my system
18:52  henrik_: what would be diffrent using pgrep then ps|grep?
18:53  willdye: ps|grep breaks under certain conditions.  pgrep is specifically designed to address those problems.
18:54  willdye: basically pgrep came into existence when people realized that ps|grep would never work reliably in a production system.
18:54  willdye: (without a whole bunch of extra code to handle the odd cases)
18:54  willdye: you might also benefit from reading http://mywiki.wooledge.org/ProcessManagement , in particular http://mywiki.wooledge.org/ProcessManagement#How_do_I_make_sure_only_one_copy_of_my_script_can_run_at_a_time.3F
18:56  henrik_: would the part look like PROCTV=`pgrep "mythfrontend.real"     |pgrep -v "<defunct>" |pgrep -v gre$
18:56  henrik_:             awk ' { print $2 } '`? thanks for the links
18:57  TheBonsai: willdye: under which circumstances (provided it's used with common sense)?
18:58  henrik_: willdye, and can that in anyway help me with this problem is it related?
18:59  TheBonsai: no, it can't help you to know what you're doing
19:01  henrik_: I tried the export provied by clyphox this is result http://paste.ubuntu.com/530143/
19:02  clyphox: export bla=foo ; then your command
19:02  TheBonsai: 1 the recommendation to use export instead of assignment for this command only is useless
19:02  TheBonsai: 2 if you use it, then make it 2 commands
19:05  willdye: TheBonsai: for example, the grep for 'scriptname' will match SomeOther_scriptnameThatYouDidntWant, the grep -v for 'grep$' will pick up 'thisIsNotReallyAgrep', and the delay between multiple tests means that you'll get occasional race conditions in which things change in the middle of the multiple tests.
19:06 --- andre_ is now known as limau
19:06  willdye:  yes, that's rarely a problem in practice, but if you promote 'ps|grep scriptname' as a general-use method then sooner or later someone will probably hit those rare problems.
19:06  dunpeal: Hey. There's an HTML page containing a list of links to files. I want to download all these files. What's the bash way of doing that?
19:06  TheBonsai: willdye: "provided it's used with common sense" :)
19:07  willdye: henrik_: the links might help because it looks like your script is intended to start mythfrontend.real UNLESS another copy is already running.  lock files are a more reliable general solution.
19:07  dunpeal: I assume it's going to work through wget somehow, but not sure about the arguments.
19:07  TheBonsai: willdye: a pure 'ps | grep X' is nonsense, yes
19:07  TheBonsai: dunpeal: right. there is no bash way.
19:07  henrik_: willdye, thanks
19:08  dunpeal: The actual page I'm trying to download from is: http://ftp.vim.org/pub/vim/patches/7.3/
19:08  willdye: TheBonsai: yeah, i caught that part, but i'll argue that using good tools specifically designed for a purpose is itself "common sense". :)
19:08  dunpeal: I want to download all the patches so I can compile vim 7.3 with all of them.
19:08  TheBonsai: willdye: you don't always have GNU systems or a linux at hand :) ps fed with the correct options and a sane grep statement should do it in most cases, though
19:09  TheBonsai: dunpeal: check -m or -r and all the related depth options and inter-site limits, etc
19:09  dunpeal: TheBonsai: thanks.
19:16  dunpeal: TheBonsai: neither -m nor -r downloaded the patch files, only the index.html. The only solution I found was to get index.html, edit it to remove everything but the patch URLs themselves, then use "wget -i" on that LF-separated URL list.
19:18  TheBonsai: dunpeal: if you want a tarball of the patches i just download with wget -m, tell me :P
19:18  TheBonsai: (though it downloads much, since it went to ..)
19:18  TheBonsai: erm, this is the http interface to an ftp server, yes?
19:18  TheBonsai: why the heck don't you use ftp and mget?
19:19  wart___: quick question: i'd like to have SEARCH=$3* i.e. arguments 3 and on but not $1 or $2
19:19  wart___: evidenty, $3* did not work.
19:20  dunpeal: TheBonsai: since I didn't know any better? :)
19:20  TheBonsai: shift 2 and "$@" or ${@:3}
19:21  wart___: TheBonsai: thanks
19:21  TheBonsai: dunpeal: i just guessed, because the hostname looks like
19:27  dunpeal: OK, more proper bash question: I'd like to do `fo fn in patches`, except I only want to iterate over files, and patches contains directories as well.
19:27  dunpeal: Is there a smaller / cleaner solution than iterating over `find -type f` output?
19:28  TheBonsai: [[ -d $fn ]] && continue
19:30  dunpeal: TheBonsai: Can you explain why that's cleaner / prefrable to find -type f?
19:31  TheBonsai: iterating over text output is not IFS safe
19:31  TheBonsai: globbing is
19:31  dunpeal: IFS?
19:31  TheBonsai: !ifs
19:31  greybot: Internal Field Separator (or Input Field Separator), used to break things into words. See http://mywiki.wooledge.org/IFS and http://mywiki.wooledge.org/BashFAQ/001 and http://bash-hackers.org/wiki/doku.php/syntax/words
19:32  dunpeal: TheBonsai: thanks.
19:32  TheBonsai: IFS is the thing that makes echo A B equivalent to echo A                   B
19:41 --- law_ is now known as law
19:57  rannmann: Does anyone know if crontab caculates date so that if you were to do */2 for the day field, it would do it every two days instead of every 2nd day of a month?  (ex: 31 day month would have it run on the 28th, 30th, and then 1st of the next month instead of waiting until the 2nd of the next month)
19:57  rannmann: having a source would be awesome :)
20:01  sente: rannmann: it does modulu arithmatic
20:01  sente: (/d will run on even days only , i believe
20:03  r15: hi all
20:03  r15: i am running a simple script with sftp -b my-script user@server
20:04  r15: sftp gets terminated as soon as it don't find a file to get, i have a.txt b.txt c.txt, if a.txt is not on the server, sftp exits leaving b.txt and c.txt
20:05  skered: r15: Read the man page for sftp
20:05  r15: i want sftp to work on b.txt as well as c.txt whther a.txt is on the remote server or not.
20:05  sente: r15: what sftp client?
20:05  r15: skered: yes i read the man pages, it says use - before command, my script simply doing get
--- Log closed Fri Nov 12 00:50:48 2010
