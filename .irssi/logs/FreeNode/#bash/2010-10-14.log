--- Log opened Thu Oct 14 00:00:03 2010
--- Day changed Thu Oct 14 2010
00:00  sowell: i cant use \s?
00:00  ferret: greedy is not supported?
00:00  cthuluh: gnu sed supports \s?
00:00  cthuluh: (so much questions...)
00:00  lhunath: {0,1}
00:00  lhunath: bash's =~ doesn't support \s.
00:01  lhunath: I don't know about sed.
00:01  ferret: lhunath: I'm confused?
00:01  ferret: \{ is a special sequence in BRE
00:01  ferret: it's documented in posix
00:01  cthuluh: sowell: I'm curious about on which website you've seen the code you pasted
00:01  lhunath: in posix bre?
00:01  sowell: heh
00:01  cthuluh: yes
00:02  sowell: so this WILL work...
00:02  lhunath: ah well, I'll flame them then.
00:02  cthuluh: sowell: where? please
00:02  sowell: [[:digit:]]{8}(.*)[[:digit:]]{8}
00:02  ferret: lhunath: it's the same as with \( and \)
00:02  sowell: which is retarded but it works
00:02  ferret: that's another posix bre sequence where \ makes it special
00:02  sowell: cthuluh: unfortunately, i do not remember its a link i looked at for like 20 seconds yesterday
00:02  sowell: just to get syntax.
00:03  lhunath: sowell: '\s?' -> ' {0,1}'
00:03  sowell: thats what i wanted.
00:03  sowell: but i cant do it in bash with =~ you are telling me
00:03  sowell: correct?
00:03  lhunath: sure you can.  you can't use ?
00:03  lhunath: er.  or can you
00:04  sowell: lhunath:? sowell: '\s?' -> ' {0,1}'
00:04  sowell: heh, yours had that in it ;)
00:04  sowell: i mean honestly....(.*) does the trick
00:04  sowell: its not the right tool for the job but it works ;)
00:05  sowell: oh wait a second
00:05  lhunath: [[ moo =~ ^mooo?$ ]]; echo $?
00:05  sowell: you are teling me to do \s{0,1} instead?
00:05  lhunath: # [[ moo =~ ^mooo?$ ]]; echo $?
00:05  evalbot: lhunath: 0
00:05  lhunath: seems it's fine to use ?
00:05  sowell: i tried it and it didnt take ;)
00:05  ferret: # for x in a b c '12345678- ' '12345678 -12345678'; do re='[[:digit:]]{8} {0,1}- {0,1}[[:digit:]]{8}{0,1}'; [[ $x =~ $re ]] && echo "$x"; done
00:05  evalbot: ferret: 12345678-
00:05  evalbot: ferret: 12345678 -12345678
00:05  sowell: it worked it out it though
00:06  lhunath: but no \s doesn't work.
00:06  ferret: that seems to work
00:06  cthuluh: bash support EREs.
00:06  cthuluh: that's all I need to know
00:06  lhunath: I confused myself with a broken test, it seems.  time for a nap.
00:06  sowell: heh
00:07  ferret: I don't trust it to work except in the case of [[ $x =~ $re ]]
00:07  sowell: i cant do [[:digit:]]{8} ?- ?[[:digit:]]{8}{0,1} however
00:07  ferret: especially since in this case there are spaces involved
00:07  ferret: you can't, because it has ? in it
00:07  ferret: If you look up a bit I gave you the equivalent ERE to your BRE
00:08  sowell: would yeah i see that
00:08  sowell: just trying to figure out what works and what doesnt
00:08  sowell: youre solution is actually fine ;)
00:08  ferret: I like the {8}{0,1} bit, it looks cool
00:09  sowell: hrmm
00:09  sowell: it didnt like that
00:09  sowell: weird..
00:09  helo: # name=abcd1234; if echo $name | grep -E '^[0-9a-f]{7}$'; then echo only hex; else echo other stuff; fi
00:09  evalbot: helo: other stuff
00:10  sowell: do i need ' '  farret?
00:10  helo: wut
00:10  ferret: You need pretty much everything I put in
00:10  ferret: helo: you can't count ;)
00:10  ferret: # name=abcd123; if echo $name | grep -E '^[0-9a-f]{7}$'; then echo only hex; else echo other stuff; fi
00:10  evalbot: ferret: abcd123
00:10  evalbot: ferret: only hex
00:11  helo: doh, forgot i added the {7} part
00:11  sowell: heh i dont see why i would need {0,1} at the end
00:11  sowell: i only need {0,1} in the middle part
00:11  sowell: unless im missing something
00:12  ferret: # touch abcd123; name='a*'; if echo $name | grep -E '^[0-9a-f]{7}$'; then echo only hex; else echo other stuff; fi
00:12  evalbot: ferret: abcd123
00:12  evalbot: ferret: only hex
00:12  sowell: it wont take it when in ' '  either
00:12  sowell: hehe
00:12  ferret: sowell: I was assuming you wanted to allow open-ended ranges
00:12  ferret: well, mine definitely works, you can see in the bot
00:12  ferret: try copying it exactly and work out what change is stopping it from working
00:13  sowell: the middle part im sure ;)
00:13  sowell: thats the only part im changing
00:13  sowell: cause when i do (.*) in the middle it works fine
00:13  sowell: hahahaha
00:13  sowell: im stupid...helps to put the ' '  around the right block of text ;)
00:14  sowell: duh
00:14  sowell: that worked fine
00:14  sowell: heh
00:30 --- nadir is now known as Guest23856
01:10  Linex: what do I need in the kernel so that hotplugging esata will work ?
01:11  andar: doesn't sound like a question for #bash
01:14  Linex: no not really :(
01:22  micols: !r a=192.168.0.1;[[ $a ~= *\.* ]] && echo "has dot in it"
01:22  extor: I've just noticed that gzip only runs in one thread on my hexacore phenom. Has nobody tried to compile a multithreaded binary for gzip, wouldn't that be extremely useful considering the awful amount of time it takes to gzip a tar file over 100GB?
01:22 --- Guest23856 is now known as malone
01:23 --- malone is now known as m1alone
01:23  micols: how is it you match for a \. in a str without resorting to grep?
01:23  prince_jammys: micols: [[ $a = *.* ]] && echo "Has dot."
01:23  prince_jammys: you want a dot or a backslash-dot?
01:23  micols: dot :-)
01:24  prince_jammys: then what i said
01:24  drizztbsd: extor: http://www.zlib.net/pigz/
01:24  micols: thanks
01:26 --- streuner__ is now known as streuner
01:32 --- muzer is now known as MuzerAway
01:32  behelit: hi. i need to check if a file exists before cating it. is it possible to do that in one "line"?
01:34  behelit: ah, got it nm
01:35  aixenv: HI guys, can anyone help me with this, i need this http://pastebin.com/ATmgUkDs search for and replaced, i tried getting some assistance in #sed to no availk any help is appreciated.
01:36  lorph: how do I get the directory the bash script is in
01:37  Tramp_: $PWD
01:37  prince_jammys: !faq location > lorph
01:37  greybot: lorph: http://mywiki.wooledge.org/BashFAQ/028 -- How do I determine the location of my script?  I want to read some config files from the same place.
01:38  lorph: do I need to set $PWD manually if I am running the script from crontab
01:38  lorph: I seem to have to manually type cd /some/path/ for my script to work
01:39  prince_jammys: cd'ing sets PWD (present working directory) as a side effect.
01:41  prince_jammys: tell us about your script, and why you need to cd somewhere for it to "work".
01:42  aixenv: anyone able to help me with my search/replace regex?
01:42  lorph: my script is cd $HOME/tf/ \r\n screen -dmS server ./srcds_run
01:43  lorph: if I ommit the cd line, it just returns without running
01:43  lorph: when it runs on crontab @reboot. If I execute it manually it works fine
01:43  nDuff: aixenv, this is a search/replace regex intended to filter out script tags and their contents?
01:43  nDuff: !html >aixenv
01:43  greybot: aixenv: You can't realistically parse tag-based markup languages like HTML and XML using Bash or utilities such as grep, sed or cut. If you just want to dump/render HTML, see (links|links2|lynx|w3m) -dump, html2text, vilistextum. For parsing out pieces of data, see tidy+(xmlstarlet|xmlgawk|xpath|xml2), or learn xslt. Ask #xml and #html for more help. See http://www.codinghorror.com/blog/archives/001311.html
01:43  prince_jammys: lorph: that's because you are using './foo'
01:43  lorph: well I shouldn't say it returns without running, it actually runs, it just quits
01:44  lorph: prince_jammys: I've also tried the absolute path and it has the same problem
01:44  prince_jammys: instead, use ~/tf/srcds_run
01:44  prince_jammys: then perhaps the problem is inside the script itself.
01:45  prince_jammys: s/script/program/. namely srcds_run
01:46  prince_jammys: you could also use PATH=~/tf:$PATH , if suitable.
01:47  prince_jammys: ... and not even have to specify the location of srcds_run
01:51  lorph: alright thank you for the assistance, I will try it
02:01  aixenv: nduff: it's malicious code added to every page on a website
02:03  nDuff: aixenv, if your HTML is also valid XML, XMLStarlet should make it straightforward to pull out.
02:03  aixenv: its php..
02:04  nDuff: ...oh.
02:04  nDuff: can you pastebin a sample?
02:04  xelister: aixenv: some work fucked up the php script?
02:04  xelister: *some worm
02:04  aixenv: xelister: some hacked screwed over a website
02:04  aixenv: s/hacked/hacker
02:05  xelister: yeah, but he was able to change php scripts?
02:05 * nDuff tsk tsk's aixenv for not using revision control
02:05  xelister: oh that sucks doneky balls
02:05  aixenv: inserted his code yea
02:05  xelister: and you didnt even kept the code in like SVN?  or CSV?  or keep a copy on hard drive??
02:05  aixenv: nDuff, not my code, website,etc
02:05  aixenv: tsk tsk the client/customer :)
02:05  nDuff: ahh.
02:05  xelister: normally you just remove the code, bitchslap admin,  and reupload a clean version....
02:06  aixenv: i suppose ill just nuke the site, lock it down, and restore from backups
02:06  xelister: yes
02:06  xelister: also, next time
02:06  aixenv: i thought there might be some quick sed command i could use to parse out all the crap
02:06  xelister: chattr +i *php ;)
02:06  nDuff: aixenv, ...well, if you could give me a sample, I'd be happy to try to give you something to match it
02:06  aixenv: haha
02:06  aixenv: http://pastebin.com/ATmgUkDs
02:06  aixenv: xelister: my favorite cmd for crappy websites
02:06  xelister: aixenv: a clever attacker would insert easly removable crap in every script + 1 hidden small script wsomewhere
02:07  nDuff: aixenv, all of them identical?
02:07  aixenv: i dont think this is a clever attacker
02:07  nDuff: (also, what xelister said)
02:07  aixenv: yes nDuff
02:07  xelister: altough most likelly it was some automated worm ofs
02:07  aixenv: thats why i dont think they are too clever, it's the same code
02:07  nDuff: aixenv, ...and all of them taking an entire line?
02:07  aixenv: let me verify that
02:07  nDuff: sed /whrhchmhux/d
02:08  nDuff: ^^ just kills the whole line containing that substring
02:08  taylanub: nDuff: we usually use "foobar" for such purposes :P
03:04  plwert: is there a way to make ctrl-c kill my currently running bash script instead of killing the process that it launched?
03:05  plwert: whenever I have a loop that launches commands, ctrl-c merely kills the subprocess, forcing me to keep C-c down until I've been lucky enough for the signal to reach my script
03:09  magyarlatin: Hello everyone
03:10  go|dfish: hello
03:12  ferret: plwert: move the commands in front of the do
03:12  ferret: e.g. had: while blah; do something; done
03:12  ferret: have: while blah && something; do :; done
03:13  ferret: I dunno if that always works.  Maybe there's a better, more general solution
03:14  plwert: ferret: thanks, I'll try that
03:15  MTecknology: This isn't so much a bash question.. but I'm using bash to do it... In Ubuntu I'm trying to script the installation of an application that wants to use (i think) whiptail to get the root password for mysql. I'd like to figure out how to give it a default password
03:15  twkm: while blah; do something || break; done
03:16  twkm: though in fact testing for termination via sigint might be better than exiting on any failure.
03:34 --- _Tramp_ is now known as Tramp
03:34 --- hunterm is now known as nothunter
03:35 --- nothunter is now known as srslyimnothunter
03:36 --- srslyimnothunter is now known as whoami
03:37 --- whoami is now known as nowhoareu
03:37 --- nowhoareu is now known as okfineiamhunterm
03:37 --- okfineiamhunterm is now known as hunterm
04:07 --- peshalto_ is now known as peshalto
04:16  naquad: i've tried zsh and actually didn't like it, but it has feature called named directories, which means: user can create short names for directories i.e. hash -d xyz=/very/long/path/to/xyz and it is accessible as ~xyz . is there something similar in bash?
04:18  sente: naquad: yes, look into cdable_vars
04:18  naquad: sente, thank you
04:43  Edong23: !cdable_vars
04:43  Edong23: wll that work?
04:43  Edong23: is that how you do that?
04:45  sente: no i don't believe so; from the man page: If set, an argument to the cd builtin command that is not a directory is assumed to be the name of a variable whose value is the directory to change to.
04:56  twkm: the alternative would be CDPATH.
05:08  os2mac: maybe this is a question for here..... trying to grep a list of users from /etc/group to put into a while loop. problem is users are comma seperated on the same line. How do I insert a new line after each user name?
05:11  twkm: tr?  IFS? ...
05:20  bbowles: hello
05:25  bbowles: i've refined my battery prompt from last night but still having an issue, if someone could take a look at http://pastebin.com/Z7SuHBZ9
05:25  bbowles: with the current echo -n i am getting a prompt of \[\033[01;32m\]93%|\[\033[00m\]~$
05:26  bbowles: with echo -e i get \[\]90%|\[\]
05:26  bbowles: ~$
05:26  bbowles: the \]90%|\] are green and the rest is not
05:26  bbowles: correction: \]90%|\[
05:29  twkm: avoid using echo.
05:30  bbowles: twkm, should i just return the string form the function?
05:33  bbowles: and if so, how would i go about that?
05:41  davve_: is there a C channel here on freenode?
05:42  yitz_: Yes
05:42  twkm: davve_: yes.  but why ask us, instead of #help or alis?
05:42  yitz_: ##c ?
05:42  twkm: bbowles: update PS1, or invoke the script/function from within PS1.
05:43  krzie: twkm, or even just joining #C to find out ;]
05:48  bbowles: twkm, when i do that i either loose spaces or gain spaces on my line from escape characters being wrong
05:51  davve_: #c is +i :P
05:51  davve_: also i dont see why i wouldnt be able to ask here
05:51 * yitz_ feels ignored :(
05:51  davve_: i saw what you wrote ;)
05:52  davve_: and thanks. i gotsta register on here somehow first..
05:52  yitz_: #help
05:52  davve_: okidok
05:54  twkm: bbowles: since it is bash that scans PS1 for \[ and \] it is pointless to emit them to stdout.
06:04  davve_: yitz_: thanks
06:04  yitz_: np
06:05  sparrW: what's the tool that will split input lines into fields? I only want the third and fifth space-delimited fields from each line in a file
06:05  bbowles: twkm, it appears to be working, if you wouldn't mind, could you explain why i had the issues when trying to echo back the color codes and percents?
06:05  yitz_: !cut > sparrW
06:05  greybot: sparrW: cut allows you to "[p]rint selected parts of lines from each FILE to standard output" based on a single char delimiter
06:05  krzie: awk, cut, or read, depending on how you need it
06:05  twkm: nothing else would have interpreted them.
06:06  sparrW: cut, thats the one I was looking for, thanks
06:06  krzie: could also be while read _ _ VAR3 _ VAR5 ;do
06:06  krzie: all depends how you need to use things
06:07  sparrW: drat, I have multiple adjacent delimieters
06:07  sparrW: foo bar
06:07  sparrW: f   b
06:07  sparrW: can cut handle that?
06:07  sparrW: don't see an option in the man page
06:08  krzie: sparrW, what are you really trying to do?
06:08  sparrW: take the output of "last" and get a count of how many times each IP address logged in
06:08  sparrW: last -i | cut -d " " -f 3 | sort | uniq -c | sort -n
06:09  sparrW: something like that, but cut doesn't handle multiple spaces the way I need
06:09  krzie: awk would
06:10  krzie: awk '{print $3}'
06:10  sparrW: ahh, thanks
06:11  krzie: you dont expect this to be portable or anything, right?
06:12  krzie: just for your own box...
06:12  sparrW: just need to run it once :)
06:12  krzie: perfect ;]
06:14  krzie: dont forget to grep -v out the line looking like this
06:15  krzie: wtmp begins Fri Oct  1 17:51:56 PDT 2010
06:15  sparrW: well, I'm looking at btmp, but sure :)
06:15  krzie: last -i doesnt exist on my systems
06:15  sparrW: :(
06:15  sparrW: mine does hostnames by default, -i gets IPs
06:26  TheBonsai: y0
06:26  yitz_: y1
06:26  naquad: can i somehow make bash to complete cdable_vars ?
06:26  yitz_: Yeah. See the debian bash_completion package maybe
06:27  naquad: yitz_, i've got it installed and sources, but no effect
06:27  naquad: oh
06:27  naquad: i've needed shell restart
06:29 --- rainy_day is now known as whatashui
06:29  Edong23: yitz_: you know a lot about this?
06:30  yitz_: Define "this"
06:30  Edong23: bash tab completion cdable_vars
06:30  naquad: also can i make bash to cd into directory w/o cd command? kind of $ /etc/ and it doesn't say /etc is directory, but cds there
06:30  Edong23: naquad: lol, i feel like you and i are trying to do the exact same thing
06:30 --- whatashui is now known as help
06:30  Edong23: what are you doing?
06:31  yitz_: Edong23: Nope. I know it's done via some completion file somewhere with odd function names all over the place
06:31  naquad: Edong23, erm... trying to add zsh cool features into bash :)
06:31 --- help is now known as whatashui
06:31  yitz_: naquad: You can try hacking the, erm, $PROMPT_COMMAND with !! or suchlike
06:31  Edong23: whare are the cool features of zsh?
06:32  naquad: Edong23, i've liked only couple: named directories and cd into directory in case when command is directory
06:32  naquad: there are lots of them, but i didn't like the others
06:32  twkm: yitz_: is the debian bash-completion different from the caliban one?
06:32  yitz_: I have no idea what the caliban one is
06:33  Edong23: naquad: lets chat
06:33  twkm: ahh.  so it is debian's package since that's where you've seen it.
06:33  yitz_: Yup
06:33  twkm: /me chortles
06:34  yitz_: Maybe http://bash-completion.alioth.debian.org/ ? Notice the debian.org
06:34  Crash1hd: anyone know how I can make this code work with spaces? http://www.pastie.org/1219958 <-- for example if I have a folder called "new folder" it trys to svn add new and svn add folder not svn add "new folder"
06:34  TheBonsai: !umq+
06:34  TheBonsai: er
06:34  TheBonsai: !umq
06:34  greybot: "USE MORE QUOTES!" They are vital. Also, learn the difference between ' and " and `. See <http://mywiki.wooledge.org/Quotes> and <http://wiki.bash-hackers.org/syntax/words>.
06:34  TheBonsai: blindly, without clicking the link...
06:35  TheBonsai: oh
06:35  yitz_: twkm: I don't see "caliban" there at a glance
06:35  TheBonsai: a for loop
06:35  TheBonsai: !faq 1 > Crash1hd
06:35  greybot: Crash1hd: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
06:36  naquad: Edong23, on what? btw PROMPT_COMMAND + !! fails atm =\
06:36  twkm: yitz_: probably they felt it wasn't good enough to leave it an upstream package, so appropriated it.
06:36  twkm: or the site just sucks.
06:36  Crash1hd: TheBonsai, thanks will have a look :)
06:36  Edong23: naquad: i pmed you.. ubt you didn't respond
06:37  yitz_: twkm: Could be. Archlinux pulls bash-completion from http://bash-completion.alioth.debian.org/ as wekk
06:37  yitz_: *well
06:37  twkm: *shrug*
06:38  TheBonsai: i sometimes dislike over-intelligent completion
06:39  TheBonsai: example SLES: yast2 -i some_package.rpm
06:39  TheBonsai: you can't TAB complete the RPM filename
06:39  TheBonsai: somebody forgot to code that not only rpm can operate on rpm files...
06:40  twkm: isn't that really under-intelligent?
06:40  jordanm: TheBonsai: I thought it was zypper in some_package.rpm?
06:40  twkm: one of many ways to install an rpm on sles.
06:41  twkm: rpm, rug, yast, yast2, zypper, ...
06:41  jordanm: never heard of rug
06:42  TheBonsai: twkm: well, yes. i guess the word i should use is "bloated"
06:42  twkm: ahh.
06:43  q99125: To those who helped me with the tar command a few days ago, just a thank you to let you know that I was able to accomplish my goals, with just a minimum of confusion.
06:43  Crash1hd: TheBonsai, that works perfectly :) thanks
06:43  TheBonsai: jordanm: plus yast's interactive sw_single module existed long before the libzypp backend
06:43  TheBonsai: CrackZmoQ: welcome
06:43  TheBonsai: q99125: minimum of confusion? sure you were on the Freenode?
06:45  q99125: TheBonsai: the bash channel, and yes there was some confusion but not related to the tar command itself, that worked great.
06:45  Crash1hd: TheBonsai, lol how good is your svn? wondering if you know why I would get this error
06:45  Crash1hd: svn: Invalid control character '0x0a' when I try to use this code /usr/bin/svn status | grep "^?" | sed -r 's/^\?[ ]*//' | xargs -0 -r /usr/bin/svn add --force (which does the same as the other code just errors)
06:45  TheBonsai: q99125: fine somebody was able to help ("#bash says welcome")
06:45  naquad: how do i get previous command line? !! doesn't work in function :(
06:46  TheBonsai: CrackZmoQ: 0A is *mumble* CR or so?
06:46 * TheBonsai checks ascii table
06:46  TheBonsai: no, LF
06:46  TheBonsai: *scratches head*
06:46  TheBonsai: ah
06:46  TheBonsai: xargs 0
06:47  TheBonsai: xargs -0
06:47  Crash1hd: :)
06:47  TheBonsai: then xargs uses a NUL to separate the strings
06:47  q99125: TheBonsai: Thanks all, and I'll leave and do my upgrade now that I have sufficient space.
06:47  TheBonsai: which implies the \n is a "normal character" and passed to the commands
06:48  Crash1hd: Ahh so I would have to somehow remove the \n too alright I will stick to the new way then /usr/bin/svn status | grep "^?" | sed -r 's/^\?[ ]+//' | while read -r line; do svn add "$line" --force; done works perfectly :)
06:51  naquad: is there some way to make bash call function in case command is not found
06:51  naquad: ?
06:52  geirha: There's command_not_found_handle in bash 4
06:53  naquad: geirha, thank you :)
06:54  geirha: while read -r flag file; do [[ $flag = "?" ]] && echo svn add "$file"; done < <(svn st)
06:56  TheBonsai: just problematic with leading/trailing spaces in the filename, which is (i hope) totally uncommon
06:56  geirha: Yeah, parsing svn output has the same issues as parsing ls output
06:57  JRummy16: how would I go about encrypting a script?
06:57  Crash1hd: geirha, is that for me :)
06:57  Crash1hd: geirha, I ask cause its very similar to what I was just asking about
06:57  TheBonsai: JRummy16: you encrypt a script just like you encrypt any other textfile. make sure to decrypt it before executing it...
06:57  naquad: how do i cd from command_not_found_handle ?
06:58  geirha: Crash1hd: yes
06:58  TheBonsai: naquad: just do it..
06:58  naquad: TheBonsai, that doesn't move original shell
06:58  Crash1hd: geirha, ok thanks :) how is it different then what I just wrote (just curious?)
06:59  TheBonsai: does the cnfh run in an own execution environment?
06:59  TheBonsai: hm
06:59  geirha: Crash1hd: It only requires bash and svn
06:59  TheBonsai: if yes, then you're f*cked
07:00  TheBonsai: hm
07:00  TheBonsai: tested
07:00  geirha: shopt -s globstar; for f in ./**; do [[ $(svn st "$f") = "?"* ]] && echo svn add "$f"; done
07:00  TheBonsai: looks like it runs in a separate execution env
07:00  geirha: That should be safer. Requires bash4 though
07:00  Crash1hd: geirha, ahh ok thanks :)
07:01  TheBonsai: hm
07:02  TheBonsai: it must be the separate execution environment bash uses to locate the simple command(s)
07:02  TheBonsai: that explains it
07:03  TheBonsai: other opinions? :D
07:05  geirha: Crash1hd: Yet another way, just try to add all files. shopt -s globstar; f=(**) n=${#f[@]}; for ((i=0;i<n;i+=100)); do svn add "${f[@]:i:100}"; done 2>/dev/null
07:05  Crash1hd: :)
07:09  TheBonsai: naquad: does that answer your question?
07:09  naquad: The-Compiler, ansers, but doesn't help :( now that means i can't cd directly into vars :(
07:10  TheBonsai: the function can cd, of course
07:10  TheBonsai: but the main shell doesn't care
07:10  naquad: oops, sorry, TheBonsai, not The-Compiler
07:10  naquad: yeah
07:10  naquad: thats the problem
07:11  TheBonsai: The-Compiler is used to get highlighted ;)
07:11  naquad: ))
07:11  TheBonsai: naquad: what exactly do you want to do with cnfh()?
07:12  naquad: TheBonsai, i've got cdable_vars and autocd enabled, i want to make bash cd into command in case if it is one of the variables or it exists in one of the CDPATH directories
07:13  TheBonsai: ah, "extended autocd", more or less?
07:13  naquad: kind of
07:13  TheBonsai: write a plugin :)
07:13  naquad: TheBonsai, for what and how?
07:13  TheBonsai: for bash and at best in C
07:14  naquad: TheBonsai, are there any guides on this?
07:15  TheBonsai: in examples/ of the distribution there should be some
07:15  naquad: ok
07:15  naquad: thank you
07:15  TheBonsai: ("loadables")
07:15  TheBonsai: no idea if that just means builtin commands, which would have the same effect
07:16  TheBonsai: if not, then you'd need to patch the main code
07:16  TheBonsai: and if the patch is good and the functionality makes sense, and it is configurable (switchable shell option), then.... send it to the ML :)
07:18  naquad: TheBonsai, it seems that this commands are just functions and there
07:18  naquad: 's no way to hook command execution
07:18  TheBonsai: then it's dedicated to plugging in a builtin command only
07:18  TheBonsai: plan B
07:18  TheBonsai: patch
07:19  TheBonsai: hm
07:19  TheBonsai: hmhmhm
07:19  TheBonsai: HMMMMMM
07:19  TheBonsai: plan C
07:20  TheBonsai: catch exit code 127 in PROMPT_COMMAND or thelike
07:20  TheBonsai: not 100% safe, but a way
07:22  TheBonsai: PROMPT_COMMAND="[[ $? = 127 ]] && my_cnfh"
07:22  TheBonsai: and populate my_cnfh()
07:22  TheBonsai: and remember that $? isn't reset upon just pressing enter, but PROMPT_COMMAND is executed in this case
07:22  TheBonsai: so you should fake a good exit code in the function
07:23  TheBonsai: is that a way you can walk? maybe another hook than PROMPT_COMMAND, if any applicable
07:24  naquad: TheBonsai, it won't help
07:24  naquad: TheBonsai, i can't get previous command
07:24  naquad: and error message will be still visible
07:26  TheBonsai: that's the problem with this implementation
07:26  TheBonsai: i suggested to implement it like a trap, but nooooooooo....
07:26  naquad: that problem makes plan C useless
07:26  TheBonsai: the SUSE hack was taken, instead of a clean design ;)
07:26  naquad: trap? what about it
07:26  naquad: ?
07:27  TheBonsai: traps are signal handlers. additionally, bash can trap shell events (EXIT, ERR, DEBUG)
07:27  naquad: TheBonsai, hmmm... thats interesting
07:27  TheBonsai: the cnfh stuff could have been implemented cleanly as a trap or a kind of trap
07:27  TheBonsai: but nooooooooo :P
07:28  TheBonsai: 'cause IMHO cnfh is a hack that wasn't designed but grew out of a situation somebody quickly needed that functionality
07:29  TheBonsai: and instead of implementing a clean way (or not implementing it at all) Chet just took that dirty patch
--- Log closed Thu Oct 14 08:39:21 2010
--- Log opened Thu Oct 14 09:03:12 2010
09:03 --- Users 508 nicks [0 ops, 0 halfops, 0 voices, 508 normal]
09:04  DaveWM: pgas: cool,  yea i see that it seems to be relavant to using &,  i'm still working on creating a tiimeout,  lol,  its just the examples i've seen didnt apply or i didnt know how to apply them to what i'm working on
09:04 --- Channel #bash was synced in 75 seconds
09:04  DaveWM: but i think i got it now,  i had a sleep on it,  i think i dreamed about bash
09:04  DaveWM: heh
--- Log closed Thu Oct 14 09:18:53 2010
--- Log opened Thu Oct 14 09:57:36 2010
09:57 --- Users 464 nicks [0 ops, 0 halfops, 0 voices, 464 normal]
09:58  krainboltgreene: Ah, no, looks like p7zip simply can't take multiple files. Strange.
09:58 --- Channel #bash was synced in 69 seconds
09:59  selckin: none of them can.
10:01  alberto_: bb
10:17  Dynetrekk: how do I print the first N chars on each line? cat something | grep other | print-7-first-chars or similar
10:51 --- Weust`afk is now known as Weust`
10:52  blackpenguin: Dynetrekk: cut -c 1-7
10:52  Dynetrekk: blackpenguin: thanks!
10:52  Dynetrekk: blackpenguin: that one was new to me
10:53  blackpenguin: Dynetrekk: and consider to use "grep other something | cut -c 1-7" instead of you cat variant
10:53  blackpenguin: your
10:54  Dynetrekk: blackpenguin: ah, I know, but the first process isn't a 'cat', it is something more complex. h5ls -r filename.hdf5
10:54  blackpenguin: Dynetrekk: fine
10:55  Dynetrekk: blackpenguin: although the "needless use of cat" is  rarely an actual problem...
10:59 --- Bushmills is now known as 13WAAIF5H
11:00  lhunath: the name of a command to test numbers is '(('.
11:00  lhunath: it has nothing to do with brackets or not.  it's just a name.
11:00  lhunath: a name of a command to test strings and files is '[['
11:00  al_ektro: ah ok
11:00  lhunath: a name of a command to test strings and files which is ancient and you should never use is '['
11:00  lhunath: a name of a command to send CTCP echo packets is 'ping'
11:01  al_ektro: lhunath: thanks, i get it =)
11:01 --- Sanitoet` is now known as Sanitoeter
11:01  al_ektro: lhunath: hm... still getting this error, now with other line numbering...
11:02  al_ektro: + 0 == 2
11:02  al_ektro: basecheck: 1: 0: not found
11:02  koala_man: # (( --hlep
11:02  evalbot: koala_man: Missing terminating quote, bracket or keyword
11:02  koala_man: aww
11:02  al_ektro: edited this line:         if  (fping 145.254.17.21 62.154.5.1 195.110.65.93 88.217.206.50; $? = 2) then
11:03  al_ektro: into these two:
11:03  al_ektro: fping 145.254.17.21 62.154.5.1 195.110.65.93 88.217.206.50;
11:03  al_ektro: if (($? == 2) then
11:03 --- Yvemath is now known as Guest00001
11:04  al_ektro: what i want to do (in common language) is to check if the exit code of my fping command equals 2
11:04 --- Guest00001 is now known as Yvemath
11:06  lhunath: )), not )
11:06  al_ektro: got that correct in the script, just entered it wrong here in irc
11:06  al_ektro: sorry
11:08  lhunath: then you're good.
11:10  al_ektro: basecheck: 1: 0: not found
11:10  al_ektro: i dont get what that means
11:10  al_ektro: i understand that it is something in the file basecheck on line 1
11:10  al_ektro: but what is the 0 there?
11:10  al_ektro: or where does that come from
11:13  atikus: trying to get sed to delete  /file.gz  with this:   echo /media/backup/file.gz | sed "s/\/.*\.gz$//"
11:13  atikus: i must be doing something wrong but i'm not seeing it
11:17  poisonbit: atikus,  var=/media/backup/file.gz; echo "${var%/*}"
11:18  mouche: anybody know how to use grep to find a string and then look at that line and the next few lines for each match?
11:18  poisonbit: gep -A5 string file
11:18  poisonbit: for 5 lines after
11:20  Dynetrekk: mouche: man grep, read about -A, -B, -C
11:21  mouche: dynetrekk, A is perfect. Thanks!
11:22  Dynetrekk: mouche: for later :)
11:22  mouche: dynetrekk, I'm an idiot. I didn't check man pages because I thought another tool would be required /facepalm
11:22  mouche: dynetrekk, I'm new to the bash scene
11:22  Dynetrekk: mouche: I had the same experience. I was shocked and delighted when I found out about -A
11:23  Dynetrekk: mouche: welcome, you'll like it here
11:23  mouche: dynetrekk, I keep forgetting that most tools that I have used have a billion other ways they can be used
11:24  Dynetrekk: mouche: the number of combinations is simply amazing. pipes are one of the greatest ideas of all time
11:25  mouche: dynetrekk, yeah, I'm starting to get a hang of them
11:36  tarik: Hi all
11:37  tarik: I want to send mail + attch file using sendmail command  =>  cat sessions.txt|sendmail "Testmail" tarik@gmail.com
11:38  tarik: I recieve the mail in spam and the mail is empty
11:38  tarik: Is this command correct ?
11:41  twkm: tarik: unlikely.
11:45  tarik: twkm: i don't understand, what should i do? so i want to send the dialylog of my software
11:49  zxd: what does eval do here : eval "$(mount | awk '/ \/ / {print "r_dev=" $1; exit}')"
11:49  zxd: i cut this from a script
11:50  trash: Eww.
11:50  trash: Ewwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww.
11:50  trash: zxd: Throw it away.
11:50  trash: zxd: Fast. Now.
11:50  mouche: trash, explain? I'm intruiged
11:50  trash: mouche: It will execute code based on the output of mount.
11:50  mouche: intrigued
11:51  trash: So if a smart user has a neatly named mount point, you are fucked.
11:51  trash: !faq 1 > zxd
11:51  greybot: zxd: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
11:52 --- 13WAAIF5H is now known as Mushbills
11:52 --- Mushbills is now known as Bushmills
11:53  twkm: tarik: i suggest using an mua.
11:53  twkm: mail, Mail, mailx, nail, mutt, pine, ...
11:54  atikus: this does not make sense to me (only changing cp to mv). this works:    find /media/ordnance/downloads/sabnzbd/complete -maxdepth 2 -iname "*.nzb" -exec bash -c "cp \"\$1\" /media/ordnance/downloads/sabnzbd/nzbs1/ && cp -r \"\${1%/*}\" /media/ordnance/downloads/sabnzbd/store-nzb1" -- {} \;
11:54  atikus: but this doesn't:    find /media/ordnance/downloads/sabnzbd/complete -maxdepth 2 -iname "*.nzb" -exec bash -c "cp \"\$1\" /media/ordnance/downloads/sabnzbd/nzbs1/ && mv \"\${1%/*}\" /media/ordnance/downloads/sabnzbd/store-nzb1" -- {} \;
11:55  atikus: the mv only moves one. while cp -r does them all
12:00  tarik: twkm: thanks i'll try to use it
12:00  soreau: Hello
12:00  trash: atikus: -exec bash -c 'echo "$1"' _ {} \;
12:01  soreau: How can I say if [[ -f /some/path/filena* ]] ?
12:01  trash: !faq empty > soreau
12:01  greybot: soreau: http://mywiki.wooledge.org/BashFAQ/004 -- How can I check whether a directory is empty or not?  How do I check for any *.mpg files?
12:02  atikus: trash: the single quotes or the underscore?
12:02  trash: atikus: First.
12:02  atikus: trash: i want to use this as an alias in my .bashrc so i was hoping to stick to doublequotes, not being able to escape single quotes and all
12:03  trash: !alias > atikus
12:03  greybot: atikus: If you have to ask, use a function instead: myfunc() { foo "$@" | bar; }
12:03  trash: So easy.
12:03  atikus: oh hmm
12:04  lil_cain: #buffer move 11
12:04 --- JmZ is now known as JmZ_
12:05  soreau: trash: Thanks
12:08  tarik: twkm; I resolved the problem just with sendmail, i set my command in variable $a and i use it to send mail like this :  echo " $a"|sendmail "Test" tarik@gmail.com
12:08  tarik: Thanks
12:09  atikus: same issue even with single quotes :(
12:09  trash: atikus: Show Code.
12:09  atikus: find /media/ordnance/downloads/sabnzbd/complete -maxdepth 2 -iname "*.nzb" -exec bash -c 'cp "$1" /media/ordnance/downloads/sabnzbd/nzbs1/ && mv "${1%/*}" /media/ordnance/downloads/sabnzbd/store-nzb1/' -- {} \;
12:10  atikus: i'm pretty sure it's something about bash -c and "${1%/*}"
12:10  trash: Well, echo it.
12:10  atikus: i have been doing that and it looks fine
12:10  trash: So what is it not doing?
12:10  atikus: even if i just do mv on its own, without the cp &&
12:11  trash: Use:
12:11  atikus: it only moves the first thing find by found
12:11  trash: bash -c 'set -x; cp ...' and post the output.
12:14  atikus: trash: http://pastebin.com/ExRQ3EDq
12:14  atikus: ech on cp and mv in the first, set -x with the normal command second
12:16  trash: Hm.
12:17  trash: That should not happen, you can try:
12:17  trash: -exec bash -c 'for arg; do ... "$arg" && "${arg/....}"' -- {} +
12:19  atikus: ah, i might just have to
12:19  trash: The other way would be a while read loop.
12:19  atikus: i'm more familiar with for
12:20  atikus: not sure if it helps, but this is just with mv with echo and set -x: http://pastebin.com/5HkVRcci
12:20  trash: This behaviour makes no sense to me.
12:20  trash: Or...
12:21  atikus: er, actually that last pastebin i should redo
12:21  trash: Your mv might move something so it doesn't find the second anymore.
12:22  atikus: http://pastebin.com/KwDQFkfy (i manually move the golden ratio.1 folder back in nautilus during these tests)
12:23  atikus: eh well i'm only working on both of those. running it a second time causes it to pickup the second
12:24  nicola_pav: hello. i need to write a script to scan my local network for IP phones connected.
12:24  nicola_pav: i want the script to display mac addresses, ip addresses and phone brand
12:24  nicola_pav: any hint?
--- Log closed Thu Oct 14 12:36:32 2010
--- Log opened Thu Oct 14 12:41:54 2010
12:41 --- Users 515 nicks [0 ops, 0 halfops, 0 voices, 515 normal]
12:42 --- Channel #bash was synced in 71 seconds
12:45  CyberCr33p: hello
12:45  CyberCr33p: I want to create a PHP which will be used using a web-server to communicate with a shell script. Any idea where I can find more info about this?
12:46  twkm: wtf would you ask #bash about php?
12:46  CyberCr33p: the 2nd part of the question contains bash script
12:47  mouche: in my sed -r expression, _ is matched, but not -: [a-zA-Z\-\_]+
12:47  mouche: anyone know why?
12:47  lil_cain: What do you mean by communicate with a shell script?
12:50  CyberCr33p: lil_cain, the PHP script will pass some parameters to shell script and the shell script will tell the PHP that the command succeed or failed
12:50  lil_cain: Right. That's a php question.
12:50  twkm: some year when you get to the bash part, wake me.
12:50  lil_cain: You probably want to exec it or something.
12:50  lil_cain: or whatever php's built in for running commands is.
12:51  CyberCr33p: ok
12:51  lil_cain: and then check the return code, with whatever magic php provides to do tat.
12:53  nicola_pav: how can i write a bash script to scan my LAN and get mac addresses of devices that is active and up?
12:54  atikus: echo sabnzbd/com/DHD.nzb | sed 's/\/.*\.nzb$//'     gives   sabnzbd   but i'm trying for   sabnzbd/com
12:54  pgas: mouche: because - has a special meaning inside [ ] it must be used as the first or last character: [a-zA=Z_-]
--- Log closed Thu Oct 14 12:54:41 2010
--- Log opened Thu Oct 14 12:55:14 2010
12:55 --- Users 522 nicks [0 ops, 0 halfops, 0 voices, 522 normal]
12:55  pgas: maybe rsync does what you want
12:56 --- Channel #bash was synced in 74 seconds
12:56  erlingre: Ah, maybe rsync is a cleaner way, I will note that and check it out
12:56  pgas: atikus: so remove everything after the last /?
12:56  nicola_pav: how can i extract MAC addresses of active IP addresses in my network in a script
12:56  nicola_pav: ?
12:57  irvine: arp
12:57  pgas: atikus: sed 's,/[^/]*$,,'
12:57  twkm: nicola_pav: it may not be possible.
12:57  mouche: pgas, thanks. Do you know if _ is special?
12:57  pgas: _ is not special
12:57  mouche: pgas, great, thanks
12:58  nicola_pav: twkm: i managed to write a script to locate which ip addresses are active and up
12:58  nicola_pav: i want to scan their MAC address
12:58  nicola_pav: this is impossible?
12:58  twkm: when you get near the bash part, let me know.
12:59  irvine: twkm ? arp -n | grep "IP" |  awk '{print $3}'
12:59  twkm: grep|awk.  bah.
13:00  nicola_pav: i am in the bash part
13:00  nicola_pav: any hint/
13:00  nicola_pav: ?
13:00  twkm: feh.
13:00  irvine: nicola_pav : arp -n | grep "IP" |  awk '{print $3}'
13:01  nicola_pav: irvine: thanks
13:01  nicola_pav: since i just ping to check if they r up
13:01  nicola_pav: they will be in the cache
13:02  nicola_pav: and os i can use directly afterwards arp -n
13:02  nicola_pav: and so*
13:02  nicola_pav: thanks
13:05  irvine: but if if you get 2 mac address ? :) witch one will be correct?
13:06  nicola_pav: hmmmm
13:07  nicola_pav: have no idea
13:11  atikus: first i thought it was a -maxdepth thing, but i took that out and it still only does the first in a list
13:20  nicola_pav: irvine: any help?
13:20  nicola_pav: irvine: how can i know the right ip?
13:22  twkm: atikus: at a guess you do things in the wrong order.
13:23  twkm: nicola_pav: perhaps some tool would output the "right" ip.
13:23  nicola_pav: twkm: any hint?
13:24  atikus: twkm: http://pastebin.com/hNbgadsK
13:24  twkm: nicola_pav: no.  ask your o/s channel.
13:24  twkm: atikus: http://no.thanks/
13:25  irvine: nicola_pav .. arping - sends IP and/or ARP pings (to the MAC address)
13:26  irvine: atikus / find -type d . and from that list do if [ ! -d $destination ] mkdir -p
13:27  irvine: you can do in reverse .. find i $b structure to a$ and if don't exist remove from b$
13:28  irvine: you will have mirror in dir's. then you can copy all files
13:28  twkm: mildly hilarious.
13:28  atikus: irvine: i want to copy all .nzb files to one folder, then move the folder the .nzb is in to another folder
13:28  twkm: consider cpio, pax, rsync or tar instead of that manual cp crap.
13:29  twkm: but then this is probably about being a thief, so why i say anything i do not know.
13:29  atikus: eh i guess i'm trying too hard to have it in one find. multiple rsyncs or something might do it
13:30  atikus: just i do have other folders besides the .nzb folders, so i want to make sure to only move the .nzb folders
13:31  atikus: this is being a lot more complicated than i think it should be
13:32  irvine: grep this list for .nzb folders then
13:33  irvine: twkm .. then he could make tar and bzip2 all structure and it could be more easly if this is thief
13:34  twkm: whatever, yoda.
13:35  irvine: doh. american ppl
13:35  DaveWM: is there any directory structure on linux that is in memory but can be written to ?
13:35  twkm: ask #linux.
13:36  bassliner: DaveWM: of course there is.
13:36  twkm: all directories are in memory?
13:36  bassliner: DaveWM: tho it would not be a "directory structure", but a filesystem.
13:37  DaveWM: bassliner: i wanna create some temporary files for a script and i figured writing them to memory would create less disk activity
13:37  DaveWM: they'll be small files,  more like temporary storage for variables
13:37  twkm: though #linux is probably too general, as there may not be something available in every kernel much less distribution, so channels specific to your target systems would be better.
13:38  DaveWM: yeah,  on ubuntu atm,  i was just asking here because its for redirection of some stuff in a bash script
13:38  twkm: immaterial.  if your o/s has it they'd know.
13:39  twkm: now, if you have a pathname we can talk about how you might test that it exists, or how to get stuff into it, or similar.
13:41  twkm: : ${TMPDIR:=/tmp} ; tempfiles=( "$TMPDIR/file1" "$TMPDIR/file2" ... ) ; touch "${tempfiles[@]}" ; ...
13:48  Alvo: hi bashers
13:49  Alvo: -how can i get the age of a file with bash in seconds?
13:49  twkm: it may not be possible.
13:50  ferret: Alvo, you mean how long since the file was created?
13:51  Alvo: yes
13:51  twkm: odd answer.
13:52  pgas: normally unix doesn't store the creation time.
13:53  Alvo: this workz  http://www.noah.org/wiki/Test_file_age
13:55  pgas: you wish
13:56  pgas: it uses modification time, so it's based on the time of the last modification
13:56  pgas: which might be what you want, or not
13:57  Alvo: yeah but in this case it doesnt matter
14:09  mar77i: !sh
14:09  greybot: sh is the POSIX or Bourne shell, not bash. Even if sh is a symlink to bash, running a script under 'sh' (either by typing 'sh myscript' or putting '#!/bin/sh' at the top) *disables* many bash features. See http://mywiki.wooledge.org/BashGuide/Practices#Choose_Your_Shell
14:10  mar77i: although, $(( is posix. and btw, if you're using bash
14:10  mar77i: ![[
14:10  greybot: [[ is a bash keyword similar to (but more powerful than) the [ command. See <http://mywiki.wooledge.org/BashFAQ/031> and <http://mywiki.wooledge.org/BashGuide/TestsAndConditionals>. Unless you're writing for POSIX sh, we recommend [[.
14:11  nicola_pav: when i run the command arp -n
14:11  mar77i: keep in mind that test $blah breaks if $blah contains whitespace.
14:11  nicola_pav: the first line is always WARNING
14:11  nicola_pav: how do i hide it?
14:11  nicola_pav: just hide the first output line
14:12  twkm: nicola_pav: ''man arp''?
14:12  nicola_pav: got it, thanks
14:13  mar77i: well, I get no warning btw
14:14  bolt: how can I filter something stored in a variable to get only [A-Za-z0-9] and space left?
14:17  twkm: remove everything except those things, e.g., using parameter expansion.
14:20  bolt: figured it out :)
14:23  nicola_pav: i have the following output
14:24  nicola_pav: 192.168.1.0 [00:00:00:00:00:00]
14:24  nicola_pav: how do i remove [ and ] ?
14:24  irvine:        tr - translate or delete characters
14:24  twkm: parameter expansion, IFS, ...
14:26  erlingre: I need something like cp's --parents for mv. Anyone have a suggestion?
14:26  mcantor: What's "supposed" to go in .profile/.bash_profile?  Just environment variables?  I noticed that if I put "export PATH=$PATH:~/bin" in my .bashrc, it gets re-interpreted (of course) when GNU screen creates a new terminal, which results in duplicate entries and possibly other undesireable side-effects.
14:26  twkm: use cpio, pax, rsync or tar instead.
14:26  twkm: mcantor: faq.
14:26  mcantor: D'oh!  Naturally.
14:27  mcantor: twkm: Actually, the FAQ doesn't say anything about invocation!
14:27  pgas: !dotfiles > mcantor
14:27  greybot: mcantor: http://mywiki.wooledge.org/DotFiles or - for a technical explanation - the INVOCATION section of man bash.
14:27  mcantor: twkm: Except 023, which covers --rcfile, but that's not what I'm talking about.
14:27  mcantor: pgas: Thanks, I'll check that out.
14:28  mcantor: Strange... documentation states that child shells do not inherit aliases as part of their environment, but I seem to be observing behavior that suggests otherwise.
14:28  twkm: abhinav_singh: one seems to be enough.
14:29  twkm: mcantor: some vendors are morons.
14:29  mcantor: twkm: "vendors"?
14:29  irvine: no they not !
14:29  pgas: mcantor: how do you see that?
14:30  abhinav_singh1: twkm? in which context your are talking
14:30  twkm: clone.
14:32  mcantor: Ohh... no, I was making a silly oversight.  pgas: I forgot that my .bash_profile sources *both* .profile and .bashrc.  For a moment I was picturing a shell sourcing .profile (which I put an alias into, for testing), then loading a child shell.
14:32  mcantor: I suppose that works when I SSH into the box, but it wouldn't work at a non-login prompt launched from a window manager.
14:32  twkm: ahh, so user fault.
14:33  mcantor: twkm: Am I correct about that?  If I have an alias in my .profile, which is sourced by .bash_profile, then the alias would be available when I SSH'd directly into the box, but not when opening a local gnome-terminal *after* logging in.  Right?
14:34  twkm: ''man bash'', invocation section.
14:34  mcantor: twkm: Yes, I have read the invocation section of the bash manpage.
14:35  twkm: then work out how ssh starts bash vs how gnome-terminal does so.
14:37  mcantor: twkm: Ah yes, I must merely "work out" its behavior.  I'll simply pull down the source code for ssh and gnome-terminal and spend the day in quiet perusal; asking in #bash where someone might have already done it is right out... ;-)
14:37 * mcantor reads the DotFiles wiki page.
14:40  mcantor: Ahh, yes.  Perfect.  I wish this wiki page came up higher in Google results.
14:40  twkm: i would read ssh and gnome-terminal's documentation.  but whatever.
14:42  mcantor: twkm: The extent of documentation regarding shell mechanics in ssh's manpage is this: "When the user's identity has been accepted by the server, the server either executes the given command, or logs into the machine and gives the user a normal shell on the remote machine."
14:42  mcantor: Is there some other documentation you were referring to?  (No sarcasm)
14:44  mcantor: pgas: Thank you!!  This wiki page literally contains every single piece of information I wanted to have.
14:47  twkm: mcantor: sorry to hear that all those see also's are useless.
14:49  mcantor: twkm: They are useless!  I don't have time to play dice & darts, hoping that one of them contains the nugget of information I'm looking for.  They simply are not organized in a way that supports my current angle of inquiry.
14:50  twkm: dice and arts.  uh-huh.
14:50  twkm: err, darts.  well, sorry to hear it.
14:53  mcantor: It happens.  I'll live, somehow.
14:53 --- taylanub0 is now known as taylanub
14:53  twkm: good thing others can, to write wiki pages for those that ... won't.
14:54  mcantor: twkm: I'm being melodramatic, of course.  I do have the time; just not at this second.  By finding the wiki page, I was able to get the information I needed immediately, solve my issue, and move on to the next task.  If I had to go hunting for the info myself, it would have been a much bigger diversion.
14:57 --- yonatan1 is now known as yonatan
15:01  erlingre: In a shell script I found this line "find ${src_dir} -type f -print 0 | while read -d $'\0' file" why the $ before the null character?
15:02  pgas: !$'
15:02  greybot: Bash has a special form of quoting, $'string' in which backslash-character combinations are expanded. For example, echo $'this is a literal tab: \t'
15:03  pgas: it doesn't really work as expected though and you can just use -d ''
15:04  pgas: it also miss some bits to be really safe: IFS= read -rd '' file
15:05  erlingre: why is it necessary to set the input field separator?
15:06  pgas: otherwise it will discard leading and trailing blanks
15:09  buntfalke: So. I got userinput in $FOO. is it possible this line might cause code execution?
15:09  buntfalke: echo "${FOO}"
15:09  buntfalke: ?
15:10  koala_man: no
15:10  buntfalke: because the "" capsules it, and forces it to become a string, right?
15:10  koala_man: echo $FOO doesn't cause code execution either, but it will word split and glob expand
15:10  erlingre: pgas: thanks
15:11  buntfalke: koala_man: Umm...what /could/ cause code execution, then?
15:11  buntfalke: Couldnt you get FOO='; rm -rf /' and it will wordsplit an do evil stuff?
15:12  koala_man: $FOO  or "eval $FOO" or awk "/$FOO/ { print 'match'; }" or bash -c 'yourcommand "$FOO"'
15:12  koala_man: # FOO='; rm -rf /'; echo Hello $FOO
15:12  evalbot: koala_man: Hello ; rm -rf /
15:12  buntfalke: hmm...
15:13  buntfalke: # FOO='Hello $(touch ~/test) World'; echo $FOO
15:13  evalbot: buntfalke: Hello $(touch ~/test) World
15:14 * buntfalke is confused
15:15  erlingre: pgas, here is the complete script I have created http://pastebin.com/fhRGC7Sm Do you think it is a reasonable safe way to move log files from $src to $dst and creating the same directory structure in $dst as in $src?
15:17  buntfalke: koala_man: So in 'command $VAR' $VAR will be expanded and word splitted. why wont it break if the expansion contains ' ; '? _because_ it'll be wordsplitted it'll be forced to be parameters and is no longer subject to command evaluation, thus the ; is ineffective, and will be a normal parameter?
15:18  buntfalke: As in, once it's been wordsplitted, one would have to explicitly reevaluate the result so it is interpreted as potential commands using eval and co?
15:18  koala_man: right
15:18  buntfalke: thanks
15:34  al_ektro: hi again!
15:35  nicola_pav: how can i match string from a file to another file in bash?
15:35  nicola_pav: or how can i match a string to an external file in bash?
15:36  al_ektro: does anyone like to help me with a bash script? I want to use a config file with an array of parameters and call a script for each line of the config file
15:37  twkm: faq #1.
15:42  lhunath: nicola_pav: be more specific
15:42  lhunath: rather, clear.
15:43  nicola_pav: lhunath: i have wrote a script that will get me list of Ip addresses and mac addresses
15:44 --- taylanub is now known as taytaytay
15:44  lhunath: oh dear.
15:44  nicola_pav: i have a oui.txt file that has the mac prefixes matched to vendors
15:44  nicola_pav: i want to match the mac addresses to vendors and in the end i want a txt file that has ip address, mac address and vendor
15:45  lhunath: depending on what the format of your data is, join(1) may do exactly what you want.
15:46  nicola_pav: the data in the oui file is like this: 000000 Vendor Name
15:47  skered: How large is oui.txt and how many full mac addresses/IPs are you looking up?
15:47  lhunath: nicola_pav: yes, carry on with join.
15:48  nicola_pav: skered: lsit of ip addresses and mac addresses are in my network. maximum 250
15:48  nicola_pav: the oui file if quite big
15:48  ashren: what does ++ mean when I'm debugging with bash -x? A subshell?
15:49  nicola_pav: lhunath: i will try join. thanks
15:49  skered: You can join data with join based on a partial key?
15:50  nicola_pav: skered: never used join. looking into it now
15:56 --- Nemie_ is now known as Nemie
16:04  grandemahatma: how do I search for all occurrences of "my_text" in all files .cpp, recusively? grep -R 'my_text' *.cpp doesn't work
16:04  taytaytay: use 'find'
16:05  selckin: use find or some sort of **/*.cpp
16:05  taytaytay: does bash have ** ?
16:05  grandemahatma: taytaytay: how?
16:06  taytaytay: grandemahatma: might want to read the documentation: man find   in this case: find . -name \*.cpp -exec grep my_text {} +
16:07  grandemahatma: thasnk
16:08  erUSUL: !**
16:08  greybot: In bash 4, when the globstar shell option is enabled ( shopt -s globstar ), the glob ** expands to all files and directories found recursively under the current directory, and **/ to all directories. As of 4.0.28, combinations like foo/**/*.txt work, but **.txt and foo** do not.
16:08  latenite: Hi leute, Ich versuche variablen an ssh zu übergeben und muss die vorher "escapen" mit EINER klappt es aber mit ZWEIN geht es nicht mehr: http://pastie.org/1220794 warum?
16:08  twkm: taytaytay: ''man bash'' should provide an answer.
16:11  taytaytay: latenite: it's actually English in here
16:11  latenite: taytaytay, oh sorry..my fault:
16:12  taytaytay: twkm, erUSUL: thanks
16:12  latenite: taytaytay, I try to get TWO variables pushed to "ssh" with the propper escape. It works with only ONE variable but TWO are failing. Why?
16:13  erUSUL: !faq eating
16:13  greybot: http://mywiki.wooledge.org/BashFAQ/066 -- I want to check if [[ $var == foo || $var == bar || $var == more ]] without repeating $var n times.
16:13  erUSUL: wrong faq ;P
16:14  drizztbsd: eating!
16:14  latenite: erUSUL, s that for me ? :)
16:14  taytaytay: was meant for you
16:16  erUSUL: !faq 96
16:16  greybot: http://mywiki.wooledge.org/BashFAQ/096 -- ssh eats my word boundaries!  I can't do ssh remotehost make CFLAGS="-g -O"!
16:17  taytaytay: heh, gotta use "eats"
16:17  latenite: erUSUL, taytaytay this is waht I did: http://pastie.org/1220808 but I just dont see where I am doing wroing for the second escaped variable. ?
16:18  derick__: this script did I use to check if a drive is mounted for backup with rdiff-backup http://fpaste.org/vWX7/
16:19  derick__: Now I want to backup via ssh and wireless internet. rdiff-backup has this functionality, how can I  implement this in such a script? http://fpaste.org/xxiH/
16:19  latenite: taytaytay, can you hint me to where I am wrong?
16:19  twkm: usually by reading the documentation.
16:19  taytaytay: latenite: when you pass "$variable" to printf %q,  the shell eats the "" around $variable
16:20  lhunath: don't test the output of grep.  test the exit code of grep -q
16:20  taytaytay: i actually never used ssh (big confession) but that might be it
16:22  latenite: taytaytay, well this WORKS fine http://pastie.org/1220819 but this dows not http://pastie.org/1220808 and I just dont see why.
16:22  lhunath: !ssh > latenite
16:22  greybot: latenite: Secure SHell (See #openssh, http://mywiki.wooledge.org/CategorySsh) - To run bash code remotely; adapt: ssh user@host bash <<< "$(printf 'echo %q' "$localVar")"
16:22  lhunath: throw your code away.
16:23  lhunath: and start quoting your PEs well.
16:23  VX1: with, cat error_log | grep Script   / and output like [Thu Oct 14 19:05:39 2010] [error]    how can i just display the Thu Oct 14 19:05:39 2010  part
16:23  lhunath: don't use grep.
16:24  trash: Needs more animals.
16:24  lhunath: grep selects lines, you don't want a line, you want part of it.  consider sed or awk.
16:24  twkm: or cat.
16:24  latenite: lhunath, this page does not say much http://mywiki.wooledge.org/CategorySsh
16:24  VX1: lhunath ok
16:24  lhunath: latenite: thankfully the factoid says plenty.
16:25  latenite: lhunath, sorry I am lost with this "ssh user@host bash <<< "$(printf 'echo %q' "$localVar")"2"  how should I use taht im ym case?
16:26  lhunath: oh, you want it pre-chewed.
16:26  lhunath: ssh user@host bash <<< "$(printf 'find %s/%s -maxdepth 1 -type d | tail -n1' "$document_root" "$install_path")"
16:26  latenite: lhunath, not not realy but the link you send onyl speaeks about sshtunnels and sshkeys
16:26  lhunath: ssh user@host bash <<< "$(printf 'find %q/%q -maxdepth 1 -type d | tail -n1' "$document_root" "$install_path")"
--- Log closed Thu Oct 14 16:32:12 2010
--- Log opened Thu Oct 14 16:47:35 2010
16:47 --- Users 533 nicks [0 ops, 0 halfops, 0 voices, 533 normal]
16:48 --- Channel #bash was synced in 79 seconds
16:49  latenite: lhunath, ok what if I have more variables? Like here: http://pastie.org/1220882
16:49 --- taytaytay is now known as taylanub
16:49  latenite: lhunath, I know this is not working because I did not use %d . THATS because I dont knwo the right order. is it by appearance?
16:50 --- taylanub is now known as taytaytay
16:50  lhunath: order that they are passed as arguments, yes.
16:51 --- VmC is now known as CaHbKa
16:51  latenite: lhunath, so if I chane something in the middle of my script I start COUNTING variables?
16:51  lhunath: shrug.  just assign them in the beginning if your script is so long.
16:51  latenite: that somehow sounds "impraktical"? do you know what I mean?
16:52  lhunath: not if you assign them.
16:52  latenite: lhunath, "not if you assign them." ???
16:52  lhunath: sigh
16:53  latenite: lhunath, man I am sorry. but I dont get it...what if you have 50 variables..then they are all at the end of the "printf" statement...in one long list.
16:54  lhunath: http://pastie.org/1220903
16:54  latenite: ahead of that is a scipt that has  many %q s in it...how would I ever find a variable in that?
16:55  latenite: lhunath, ahh ok sure that looks sensing.
16:55  lhunath: notice I also QUOTED your variables; as they should be.
16:56  lhunath: and tossed out those bloody ``
16:56  latenite: man I am sorry I know thsi is basic to most of you...I m just still learning. please forgive and THANKS alot :)
16:56  lhunath: you've got a stray ' at the end
16:57  latenite: lhunath, me? where?
16:57  izinucs: In a simple learning script you start it with "./arguments.sh Bash Scripting Tutorial"  and it works.. if I add a 4th word to the startup line it will not print the 4th word except on the last variable displayed. Here's the script.. it's short http://pastebin.com/8Q4sxG5x .. any help appriciated
16:57  lhunath: latenite: in the pastebin I pasted last
16:58  lhunath: izinucs: stop learning from wherever you got that code.
16:58  latenite: lhunath, that does not belong there? so would be right? http://pastie.org/1220912
16:58  lhunath: izinucs: see the guide in the topic instead; your example code is littered with pitfall bugs.
16:59  izinucs: lhunath: thanks.. I'll do that.
16:59  lhunath: latenite: I suppose; bash(1) is better at parsing bash than I am.  run it.
16:59  pgas: izinucs: well you need a $4 to print the 4th argument
17:00  latenite: lhunath, sure I ll try :) thanks
17:00  izinucs: pgas: the 4th argument being the 4th word on the startup line?
17:00  pgas: yes
17:01  izinucs: pgas: that I can understand.. why would it print the 4th word in the printout of the 3rd arguement and not the rest?
17:02  pgas: $n where n is a number only prints the n'th argument
17:03  izinucs: pgas: k.. I'll augment it.
17:05  izinucs: pgas: interesting.. basic for most.. but interesting to me at this point.. thanks for the clarification.
17:06 --- JmZ_ is now known as JmZ
17:08  mmestnik: Hello, 'expression recursion level exceeded'  s=a; a=s; echo $(( $a | $a & 3 ));
17:10  mmestnik: I'd like to do an isnumeric test on $a.  Issue a can and should be 0, but 3 is the value for a is not 0 1 2 or 3.  Other numerical values accepted.
17:10  mcantor: Is it appropriate to ask questions about ssh and sshd here?
17:10  mcantor: (particularly as they pertain to bash environments)
17:11  twkm: maybe.  probably better to start with #openssh unless you know you have a bash issue.
17:11  mcantor: twkm: Thanks, I was just being a moron and didn't think to go to #openssh instead of #ssh
17:11  tuxdev: mmestnik, you're not making sense
17:13  mmestnik: tuxdev: If I was making sense bash would likely understand.  Here is some more code: shift state; $(( state | state & 3 ));
17:14  mmestnik: If $1="state", then something will though this error "expression recursion level exceeded".
17:14  mmestnik: bash: a: expression recursion level exceeded (error token is "a")
17:14  twkm: mmestnik: test a in a textual way, not in an arithmetic evaluation.
17:14  mmestnik: twkm: For all integers?
17:15 --- taylanub is now known as taytaytay
17:16  mmestnik: I tried to do [ $state == "state" ]; but this has an issue where I'd need to check for every other var...
17:16  mmestnik: Wait, what if I did state="+ $state";
17:16  twkm: for non-integers.
17:17  drizztbsd: mmestnik: never use == with [ use [[
17:17  mmestnik: I'm attempting to test for isinteger, notinteger is a little different.
17:17 --- taytaytay is now known as taytaytaytay
17:18  mmestnik: drizztbsd: thank you I'll try and keep that in mind.
17:18  drizztbsd: ![[
17:18  greybot: [[ is a bash keyword similar to (but more powerful than) the [ command. See <http://mywiki.wooledge.org/BashFAQ/031> and <http://mywiki.wooledge.org/BashGuide/TestsAndConditionals>. Unless you're writing for POSIX sh, we recommend [[.
17:18 --- taytaytaytay is now known as taylanub0
17:18  mcantor: My screen TERM entry is screen-256color.  I ssh to many different boxes on a daily basis, and in many cases, there's no such entry in the terminfo database.  It's impractical to keep the file in my home directory, since I sometimes log in to these remote boxes as a different username, and I can't modify their terminfo directories because I don't have admin privileges.
17:18  mcantor: Is there anything I can do except alias ssh='TERM=screen ssh' when my TERM is screen-256color, and then in my .bashrc, check for that terminfo entry when my TERM is screen?
17:19  mcantor: twkm: #openssh didn't know.  ;-)
17:19  twkm: mmestnik: they are quite related.  give it some thought.
17:20  mmestnik: drizztbsd... dahh, who isn't writing for POSIX sh?  Me thinks of Debian's dash transition.  For my project I'm writing for HPUX/Sun/AIX/ect.
17:21  drizztbsd: cool
17:21  drizztbsd: so use [ with =
17:21  drizztbsd: == is NOT supported in POSIX sh
17:22  tuxdev: mmestnik, I surely don't write for POSIX sh unless I absolutely have too.  It's terrible
17:23  pgas: (to nitpick a bit more = is not defined for the posix [ since it's not required for [ to be part of sh)
17:23  drizztbsd: pgas: yes, but /usr/bin/[ or /bin/[ is almost always present
17:23  mmestnik: twkm: There are two main differences, the first is failure VS error.  If there's an error then it fails and weather you want to catch it or not.
17:24  mmestnik: The second is things like scientific notation and hex that contain letters, but are valid numbers.
17:25 * helo has found that /bin/bash is always present ;)
17:25  twkm: helo hasn't looked around much.
17:25  drizztbsd: helo: no, *bsd uses /usr/local/bin/bash :P
17:26  drizztbsd: infact i use #!/usr/bin/env bash as shebang
17:26  mmestnik: helo: Never used SunOS?  It may be installed by default in recent versions but many ppl are not running recent versions.
17:26  mmestnik: drizztbsd: On some systems it's /bin/env
17:27  mmestnik: bash: + a: expression recursion level exceeded (error token is "a")
17:27  mmestnik: a="a"; a="+ $a"; $(( $a | $a & 3 ))
17:28  helo: *very* few companies around here use anything but windows... so the chance of running into an even less common unix-like is really low
17:28  mmestnik: helo: Well I'm working with these systems all the time.
17:29  pgas: mmestnik: it only interprets a string as a variable name to evaluate once
17:29  mmestnik: pgas: How can I get that behavior?
17:30  pgas: what behavior?
17:30  mmestnik: to only interprets a string as a variable name to evaluate once.
17:30  helo: what's the point of even thinking about bash if you can't use its cuddly non-POSIX features?
17:30  pgas: mmestnik: that the only behavior you get
17:30  mmestnik: To set expression recursion level to say 1.
17:31  mmestnik: pgas: Try: a="a"; a="+ $a"; $(( $a | $a & 3 ));
17:31  pgas: you cannot set the recursion level
17:31  mmestnik: it returns an error for me.
17:31  twkm: drizztbsd: nicely risky of you.
17:32  helo: writing in bash is more readable (so less error prone)
17:32  twkm: mmestnik: so stop that.
17:32  twkm: sheesh.
17:32  helo: so wouldn't it make sense to use systems that provide it for the sake of error reduction?
17:32  mmestnik: helo: because it's one shell you have to support.  perhaps it's the shell to support.
17:33  helo: legacy is a bitch, i guess
17:33  mmestnik: Supporting the others is essential for what I do.  I'm writing a document on sending passive checks to Nagios.
17:34 --- Weust` is now known as Weust`afk
17:34  mmestnik: helo: These legacy systems have been running for 15years with 7 year uptimes, nothing to complain about there.
17:36  lil_cain: Obviously up to date with security patches then.
17:36  helo: ding
17:36  mmestnik: A while back they tell me this story of the time the one and only UPS turned off.
17:37  mmestnik: I come from the land where men are men and patch binary code while it's running.
17:38  erUSUL: a land where everybody uses  lisp machines ?? or erlang ;P
17:39  mmestnik: When there is a buffer exploit, I'll just inject my own little fix.  If the fix is run then there is no more problem and if the fix dosen't run then the security reports are wrong...  I find this is vary common.
17:40 * helo thought software was difficult enough to get right already
17:41  mmestnik: well I cant chat all day, I've got this howto to wright.
17:45  pgas: mmestnik: once it has been evaluated once in your expression it is left with a "a" that it cannot interpret
17:47  mmestnik: pgas: Sadly,my testing indicates a recursion error is thrown.
17:48  mmestnik: This recursion will follow s=a; a=s;
17:48  pgas: it doesn't recurse.
17:48  mmestnik: http://www.unix.com/shell-programming-scripting/131764-expression-recursion-level-question.html
17:48  mmestnik: I'm not the only one.
17:49  pgas: of course ...oh welll
17:50  twkm: he wants $(( and won't listen.  so i've ignored him.
17:51  irc2samus: guys what was the standard way of doing GNU grep \< and \>
17:52  mmestnik: twkm: Thank you for your help.  I'll use $(( instead.
17:52  Lenhix: Hi. If I define a function which sets a variable and from the "main body" call the function, is that variable available? (I guess it is)
17:52  twkm: ugh.
17:52  rickest: irc2samus: you mean word boundaries as in \< in vim?
17:52  irc2samus: yeah
17:52  twkm: Lenhix: tias.
17:52  twkm: irc2samus: ignore the grep documentation of course!
17:53  irc2samus: twkm well I have GNU grep so I bet it refers to that :)
17:53  Lenhix: well, I was expecting that :P
17:53  irc2samus: but I seem to remember been here a while ago and having a discussion about a proper way
17:53  irc2samus: which I don't remember now
17:54  twkm: it might discuss what it means, then you can try to emulate it.
17:54  rickest: irc2samus: it's not a meta, it's a command-line switch:  -w
17:55  rickest: per 'man grep'  :-)
17:55  geirha: I'd go with awk. Loop through the fields with == "foo" or ~ /^foo$/
17:55  twkm: rickest: not that that isn't gnu grep too, so not really much different.
17:56  rickest: twkm: and to think I thought I was using GNU grep all this time
17:56  twkm: recent bsd grep's have it too.  but i suspect he wants more portability than those.
17:56  irc2samus: that -w is interesting, not what I was asking but it allows me to use the word-delimiter behavior with -F
17:57  twkm: some grep's use [[:<:]] and [[:>:]], but again it isn't exactly universal.
17:58  rickest: irc2samus: cmd | perl -ne 'print if /\bword\b'      heh
17:58  rickest: * '/\bword\b/'
17:59  twkm: i.e., don't use grep.
17:59  rickest: although mine doesn't help if you need line numbers, -A|B, etc
18:00  lupinstein:  if you saw a line like this  [ "$1" = 10.10.0.79 ] && W=60 C=80, wouldn't you think that w=60 and c=80 only if $1 = the ip. And what if there is not ip that matches 10.10.0.79
18:00  twkm: rickest: perl can count.  #perl for more.
18:01  rickest: twkm: yes, I meant my snippet would grow to meet those requirements. same for -l, et al
18:04  rickest: cmd | perl -ne 'print and $nr++ if /\bword\b/; END {print "nr: " . $nr}'
18:08  rickest: fwiw, you'd want ++$nr in that example
18:08  latenite: Hi filks, I am a litte lost on "how to escape" here http://pastie.org/1221126 is sais: line 33 command not found. Do I miss a quote?
18:09  rickest: latenite: no closing '
18:10  rickest: 'CREATE DATABASE is never closed
18:11  rickest: well, more accurate to say ' is missing rather than saying that particular one isn't closed
18:13  latenite: rickest, http://pastie.org/1221137 is not working either. here it sais " Zeile 35: file end while searching `'' ."
18:14  latenite: rickest, ./tets.sh: line 35: unexpected EOF while looking for matching `''
18:15  rickest: latenite: I may not be parsing all the line continuations anyway.  Try replacing mysql with echo, then start with just the first line, adding each subsequent line until you see it
18:18  latenite: rickest, wiht echo : http://pastie.org/1221147 it just gives me this: http://pastie.org/1221149
18:18  latenite: I am lost here *cry*
18:18  rickest: latenite: break it down into smaller, more managable pieces.  this is not technically hard, it's just grunt work
18:19  skered: jesus h christ... that's ugly
18:19 --- fairytale_magicb is now known as cold1514
18:19  rickest: and if your next question is how to single quote inside single quotes, echo 'this works, doesn'\''t it?'
18:19  helo: just the plethora of ${document_root}${install_path} really
18:20  VX1: hi, whats wrong here, keeps going to the else condition, if [[ $(wget -ST5 www.google.com) = *google* ]]; then ls;else echo "no match" ; fi
18:20  skered: Can I point something out... "ssh root@...."
18:20  helo: and tons of unnecessary {} around variable names... but some may consider that good practice
18:21  hyper_ch: is there a way to bring a process that was started in the background (& at the end) back to the foreground?
18:22  skered: hyper_ch: fg?
18:22  al_ektro: how can i parse single quotes to a bash script? i want to parse a text to gsmsendsms as following
18:22  hyper_ch: skered: I tried:  fg PID but only get no jobs
18:23  skered: hyper_ch: jobs -l
18:23  al_ektro: gsmsendsms -d /dev/ttyS0 PHONENUMBER 'SMSTEXT'
18:23  rickest: hyper_ch: not PID, JOB_SPEC as seen with jobs -l
18:23  al_ektro: I am using the variable $SMSTEXT for the sms text
18:23  hyper_ch: skered: rickest: jobs -l is empty
18:23  al_ektro: but the text itself has to be in single quotes
18:24  skered: hyper_ch: Then you don't have any background jobs?
18:24  latenite: rickest, ok I did break it down: http://pastie.org/1221161 still I get ./mysql.sh: line 16: unexpected EOF while looking for matching `''
18:24  latenite: ./mysql.sh: line 22: syntax error: unexpected end of file
18:24  hyper_ch: so, what is a job then called that is called like:         script.sh & ?
--- Log closed Thu Oct 14 18:30:55 2010
--- Log opened Thu Oct 14 18:31:17 2010
18:31 --- Users 531 nicks [0 ops, 0 halfops, 0 voices, 531 normal]
18:32 --- Channel #bash was synced in 80 seconds
18:32  skered: Also, are you going to run this SQL? Should there be a mysql command in there?
18:33  skered: Why can't you write the script on remote machine and execute via ssh?
18:39  rickest: does "!faq1 > name" work even if name is not in this channel?
--- Log closed Thu Oct 14 20:03:40 2010
