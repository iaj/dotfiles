--- Log opened Tue Nov 02 00:00:13 2010
00:02  road-runner: hmm that bombs for me
00:02  road-runner: fak
00:08  nDuff: road-runner, "bombs" isn't a very useful description
00:08  nDuff: road-runner, ...if you want help, give us enough information that we can help you.
00:13  qwd: I've downloaded a bunch of videos from khanacademy.org and I want to add numbers in front of the filenames to get the files in the correct order. What I've done so far is to sort by change time in mc and manually add a number. This doesn't seem like the easiest way. Anyone willing to help me do this faster?
00:17  nDuff: qwd, is there at least a second between their modification times?
00:17  nDuff: qwd, I'd start with stat --format='%y %n\0' * | sort -z -n
00:17  nDuff: !faq 1 >qwd (for the rest)
00:17  greybot: qwd (for the rest): http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
00:19  road-runner: http://pastebin.ca/1979183
00:19  road-runner: I might  just give up and barf the info
00:19  road-runner: out
00:19  road-runner: let someone eyeball it
00:19  nDuff: road-runner, ehm, that's not exactly demonstrating what the problem you're having is when you try to run the code I gave you.
00:20  nDuff: !set-x > road-runner (to display what's going on during each line of operation)
00:20  greybot: road-runner (to display what's going on during each line of operation): Setting the -x option on bash enables a debugging mode that makes bash output the command name and arguments that it will run (after all parsing and expansion has been applied). Set it by starting a script with ''bash -x ./myscript'' or putting ''set -x'' before the code you want to debug. ''set +x'' turns this behaviour off.
00:21  qwd: nDuff: I tried stat... and it sorted the files by name. When I run: ls -cr  it sorts it right.
00:22  nDuff: qwd, that's why I had stat output the time in numeric value, and then piped from there to sort
00:22  nDuff: !ls >qwd
00:22  greybot: qwd: Don't try to parse ls output. http://mywiki.wooledge.org/ParsingLs
00:22  nDuff: qwd, ...unlike ls, stat isn't evil.
00:22  nDuff: well, isn't evil when used correctly.
00:22  bronzecat:  /me chortles and loads his pistol....
00:23  nDuff: /me scowls at people who unnecessarily but knowingly use leading spaces in IRC.
00:24  bronzecat:  /me too
00:24  bronzecat: alternately
00:24 * bronzecat too
00:25  qwd: nDuff: Thanks, I'll try to figure this out
00:28  bronzecat: anyone know what the reasonable tradeoffs are between scripts and functions?  When is a script so small its better to just have it in the shell all the time?
00:28  bronzecat: reasonale will be different for everyone, of course.
00:28  bronzecat: *reasonable
00:49 --- boaz_ is now known as boaz
00:51  Webu: Hello! Can I prevent a variable set in function to be lost when the same function is ran again?
00:53  Webu: I'm looking for saving a little reference time in the function for the next time, but currently the variable seems to be empty as soon as the function is done.
00:55  nDuff: Webu, more likely that function is being run in a subshell; non-local variables are not implicitly cleared.
00:55  nDuff: !faq disappear > Webu
00:55  greybot: Webu: http://mywiki.wooledge.org/BashFAQ/024 -- I set variables in a loop. Why do they suddenly disappear after the loop terminates? Or, why can't I pipe data to read?
00:58  juniovitorino: hi
00:58  juniovitorino: how i can pass labeled arguments to a bash script?
01:00  bronzecat: labe1=foo script
01:00  juniovitorino: something like this
01:00  juniovitorino: script.sh param1=value param2=value...
01:01  bronzecat: labe1=foo script
01:01  bronzecat: something like that.
01:02  bronzecat: juniovitorino: if the params are to be positional they dont needs names, otherwise,   label1=somevalue  scriptname
01:03  Webu: nDuff, thank you for that, need to think a bit what should I do now :-)
01:03  bronzecat: juniovitorino: note - its much easier to use commands that have positional parameters.
01:04  juniovitorino: bronzecat: sorry i'm new to bash
01:06  bronzecat: juniovitorino: what are you trying to do?
01:07  juniovitorino: i'd like pass arguments to a script w/o worry with the order
01:07  nDuff: juniovitorino, bronzecat already told you how
01:07  nDuff: juniovitorino, put the arguments BEFORE the script, and they'll be passed as environment variables
01:08  retrospectacus: or use getopts
01:08  bronzecat: juniovitorino:No. I'm asking at the next level of information out, not what are you trying to script, but what is the purpose of the script?
01:08  juniovitorino: nDuff: hummmm i didn't see, sorry guys
01:10  juniovitorino: bronzecat: the script is for override a rails rake taks
01:10  juniovitorino: *task
01:10  bronzecat: OK
01:12  bronzecat: why do you believe its better to have the parameters named on the command line rather than orders, or specificed using --option value (the traditional *NIX approach)
01:12  bronzecat: s/orders/ordered/ :)
01:12  nDuff: well, --option is more GNUish than traditional, but *shrug* :)
01:12 * nDuff tends to prefer the GNUish thing himself
01:13  bronzecat: nDuff: yeah, thought that -after- i hit enter. :-)
01:13  bronzecat: juniovitorino: why do you believe its better to have the parameters named on the command line rather than orders, or specificed using --option value (the traditional *NU approach)
01:13 * nDuff grumbles at his local management team for not making good on their promise to get a superautomatic espresso machine for the office ordered last week
01:15  juniovitorino: nDuff: I not believe that thus is better
01:15  juniovitorino: nDuff: in truth i'm looking for a good way to do that
01:16  nDuff: !faq 35 > juniovitorino
01:16  greybot: juniovitorino: http://mywiki.wooledge.org/BashFAQ/035 -- How can I handle command-line arguments (options) to my script easily?
01:16  juniovitorino: like i told, i'm new to bash and i'm learning
01:17  juniovitorino: thanks nDuff
01:26  alesan: what is the limit in the "arguments" space I can give to a program?
01:27  alesan: for example I would use bash to call a program with ./program *.jpg but there could be several hundreds programs
01:27  alesan: sorry
01:27  alesan: files in the *.jpg
01:27  cthuluh: getconf ARG_MAX
01:28  cthuluh: this is the max argument length you can pass to a command
01:29  alesan: 2097152
01:29  alesan: so it's two megabytes?
01:30  cthuluh: yep
01:33  cthuluh: there are ways not to cross this limit: using a loop and call your program with, say, 10 files. or you could use find ... -print0 | xargs -0 ./program
01:34  cthuluh: find also has a builtin xargs, with -exec ... +
02:01  bruteforce_allti: if [ -d "$sugar-base"]; then
02:02  bruteforce_allti: is there some problem with above command?
02:03  hotwings: i dont think you can use "-" in a string label
02:05  bruteforce_allti: but I have to check for folders with "-" in between there names. Any possible soln?
02:11  cthuluh: bruteforce_allti: 1) you need a space before the closing ']' 2) you can't use '-' in a variable name, is "sugar" the variable, or is it supposed to be "sugar-base"?
02:16  bruteforce_allti: cthuluh: yeah. it was supposed to be sugar-base only. Got my mistake. Thanks.
02:47  bruteforce_allti: Ok. I think I can reduce the code in script but got struck. Now I want to store the directory names in a string array say
02:47  bruteforce_allti: allin= (dirname1 dirname2 dirname3), and then iterate through all elements. I don't the the net number of string in allin beforehand.
02:56  bruteforce_allti: Ok. I tried to search for above. But unable to run this code. http://paste.ubuntu.com/524201/
02:56  bruteforce_allti: error message - 2: Syntax error: "(" unexpected
02:57  nDuff: bruteforce_allti, #!/bin/bash, not #!/bin/sh
02:57  nDuff: bruteforce_allti, #!/bin/sh means you don't want any features that don't exist in raw POSIX sh
02:58  nDuff: bruteforce_allti, ...and arrays are one of those.
03:00  bruteforce_allti: nDuff: Thanks a lot. Don't know much about POSIX  and all. Will read about these soon :)
--- Log closed Tue Nov 02 05:10:54 2010
--- Log opened Tue Nov 02 07:45:23 2010
07:45 --- Users 487 nicks [0 ops, 0 halfops, 0 voices, 487 normal]
07:45  isaacs: twkm: oh, dude, i can't leave good enough alone.
07:45 * isaacs has got.... problems.
07:45  isaacs: i'm afflicted with the programmer disease.
07:46  isaacs: and with my bashrc, there's no one to tell me to stop
07:46 --- Channel #bash was synced in 81 seconds
07:46  twkm: now, my bash_profile is fairly large, but it runs just once so it isn't much of a burden.
07:49  isaacs: ok, sure
07:49  isaacs: your "whatever gets run when it's interactive" i guess is what i mean
07:50  isaacs: in my case i keep it all in .extra.bashrc just to keep my stuff separate anyhow
07:56  yitz_: Where do I find that bash tcp device?
07:57 * yitz_ man's it -> /dev/tcp/host/port
07:57  twkm: you don't.
07:57  twkm: bash fakes it where the documentation says it'll fake it.
07:57  yitz_: pseudo-redirect-thing
07:58  twkm: redirection is one such place, so: foo >/dev/tcp/$host/$port
07:58  yitz_: My script isn't working :(
07:59  twkm: you probably foolishly installed debian or one of its evil stepchildren.
07:59  yitz_: Nope. Archlinux :D
07:59  twkm: worse, but not for this purpose.
07:59  yitz_: I failed to read the warnings... Warning: remote port forwarding failed for listen port 4222
07:59  yitz_: What's wrong with Arch?
08:00  twkm: lots.  not topical.  anyway, why isn't your *REDIRECTION* involving /dev/tcp working?  does arch also disable that feature (you must do so explicitly, otherwise it is provided)?
08:01  yitz_: The redirection is fine. My port forwarding failed. I probably already have the port bound...
08:07  yitz_: Sweet. netstat -lp showed me the process hogging the port. A kill and a new ssh -R and it's all cheery :) Now it's sleep time. G'night
--- Log closed Tue Nov 02 09:14:15 2010
--- Log opened Tue Nov 02 09:14:38 2010
09:14 --- Users 489 nicks [0 ops, 0 halfops, 0 voices, 489 normal]
09:15 --- Channel #bash was synced in 85 seconds
10:06  ghostknife: Is it possible to kill a bash session on a tty1 and have it save it's history?
10:06  ghostknife: remotely
10:08  geirha: If you send it a SIGHUP it should.
10:08  NathanielJ: 'ello folks. command line question.  how would I capture stdout and pass it to the next command in the chain?
10:09  NathanielJ: rake secret && heroku config:add SECRET_TOKEN=(value of first command)
10:09  trash: foo=$(command); command2 "$foo"
10:10  stockholm: how can i, within a script, redirect all stderr to /dev/null ?
10:10  stockholm: not outside the script, there i am rather limited
10:11  trash: exec 2>/dev/null
10:11  geirha: exec 2>/dev/null
10:11  geirha: !exec
10:11  greybot: exec [command] [redirections] replaces the script's process by a new one that runs the command. When no command is given, only the redirections are applied to the current shell.
10:13  ghostknife: geirha, thx
10:13  NathanielJ: thanks trash, that's so beast
10:17 --- meiskam_ is now known as meiskam
10:21 --- Weust`afk is now known as Weust`
10:27  Shalok: Why does the command {ssh 192.168.19.128 'xterm -display notsecuredisplay:0&'} not return (almost) immediately?
10:29  koala_man: !faq 63 > Shalok
10:29  greybot: Shalok: http://mywiki.wooledge.org/BashFAQ/063 -- My ssh client hangs when I try to run a remote background job!
10:31  Shalok: Ah, I tried redirecting remote file descriptors but I forgot about stderr
10:35  aborticide: is there a hotkey to fg the last app that was sent to background with ^Z ?
10:36  koala_man: 'fg'
10:36  davix: is there a way that i can perform http login with a bash script?
10:36  koala_man: davix: use wget or curl
10:37  davix: thanks koala_man, i'll read some man of them
10:39  aborticide: koala_man: a hotkey?
10:39  aborticide: 'fg' won't bring up the last application
10:40  aborticide: oh i guess it will ...
10:40  koala_man: aborticide: I guess you can bind some key combo if you really want
10:40  aborticide: yes
10:43  ghostknife: Would bash be able to handle a history file size of 1000000 lines?
10:43  ghostknife: I figure in append mode it doesn't matter, right?
11:06  Linex: I want to cat everything from a folder, including whats in the sub-folders. How do I put the command ? anything like -R for cat ?
11:07  {g}: Hey People! When a progg takes an argument "what file to write the output to" how do i tell it to write to stdout?
11:08  {g}: or maybe i should use "/dev/tty" ?
11:08  {g}: if i want to see the output on screen?
11:10  koala_man: traditionally you specify "-" as the filename. failing that, you can sometimes use /dev/stdout
11:11  {g}: koala_man: great! both work. thanks!
11:31  fxn: is there a way to do an ORed assignment? trying to accomplish this local e=($1 || $RAILS_ENV || 'development')
11:32  trash: That depends on what you think that should do.
11:34  pgas: e=${1:-${RAIL_ENV:-development}}
11:37  Kharec: hi all
11:39  NathanielJ: hmm. can you export variables in only a specific directory?  I have several Rails projects, and if the ENV variables could be different for different ~/Sites/project directories, that'd be kickin
11:41  NathanielJ: maybe i'll just make a bash function for each one that exports the variable
11:42  pgas: maybe make a function around the command(s) you invoke to set the environment for the real command
11:42  stonie: hiho.. i want to echo filenames with spaces/blanks in it from a "for x in" loop, but even if i quote the vars im getting line breaks ...
11:43  pgas: NathanielJ: foo () { case $PWD in *blah) BLEH=foobar command foo;; *blachblah) BLEH=foobarbaz command foo;;esac; } # or something
11:43  pgas: stonie: what's after the in?
11:44  stonie: pgas, awk.. heres the comand: http://pastebin.com/TRp1LKWe
11:44  pgas: for loops on words not lines
11:44  pgas: !faq 1 > stonie
11:44  greybot: stonie: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
11:44  NathanielJ: thanks mate
11:45  pgas: stonie: as an aside be sure to read the whole faq entry, you don 't need awk to extract the first field
11:46  stonie: thanks alot i will but got only little time atm
11:48  pgas: ok...then maybe only the 5 first examples....
11:49  stonie: ye i see thanks.. i will try with a while loop
11:49  fxn: pgas: that's great thank you
11:50  stonie: can i attach other commands aswell? like copy/tar/delete ..? and would you prefer cut or smtg instead of awk?
11:51  hendry: how do i remove the last two lines of an output? echo -e "foo\nbar\nremove\nme"
11:54  pgas: | sed \$d | sed \$d
11:55  hendry: pgas: two invocations of sed... hmmm at least it's readable.. I guess
11:59  pgas: awk 'NR>2{print "f" l[(NR-2)%2]}{l[NR%2]=$0}'
11:59  pgas: there's probably a solution buffering 2 lines with sed too
12:00  pgas: awk 'NR>2{print l[(NR-2)%2]}{l[NR%2]=$0}'
12:06  pgas: (of course if the input is really a file, then everything is much simpler)
12:09  hendry: pgas: thanks btw
12:13  stonie: pgas, http://pastebin.com/aKH7NFuc -.. but that still doesnt work
12:14  stonie: it only echoes the files
12:20  pgas: just look at the 5th example of the faq.....
12:26  stonie: k trying after lunch.. tyvm!
12:27  trash: kthxbye
12:57 --- MuzerAway is now known as Muzer
13:04  iaj: is there some way to have urls highlighted in basic txt files?
13:04  iaj: woops
13:04  iaj: wrong chan - sorry
13:13 --- Weust` is now known as Weust`afk
13:25 --- Natch is now known as Natch|
13:27  kotique: hey, how do I save output viewed in less into file?
13:28  trash: kotique: Did you read the manual?
13:28  kotique: yeah, no option there
13:36  geirha: kotique: Try hitting s
13:36  geirha: (works with the less on my system at least.)
13:37  kotique: oh, i thought "input" means input from user not from input
13:39  kotique: thanks
13:52  slater: hello is it possible to run in /bin/sh the & operator when executing another shell script to run the script in background? like in bash?
13:53 --- Muzer is now known as MuzerAway
13:57  koala_man: slater: yes
13:57  slater: koala_man: do I need to use nohup ? what does this actually do?
13:58  koala_man: slater: nohup ignores sighup, and makes sure the app doesn't write to the tty
14:00  slater: so no parent shell needed? I would need the new shell to run apart from the parent shell. so it has no dependency on the other shell running
14:01  cocoa117: if [ $1 = -s ]; then
14:01  cocoa117: 	echo "do simulation install"
14:01  cocoa117: else
14:01  cocoa117: 	echo "do real install"
14:01  cocoa117: fi
14:01  cocoa117: ./test.sh: line 3: [: =: unary operator expected
14:01  cocoa117: why?
14:01  Kharec: cocoa117: ==
14:01  koala_man: because $1 wasn't supplied
14:01  Kharec: if [ $1 == -s ]
14:01  koala_man: use [[ ]] , it's immune to these things
14:02  cocoa117: Kharec, k
14:02  koala_man: or at least quote it
14:03  cocoa117: koala_man, yes u r right, [[ ]] made the error goes away
14:04  slater: koala_man: I want a shell script to run on rc.start but I dont want it blocking the boot procedure and just run in background so & should be suffiecent?
14:04  richardbronosky: I have an array full of arguments I'd like to call a command with. I can't figure out how to do it without eval.
14:05  richardbronosky: how do I get $headers to expand in: curl ${headers[@]} http://bash.org/
14:06  lhunath: you don't.
14:06  lhunath: do not put code in variables.  learn what a function is.
14:06  lhunath: also; start quoting your PEs.  All of them.
14:07  richardbronosky: I know what a function is. Thanks for the suggestion. I'm just a little lost on how to pass the arguments I need to pass.
14:07  lhunath: ah; I read that as 'into' instead of just 'in'.  what exactly are you asking?  your question stopped making sense to me.
14:08  koala_man: slater: yes
14:08  lhunath: ${headers[@]} expands already in your command.  albeit in a broken fashion.
14:09  lhunath: (since you failed to quote it)
14:09  richardbronosky: I wan't curl to see each entry in $headers as an argument.
14:10  richardbronosky: I thought that the expansion of not quoting it would be enough.
14:10  richardbronosky: but I'm getting strange results.
14:10  lhunath: stop saying $headers.
14:10  richardbronosky: ?
14:10  lhunath: $headers is the expansion of the first element of the headers variable.
14:10  richardbronosky: fair
14:11  lhunath: "${headers[@]}"
14:12  lhunath: # showargs() { for arg; do printf '<%s> ' "$arg"; done; }; showargs "a" "a b"; arr=(1 "1 2 3"); showargs "${arr[@]}"
14:12  evalbot: lhunath: <a> <a b> <1> <1 2 3>
14:12  lhunath: !arrays
14:12  greybot: An array maps numbers to strings. Bash 4 also has associative arrays (maps strings to strings). See http://mywiki.wooledge.org/BashSheet#Arrays
14:13  lhunath: never leave PEs unquoted.
14:13  lhunath: (except a few special cases where quotes are not necessary but quoting won't hurt them either)
14:14  lhunath: quoting anyway*
14:14  richardbronosky: well, carp. the problem has to be something else
14:15  richardbronosky: if I echo the command then copy and paste it. it works. but I can
14:15  richardbronosky: but I can't get it to exec right.
14:16  slater: thanks koala its working like a charm :) no more waiting for the script finish when booting
14:16  rbronosky: sorry. network flake.
14:16  lhunath: richardbronosky: perhaps you fail at understanding the difference between literal and syntactical quotes.
14:17  lhunath: I'm mostly just guessing now since I have no real problem description to go on
14:18  lhunath: !args
14:18  greybot: Understanding Arguments and Word Splitting: http://mywiki.wooledge.org/Arguments
14:19  rbronosky: lhunath: I just stepped into my first of many meetings this AM. I will come up with a functional pastebin as soon as I can. Thanks.
14:20 --- rbronosky is now known as richardbronosky
14:21  mooperd: hello, I am processing this file with uniq but it does not seem to be operating properly http://daisy.moonet.co.uk/ecc.tuesday.2.nov
14:21  mooperd: http://daisy.moonet.co.uk/ecc.tuesday.2.nov.output - many of the lines are duplicated
14:22  richardbronosky: lhunath: I WAS confusing literal and syntactical quotes!!!
14:22  richardbronosky: thanks!
14:23  lhunath: welcome
14:23  lhunath: mooperd: uniq only works on sorted data.  is your data sorted?
14:23  mooperd: lhunath: ah, no it is not
14:23  lhunath: maybe your sort has a -u flag.
14:24  mooperd: lhunath: there was no sort at all :)
14:24  mooperd: fixed not, thanks
14:32 --- jzacsh is now known as jzacsh_
15:09 --- Tobias| is now known as all
15:09 --- all is now known as Guest94387
15:11  steven_t: whats a good way to do "rename all files in spec/ so that they have _spec appended to them before their .rb extension"?
15:11  erUSUL: !faq rename
15:11  greybot: http://mywiki.wooledge.org/BashFAQ/030 -- How can I rename all my *.foo files to *.bar, or convert spaces to underscores, or convert upper-case file names to lower case?
15:12  erUSUL: steven_t: for f in spec/*; do mv -- "$f" "$f"_spec; done
15:14  steven_t: LOL erUSUL
15:14  steven_t: "appended to them before  their .rb extension
15:14  steven_t: "appended to them before  their .rb extension
15:14  steven_t: oops
15:14  steven_t: dang
15:14  erUSUL: steven_t: for f in spec/*; do mv -- "$f" "${f%.rb}"_spec.rb; done
15:15  erUSUL: !pe > steven_t
15:15  greybot: steven_t: Parameter Expansion is the expansion of a parameter: "$foo", "$1". You can use it to perform string operations: "${file%.mp3}", "${0##*/}". Remember to *always* quote them. See http://mywiki.wooledge.org/BashSheet#Parameter_Operations
15:16  steven_t: thanks bro
15:16  erUSUL: np
15:21 --- MuzerAway is now known as Muzer
15:28 --- mooperd_ is now known as mooperd
15:30  MindSpark: hi. why doesn't this work ?
15:30  MindSpark: sudo  echo '<?php echo phpinfo(); ?>' > index.php
15:30  MindSpark: I get a permission denied for index.php
15:30  MindSpark: how do I enclose the command in brackets ?
15:30  lhunath: sudo is not a bash builtin.
15:31  lhunath: sudo runs a program.  the program you are running is echo.
15:31  MindSpark: lhunath, does that mean my question is invalid here ?
15:31  lhunath: echo does not write to index.php
15:31  lhunath: you run echo as root.  echo outputs something.
15:31  koala_man: well, obviously it does. but index.php is opened by bash before echo writes to it
15:31  lhunath: your current shell then writes that output to index.php.  guess who runs your current shell?
15:32  koala_man: MindSpark: echo whatever | sudo tee index.php is one way
15:32  MindSpark: lhunath, right. Is there a workaround ?
15:32  lhunath: koala_man: aye.  fair enough.
15:32  MindSpark: koala_man, tee ! there's actually a useful usage for it ! thanks !
15:36 --- Muzer is now known as MuzerAway
15:38  jetole: Hey guys. I am trying to setup HISTTIMEFORMAT but it seems like no matter what value I put there. It's only putting the seconds since the epoch into ~/.bash_history however it didn't add timestamps to the history before I edited ~/.bashrc so I know it's using my change but seems to be ignoring the values I am picking from strftime(). I'm using bash 4.5.1 from ubuntu 10.04. Can anyone help please?
15:40  jetole: ... I think I just realized it's only supposed to save the timestamp into the .bash_history file and the format I specify is interpreted by the history command
15:40  paissad: what is this ?
15:40  paissad: :(){ :|:& };:
15:40  jetole: a smily
15:40  jetole: :P
15:41  jetole: from what I recall, I think it's a bash method of the age old fork() bomb but it's been so long since I read about it
15:42  paissad: jetole, i saw in a wiki that running this makes the system freeze !
15:42  jetole: yeah guys. You can ignore my question. That's the way it's supposed to be and the reason why it works like so
15:42  jetole: paissad: then yes, it is a fork() bomb bash'ified
15:43  paissad: jetole, indeed,that's what happened for me .. but i just don't understand the "function"
15:43  jetole: I don't fully understand it but as far as I can tell, it is a loop, the & causes whats running to go to the background and I think it starts maybe a bash subshell that backgrounds in a infinite loop
15:43  pgas: !faq :()
15:43  greybot: http://mywiki.wooledge.org/BashFAQ/059 -- I saw this command somewhere: :(){ :|:& } (fork bomb).  How does it work?
15:44  jetole: paissad: there you go
15:44  paissad: :)
15:45  jetole: pgas, actually, as I read it, I had to ask, what is a single pipe to bash? |
15:46  pgas: it's a normal pipe
15:46  jetole: oh right
15:46  pgas: foo () { foo | foo & }
15:46  jetole: doh
15:46  jetole: forgot about piping for 1 brief idiotic second
15:47  jetole: pgas, is the
15:47  jetole: pgas, is the ;: on the end important
15:47  jetole: if the function is already calling itself twice?
15:47  pgas: yes, otherwise you just define a function
15:47  jetole: oh right
15:47  jetole: ok cool
15:48  jetole: now I know how to fork bomb without C
15:48  jetole: I'm sure that will come in usefull ...uh ...someday ...probably not
15:48  paissad: jetole, how would you do in  C, an infinite while loop for exampe ?
15:48  paissad: lol
15:49  jetole: int main(){ while(1) fork(); }
15:49  jetole: you need to include the header for fork()
15:49 * jetole looks it up in the man page
15:49  pgas: it's not as powerfull as the bash version
15:50  jetole: #include <unistd.h>
15:50  pgas: the bash version doubles the number of process at each iteration
15:51  jetole: pgas, thats questionable. I mean the C program can do 3, 4 or 5 in each iteration but each recursive call is a an op which slows calls to fork() or &
15:51  jetole: or am I mistaken?
15:52  jetole: while(1) { fork(); fork(); }
15:53  jetole: in theory you can loop the fork calls with a for loop or any loop so each loop then exectutes another loops running X amount of fork calls but it defeats the purpose
15:54  jetole: I mean doing a loop to already do what we are already doing inside another loop is pointless but then again I think so is two fork() calls, C or bash inside an already infinite loop to call fork()
15:55  jetole: then again, the bash version isn't in a infinite loop, it's one function that calls itself twice and exits
15:55  b0ot: I'm trying to create a bash script that will continually probe a device connected via serial and then get the response, format it, and send it out UDP to specific ip/port
15:55  b0ot: I am trying to work on the connection side right now
15:55  jetole: b0ot: good luck. I did that as a one time call in C with a humidity sensor about a year ago
15:55  b0ot: I have socat READLINE,history=$HOME/.cmd_history /dev/ttyS1,raw,echo=0,crn1
15:55  b0ot: and I have sucessfully connected to my device
15:55  jetole: then did a crontab of a shell which called the C and stored the results in mysql
15:56  paissad: ohh, normally any user who has shell access may run that function & freeze the system !
15:56  jetole: b0ot: anyways, ignore me. I'm not helping, just relating
15:56  paissad: really dangerous
15:56  b0ot: jetole, haha its nice to know its possible though
15:56  jetole: paissad: yeah well there are ways to prevent that
15:56  paissad: jetole, tell me one
15:56  jetole: I'm trying to remember the command but it limits what each user can do in bash
15:56  jetole: pgas probably knows
15:57  jetole: like you can limit how many processes a single user can run, how many open files they can have etc. It can be set globally in a /etc file or per user in a .bashrc file
15:57  jetole: ulimit
15:57  jetole: thats it
15:57  jetole: paissad: ulimit
15:57  paissad: yeah, i remember now
15:57  b0ot: Anyone familar with how to use socat in here or know where i could find someone to ask?
15:58  k4r4mb4: can anyone help me with creating a for loop?
15:58  paissad: jetole, sysctl.conf file may help too
15:59  jetole: I gotta finish setting up .bashrc for damn hard to destroy history since I am deploying a tech team on servers today which were all recently setup via LDAP with shared /home via NFS but until ~2 hours from now I have been the sole admin and am kinda s***ing bricks that I have to give incompetent people access
15:59  jetole: paissad: possibly but I am skeptical
15:59  paissad: :)
16:00  jetole: paissad: at least on linux, I am skeptical sysctl.conf would be more efficient that ulimit but the /etc thing has to do with pam etc and is very well suited on linux
16:00  paissad: ok
16:00  jetole: there is still a way to freeze a linux host though that ulimit can't prevent since ulimit on linux does not limit the RSS size, it cannot, it has the option which does nothing
16:01  jetole: and limiting vmem via ulimit is a disaster if trying to limit actually allocated RAM
16:01  jetole: for example, in C, while(1) malloc(1024);
16:02  SilverFox: I upgraded to bash 4.1.9 via macports, and now each time I open a shell, it prints out a list of locales.  Any ideas why that is happening, and how to get it to stop?
16:04  jetole: If I unset HISTFILESIZE, does it grow forever?
16:04  SilverFox: nevermind... I got it.  :)
16:08  f00bar80: in the cwd, i have multiple sub-directory with 3 files each, .css .jpeg and .html, all sub-directories are named as the following "city-name-Web-Directory", how to rename all the .css and .jpeg files inside each subdir. as the directory's name ?   ?
16:09  jetole: f00bar80: , if you are in the directory where you have all folders names city-name-web...etc, and that is all thats in the folder and each folder has those three files then run
16:10  mooperd: I have a text file with colors in there. Is there an easy way to remove the color?
16:10  jetole: for dir in *; do mv "${dir}/file1.css" "${dir}/${dir}.css; mv "${dir}/file1.jpeg" "${dir}/${dir}.jpeg; done
16:11  jetole: assuming the css files all have the same name in each subdir
16:12  f00bar80: the css files 'll all have the same name
16:12  jetole: otherwise you might want to use the find command to find the proper name i.e.: file="$(find "${dir}" -type f -iname '*.css" -print -quit)"; mv "${file}" "${dir}/${dir}.css"
16:13  jetole: thats if the .css files for example all have different names in each sub directory
16:14  f00bar80: jetole, in case it's only one .css and one .jpeg in each , can't i use do mv "${dir}/*.css"  ??
16:26  SammyF: hey there. how can I do something like this A="ls /usr/share/*" without the * being expanded ?
16:26  Naib: !ls > SammyF
16:26  greybot: SammyF: Don't try to parse ls output. http://mywiki.wooledge.org/ParsingLs
16:26  Naib: !quotes > SammyF
16:26  greybot: SammyF: "USE MORE QUOTES!" They are vital. Also, learn the difference between ' and " and `. See <http://mywiki.wooledge.org/Quotes> and <http://wiki.bash-hackers.org/syntax/words>.
16:26  koala_man: SammyF: like you did
16:28  SammyF: thanks ;) I fall into the "disastrous fails" from the page ;)
16:34  b0ot: I'm trying to connect probe a device connected to a serial port, parse the input, and send it out udp to specific port/ip. So far I have figured out that I could use socat to create a connection to the serial device with socat READLINE,history=$HOME/.cmd_history /dev/ttyS0,raw,echo=0,crnl but I'm not sure how to use socat to connect in a way that would let me parse and send it out UDP
16:36  pgas: socat /dev/ttys0 | do some parsing | socat port ip
16:36  pgas: hmm, though you want something interactive?
16:37  b0ot: pgas, yes
16:37  b0ot: I basically need to issue a command like list gps
16:37  b0ot: every so often
16:37  pgas: but you want to see the ouput both locally and to send it to the remote port?
16:37  b0ot: no I don't need to see it locally
16:38  b0ot: I just need to be able to send the command out locally to probe it
16:38  pgas: well, than maybe 'socat /dev/ttyS0 | socat port ip ' does what you want
16:39  b0ot: pgas, I need to parse it locally, that is kind of the part im confused out
16:40  pgas: so you need to see it to parse it or what?
16:40  b0ot: So if I did socat  /dev/ttyS0,raw,echo=0,crnl UDP:10.1.1.1:50008
16:40  b0ot: yeah
16:41  b0ot: I want to take the gps coordinates and convert them to google's kml format
16:41  pgas: you just said you didn't need to see it locally...
16:41  pgas: socat | yourparser | socat
16:41  b0ot: I thought you meant actually on the monitor... stupid stupid assumption
16:41  pgas: well, yes that's what I meant
16:41  b0ot: what format does yourparser need to be
16:42  pgas: a program, a script a function
16:42  b0ot: nice
16:42  pgas: something that reads from stdin and prints to stdout
16:43  b0ot: So if I did socat  /dev/ttyS0,raw,echo=0,crnl| myparseprogram | UDP:10.1.1.1:50008
16:43  b0ot: I understand it would make the connection between my serial port and udp port, but how does that allow me to probe the serial device
16:44  lhunath: you have a program called UDP:10.1.1.1:50008 in PATH?
16:45  pgas: you need a second socat to send your data from the localhost to the remote port
16:46  b0ot: can you put more than one socat on a line?
16:48  lhunath: facepalm.
16:50  jetole: pgas (probably) or anyone else. Do you know how I can do a match to a bash array for example if I have the variable ignore_users=(user1 user4 user6) and then I want to do an if clause saying: if [[ $user is_not_in $ignore_users ]]
16:51  jetole: someway I can perform an action only if 'this line' is not in ignore_users[0] or ignore_users[1] or ignore_users[2] etc
16:51  richardbronosky: !heredoc
16:51  greybot: Here documents. cat <<EOF followed by several lines of text, followed by the literal string EOF on a new line, NOT indented. The portion between the EOFs is passed to the command as standard input. If 'EOF' is 'quoted', substitutions WON'T be done; otherwise they are. See <<- for the indented variety.
16:52  b0ot: lhunath, so should it be socat serialdevice readline | my parse | socat readline UDP ?
16:53  skered: Anyone know if it's possible with find to find all files with a weekend day for the last modified time?
16:54  jetole: richardbronosky: is that for me?
16:54  richardbronosky: jetole: sorry, no it wasn't necessarily.
16:56  jetole: skered: I don't think so but find is start, use -exec ls and format the output to be the date and the filename or just parse ls -l, I would put that into a temp file (man 1 mktemp) and then read that file into a while loop (while read date file; do stuff; done < temp_file) and then run date -d on the date read on each loop telling date to output the day of the week
16:56  jetole: richardbronosky: oh ok because I was about to say I don't see how that applies to my question
16:57  skered: jetole: Well right now I'm doing 'find ./ -printf "%p %Ta\n
16:57  skered: "
16:58  skered: Then piping that to | grep -E "(Sat|Sun)$"
16:58  f00bar80: jetole, for dirName in $(find . -type d  returns ./City-name-Web-Directory , how to get rid of the "./"  when i refer to $dirName ???
16:59  jetole: f00bar80: find /the/entire/path/you/want
16:59  jetole: or use bash variavle expansion
17:00  jetole: skered: ok, well then if you have a way
17:00  jetole: skered: use that into a temp file and then read it while a while loop
17:00  f00bar80: jetole, sorry didn't get what you mean ?
17:00  bobbytek2: is there a way to say not in array in an if statement?
17:01  jetole: f00bar80: do you want just the file without ./ or the whole path to the file?
17:01  bobbytek2: if [ $i not in array(1,2,3) ]
17:01  jetole: bobbytek2: that was my question just a moment ago
17:01  bobbytek2: hehe
17:01  jetole: I don't have an answer yet
17:01  bobbytek2: ah
17:02  jetole: skered: actually I like your find, I would reverse the order on how it prints it
17:02  jetole: since if you do a while read var1 var2 and var1 has a space then everything after the space will be var2
17:02  f00bar80: jetole, i want the path without ./
17:03  b0ot: The only issue I see with socat | yourparser | socat is that if I create a connection between my serial device and the readline it will output it to stdout which the second socat would forward on
17:03  jetole: skered: i.e. "This\ is\ my\ file.txt Fri" var1 will be "This\" and var2 will be "is\ my\ file.txt Fri"
17:03  b0ot: in addition to the output of the parsed data
17:03  jetole: so skered put the day first since it will never have a space
17:04  jetole: f00bar80: one way is sed -e 's/^\.\///'
17:04  jetole: f00bar80: sed 's/what I have/what I want to replace it with/'
17:05  jetole: so ^ is the start of the line, \. is a period escaped and \/ is a forward slash escaped since sed uses . alone to match all chars you need to escape it and it uses / to seperate each section, you need to escape it
17:06  jetole: so f00bar80 if you have a variable i.e. var1="./this-is-my-file.txt" then run: var1="$(echo "${var1}" | sed -e 's/^\.\///')"
17:06  f00bar80: jetole, one min.
17:06  jetole: then var1 will no longer start with ./
17:06  b0ot: !faq
17:06  greybot: b0ot: No matches found at http://mywiki.wooledge.org/BashFAQ
17:06  jetole: f00bar80: no. I have to get back to work. I have a huge time limiy
17:06  jetole: *limit
17:06  b0ot: !faq input
17:06  greybot: http://mywiki.wooledge.org/BashFAQ/040 -- How do I use dialog to get input from the user?
17:07  jetole: if anyone answers mine and bobbytek2s question of "there a way to say not in array in an if statement?" && "if [ $i not in array(1,2,3) ]", can you please IM me because I need to know but walking away from my desk for a few hours
17:08  f00bar80: jetole, this is the code http://pastebin.com/8qEQA4Nm when i use $dirName as i mentioned i got the path with ./
17:08  geirha: !faq inarray > jetole
17:08  greybot: geirha: No matches found at http://mywiki.wooledge.org/BashFAQ
17:08  geirha: err
17:08  jetole: geirha: thanks
17:08  jetole: oh
17:08  jetole: nm
17:08  geirha: !faq is in > jetole
17:08  greybot: jetole: http://mywiki.wooledge.org/BashFAQ/046 -- I want to check to see whether a word is in a list (or an element is a member of a set).
17:08  jetole: geirha: thanks
17:08  jetole: bobbytek2: read that as well @ 12:08 < greybot> jetole: http://mywiki.wooledge.org/BashFAQ/046 -- I want to check to see whether a word is in a list (or an element is a member of a set).
17:08  bobbytek2: ah, just loop over
17:08  bobbytek2: lame
17:09  geirha: f00bar80: You should never use for in combination with $(find) or $(ls)
17:09  jetole: geirha and f00bar80: to add onto that, for can do ls i.e. for file in *
17:11  jetole: f00bar80: also as I mentioned, put it into a temp file and then read it with while read var1 var2 etc; do stuff; done < temp_file
17:11  jetole: ok, gotta run
17:11  geirha: f00bar80: find . -name index.php -exec sh -c 'sed -e "s%kelowna-web-directory.css%$dirName.css%" "$1" > "$1.new" && mv "$1.new" "$1"' _ {} \;
17:11  jetole: cheers and thanks everyone for the help stars to pgas and geirha
17:11  geirha: !find > f00bar80
17:11  greybot: f00bar80: http://mywiki.wooledge.org/UsingFind
17:12  geirha: f00bar80: Oops, sorry, missed the $dirName in your sed
17:13  geirha: f00bar80: find . -name index.php -exec sh -c 'dirname=${1%/*} dirname=${dirname#./}; sed "s%kelowna-web-directory.css%$dirname.css%" "$1" > "$1.new" && mv "$1.new" "$1"' _ {} \;
17:17  Sonderblade: i have a file with 500k lines, how can i split this into 10 files with 50k lines in each?
17:17  geirha: f00bar80: find . -name index.php -exec sh -c 'dirname=${1%/*} dirname=${dirname#./}; printf "%s\n" "g/kelowna-web-directory.css/s%%$dirname.css%" w | ed -s "$1"' _ {} \;
17:17  geirha: Sonderblade: man split
17:17  unop: Sonderblade, use split(1)
17:18  f00bar80: geirha, yea thanks .. but may i ask for a details desc on syntax , if you don't mind or if you don't mind to point me to a guide or desc.
17:18  geirha: f00bar80: UsingFind page explains find's syntax. BashGuide explains shell syntax.
17:19  geirha: !ed > f00bar80
17:19  greybot: f00bar80: ed is a command-based file editor. See http://bash-hackers.org/wiki/doku.php?id=howto:edit-ed - http://sdf.lonestar.org/index.cgi?tutorials/ed - http://wolfram.schneider.org/bsd/7thEdManVol2/edtut/edtut.pdf
17:19  b0ot: Alright I have this: socat READLINE,history=$HOME/.cmd_history /dev/ttyS1,raw,echo=0,crnl | test.sh | socat -u - UDP:10.1.40.54:5000 where test.sh is simply while read -r line; do; echo "b0ot"; done, but it doesn't seem to be working
17:20  Sonderblade: geirha: thanks
17:22  geirha: f00bar80: The ${1%*/} stuff is called parameter expansion. Faq 100 explains that fairly well.
17:23  b0ot: geirha, any idea what i might be doing wrong?
17:25  geirha: b0ot: Does   socat ... | test.sh   output b0ot lines?
17:26  b0ot: geirha, yes
17:27  geirha: And  { echo b0ot; echo b0ot; } | socat ...   yields the correct result?
17:30  b0ot: geirha, no it dosn't seem to work
17:31  geirha: b0ot: Ok, then you need to figure out why that last socat isn't working.
17:33  b0ot: ok, so if I just do that last socat
17:33  b0ot: it will work for one line, but then the second line says connection refused
17:33  pozican: I'm using a script that starts a java "binary" in the background - There is something I can do to get the pid of the process spawned right?
17:34  geirha: b0ot: Find someone who can help you with socat. I have never even heard of that command.
17:34  b0ot: ok
17:34  geirha: !$! > pozican
17:34  greybot: pozican: $! expands to the process ID of the most recently executed background (asynchronous) command.
17:34  pozican: geirha: thanks mate
17:44 --- MuzerAway is now known as Muzer
17:51  pozican: doesn't /tmp get wiped on reboot?
17:51  taylanub: depends on your OS
17:51  pozican: ah, k - I'll test
--- Log closed Wed Nov 03 09:20:57 2010
