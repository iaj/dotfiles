--- Log opened Wed Dec 22 08:13:10 2010
--- Log opened Wed Dec 22 10:09:28 2010
10:09 --- Users 533 nicks [0 ops, 0 halfops, 0 voices, 533 normal]
10:10 --- Channel #bash was synced in 86 seconds
10:35  matt1s: I am searching for any file or directory containing NamedCommand and want to rename them to Command. I have come up with this, which works, but was wondering what a more elegant solution might be: find -name "NamedCommand*" -not -name "*svn*" -print | while read; do svn mv $REPLY `echo $REPLY | sed 's/NamedCommand/Command/'`; done
10:35  Mowee: Hi
10:36  pgas: matt1s: -name *svn* probably doesn't do what you whant
10:36  pgas: !svn
10:36  greybot: If you're considering removing .svn directories, first read "svn --help export". If you're still convinced: find . -depth -name .svn -exec rm -rf {} \; To remove everything but the svn directories: find . -name .svn -prune -o -exec rm -rf {} \;
10:38  matt1s: pgas: I just wanted the .svn directories to not be included in the search results
10:38  pgas: yup, that's what I said -name "*svn*" doesn 't do what you want
10:38  pgas: -name only matches against the basename, not on the whole path
10:39  matt1s: pgas: Ah, it worked though, I did it with and without it, and it echoed with and without the .svn directories
10:40  pgas: your test was wrong then
10:41  pgas: #  mkdir .svn; touch foobar .svn/foobar; find . -name foobar -not -name "*svn*" -print
10:41  evalbot: pgas: ./foobar
10:41  evalbot: pgas: ./.svn/foobar
10:42  matt1s: I see, I guess I was lucky
10:44  pgas:  find . -name .svn -prune -o type d -exec sh -c 'cd "$1" && [ -e NameCommand ] && mv NameCommand Command' _ {} \;
10:48  matt1s: pgas: I modified my own, but I came up with this: find . -path '*/.svn*' -prune -or -name "NamedCommand*" -print | while read; do svn mv $REPLY `echo $REPLY | sed 's/NamedCommand/Command/'`; done
10:49  visof: hello
10:49  delt: Hello
10:50  delt: was just wondering, is there a way to make the command history ignore "fg" and "bg"?
10:50  delt: (ie. up arrows by default)
10:50  delt: s/arrows/arrow/
10:50  pgas: matt1s: mv "$REPLY" "${REPLY%NamedCommand}Command"
10:50  visof: if i have txt file that have this format 12,3,12,hello for each line and i want to check the third column if it 12 replace it to 1 , so the output i want is 12,3,1,hello , how can i do that ?
10:50  pgas: you can remove the binging yes
10:51  delt: "history" as in, the one in currently running bash process, and also what gets written to ~/.bash_history
10:51  delt: ie. if the command is just "bg" or "fg" simply ignore it as far as history goes
10:51 --- Fernando1asso is now known as FernandoBasso
10:52  pgas: delt: oh sorry ...totally misread your question...
10:52  pgas: delt: check HISTIGNORE in man bash
10:53  delt: like, command <enter> (running in foreground of that term window) ctrl+Z, bg (now running in background, but still "attached" to the term window..... i press UP key and i don't want to see any FG or BG
10:53  delt: pgas: thanks, checking
10:54  delt: also sorry for RTFM related.... its just that TFM (The ...darn... Manpage) is very very very very very long...
10:54  pgas: delt: no problem
10:55  delt: well, more than my (human) brain can store and access randomly in a split second =)
10:56  delt: HISTIGNORE - A colon. That was helpful :/ oooh there's more, wait... colon-separated list of... (reading on)
10:56  delt: anyway thanks :D
10:59  matt1s: pgas, thanks for your help, I ended up with this: find -not -path '*/.svn*' -and -name "SomeThing*" -print | while read; do echo svn mv "$REPLY" "${REPLY%SomeThing}SomeThingElse"; done
10:59  delt: update: adding to profile script HISTIGNORE="fg:bg" seems to have done the job quite nicely, thanks again
11:00  delt: now what else was i gonna ask......
11:00 * delt confused :/ :?
11:00  matt1s: pgas, I removed -prune with a -not instead, since it reads a tad better
11:01  delt: not about ~/.bash_history that's what grep -v is for. had something else in mind......
11:01  delt: anyway, be back when/if i remember - thanks again =)
11:04  Weust`: hi, i test the returncode from my commands to see if something went wrong
11:05  Weust`: can you spot why the returncode is 0 when there is a "no such file or directory" error
11:05  Weust`: http://pastebin.com/R1WYFHHg
11:09  koala_man: could be ftp sucking
11:09  koala_man: try with wget
11:14  Dribble: quiz me
11:15  matt1s: pgas: I had a problem with the latest one with `mv "$REPLY" "${REPLY%NamedCommand}Command"` when $REPLY can contain both a directory and a file ending in i.e. .php
11:21  david__: Hi guys, I'm starting to work with sed, but I have a problem: I want to extract the content of an html page located between <textarea ...> and </textarea> so I wrote the following code
11:21  david__: cat temp.html | sed -n '\<textarea/,/\</textarea> p
11:21  david__: but I got the following error: "sed: -e expression #1, char 27: unterminated address regex"
11:21  david__: Does someone know why ?
11:22  david__: cat temp.html | sed -n '\<textarea/,/\</textarea> p'
11:22  david__: that's my code
11:24  lhunath: david__: the syntax is '/regex/,/regex/command'
11:28  david__: lhunath, what is the replacement for command in my case ? I just want to print the content located between the <textarea></textarea>
11:30  pgas: http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags
11:31  pgas: it sounds like you should try ##sed
11:33  lhunath: david__: p
11:33  lhunath: xpath is a better idea, generally
11:34  david__: well, so I don't understand, the following code shloud work, nop ?
11:34  david__: cat temp.html | sed -n '\<textarea/,/\</textarea> p'
11:34  lhunath: no.
11:34  lhunath: it doesn't abide by the syntax I just told you to use.
11:34  david__: why ? I put p
11:34  lhunath: $ xpathNodes '//textarea' <<< '<html><body><p>Howdy</p><textarea>Some text</textarea></body></html>'
11:34  lhunath: <textarea>Some text</textarea>
11:35  lhunath: xpath++
11:36  lilalinux: I have a directory with a very large number of files and now would like to divide the data into subdirectories. I'd like to have a directory for the each first character of the filenames and move the files accordingly.
11:37  lilalinux: How would I do this efficiently in bash? listing the directory is extremely slow
11:37  lilalinux: inside these directories I would again divide the files by their 2nd character
11:41  zxd: does "sh"   case  rules ?
11:41  zxd: case in ...
11:41  zxd: support
11:42  pgas: yes
11:42  pgas: matt1s: ${REPLY//foo/bar}
11:42  pgas: !pe > matt1s
11:42  greybot: matt1s: Parameter Expansion is the expansion of a parameter: "$foo", "$1". You can use it to perform string operations: "${file%.mp3}", "${0##*/}". Remember to *always* quote them. See http://mywiki.wooledge.org/BashSheet#Parameter_Operations
11:47  Lunar_Lamp: I have a recollection, from somewhere, that it is better to use a lock*directory* than a lock*file*. Can someone point me to the explanation for this, as I have forgotten it.
11:48  matt1s: pgas, thanks again!
11:49  ferret: !semaphore
11:49  Weust`: koala_man: i think i'm doing something wrong with the stderr redirection or the $? is in the wrong place
11:49  ferret: !lock
11:49  greybot: http://wiki.bash-hackers.org/howto/mutex
11:49  Weust`: "could be ftp sucking" seems like an easy answer to give
11:49  ferret: !faq mutex
11:49  greybot: ferret: No matches found at http://mywiki.wooledge.org/BashFAQ
11:49  pgas: !faq instance
11:49  greybot: http://mywiki.wooledge.org/BashFAQ/045 -- How can I ensure that only one instance of a script is running at a time (mutual exclusion)?
11:50  ferret: :|
11:50  ferret: Thanks pgas
11:51  pgas: Weust`: $? is not related to redirection, have you tried to check the ftp man page and what it says about exit status?
11:52  Weust`: pgas: ive read in it a couple of times, ill research
11:52  pgas: and what does it say?
11:53  pgas: !ftp
11:53  greybot: http://mywiki.wooledge.org/FtpMustDie
11:53  pgas: hmm,
11:53  Weust`: lol
11:53  pgas: your ftp command might not be very well suited for scripting, maybe check lftp or ckermit.
11:54  Weust`: ok, too bad, i'm kind of stuck by things ppl demand
11:55  pgas: well then it seems you cannot rely on $? and must procede to dirtier solutions...parsing the output and such
11:56  zxd: what's the FAQ that shows how to read a file line by line
11:56  pgas: !faq 1
11:56  greybot: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
11:59  noobcake: Hi, how can I make a case block to find substrings in a string? EG: case $string in \ $subs1) dosomesthing \ $subs2) dosomething2 ? I can't seem to get the syntax right.
11:59  ferret: ''help case''
12:00  noobcake: yeah I did that but it's not all that helpful
12:01  geirha: case $string in *" $subs1"*) ...;; *" $subs2"*) ...;; esac
12:01  noobcake: thanks
12:47  poisonbit: nDuff, do you've a blog or url to link your name?  you've been cited on: http://poisonbit.wordpress.com/2010/12/22/dirname-ng-bash-is-slow-just-10-times-faster-than-c/
12:53  amidelalune: I am doing grep $a filename, in which "a" contains "[", why isn't it working?
12:53  poisonbit: !quote
12:53  marvin: poisonbit: no results.
12:53  poisonbit: !quotes
12:53  greybot: "USE MORE QUOTES!" They are vital. Also, learn the difference between ' and " and `. See <http://mywiki.wooledge.org/Quotes> and <http://wiki.bash-hackers.org/syntax/words>.
12:53  amidelalune: how can I quote it?
12:53  prince_jammys: grep -F "$a" file
12:53  poisonbit: grep "$a" ....   also grep -- "$a"  file... if it's gnu grep and $a can start by -
12:54  zxd: is there a way to check if the file size is bigger than 0
12:54  prince_jammys: ''help test''
12:54  geirha: zxd: Yes, ''help test''
12:55  zxd: I dont see it
12:55  zxd: just if the file exists
12:55  poisonbit: -s
12:55  geirha: # help test | grep -- -s
12:55  evalbot: geirha:         -s FILE        True if file exists and is not empty.
12:55  zxd: ah
12:55  amidelalune: good I also need to do it with sed, should I look for a switch or look for a way to quote it?
12:57  geirha: You want a variable in a sed expression?
12:57  amidelalune: geirha, yeah,
12:57  amidelalune: to match it
12:57  geirha: Then you'll need "", but take care, if the variable contains characters special to sed, it'll break.
12:57  amidelalune: it is not working cause it has "["
12:58  geirha: Yes, [ is special to sed
12:58  amidelalune: so how can I quote "[" dynamicaly?
12:58  geirha: With difficulty. Where does that string come from?
12:58  amidelalune: /var/log/messages
12:58  geirha: And what do you need to do?
12:59  poisonbit: # var="["; echo [[[[[ | sed "s/$(printf '%q' "$var")/b/g"
12:59  evalbot: poisonbit: bbbbb
12:59  amidelalune: :D that is a good question ;) , I want to check the log different times and check if it has changed since last time and find the changes
13:00  geirha: amidelalune: Why don't you just tail it with ''tail -f''?
13:00  amidelalune: cause I want to get the result and mail it
13:01  poisonbit: amidelalune, if you need a script to seek in a file between runs, you can use another file to save the last position
13:02  amidelalune: but the position may change by something like log rotating
13:02  geirha: amidelalune: You want to mail it every time there's a new line?
13:02  amidelalune: everytime there are like 50 newlines
13:03  poisonbit: you can compare the inode using stat
13:03  poisonbit: so you can save filename inode position, one fileto open per line
13:03  amidelalune: I didn't know about it
13:03  poisonbit: note that stat is not "bash"
13:04  geirha: If you have GNU tail, you can use tail -F
13:05  amidelalune: geirha, but that does not exit in order to get the result in a variable or something to be mailed
13:07  geirha: i=0 lines=(); while IFS= read -r "lines[i++]"; do if ((i==50)); then printf '%s\n' "${lines[@]}" | cat; i=0; fi; done < <(tail -F /var/log/messsages)
13:07  geirha: replace cat with the mail command.
13:07 * poisonbit thinks that if there where a cpan for bash, there could be a syslog_get_lines_by_date pre-packaged function  :)
13:07  amidelalune: wow, nice, tnx
13:08  geirha: It'll continually read new lines from the log files into an array. When the array has 50 lines, it prints those 50 lines and pipes to cat (or mail in your case).
13:08  geirha: And again, tail -F is GNU specific, so it assumes you have GNU tail (if you're on linux you probably have GNU tail)
13:09  poisonbit: does it work on log rotation ?
13:09  geirha: -F does, yes. -f binds to inode, -F binds to filename
13:09  poisonbit: oh, /me reads it in man page, the option does just what i asked
13:11  amidelalune: poisonbit, :) yeah
13:12  geirha: You might want to 2>/dev/null on the tail as it will write a message to stderr when the file is replaced.
13:12  pgas: poisonbit: sure, for a simple task forking might take more time than doing it in bash, but compare time for ((i=1;i<=10000;i++)) do echo $i;done > file with time awk 'BEGIN{for (i=1;i<=10000;i++) print i}' > file and see why even the man page says it's slow
13:13  poisonbit: he, under BUGS
13:14  amidelalune: I guess the ((i=1..)) starts a bash each time
13:15  amidelalune: isn't it?
13:15  poisonbit: printf '%s\n' {1..10000}  # done
13:17  poisonbit: still slower than awk :D
13:17  poisonbit: there is some bash profiling tool/library/foo ?
13:19  poisonbit: i mean something like:  http://graphics8.nytimes.com/images/blogs/open/05screenshotprofile.png
13:20  pgas: amidelalune: nope, it's just slow :) ksh93 is often much faster
13:27  poisonbit: http://www.mail-archive.com/uug-list@uug.byu.edu/msg09030.html
13:29  poisonbit: maybe I can put a bash copy compiled with profiling in someplace, and then simple use some script that automates profiling in that copy of bash + launch gprof
13:31  amidelalune: geirha, I was trying to understand how your code works, can you tell what is the difference of "< <" and "<<" plz?
13:32  poisonbit: amidelalune, it's not < <. it is fooo < file   and as file you're using <(cmd)
13:33  poisonbit: !<()
13:33  greybot: Process Substitution -- <(cmd) and >(cmd) -- see http://mywiki.wooledge.org/ProcessSubstitution , or http://mywiki.wooledge.org/BashFAQ/024 for a common use
13:33 --- Vorpal_ is now known as Vorpal
13:34  lhunath: "< x" means "redirect the file x to the command's stdin", "<(command)" means, "put a file here that contains the command's output".  hence < <(command)
13:37  ferret: # foo=<(cat); echo "$foo"
13:37  amidelalune: I understand this but i can't understand when there is "< <"
13:37  evalbot: ferret: /dev/fd/63
13:37  ferret:  foo=<(cat); somecommand < "$foo" is exactly the same as somecommand < <(cat)
13:38  ferret: Does that help?
13:38  lhunath: amidelalune: why are you focusing on "< <"?  you're tearing syntax apart and putting unrelated things together.  stop that.
13:38  amidelalune: i guess I got it, going to do some test with my new valuabele knowledge
13:39  lhunath: "echo foo" has nothing to do with "o f"
13:39  poisonbit: amidelalune, there is no "< <", there is "<$IFS<"
13:39  lhunath: it's echo.   and foo.
13:39  ferret: somecommand <         <(something)
13:39  ferret: :D
13:40 --- Skaag_ is now known as Skaag
13:41  poisonbit: amidelalune, think how you separate commands and options... <" "<
13:41  amidelalune: YES YES YES tnx poisonbit
13:41  poisonbit: there is no "l s" command  :P
13:41 * amidelalune is happy 
13:46  amidelalune: I really liked this feature
13:50  zplinux: hi all
13:51  zplinux: assuming I plug a pc to do a pxe install , how can I get notified when the install of the OS is done?
13:51  zplinux: I wrote the install script , so I can add a few lines at the end
13:51  zplinux: I can't email
13:54  poisonbit: how do you "want" to be notified ?
13:54  cthuluh: zplinux: printf \\a
13:55  poisonbit: does not beeps on my imac :D
13:55  zplinux: cthuluh: I am away from that pc screen and just want to know when I can access it via ssh and to what IP address
13:56  cthuluh: zplinux: if you have nc / netcat installed you can send an email. though your question isn't really bash related
13:56  zplinux: right
13:56  cthuluh: ask your OS channel, they'll have better ideas
13:56  zplinux: I am just seeking a way to get a notification
13:57  zplinux: ok
13:58 --- rdz_ is now known as rdz__
13:59 --- rdz__ is now known as rdz
14:03  rrn: Off-topic, but how do I find the "actual" username of the current user?
14:04  amidelalune: whoami?
14:04  rrn: id and $USER appears to display the effective username.
14:04  pgas: who da boy
14:04  rrn: amidelalune: No
14:05  rrn: id, whoami, and $USER displays root.
14:05  koala_man: rrn: is this through sudo?
14:05  rrn: yes
14:06  koala_man: things run by sudo are actually run by root. to find the user who ran sudo, echo $SUDO_USER
14:06  rrn: koala_man: What if I simply su to the root user? Would there be a way?
14:07  lhunath: no.
14:07  lhunath: since the actual username is root.
14:07  lhunath: not sure what you want.
14:07  lhunath: "the UID of the user that ran the su command"?
14:08 --- david__ is now known as evasive
14:08  rrn: lhunath: If I were to log in as a non-root user and then su to root.
14:08  lhunath: then what?
14:09  geirha: You don't remember what user you logged in as?
14:09  lhunath: what do you want?
14:09  lhunath: something that runs up the process hierarchy and finds the process that ran the su process and finds its UID?
14:09  rrn: lhunath: To find the username that used su to log in as root.
14:10  evasive: Funny question of the day: Why does wget download a Twitter old page with lacking tweets ?
14:10  lhunath: rrn: it makes no sense to want that.
14:10  geirha: evasive: Funny answer; #wget
14:10  evasive: oh a special chan, thx :)
14:10  rrn: lhunath: I could check pstree but is there a command/command flag for this?
14:10  lhunath: it's utterly unrelated to the shell that su starts
14:11  rrn: lhunath: Except for the process hiearchy, right?
14:11  Eiler: with sudo if i do like: auser ALL= /home/<auser>/aprogram, how would i make so that user dont need to type a password?
14:11  lhunath: rrn: if the process hierarchy still exists.
14:11  lhunath: rrn: what's the real problem?
14:12  lhunath: Eiler: man sudoers
14:12  rrn: lhunath: I frequently chown/chgrp files as root, and it's tedious to type in the long username.
14:12  lhunath: Eiler: but don't do that.
14:12  Eiler: lhunath why not?
14:12  paddy_: This command is not working: cp `find | grep .avi | sed 's/.*/\"&\"/' | tr '\n' ' '` some/directory    It says it cant find files, when the files are part names of the files I am trying to copy. I checked the output of the commend in the `` things and it looks good, all on one line quoted, why is this not working?
14:13  lhunath: Eiler: because you're elevating the privileges of aprogram.  that's stupid.
14:13  Eiler: lhunath isnt that the whole point of sudo
14:13  lhunath: rather, allowing aprogram to elevate privileges
14:13  Eiler: lhunath so how to do it then?
14:13  lhunath: Eiler: yes, but you're allowing it to happen without YOUR OK
14:13  erUSUL: paddy_: i am sure (gnu) find can do all that by itsef
14:13  lhunath: Eiler: type your password.
14:14  lhunath: thereby, telling the OS that you're OK with the privilege escalation.
14:14  Eiler: lhunath cant, since it the webserver that needs to run a program
14:14  lhunath: Eiler: broken
14:14  Eiler: lhunath what is?
14:14  rrn: lhunath: Ok, so there is no way (except to parse the pstree).
14:14  lhunath: Eiler: run the web server as the user you want to do stuff as.
14:15  geirha: paddy_: That's possibly the worst command I've seen this week
14:15  Eiler: lhunath i have a program that needs to be run with root privileges and that the webserver needs to run
14:15  lhunath: Eiler: privilege sepratation exists for a reason.  don't screw with security.
14:15  Unhammer: http://pastebin.com/Lz2WxYuW <- can anyone think of a prettier way of checking if one command in a pipeline had stderr output?
14:15  geirha: paddy_: find . -name "*.avi" -exec cp {} some/directory \;
14:15  geirha: !find > paddy_
14:15  greybot: paddy_: http://mywiki.wooledge.org/UsingFind
14:15  erUSUL: paddy_: find -name '*.avi' -exec cp {} some/directory/ +
14:16  rrn: "webserver needs to run a program" - sounds very insecure
14:16  paddy_: geirha, do i win a prize ;)
14:16  geirha: erUSUL: You can't have anything between {} and +
14:16  Eiler: lhunath that gives nothing, since i have to run the program with root privilegies and the webserver has to run it
14:16  erUSUL: geirha: oops; tyvm i stand corrected
14:16  lhunath: Eiler: run the webserver as root.
14:16  lhunath: Eiler: seeing as you don't care about security.
14:16  geirha: paddy_: Yes, the useless use of grep, sed, tr and command substitution price
14:16  rrn: Eiler: What sort of program?
14:17  Eiler: lhunath the whole thing is about security, the program sets up a chroot jail when i starts
14:17  rrn: Eiler: CGI-BIN?
14:17  erUSUL: geirha with gnu coreutils and find --> find -name '*.avi' -exec cp -t some/directory/ '{}' +
14:17  lhunath: Eiler: so shooting holes in your security is fine with you?
14:17  lhunath: Eiler: don't let your web server run stuff as root.
14:17  Eiler: lhunath if there is no other way to solve it, sure
14:18  pgas: Unhammer: if { cmd | cmd | cmd; } 2>&1 > $output | grep -q .;then
14:18  lhunath: Eiler: let your webserver talk to a root daemon.  don't let it run code as root.
14:18  geirha: erUSUL: Aye, GNU does add some useful features sometimes :)
14:18  Eiler: lhunath i've already specified the requirements, can you come up with a better idea to solve it?
14:18  paddy_: geirha, Its going to be a while, but i think i love you!
14:19  paddy_: geirha, If it works i will give you a digital hug
14:19  lhunath: Eiler: the solution depends on what you need your webserver to do that involves aprogram being ran as root.
14:21  Unhammer: pgas, wow thank!!
14:21  Unhammer: *thanks
14:23  pgas: Unhammer: also if your commands set a meaningful exit status you might like: set -o pipefail
14:24  Unhammer: well, sometimes they don't fail (completely) but I'd still like to catch output
14:28  geirha: var=$({ cmd1 | cmd2 | cmd3; } 2>errlog >output; echo "${PIPESTATUS[*]}"); if [[ $var != "0 0 0" ]]; then
14:30  pgas: I think you mean 2>&1
14:31  pgas: ah no you capture the err log sorry
14:32  pgas: well, I'd use set -o pipefail
14:47 --- wtfness is now known as foocraft
14:50 --- paddy_ is now known as Microsoft_Window
14:50 --- Microsoft_Window is now known as paddy_
15:13 --- Will| is now known as Will|override
15:18 --- Weust` is now known as Weust`afk
15:22 --- Weust`afk is now known as Weust`
15:35  evasive: I asked twice in the wget chan, but why do wget keep downloading an old twitter page, instead of the new one ?
15:37 --- DustyDin1o is now known as DustyDingo
15:42  pgas: evasive: because you tell it to do so? because that's what twitter sends? because it refuse to update the existing file on disk?
15:44  lunaphyte_: hi.  i have this function: http://dpaste.com/289461/ - which i'm calling like this:  new_hostname=$(prompt_for_hostname), in which case the echo statement's output is not seen.  how can do this in such a way that i do see the feedback?
15:45  evasive: pgas: my command is like: wget http://twitter.com/justinbieber
15:46  evasive: Why would twitter send me an old page while I can see the good one in firefox ? And it's not about update, this is on a new file
15:50  pgas: lunaphyte_: send the feedback to stderr
15:51  XiaolinDraconis: http://pastebin.com/xpZzdDps   somehow it fails
15:51  XiaolinDraconis: i have no idea what im doing really just copied the grep bit from someone else's code
15:52  XiaolinDraconis: ran that in a terminal and i just get " no process found"
15:53  lhunath: !pm
15:53  greybot: http://mywiki.wooledge.org/ProcessManagement
15:53  XiaolinDraconis: is that for me?
15:53  tvm: yes.
15:53  XiaolinDraconis: ty loading it now
15:54  lunaphyte_: pgas: thanks.
15:56  XiaolinDraconis: will the PID of xwinwrap change from time to time?
15:56  domjohnson: Hi
15:56  lhunath: PIDs of processes do not change.
15:56  XiaolinDraconis: even when stopped and started?
15:56  XiaolinDraconis: or day to day
15:56  lhunath: each time you start a program, it's a NEW process.
15:56  lhunath: with a DIFFERENT PID from the one that's dead and gone.
15:57  lhunath: or still alive
15:57  XiaolinDraconis: so killing it by PID wont work for me
15:57  XiaolinDraconis: ty
15:57  grop: phttp://pastebin.com/thrVtbeM
15:57  grop: -p
15:57  lhunath: XiaolinDraconis: don't be silly.
15:58  domjohnson: I'm trying to create a script that reads lines from a text file, each line of the text file is an argument for a command (xsetwacom) - I've tried doing that with this script >>> http://paste.ubuntu.com/546627/ but I get the error: "line1: key SHIFT PLUS - command not found"
15:58  domjohnson: Can anyone advise a better way to read from the text file?
15:58  XiaolinDraconis: im not being silly
15:58  domjohnson: (Sorry, I'm coding for sh)
15:58  XiaolinDraconis: i have no experience with this
15:58  lhunath: domjohnson: you're confusing pipes for file redirections.
15:59  domjohnson: ok
15:59  lhunath: uh
15:59  lhunath: and a whole lot more.
15:59  lhunath: very little about that code is actually correct.
15:59  domjohnson: ok
15:59  grop: XiaolinDraconis, http://pastebin.com/bfyU6kJ1
15:59  domjohnson: lol
15:59  XiaolinDraconis: i have read the first one u pasted and was going to ask about line 5
16:00  domjohnson: so would it be xsetwacom $padid | $line1?
16:01  lhunath: why did you put a | symbol there?
16:01  grop: XiaolinDraconis, yeah I failed ^^
16:02  XiaolinDraconis: i had no idea was gonna ask what the xcx was
16:03  XiaolinDraconis: its still a little fail without the "then" in it
16:03  XiaolinDraconis: i think
16:03  XiaolinDraconis: the purpose is sposed to be an on/off switch
16:04  grop: XiaolinDraconis, you could write xwinwrapxcx like in your script, but you put 'xwinwrap' in a variable, so use it…
16:05  lhunath: XiaolinDraconis: read the process management link, at least the "Basics" chapter.  that way at least you'll understand what you're trying to do instead of this stabbing at bunnies in the dark.
16:05  XiaolinDraconis: i did read some of it until i seen that PID management was useless for my script
16:07  XiaolinDraconis: grop, yeah it makes sense to use that variable now im testing the "THEN"
16:07  XiaolinDraconis: my original script would kill xwinwrap if it was running but it didnt start it if it wasnt
16:07  lhunath: XiaolinDraconis: you're being stupid.
16:08  XiaolinDraconis: would help if you explained how
16:08  lhunath: rather, you think you're smarter than the guy that wrote it.
16:08  lhunath: PID management is not useless.
16:08  XiaolinDraconis: and btw stupid is refusing to learn while ignorance is the absence of knowledge
16:08  lhunath: exactly.
16:09  lhunath: in "being stupid", I was referring to your dismissal of the information on the page after your ignorant assumption that it doesn't apply to you.
16:10  XiaolinDraconis: i dont understand how
16:10  lhunath: when the service is started, the PID is known.  it is either stored somewhere or you need to store it somewhere.
16:10  XiaolinDraconis: the process id will change so why would i need to know a one time PID
16:10  lhunath: then, when you want to shut it down, get the PID from storage and shut the process down from it.
16:11  lhunath: this is exactly what the page explains in clear detail.
16:11  XiaolinDraconis: but you told me that the id changes each time
16:11  XiaolinDraconis: i get what your saying
16:11  lhunath: which is why you store it each time you start a new process.
16:11  XiaolinDraconis: make the script find the pid and and then kill that
16:11  lhunath: indeed.
16:12  lhunath: does /home/dojo/Scripts/Matrix.sh start xwinwrap?
16:12  XiaolinDraconis: yes
16:12  lhunath: then look at where Matrix.sh stores its PID.
16:12  XiaolinDraconis: its for the matrix wallpaper trick
16:12  grop: I know
16:13 --- studyurnm3 is now known as misnix
16:13  XiaolinDraconis: Matrix.sh isnt the only thing i use xwinwrap for
16:14  XiaolinDraconis: alos have a script to set any video as wallpaper as well
16:14  TCCb: hello quick question... Let's see I want to run a bash script that produces out put and I want to tee the output to a file but I also want to print it to the terminal, what would be a good way to do this?
16:14  XiaolinDraconis: *also
16:14  TCCb: say*
16:14  lhunath: if it doesn't store it somewhere yet, then it is being naughty; and you need to make it store the PID.  Unless Matrix.sh is actually the service you want to kill (that would be ideal)
16:14  TCCb: I was thinking like script.sh | tee /paht/to/file | cat -
16:15  lhunath: uh..
16:15  lhunath: command | tee /path/to/file
16:15  TCCb: nope.. doesn't print to stodout
16:15  lhunath: yes.
16:15  TCCb: stdout..
16:15  TCCb: nope..
16:15  lhunath: yes.
16:15  TCCb: not to the terminal
16:15  TCCb: nope
16:15  lhunath: stdout.
16:15  TCCb: nopt.. I tried it.. the output doesn't appear on the terminal
16:15  lhunath: I don't know what you attached your stdout to.
16:15  XiaolinDraconis: its not the only service, i want it to kill any xwinwrap since it could be a video file playing as well
16:16  lhunath: # echo foo | tee file
16:16  evalbot: lhunath: foo
16:16  lhunath: look!  output!
16:17  grop: XiaolinDraconis, how do you launch xwinwrap? You want to check whether it's already launched or not, then kill it if it is, and then launch it, or just execute it if it's not launched?
16:17  lhunath: XiaolinDraconis: you want it to stop any xwinwrap's started, no matter who started it or why or when?
16:17  lhunath: ..
16:17  TCCb: ok... not sure why it's not working for me.. <sigh> .... now where did I put my drawing board.
16:18  lhunath: that kind of mindless killing can only be properly achieved by a blind killall.
16:18  XiaolinDraconis: grop, i want it to kill my video wallpaper if it is running, if not start the matrix wallpaper
16:18  XiaolinDraconis: lhunath, i guess. as far as i know im the only thing that uses xwinwrap
16:18  grop: XiaolinDraconis, like that http://pastebin.com/N9DuYEZh ?
16:19  lhunath: you can probably do the pkill without the pgrep check
16:19  XiaolinDraconis: wouldnt that start the Matrix.sh no matter what
16:19  lhunath: yes
16:19  lhunath: if you want it to be a switch, you'd need the else
16:20  XiaolinDraconis: i dont want that. its sposed to be a toggle switch
16:20  XiaolinDraconis: right
16:20  XiaolinDraconis: i added that to grop's initial post
16:22  XiaolinDraconis: i tried it with adding else
16:22  XiaolinDraconis: now it doesnt kill anything
16:22  XiaolinDraconis: returns a number i assume is the PID
16:25  XiaolinDraconis: http://pastebin.com/qTgWZUNB    this variation returns 13194 which i assume is the PID
16:26  krzee: thats the output of the pgrep
16:26  krzee: so ya
16:27  krzee: why the xcx after the pkill?
16:27  XiaolinDraconis: it's ignoring "else"
16:27  XiaolinDraconis: i dont know i asked grop and he didnt tell me
16:27  krzee: well sure, its returning the pid from if, why would it run else?!
16:27  grop: XiaolinDraconis, http://pastebin.com/ZBue1vrQ
16:27  grop: XiaolinDraconis, because you put it in your initial script
16:28  XiaolinDraconis: xcx?
16:28  XiaolinDraconis: i didnt see that
16:28  XiaolinDraconis: krzee, because i want it to run else if the process isnt found
16:29  pgas: http://pastebin.com/xpZzdDps : "killall xwinwrapxcx"
16:29  krzee: XiaolinDraconis, sure, but if it *IS* found (like when it returned the pid) then the else wouldnt be run
16:29  XiaolinDraconis: then it should kill what it found
16:29  krzee: right, unless you have an extra xcx there for no reason
16:30  krzee: then it doesnt match anything so nothing gets killed :-p
16:30  pgas: spurious xcx  sounds like an emacs user
16:30  XiaolinDraconis: i had no idea why that was there
16:30  pgas: then remove it
16:30  krzee: if its not part of the process name, lose it
16:30  XiaolinDraconis: grop, why is that there?
16:30  krzee: [07:27]  <grop> XiaolinDraconis, because you put it in your initial script
16:31  krzee: and a good theory...
16:31  krzee: [07:30]  <pgas> spurious xcx  sounds like an emacs user
16:31  krzee: and the solution
16:31  krzee: [07:30]  <krzee> if its not part of the process name, lose it
16:31  krzee: :-p
16:33  krzee: pgas, why grep -v grep instead of making SERVICE=[x]winwrap ?  do some greps not support that?
16:34  grop: XiaolinDraconis, well try it http://pastebin.com/8FvAcg5d ?
16:35  XiaolinDraconis: trying it
16:35  XiaolinDraconis: doesnt start Matrix.sh
16:36  XiaolinDraconis: just returns PID
16:36  pgas: maybe because pkill doesn't kill your application
16:37  krzee: lol
16:37  pgas: krzee: all grep understand -v and [x]
16:37  XiaolinDraconis: yes it does kill my process
16:38  pgas: then the second time it will run the else part
16:38  XiaolinDraconis: it kills it if it is there but it wont start the script in "else"
16:38  pgas: it will start it if you run it a second time
16:38  XiaolinDraconis: nope
16:39  pgas: then you still have a process matched by pgrep...
16:39  lhunath: !-x
16:39  greybot: Setting the -x option on bash enables a debugging mode that makes bash output the command name and arguments that it will run (after all parsing and expansion has been applied). Set it by starting a script with ''bash -x ./myscript'' or putting ''set -x'' before the code you want to debug. ''set +x'' turns this behaviour off.
16:39  pgas: grop: fwiw, &> is a bashism so you should avoid to use it with #!/bin/sh
16:40  grop: Or just do : pkill xwinwrap && /home/dojo/Scripts/Matrix.sh (I think that is what you want)
16:40  grop: pgas, thanks, didn't know
16:40  XiaolinDraconis: i dont see any process that remotely matching xwinwrap
16:40  pgas: then the else part is executed
16:41  XiaolinDraconis: with no result
16:41  pgas: ok....let's go slowly
16:41  pgas: run: bash -x yourscript
16:41  pgas: do you see a call to Matrix.sh
16:41  pgas: ?
16:42  pgas: or rather paste the output
16:42  XiaolinDraconis: so in terminal write bash -x <script>
16:42  pgas: yes, where <script>  is the one with pgrep pkill etc
16:42  XiaolinDraconis: k
16:43  XiaolinDraconis: lmao somehow this time it started it
16:44  XiaolinDraconis: hmmm
16:44  XiaolinDraconis: it doesnt work if i click and run file
16:44  XiaolinDraconis: but when i typed what you told me to it did work
16:45  XiaolinDraconis: found it
16:45  grop: XiaolinDraconis, or just put  pkill xwinwrap; /home/dojo/Scripts/Matrix.sh  in your script
16:45  XiaolinDraconis: grop,  you put this in it http://pastebin.com/8FvAcg5d
16:45  XiaolinDraconis: read line 1
16:45  grop: XiaolinDraconis, it will kill the process if it exists, then launch xwinwrap, or if doesn't exist, execute xwinwrap
16:46  XiaolinDraconis: it works u just missed two letters
16:46  e36freak: is there any way to make "basename" not return an un-expanded glob if it doesnt find a match? either nothing or an error would work
16:46  e36freak: it just makes error handling difficult
16:47  XiaolinDraconis: yep got it working
16:48  XiaolinDraconis: thanks for all your help people
16:48  grop: XiaolinDraconis, huh? You mean you missed the shebang?
16:49  XiaolinDraconis: i didnt noticed YOU missed it
16:49  XiaolinDraconis: lol
16:49  XiaolinDraconis: i just copied n pasted
16:49  e36freak: current line is foo=$(sed "s/${pkg}-//;s/-i686.*//" <<<$(basename /srv/cower/i686/${pkg}-@([0-9])*))
16:49  grop: XiaolinDraconis, you didn't tell us if you were writing for sh or bash
16:49  XiaolinDraconis: pgas, thanks for showing me the bash -x verbose bit
16:50  XiaolinDraconis: grop, true and my apologies, but it was part of my original paste
16:51  pgas: e36freak: shopt -s nulglob
16:51  e36freak: pgas: ahh, thats the one. thanks
16:51  pgas: e36freak: shopt -s nullglob
16:51  e36freak: yeah, i got that
16:53  e36freak: so now i get an error, which is fine. just 2>/dev/null. unless theres a better way to handle that
17:05  XiaolinDraconis: grop, got an addition i want to make to the script http://pastebin.com/sKKyHAWx
17:05  XiaolinDraconis: i would like to make that a part of the condition
17:06  XiaolinDraconis: if it kills then it should show the icons
17:06  XiaolinDraconis: and if it starts the script it should hide them
17:07  e36freak: XiaolinDraconis: $test gives you the literal string "true" ?
17:07  e36freak: oh, i see
17:07  ascheel: !here
17:07  XiaolinDraconis: i dont
17:07  ascheel: !<<
17:07  greybot: Here documents. cat <<EOF followed by several lines of text, followed by the literal string EOF on a new line, NOT indented. The portion between the EOFs is passed to the command as standard input. If 'EOF' is 'quoted', substitutions WON'T be done; otherwise they are. See <<- for the indented variety.
17:07  XiaolinDraconis: i just copied and pasted that code
17:08  i0nic: what is something unique to each computer that I could use as a variable for checking?
17:08  e36freak: mac address?
17:09  i0nic: nah that wouldn't work =(
17:09  i0nic: any other thoughts?
17:10  i0nic: what exactly is the hostid command
17:10  erUSUL: i0nic: why it wpuldn't work? MAC adresses are unique
17:12  i0nic: erUSUL: it just wouldnt work for what im doing.
17:15  XiaolinDraconis: would this work? http://pastebin.com/srNk2LE1
17:17  XiaolinDraconis: nope
17:18  e36freak: your indentation is strange
17:19  e36freak: http://pastebin.com/nizqtWsa
17:20  e36freak: the newline in there might be messing with something
17:20  maximveksler: Why this http://pastebin.com/HhFXVTw4 ?
17:20  maximveksler: shouldn't bash just understand this simple function definition?
17:20  e36freak: maximveksler: the # is being treated as a comment
17:21  e36freak: and it thinks the command is incomplete
17:21  erUSUL: maximveksler: missing ; ?
17:21  erUSUL: # function maxim() { echo "abc"; } ; maxim
17:21  evalbot: erUSUL: abc
17:21  e36freak: OH
17:21  erUSUL: # function maxim() { echo "abc" } ; maxim
17:21  evalbot: erUSUL: Missing terminating quote, bracket or keyword
17:21  e36freak: thats your PS1, i thought you were trying to ssh
17:21  maximveksler: erUSUL: Yes! Thanks
17:21  pgas: # echo foo }
17:21  evalbot: pgas: foo }
17:22  e36freak: # foo() { echo bar }; foo
17:22  evalbot: e36freak: Missing terminating quote, bracket or keyword
17:22  e36freak: # foo() { echo bar; }; foo
17:22  evalbot: e36freak: bar
17:23  pgas: XiaolinDraconis: use functions, don 't put commands in variables
17:23  e36freak: !eval
17:23  greybot: 'eval' is a common misspelling of 'evil'. If eval is the answer, surely you are asking the wrong question. See http://mywiki.wooledge.org/BashFAQ/048
17:23  knoppix_____: what is the best way for a bash script to get its own directory
17:23  erUSUL: knoppix_____: define "get its own directory"
17:24  knoppix_____: assuming you don't know where it is run from or if there are different programs with the same name
17:24  pgas: define  best ;)
17:24  knoppix_____: well if $0  gave the path, that would be it
17:24  nDuff: !faq 28
17:24  greybot: http://mywiki.wooledge.org/BashFAQ/028 -- How do I determine the location of my script?  I want to read some config files from the same place.
17:24  XiaolinDraconis: dont know how to do what your saying pgas
17:24  knoppix_____: type
17:24  e36freak: $PWD
17:24  knoppix_____: type -p $0 isn't reliable
17:24  nDuff: there's a FAQ on this
17:25  nDuff: which I just linked to :)
17:25  knoppix_____: assuming you would not be in that directory when running it
17:25 * erUSUL was thinking in mktemp ....
17:25  nDuff: ...notably, though, before going into the details, the FAQ talks about why it's a bad idea to write scripts that need to know that.
17:25  nDuff: knoppix_____, ^^^
17:28  knoppix_____: oh not the directory the directory you are in, the directory the file with the script is in
17:28  nDuff: yes, that's what FAQ 28 discusses
17:28  nDuff: you read it, right?
17:28  XiaolinDraconis: if i place "&&" between the two commands will that make them separate from each other
17:29  e36freak: XiaolinDraconis: it will run the second if the first finishes successfully
17:29  XiaolinDraconis: i think that works for me
17:29  e36freak: # echo "foo" && echo "bar"
17:29  evalbot: e36freak: foo
17:29  evalbot: e36freak: bar
17:29  knoppix_____: thank you nDuff
17:29  e36freak: # echo $foo && echo "bar"
17:29  evalbot: e36freak:
17:29  evalbot: e36freak: bar
17:29  XiaolinDraconis: in both my if and else statements i have two task to run
17:29  knoppix_____: and that is the exact reason for wanting it
17:29  e36freak: XiaolinDraconis: seperate lines
17:29  XiaolinDraconis: i dont know how to separate them other that &&
17:29  Geralt: how could I display $? in PS1 if it's != 0? Is there something more convenient than puttin $(if [[ $? != 0 ]]; then echo "error $?"; fi) in PS1?
17:29  XiaolinDraconis: ooh
17:30  e36freak: XiaolinDraconis: semi colon, new lines, or &&
17:30  XiaolinDraconis: so a semi colon and a new line separates them while && makes them dependent
17:31  e36freak: close enough, yes
17:31  XiaolinDraconis: what am i mistaking?
17:31  e36freak: semi colon or new line will wait for the first to finish before the second runs
17:32  e36freak: but will run whether or not the first one is successful
17:32  e36freak: foo & bar
17:32  XiaolinDraconis: cool
17:32  e36freak: will run them at pretty much the same time
17:33  XiaolinDraconis: how would you suggest i do this?
17:35  mouseclone: when declaring an array - declare -a arrayName=(elem1 elem2 elem3) is the delimiter based on the IFS and if so could i use a / as the delimiter?
17:36  mouseclone: IFS="\"; declare -s arrayName=(elem1/elem2/elem3)?
17:36  mouseclone: err IFS="/"
17:36  e36freak: XiaolinDraconis: depends on what youre doing
17:36  XiaolinDraconis: do you know the xwinwrap wallpaper video trick?
17:37  knoppix_____: oh well
17:37  knoppix_____: no better than what I had attempted
17:37  e36freak: Geralt: (( $? )) && echo $?, the second $? will be for "(( $? ))", and will always return 0. youd have to store "$?" as a variable at the beginning
17:38  pgas: mouseclone: IFS is used by bash only when you have unquoted expansion $var $(command) not with literal strings
17:38  XiaolinDraconis: basically im using xwinwrap to set a video as my wallpaper and i want it to hide my icons when the wallpaper is on and show them when it isnt
17:39  e36freak: Geralt: or in other words, your statement will always display "error 0" when there is an error
17:39  knoppix_____: my problem is the following.  the script depends on an accompanying file, but people move things around so they might not be together any more. I have been having the script generate the file or use a HERE doc, but it is horrendously unweildy
17:40  pgas: knoppix_____: generate the file in /usr/local/share/yourapp/thefile
17:40  knoppix_____: there were too man pitfalls in the "solution" in the fac
17:40  e36freak: # foo='bar'; grep baz <<<$foo; echo $?
17:40  evalbot: e36freak: 1
17:40  e36freak: # foo='bar'; grep baz <<<$foo; (( $? )) && echo $?
17:40  evalbot: e36freak: 0
17:40  knoppix_____: no access to /usr/local/share, the script will be where they want to put it somewhere in their home directory
17:40  Geralt: e36freak: thanks, in that case I'll just have to put the check in a small function and call that in my prompt
17:40  e36freak: # foo='bar'; grep baz <<<$foo; code=$?; (( $code )) && echo $code
17:40  evalbot: e36freak: 1
17:41  pgas: knoppix_____: then put it in $HOME/.yourapp/thefile
17:41  knoppix_____: I am not the one doing the putting
17:41  mhahe: if i wanted to do a simple task such as   crontab -e -u $USER   what would be more suitable for this an alias or placing this in a script? another question when does one draw the line for small tasks? "this must be implemented as an alias" or "this must be done in a script", speaking in terms of a line to 5 lines of code?
17:41  XiaolinDraconis: pgrep "$service" &>/dev/null;        <-- what does the "&>/dev/null;"  do?
17:41  pgas: knoppix_____: then tell the one who puts the file to put it there
17:42  knoppix_____: pgas, dont I wish I could
17:42  grop: XiaolinDraconis, redirects stdout and sdterr to /dev/null, so nothing is displayed
17:43  XiaolinDraconis: thanks
17:43  e36freak: wow syslogd just freaked the hell out
17:43  knoppix_____: basically I wrote a script for one person, someone else used it without my knowing it and put it in a different directory
17:43  XiaolinDraconis: think i got it now
17:43  knoppix_____: to make it worse they modified it in such a was as to do damage
17:44  poisonbit: mhahe, usualy, if it's adding options to a cmd i use an alias, if it is more than one cmd and has arguments, i use to declare a function instead of an alias, if it's something i do not want in my environment (ram) in each session, I move it to a script
17:44  knoppix_____: and then passed it on that way to a third party
17:44  knoppix_____: any way to protect from that kind of thing?
17:45  XiaolinDraconis: http://pastebin.com/t2fManFA
17:45  XiaolinDraconis: looks good but unsure about my variables
17:45  knoppix_____: such as refusing to run if they didn't do what you said and put it someplace weird
17:45  mhahe: poisonbit, ud put the function in the .bash_profile right?
17:46  flippo: ud?
17:46  XiaolinDraconis: its not good it didnt hide the icons
17:46  poisonbit: mhahe, right (.bashrc in my distro)
17:46  knoppix_____: pgas any ideas?
17:48  mhahe: poisonbit, is there a file i can edit to point to bashrc instead of bash_profile? for my environment settings? not going to do it just asking.
17:48  poisonbit: errr man page use to explain the order of initialization files, I do not remember the 4 or 5 they are
17:48  greycat: !dotfiles
17:48  greybot: http://mywiki.wooledge.org/DotFiles or - for a technical explanation - the INVOCATION section of man bash.
17:48  mhahe: thanks
17:49  XiaolinDraconis: what does eval do?
17:49  greycat: It makes the parser parse the input a second time.
17:49  knoppix_____: anybody?
17:49  greycat: This generally causes huge bugs.
17:49  XiaolinDraconis: k sounds useless in my code
17:49  xenyl: XiaolinDraconis: eval is the best way to commit ritual suicide as well
17:50  XiaolinDraconis: dont know why the original writer put that in there
17:50  greycat: !crap
17:50  greybot: The overwhelming majority of bash scripts, code, tutorials, and guides on the Internet are crap. Sturgeon was an optimist.
17:50  xenyl: eval is useful
17:50  grop: !eval
17:50  greybot: 'eval' is a common misspelling of 'evil'. If eval is the answer, surely you are asking the wrong question. See http://mywiki.wooledge.org/BashFAQ/048
17:50  xenyl: provided you sanitize its input
17:50  xenyl: yeah, but you can use evil to do good
17:50  knoppix_____: I find the faqs from here to be the best I have seen
17:51  knoppix_____: oh I love that quote
17:51  xenyl: thing is thiss
17:51  XiaolinDraconis: most of you explain thing s so much better than a webpage usually puts it
17:52  xenyl: eval is supposed to be one of the tools for the big boys
17:52  xenyl: problem is that most boys stay small
17:52  knoppix_____: haha
17:52  greycat: meh... there are no "big boys" and "little boys".
17:52  xenyl: greycat: ok, dickless ones, i will grant you that!
17:54  xenyl: i have rarely used eval to be honest, rarely and even then, it was used with extremely sanitized input
17:54  XiaolinDraconis: for some reason my script is think my variable points to a file and not a command
17:54  greycat: You either wrote code with a gaping security hole, or you didn't.  Most people do not have the expertise required to do a security audit of a bash script.  Using eval without auditing the script is a good way to get pwned.
17:54  xenyl: using eval blindly is as stupid as having a double sex change
17:54  greycat: Variables contain data.  Data is not a filename or a command unless you *treat* it that way.
17:54  tonyyarusso: Is there a way to check whether a script was run from another script or directly from the command line?  (Similar to seeing if it's __main__ in python)
17:54  xenyl: yup
17:54  greycat: tonyyarusso: why do you care?
17:54  greycat: tonyyarusso: Typically you might care if stdin is a terminal or something, so you can check that directly.
17:54  nDuff: tonyyarusso, ...do you care if it's being run from an interactive shell? Because that's [[ $- = *i* ]]
17:54  XiaolinDraconis: so if i put exec before my variable will it do this
17:55  nDuff: tonyyarusso, ...and there are legimitate reasons to care if you're being sourced as a library vs run as a script...
17:55  greycat: !faq complex > XiaolinDraconis
17:55  greybot: XiaolinDraconis: http://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
17:55  tonyyarusso: greycat: I'm trying to make an installer where a "parent" script calls a bunch of sub-scripts, passing relevant variables and sanity checks etc. to avoid duplication.  I want them to be able to say "If I'm being run directly, tell the user that's not how this works".
17:55  greycat: If you want to know whether stdout is a tty, use [[ -t 1 ]]
17:55  XiaolinDraconis: ive used it successfully
17:56  XiaolinDraconis: it just doesnt want to work with my new script
17:56  greycat: tonyyarusso: set an env variable that the user is unlikely to set.  Look for that.  Congratulate yourself on writing such a clever abomination.
17:56  krzee: greycat, hey cool trick!
17:56  knoppix_____: ok is this ridiculous, look for a file by the name of the script in the user's path grep that file for some unique, possibly bizarre thing I stick in the script as a comment, then if it it's there assume that is the directory of the script and proceed, otherwise complain.   Any better suggestions?
17:56  greycat: knoppix_____: what are you trying to do?
17:57  greycat: Work around !faq location?
17:57  tonyyarusso: greycat: Do you have a better suggestion of how to go about this?  (Since you seem not to like mine.)
17:57  knoppix_____: greycat, trying to prevent incidental damage
17:57  e36freak: greycat: awesome hack
17:57  greycat: tonyyarusso: Write a script that does what it is supposed to do.  Document how to use it.  That's it.
17:57  tonyyarusso: greycat: but users...ignore documentation sometimes.
17:57  greycat: Don't try to second-guess the user.  If the user decides to run you upside down while chanting OHMM, so what?
17:58  krzee: lol
17:58  knoppix_____: I am trying to check for the location of a script in case someone who doesn't know scripting that well puts it in the "wrong" place
17:58  greycat: !faq location
17:58  greybot: http://mywiki.wooledge.org/BashFAQ/028 -- How do I determine the location of my script?  I want to read some config files from the same place.
17:58  knoppix_____: I had a catastrophic experience
17:58  knoppix_____: I read that greybot, not satisfactory
17:59  nDuff: knoppix_____, if putting your script in the wrong place is catastrophic, you're doing something else wrong.
17:59  nDuff: knoppix_____, can you describe the context?
17:59  tonyyarusso: greycat: So then we'll waste valuable time trying to diagnose what they did wrong with them only providing half the information we need in broken English, costing us money, that's what.
17:59  knoppix_____: I mean greycat, now you have me so flustered I am talking to a bot
17:59  XiaolinDraconis: hide='codehere' and hide="codehere"   whats the difference between " and '?
17:59  knoppix_____: I am not the one doing it
17:59  greycat: tonyyarusso: then write simpler shit.
17:59  knoppix_____: yes but I feel bad putting everyone through the story
18:00  e36freak: !"
18:00  greybot: "USE MORE QUOTES!" They are vital. Also, learn the difference between ' and " and `. See <http://mywiki.wooledge.org/Quotes> and <http://wiki.bash-hackers.org/syntax/words>.
18:00  tonyyarusso: greycat: 'k, I guess we'll just charge them for a Hello World, thanks.
18:00  greycat: Anyway, I'm sure the "look for XYH78JMNMQ in the environment" hack will satisfy your boss.
18:00  knoppix_____: it will be too long
18:00  nDuff: knoppix_____, the FAQ tells you how to get the absolute path in a nonportable but successful way if your platform is Linux. This is "not satisfactory"?
18:01  nDuff: knoppix_____, the FAQ gives you a bunch of other potential approaches as well. If your story will explain why they don't work, it'll stop us from going down blind alleys.
18:01  greycat: You should never care where your script is.  You should only care about where you need to look for your data.
18:02  greycat: Wondering where your script is located is like wondering which part of your body contains the soul.  Does it matter>
18:02  greycat: Unless you're planning to unmount file systems and don't want to accidentally kill yourself in the process...
18:02  knoppix_____: in the particular context there were several files with the same name as the script
18:02  knoppix_____: in the path
18:03  greycat: For the love of god, WHY?
18:03  greycat: Did you name it "test" or something?
18:03  XiaolinDraconis: ty greybot/cat for the explanation
18:03  krzee: wow
18:03  krzee: why would you ever do that!?
18:05  nDuff: knoppix_____, ...this sounds to me like something the nonportable icky approach given in the middle of the FAQ will be fine for so far, if your target platforms are suitably restricted and, of course, you're willing to clearly document where you did the icky thing so someone else can take it out later.
18:05  Bushmills: knoppix_____:   [[ -x /right/place/name_of_script ]] || echo "script not where it should be. you lose"
18:05  knoppix_____: I am trying to avoid sabotage
18:05  XiaolinDraconis: ok i tried google first but that explanation failed
18:05  knoppix_____: they are not restricted
18:06  nDuff: knoppix_____, then you've lost already.
18:06  XiaolinDraconis: how do i make my script see the variable as a command not a location
18:06  greycat: XiaolinDraconis: "$foo"
18:06  knoppix_____: this is a case of someone passing on my script to others when I didn't even know they had downloaded it
18:06  greycat: XiaolinDraconis: it is literally that simple.
18:06  greycat: # touch file; x=ls; "$x"
18:06  evalbot: greycat: file
18:06  greycat: # myfunc() { echo function invoked; }; x=myfunc; "$x"
18:06  evalbot: greycat: function invoked
18:07  XiaolinDraconis: i dont know what to do with that
18:07  greycat: Hopefully, you will forget you ever wanted to put a command into a variable.  But experience tells me you will undergo pain, and share it with us, many times before that happens.
18:08  nDuff: !exact > XiaolinDraconis (if the examples already given don't help, you'll need to be more precise about your requirements)
18:08  greybot: XiaolinDraconis (if the examples already given don't help, you'll need to be more precise about your requirements): Please tell us EXACTLY what you typed, and EXACTLY what the error is.
18:08  XiaolinDraconis: so far i have never broke anything with scripting
18:09  XiaolinDraconis: bash -x myscript .... and the result was that at line 11 when it got to my variable it said file does not exist
18:10  XiaolinDraconis: http://pastebin.com/09rYfAyT
18:10  XiaolinDraconis: theres the script
18:10  greycat: What does line 11 say?  What is the EXACT error?
18:10  zplinux: how to get the IP address of eth0 ?
18:10  nDuff: XiaolinDraconis, read the FAQ you were already pointed at
18:10  nDuff: !faq complex > XiaolinDraconis
18:10  greybot: XiaolinDraconis: http://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
18:10  greycat: !myip > zplinux
18:10  greybot: zplinux: http://mywiki.wooledge.org/IpAddress
18:10  nDuff: XiaolinDraconis, you should be using an array, not a variable, for that.
18:10  zplinux: I use: thnaks
18:10  XiaolinDraconis: i dont even know what an array is
18:11  greycat: XiaolinDraconis: you attempted to put a command AND ITS ARGUMENTS into a scalar variable.  That is why it failed.
18:11  nDuff: XiaolinDraconis, ...but the FAQ will teach you.
18:11  greycat: # myfunc() { echo function invoked; }; x='myfunc arg1'; "$x"
18:11  evalbot: greycat: bash: myfunc arg1: command not found
18:11  XiaolinDraconis: i get in my head i want to do something so i find a script someone else wrote and then i copy n paste
18:11  greycat: See the difference?  HUGE difference.
18:11  zplinux: can I write this better:
18:11  zplinux: IP=$( ifconfig eth0 |grep "inet " |sed -e s/.*r:// |sed -e "s/\ .*//" )
18:11  XiaolinDraconis: kinda but it worked when i was by itself
18:11  greycat: !myip > zplinux
18:11  greybot: zplinux: http://mywiki.wooledge.org/IpAddress
18:12  nDuff:  # myfunc() { echo function invoked; }; x=( myfunc arg1 ); "${x[@]}"
18:12  greycat: nDuff: s/^ //
18:12  nDuff: XiaolinDraconis, yes, because you're telling it to run a command named "myfunc arg1", ie. with a space in its name
18:12  XiaolinDraconis: if i have hide n show as a command by themselves they work
18:12  greycat: XiaolinDraconis: write a function.
18:12  nDuff: # myfunc() { echo function invoked; }; x=( myfunc arg1 ); "${x[@]}"
18:12  evalbot: nDuff: function invoked
18:12  greycat: hide() { blah blah blah; };   foo & hide
18:13  XiaolinDraconis: nDuff, what was this link u are talking about
18:13  XiaolinDraconis: ill go check it out
18:13  greycat: !faq complex > XiaolinDraconis
18:13  greybot: XiaolinDraconis: http://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
18:13  nDuff: !faq complex > XiaolinDraconis
18:13  greybot: XiaolinDraconis: http://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
18:13  XiaolinDraconis: but most of this goes over my head
18:13  greycat: Isn't that, like, 9 times he's been told?
18:13  XiaolinDraconis: as far as i know an array is what the crazy space people use to look for aliens!
18:13  greycat: !faq 5
18:13  greybot: http://mywiki.wooledge.org/BashFAQ/005 -- How can I use array variables?
18:14  krzee: greycat, i was just thinking about parsing this buffer to check how many times that was, lol
18:14  XiaolinDraconis: ok im going to read
18:14  XiaolinDraconis: but surely it will just confuse me further
18:14  knoppix_____: dDuff I tried to PM you so as not to bother the whole grooup
18:14  greycat: If you don't understand the FAQ, then read the Guide first.
18:14  krzee: XiaolinDraconis, not reading will surely confuse you more than reading
18:14  XiaolinDraconis: true
18:14  krzee: the path to knowledge does not include ignoring the docs
18:15  krzee: ESPECIALLY the docs here... they are GREAT
18:16  knoppix_____: if I understood the faq it simply finds a scipt in the path with the same name.  The case I am talking about is where someone has two scripts with the same name in their path.
18:16  krzee: ive learned TONS since finding the links in the topic of this channel
18:16  greycat: knoppix_____: STOP DOING THAT.
18:16  knoppix_____: greycat, stop doing what?
18:16  e36freak: ...why would you... what?
18:16  greycat: Why the fuck would you put two programs with the same name in two different directories that are both in $PATH?
18:16  nDuff: knoppix_____, one of the many proposed solutions in the FAQ tells you how to get the EXACT script, not the first one in the path
18:16  nDuff: knoppix_____, read. the. whole. FAQ.
18:17 * krzee facepalms knoppix_____ for him
18:17  krzee: (the assist)
18:18  knoppix_____: they unbeknownst to me downloaded my script, modified it, told others to download it and put it in a different location and to add a new directory earlier in the path, the directory for the new script.
18:18  greycat: Then they die.  Too bad for them.
18:18  e36freak: then i say they can deal with it
18:18  nDuff: knoppix_____, that sounds like their problem, not yours. If you can't _make_ it their problem, you suck at playing politics. Get better.
18:18  knoppix_____: i don't want the beginners to suffer because this person makes a mistake with advers consequences.
18:19  nDuff: you can also just look at whether _anything_ exists in that single, wrong location
18:19  nDuff: and complain if it does.
18:19  nDuff: easy!
18:19  krzee: knoppix_____, do you think any standard unix utils do that checking?
18:19  knoppix_____: I didn't even know this was happening until someone complained of damage "my" script had done.
18:19  greycat: You might as well look for every single standard POSIX utility and make sure it's in place, because someone might have deleted one of them or moved it.
18:19  krzee: i mean i could modify cp and put it in another dir... do you think it will notice!?
18:20  knoppix_____: I don['t even know all the details.
18:20  greycat: If someone with root access to a system broke it, and that broken system can't run your script, that is not your fault.
18:20  XiaolinDraconis: hey i have an idea
18:20 * nDuff still wants to know what knoppix_____'s script does such that it's able to be damaging under these circumstances.
18:20  knoppix_____: I just wanted to make my scripts safer.
18:20  XiaolinDraconis: why dont i just take out the pury lookin variables and use the code on the line it's sposed to be on
18:20  greycat: Unix is not about "safe".  It is about "powerful".
18:20  greycat: It's the Hole Hawg.
18:20  XiaolinDraconis: *purdy
18:21  knoppix_____: the script as I wrote it didn't, but there were some modifications
18:21  e36freak: theres an idea
18:21  greycat: OK, let's offer an example.
18:21  knoppix_____: by someone who didn't quite know what he was doing
18:21  krzee: knoppix_____, so how is that your fault!?
18:21  krzee: if the guy adds rm -rf / to your script, it will damage
18:21  krzee: but still is not YOUR business
18:22  krzee: you wanna detect if someone does that too!?
18:22  greycat: I go to a Ford dealership and I buy a car.  I take off the rear bumper.  I take off the front bumper and replace it with a gigantic spike.  I replace the engine with a truck engine.  Then I ram the car into a schoolbus.
18:22  greycat: Is this Ford's fault?
18:22  knoppix_____: it isnt my fault, fault isn't the issue. the beginners just listen to what anyone says and do it.
18:22  XiaolinDraconis: its a great idea but still this shouldnt be this difficult i just wanted a variable to be a command now i gotta type stuff like <({{ASDAS:"{}}{??##%$*?  to make it work
18:22  knoppix_____: I just don't want them unnecessarily hurt
18:22  greycat: knoppix_____: fuck 'em.
18:22  krzee: greycat, of course that is fords fault! ;]
18:22  greycat: You can't protect people from their own stupidity.  Can't.  It's impossible.
18:22  XiaolinDraconis: yes u can
18:23  XiaolinDraconis: strap em to a ceiling in a rubber room
18:23  knoppix_____: thank you XiaolinDraconis
18:23  greycat: Assume that killing them is not an acceptable solution.
18:23  XiaolinDraconis: why the ceiling? cause they might drown in spit if u put em on the floor
18:23  knoppix_____: I have stopped offering scripts until I can find at least a partial solution
18:23  krzee: knoppix_____, there is no solution
18:23  krzee: they might add rm -rf /
18:24  krzee: i mean seriously, you're chasing ghosts
18:24  greycat: Ford should stop making cars because I might modify one and ram it into a schoolbus.
18:24  knoppix_____: I think it wasn't done purely maliciously, I think they were just naive about scripting
18:24  krzee: just make your scripts work IF THEY DONT modify them
18:24  krzee: so!?
18:24  tonyyarusso: knoppix_____: make your script run an md5sum against itself, download the correct one from your web site, and refuse to proceed if they don't match!  (Not foolproof in any way, but might stop some of your issues, maybe.)
18:25  greycat: tonyyarusso: that goes back to "how do I find myself" which is where we got on the ride.
18:25  knoppix_____: unfortunately every script I have written seems to have been modified and passed on by this same person.
18:25  knoppix_____: I did the md5sum thing
18:25  e36freak: then you cant be blamed
18:25  knoppix_____: for the already existing scripts
18:25  knoppix_____: aha
18:26 * krzee gives up
18:26  knoppix_____: have the script run its own md5sum --- great idea
18:26  krzee: but he can modify the checksum!
18:26  krzee: lol
18:26  greycat: You should make them pass a written IQ test, too.
18:26  krzee: there ya go!
18:27  XiaolinDraconis: wow that array thing is wayyy over my head
18:27  greycat: "Before you can open that menu, you must answer 9 of the following 10 questions correctly..."
18:27  krzee: lol
18:27  e36freak: XiaolinDraconis: then do some more reading
18:27  knoppix_____: ok I knew somebody would come up with a decent solution
18:27  XiaolinDraconis: thats way too much learning for something i barely use
18:27  krzee: knoppix_____, what about when your guy modifies the checksum / url in your script
18:27  krzee: then what
18:27  knoppix_____: now of course that could be removed, but then it would clearly be sabotage
18:27  e36freak: greycat: im about to start doing that for everything i write
18:28  XiaolinDraconis: i dont even know what an stdout or grep is
18:28  greycat: knoppix_____: you want more stupid tricks?  OK, here's another one: refuse to run if    type -a "$(basename "$0")"   returns more than one line.
18:28  XiaolinDraconis: and grep is in my script!
18:28  e36freak: XiaolinDraconis: http://mywiki.wooledge.org/BashGuide
18:28  XiaolinDraconis: ok si i kinda know what they are
18:28  knoppix_____: it would check against an external md5sum file in a location he wouldn't have access to
18:28  krzee: XiaolinDraconis, read the guide before the faq then
18:28  krzee: knoppix_____, he can alter the location of the check
18:28  Geralt: Is it possible to expand the globs on the command line as in zsh, e.g. rm *<Tab> expands to all files in the current directory
18:28  e36freak: knoppix_____: or just remove the check in general
18:28  greycat: knoppix_____: if he has MODIFIED THE CONTENTS OF DIRECTORIES THAT ARE IN $PATH then what makes you think there is ANY place on the local disk that he can't modify?!?
18:28  knoppix_____: the version I use just has what you typed in as the command for $0
18:29  knoppix_____: and I don't know what they will be on
18:29  e36freak: write it in a compiled language
18:29  e36freak: tada!
18:29  XiaolinDraconis: i will bookmark the guide
18:29  greycat: Geralt: ESC *  in vi mode.  Dunno about emacs mode.
18:29  XiaolinDraconis: but im not getting this serious about it
18:29  knoppix_____: yes but if my name is part of the path for the check file, and I make it known, then they could tell
18:29  krzee: cool, when i bookmark it only saves the link, you must have a system where bookmarking injects the info!
18:30  XiaolinDraconis: maybe if i were gonna make a career out of it but other than that it feels like learning trig
18:30  Geralt: greycat: I tried vi mode once but it's too strange, especially when you can't see if you're in command or editing mode :(
18:30  e36freak: everything should have vi commands
18:30  tonyyarusso: trig was one of the most useful bits of math I ever learned.
18:30  e36freak: everythnig.
18:30  knoppix_____: that is why the md5sum would be done against a remote location he couldn't access
18:31  greycat: *plonk*
18:31  nDuff: knoppix_____, he could just modify the code to skip the md5sum check
18:31  nDuff: knoppix_____, seriously, it's hopeless -- give it up.
18:31 * greycat gives up on the knoppix_* show.
18:31  krzee: hey, screw it, if knoppix_____ is happy with his solution, let him do it
18:31  knoppix_____: yes but if everyone knew I was doing that, it would help
18:31  XiaolinDraconis: hehe no info injection tools but im sure that later it will come in handy on a different script
18:31  greycat: The first season was OK, but then it jumped the shark.
18:31  knoppix_____: they would at least know they weren't using my version
18:32  XiaolinDraconis: i just know i am not attempting to learn array's right now
18:32  greycat: XiaolinDraconis: the first several pages of the guide are simpler than arrays.
18:32  knoppix_____: it wouldn
18:32  greycat: Arrays are not introduced until the second half.
18:32  Geralt: greycat: is the function called shell-expand-line that's bound to ESC * in vi modes
18:32  Geralt: ?
18:33  knoppix_____: t be surefire, but if changed to that extent it would clearly be intentional sabotage and not just a naive error
18:33  XiaolinDraconis: right ill definitely be doing some reading later
18:33  greycat: Dunno.  bind -p says that's "unbound", but ESC * works.
18:33  greycat: ESC * is what I learned when I was learning ksh back in the 1990s, and it works in bash too, so yay.
18:33  XiaolinDraconis: right now i think my problem will be easier solved my moving the command from variable to the line
18:33  XiaolinDraconis: which ive nop clue why i havent done it already
18:34  knoppix_____: I know there is no perfect solution, but this one might be workable
18:35  Geralt: greycat: yeah I just checked, it's not the same shell-expand-line does not expand globs
18:37  e36freak: tail -n 0 -f file will show only new lines from that point on?
18:38  greycat: http://www.opengroup.org/onlinepubs/9699919799/utilities/tail.html
18:38  knoppix_____: now for all of you chortling away at the stupidity I just exhibited
18:38  knoppix_____: to run an md5sum on the right file I would have to find the right file, hence circular
18:38  greycat: -n 0 appears to be undefined.
18:38  e36freak: so yes, was just wondering if -n 0 did what i assumed it would do
18:39  e36freak: wanted to pipe that to a while read loop and run a check on new lines
18:39  knoppix_____: but I could have it check all such files and only run the one that had the rigtht md5sum
18:39  greycat: If it does ANYTHING at all, it is an extension defined by your vendor.
18:39  Geralt: greycat: it's glob-expand-word and in emacs mode bound to C-x * :-)
18:40  Geralt: no, it's not the same as in vi, it works only on the word left of the cursor
18:40  Geralt: but similar
18:43 --- Weust` is now known as Weust`afk
18:44  e36freak: greycat: in case you were wondering, it appears to work
18:44  e36freak: at least with GNU tail
18:45  pabst: does anyone know how ot get sudo to preserve my PATH? i've tried env PATH=$PATH and commenting out Defaults env_reset in the sudoers file, to no avail
18:46  greycat: Defaults:greg !env_reset
18:46  greycat: That works for me.
18:46  pabst: ok let me try
18:47  pabst: awesome! thanks!
18:54  XiaolinDraconis: can someone tell me what failed this time? http://pastebin.com/KeV29t1Q
18:55  XiaolinDraconis: and i know my indentations are fail but it helps me see clearly what i have in each section
18:55  nDuff: !exact > XiaolinDraconis
18:55  greybot: XiaolinDraconis: Please tell us EXACTLY what you typed, and EXACTLY what the error is.
18:55  e36freak: do you know how to use my user's ~/.vimrc for sudo?
18:55  nDuff: XiaolinDraconis, ...what's the output when you run it? How do you _know_ it failed?
18:56  geirha: e36freak: copy it to /root/ ?
18:56  mhahe: hey guys got a vim problem but it is also bash related, when using external commands in vim such as !ls i have an alias defined in ~/.bash_profile which is ls='ls -G' and its not being used. any thoughts?
18:56  geirha: or symlink, whichever you prefer
18:56  grop: XiaolinDraconis, don't you have to put the gconf modification *before* executing the script?
18:56  greycat: mhahe: aliases must be defined in .bashrc NOT IN .bash_profile
18:56  greycat: !dotfiles > mhahe
18:56  greybot: mhahe: http://mywiki.wooledge.org/DotFiles or - for a technical explanation - the INVOCATION section of man bash.
18:56  erUSUL: mhahe: ~/.bash_profile is only use in login shells you should put alias in bashrc
18:57  XiaolinDraconis: i dont think it matters which comes first
18:57  e36freak: geirha: mult-user server, not an option
18:57  grop: XiaolinDraconis, it matters.
18:57  mhahe: if i dont have .bashrc do i create one?
18:57  greycat: yes.
18:57  XiaolinDraconis: how?
18:57  mhahe: thanks
18:57  XiaolinDraconis: i want both to happen in no particular order
18:57  e36freak: geirha: thats how i have on my personal pc, but i was wondering if there was a better way so i dont change it for anyone else with root access
18:57  geirha: e36freak: Specify the vimrc with option then
18:58  XiaolinDraconis: i clicked the file so i didnt see an output
18:58  e36freak: kk
18:58  greycat: clicked??!?
18:58  greycat: BWAhahahahaha....
18:58  grop: XiaolinDraconis, if I clearly understand, you want to put the Matrix screensaver as wallpaper. So you have to set desktop to false, and *then* execute the script.
18:58  greycat: Please, please, please stop making more Ubuntu users, god.
18:58  XiaolinDraconis: wallpaper works regardless if icons are there or not
18:59  XiaolinDraconis: problem with that is that i cant see em but still click em
18:59  greycat: XiaolinDraconis: if you fucking with GNOME SHIT, then go bother a GNOME CHANNEL.
18:59  greycat: Or kde or whatever the fuck you are using.
18:59  obiwahn: hi i want to echo a string ending with fobar !" now i could use ' ... !' but escaping like "...\!" does not work .. what am i doing wrong?
18:59  XiaolinDraconis: its bash shit im fucking with
18:59  erUSUL: greycat: i think it shoud be « Dear God: Please, please, please stop making more Ubuntu users. yours truly greycat. » :P
18:59  grop: !set > obiwahn
18:59  marvin: grop:
18:59  greybot: obiwahn: help set <Enter> http://bash-hackers.org/wiki/doku.php?id=commands:builtin:set # set -evx is useful for debugging, set +H for playing in terminal.
18:59  XiaolinDraconis: gnome may be involved but its not the problem
19:00  erUSUL: obiwahn: disable history expansion ?
19:00  erUSUL: !histespansion
19:00  greycat: !!
19:00  greybot: event not found -- These errors only happen in *interactive* shells when you run commands with ! in them with history expansion enabled. Run set +o histexpand to disable it, and put it in your ~/.bashrc to disable it in future shell sessions, too. Regardless, it won't affect scripts.
19:01  XiaolinDraconis: i ran in terminal with no errors
19:01  XiaolinDraconis: my problem is that seems to skip commands
19:02  XiaolinDraconis: seems to run the show desktop false command no matter if if is true or not
19:03  Geralt: Why are trailing newlines stripped from the output returned inside $(), e.g. foo="$(echo -e '->\n')"; echo -n "$foo"
19:03  greycat: Because $() strips all trailing newlines.
19:04  greycat: Documented.  Historical.
19:04  greycat: !slurp
19:04  greybot: To read a file's contents into a variable: var=$(< file) However, this strips trailing newlines. To work around that: var=$(cat file; printf x) var=${var%x}
19:06  XiaolinDraconis: so just in case for some odd reason the gconf needs to run first im gonna try putting it first
19:06  XiaolinDraconis: ....PFFFFT...how did that make a friggin difference?
19:07  grop: # set +H; echo "Hello World!" # obiwahn
19:07  evalbot: grop: Hello World!
19:07  XiaolinDraconis: grop, how did that make any difference?
19:07  XiaolinDraconis: they were two separate commands
19:08  Geralt: greycat: ok, thanks. Is there some way to get that into PS1?
19:09  greycat: Get *what* into PS1?
19:09  XiaolinDraconis: thats annoying the shit outta me
19:09  grop: XiaolinDraconis, http://mywiki.wooledge.org/BashPitfalls#echo_.22Hello_World.21.22
19:10  grop: Hmm
19:10  grop: Not you…
19:10  grop: obiwahn, http://mywiki.wooledge.org/BashPitfalls#echo_.22Hello_World.21.22
19:10  XiaolinDraconis: it still didnt entirely work
19:10  XiaolinDraconis: toggle on works fine but toggle off fails
19:11  XiaolinDraconis: ok nvm it does work
19:11  Geralt: greycat: I want the exit code in a line above the prompt if the command failed, therefore I'm calling a function at the beginning of PS1, like so PS1="$(exit_status)...." and that function checks $? and returns the output of echo -e "[cmd failed: $err]\n" as a quick workaround I just found that appending " ^H" after the newline keeps the newline
19:12  greycat: PS1='$?\nwhatever'
19:12  XiaolinDraconis: how did the order of two entirely separate  commands make a difference
19:22  kotique: Hi. I forgot the inline here doc again
19:22  kotique: myvar=<<_BLOCK
19:22  kotique: test
19:22  kotique: _BLOCK
19:22  trash: myvar="foo
19:22  trash: bar
19:22  trash: moo"
19:23  trash: No here doc needed there.
19:23  kotique: but what if I want it? please.
19:23  trash: You don't NEED it there.
19:23  trash: !b1
19:23  greybot: bashphorism 1: the questioner's first description of the problem/question will be misleading.
19:24  kotique: when do I need it?
19:24  trash: When redirecting several manually written lines to stdin to something.
19:25  trash: If you want to assign a variable, then just assign it.
19:30  kotique: chickenbutt!
19:31  hegemoOn: moin
19:39  mhahe: abit confused here, bash accepts regular expressions and extended RE, globs.. thats what im reading. but grep doesnt conform with this. i.e: echo *    displays all directory content, but ls | grep * doesnt?
19:40  pgas: mhahe: you are indeed confused
19:40  greycat: ls | grep *   is expanded to    ls | grep file1 file2 file3 file4 file5 ...
19:41  pgas: echo * <- this is not an extended RE, it's a glob
19:41  greycat: which means the output of ls is completely ignored, and grep will open file2, file3, file4, ... and look for lines containing file1, interpreted as a BRE.
19:41  pgas: grep  '.*' <- this is a basic RE
19:42  mhahe: thanks
19:42  pgas: grep -E '.*' <- this is a and extended RE, like the basic RE interpreted by grep, not bash
19:42  geirha: Also, there's really never any excuse to grep ls output
19:43  greycat: Or to do *any* kind of processing involving ls output.
19:51  \malex\: i can bed over backwards enough to justify using ls
19:52 * nDuff can do that in some cases where GNU stat isn't available, but not otherwise
19:53  greycat: ls as a metadata extraction tool can *sometimes* be justified, but never as a filename iteration tool.
19:56 --- Will|override is now known as Will|
20:08  lhunath: just do it one file at a time
20:10  lhunath: greycat: did you notice my earlier comments addressed to greybot?  not sure whether you read those logs.
20:10  greycat: Not normally.
20:10  greycat: And it's not on the screen at the moment, so I probably didn't see it.
20:12  lhunath: I actually think that "huge redundant blob of text to the start of ProcessManagement" is really informative and was very much missing on that page.
20:12  lhunath: would you prefer it gets moved into the Guide and references from the PM page?
20:13  lhunath: OTOH; it makes more sense for the PM page to explain about PM rather than be an extension to the FAQ.  Most people that go there don't understand the first thing about PM and NEED that Basic education.
20:13  greycat: Ah, that... well, I haven't looked at it in a couple weeks.
20:13  greycat: But someone in here the other day definitely found that it got in the way of the answer he was looking for (pgrep, which is in the very first question and used to be right at the top).
20:17  jihedamine: Using a makefile, how can I make the removal of some files optional so that make clean doesn't generate an error if it doesn't find them ?
20:17  geirha: !make
20:17  greybot: make is not bash. It has its own syntax that looks a bit like bash, but it isn't. Ask in ##workingset or ##c and read http://www.gnu.org/software/make/manual/ or the help documents of your version of make
20:20  greycat: It's been my experience that the people who are sent to ProcessManagement understand what a PID is, and what a parent process is, but they don't have any wisdom in how to *do* things.
20:20  greycat: They've only seen the utter shit that Linux newbies have been recirculating (pidof, blah) over and over for 15 years.
20:23  patrickw: Is there an faq or good site that explains exactly how PM works on a system level?
20:23  greycat: Did you read the ProcessManagement page?
20:24  greycat: There's an intro that lhunath wrote, then a bunch of questions and answers, then a theoretical discussion that I wrote.
20:24  nDuff: "on a system level" is pretty vague -- you mean what syscalls the shell itself makes? what those syscalls do within the kernel?
20:24  greycat: "magic"
20:25  patrickw: I guess I haven't.  And yeah, that's what I mean.  Although I'd start with what and how the signals get thrown around.
20:25  greycat: It doesn't really cover signals, no.
20:25  patrickw: !pm
20:25  greybot: http://mywiki.wooledge.org/ProcessManagement
20:27  patrickw: Ok, yeah I have read that.  But I was wondering more along the lines of what exactly happens when I press ^Z or execute the fg or bg commands.
20:27  greycat: That is job control.
20:27  greycat: http://mywiki.wooledge.org/BashGuide/JobControl
20:28  greycat: (Most of that page is just dumped straight from the manual, though.)
20:39 --- illusionz is now known as impreziv
--- Log closed Wed Dec 22 21:38:56 2010
--- Log opened Wed Dec 22 21:39:17 2010
21:39 --- Users 571 nicks [0 ops, 0 halfops, 0 voices, 571 normal]
21:40 --- Channel #bash was synced in 101 seconds
21:41  ritztech: is it possible to somehow use grep -v in watch
21:41  ritztech: watch links -dump http://10.133.130.139/status.htm  | grep -v
21:42  greycat: sounds like you want to watch sh -c 'foo | bar'
21:42  greycat: although I think some implementations of watch may react badly to a quoted argument with whitespace in it
21:42  greycat: if that is the case for you, you may have to put the pipeline into a script, and watch that script
21:42  ritztech: hmmm i wanted to just remove one line
21:43  ritztech: links -dump http://10.133.130.139/opstatus.htm | grep -v Ref | watch
21:43  ritztech: didnt work dam
21:43  ritztech: haha
21:43  willdye: ritztech: You might find 'unbuffer' helpful.  http://linux.die.net/man/1/unbuffer
--- Log closed Wed Dec 22 21:47:27 2010
--- Log opened Wed Dec 22 22:02:55 2010
22:02 --- Users 566 nicks [0 ops, 0 halfops, 0 voices, 566 normal]
22:02 --- Server: [verne.freenode.net] [freenode-info] if you're at a conference and other people are having trouble connecting, please mention it to staff: http://freenode.net/faq.shtml#gettinghelp
22:04 --- Channel #bash was synced in 101 seconds
22:08  geirha: watch() { while sleep 2; do "$@" | head -n "$(tput rows)"; done }
22:09  greycat: needs a ; and a 2>&1
22:09  greycat: and I'd use ${LINES:-$(tput rows)}
22:14  geirha: Mh, right. Forgot about LINES and COLUMNS
--- Log closed Wed Dec 22 22:28:22 2010
--- Log opened Wed Dec 22 22:33:47 2010
22:33 --- Users 560 nicks [0 ops, 0 halfops, 0 voices, 560 normal]
22:34  Acedip: in the code
22:34  Acedip: http://pastie.org/1399071
22:34  Acedip: the $a is not able to assign
22:35  Acedip: infact the find is not working.
22:35 --- Channel #bash was synced in 100 seconds
22:36  erUSUL: Acedip: line 6 has a ) at the end of the line. what for?
22:36  erUSUL: !`
22:36  greybot: The backquote (`) is used in the old-style command substitution, e.g. foo=`command`. This syntax is deprecated in favor of foo=$(command). Backslash handling inside $() is less surprising, and $() is easier to nest. See http://mywiki.wooledge.org/BashFAQ/082
22:36  geirha: Acedip: Looks like you've copy pasted some random bytes from random scripts.
22:36  lhunath: oh my.
22:37  Acedip: erUSUL, ah, that is by mistake, its not in the code though
22:37  Acedip: just a typo
22:37  lhunath: Acedip: delete everything.  state what you want to do.  In English.
22:38  Acedip: lhunath, well, i've a file which contains a list of file. i want to search those list of files in a dir and move them from that dir to some other dir
22:38  Acedip: s/list of file/list of files
22:38  lhunath: while read file; do mv "$file" /other/dir/; done < file-with-list-of-files
22:38  nDuff: Acedip, by "search those list of files" you mean "search for any files in that list"?
22:39  lhunath: !faq 1 > Acedip
22:39  greybot: Acedip: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
22:39  geirha: s/read/read -r/
22:39  lhunath: you need to find the file in a hierarchy of directories?
22:39  lhunath: given only the file's name?
22:39  lhunath: what if multiple files match?
22:40  Acedip: lhunath, ya, the files are in hierarchy
22:40  lhunath: move em all?
22:40  Acedip: yupp
22:40  greycat: It sounded like he had relative pathnames, but now I realize that may be wrong.
22:40  greycat: Acedip: do you have "foo/bar/baz.txt" or do you just have "baz.txt" and no idea where it is exactly?
22:40  greycat: Acedip: or do you have "/original/foo/bar/baz.txt"?
22:40  lhunath: while read file; do find root/of/source/files -name "$file" -exec mv {} /other/dir/ \;; done < file-with-list-of-files
22:40  Acedip: grepper, exactly, its just a list of file names and not with their path
22:41  Acedip: no idea where they are
22:41  geirha: Why don't you know their path?
22:42  greycat: I was afraid to ask.
22:44  ritztech: anyone ever dealt with like a one liner CGI login via a webpage http://10.10.10.10/status.cgi?
22:44  TripMine: when using screen, how do I have my exported variables load in a new shell?
22:44  TripMine: I tried export FOO=bar
22:44  greycat: Each window you create inside screen inherits the env vars from screen.
22:44  lhunath: exported WHERE?
22:44  TripMine: then switched to another screen
22:44  SiegeX: how do you translate this --> find ./ -type f | xargs sed -i 's/string1/string2/g'   to get rid of xargs and instead just use -exec ... +? Do I need to call bash -c 'sed ...' ?
22:45  lhunath: environment variables are NOT a "global" thing.
22:45  greycat: Each window inside screen is a *separate child*.  They do not share.
22:45  TripMine: bummer
22:45  erUSUL: !faq replace > SiegeX
22:45  greybot: SiegeX: http://mywiki.wooledge.org/BashFAQ/021 -- How can I replace a string with another string in all files?
22:45  greycat: TripMine: http://mywiki.wooledge.org/ProcessManagement#theory
22:45  lhunath: you export something on your CURRENT process.  any process that your CURRENT process creates, will inherit those variables.
22:46  Acedip: lhunath, the command which you give seem to be running, which it finishes, what did {} mean in that command?
22:46  lhunath: if you export them in shell A in screen 1, and create a new screen, that new shell isn't gonna inherit from shell A.
22:46  TripMine: I see. that is something that needs to happen before I start screen then
22:46  Acedip: s/which/while
22:46  lhunath: TripMine: correct.
22:46  erUSUL: !find > Acedip
22:46  greybot: Acedip: http://mywiki.wooledge.org/UsingFind
22:46  greycat: SiegeX: -exec perl -pi -e 's/.../g' {} +
22:46  TripMine: Thank you all :)
22:46  lhunath: TripMine: so that screen has those env vars.
22:47  lhunath: Acedip: it means "put the path to the file you found here when you run the command".
22:48  Acedip: lhunath, you mean, it expanded $file?
22:48  lhunath: nope.
22:48  Acedip: lhunath, FYI, its running very slow, only one file moved till yet.
22:49  lhunath: Acedip: 'find' is a program that browses through your files.  for each file it sees in your directory tree, it runs the predicates you give it.
22:49  SiegeX: greycat: Interesting. And is perl recommended because using find's '+' terminator doesn't really work when the command you want to optimize is inside bash -c?
22:49  greycat: If the hierarchy is huge, and it has to search the whole thing for *each* file, then it could take a while.
22:49  greycat: !sed-i > SiegeX
22:49  greybot: SiegeX: A common request is how to write to the same file as the one you read. "sed -i" is a potential solution, but keep in mind the -i flag to sed is nonstandard and not portable. If in doubt, use a temp file. See !faq 21 and ask me about ed.
22:49  greycat: perl 5 is FAR more standardized than GNU sed.
22:49  SiegeX: ya, I don't care about the gnuism
22:50  lhunath: Acedip: so for each file in your tree, it first checks the -name predicate which checks whether the file it found has the name "$file".  if that passes, it runs the -exec command.
22:50  Acedip: hm.
22:50  lhunath: Acedip: there, it puts the pathname to the current file it's browsed to in {}'s stead.
22:51  lhunath: sed -i is often the answer that should be ed or ex.
22:52  greycat: I still prefer perl -pi -e
22:52  Acedip: lhunath, and if it doesnt find the file in the dir tree then it skips to the line in the input file
22:54  hacosta: how would i check if a variable is set or not if i want to use set -u
22:54  greycat: !faq defined
22:54  greybot: http://mywiki.wooledge.org/BashFAQ/083 -- How do I determine whether a variable is already defined?  Or a function?
22:54  hacosta: thanks
22:56  hacosta: hmm that doesn't take care of the 'ser -u' issue
22:57  SiegeX: my perl manpage is pretty shotty, I know the -e executes the next statement inline, and I'm guessing -i is the same as the -i for sed, what does the -p do?
22:58  go|dfish: SiegeX: perldoc perlrun
23:00  SiegeX: thanks, that's pretty nifty, a whole flag to act like sed
23:03  KaiForce: this is for sh on a VMWare ESXi host (busybox I think).  Is there a command to sit and wait for input (sort of like the DOS "pause")?  I'm running a series of SCP tasks and I don't want it to try to run the next one in line until I'm there to enter the password
23:04  SiegeX: as an acedemic question, why does this work as expected --> find . -type f -exec bash -c "sed 's/foo/bar/g' {}" \;
23:04  SiegeX: ...but if I instead terminate find with '+' I get odd Permission Denied errors
23:06  SiegeX: hmm, all my files in that dir are chmod 644, so I guess i need to find what user bash is running as when I do that and using -u to remedy it.
23:08  SiegeX: im still going to use the suggested perl line, so you don't have to worry about helping me write "bad code" if you figure out why terminating with '+' isn't working.
23:09  SiegeX: I just don't like knowing why something is not working as expected
23:14  geirha: SiegeX: It doesn't work as expected with \; either.
23:15  KaiForce: (answering self)   'read -p "Press Enter" nothing'
23:15  KaiForce: googling the pause command +/bin/sh did the trick
23:15  geirha: SiegeX: You are embeding filenames inside a script, which is a bad idea.
23:15  SiegeX: geirha: perhaps my expectations are lower than yours then, cause at the very least I get output and said output does have the right replacements
23:16  geirha: SiegeX: It works for simple test cases, but it fails if the file contains whitespace or quotes or glob characters
23:16  SiegeX: i see
23:16  geirha: The proper way is to pass the files as arguments to the script, instead of embeding
23:17  SiegeX: that's right, but there is a caveat where you need the first arg to be some placeholder, right?
23:17  SiegeX: I forget the correct syntax for that
23:17  geirha: -exec bash -c 'sed "s/foo/bar/" "$@"' _ {} +
23:17  SiegeX: that's the one
23:17  SiegeX: thanks
23:19  Acedip: lhunath, seems like it wont get over anytime soon pertaining to the number of files to be searched and moved. so will goto sleep now. thankyou :)
23:21  bulletxt: hi, how can I read line 5 of a txt file? thanks
23:22  geirha: !faq n'th
23:22  greybot: http://mywiki.wooledge.org/BashFAQ/011 -- How can I print the n'th line of a file?
23:23  bulletxt: thanks a lot geirha
--- Log closed Wed Dec 22 23:27:40 2010
--- Log opened Wed Dec 22 23:33:10 2010
23:33 --- Users 549 nicks [0 ops, 0 halfops, 0 voices, 549 normal]
23:34 --- Channel #bash was synced in 99 seconds
23:44  i0nic: hi
23:51  sjohnson: i0nic: hi
23:52  sjohnson: Q:  my integer check for the last arg [[ ${@: -1} = *[0-9]* ]] only works on the last arg.  is there a way to try to find the last int instead from the parameters?  ie, look from the end to find the first integer.
23:58  sjohnson: i wonder where Riviera went
23:59  geirha: for ((i=$#; i > 0; i--)); do [[ ${@:i:1} != *[!0-9]* ]] && break; done
--- Log closed Thu Dec 23 00:00:36 2010
