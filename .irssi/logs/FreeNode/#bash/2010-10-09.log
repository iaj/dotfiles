--- Log opened Sat Oct 09 11:57:30 2010
--- Log closed Sat Oct 09 12:02:31 2010
--- Log opened Sat Oct 09 16:51:22 2010
16:51 --- Users 526 nicks [0 ops, 0 halfops, 0 voices, 526 normal]
16:52 --- Channel #bash was synced in 71 seconds
16:59  mar77i: lwolf: this one is used by bash http://code.toofishes.net/pacman/doc/vercmp_8c_source.html
17:00  mar77i: f*ck, by pacman, I must learn how to giraffe http://xkcd.com/604/
17:01  lwolf: mar77i, what do you mean "used by bash" ?
17:03  hemanth: mar77i, if that were to be SMBS... :D
17:04  mar77i: lwolf: bash was a giraffe. I wanted to say, pacman, which is a package manager for the distro I mainly use :)
17:04  lwolf: ah ok
17:05  lwolf: for my personal culture, does giraffe come from xkcd comics, or xkcd comics illustrated giraffe ?
17:06  mar77i: lwolf: I think you're the first that thinks of the second. but there's space for new memes on the net iirc.
17:07  lwolf: ok, so giraffe come from xkcd...
17:09  mar77i: ...who knows, maybe that I said "second" was also a giraffe?
--- Log closed Sat Oct 09 19:08:40 2010
--- Log opened Sat Oct 09 19:09:04 2010
19:09 --- Users 518 nicks [0 ops, 0 halfops, 0 voices, 518 normal]
19:10 --- Channel #bash was synced in 66 seconds
19:12  lennart__: forgottenwizard: I don't see how it will help my problem? Seems like it's for shortening URL's, I have a huge html string that I need to split to multiple lines
19:13  forgottenwizard: Well, if the length is a problem, a shortening service would help reduce/remove that problem. If you need to split it, a simple ' \' will allow you to continue on the next line. However, if you need to do this automatically
19:14  forgottenwizard: I'm sure there is a program that can do something similar
19:16  erUSUL: lennart__: what is a "html line" ?
19:16  lennart__: Since i'm trying to write a bash script, it would be great if I could do some fancy parsing and splitting
19:17  erUSUL: !html
19:17  greybot: You can't realistically parse tag-based markup languages like HTML and XML using Bash or utilities such as grep, sed or cut. If you just want to dump/render HTML, see (links|links2|lynx|w3m) -dump, html2text, vilistextum. For parsing out pieces of data, see tidy+(xmlstarlet|xmlgawk|xpath|xml2), or learn xslt. Ask #xml and #html for more help. See http://www.codinghorror.com/blog/archives/001311.html
19:18  lennart__: erUSUL: like it sounds
19:18  forgottenwizard: lennart__: Is this a URL you are trying to handle?
19:18  lennart__: nope it's HTML code
19:19  erUSUL: # echo thisnottoolongbutstill | fold -w8
19:19  evalbot: erUSUL: bash: fold: command not found
19:19  evalbot: erUSUL: bash: echo: write error: Broken pipe
19:19  erUSUL: 4# echo thisnottoolongbutstill | fold -w8
19:19  shbot: erUSUL: bash4: fold: command not found
19:19  erUSUL: damm bot ;P
19:19  forgottenwizard: #whereis fold
19:19  forgottenwizard: # whereis fold
19:19  evalbot: forgottenwizard: bash: whereis: command not found
19:20  forgottenwizard: Wow. Doesn't have whereis
19:20  dagni: # which whereis
19:20  evalbot: dagni: bash: which: command not found
19:20  dagni: rofl'n'lol
19:20  dagni: # echo $PATH
19:20  erUSUL: !which
19:20  greybot: which(1) is an external program used to search PATH for an executable. It behaves differently on different systems and you can't rely on a useful exit code; use ''type -P'' instead. See http://mywiki.wooledge.org/BashFAQ/081
19:20  evalbot: dagni: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
19:20  forgottenwizard: $ which busybox
19:20  forgottenwizard: # which busybox
19:20  evalbot: forgottenwizard: bash: which: command not found
19:20  dagni: 19:20 < evalbot> dagni: bash: which: command not found
19:20  dagni: are you blind, forgottenwizard ?
19:21  forgottenwizard: dagni: Was looking at another screen
19:21  forgottenwizard: Doesn't seem like busybox has fold anyways
19:21  dagni: # ls
19:21  evalbot: dagni: no output
19:22 --- HarryS is now known as K-Lined
19:23 --- K-Lined is now known as HarryS
19:23  dagni: # echo 'hello everybody, the dagni is back with even more kewl ideas!'
19:23  evalbot: dagni: hello everybody, the dagni is back with even more kewl ideas!
19:23  dagni: ;-)
19:28  pragma_: that is very impressive, dagni
19:28  dagni: thanks....
19:29  dagni: how are you, pragma
19:38  dagni: # echo bla>bla;cat bla
19:38  evalbot: dagni: bla
19:38  dagni: # file bla
19:38  evalbot: dagni: bash: file: command not found
19:38  dagni: # cat bla
19:38  evalbot: dagni: cat: bla: No such file or directory
19:39  forgottenwizard: # echo $PATH
19:39  evalbot: forgottenwizard: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
19:39  forgottenwizard: # ls /bin
19:39  evalbot: forgottenwizard: awk	  cmp	   env	       kill	   nano      strace    uname
19:39  evalbot: forgottenwizard: basename  cp	   expr        ksh	   nl	     strings   uncompress
19:39  evalbot: forgottenwizard: etc... ( http://pastebin.com/miXftZLt )
19:39  forgottenwizard: Oooo, nano...
19:39  dagni: # nano
19:39  evalbot: dagni: Error opening terminal: linux.
19:39  erUSUL: plase play with the bot in private or in #evalbot
19:39  dagni: # export TERM=vt100;nano
19:39  evalbot: dagni: Error opening terminal: vt100.
19:40  dagni: # export TERM=xterm;nano
19:40  evalbot: dagni: Error opening terminal: xterm.
19:40  forgottenwizard: dagni: try TERM=xterm nano
19:40  dagni: # export TERM=xterm nano
19:40  evalbot: dagni: no output
19:40  dagni: ;-)
19:40  forgottenwizard: No, no export
19:40  forgottenwizard: just TERM=xterm
19:40  dagni: # TERM=xterm nano
19:40  evalbot: dagni: Error opening terminal: xterm.
19:40  forgottenwizard: :)
19:40  dagni: :P
19:40  AxleLonghorn: I have a question about an alias that's not working
19:41  AxleLonghorn: running archlinux
19:41  dagni: AxleLonghorn: go ahead, ask your question
19:41  AxleLonghorn: alias pacman='pacman $@ | less'
19:41  AxleLonghorn: I'd like it so that everytime I run the program, it's output is run through less
19:42  erUSUL: !alias > AxleLonghorn
19:42  greybot: AxleLonghorn: If you have to ask, use a function instead: myfunc() { foo "$@" | bar; }
19:42  forgottenwizard: My understanding of aliases is limited, but I think something that complex needs a function
19:42  jordanm: !$@
19:42  greybot: The difference between $@ and $*: Unquoted, none at all: both equal $1 $2 .... With double quotes, "$@" is "$1" "$2" ..., while "$*" is expanded as the single argument "$1c$2c..." (where c is the first character of IFS). You almost always want "$@". The same goes for arrays: "${myarray[@]}"
--- Log closed Sat Oct 09 19:50:56 2010
--- Log opened Sat Oct 09 19:51:19 2010
19:51 --- Users 522 nicks [0 ops, 0 halfops, 0 voices, 522 normal]
19:51  hemanth: !credits
19:51  hemanth: he he :)
19:51  dagni: ;>
19:52  hemanth: !hi
19:52  dagni: trying to get drunk
19:52  dagni: im affraid im immune to alcohol
19:52  dagni: ;P
19:52  hemanth: with bash
19:52  hemanth: lol
19:52 --- Channel #bash was synced in 64 seconds
19:52  forgottenwizard: dagni: yes 'drink' > /dev/mouth?
19:53  dagni: i think i would need >>
19:53  dagni: ;/
19:53  dagni: so i mix beer with vodka
19:53  hemanth: while:
19:53  dagni: and .. nothing so far ;)
19:53  dropdrive: When I use == inside [[ ]], is the right hand side treated as a pattern or not?  The bash manual offers contradicting opinions.
19:53  dagni: while [ -true ]; get drunk :P
19:53  hemanth: while 1:
19:53  dropdrive: I just want to test if two strings are exactly equal.
19:54  forgottenwizard: dropdrive: Try -eq
19:54  dagni: dropdrive: or [ "string1" = "string2" ]
19:54  dropdrive: forgottenwizard: I thought -eq was for numbers?
19:54  forgottenwizard: I believe it works for strings. I tend to use == for numbers ($(()))
19:54  hemanth: dropdrive, yes they are for number
19:54  dagni: yea -eq is for numbers
19:55  dagni: you cant use it for strings
19:55  dropdrive: dagni: So is = the same as == ?
19:55  hemanth: STRING1 = STRING2 True if the strings are equal.
19:55  dagni: but quote it
19:55  dropdrive: dagni: okay.
19:55  hemanth: ![[ > dropdrive
19:55  greybot: dropdrive: [[ is a bash keyword similar to (but more powerful than) the [ command. See <http://mywiki.wooledge.org/BashFAQ/031> and <http://mywiki.wooledge.org/BashGuide/TestsAndConditionals>. Unless you're writing for POSIX sh, we recommend [[.
19:56  dagni: *burp*
19:56  hemanth: :P
19:56 * dagni ...:)
19:57  hemanth: dagni, with u begin drunk so much also, you can say -eq is for numbers
19:57  forgottenwizard: !-eq
19:57  dagni: -eq is for numbes, i think i said it already? :)
19:57  hemanth: dagni, kool
19:57  dropdrive: Here's the source of confusion (from bash(1)):  [A] "When the == and != operators are used, the string to  the  right of the operator is considered a pattern"  and [B] "string1 == string2    True if the strings are equal."
19:58  dagni: -eq = equal to, -lt = less than, -gt = greater than
19:58  dagni: and with '!' prefix, you negate it
19:58  hemanth: dagni, good now go AFK :)
19:58  dagni: hell no, please,  iwant to stay ;D
19:59  hemanth: ![ > dropdrive
19:59  forgottenwizard: Nothing quite like drunken scripting
19:59  greybot: dropdrive: [ is NOT part of the `if' syntax. It's a normal, ordinary COMMAND. The `if' just checks its exit status. See `help test', http://mywiki.wooledge.org/BashGuide/TestsAndConditionals , and http://partmaps.org/era/unix/award-example-backticks.html
20:00  hemanth: forgottenwizard, one might end up with sudo rm -rf /
20:00  sec^nd: hi
20:00  dagni: hi sec^nd
20:00  sec^nd: what is the best way to escape a variable with for use with sed ?
20:00  hemanth: sec^nd, #sed ?
20:00  forgottenwizard: hemanth: Lucky for me I don't have sudo installed :)
20:00  sec^nd: I want to remove text from a path but it might mess up with the regex
20:01  hemanth: forgottenwizard, lol
20:01  sec^nd: hemanth: this is more of a bash question
20:01  pgas: sec^nd: if you are only concerned by the / then just use s, , , instead of s/ / /
20:01  dagni: yea
20:01  sec^nd: pgas: some of the dir names may have ',' in them
20:01  sec^nd: thats the problem
20:02  pgas: then use @
20:02  dagni: you can switch from / to , in sed or even other than / and ,
20:02  sec^nd: pgas: can't they have @ in them too ?
20:02  pgas: can they?
20:02  sec^nd: yes
20:02  dagni: can.
20:02  dagni: you need to define it
20:02  pgas: can they have : ?
20:02  dagni: the separator
20:02  sec^nd: its unlikely but they can
20:02  sec^nd: pgas: yep
20:02  sec^nd: that would happen for email files
20:02  sec^nd: @ and : characters in filename :P
20:03  pgas: well, then you have to escape everything
20:03  sec^nd: *points to maildir etc*
20:03  hemanth: omg!
20:03  forgottenwizard: sec^nd: ~?
20:03  dagni: holy cow
20:03  dagni: did you just said omg :D
20:03  sec^nd: forgottenwizard: they can have those too
20:03  dagni: omg - for believerso
20:03  hemanth: is it generated by a M$ window$ machine?
20:03  dagni: oma - for atheists
20:03  pgas: put a \ before every char
20:04  sec^nd: hemanth: no a linux machine
20:04 --- muzer is now known as MuzerAway
20:04  forgottenwizard: Are you trying to avoid any possible character that could be in a filename?
20:04  sec^nd: pgas: I'm getting the value / path from the filesystem and its stored in the variable
20:04  sec^nd: forgottenwizard: yes
20:04  hemanth: dagni,oma?? for those who question the existence ?
20:04  sec^nd: or find a way to remove text from the filepath
20:05  erUSUL: !pe
20:05  greybot: Parameter Expansion is the expansion of a parameter: "$foo", "$1". You can use it to perform string operations: "${file%.mp3}", "${0##*/}". Remember to *always* quote them. See http://mywiki.wooledge.org/BashSheet#Parameter_Operations
20:05  dagni: hemanth: exactly ;P or something like that !
20:05  forgottenwizard: Only thing that might work would be a null char (\0 iirc), but good luck with that
20:05  hemanth: basename
20:05  pgas: sec^nd: no in the general case you have to escape everything, especially if you have no control on the filenames, using sed like this allows for code injection
20:05  sec^nd: hemanth: I need to get a relative path from an absolute path
20:05  hemanth: sec^nd, readlink??
20:06  sec^nd: thats why i'm using sed, I'm going to remove the front part of the path to make it absolute
20:06  hemanth: o! ok
20:06  hemanth: i over read it as symlink
20:06 * hemanth still wonders how on earth, his brain made him think about that
20:07  hemanth: dagni, placebo effect
20:07  pgas: (also I would probably have a look at what perl has to offer)
20:07  dagni: hemanth, men of few words are the best men
20:07  dagni: ;-)
20:07  sec^nd: pgas: I was hoping not to use perl for this :P
20:07  sec^nd: I want it to be purely bash
20:08  hemanth: dagni, men who have spoke a lot, have ruled the world :P
20:08  dagni: hemanth, that's not shakerspare !
20:08  hemanth: dagni,that's hemanth lol :D
20:08  dagni: lol
20:08  forgottenwizard: sec^nd: Sometimes you have to switch to another language for sanity's sake
20:09  erUSUL: sec^nd: sed is not bash either
20:09  e-future: hemanth: 'sudo rm -rf /' would not work but sudo 'rm -rf /*' would.
20:09  dagni: sorry
20:09  dagni: but you dont need the *
20:09  e-future: I tried it myself.
20:09  hemanth: e-future, yes sir, me getting drunk due to dagni
20:09  dagni: you tried rm -rf / and it didnt worked ?
20:09  e-future: Yeah.
20:09  dagni: and then you tried rm -rf /* and it worked ?
20:09 * forgottenwizard wonders who would try rm -rf /
20:09  dagni: bullzeye
20:10  e-future: Yup.
20:10  hemanth: :D
20:10  dagni: so you playd the russian e-roulette
20:10  dagni: ;)
20:10  dagni: it's in bash
20:10  dagni: cool game
20:10  dagni: ;)
20:10  forgottenwizard: Sounds like it might backfire
20:10  dagni: evalbot: ready ?
20:11  hemanth: dagni, ha? apt-get?
20:11  dagni: # [ $[ $RANDOM % 6 ] == 0 ] && rm -rf / || echo "You live"
20:11  evalbot: dagni: You live
20:11  dagni: your turn hemanth ;)
20:12  pgas: $[ is deprecated prefer $((
20:12  hemanth: dagni,nothing will happen, cos the VM gets killed but not evalbot  :D
20:12  dagni: # [ $(( $RANDOM % 6 )) == 0 ] && rm -rf / || echo "You live"
20:12  evalbot: dagni: You live
20:12  dagni: still lucky, pgas ;)
20:12  pgas: == is not standard in [ ] prefer =
20:12  hemanth: # sh ; echo $SHELL
20:12  evalbot: hemanth: no output within the time limit
20:12  hemanth: ;)
20:12  dagni: # [ $(( $RANDOM % 6 )) = 0 ] && rm -rf / || echo "You live"
20:12  evalbot: dagni: You live
20:12  dagni: yesus im still alive
20:12  dagni: noone break my luck so far ;)
20:13  forgottenwizard: Broken?
20:13  dagni: broken.
20:14  hemanth: unbreakable until it breaks
20:14  dagni: that was what dropdrive was asking about earlier iirc
20:14  dagni: the == vs =
20:14  dagni: i try it last time
20:14  dagni: # [ $(( $RANDOM % 6 )) = 0 ] && rm -rf / || echo "You live"
20:14  evalbot: dagni: rm: cannot remove root directory `/'
20:14  evalbot: dagni: You live
20:14  forgottenwizard: lol
20:14  dagni: i died :p
20:15  dagni: remember kids, hazard is bad
20:15  trash: dagni: Why would you use (( for random math but not for equasion math?
20:15  dagni: i just followed the pgas's sugestion
20:16  dagni: # id
20:16  evalbot: dagni: bash: id: command not found
20:16  trash: ((RANDOM%6)) && ..
20:16  dagni: # whoami
20:16  evalbot: dagni: root
20:16  trash: dagni: #evalbot
20:16  hemanth: #whereami
20:16  hemanth: # whereami
20:16  dagni: trash: i just finished
20:16  evalbot: hemanth: bash: whereami: command not found
20:16 --- MuzerAway is now known as muzer
20:17  dagni: with evalbot's root access i have less permissions than being regular user on regular system :D
20:17 --- Cain` is now known as Cain
20:17  dagni: trash: relax
20:17  hemanth: # echo $(($RANDOM%$RANDOM))
20:17  evalbot: hemanth: 22312
20:18  hemanth: dagni, you win a pony! if u can break evalbot
20:18  dagni: it's your room number ?
20:18  dagni: :D
20:19  dagni: yea i tried
20:19  dagni: i almost succeed
20:19  dagni: the owner of the bot admitted it
20:19  dagni: look:
20:19  dagni: # :(){ :|:& };:
20:19  evalbot: dagni: [1] 231
20:19  dagni: hm
20:19  hemanth: :P
20:20  dagni: he might actually fixed it
20:20  hemanth: fork bomb
20:20  dagni: but there was kernel dump
20:20  hemanth: old trick
20:20  dagni: oom
20:20  dagni: if the bot runs on machine with more ram
20:20  dagni: he would crash
20:20  dagni: but he somehow protected against it
20:20  dagni: ulimit is my guess
20:20  dagni: ;)
20:21  e-future: Limiting the number of processes allowed to open.
20:21  hemanth: a vm is triggered for each # command
20:21  dagni: e-future: yeah
20:21  selckin: just overflow the stack before you run out of ram
20:21  hemanth: # ulimit
20:21  evalbot: hemanth: unlimited
20:21  hemanth: dagni, saw that
20:22  sec^nd: solved in ##sed :D
20:22  dagni: # ulimit -a -H|grep unlimi
20:22  evalbot: dagni: core file size          (blocks, -c) unlimited
20:22  evalbot: dagni: data seg size           (kbytes, -d) unlimited
20:22  evalbot: dagni: etc... ( http://pastebin.com/azDLwBcc )
20:22  dagni: sec^nd: congrts
20:22  dagni: there are still ways to break this bot imho
20:23  iz0: I just ran that in os x
20:23  sec^nd: # umilit -a -H | grep unlimi | yes
20:23  iz0: now my computer is very slow
20:23  evalbot: sec^nd: bash: umilit: command not found
20:23  evalbot: sec^nd: y
20:23  evalbot: sec^nd: etc... ( http://pastebin.com/KR8r9VMU )
20:23  hemanth: dagni, i don think so, /me played with the source
20:23  sec^nd: ...
20:23  dagni: umilimit hahahha u got drunk sir
20:23  dagni: :D
20:23  skyl: howto descend into each 1st child of the present directory and run the same command (with one command)
20:23  dagni: hemanth: ;F
20:24  hemanth: dagni, sec^nd said  umilit not umilimit
20:24  dagni: hahahhahha
20:24  hemanth: dagni, you double drunk
20:24 * dagni break
20:24  erUSUL: skyl: for d in */; do (cd "$d" && command ); done
20:24  hemanth: dagni, u are making everyone virtually drunk here
20:24  taylanub: skyl: shall 'secret' dirs be included? e.g. .foo/
20:25  skyl: taylanub: no
20:26  taylanub: skyl: erUSUL gave the answer
20:26  skyl: taylanub: erUSUL thanks so much
20:26  erUSUL: no problem
20:27 * dagni back with 200ml of 40% vodka
20:27  dagni: wonder if this will work
20:27  dagni: ;)
20:28  hemanth: dagni, wish u luck
20:28  dagni: thanks, it will be needed
20:28  dagni: ;>~
--- Log closed Sat Oct 09 20:53:30 2010
--- Log opened Sat Oct 09 20:53:51 2010
20:53 --- Users 524 nicks [0 ops, 0 halfops, 0 voices, 524 normal]
20:54 --- Channel #bash was synced in 65 seconds
20:56  dagni: geirha: are you online ?
20:56  geirha: I might be ...
20:56  hemanth: :D
20:56  dagni: ;O
20:57  dagni: geirha: hemanth asks who's the oldest here, and i thought you might know that..
20:57  dagni: i mean who is here for since beginning of this channel ;s
20:57  hemanth: what are the odds that geirha will know it, there are 524 guys out here :)
20:57  dagni: and sorry for disturbing
20:57  dagni: ;f
20:57  dagni: well
20:57  dagni: he's most active most of the time
20:58  dagni: and most skilled in my eyes ;P
20:58  dagni: if im wrong
20:58  geirha: That I don't know. I think greycat might be the regular who's been here the longest. I think the guy who started this channel is called r00t.
20:58  dagni: kill me.
20:59  hemanth: geirha, that was way back in 1900's ??
20:59  dagni: eh
20:59  dagni: back in XX century you meant
21:00  geirha: I dropped in here about a year ago and started giving bad advice to people
21:00  dagni: your advices helped me in my few scripts
21:00  dagni: so i would negate that
21:00  geirha: The regulars pointed out my errors, then I read the guide and faq and learned bash properly.
21:01  hemanth: :)
21:01  dagni: ;)
21:02 * hemanth hits the bed, bash dreams everyone :)
21:02  dagni: #!/bin/stfu
21:02  dagni: that might be your nightmare
21:02  dagni: ;D
21:02  bassliner: i can just recommend the wiki and i often find myself making mistakes i just got used to that are covered in the faq.
21:02  hemanth: dagni, :P
21:03  dagni: i go for some juice
21:03  dagni: im not used to just drink the vodka without anything extra
21:03  dagni: thats just not me.
21:03  dagni: brb
21:03  dagni: i wonder
21:04  dagni: if bash author was ever here
21:04  dagni: with visit
21:04  dagni: deadly wonder..
21:04  bassliner: dagni: i pretty much doubt it.
21:05  dagni: why would he not come here...
21:07  bassliner: why should he?
21:07  bassliner: to learn something about bash? lol.
21:08  dagni: i know myself, when i code something and i know it's good, i google about any informations releated to my project, including forums, chats and mailing lists just to know what peoples think... for me it's natural, for you it might be obsession, for someone else it might be just pointless as they have so many more great ideas that visiting such places would be pure waste of time, i don't know, i just wonder......
21:09  geirha: I'm sure he'd love to see how is work is being *beeeep* on a regular basis :)
21:10  dagni: lol
21:10  dagni: that's true as well ;P~
21:10  erUSUL: s/is/his
21:10  dagni: jesus
21:11  geirha: erUSUL: err, right :)
21:11  dagni: and i just thought you wont correct it as the brain have ability to auto-correct this misspelling
21:11  dagni: but you just needed to do that!
21:11  dagni: :)
21:12  erUSUL: dagni: may be becouse i am not native speaker and my brain is sllow correctling english
21:12  erUSUL: ;P
21:12  dagni: my english is terribly bad and yet still i auto-corrected it
21:12  dagni: ;PPPPP
21:13 * dagni shop time :D
21:13 * dagni 200ml was bad idea, time for another 200ml
21:23  lizone: do I have any chance to put the output of the Top program into a text file. So far I'm not able to do it without lots of not-readable text
21:24  erUSUL: lizone: top has options to make it dump text instead doing interactive mode ( at least my top )
21:25  lizone: erUSUL, thank you; I'll look into it
21:25  erUSUL: lizone: top -b -n 1 > text.file
21:26  PhilipPhilip: motha fucka, can;t get this motha fuckin pissy if then elif elif elif motha fuckin else to a motha fuckin case job, FUCK!
21:26  taylanub: PhilipPhilip: go to 4chan/b/
21:26  lizone: urUSUL, that works perfectly
21:26  PhilipPhilip: dont do 4chan
21:26  lizone: thank you
21:30 --- muzer is now known as MuzerAway
21:35 --- MuzerAway is now known as muzer
21:35 --- John[a] is now known as John
21:36  dagni: erUSUL: 'my top' ?
--- Log closed Sat Oct 09 21:42:49 2010
--- Log opened Sat Oct 09 21:48:14 2010
21:48 --- Users 526 nicks [0 ops, 0 halfops, 0 voices, 526 normal]
21:48  lhunath: half the world's populus might disagree
21:49 --- Channel #bash was synced in 67 seconds
21:51  PhilipPhilip: apparently 1% are homosexual so make that 51% lhunath
--- Log closed Sat Oct 09 22:03:41 2010
--- Log opened Sat Oct 09 22:04:02 2010
22:04 --- Users 520 nicks [0 ops, 0 halfops, 0 voices, 520 normal]
22:05 --- Channel #bash was synced in 66 seconds
22:07  PhilipPhilip: the thing i like about bashguide is that it explains things interactively on the command line as opposed to always in a script
22:08  PhilipPhilip: well done lhunath !
22:08  PhilipPhilip: (and greycat)
22:20  erUSUL: dagni: the one in my system;
22:21  sritchie: hey all -- I've got a problem with my shell where whenever I hit tab to autocomplete, three "find" commands run, like this - http://gist.github.com/618569
22:21  sritchie: really annoying, and nothing in .bashrc or .bash_profile gives me any clue
22:22  GVT: is there a way to store a hashtable i.e. [boys; john, peter, joe][girls; sarah, kate]
22:23  erUSUL: !arrays
22:23  greybot: An array maps numbers to strings. Bash 4 also has associative arrays (maps strings to strings). See http://mywiki.wooledge.org/BashSheet#Arrays
22:23  cthuluh: sritchie: probably a problem in your bash-completion package
22:24  sritchie: cthuluh: how can I access the package, or reinstall?
22:25  cthuluh: it is usually installed at /etc/bash_completion and /etc/bash_completion.d/
22:25  cthuluh: other things are distro specific, ask your os channel
22:26  sritchie: cthuluh: I'm on OS X
22:26  cthuluh: I don't know anything about it
22:26  sritchie: cthuluh: all I have is /etc/bashrc .. http://gist.github.com/618573
22:26  sritchie: cthuluh: all right, thanks for your help
--- Log closed Sat Oct 09 22:33:42 2010
--- Log opened Sat Oct 09 22:34:05 2010
22:34 --- Users 523 nicks [0 ops, 0 halfops, 0 voices, 523 normal]
22:35 --- Channel #bash was synced in 71 seconds
22:39  krzee: ![[
22:39  greybot: [[ is a bash keyword similar to (but more powerful than) the [ command. See <http://mywiki.wooledge.org/BashFAQ/031> and <http://mywiki.wooledge.org/BashGuide/TestsAndConditionals>. Unless you're writing for POSIX sh, we recommend [[.
22:41  GVT: erUSUL, so no associative arrays for bash <4 :(
22:42  erUSUL: GVT: nope; some hacks are described in a faq ....
22:42  ferret: you can do it with two arrays and linear accessing
22:42  erUSUL: !faq indirect
22:42  greybot: http://mywiki.wooledge.org/BashFAQ/006 -- How can I use variable variables (indirect variables, pointers, references) or associative arrays?
22:43  GVT: ferret, as in key = "boys girls" and values="john, pete" "sarah, kate"
22:43  erUSUL: GVT: maybe you are using the wrong language?
22:44  ferret: that's not even a simple hash table
22:46  BigBlackDog: hello, hope you guys can help me. i'd like to write a command to copy (actually, i'd like to use "convert" later) on a number of files in the current directory ...
22:47  erUSUL: !lame
22:47  greybot: for f in ./*.wav; do lame "$f" "${f%.wav}.mp3"; done
22:47  BigBlackDog: all the files matching the pattern *.gif should be copied to files named "new_*.gif"
22:47  BigBlackDog: would'n i use find ... and xargs?
22:48  erUSUL: BigBlackDog: for f in *.gif; do mv -- "$f" new_"$f" ; done
22:50  mouche: erusul: what is "--" for after mv?
22:50  erUSUL: !--
22:50  greybot: The special option -- means "end of options" to every POSIX command except echo and test. E.g., mv -- *.png /somedir
22:50  mouche: erusul: thanks
22:50  erUSUL: mouche: in case there is a -file.gif in the dir
22:51  BigBlackDog: erUSUL: thank you ... that works, but how would i do that using find and xargs?
22:51  erUSUL: !find > BigBlackDog
22:51  greybot: BigBlackDog: http://mywiki.wooledge.org/UsingFind
22:51  BigBlackDog: :)
22:52  erUSUL: wait; we have a xargs factoid too !!!
22:52  erUSUL: !xargs
22:52  greybot: xargs(1) is dangerous (broken) when processing filenames that are not null-terminated. If you are using find, then use find's '-exec(dir) <command> {} +' instead.
22:55 --- John is now known as John[away]
22:57  dagni: im back!
22:57  dagni: ;-)
23:04  juliohm: how to use zenity in addition to sudo or su commands and check if the password is ok? retry if necessary... some tip?
23:09  geirha: Don't. Just use gksudo instead.
23:10  juliohm: geirha, but i don't need edit nothing
23:10  juliohm: is only for make a udev file
23:25 --- John[away] is now known as John
23:27  xanthaos: I have a one-liner rsync I want to cron, can someone either recommend a good wiki on cron and crontab or perhaps assist me in getting this cron setup?
23:27  xanthaos: the one-liner is 'rsync -a /this/dir/ /that/dir'
--- Log closed Sat Oct 09 23:33:17 2010
--- Log opened Sat Oct 09 23:33:37 2010
23:33 --- Users 527 nicks [0 ops, 0 halfops, 0 voices, 527 normal]
23:34  Tramp: xanthaos: "man 5 crontab" explains the format and has examples
23:34 --- Channel #bash was synced in 60 seconds
23:34  Tramp: falconindy: cron has a default PATH, and rsync, as installed by any sane distro, should be in it.
23:35  falconindy: Tramp: there's absolutely no guarantee that cron knows of a PATH
23:35  Tramp: It's more likely than your blind guess, that that may be his problem, is right
23:36  falconindy: a sane cron implementation will parse your input on exiting crontab and complain about errors
23:38 --- someone is now known as Guest96549
23:41 --- Evixion` is now known as Evixion
23:43  GVT: I'm looking to do a "for file in *" but I want to exclude certain files
23:43  jzacsh_: teehee, cron..
23:44  geirha: !extglob > GVT
23:44  greybot: GVT: "Extended globs" (shopt -s extglob) allow you to say things like "all files that do not end in .jpg". See http://mywiki.wooledge.org/glob
23:45 --- John is now known as John[away]
23:52  GVT: wow this is gonna be hard :'(
23:53  geirha: What files do you want to exclude?
23:55  GVT: geirha, http://pastebin.com/GXbGgbcC
23:56  GVT: s/xafdeling/ a value in $onderheidstabellen
23:56  geirha: !assignment > (line 2)
23:56  greybot: (line 2): To assign to a variable, use varname=value . Do not include spaces around the '=', and do not write $varname on the left hand side. The value must be a word (quote funny characters), but it does not undergo word-splitting or globbing. Assign to an array with arr=( value1 value2 ) (which does undergo word-splitting and globbing), or an array element with arr[i+1]=value . See also: declare, local, and export.
23:56  GVT: geirha, I'll remove those ty :)
23:57  geirha: That should probably be an array though
23:58  geirha: for data in "${prefix}_${subsystem}_"!(xafdeling-data).sql; do
23:59  geirha: that should iterate all files starting with "${prefix}_${subsystem}_" and ending with ".sql", except "${prefix}_${subsystem}_xafdeling-data.sql"
23:59  geirha: You are also lacking quotes btw
--- Log closed Sun Oct 10 00:00:14 2010
