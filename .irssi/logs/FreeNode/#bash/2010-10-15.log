--- Log opened Fri Oct 15 10:30:18 2010
10:30 --- Users 518 nicks [0 ops, 0 halfops, 0 voices, 518 normal]
10:31 --- Channel #bash was synced in 85 seconds
10:33  sikilpaake: i used "$HOME/Desktop", seems like that worked
10:36  sikilpaake: how can i get a script continue even if one of the operations wasn't succesful?
10:36  Knirch: # jfdghdfjghjdf ; echo what do you mean?
10:37  evalbot: Knirch: bash: jfdghdfjghjdf: command not found
10:37  evalbot: Knirch: what do you mean?
10:37  geirha: Don't use set -e
10:38  sikilpaake: geirha: no, i don't want to use "set -e"
10:39  sikilpaake: geirha: i only want that line to continue even if the return is 1 or however that's called
10:40  lhunath: sikilpaake: luckily for you, that's the default behaviour.
10:41  sikilpaake: is anybody going to tell me how to pull it off?
10:41  lhunath: Knirch even demonstrated it for you.
10:41  lhunath: of course, if you turn a blind eye ..
10:41  sikilpaake: lhunath: ?
10:42  sikilpaake: lhunath: i didn't understand what he said
10:42  sikilpaake: sudo rm -R "$netradiant_target_install_path$netradiant_name$netradiant_version" && #remove current installation
10:42  lhunath: do you know what && does?
10:43  sikilpaake: lhunath: i think i do
10:43  lhunath: then what's the problem?
10:43  sikilpaake: lhunath: the problem is that *that* directory is sometimes not there
10:43  sikilpaake: lhunath: so the script stops and exits with error
10:44  sikilpaake: lhunath: i need it to continue even if the directory is/isn't there
10:44  sikilpaake: or whatever
10:44  sikilpaake: maybe i can do an "if"
10:44  lhunath: the script doesn't stop because sudo rm fails.
10:44  sikilpaake: lhunath: no?
10:44  sikilpaake: lhunath: then why?
10:44  lhunath: as I said; the default behaviour of bash is to continue on even when commands fail.
10:45  sikilpaake: lhunath: right
10:45  lhunath: demonstrated by Knirch's jfdghdfjghjdf command failing, and the echo being executed anyway.
10:45  sikilpaake: lhunath: are you going to tell me why its stopping?
10:45  lhunath: if you mean "the part after && isn't executed", then you should know why, seeing as you know what && means.
10:45  lhunath: if you REALLY mean, the script exits right after the sudo fails, then geirha was right.
10:45  sikilpaake: lhunath: i see what you mean
10:46  lhunath: if neither of those is true, run your code with set -x to see why it's REALLY exiting.
10:46  sikilpaake: lhunath: if i understand what you're trying to say, you're telling me that i should use ; instead of &&
10:47  sikilpaake: at least for this line
10:47  sikilpaake: right?
10:47  sikilpaake: lhunath: ?
10:48  lhunath: perhaps.
10:48  lhunath: my sentences started with 'if' for a reason.
10:49  lhunath: don't try to fix something before you know what the problem is.
10:50  sikilpaake: lhunath: thanks
10:52  sikilpaake: lhunath: thanks a lot, man
10:53  lhunath: welcome
10:57  sikilpaake: lhunath: ok.. i've got another question
10:57  sikilpaake: lhunath: regarding && and stuff
10:58  sikilpaake: after i sudo tar something, i put a &&
10:58  sikilpaake: then, the next line doesn't execute
10:58  sikilpaake: it gets skipped, for some reason
10:59  sikilpaake: if i run that line outside of the script, it runs fine
10:59  sikilpaake: but not inside the script, after the &&
10:59  sikilpaake: why?
10:59  sikilpaake: what's going on here?
10:59  koala_man: because sudo tar something doesn't exit successfully
10:59  koala_man: # false && echo foo
10:59  sikilpaake: koala_man: well, it *IS* decompressing all of my files
10:59  evalbot: koala_man: no output
11:00  koala_man: sikilpaake: run the tar part and echo $?
11:00  sikilpaake: koala_man: wow.. great idea, let me try that
11:01  sikilpaake: like this? sudo tar -xvjf "$netradiant_target_temp_path$netradiant_name$netradiant_version$netradiant_extension" -C "$netradiant_target_install_path"; echo $?
11:01  koala_man: yes
11:01  sikilpaake: koala_man: great
11:02  sikilpaake: koala_man: it returned 0
11:03  sikilpaake: koala_man: what does that mean?
11:03  sikilpaake: success, right?
11:03  koala_man: yes
11:04  sikilpaake: then.. what's making the next line get skipped?
11:04  koala_man: most likely it's not being skipped
11:05  koala_man: how can you tell it's not being run?
11:05  koala_man: check with 'set -x'
11:07  sikilpaake: like this? sudo tar -xvjf "$netradiant_target_temp_path$netradiant_name$netradiant_version$netradiant_extension" -C "$netradiant_target_install_path"; set-x
11:07  sikilpaake: oops
11:08  sikilpaake: like this? sudo tar -xvjf "$netradiant_target_temp_path$netradiant_name$netradiant_version$netradiant_extension" -C "$netradiant_target_install_path"; set -x
11:08 --- tecra is now known as xxtecraxx
11:10  koala_man: set -x; sudo tar whatever && whateverelse
11:10  koala_man: the shell will start printing debug output on stderr, including which commands it executes
11:11  tmr: Might want to drop verbose from tar.
11:12  sikilpaake: koala_man, tmr: i just replaced all my && to ; in all the non-initializing parts of the script
11:12  sikilpaake: koala_man, tmr: seems like that worked
11:12  sikilpaake: koala_man, tmr: thanks!
11:18 --- chalcedony is now known as chalcedony`
11:18 --- chalcedny is now known as chalcedony
11:18 --- chalcedony` is now known as chalcedny
11:31  lokendra_eads: what is meaning of following command?
11:31  lokendra_eads: $//' file1 > file2
11:32  twkm: ''man followingcommand''
11:32  lokendra_eads: k
11:33  lokendra_eads: $//' is not a command but
11:34  lhunath: it's not a valid bash statement.
11:36 --- Weust`afk is now known as Weust`
11:51 --- xxtecraxx is now known as tecra
11:55  dman777_: does 'exec >' open file descriptor 0?
11:55  koala_man: can't imagine that
11:57  twkm: what does the > redirection documentation say is the default fd?
11:58  dman777_: twkm: 0
11:58  dman777_: twkm: oh wait, sorry. 1
11:59  twkm: there you go.
12:17  sikilpaake: what does '%s' do in printf '%s' ??
12:18  twkm: ''man printf''
12:31  nicola_pav: hello. i have some variables that i need to check against a txt file
12:31  nicola_pav: how do i do it?
12:32  nicola_pav: to see if there is a match
12:32  koala_man: grep
12:32  nicola_pav: syntax?
12:33  twkm: ''man grep''?
12:33  nicola_pav: ok, thanks
12:38 --- nicola_pav_ is now known as nicola_pav
12:44  nicola_pav: i have a text file that has two entries delimited by space
12:44  nicola_pav: how can i add another value to the text file after the second column?
12:44  nicola_pav: at the end i want to have 3 columns in the file
12:45  nicola_pav: i can save the values in a file and do cat file1 file2 to have a final file
12:45  nicola_pav: i wonder if there is another way
12:48  koala_man: nicola_pav: use 'paste'
12:48  unop: the usual suspects too - sed, awk, perl ...
12:50  nicola_pav: what about adding variables in a while loop to an existing txt file?
12:51  nicola_pav: without having to save the variables in the while loop to a file and then paste them?
12:51  twkm: ever hear of pipes?
12:51  nicola_pav: yes
12:51  twkm: (or editors)
12:52  nicola_pav: can u be more clear please?
13:06  twkm: nicola_pav: paste can read from stdin.
13:10 --- streuner__ is now known as streuner
13:10  mrtnt: I have a configuration file for a network device(2100 lines). This device is configurable only over console line. If I copy chunks of those lines into terminal(I use minicom), there will be mistakes (sometimes some characters missing etc). Is there a possibility to make a script, which starts console session, copies a line from this file and then sleeps a second, copies another and seelps a second and so on?
13:12  pgas: this device doesn't allow you to use things like rz or maybe kermit?
13:14  mrtnt: pgas: I'm able to access this device with minicom, hyper terminal or cu. However, I have not tried kermit. Is is somehow different?
13:14  Bushmills: mrtnt, many terminal programs allow a setting called "pacing" which is the pause time after a line feed
13:14  twkm: kermit can pace its output to the line.
13:15  pgas: mrtnt: there some protocols you can use through your serial console
13:16  pgas: *there are
13:16  Bushmills: enabling your terminal to honour software flow control (ctrl-s, ctrl-q) may be helpful too
13:23  dman777: question: in '$ grep proud file 'not a file' > proud.log 2>&1' the standard error is generated and outputed at the end of the statement. in '$ grep proud file 'not a file' 2>&1 > proud.log' error output is generated before standard out to proud.log. When the shell encounters an error...does the shell buffer it and wait for the user to define when to output it?
13:23  geirha: !faq 2>&1
13:23  greybot: http://mywiki.wooledge.org/BashFAQ/055 -- Tell me all about 2>&1 -- what's the difference between 2>&1 >foo and >foo 2>&1, and when do I use which?
13:24  twkm: ''man bash'', redirection section.
13:24  twkm: after setting up the redirection and starting the command the shell is entirely uninvolved.
13:25  twkm: as an aside, why do you include a shell prompt in your question?
13:30  mrtnt: Bushmills. pgas: so the problem is that if lines are copied too fast, there might be errors?
13:31  nicola_pav: how do i remove the first argument in a srting?
13:31  pgas: mrtnt: well, I'm just saying that there are better ways to send a file than copy/pasting
13:31  twkm: uh.
13:31  Bushmills: usually, at end of line does the device need a moment for processing. if terminal doesn't respect this, either by letting itself being throttled, or pacing itself, and receive buffer overruns, there'll be lost chars
13:32  pgas: nicola_pav: the first word you mean?
13:32  nicola_pav: yes
13:32  nicola_pav: pgas: yes
13:32  pgas: var=${var#* } # will remove everything up to the first space
13:32  dman777: twkm: sorry, i cut and pasted
13:32  nicola_pav: pgas: thanks
13:41  geirha: Assuming it doesn't contain newines, you could also use read.   read -r _ rest <<< "$var"; echo "$rest"
--- Log opened Fri Oct 15 13:49:17 2010
13:49 --- Users 531 nicks [0 ops, 0 halfops, 0 voices, 531 normal]
13:50 --- Channel #bash was synced in 89 seconds
13:59  watchingant: anyone familiar with inotify?
13:59  watchingant: anyone familiar with inotify?
13:59  trash: ##linux
13:59  trash: ##linux
14:00  twkm: Yvemath: one seems enough.
14:00  twkm: Yvemath: one seems enough.
14:00  twkm: watchingant: sheesh, why do people do that?
14:00  twkm: watchingant: sheesh, why do people do that?
14:01  nicola_pav: i have a scenario where I read a file line by line, and then using grep to match each line into another file. i use for loop in order to echo the results in an output file
14:01  nicola_pav: i have a scenario where I read a file line by line, and then using grep to match each line into another file. i use for loop in order to echo the results in an output file
14:02  nicola_pav: the result of grep would be in multiple lines
14:02  nicola_pav: the result of grep would be in multiple lines
14:02  nicola_pav: i need it in one line
14:02  nicola_pav: i need it in one line
14:02  nicola_pav: how can i do that?
14:02  nicola_pav: how can i do that?
14:02  Uqbar: what do you mean exactly when you say "match each line into another file"?
14:02  Uqbar: what do you mean exactly when you say "match each line into another file"?
14:03  erUSUL: nicola_pav: grep -f regex_file file | tr '\n' ' ' > out_file
14:03  erUSUL: nicola_pav: grep -f regex_file file | tr '\n' ' ' > out_file
14:04  geirha: nicola_pav: You want only the first matching line?
14:04  geirha: nicola_pav: You want only the first matching line?
14:05  erUSUL: # grep -f <(printf "%s\n" foo bar) <(printf "%s\n" random foo bar baz random) | tr '\n' ' '
14:05  erUSUL: # grep -f <(printf "%s\n" foo bar) <(printf "%s\n" random foo bar baz random) | tr '\n' ' '
14:05  nicola_pav: erUSUL: did not work
14:05  nicola_pav: erUSUL: did not work
14:05  evalbot: erUSUL: foo bar
14:05  evalbot: erUSUL: foo bar
14:06  erUSUL: the evalbot disagrees; maybe you did not explained well enough what you want?
14:06  erUSUL: the evalbot disagrees; maybe you did not explained well enough what you want?
14:06  nicola_pav: to be more clear i have mac address prefix
14:06  nicola_pav: to be more clear i have mac address prefix
14:06  geirha: Try providing sample input and wanted output
14:06  geirha: Try providing sample input and wanted output
14:06  nicola_pav: that i want to match against oui.txt that contains MAC to vendor
14:06  nicola_pav: that i want to match against oui.txt that contains MAC to vendor
14:06  nicola_pav: when there is a match
14:06  nicola_pav: when there is a match
14:07  nicola_pav: i want to grep it
14:07  nicola_pav: i want to grep it
14:07  nicola_pav: the grep of the match would result in multiple lines
14:07  nicola_pav: the grep of the match would result in multiple lines
14:07  nicola_pav: i need it in one line only
14:07  nicola_pav: i need it in one line only
14:07  nicola_pav: for test in $(grep $line1_temp $FILE2 | tr '\n' ' ' ); do
14:07  nicola_pav: for test in $(grep $line1_temp $FILE2 | tr '\n' ' ' ); do
14:07  erUSUL: so you want one line; for each match no matter how many matched lines there is?
14:07  erUSUL: so you want one line; for each match no matter how many matched lines there is?
14:07  geirha: Oh dear
14:07  geirha: Oh dear
14:07  nicola_pav: i then echo $test
14:07  nicola_pav: i then echo $test
14:07  geirha: !quotes > nicola_pav
14:07  geirha: !quotes > nicola_pav
14:07  greybot: nicola_pav: "USE MORE QUOTES!" They are vital. Also, learn the difference between ' and " and `. See <http://mywiki.wooledge.org/Quotes> and <http://wiki.bash-hackers.org/syntax/words>.
14:07  greybot: nicola_pav: "USE MORE QUOTES!" They are vital. Also, learn the difference between ' and " and `. See <http://mywiki.wooledge.org/Quotes> and <http://wiki.bash-hackers.org/syntax/words>.
14:08  geirha: !faq 1 > nicola_pav
14:08  geirha: !faq 1 > nicola_pav
14:08  greybot: nicola_pav: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
14:08  greybot: nicola_pav: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
14:09  geirha: You are iterating each word on each line and outputting each word on a separate line
14:09  geirha: You are iterating each word on each line and outputting each word on a separate line
14:10  nicola_pav: i am confused
14:10  nicola_pav: i am confused
14:11  mrtnt: Bushmills: could you please name a serial console program, which allows pacing and works under Linux/BSD?õ'
14:11  mrtnt: Bushmills: could you please name a serial console program, which allows pacing and works under Linux/BSD?õ'
14:11  geirha: Yes, your code shows that you are.
14:11  geirha: Yes, your code shows that you are.
14:11  taha_: how can i ensure that the input contains only digits? (in bash or POSIX sh)
14:11  taha_: how can i ensure that the input contains only digits? (in bash or POSIX sh)
14:11  geirha: !guide > nicola_pav
14:11  geirha: !guide > nicola_pav
14:11  greybot: nicola_pav: http://mywiki.wooledge.org/BashGuide
14:11  greybot: nicola_pav: http://mywiki.wooledge.org/BashGuide
14:11  geirha: !faq valid > taha_
14:11  geirha: !faq valid > taha_
14:11  greybot: taha_: http://mywiki.wooledge.org/BashFAQ/054 -- How can I tell whether a variable contains a valid number?
14:11  greybot: taha_: http://mywiki.wooledge.org/BashFAQ/054 -- How can I tell whether a variable contains a valid number?
14:11  Yvemath_: people generally don't do that, there's a bad connection behind that.
14:11  Yvemath_: people generally don't do that, there's a bad connection behind that.
14:29  latenite:  Hi folks, I have this bashscript http://pastie.org/1223195 that ALSO uses mysql to setup a webcalendar. WITHIN the mysql code I get an error: ERROR 1064 (42000) at line 4: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'EXIT' at line 1 WHAT am I doing wrong here? thanks
14:29  latenite:  Hi folks, I have this bashscript http://pastie.org/1223195 that ALSO uses mysql to setup a webcalendar. WITHIN the mysql code I get an error: ERROR 1064 (42000) at line 4: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'EXIT' at line 1 WHAT am I doing wrong here? thanks
14:30  pgas: asking about sql syntax in the bash channel?
14:30  pgas: asking about sql syntax in the bash channel?
14:31  latenite: pgas, yes because funny thing is: WITHIN mysql> it works So mist have something to do with the wrapping bash stuff
14:31  latenite: pgas, yes because funny thing is: WITHIN mysql> it works So mist have something to do with the wrapping bash stuff
14:33  pgas: run your script with "bash -x script" and see what's really executed
14:33  pgas: run your script with "bash -x script" and see what's really executed
14:33  skered: latenite: Would using set -x; on the first line show you what's happen on the remote side.
14:33  skered: latenite: Would using set -x; on the first line show you what's happen on the remote side.
14:34  nicola_pav: still could not figure it out
14:34  nicola_pav: still could not figure it out
14:34  nicola_pav: i use IFS=$'\n'
14:34  nicola_pav: i use IFS=$'\n'
14:34  nicola_pav: if in the while
14:34  nicola_pav: if in the while
14:34 --- PythonNub|BRB is now known as PythonNub
14:34 --- PythonNub|BRB is now known as PythonNub
14:34  nicola_pav: it will return only first result in one line
14:34  nicola_pav: it will return only first result in one line
14:34  taylanub: latenite: this pastie site messes up syntax highlighting really bad and causes confusion. maybe you don't choose the correct language
14:34  taylanub: latenite: this pastie site messes up syntax highlighting really bad and causes confusion. maybe you don't choose the correct language
14:35  latenite: ok this the utput of bash -x http://pastie.org/1223219 on that code http://pastie.org/1223221
14:35  latenite: ok this the utput of bash -x http://pastie.org/1223219 on that code http://pastie.org/1223221
14:35  latenite: taylanub, correctet that, tha nks :)
14:35  latenite: taylanub, correctet that, tha nks :)
14:36  taylanub: and you use \ inside printf '...'.   you might want \\ instead
14:36  taylanub: and you use \ inside printf '...'.   you might want \\ instead
14:37  latenite: taylanub, can you explain why? I though  \ is just to start e new line?
14:37  latenite: taylanub, can you explain why? I though  \ is just to start e new line?
14:38  pgas: latenite: well use ssh ... bash -x
14:38  pgas: latenite: well use ssh ... bash -x
14:38  pgas: to see what's really executed on the remote host
14:38  pgas: to see what's really executed on the remote host
14:39  latenite: pgas, you mean WITHIN the script?
14:39  latenite: pgas, you mean WITHIN the script?
14:39  pgas: latenite: this time I mean within the script yes, so that the remote bash runs with -x
14:39  pgas: latenite: this time I mean within the script yes, so that the remote bash runs with -x
14:40  latenite: pgas, ok here it goes: http://pastie.org/1223231
14:40  latenite: pgas, ok here it goes: http://pastie.org/1223231
14:41  nicola_pav_: still could not figure out the grep that results in multiple lines
14:41  nicola_pav_: still could not figure out the grep that results in multiple lines
14:41  karthee: pgas:  awk '$1 " " $2 > "2010-10-15 05:51"'  .. This gives ONLY the lines which are all having  2010-10-15 05:51  ..
14:41  karthee: pgas:  awk '$1 " " $2 > "2010-10-15 05:51"'  .. This gives ONLY the lines which are all having  2010-10-15 05:51  ..
14:42  taylanub: latenite: well that doesn't look like the same error you told us about earlier. correct me
14:42  taylanub: latenite: well that doesn't look like the same error you told us about earlier. correct me
14:42 --- nicola_pav_ is now known as nicola_pav
14:42 --- nicola_pav_ is now known as nicola_pav
14:42  pgas: karthee: wrong channel
14:42  pgas: karthee: wrong channel
14:42  nicola_pav: still could not figure out the grep that results in multiple lines
14:42  nicola_pav: still could not figure out the grep that results in multiple lines
14:42  karthee: pgas: ops .. Absent minded ...
14:42  karthee: pgas: ops .. Absent minded ...
14:42  latenite: pgas, soory this is BETTER http://pastie.org/1223234 since here the db is created right
14:42  latenite: pgas, soory this is BETTER http://pastie.org/1223234 since here the db is created right
14:43  latenite: taylanub, yes my fault...I alwas need to increment the db_name thsi is the right paste http://pastie.org/1223234
14:43  latenite: taylanub, yes my fault...I alwas need to increment the db_name thsi is the right paste http://pastie.org/1223234
14:44  pgas: latenite: well, now you see what sql command is executed and you can ask about it in #mysql
14:44  pgas: latenite: well, now you see what sql command is executed and you can ask about it in #mysql
14:45 14:45  latenite: pgas, that s line 68 right? looks fine to me?! latenite: pgas, that s line 68 right? looks fine to me?!

14:46  pgas: the thing inside ' ' after mysql ... -e
14:46  pgas: the thing inside ' ' after mysql ... -e
14:50  keitazor: hi all ;-)
14:50  keitazor: hi all ;-)
14:50  slidesinger-lt: I have been searching for three pieces of information for a script I am writing and cannot seem to find either.  One is how to test for userid, as I want this script to exit if user is root.  The second is how to test for tty1, as I only want it to run from tty1, and the last how to test if the script is being run from an xterm.
14:50  slidesinger-lt: I have been searching for three pieces of information for a script I am writing and cannot seem to find either.  One is how to test for userid, as I want this script to exit if user is root.  The second is how to test for tty1, as I only want it to run from tty1, and the last how to test if the script is being run from an xterm.
14:50  slidesinger-lt:  I assume this has to do with environment variables, but have not been able to figure it out.  Does anyone know how to do this or can point me to relevant documentation?
14:50  slidesinger-lt:  I assume this has to do with environment variables, but have not been able to figure it out.  Does anyone know how to do this or can point me to relevant documentation?
14:51  latenite: pgas, on line 70 in that http://pastie.org/1223234 lies the errot but I cant see why? do you?
14:51  latenite: pgas, on line 70 in that http://pastie.org/1223234 lies the errot but I cant see why? do you?
14:51  lil_cain: if [[ 'root' == $(whoami) ]]; then exit 0; fi;
14:51  lil_cain: if [[ 'root' == $(whoami) ]]; then exit 0; fi;
14:51  taylanub: slidesinger-lt: 'id' for userid
14:51  taylanub: slidesinger-lt: 'id' for userid
14:51  lil_cain: if [[ '/dev/tty1' == $(tty) ]]; then <stuff>; fi;
14:51  lil_cain: if [[ '/dev/tty1' == $(tty) ]]; then <stuff>; fi;
14:52  taylanub: using UID 0 to detect root is considered more 'correct'.  some weirdos like UID0 accounts with names other than 'root'
14:52  taylanub: using UID 0 to detect root is considered more 'correct'.  some weirdos like UID0 accounts with names other than 'root'
14:52  lil_cain: xterm should be in $TERM, although I doubt taht's very trustworthy.
14:52  lil_cain: xterm should be in $TERM, although I doubt taht's very trustworthy.
14:52  pgas: latenite: it's an sql error not a bash error. and I'm not familiar with mysql
14:52  pgas: latenite: it's an sql error not a bash error. and I'm not familiar with mysql
14:53  keitazor: can some one tell me where is the problem in this newbie script please : http://pastebin.com/7zDH1YzX
14:53  keitazor: can some one tell me where is the problem in this newbie script please : http://pastebin.com/7zDH1YzX
14:53  nicola_pav: any help on how to get grep results in one line instead of multiple lines?
14:53  nicola_pav: any help on how to get grep results in one line instead of multiple lines?
14:53  keitazor: the $HOST doesn't work
14:53  keitazor: the $HOST doesn't work
14:54  pgas: nicola_pav: grep ... | paste -s -d ' '
14:54  pgas: nicola_pav: grep ... | paste -s -d ' '
14:54  slidesinger-lt: taylanub: I see that.  Didn't know about the id variable.  Lots of cool information there.
14:54  slidesinger-lt: taylanub: I see that.  Didn't know about the id variable.  Lots of cool information there.
14:54  taylanub: keitazor: $HOST_ means ${HOST_}
14:54  taylanub: keitazor: $HOST_ means ${HOST_}
14:54  taylanub: use ${HOST}_
14:54  taylanub: use ${HOST}_
14:54  latenite: pgas, ok thank you so far....let s see what people on #mysql say :)
14:54  latenite: pgas, ok thank you so far....let s see what people on #mysql say :)
14:54  keitazor: oh ok, i'll try
14:54  keitazor: oh ok, i'll try
14:55  slidesinger-lt: lil_cain: thanks.  That points me in the right direction.
14:55  slidesinger-lt: lil_cain: thanks.  That points me in the right direction.
14:55  nicola_pav: pgas: did not work
14:55  nicola_pav: pgas: did not work
14:55  lil_cain:  of information for a script I am writing │ ascheel
14:55  lil_cain:  of information for a script I am writing │ ascheel
14:55  nicola_pav: pgas:     for test in $(grep $mac_temp $FILE2 | paste -s -d ' '); do
14:55  nicola_pav: pgas:     for test in $(grep $mac_temp $FILE2 | paste -s -d ' '); do
14:55  taylanub: slidesinger-lt: you mean id _command_ maybe? though i now realize there's $UID as well (though which *might* lie if someone is stupid enough to manually change it)
14:55  taylanub: slidesinger-lt: you mean id _command_ maybe? though i now realize there's $UID as well (though which *might* lie if someone is stupid enough to manually change it)
14:56  nicola_pav: o do echo $test in the for loop
14:56  nicola_pav: o do echo $test in the for loop
14:56  taylanub: keitazor: actually using "$HOST"_  is better
14:56  taylanub: keitazor: actually using "$HOST"_  is better
14:56  taylanub: !quotes
14:56  taylanub: !quotes
14:56  greybot: "USE MORE QUOTES!" They are vital. Also, learn the difference between ' and " and `. See <http://mywiki.wooledge.org/Quotes> and <http://wiki.bash-hackers.org/syntax/words>.
14:56  greybot: "USE MORE QUOTES!" They are vital. Also, learn the difference between ' and " and `. See <http://mywiki.wooledge.org/Quotes> and <http://wiki.bash-hackers.org/syntax/words>.
14:56  keitazor: taylanub, it's work fine, thx ^^
14:56  keitazor: taylanub, it's work fine, thx ^^
14:56  nicola_pav: $FILE2 includes MAC PREFIX VENDOR
14:56  nicola_pav: $FILE2 includes MAC PREFIX VENDOR
14:56  nicola_pav: pgas: for example: 001565 Yealink Co.
14:56  nicola_pav: pgas: for example: 001565 Yealink Co.
14:56  slidesinger-lt: Is it reasonable to assume that, if the script is not being run from a tty, then it is being run from an xterm?
14:56  slidesinger-lt: Is it reasonable to assume that, if the script is not being run from a tty, then it is being run from an xterm?
14:56  nicola_pav: the grep would result in
14:56  nicola_pav: the grep would result in
14:57  nicola_pav: 001565
14:57  nicola_pav: 001565
14:57  nicola_pav: Yealink
14:57  nicola_pav: Yealink
14:57  nicola_pav: Co.
14:57  nicola_pav: Co.
14:57  taylanub: keitazor: still, get used to using "$variable" (with the quotes)
14:57  taylanub: keitazor: still, get used to using "$variable" (with the quotes)
14:57  nicola_pav: i want it in one line
14:57  nicola_pav: i want it in one line
14:57  taylanub: it ALSO saves you from ${} mostly
14:57  taylanub: it ALSO saves you from ${} mostly
14:57  slidesinger-lt: I meant id command, though it seems to provide a list of variables.
14:57  slidesinger-lt: I meant id command, though it seems to provide a list of variables.
14:57  keitazor: taylanub, ok
14:57  keitazor: taylanub, ok
14:58  taylanub: slidesinger-lt: yes, you'll need to parse it. $UID is much easier and _should_ be enough
14:58  taylanub: slidesinger-lt: yes, you'll need to parse it. $UID is much easier and _should_ be enough
14:59  taylanub: BTW $(id -u) also does. and it seems to be POSIX so should be portable
14:59  taylanub: BTW $(id -u) also does. and it seems to be POSIX so should be portable
15:00  slidesinger-lt: taylanub: according to man id, id -u should give the uid only.  I tested that, and it does.  Would you consider that reliable, or might it not work on some older or different systems?
15:00  slidesinger-lt: taylanub: according to man id, id -u should give the uid only.  I tested that, and it does.  Would you consider that reliable, or might it not work on some older or different systems?
15:00  taylanub: just said what i think about it ^^
15:00  taylanub: just said what i think about it ^^
15:01  nicola_pav: pgas: when i use grep 001565 oui_sorted.txt from the command line
15:01  nicola_pav: pgas: when i use grep 001565 oui_sorted.txt from the command line
15:01  slidesinger-lt: I saw that, you said it while I was typing.
15:01  slidesinger-lt: I saw that, you said it while I was typing.
15:01  nicola_pav: it will return the result in one entry only
15:01  nicola_pav: it will return the result in one entry only
15:01  taylanub: thought so
15:01  taylanub: thought so
15:01  nicola_pav: when used in for
15:01  nicola_pav: when used in for
15:01  nicola_pav: it will result in multiple line
15:01  nicola_pav: it will result in multiple line
15:01  nicola_pav: :S
15:01  nicola_pav: :S
15:01  geirha: !faq 1 > nicola_pav
15:01  geirha: !faq 1 > nicola_pav
15:01  greybot: nicola_pav: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
15:01  greybot: nicola_pav: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
15:01  geirha: Read it this time
15:01  geirha: Read it this time
15:02  geirha: Also, why loop over one line?
15:02  geirha: Also, why loop over one line?
15:02  nicola_pav: geriha
15:02  nicola_pav: geriha
15:02  nicola_pav: i read it
15:02  nicola_pav: i read it
15:02  nicola_pav: could not figure out
15:02  nicola_pav: could not figure out
15:02  geirha: Right, and did it not tell you not to use for to iterate lines?
15:02  geirha: Right, and did it not tell you not to use for to iterate lines?
15:02  nicola_pav: what should i use instead of for?
15:02  nicola_pav: what should i use instead of for?
15:03  geirha: ...
15:03  geirha: ...
15:04  slidesinger-lt: I notice a lot of use for $() and ${}, I assume there are docs that explain correct usage?
15:04  slidesinger-lt: I notice a lot of use for $() and ${}, I assume there are docs that explain correct usage?
15:05  nicola_pav: geriha: its frustrating
15:05  nicola_pav: geriha: its frustrating
15:05  lhunath: !$() > slidesinger-lt
15:05  lhunath: !$() > slidesinger-lt
15:05  greybot: slidesinger-lt: Command Substitution: "$(foo bar)" causes the command 'foo' to be executed with the argument 'bar' and "$(..)" will be replaced by the *output*. See http://mywiki.wooledge.org/BashFAQ/002 and http://mywiki.wooledge.org/CommandSubstitution
15:05  greybot: slidesinger-lt: Command Substitution: "$(foo bar)" causes the command 'foo' to be executed with the argument 'bar' and "$(..)" will be replaced by the *output*. See http://mywiki.wooledge.org/BashFAQ/002 and http://mywiki.wooledge.org/CommandSubstitution
15:05  lhunath: nicola_pav: stop trying to figure out the how before you know the what.
15:05  lhunath: nicola_pav: stop trying to figure out the how before you know the what.
15:06  lhunath: !forget ${
15:06  lhunath: !forget ${
15:06  greybot: OK, lhunath
15:06  greybot: OK, lhunath
15:06  slidesinger-lt: Thanks.
15:06  slidesinger-lt: Thanks.
15:10  nicola_pav: lhunath: i read the artice
15:10  nicola_pav: lhunath: i read the artice
15:10  nicola_pav: article*, did not understand much
15:10  nicola_pav: article*, did not understand much
15:11  geirha: nicola_pav: Then read the guide
15:11  geirha: nicola_pav: Then read the guide
15:12  lhunath: !learn ${ Curly-braces in parameter expansions are used when the parameter name is ambiguous: "${foo}bar", "${foo[1]}".  They are not necessary for normal PEs (eg. "$foo").  They are no replacement for quoting.  echo ${line} is BROKEN. (use echo "$line" or "${line}")
15:12  lhunath: !learn ${ Curly-braces in parameter expansions are used when the parameter name is ambiguous: "${foo}bar", "${foo[1]}".  They are not necessary for normal PEs (eg. "$foo").  They are no replacement for quoting.  echo ${line} is BROKEN. (use echo "$line" or "${line}")
15:12  greybot: OK, lhunath
15:12  greybot: OK, lhunath
15:12  lhunath: !learn ${} #redirect ${
15:12  lhunath: !learn ${} #redirect ${
15:12  greybot: ${} is already defined: ${var} (unquoted) is not safe. It does not protect the contents of the parameter var from wordsplitting (see /msg greybot ws) or globbing. What you probably want is "$var"
15:12  greybot: ${} is already defined: ${var} (unquoted) is not safe. It does not protect the contents of the parameter var from wordsplitting (see /msg greybot ws) or globbing. What you probably want is "$var"
15:12  lhunath: !forget ${}
15:12  lhunath: !forget ${}
15:12  greybot: OK, lhunath
15:12  greybot: OK, lhunath
15:12  lhunath: !learn ${} #redirect ${
15:12  lhunath: !learn ${} #redirect ${
15:12  greybot: OK, lhunath
15:12  greybot: OK, lhunath
15:13  lhunath: nicola_pav: what's your point?
15:13  lhunath: nicola_pav: what's your point?
15:13  lhunath: do you know what you want to do yet?
15:13  lhunath: do you know what you want to do yet?
15:13  nicola_pav: yes i do
15:13  nicola_pav: yes i do
15:13  nicola_pav: i have two txt files
15:13  nicola_pav: i have two txt files
15:13  nicola_pav: one small and one big
15:13  nicola_pav: one small and one big
15:14  nicola_pav: i take each input in the first small txt file using while read
15:14  nicola_pav: i take each input in the first small txt file using while read
15:14  lhunath: you're talking about the how now.
15:14  lhunath: you're talking about the how now.
15:14  nicola_pav: i read line by line and grep it to match the other txt file
15:14  nicola_pav: i read line by line and grep it to match the other txt file
15:15  nicola_pav: when there is a match, i will the matched result into a final txt file
15:15  nicola_pav: when there is a match, i will the matched result into a final txt file
15:15  nicola_pav: the result should be in 1 line for each match
15:15  nicola_pav: the result should be in 1 line for each match
15:15  lhunath: sounds like you're re-inventing join(1)
15:15  lhunath: sounds like you're re-inventing join(1)
15:15  nicola_pav: but now, for each match the line is splitted
15:15  nicola_pav: but now, for each match the line is splitted
15:16  nicola_pav: join is not what i am looking for
15:16  nicola_pav: join is not what i am looking for
15:16  nicola_pav: i have a file that has MAC addresses and want to match them to MAC VENDOR
15:16  nicola_pav: i have a file that has MAC addresses and want to match them to MAC VENDOR
15:16  nicola_pav: the match is working just fine
15:16  nicola_pav: the match is working just fine
15:16  lhunath: sounds like you need join(1)
15:16  lhunath: sounds like you need join(1)
15:17  ksk: hello
15:17  ksk: hello
15:17 --- Obadiah is now known as Vivek
15:17 --- Obadiah is now known as Vivek
15:17  _abc_: how do I parse line-by-line using for again? I want to parse on newlines.
15:17  _abc_: how do I parse line-by-line using for again? I want to parse on newlines.
15:17  nicola_pav: i am just getting the results in multilpe lines
15:17  nicola_pav: i am just getting the results in multilpe lines
15:17  ksk: can u give me the link to the "rename mp3 files" wiki article?
15:17  ksk: can u give me the link to the "rename mp3 files" wiki article?
15:17  _abc_: for x in "foo\nbar baz"; ...
15:17  _abc_: for x in "foo\nbar baz"; ...
15:17  pgas: nicola_pav: check http://awk.freeshell.org/ComparingTwoFiles, though joins can also match on fields
15:17  pgas: nicola_pav: check http://awk.freeshell.org/ComparingTwoFiles, though joins can also match on fields
15:17  lhunath: ksk: open the bashfaq from the topic.
15:17  lhunath: ksk: open the bashfaq from the topic.
15:17  pgas: !faq rename > ksk
15:17  pgas: !faq rename > ksk
15:17  greybot: ksk: http://mywiki.wooledge.org/BashFAQ/030 -- How can I rename all my *.foo files to *.bar, or convert spaces to underscores, or convert upper-case file names to lower case?
15:17  greybot: ksk: http://mywiki.wooledge.org/BashFAQ/030 -- How can I rename all my *.foo files to *.bar, or convert spaces to underscores, or convert upper-case file names to lower case?
15:17  lhunath: !faq 1 > _abc_
15:17  lhunath: !faq 1 > _abc_
15:17  greybot: _abc_: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
15:17  greybot: _abc_: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
15:17  ksk: thanks
15:17  ksk: thanks
15:19  _abc_: thx
15:19  _abc_: thx
15:22  lhunath: nicola_pav:
15:22  lhunath: nicola_pav:
15:22  lhunath: $ join -1 2 -2 1 foo bar
15:22  lhunath: $ join -1 2 -2 1 foo bar
15:23  lhunath: mac1 1.1.1.1 vendor1
15:23  lhunath: mac1 1.1.1.1 vendor1
15:23  lhunath: mac4 4.4.4.4 vendor4
15:23  lhunath: mac4 4.4.4.4 vendor4
15:23  lhunath: nicola_pav: sounds like you need join(1).  I do believe I told you about join yesterday or so.  too bad you didnt follow my advice.
15:23  lhunath: nicola_pav: sounds like you need join(1).  I do believe I told you about join yesterday or so.  too bad you didnt follow my advice.
15:23  nicola_pav: i tried it but with no luck
15:23  nicola_pav: i tried it but with no luck
15:24  nicola_pav: i will try it again now
15:24  nicola_pav: i will try it again now
15:24  lhunath: nicola_pav: http://stuff.lhunath.com/foo http://stuff.lhunath.com/bar
15:24  lhunath: nicola_pav: http://stuff.lhunath.com/foo http://stuff.lhunath.com/bar
15:24  lhunath: there's the foo and bar I used in the command I pasted.
15:24  lhunath: there's the foo and bar I used in the command I pasted.
15:24  slidesinger-lt: Thanks for all the new reading material.  I think it is going to solve some problems I have  been trying to work out.  I think I have been a victim of splitting without even knowing it.
15:24  slidesinger-lt: Thanks for all the new reading material.  I think it is going to solve some problems I have  been trying to work out.  I think I have been a victim of splitting without even knowing it.
15:25  lhunath: join is really not that hard if you bother to read man join.
15:25  lhunath: join is really not that hard if you bother to read man join.
15:25  lhunath: slidesinger-lt: everyone is.
15:25  lhunath: slidesinger-lt: everyone is.
15:25  pgas: the files needs to be sorted for join
15:25  pgas: the files needs to be sorted for join
15:26  slidesinger-lt: lhunath: old scripts in production for at least 5 years stopped working as expected on some machines.  I think I now know why.
15:26  slidesinger-lt: lhunath: old scripts in production for at least 5 years stopped working as expected on some machines.  I think I now know why.
15:27  nicola_pav: pgas: u r right. when i sort the files, join works
15:27  nicola_pav: pgas: u r right. when i sort the files, join works
15:31  nicola_pav: lhunath: it worked after all with join.
15:31  nicola_pav: lhunath: it worked after all with join.
15:31  nicola_pav: needed to manipulate the text files more
15:31  nicola_pav: needed to manipulate the text files more
15:31  nicola_pav: but the result is what i need
15:31  nicola_pav: but the result is what i need
15:31  nicola_pav: thanks a lot
15:31  nicola_pav: thanks a lot
15:40  abrotman: is there a way to get a running script to rescan the script to look for changes and use those changes from that point forward? (without interrupting the script)
15:40  abrotman: is there a way to get a running script to rescan the script to look for changes and use those changes from that point forward? (without interrupting the script)
15:41  pgas: no
15:41  pgas: no
15:41  nicola_pav: lhunath: when i try to paste the final files because i already sorted before so join can works
15:41  nicola_pav: lhunath: when i try to paste the final files because i already sorted before so join can works
15:41  nicola_pav: the final output will be mismatched
15:41  nicola_pav: the final output will be mismatched
15:41  taylanub: well, possible but quirky, abrotman15:41 
 taylanub: well, possible but quirky, abrotman
15:42  nicola_pav: shall i put everything in the while loop?
15:42  nicola_pav: shall i put everything in the while loop?
15:42  koala_man: abrotman: no, but maybe you can work something out with exec
15:42  koala_man: abrotman: no, but maybe you can work something out with exec
15:42  abrotman: hrm, it's been running awhile, not sure it's worth it just for informational output
15:42  abrotman: hrm, it's been running awhile, not sure it's worth it just for informational output
15:43  nicola_pav: can i join a varibale with a file?
15:43  nicola_pav: can i join a varibale with a file?
15:44  nicola_pav: join only joins two files
15:44  nicola_pav: join only joins two files
15:44  nicola_pav: the sort will ruin my last result
15:44  nicola_pav: the sort will ruin my last result
15:44 15:44  koala_man: <(echo "$FOO") gives you a simulated file with the contents of $FOO koala_man: <(echo "$FOO") gives you a simulated file with the contents of $FOO

15:46 15:46  pgas: nicola_pav: check http://awk.freeshell.org/ComparingTwoFiles it will work also without changing the file order pgas: nicola_pav: check http://awk.freeshell.org/ComparingTwoFiles it will work also without changing the file order

15:48  Yuri_Harrison: hello, I have var=(a b c d e f) how do I print a b c d?
15:48  Yuri_Harrison: hello, I have var=(a b c d e f) how do I print a b c d?
15:49  pgas: "${@:0:4}"
15:49  pgas: "${@:0:4}"
15:49  Yuri_Harrison: thanks
15:49  Yuri_Harrison: thanks
15:49  pgas: "${var[@]:0:4}" that is
15:49  pgas: "${var[@]:0:4}" that is
15:49  nicola_pav: pgas: it seems great but i do need to find the iterations
15:49  nicola_pav: pgas: it seems great but i do need to find the iterations
15:49  nicola_pav: i run it and it only finds it one time
15:49  nicola_pav: i run it and it only finds it one time
15:54  stockholm: how do i write a function that can return one or two variables?
15:54  stockholm: how do i write a function that can return one or two variables?
15:55  koala_man: functions can't return variables. they can set global variables, output on various FDs, and return exit codes
15:55  koala_man: functions can't return variables. they can set global variables, output on various FDs, and return exit codes
15:55  stockholm: i want to look how many eth devices i have and depending on the number i want to return mac for eth0 or for eth0 and eth1
15:55  stockholm: i want to look how many eth devices i have and depending on the number i want to return mac for eth0 or for eth0 and eth1
15:55  koala_man: typically you'd make it print two lines of output
15:55  koala_man: typically you'd make it print two lines of output
15:56  stockholm: koala_man: but how do i manage that on the receiving/calling side?
15:56  stockholm: koala_man: but how do i manage that on the receiving/calling side?
15:56  _abc_: is there a way to flush or autoflush stdout in bash scripts?
15:56  _abc_: is there a way to flush or autoflush stdout in bash scripts?
15:56  _abc_: without stty?
15:56  _abc_: without stty?
15:58  koala_man: !faq 1 > stockholm
15:58  koala_man: !faq 1 > stockholm
15:58  greybot: stockholm: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
15:58  greybot: stockholm: http://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
15:58  nicola_pav: pgas: there?
15:58  nicola_pav: pgas: there?
16:00  koala_man: _abc_: I don't think bash buffers, and there's no generic way (except unbuffer from Expect) to make apps do it16:00 
 koala_man: _abc_: I don't think bash buffers, and there's no generic way (except unbuffer from Expect) to make apps do it
16:01  _abc_: stty can be used to do the equivalent of IO_NBUF16:01 
 _abc_: stty can be used to do the equivalent of IO_NBUF
16:02  _abc_: or some other program I forget now
16:02  _abc_: or some other program I forget now
16:02  _abc_: that's why I asked
16:02  _abc_: that's why I asked
16:02  koala_man: are you thinking about input buffering now?
16:02  koala_man: are you thinking about input buffering now?
16:04  koala_man: apps generally don't buffer output when the output is a tty, but they don't check tty options
16:04  koala_man: apps generally don't buffer output when the output is a tty, but they don't check tty options
16:04  Yuri_Harrison: pgas: hey in C I can do for(i=0;I<sizeofvector;i++) vector[sizeofvector]=a; how do I do something like that in shell?
16:04  Yuri_Harrison: pgas: hey in C I can do for(i=0;I<sizeofvector;i++) vector[sizeofvector]=a; how do I do something like that in shell?
16:05  twkm: ''help for''
16:05  twkm: ''help for''
16:05  Yuri_Harrison: thanks
16:05  Yuri_Harrison: thanks
16:05  nicola_pav: i have  a text file containing ip addresses and mac addresses delimited by space
16:05  nicola_pav: i have  a text file containing ip addresses and mac addresses delimited by space
16:05  nicola_pav: how do i sort it based on the mac address
16:05  nicola_pav: how do i sort it based on the mac address
16:05  nicola_pav: ?
16:05  nicola_pav: ?
16:05  koala_man: ''man sort''
16:05  koala_man: ''man sort''
16:06  nicola_pav: that is the second field?
16:06  nicola_pav: that is the second field?
16:06  nicola_pav: koala_man: i use -n
16:06  nicola_pav: koala_man: i use -n
16:07  nicola_pav: but it will sort according to the first column
16:07  nicola_pav: but it will sort according to the first column
16:07  nicola_pav: not the second?
16:07  nicola_pav: not the second?
16:07  koala_man: so you specified that you wanted it to sort by the second column, but when you add -n it sorts by the first instead?
16:07  koala_man: so you specified that you wanted it to sort by the second column, but when you add -n it sorts by the first instead?
16:11  karthee: nicola_pav: -k 2
16:11  karthee: nicola_pav: -k 2
16:11  nicola_pav: karthee: thanks
16:11  nicola_pav: karthee: thanks
16:13  pgas: -k 2,2
16:13  pgas: -k 2,2
16:14  greycat: !learn sort To sort(1) on the second field: -k 2,2
16:14  greycat: !learn sort To sort(1) on the second field: -k 2,2
16:14  greybot: OK, greycat
16:14  greybot: OK, greycat
16:17  Znuff: Hi. Anyone got experience with tcpd and bash? How do I pass arguments to the script?
16:17  Znuff: Hi. Anyone got experience with tcpd and bash? How do I pass arguments to the script?
16:17  geirha: script "arg 1" "arg 2"
16:17  geirha: script "arg 1" "arg 2"
16:19  Znuff: I know how to pass arguments to a bash script, what I don't know is how to read them and how to send them trough tcp :)
16:19  Znuff: I know how to pass arguments to a bash script, what I don't know is how to read them and how to send them trough tcp :)
16:19  greycat: How do you run the script IN THE FIRST PLACE?
16:19  greycat: How do you run the script IN THE FIRST PLACE?
16:19  cthuluh: !$1
16:19  cthuluh: !$1
16:19  greybot: Positional parameters by example: echo "First parameter is $1, second is $2. You supplied $# of them. They will now all be copied to /tmp."; cp "$@" /tmp;
16:19  greybot: Positional parameters by example: echo "First parameter is $1, second is $2. You supplied $# of them. They will now all be copied to /tmp."; cp "$@" /tmp;
16:19  Znuff: grepper, inetd + tcpd
16:19  Znuff: grepper, inetd + tcpd
16:20  greycat: !exact
16:20  greycat: !exact
16:20  greybot: Please tell us EXACTLY what you typed, and EXACTLY what the error is.
16:20  greybot: Please tell us EXACTLY what you typed, and EXACTLY what the error is.
16:20  greycat: Fucking idiots.
16:20  greycat: Fucking idiots.
16:20  Znuff: fuckin' moron
16:20  Znuff: fuckin' moron
16:20  Znuff: uploadd stream udp nowait ibm86 /usr/sbin/tcpd /usr/bin/uploadd
16:20  Znuff: uploadd stream udp nowait ibm86 /usr/sbin/tcpd /usr/bin/uploadd
16:20  greycat: *plonk*
16:20  greycat: *plonk*
16:20  Znuff: get the point?
16:20  Znuff: get the point?
16:20  greycat: *unplonk*
16:20  greycat: *unplonk*
16:20  greycat: uploadd stream udp nowait ibm86 /usr/sbin/tcpd /usr/bin/uploadd "arg1" "arg2"
16:20  greycat: uploadd stream udp nowait ibm86 /usr/sbin/tcpd /usr/bin/uploadd "arg1" "arg2"
16:20 * Znuff facepalms
16:20 * Znuff facepalms
16:21  Znuff: I need "arg 1" to be sent trough tcp
16:21  Znuff: I need "arg 1" to be sent trough tcp
16:21  greycat: At least, I assume inetd.conf can handle quotes.  If not, it will be uglier.
16:21  greycat: At least, I assume inetd.conf can handle quotes.  If not, it will be uglier.
16:21  greycat: ''read''
16:21  greycat: ''read''
16:21  greycat: It's not an argument.  It's input16:21 
 greycat: It's not an argument.  It's input
16:22  greycat: And it has nothing at ALL to do with tcpd, so your question was doubly misleading.
16:22  greycat: And it has nothing at ALL to do with tcpd, so your question was doubly misleading.
16:22  greycat: It's all inetd.
16:22  greycat: It's all inetd.
16:22  greycat: inetd launches a program with its stdin/stdout connected to the socket.
16:22  greycat: inetd launches a program with its stdin/stdout connected to the socket.
16:22  Znuff: that's what I needed to know
16:22  Znuff: that's what I needed to know
16:22  greycat: If you want to read data from the socket, you just read from stdin in the normal way.
16:22  greycat: If you want to read data from the socket, you just read from stdin in the normal way.
--- Log closed Fri Oct 15 16:33:36 2010
--- Log closed Fri Oct 15 16:33:38 2010
--- Log opened Fri Oct 15 18:17:18 2010
18:17 --- Users 542 nicks [0 ops, 0 halfops, 0 voices, 542 normal]
18:17  tuxdev: I'm voting "dumb"
18:17  greycat: !wrapper > PythonNub
18:17  greybot: PythonNub: http://mywiki.wooledge.org/WrapperScript
18:17  greycat: ("neither")
18:18 --- Channel #bash was synced in 86 seconds
18:20 --- fairytale_magicb is now known as magicbook
18:24  greycat: Anyway, do you understand what [ 1 > 2 ] is doing, and why [ 1>2 ] is EXACTLY the same?
18:24  greycat: And why they're both incredibly WRONG?
18:25  greycat: Hint:  [ 1 > 2 ]   is the same as   [ 1 ] > 2
18:27  amidelalune: yes ">" is a redirect no bigger than. but I don't understand about the loop
18:28  greycat: The question is a trick question.  One does not "work".  They are both wrong.  They are both identical.
18:28  greycat: Your teacher is either confused or tricking you.
18:28  amidelalune: this is my teacher profile in ittoolbox
18:28  amidelalune: http://it.toolbox.com/people/jalal-hajigholamali/achievements
18:29  greycat: They... give people AWARDS... for posting on a forum?!  Just quantity, not anything to do with CONTENT?
18:29 --- magicbook is now known as fairytale_magicb
18:29  amidelalune: it seems so and it's not important for me jsut wanted to say he is not dump
18:30 * greycat clicks on a few things and finds a sample posting of his.
18:30  greycat: http://unix.ittoolbox.com/groups/technical-functional/shellscript-l/sftp-in-script-to-pull-files-giving-error-3817664
18:31  greycat: oh, here's another gem: http://unix.ittoolbox.com/groups/technical-functional/shellscript-l/to-access-the-oldest-file-in-a-directory-3816650
18:31  mehwork: is there a way to grep or search the bash screen/scrollback buffr?
18:31  mehwork: eg, grep stdout after its dumped to the screen
18:31  taylanub: mehwork: it's about your terminal emulator
18:32  greycat: highlight with mouse, paste it
18:32  taylanub: mehwork: bash only saves the commands
18:32  mehwork: greycat: i know i can do that, i'm wondering if there's a faster way that doesnt involve copy/paste :P
18:32  greycat: No.
18:32  mehwork: i wonder if gnu screen or tmux can do it
18:32  greycat: That would be pasting.
18:33  taylanub: i'm sure urxvt can do it in _some_ way. (e.g. perl plugin)  but i have no idea
18:35  tmr: Both screen and tmux support searching in scrollback history.
18:35  nicola_pav: how can i delete all lines from a txt file except for those including a word that i specify?
18:35 --- caemir_ is now known as caemir
18:35  nicola_pav: i use sed - i '/IBM/ d' file.txt to delete lines with that include the word IBM
18:36  nicola_pav: i want the reverse
18:36  nicola_pav: to delete lines excluding few words
18:37  nicola_pav: done
18:37  nicola_pav: i use !d
18:38  nicola_pav: but how do i specify more than one word?
18:38  nicola_pav: if i want to exclude lines containing IBM and Dell, etc.?
18:41 * amidelalune feels dumb :(
18:42  amidelalune: where should I look for the documentation about the meanning of []
18:43  amidelalune: i guess [ 1 > 2 ] is like [ 1 ] plus redirection :-?
18:47  taylanub: that has been told you about 20 minutes ago
18:48  amidelalune: taylanub, oops I read it,(belive) but I couldn't get till I got it myself,
18:48  amidelalune: tnx
18:55  nicola_pav: how do i delete lines from a text file using sed excluding a set of words
18:55  nicola_pav: ?
18:56  nicola_pav: sed - i '/IBM/ !d' file.txt will delete all lines except those containing the string IBM
18:56  tmr: Try ##sed
18:56  nicola_pav: what about excluding IBM and Dell?
18:57  amidelalune: you can easier do it with grep I guess
18:58  greycat: standard sed has neither -i nor the ERE functionality required to do a union operation.
18:59  nicola_pav: so its a forward command taking one argument?
18:59  greycat: a what?  ask ##sed.
18:59  amidelalune: join ##sed
18:59  nicola_pav: i already asked in ##sed, waiting what they have to say
19:12  Nabi: Why for work it, must be exist a newline character at end of file!
19:12  Nabi: sed -e '$!{N;N};s/foo\nbar//g' file
19:12  greycat: ask ##sed
19:13  nicola_pav: i found what i want using egrep 'IBM|Dell'
19:13  nicola_pav: i wonder if i can use sed
19:13  nicola_pav: still no answer from ##sed
19:14  greycat: sed does not have an | (union) operator by default.  GNU sed might, with some command-line switch.
19:14  greycat: maybe -r or -E or something, who knows
19:14  taylanub: gnu likes to allow \( \| \) \? \+ ... in BREs
19:15  pgas: \( \) is standard
19:15  taylanub: oh sorry, right
--- Log closed Sat Oct 16 11:43:50 2010
