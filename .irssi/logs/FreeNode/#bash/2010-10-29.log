--- Log opened Fri Oct 29 00:00:17 2010
--- Day changed Fri Oct 29 2010
00:00  Ward|: RenatoSilva, ah yeah i missed that lol, i thought you didn't know what option(s) totry
00:00  Ward|: good luck, please let us know if you find the solution
00:01 --- muzer is now known as MuzerAway
00:03  RenatoSilva: Ward|: I changed the script to add --enable-multibyte in configure call, compiling...
00:03  Ward|: RenatoSilva, yeah good luck
00:03  RenatoSilva: thanks
00:04  Ward|: is it jsut a standalone portable exe btw?
00:05  speps: hi guys, i have something like [1-9]*.[1-9].3.4
00:05  Ward|: if it is i'll make myself one too, can be nice to carry around
00:06  RenatoSilva: Ward|: it generates an .exe however I'm not sure if it's "standalone", I pasted it in msys and ran it from in there
00:06  RenatoSilva: Ward|: carry on pendrive? maybe you could try installing mingw/msys instead
00:07  RenatoSilva: Ward|: I'm just compiling bash because I'd like it to support unicode
00:07  Ward|: RenatoSilva, nah i have a mobile virtualbox :)
00:07  RenatoSilva: Ward|: from the source code I have here, it seems bash source code plus patches from mingw's team
00:07  Ward|: RenatoSilva, i know lol, i was just curious
00:08  speps: sorry hi guys, i have something like [1-9]*.[1-9]*.[1-9]*.[1-9]*, how can i get just the first two number? Ex 1.20.300.4000 i want 1.20, i've made it with ${var%.*.*} but it does not work if numbers are more than 4 (ex 1.2.3.4.5) How can i subpattern the first two numbers separated by a dot? Thanks
00:09  ss0: I am trying to write and test a function that takes some values and then basically performs a sed -i on them, for systems lacking in gnu sed. http://paste.pocoo.org/show/282895/ can someone tell me what I am doing wrong?
00:09 --- MuzerAway is now known as muzer
00:09  RenatoSilva: Ward|, poisonbit: didnt work
00:10  poisonbit: RenatoSilva, the font you're using manages that chars ?
00:10  poisonbit: ss0, maybe putting  }  in its own line ?
00:10  poisonbit: or a ; before
00:10  Ward|: you can also try ##windows RenatoSilva
00:11  ss0: poisonbit:  interesting im surprised it needs it's own line
00:11  poisonbit: ss0, or a ; before      foo () { cmd1 ; cmd2 ; }
--- Log closed Fri Oct 29 00:18:35 2010
--- Log opened Fri Oct 29 00:18:59 2010
00:18 --- Users 537 nicks [0 ops, 0 halfops, 0 voices, 537 normal]
00:20 --- Channel #bash was synced in 103 seconds
00:21  speps: it does not work with more than 4 fields. i wanna a method to get it work with n fields (1.2, 1.2.3, 1.2.3.4, 1.2.3.4.5) so {var%.*.*} or {var$*.*.*} works just with 4 fields
00:21  sn18: # a=1.20.300.4000 b=${a%%.*} a=${a#*.} a=${a%%.*} ; echo "$b.$a"
00:21  evalbot: sn18: 1.20
00:22  poisonbit: the first sn18 IFS solution was pretty elegant
00:23  poisonbit: # IFS=. read -a a <<<"1.2.3.4.5.6.7.8.9" ; echo "${a[0]} ${a[1]}"
00:23  evalbot: poisonbit: 1 2
00:23  Tramp: # var=1.2.3.4.5; re='(^[^.]+\.[^.])\..*$';  if [[ $var =~ $re ]]; then echo "${BASH_REMATCH[1]}"; fi
00:23  evalbot: Tramp: 1.2
00:23  Tramp: but the IFS with read -a is nicer
00:25  speps: all good solutions, but again so there is no way to get it just with PS?
00:26  poisonbit: speps, the second sn18 solution is number safe too
00:26  poisonbit: # a=1.2.3.4.5.6.7.8.9 b=${a%%.*} a=${a#*.} a=${a%%.*} ; echo "$b.$a"
00:26  evalbot: poisonbit: 1.2
00:27  poisonbit: sn18++  :)
00:28  speps: ok thanks to all
00:31  X-N2O: why is it that when I do "head -n 30 file > file" it removes everything in file?
00:31  go|dfish: because redirection happens before command execution
00:32  go|dfish: so file is empty before head runs
00:32  go|dfish: use a different name for the output ...
00:32  X-N2O: i see, thanks
00:32  X-N2O: so if i did "head -n 30 file > tmp & mv tmp file" would it be ok?
00:32  go|dfish: yep
00:32  X-N2O: :)
00:33  X-N2O: im starting to like bash :D
00:36  poisonbit: X-N2O, there is more than one way to do it;   sed -i -n 1,30p file.txt
00:36  geirha: ed -s file <<< $'31,$d\nw'
00:36  poisonbit: eh
00:36  X-N2O: :o
00:36  X-N2O: nice
00:37  X-N2O: what about, say, removing a specific line from a file, I'd normally do it like this: grep -v pattern file > tmp & mv tmp file
00:38  X-N2O: is there a shorter way to do that?
00:38  poisonbit: sed -i 's/pattern//g' file
00:38  geirha: ed -s file <<< $'g/pattern/d\nw'
00:38 --- boaz_ is now known as boaz
00:39  X-N2O: lol, nice
00:39  X-N2O: thanks a lot guys
00:41  poisonbit: errr sorry:  sed -i '/pattern/d' file.txt  to make exactly the same
00:42  geirha: Except that GNU sed overwrites the file while ed edits the file.
00:42  poisonbit: ed is posix ?
00:42  road-runner: ok
00:42  geirha: Yes
00:42  X-N2O: so, say, for a 5 GB log, which would be faster?
00:42  road-runner: I got a file
00:43  road-runner: has long list of app1 box1
00:43  road-runner: appX box
00:43  road-runner: I got a lsit of BAd boxes
00:43  road-runner: I wana remove from first file
00:43  road-runner: whats best way?
00:43  geirha: X-N2O: ed most likely. sed will need twice the space.
00:43  X-N2O: i see
00:43  road-runner: I think some kinda grep ||
00:44  poisonbit: thats a good reason to look more at ed
00:44  geirha: sed -i writes to a temporary file, then when its done, it overwrites the original. Just like your grep -v pattern file > tmpfile && mv tmpfile file   ... sed -i just does it transparently.
00:45  hengha: hi, is there a way to do unzip on the remote ssh box via rsync ? rsync -avz -e "ssh -i $mykey" $src.gz $user@$host:, this way, it just got rsynced over, but I need to unzip $src.gz manually afterwards, thanks
00:45  poisonbit: geirha, enlightening news
00:45  geirha: ed edits the file directly, like any other file editor
00:45  poisonbit: yes, i've used vim sometimes, but ed is posix
00:46  poisonbit: vim as cmd, not as interactive editor
00:46  mar77i: hey, something very off-topic: should I write Linux with a capital in, say, a letter?
00:46  mar77i: *L
00:46  prince_jammys: I would
00:48  mar77i: I guess, it's the same for Bash and Python then... damn :(
00:49  humpty: geirha: ed's man says: "If invoked with a file argument, then a copy of file is read into the editor’s buffer.  Changes are made to this copy and not directly to file itself."
00:49  geirha: humpty: Hm. Good point. I don't know how well it will handle a 5 gig file.
00:54  poisonbit: ex (not ed) posix says:   "This section uses the term edit buffer to describe the current working text. No specific implementation is implied by this term. All editing changes are performed on the edit buffer, and no changes to it shall affect any file until an editor command writes the file"
00:57  poisonbit: ed posix sais:  "The ed utility shall operate on a copy of the file it is editing; changes made to the copy shall have no effect on the file until a w (write) command is given."
00:59  poisonbit: open("file.txt", O_RDONLY)
00:59  poisonbit: open("./sedPPmI01", O_RDWR|O_CREAT|O_EXCL, 0600) = 4
01:00  poisonbit: from strace, so finally maybe all works the same,  ed, head+mv, sed -i...
01:02  Al2O3: I'm interested in on condition of a file containing a string to delete it, how may this be done in bash?
01:02  poisonbit: pure bash? or do you accept using grep solutions ?
01:03  Al2O3: could use grep
01:03  poisonbit: if grep word file; then rm -f file; done
01:03  poisonbit: if grep -q word file; then rm -f file; done
01:03  Al2O3: -q is quiet?
01:03  poisonbit: is to avoid the match output
01:04  poisonbit: if grep -q word file 2>/dev/null; then rm -f file; done  # to hide STDERR too
01:05  cthuluh: or grep -qs
01:05  poisonbit: geirha, ed uses open("/tmp/tmpf9aeu5V", O_RDWR|O_CREAT|O_EXCL, 0600) = 3  too
01:05 --- muzer is now known as MuzerAway
01:06  cthuluh: iirc ed tries to open a file in /tmp on startup, but doesn't actually use it
01:06  poisonbit: yes, it's used before open the target file, that seems courius to me
01:06  cthuluh: (well, I'm only talking about GNU ed)
01:06  poisonbit: and unlinked inmediatly
01:06  italic: does anyone know how to log output from 'screen' to a dir, or pass screen commands via the commandline?
01:07  poisonbit: italic, irc is not a manual index
01:07  italic: well google doesn't do to well with screen
01:09  poisonbit: italic,  I've some  'screen -t tab1 cmd1' lines (tab2 cmd2, tab3 cmd3) on a rc file, and I've many rc files, so I can call screen with the file I need if that idea helps you
01:09  italic: poisonbit: thanks
01:10  poisonbit: to log a screenshot just press ctrl+a then h, the dir is configurable in config file too
01:11  poisonbit: hardcopy_append on
01:11  poisonbit: hardcopydir "${HOME}/.screen/"
01:11  italic: right, but can you pass that command via the command line?
01:12  italic: without reading an screenrc file
01:12  poisonbit: that lines are config options
01:12  poisonbit: mmm don't use to change options interactively
01:12  italic: im using screen to run a server in detached mode
01:13  italic: i use -L to log, but it clutters up my dir
01:14  poisonbit: maybe the #screen people knows better
01:15  italic: oh thanks, i dont know that was there
01:52  RenatoSilva: what is \347 and \343 in cd autocompletion?
01:53  ferret: # echo $'\347'
01:53  evalbot: ferret: no output
01:53  ferret: is it in a bind command?
01:53  geirha: Characters that can't be displayed by the character set you're currently using.
01:54  geirha: Or maybe I'm guessing too much.
02:02  RenatoSilva: ferret: I type cd /d/Programa and it autocompletes with these chars, they somehow correspond to ç and ã
02:06  RenatoSilva: ha! it's octal for its unicode code point
02:09  RenatoSilva: Any bash developer? Why does bash would complete a path with \377 (unicode code point 0xE7) rather than the actual character ç ?
02:16  RenatoSilva: is there a way to make bash tell what locale it is *actually* using? The env vars are being ignored here
02:21  geirha: Could just be some broken programmable completion code you've sourced ... like the crap that ships with debian.
02:23  robinatw: test
02:23  go|dfish: robinatw: pass
02:26  rocktop: how do I extract user in this string:  /home/user/public_html ?
02:26  robinatw: go|dfish: thanks
02:28  geirha: robinatw: With two PEs or a read
02:29  geirha: robinatw: err, sorry, meant rocktop
02:30  rocktop: geirha, what ?
02:30  geirha: !faq 100 > rocktop
02:30  greybot: rocktop: http://mywiki.wooledge.org/BashFAQ/100 -- How do I do string manipulations in bash?
02:37  Ward|: how do i check smaller then and vica versa in a if, please?
02:37  forken: -lt
02:37  geirha: With (( .. ))
02:38  robinatw: geirha: oh, i see..
02:38  geirha: E.g. if (( a < 5 )); then echo "$a is less than 5"; fi
02:38  Ward|: geirha, how do oyu mean that sorry?
02:38  geirha: !((
02:38  greybot: ((...)) is an arithmetic command, which returns an exit status of 0 if the expression is nonzero, or 1 if the expression is zero. Also used as a synonoym for "let", if side effects (assignments) are needed. See <http://mywiki.wooledge.org/ArithmeticExpression>.
02:38  Ward|: geirha, ah ok thanks :)
02:38  Ward|: geirha, i was typign while you said that i didn;t see
02:39  Ward|: thanks forken
02:39  geirha: if only tests the exit status of a command. It cannot do any comparison of any sort.
02:40  geirha: In bash, you'd typically use a (( .. )) command to compare numbers. In sh, you'd use a [ .. ] command to do the same.
02:48  Ward|: lol it also counts the numerical value of certain chars i notice
02:48  Ward|: when i feed it a char
02:49  Ward|: how can i make sure the input is numerican?
02:49  Ward|: numerical
02:56  Draz: Hello all, my ask for some help with a bash script I just wrote?
02:57  forken: Draz, ask
02:58  Draz: Thanks, it's a simple script, only contains an if statement
02:58  Draz: #!/bin/bash
02:58  Draz: Woops
02:58  Draz: Thought that would copy it all in
02:58  Draz: ><
02:59  Draz: if test -d task$1 ; then ; cd task$1 ; else mkdir task$1 ; fi
02:59  forken: you can use codepad.org if you want to paste something long
02:59  Draz: Nah, that's it
03:00  Draz: I don't get any working output, it never cds, even if the dir is there
03:00  Draz: I'll just check if this version makes the directories at least
03:00  geirha: !faq valid > Ward|
03:00  greybot: Ward|: http://mywiki.wooledge.org/BashFAQ/054 -- How can I tell whether a variable contains a valid number?
03:01  HorkingGuts: What are you passing as $1 Draz?
03:01  geirha: !faq change dir > Draz
03:01  greybot: Draz: http://mywiki.wooledge.org/BashFAQ/060 -- I'm trying to write a script that will change directory (or set a variable), but after the script finishes, I'm back where I started (or my variable isn't set)!
03:01  italic: if i have ./myscript -f file; how can i echo strings to create a file to pass to it?
03:01  Ward|: geirha, yeah i already found thanx anyway :)
03:01  geirha: Draz: Also, you need to learn to quote
03:02  forken: mkdir creates the if it doesn't exist so you can do mkdir then cd
03:02  Draz: I have a number of directories task1.1 task1.2, etc
03:02  Draz: 1.1 or 1.2 would be the $1
03:02  Draz: I call it from bash just as task 1.1
03:02  Draz: It's a little thing mainly as an experiment
03:02  geirha: Draz: The cd will only affect the script and any child proceses. It will not affect the parent
03:03  geirha: Please read faq 60
03:03  Draz: Thank you
03:03  forken: http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_07_01.html
03:03  geirha: !tldp > forken
03:03  greybot: forken: the tldp bash guide is outdated, and in some cases just plain wrong. There's a reason it isn't in the topic.
03:03  forken: :D
03:04  forken: what are the alternatives
03:04  geirha: Draz: Use a function instead.  myfunc() { mkdir -p "task$1" && cd "task$1"; }
03:04  geirha: forken: See the /topic
03:07  Draz: why did you force mkdir to make parents as necessary?
03:07  Draz: Just in case I wanted instead to pass something like "1.1/test"?
03:08  forken: http://www.gnu.org/software/bash/manual/bash.html#Bash-Conditional-Expressions
03:08  forken: amiritenow?
03:08  Draz: I'm unsure about escape characters in bash, actually, maybe "1.1//test"
03:09 --- peshalto_ is now known as peshalto
03:09  forken:  escape -> \
03:10  Draz: Urgh, it's late here, forgive my mistake
03:10  geirha: Draz: that's not the only use of -p ...
03:10  Draz: :)
03:10  Draz: Ah...
03:10  Draz: no error if existing
03:12  geirha: yes, so if mkdir -p returns true, ynu know the dir exists
03:12  geirha: *you
03:12  Draz: Hence the AND
03:13  Draz: I'm confused as to how my original version of the script worked, now (it worked, then I changed it because I wanted to make it more efficient)
03:14  Draz: It was very similar to the one I posted above, unfortunately I didn't save it.
03:14  italic: is there a way to create a temporary file in a bash script, that can be read and written, but not to disk?
03:15  geirha: you cannot change the dir in your current shell with a script.
03:16  geirha: !fifo > italic
03:16  greybot: italic: http://mywiki.wooledge.org/NamedPipes
03:17  Draz: Ah, I was mistaken, I only tested half of the program
03:18  Draz: Thank you very much for your help geirha, forken
03:18  forken: I failed though :) thanks geirha
03:20  Draz: A chance to redeem yourself then, forken :P
03:21  Draz: geirha said "Draz: Also, you need to learn to quote", I assume he/she doesn't mean like that
03:23  Draz: forken, is quoting a bash technique I'm missing?
03:25  forken: http://mywiki.wooledge.org/Quotes
03:43  Draz: Thanks again forken and geirha
03:43  Draz: Bye for now.
03:57  road-runner: when I end a loop with & done
03:57  road-runner: do the operations in the loop all get done in order?
03:57  road-runner: just each loop itseration runs same time?
03:58  road-runner: or does the oder get jacked?
03:58  road-runner: order?
--- Log closed Fri Oct 29 04:18:55 2010
--- Log opened Fri Oct 29 04:19:17 2010
04:19 --- Users 502 nicks [0 ops, 0 halfops, 0 voices, 502 normal]
04:20 --- Channel #bash was synced in 98 seconds
04:50  m_fulder: could someone help me transelate a short ruby script ionto bash?
04:56  Krooks: How can I check what files are being use in my system ./
04:56  Krooks: ?
04:58  pibarnas: Krooks: lsof?
04:59  Krooks: pibarnas: ah yes. thanks
05:25  jmcantrell: anyone know why mktemp -d just outputs usage on osx?
05:58  DrkShadow: I have a loop, find / | while read f; do <operations on f>; [ $? -ne 0 ] && read n; done --- I want it to pause when I hit an error, but it just reads the next file.. is there any way to do this?
06:04  pgas: read n < /dev/tty
07:37 --- h4x0r is now known as Guest81379
07:48  aj910martin: Hey, There are a bunch a files that I want to port from a windows to a  linux machine, run a binary on them, and retrieve the results back to windows. What could be the best way to do it? I can do something like a scp and ssh to transfer the files and execute the binary, but how can I get back the results once the binary has finished its job.
07:50  twkm: ssh $linux cmd < in > out
07:57 --- samura1 is now known as MrCode
07:58  shadyabhi: whats the sed command for extracting perl-try-tiny-0.06-2-any.pkg.tar.xz from this ---> [2010-10-29 06:47] Running 'pacman -U --noconfirm /tmp/yaourt-tmp-root/PKGDEST.4kS/perl-try-tiny-0.06-2-any.pkg.tar.xz'
07:59 --- MrCode is now known as MrPoliceman
07:59 --- MrPoliceman is now known as MrCode
07:59  shadyabhi: ohk. was a silly mistake.. its sed -e "s/^.*\///g
08:02  aj910martin: twkm: ee it is GUI on windows, on which after pressing a button, a set of files are generated which are to be transferred to a Linux machine. Over there, a binary will operate on them and output some results. I need to get those results back. The results are a bunch of files. I am using cygwin to do the ssh and scp. But the problem is that the binary takes some to time to finish its job, and I don't know how much time will it take. So the scp to get
08:02  aj910martin: back the output files, needs to be run after a period time. How should I implement that?
08:07  twkm: obviously ignore what i suggest.
--- Log closed Fri Oct 29 08:17:13 2010
--- Log opened Fri Oct 29 08:17:34 2010
08:17 --- Users 493 nicks [0 ops, 0 halfops, 0 voices, 493 normal]
08:19 --- Channel #bash was synced in 102 seconds
08:23  Kartagis: hello
08:23  Kartagis: how can I do a for loop with multiple file extensions?
08:24  yitz_: for ext in bmp jpg gif ; do stuff ; done
08:24  Kartagis: hmm, thanks
08:26  Kartagis: that gave me avi: file not found
08:26  yitz_: I don't have any "avi" in my command...
08:27  Kartagis: yea, I adapted it to my command
08:28  yitz_: Clearly you did something wrong
08:29  Kartagis: this is my command: for a in mkv avi;do echo "Converting "$a" to "${a%.mkv}.mp4""; mencoder -of lavf -lavfopts format=mp4 -oac mp3lame -ovc lavc -lavcopts aglobal=1:vglobal=1:vbitrate=900:acodec=libmp3lame:abitrate=128:vcodec=mpeg4:keyint=25 -ofps 23.98 -af lavcresample=44100 -vf harddup,scale=320:-3 -mc 0 -noskip "$a" -o "${a%.mkv}.mp4" -sub "${a%.mkv}.srt" -subcp ISO-8859-9;done
08:30  yitz_: Try replacing the mencoder command with echo mencoder  to see what you're doing
08:36  kwame: hi guys, I have a question, when I cat a file I get something like
08:37  kwame: [dan@fw1 ~]$ cat test [dan@fw1 ~]$ with no carriage return
08:38  kwame: but when I edit the file and I save it, and I cat it, after the content of the file, my prompt appears in the next line rather than right after the content of the file
08:38  kwame: how can I delete the carriage return from a file?
08:38  yitz_: Use your editor to remove the carriage return
08:39  yitz_: Or use, say, head -c -2
08:39  yitz_: Erm. head -c -1
08:39  yitz_: (Possibly a GNU extension)
08:40  yitz_: Or possibly with ed <<< "$d" or similar...
08:56  Rakko: is it possible to use a variable within `` or $()?
08:57  Rakko: nm, it is.
08:57  Rakko: it seems that the var must be exported, though
08:59  cthuluh: 4# var='foo'; echo "$(echo "$var")"
08:59  shbot: cthuluh: foo
09:00  kwame: this is anoying
09:02 --- streuner__ is now known as streuner
09:04  cthuluh: kwame: are you using (n)vi(m)?
09:05  clever: complete -f -X '!*.@(avi|mpg|mkv|mp3|mp4|ogm)' mplayer
09:05  clever: i had this fixed yesterday to work on test.foo.avi, and now it seems it also doesnt work on /medi<tab>
09:06  clever: cant tab complete a full path anymore
09:06  kwame: cthuluh: vi, yes
09:06  kwame: not vim
09:06  kwame: but to remove the carriage return, I'm using head -c -1 file > file1
09:06  kwame: in centos 5 works, but in RHEL 5 it does not
09:07  clever: kwame: might be -1, the 'correct' way is -n 1
09:07  clever: -1 and 1- are the old ways to control head/tail
09:09  kwame: no dice with -n 1
09:09  kwame: funny that in CentOS 5 it does remove the \r
09:09  kwame: but in RHEL, it adds a ^M
09:09  clever: tr may work
09:10  kwame: this is with the head -c -1 file > file1
09:10  clever: something along the lines of | tr '\n' '' maybe
09:11  Rakko: is there a way to do something like do; blah blah blah; while cond
09:11  Rakko: in bash?
09:11  clever: Rakko: yep
09:12  clever: i think there should be
09:12  Rakko: how do you code it?
09:12  Rakko: I tried just like I wrote and it didn't work
09:12  clever: not sure, but it looks like it should be posible somehow
09:12  Rakko: I may just do while true; blah; if !cond break; done
09:14  cthuluh: blah blah blah; while cond; do blah blah blah; done
09:14  Rakko: too repetitive :)
09:15  cthuluh: but algorithmically correct
09:15  Rakko: true
09:15  cthuluh: kwame: see the documentation for your vi version. seems like nvi hasn't got a way to disable this, but vim should
09:42  Rakko: writing this scripts is harder than I thought
09:43  Rakko: I am trying to write a function to list all subdirs of the current dir
09:43  trash: find . -type d
09:43  trash: done.
09:43  danst_: find
09:43  trash: I just made your 100 line script obsolete.
09:44  lhunath: naughty.
09:44  Rakko: no
09:45  Rakko: I want it to display it like ls does and accept ls-style options
09:45  Rakko: and only recurse if I specify -R
09:45  trash: why oh why.
09:45  Rakko: so I can see fun attributes
09:45  Rakko: it's supposed to use find for its actual work, but I can't get the interface around that to work
09:45  lhunath: maybe you should use a tool called 'ls'.
09:46  lhunath: find also has a -ls predicate.
09:46  lhunath: that may be non-standard
09:48  Rakko: oh, cool
09:48  lhunath: norecurse=1; while getopts :r arg; do case $arg in r) norecurse=;; esac; done; find . -type d ${norecurse:+-maxdepth 1} -ls
09:49  lhunath: myls() { norecurse=1; while getopts :r arg; do case $arg in r) norecurse=;; esac; done; find . -type d ${norecurse:+-maxdepth 1} -ls; }; myls -r
09:49  Rakko: wow... on OSX, find -ls does do an ls-like thing, but there's an extra first columb
09:49  Rakko: *column
09:49  Rakko: oh, first two columns
09:50  lhunath: surely you don't expect it to be equivalent to ls(1)'s output?
09:50  Rakko: yes, that's what I'm aiming for
09:50  Rakko: in format
09:50  lhunath: ... why?
09:50  Rakko: why not?
09:50  lhunath: because you're being stupid?
09:50  Rakko: ass
09:51  lhunath: find's ls has all the information you may need.
09:51  Rakko: and then some
09:51  Rakko: I want the interface to be like ls's
09:51  trash: I can't see the purpose of it.
09:51  lhunath: and for some reason you find ls' output to be the golden standard?
09:51  Rakko: that's nice
09:51  trash: Why do you need to reinvent it?
09:52  lhunath: you can use -printf to make your own format.
09:52  lhunath: or you can -exec ls -d {} +
09:52  lhunath: ld, I suppose
09:53  Rakko: thanks for the function
09:53  Rakko: I was just reading up on getopts
09:53  lhunath: !faq easily
09:53  greybot: http://mywiki.wooledge.org/BashFAQ/035 -- How can I handle command-line arguments (options) to my script easily?
09:53  lhunath: !find
09:53  greybot: http://mywiki.wooledge.org/UsingFind
09:53  Rakko: that's what I'm reading
10:14 --- Cain` is now known as Cain
10:18  Rakko: lhunath: your one-liner is quite nice. I've made a copy that lists executables too.
10:31  Ward|: how can i use a bash script to connect trough telnet to some host, then send a line, and wait for whatever text is returned, to then send a second line?
10:32  trash: Ward|: You cannot, use expect.
10:32  Ward|: trash, i read about expect, so i cannot wait for something to be returned?
10:32  Ward|: only sleep
10:33  trash: You cannot interactively wait for it.
10:34  Ward|: trash, let's say i want to echo something, then wait for whatever reply, how would i do that?
10:34  Ward|: (telnet put asside for a moment)
10:34  lhunath: reply=$(telnet <<< "something")
10:35  trash: I doubt he wants that.
10:35  Ward|: if i know how to od it with just a echo i could try something
10:36  lhunath: echo is a program that outputs arguments.  it's rarely ever useful.
10:36  lhunath: just like it's not useful in this situation either.
10:37  Rakko: couldn't one use netcat?
10:37  Ward|: lhunath, i know i cannot explain why, but if i know how to let echo wait for a reply before ending the echo process that would be nice
10:37  pgas: Rakko: not if you want telnet
10:37  Ward|: pgas, Rakko lhunath i wouldn't mind using netcat if it's more conveniant
10:38  pgas: telnet is a protocol, netcat just open the socket.
10:38  pgas: telnet != netcat
10:38  Ward|: netcat will do :)
10:38  Rakko: oh, right
10:38  pgas: Ward|: then you should not use telnet at all
10:39  pgas: because telnet does more than just opening a socket
10:39  Ward|: pgas, ok, so how can i do it with netcat then, please?
10:39  Ward|: pgas, well its just some text i need to send an receive so i presume netcat will do fine
10:39  pgas: I can't find out for you
10:40  Ward|: i assumed you already knew
10:40  pgas: I'm talking about figuring out if you need telnet or not
10:40  Richlv: hrm. is suse studio supposed to be working currently ? :)
10:41  Ward|: pgas, i'm pretty sure netcat will do
10:41  Richlv: no matter what page i open after logging in, i get redirected to http://susestudio.com/user/new - but that only opens page header for me in opera
10:41  Ward|: like 99%
10:41  Richlv: oops. sorry.
10:42  Ward|: pgas, i tested netcat and it works fine
10:42  Ward|: pgas, how can i make it wait for a reply please?
10:42  Ward|: (or anyone else)
10:43  pgas: echo foo | nc blah 1010 | { read answver;  echo $answer; }
10:43  trash: *sigh*
10:44  Ward|: pgas, ah nice i didn't know you could use read in netcat, thanks :)
10:44  trash: You cannot us read in netcat.
10:44  trash: use even.
10:44  pgas: you might need fifos (or maybe use coproc in bash4) depending on what you want to do exactly
10:44  Ward|: trash, with netcat
10:44  Ward|: let me try to explain once more
10:45  Ward|: i want to wait for any text coming back after a sent something with netcat
10:45  Ward|: when the text is comming back the command has finished
10:45  trash: Like lhunath told you like hours ago.
10:45  trash: foo=$(command)
10:45  pgas: ah yes, that works too :D
10:45  geirha: answer=$(nc blah 1234 <<< "question")
10:46  Ward|: i have no clue how or where i would use that
10:46  pgas: (I was more thinking of something more complicated but don't have time to write the more complex solution)
10:46  Ward|: geirha, ah cool thanks again
10:46  Naib: Ward|. you could use xinetd
10:47  Ward|: trash, i did not ask about telnet / netcat hours ago btw
10:47  Ward|: trash, also apologies if i'm so boring that i make you sigh
10:47  Ward|: Naib, i'll google it
10:47  Ward|: thanks
10:48  Naib: Ward|. http://fluidmotion.dyndns.org/zenphoto/index.php?p=news&title=irssinotifypopupviassh   I use xinetd + a bashscript to provide popups from irssi notifications
10:56  Ward|: geirha, for some reason that just keeps giving me a >
10:57  Ward|: geirha, when i manually do it it works fine
10:57  pgas: !exact
10:57  greybot: Please tell us EXACTLY what you typed, and EXACTLY what the error is.
10:57  Ward|: answer= $(netcat 127.0.0.1 1314 <<< "foo"
10:57  Ward|: output is >
10:57  Ward|: well, no output i mean
10:58  pgas: no space after = , you miss a closing )
10:58  sn18: Ward|: thats not output
10:58  Ward|: sn18, i know like i immediately said right after
10:59  Ward|: pgas, ah yes :) (i had some brackets in what i replaced with "foo" )
11:00  Ward|: lol this does not seem to wait untill it gets something back though
11:01  pgas: it waits until netcat exits
11:01  Ward|: netcat itself exits before it gets what will be returned
11:02  Ward|: -w timeout i suppose :)
11:02  pgas: doubtful it more likely means nothing is returned
11:03  Naib: isn't the command nc  anyway for netcat?
11:03  pgas: netcat exits when the socket is closed
11:04  Ward|: pgas, i know for a fact stuff is returned
11:04  pgas: well you can find "netcat" too
11:04  Ward|: Naib, both work afaik
11:04 --- Weust`afk is now known as Weust`
11:04  pgas: Ward|: then you program works differently than you think it does.
11:04  Naib: system-dependant I guess
11:04  Ward|: Naib, nc is jsut easy to lokover so i personally prefer netcat
11:04  Naib: I dont' have netcat but do have nc
11:05  Naib: I guess ubuntu symlinks
11:05  Ward|: pgas, i guess i'm imagining the returning text
11:05  pgas: because it would be idiotic to close the socket before trying to write something
11:05 * Ward| calls for shrink=apointment
11:05  Ward|: the socket is not closed :s
11:05  Ward|: when i do it manually netcat will keep running
11:14  pgas:  v=$(echo GET / | nc google.com 80);echo "$v" # now figure out what's wrong with your example
11:15  pgas: nc doesn't exit before the socket is closed (if you don't kill it etc..that is)
11:15  pgas: also if nc keeps running manually then maybe var=$( ) is perhaps not what you want
11:16  Ward|: well it immediately stops here when i paste your exact example
11:16  Ward|: ' v=$(echo GET / | nc google.com 80);echo "$v" '
11:16  clever: pgas: 2 or 3 problems, you need a blank line after the http headers to actualy end the request and start getting data
11:16  Ward|: + v=
11:16  Ward|: + echo ''
11:16  clever: the request isnt valid
11:17  clever: and it works better if you add a connection: close header, so the remote end hangs up at the end (killing netcat)
11:17  pgas: clever: thank your for your concer, I'm not writing an http client, I'm just giving a working example to Wa
11:17  clever: ah
11:18  pgas: v=$(echo GET / | nc google.com 80);echo $v
11:18  pgas:  Set-Cookie: PREF=ID=adbe335982010fb6:FF=0:TM=1288343651:LM=1288343651:S=_u7fqI-
11:18  Ward|: wtf is wrong with my netcat
11:18 * Ward| kicks his netcat
11:18  clever: echo -e "GET / HTTP/1.0\nConnection: close\n" | nc google.ca 80
11:19  clever: works for http, just bearly
11:19  clever: i think its upset because i forgot the Host: header
11:19  Ward|: pgas, can you gimme the ip google.com resolves in from there ?
11:20  clever: and the cookies seem broken because of that, setting google.com cookies when i asked for .ca
11:21  mattcen: clever: I think the Host header is only acceptible to HTTP/1.1, not 1.0, though I could be wrong
11:21 --- MuzerAway is now known as muzer
11:21  clever: pgas: odd, it actualy works a bit with your example, i thought HTTP/1.1 was needed
11:21  clever: the version is completely absent and still kinda working
11:21  sn18: wasn't Connection: close necessary only for HTTP 1.1
11:21  Ward|: i;m wondering why it does not work here
11:21  clever: uh, even the \n\n is missing
11:21  clever: sn18: might be
11:23  Ward|: anymore ideas on how to find what goes wrong?
11:24  clever: Ward|: i always go directly for strace
11:24  clever: echo -e "GET / HTTP/1.0\nConnection: close\n" | strace nc google.ca 80
11:25  clever: in this case, strace -e trace=read,connect,socket,select looks best
11:25  Ward|: clever, that outputs so much crap i have no idea where to look
11:26  Ward|: half the crollback of my terminal is filled
11:26  clever: if its frozen, then look at the last line
11:26  Ward|: its not frozen it jsut stops
11:26  Ward|: liek immediately
11:26  Ward|: and
11:26  Ward|: + v=
11:26  Ward|: + echo
11:26  Ward|: pgas 's line
11:27  Ward|: clever, your line just keeps running forever
11:27  Ward|: clever, sorry no it also immediately exits
11:27  Ward|: had a paste error in yours
11:28  clever: dont know then
11:36 --- Bersam is now known as Bersam|away
11:43  nocturnal: could someone explain to me what it means when the manual says Parameter Expansion. talking about ${parameter} is it a variable? and how is it expanded?
11:43  nocturnal: i guess what i'm after is a definition of expanding a parameter
11:44  Naib: !PE > nocturnal
11:44  greybot: nocturnal: Parameter Expansion is the expansion of a parameter: "$foo", "$1". You can use it to perform string operations: "${file%.mp3}", "${0##*/}". Remember to *always* quote them. See http://mywiki.wooledge.org/BashSheet#Parameter_Operations
11:47  nocturnal: oh i see. it's basically what i suspected but i get so insecure when the english is hard to interpret. as it is not my native language.
11:47  nocturnal: thank you Naib
11:54  ernetas: Hey guys.
11:54  ernetas: "echo {1,2,3,4,5,6,7,8,9,10}" is cool, but could I do something like "echo {1-10}" without loops?
--- Log closed Fri Oct 29 13:09:38 2010
--- Log opened Fri Oct 29 14:02:00 2010
14:02 --- Users 514 nicks [0 ops, 0 halfops, 0 voices, 514 normal]
14:02  grawity: Is using \ the only good way to split 'export PATH=' into multiple lines?
14:03 --- Channel #bash was synced in 100 seconds
14:05  paissad: guys, cat <<"eof" or cat <<eof does not consider \t  in the text i entered !
14:05  paissad: is there a way to handle it ?
14:05  koala_man: you mean you want to expand \t into tab?
14:05  paissad: yes
14:05  Richlv: ergh, i meant 'find', of course. so one could calculate how many days ago that specific date was, pass "startofday" option (or what was it) to find and filter by ctime/mtime
14:06  grawity: paissad: use the Tab key instead?
14:06  Richlv: (there most likely is a better solution, though :) )
14:06  paissad: grawity, i already think about that ... but is it possible to use \t ?
14:07  koala_man: paissad: no
14:07  paissad: koala_man, ok thanks .. i would have to use echo -e instead ;)
14:07  grawity: Richlv: "-newerXY" in find's manual looks like something useful
14:08  koala_man: paissad: you can use sed to replace the \ts yourself
14:08  paissad: ok
14:10  humpty: # var=$'\tfoo' cat <<EOF $var EOF
14:10  evalbot: humpty: Missing terminating quote, bracket or keyword
14:11  grawity: Heredocs can't be collapsed to a single line, can they
14:11  humpty: no
14:16  pgas: grawity: well, bash has a "here string"
14:16  grawity: the <<< thing?
14:16  pgas: yes
14:16 * grawity was just commenting on humpty's attempt above
14:17  pgas: ah ok
14:17  grawity: ...I hope someone will make $PATH an array.
14:19  pgas: since posix doesn't define arrays and even bash doesn't export arrays it's unlikely to happen soon
14:20  mountains: Hi -- if i wish to test to see if a variable is non-empty -- i'm currently doing this:  [ "$FOO" != "" ] -- is this any better/preferred over [ -z "$FOO" ] or do they both do completely different things?
14:21  grawity: mountains: Both are equal.
14:21  grawity: pgas: Well, it could keep it as an array internally, but special-case the exporting. Or at least accept the () syntax when defining it...
14:29  paissad:  cat <<"eof" | tee | mail -s "lol" paissad@localhost
14:30  paissad: i would like to see the text before it's delivered !
14:30  paissad: but i get nothing .. how should i proceed ?
14:30  grawity: paissad: tee /dev/tty, if you're running it interactively
14:31  geirha: mountains: Actually, they do the opposite thing.
14:31  grawity: paissad: alternatively, tee >(mail -s ...)
14:31  paissad: grawity, ah ok ... i will try your 2nd option
14:31  geirha: mountains: -z returns true if empty. The != "" returns true if not empty. I'd use [[ $foo ]] or [[ -n $foo ]]
14:31  paissad: grawity, i won't always use the script interactively
14:32  grawity: paissad: btw, the 'cat' seems useless here
14:32  grawity: paissad: you can just do tee <<"eof"
14:33  paissad: grawity, ahhhh, i never knew that option ;)
14:33  paissad: grawity, btw .. i can do such things with car, tee & what else ?
14:33  grawity: paissad: any program that reads from stdin.
14:33  paissad: ok ok, got it
14:34  paissad: thanks for all
14:34  grawity: First you need to understand stdin/stdout redirection, > and <
14:34  grawity: Then << and <<< becomes simple.
14:35  paissad: <<< ?
14:35  geirha: !<<<
14:35  greybot: Here strings. Similar to here documents: The word after <<< and a newline are passed to the standard input of a command. Syntax: ''command <<< "some sentence"'' (Like ''echo "some sentence" | command'', but without the overhead of the subshell)
14:37  grawity: Is 'echo >&2 "error: ..."' evil?
14:40  pgas: it will probably confuse the average shell scripter ...now don't know if it's evil
14:40  ScriptFanix: I'd say yes, because there are chances one would miss the redirection
14:41  koala_man: I'd say no, and that it's better and more readable than having it at the end
14:41  roxlu: exit
14:41  nifty: backup_file $FILE
14:41  nifty: 	CONFIGS=""
14:41  nifty: 	COUNT=0  -- Noob question, how do I make multiple entries for "configs=", as in place more than one? (not sure if  this makes any sense at all)
14:41  geirha: !array > nifty
14:41  greybot: nifty: An array maps numbers to strings. Bash 4 also has associative arrays (maps strings to strings). See http://mywiki.wooledge.org/BashSheet#Arrays
14:42  manhunter: geirha: yes ,that is a good link for array
14:42  geirha: !varcap > nifty
14:42  greybot: nifty: By convention, we capitalize environment variables (PAGER, EDITOR, ..) and internal shell variables (SHELL, BASH_VERSION, ..). All other variable names should be lower case. Remember that variable names are case-sensitive; this convention avoids accidentally overriding environmental and internal variables.
14:43  mountains: geirha / grawity thank you.
14:44  nifty: Sorry, I'm little confused, which of the arrays are used for "multiple entries" ?
14:44  mountains: I have a few bash functions - and in each i have a call to "die foo" -- where:  die() { echo "$@" >&2; return } -- is there a way I can halt anything further from happening from die()  Obviously I can't use "exit" as that quits my shell.
14:47  geirha: nifty: Either ...
14:47  depesz: hi. wrote a simple script http://privatepaste.com/f1fd06637e - but the problem is that it never ends.
14:47  grawity: nifty: "Normal" ones
14:48  depesz: i.e. after writing "all done" - it just stays there, doesn't do anything, tee is started.
14:48  pgas: you can perhaps do hacks like use exit, but set a variable in trap eg, die=1, and then trap 'if [ "$die" = 1];then die=0;else exit;fi' EXIT
14:48  depesz: any idea on what I screwed?
14:48  grawity: nifty: configs=(x y "a b c")
14:48  geirha: mountains: Wouldn't it make sense to have the die function exit the shell?
14:48  grawity: geirha: Not when it's the interactive shell
14:49  geirha: It doesn't make sense to use die in an interactive shell
14:50  pgas: alternatively you could define your function so that they start in a subshell foo () ( echo blah; die; )
14:50  mountains: geirha: No -- I *source* the file, and make use of the functions in it, but wanted to centralised error messages, and hoped there were a way to stop execution from the *calling* function on calling die() in my example above, which wasn't exit() and which didn't rely on checking the return value from die() in each time, as this defeats the point, IMO, of trying to do this.
14:52  mountains: pgas: That would just exit the subshell.
14:53  Error404NotFound: i am looking for a way to compare 2 directory trees for: a. any missing files in either directory, b. difference between files with same names inside those 2 top level dirs
14:53  pgas: mountains: well, I though that was what you wanted
14:53  nifty: what are "$1" and "$i" - I can't find any reference in  the file for them ?
14:54  depesz: Error404NotFound: diff -urN dir1/ dir2/
14:54  grawity: nifty: "$1" is the first argument given to the script or function
14:54  grawity: nifty: "$i" is just a variable named 'i'
14:54  geirha: mountains: Maybe  while true; do source ./file; break; done
14:54  Error404NotFound: depesz, damn, did it miss that on man page... thanks :)
14:54  geirha: mountains: That would allow you to run break from the function
14:54  geirha: mountains: Hm. Or maybe not, that would be messy if it's called inside another loop
14:55  pgas: mountains: anyway the closest thing to a try catch is while...;break; ...done .ie not much
14:56  pgas: ah yes, what geirha said, it has the obvious drawback that you can't call die() in a loop
14:56  Error404NotFound: depesz, its a little too verbose, i just want to list names of missing/different files
14:57  depesz: Error404NotFound: | grep -E '^(\+\+\+|---)'
14:57  mountains: geirha: Hmm, that's not what I want to do either.
14:58  Error404NotFound: depesz, lovely :)
15:17  pinkisntwell: is it possible to see who set a variable? i'm running cygwin and something keeps changing my HOME variable
15:18  trash: pinkisntwell: No.
15:18  lhunath: pinkisntwell: bash -xv
15:19  pinkisntwell: lhunath: what does that do?
15:21  trash: That might show when's being set, not by whom.
15:22  pinkisntwell: so there's no way to do it then?
15:23  blackpenguin: pinkisntwell: the way to is to find when it happens, and then examine the lines before and after to see if you can identify where this might be
15:26  pinkisntwell: why can programs change my HOME variable though?
15:26  pinkisntwell: is it possible to protect it? sorry i don't know much about bash
15:27  pgas: pinkisntwell: they can't
15:27  pgas: only the parent of you current shell can change it
15:27  pinkisntwell: so how does it keep changing? is it a cygwin thing?
15:28  pinkisntwell: can they change it if i export it?
15:29  ScriptFanix: Are Process Substitutions ran in subshells?
15:33  nifty: grawity: would you please take a look at that: http://pastebin.ca/1976320 - How do I enable multiple variables/entries - where a user randomly picks from variables?
15:38  pgas: ScriptFanix: yes
15:38  ScriptFanix: nifty: why don't you use arrays?
15:40  ScriptFanix: pgas: thanks. Have to find another way then…
15:40  pgas: ScriptFanix: what are you trying to do?
15:42  ScriptFanix: I have one function containing a while loop that launches tasks in the background for parallel processing of a huge number of files
15:43  ScriptFanix: and a second functions that display the status of the oerall process using dialog
15:44  ScriptFanix: the first function, ProcessFiles, increments the variable filenum after generating a background process
15:45  ScriptFanix: and the latter need it to create a nice progressbar using dialog
15:47  lhunath: pingveno: no.
15:47  geirha: ScriptFanix: Use a fifo.
15:47  lhunath: arr.  pinky has left.
15:48  geirha: ScriptFanix: Create a fifo. Your first loop writes percentage to the fifo, and your dialog reads that from the fifo.
15:49  ScriptFanix: geirha: yup, i wanted to avoid it but I don't see any better solution
15:49  geirha: ScriptFanix: You might be able to do it with process substitution as well.
15:49  blackpenguin: ScriptFanix: or use "jobs -p | wc -l" instead of your variable.
15:50  ttc: hello
15:50  ScriptFanix: blackpenguin: that was the first implementation, but it's not accurate, as there are things in background that should not appear there
15:50  ttc: I think this is a readline issue, or might be even gnome keyboard config.
15:50  geirha: exec 3> >(dialog ...); ...; for file in *; do ...; echo "$percent" >&3; done
15:51  ttc: Anyways: when I type Alt-. in xterm, it print ®
15:51  ttc: it drived me crazy
15:51  ttc: s/drived/drives/
15:52  grawity: ttc: Fixable easily
15:52  ttc: grawity, how?
15:52  pgas: more like an xterm settings try ( Shift+left click) on xterm and check Alt Sends Escape
15:53  grawity: ttc: 'Xterm*metaSendsEscape: true' in ~/.Xresources, or toggle it in the Ctrl-LeftClick menu
15:53  ScriptFanix: geirha: mm nice, I'll have and coffee then I have a full page of code to rewrite in order to use this :)
15:53  pgas: oh yeah control shift
15:53 * grawity doesn't remember which of the {Left,Middle,Right}Click menus is it in
15:54  blackpenguin: ScriptFanix: process bars are rarely accurate at all. IMO their purpose is to tell the user there is still something running and give an _aprox._ idea about progress. but yes, it depends on how much inaccurate it is if its worth to work on accuracy
15:54  ttc: pgas, it works!
15:54  geirha: !>( > ScriptFanix
15:54  greybot: ScriptFanix: Process Substitution -- <(cmd) and >(cmd) -- see http://mywiki.wooledge.org/ProcessSubstitution , or http://mywiki.wooledge.org/BashFAQ/024 for a common use
15:54  pgas: check grawity's tip to make it permanent
15:55  ScriptFanix: blackpenguin: well, the progress function does not only dshow percentages but also a <current file number> / <total number of files>
15:55  ttc: ah!!! thanks guys! gravity, pgas
15:55  ttc: I deserve a coffee :)
15:56  ScriptFanix: blackpenguin: and the oprocess is really really long, sox + oggenc on thousands of files, it can take days
15:56  ScriptFanix: so yes, you want to know if you're at 5% or 95%
16:00  blackpenguin: ScriptFanix: you dont' start them all at the same time then, do you?
16:06  ScriptFanix: blackpenguin: of course not, there a limit above which no new tasks processes are created plus a load limit
16:06  ScriptFanix: s/tasks //
16:14  ScriptFanix: blackpenguin: something like until [ ${#children[@]} -lt $max_instances -a $(sed 's/^[0-9.]\+ \([0-9]\+\)\..*/\1/' /proc/loadavg) -lt ${maxload:-10} ];do sleep 1 ; done
16:14  trash: *shudder*
16:31  geirha: !tests > ScriptFanix
16:31  greybot: ScriptFanix: In bash; consistently use [[ .. ]] to test strings or files and (( .. )) to test numbers or arithmetics. Do *NOT* use [ .. ] in bash, *only* in sh. See http://mywiki.wooledge.org/BashSheet#Tests
16:35  ScriptFanix: thanks for the advice
16:36  ScriptFanix: bad habits are hard to get rid of
--- Log closed Fri Oct 29 20:02:18 2010
--- Log opened Fri Oct 29 20:02:41 2010
20:02 --- Users 538 nicks [0 ops, 0 halfops, 0 voices, 538 normal]
20:02  yitz_: += appends
20:03  yitz_: opts=() to clear
20:03  sybariten: yeah, just did that ... thanks
20:03  sybariten: but what was the iname idea about then?
20:03  yitz_: iname vs name?
20:04 --- Channel #bash was synced in 114 seconds
20:04  sybariten: uh, i dunno, you added a short line up there...   opts+=(-o -iname "*.$i")    but i mean, your previous example worked fine
20:05  yitz_: What previous example? The earlier one was missing parts
20:05  xy: where can i find a good instruction about arrays?
20:05  yitz_: !array > xy
20:05  greybot: xy: An array maps numbers to strings. Bash 4 also has associative arrays (maps strings to strings). See http://mywiki.wooledge.org/BashSheet#Arrays
20:05  xy: thx
20:06  sybariten: yitz_: ah ok i think i see now... you jsut forgot the -name when you gave the first example (starting with #ext )... but added that later
20:07  sybariten: i was just trying out the loop-principle anyhow so it worked fine with the echo statement
20:10  asfjio: hello guys, yesterday i asked here a question how can i list directories that contains only digits in their names. we came up to this - shopt -s extglob; for dir in /path/to/*([0-9])/; do echo $dir; done  . then a problem occured when i put the text in bash script. the error was "syntax error near unexpected token `('". so i quoted the path like this shopt -s extglob; for dir in "/path/to/*([0-9])/"; do echo $dir; done . now my problem is that the last ...
20:10  asfjio: ... list the directories but in one line, or the for loop loops only once. can i fix it?
20:12  yitz_: The glob shouldn't be quoted
20:12  yitz_: The path may need quotes if it has whitesapces
20:14  asfjio: yitz_: but when i put it in executable file it complains. if i run the whole loop as one line it prints the results as separated i.e. 4 times.
20:14  asfjio: yitz_: probably that () brackets bother the loop.
20:15  tsaavik: hey all, does anyone know where i can lookup the exit status info of the mv command, getting a 256 in a script :D
20:16  xy: tsaavik man 1p mv
20:17  tsaavik: nothing about exit status in there, atleast on my machines :(
20:17 --- nicod is now known as niclone
20:17  tsaavik: info mv also yields no additional information
20:18  xy: tsvaaik: oh, on my machine it is ">0     An error occurred."
20:18  tsaavik: guess i need to find the source to mv :\
20:19  asfjio: yitz_: can you test it if it works if you put it in executable file?
20:20  grawity: tsaavik: ftp://ftp.gnu.org/gnu/coreutils/coreutils-8.5.tar.xz
20:20  tsaavik: ah, you rock, thanks
--- Log opened Fri Oct 29 20:27:33 2010
20:27 --- Users 544 nicks [0 ops, 0 halfops, 0 voices, 544 normal]
20:28  grawity: tailf log | grep --line-buffered "xyz"
20:28 --- Channel #bash was synced in 84 seconds
20:29  xy: I can't find the "sponge" command ( http://linux.die.net/man/1/sponge ) for my distribution. Can I write a shell script which does the same?
20:29  yitz_: asfjio: The shopt and for must be on different lines
20:32 --- calmar_ is now known as calmar
20:34  sybariten: yitz_: i'm almost there now but the find command isnt coming out correct. i wish i could see exactly what was called to find.... the echo statement looks fine but i shaved off some stuff to make it real for find
20:34  yitz_: !set-x > sybariten
20:34  greybot: sybariten: Setting the -x option on bash enables a debugging mode that makes bash output the command name and arguments that it will run (after all parsing and expansion has been applied). Set it by starting a script with ''bash -x ./myscript'' or putting ''set -x'' before the code you want to debug. ''set +x'' turns this behaviour off.
20:35  asfjio: yitz_: it didn't work also. but i found solution i think. i put the pattern in var patter="/path/to/*([0-9])/" and then do for dir in $pattern; do ... now it seems to be okay.
20:36  yitz_: Does your path have a space in it?
20:36  sybariten: yitz_: uhm... does that work when i first define a function , and then just run a function?   i tried "set -x mynewsearchthing /tmp/ " and it said "history"
20:36  sybariten: ++ history -a
20:36  walke847: so I'm trying to add something to my .bashrc file, that runs a command in the background only if it isn't already running
20:37  walke847: Right now this is the entry: if [ -z `pgrep metacity` ] ; then  `metacity --replace &` ;else echo "Done";fi
20:37  grawity: eww, [ -z `command` ]
20:37  yitz_: sybariten: set -x <ENTER> command <ENTER>
20:37  walke847: the command runs fine, just not in the background
20:37  yitz_: !ifgrep > walke847
20:37  greybot: walke847: if grep -q word "$file"; then blah blah; fi DO NOT use [[ or [ or ` or $() or any other crap. "if" expects a command. "grep" is a command. "[" is too. You don't need both, just the grep works because grep returns true (0) if a match is found, but not otherwise.
20:37  walke847: haha what would you suggest?
20:37  grawity: walke847: First, replace the "if [ -z `pgrep metacity` ]" with just "if ! pgrep metacity"
20:37  sybariten: i have something like that somewhere walke847 , if all else fails, /msg me here and i'll dig it up but now i gotta fix something before catching a bus
20:38  sybariten: yitz_: ah :)
20:38  walke847: thank you guys!
20:38  grawity: walke847: Then get rid of the second `` pair -- because with it, it actually waits for 'metacity' to exit, and executes anything that 'metacity' has output.
20:38  grawity: walke847: So it would be just "... then metacity --replace & fi"
20:39  sybariten: yitz_: damn thats handy. Its coming down to a backslash now i think. Bash seems to take it as an escaping-thing, but i really need the literal backslash
20:40  grawity: walke847: Next, throw the entire 'if pgrep then metacity' away and: flock -n "/tmp/$USER.$DISPLAY.metacity.lock" metacity --replace &
20:40  yitz_: sybariten: \\
20:41  grawity: walke847: Although, on the second thought, 'pgrep' might be more reliable... if it was pgrep -x
20:41  sybariten: but why is it ever "changed", if its not in an echo statement? What expands it?
20:41  yitz_: oh. flock. Fancy :)
20:41  yitz_: sybariten: Hard to comment without seeing it :P
20:41  sybariten: i understand
20:41  asfjio: yitz_: nope.
20:43  yitz_: asfjio: How about sharing the exact code you are running?
20:44  sybariten: i am running this now ...    tryme() { ext=(ppm frame meta); for i in "${ext[@]}" ; do opts+=(-o -name "*.$i"); done ; find $1 -not \\\( -type d ${opts[@]} \\\) ; }    when executed, find seems to make '\)'  with single quotes
20:44  sybariten: (note triple backslash...  single and double didnt work out well)
20:45  vjredd: echo 'this is a demo' | mailx -s "testing"  my@mailid.com        this has not work,  whatz wrong  ?  please help
20:45  paxl: How works the ternary operator in bash
20:45  paxl: blarg=(( [[ ${ptb_hotel[$i]} == none ]] ? "" : ${ptb_hotel[$i]} ))
20:45  yitz_: sybariten: Single or quoted ought to work fine
20:46  yitz_: Your variables ought to be quoted, sybariten
20:46  yitz_: vjredd: Is mailx installed?
20:46  sybariten: yeah i thought i was doing that yitz...  near the $i ...
20:46  vjredd: yitz_: yes mailx is installed
20:47  yitz_: vjredd: What doesn't work about it?
20:47  yitz_: sybariten: ALL the vars
20:47 --- xx is now known as xy
20:48  halo: if need to copy with scp command an mp3 file that contains in it's name characters like ( or ) or ' ' how i could do?
20:48  yitz_: paxl: [[ ${ptb_hotel[$i]} == none ]] && blarg="" || blarg="${ptb_hotel[$i]}"
20:48  vjredd: yitz_: just installed mailx and tried that command, it does not worked,  i have used yahoo, gmail ids, is anything wrong or should i need to configure some setting after installing mailx ?
20:48  paxl: yitz_, awesome !.. thanks
20:48  asfjio: yitz_: http://pastebin.com/yqphywCh
20:48  halo: like, scp -r 01_punk_(1981).mp3 root@server:01_punk_(1981)
20:48  yitz_: halo: Use quotes?
20:49  halo: i've tried but scp breaks the filename
20:49  halo: maybe i'm wrong
20:50  xy: halo: try in #linux
20:50  danst_: scp -r 01_punk_\(1981\).mp3
20:50  halo: escape...i didn't think it! thanks now try
20:50  Nilinpa22: or try netcat, the difference is that it is not encrypted
20:51  halo: no i need scp thanks anyway
20:51  yitz_: asfjio: Do you have a /path/to on your system?
20:51  yitz_: halo: You might be able to do it with printf %q
20:53  halo: never heard printf %q can i use it in combination with scp?
20:53  krzee: you could tgz it to a different filename and scp that :-p
20:53  yitz_: asfjio: Try putting the shopt outside the function
20:53  yitz_: !ssh > halo
20:53  greybot: halo: Secure SHell (See #openssh, http://mywiki.wooledge.org/CategorySsh) - To run bash code remotely; adapt: ssh user@host bash <<< "$(printf 'echo %q' "$localVar")"
20:53  halo: danst_, it don't work for me
20:53  yitz_: Or similar
20:54  halo: what is echo %q?
20:54  yitz_: halo: Try:  scp -r '01_punk_(1981).mp3' root@server:"$(printf "%q" "01_punk_(1981)")"
20:54  asfjio: yitz_: yes i have the path, when i put the shopt it worked. why is that?
20:55  yitz_: I don't know
20:56  xy: halo: perhaps     ssh root@server "cat file" > fileonyourlocalmachine      (file may contain wildcarts; e.g replace "(" with ? )
20:56  asfjio: yitz_: thank you very much!
20:57  yitz_: np
20:57  xy: btw: what does <<< mean?
20:57  yitz_: !<<<
20:57  greybot: Here strings. Similar to here documents: The word after <<< and a newline are passed to the standard input of a command. Syntax: ''command <<< "some sentence"'' (Like ''echo "some sentence" | command'', but without the overhead of the subshell)
20:57  halo: yitz: "%q: invalid directive"
20:57  yitz_: Using bash?
20:58  halo: to me? yes using bash
20:58  halo: toor
20:58  halo: ops
20:59  yitz_: ?
20:59  halo: writed in my root password :P
21:00  xy: I can't find the "sponge" command ( http://linux.die.net/man/1/sponge ) for my distribution. Can I write a shell script which does the same?
21:00  yitz_: Now write in your server name?
21:00  halo: however it pop out that strange message/warning and then it copy without any problem
21:00  halo: ehehe next time ;)
21:00  yitz_: xy: Just use a tempt file
21:01  yitz_: *temp
21:01  xy: yitz sth like "command > /tmp/... ; echo /tmp/..." ?
21:02  yitz_: cmd > tmp ; mv tmp file
21:02  nDuff: xy, did you try to install "moreutils" package?
21:02  grawity: t=$(mktemp); cat > "$t" && cat "$t" > "$1" && rm -f "$t"
21:02  grawity: Here's sponge.sh for you.
21:02  yitz_: sponge doesn't do much for you
21:03  xy: nDufl: I can't find moreutils for my distribution and I don't want to compile
21:04  nDuff: grawity, sure it's ideal to write() everything twice? I would copy permissions and mv "$t" "$1" instead, unless the definition of what the tool does precludes that.
21:05  grawity: nDuff: 'sponge' reads from stdin, which is not necessarily a file.
21:05  nDuff: grawity, right, so you need the cat > "$t" no matter what
21:05  grawity: nDuff: It's also usually used as a heavily-buffering replacement to ">" in such pipelines as: "foo < file | bar | baz > file"
21:05  nDuff: grawity, it's the cat "$t" > "$1" that I'm questioning.
21:06  grawity: nDuff: Hmm. Maybe you're right here. But copying permissions and ownership would be a pain.
21:06  grawity: nDuff: Considering that normal ">" doesn't affect anything.
21:06  nDuff: grawity, chown --reference / chmod --reference if you're on a GNU-ish platform
21:06  grawity: nDuff: Remember POSIX ACLs, xattrs, ownership, timestamps... Creation timestamps on ext4 are not yet accessible through API.
21:06  grawity: nDuff: And you can't chown without being root, either.
21:07 * nDuff shrugs; copy-and-replace is ubiquitous despite its faults (mostly on account of its atomic nature).
21:07  grawity: nDuff: Well, > isn't atomic either.
21:07  nDuff: indeed
21:08  nDuff: but it's only the second stage where a "replacement" is happening
21:08  grawity: So since 'sponge' normally acts as a buffering > ...
21:08  nDuff: so it doesn't matter that the first stage isn't atomic
21:08  nDuff: ahh.
21:08  grawity: copy-and-replace is really more painful in this case.
21:08  grawity: (I just listed why)
21:08  nDuff: Plausibly. There are strong use cases for either behavior
21:08  nDuff: so I'm hesitant to say one or the other is universally p referable.
21:09  nDuff: s/p ref/pref/
--- Log closed Sat Oct 30 00:29:52 2010
