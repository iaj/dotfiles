--- Log opened Tue Nov 30 08:31:41 2010
08:31 --- Users 91 nicks [0 ops, 0 halfops, 0 voices, 91 normal]
08:34 --- Channel #awk was synced in 221 seconds
14:12 --- wieshka is now known as wieshkalv
14:42  kotique:  hi. how do I match against 2 patterns a multiline file, in 1 command , with awk?
14:45  pgas: what do you mean by "multiline"?
14:46  pgas: what are you trying to do? find if a file contains 2 patterns?
14:47  pgas: kotique: ?
14:47  kotique: yep, 2x grep
14:48  kotique: Another approach is to read the file once, keeping track of what you've seen as you go along. In awk:
14:48  kotique: awk '/foo/{a=1} /bar/{b=1} a&&b{print "both found";exit} END{if (a&&b){ exit 0} else{exit 1}}'
14:48  kotique: anything more nicier?
14:48  pgas: looks nice enough to me
14:49  pgas: exit !(a&&b) #is perhaps leeter
14:50  kotique: perl -e '$both=0; while(<>){$both++ if /(razor|dcc)_check/;}; exit($both > 1 ? 0 : 1)'
14:51  pgas: it will be true if you find dcc_check 2time
14:51  pgas: s
14:51  kotique: hmm, hash table then?:)
14:52  pgas: duno why do you think it's nicer than the awk solution?
14:52  pgas: (perl has some options that make the while loop implicit like in awk btw)
14:53  kotique: perl -e '%matches=(); while(<>){$matches{$1}++ if /(razor|dcc)_check/;}; exit(keys %matches > 1 ? 0 : 1)'
14:53  kotique: that option is -n , but I need to init hash beforehand I think 
14:53  pgas: ok whatever..
14:54  kotique: oh, and put an exit afterwards:)
14:54  kotique: thanks
14:54  karthee: kotique: a worse idea .. grep 'yum'  *  |  grep  'install'  | awk -F: '{print $1}' | sort | uniq
14:54  karthee: kotique: a worse idea .. grep 'searchpattern1'  *  |  grep  'searchpattern2'  | awk -F: '{print $1}' | sort | uniq
14:55  kotique: yeah, but " in 1 command "
14:55  karthee: kotique:  1 command means ???  no pipes ?
14:55  kotique: 1 command means no 2 greps
14:55  kotique: perl -e 'while(<>){$matches{$1}++ if /(razor|dcc)_check/}; exit(%matches < 2)'
14:55  kotique: hehe :)
15:11  go|dfish: hmmm.
16:12  geirha: awk '$1~/(razor|dcc)_check/ && !(a[$1]++) {i++} END {exit i<2}'
18:07  unicode: hi, given a sequence ie; '123456789', sum their terms (at this case; sum is 45)
18:07  unicode: how can do it?
18:09  [diecast]: how do you match a tab? /\t/ for example
18:11  steve___: [diecast]: maybe /(\t)/
18:12  steve___: 4# echo -e "\tooga" | awk '/(\t)/'
18:12  shbot: steve___: 	ooga
18:12  [diecast]: doh, those werent tabs in the source! =/
18:13  [diecast]: \t and (\t) works, it was just spaces 
18:13  steve___: ahh
18:13  steve___: cool
18:13  [diecast]: heh
18:13  [diecast]: awk '!/^#/ && !/\t#/ && !a[$0]++'
18:13  [diecast]: trying to make a nice way to clean out conf files
18:14  [diecast]: removing comments
18:25  arturas: unicode: echo -n "123456789" | awk 'BEGIN{FS="";r=0} {for(i=1;i<=NF;++i)r+=$(i)} END{print r}'
18:29  unicode: arturas: wonderful! this is. thanks a lot
18:37  unicode: arturas: a question more; and if i would to multiply instead of sum? something like.. r*=$(i)
18:41  arturas: unicode: echo -n "" | awk 'BEGIN{FS="";r=1;t=0} {for(i=1;i<=NF;++i){r*=$(i);++t}} END{if(t){ print r }else{ print "no input"}}'
18:41  arturas: t is just in case there is an empty imput
18:44  unicode: great, very useful for me. thanks again!
18:47  arturas: echo -n "123as3" | awk 'BEGIN{FS="";r=1;t=0} {for(i=1;i<=NF;++i){if($(i)~/[0-9]/){r*=$(i);t=1}}} END{print t ? r : "no input"}'
18:48  arturas: excludes non integers
18:48  arturas: wow it seems that i am really bored right now :D
18:48  iaj: arturas: is having fun
18:49  iaj: s/://
--- Log closed Tue Nov 30 19:08:23 2010
--- Log opened Tue Nov 30 19:08:43 2010
19:08 --- Users 98 nicks [0 ops, 0 halfops, 0 voices, 98 normal]
19:10 --- Channel #awk was synced in 141 seconds
--- Log closed Tue Nov 30 20:32:31 2010
--- Log opened Tue Nov 30 20:37:53 2010
20:37 --- Users 96 nicks [0 ops, 0 halfops, 0 voices, 96 normal]
20:40 --- Channel #awk was synced in 137 seconds
--- Log closed Tue Nov 30 21:14:00 2010
--- Log opened Tue Nov 30 21:24:28 2010
21:24 --- Users 96 nicks [0 ops, 0 halfops, 0 voices, 96 normal]
21:26 --- Channel #awk was synced in 151 seconds
--- Log closed Tue Nov 30 21:36:20 2010
--- Log opened Tue Nov 30 21:46:42 2010
21:46 --- Users 96 nicks [0 ops, 0 halfops, 0 voices, 96 normal]
21:48 --- Channel #awk was synced in 138 seconds
--- Log closed Tue Nov 30 22:15:46 2010
--- Log opened Tue Nov 30 22:16:11 2010
22:16 --- Users 96 nicks [0 ops, 0 halfops, 0 voices, 96 normal]
22:18 --- Channel #awk was synced in 130 seconds
22:45 --- cuba33ci_ is now known as cuba33ci
--- Log closed Tue Nov 30 23:13:38 2010
--- Log opened Tue Nov 30 23:19:04 2010
23:19 --- Users 95 nicks [0 ops, 0 halfops, 0 voices, 95 normal]
23:21 --- Channel #awk was synced in 133 seconds
23:46 --- Natch is now known as Natch|
--- Log closed Wed Dec 01 00:00:31 2010
