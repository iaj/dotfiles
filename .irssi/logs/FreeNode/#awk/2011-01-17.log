--- Log opened Mon Jan 17 00:00:47 2011
--- Log opened Mon Jan 17 01:10:14 2011
01:10 --- Users 84 nicks [0 ops, 0 halfops, 0 voices, 84 normal]
01:11 --- Channel #awk was synced in 109 seconds
01:15  steve___: waldner: which client are you using?
01:33  pr3d4t0r: Yo!
01:34  pr3d4t0r: gawk experts:  is there a way to modify a file in place like perl does?  I don't know Perl, and need to just swap a line in a file.  Thanks in advance.
01:38  variable: if  I have // { total++ }  is that equal to FNR ?
01:42  pr3d4t0r: bash came to the rescue - thanks!
01:47  skskks: it it possible trim last caracter from awk? 
01:48  skskks: "INSERT INTO t1 (\"m\",\"a\",\"b\",\"c\",) VALUES (\"i\",\"1\",\"1\",\"1\",)"
01:48  skskks: i need to remove last ","
01:50  vkues: 4# awk 'BEGIN { string = "(one, two, three,)"; sub(/,\)/, ")", string); print string }' 
01:50  shbot: vkues: (one, two, three)
01:52  variable: if  I have // { total++ }  is total equal to FNR ?
01:52  variable: (at each point)
01:53  vkues: 4# echo file1 > file1; echo file2 > file2; awk '{ print ++total, FNR }' file1 file2
01:53  shbot: vkues: 1 1
01:53  shbot: vkues: 2 1
01:53  vkues: variable: shbot says "no"
01:53  variable: k
01:54  variable: why is that? isn't FNR == number of records so far?
01:54  vkues: awk documentation says "no"
01:54  vkues: "FNR    The  ordinal  number  of  the  current record in the current file."
01:55  variable: oh - I completely misread that
01:55  vkues: Which naturally leads to your nextquestion:
01:55  vkues: If NR is the same as ++total
01:55  vkues: right?
01:56  variable: vkues, let me reread the man page :-}
01:56  vkues: cool
01:57  vkues: i am glad i don't have to answer that one then ;)
01:57  variable: vkues, heh - I completely misread it that's all :-}
01:58  variable: 4# chroot /; echo "foo" > /etc/passwd;
01:58  variable: :-}
01:58  shbot: variable: /bin/sh: can't access tty; job control turned off
01:58  shbot: variable: /bin/sh: builtin: not found
01:58  vkues: damn
01:59  variable: ---> if every single line I need to use tolower($6) ~ /some_regex/ is there some way to force $6 = tolower($6)
02:01  vkues: because you don't want to execute tolower() twice?
02:01  variable: yeah
02:01  variable: (and because I need to do it about 20 times - and it looks annoying :-) )
02:03  vkues: well
02:03  vkues: you could change the first check to
02:03  vkues: ($6 = tolower($6)) ~ /regex/
02:04  vkues: the problem is, that with assigning to $6 you potentially lose the field delimiters
02:04  vkues: 4# awk '($1 = tolower($1)) ~ /test/ { print }' <<< 'TEST  one  two'
02:04  shbot: vkues: test one two
02:04  vkues: (see how "  " were changed to " ")
--- Log closed Mon Jan 17 02:52:47 2011
--- Log opened Mon Jan 17 02:58:07 2011
02:58 --- Users 84 nicks [0 ops, 0 halfops, 0 voices, 84 normal]
02:59 --- Channel #awk was synced in 104 seconds
04:08  k[t: 4# awk 'BEGIN { printf "%\047d\n", 1234567 }'
04:08  shbot: k[t: 1234567
04:13  k[t: 4# LC_ALL=en_US.UTF-8 awk 'BEGIN { printf "%\047d\n", 1234567 }'
04:13  shbot: k[t: 1234567
--- Log closed Mon Jan 17 08:39:29 2011
--- Log opened Mon Jan 17 08:44:40 2011
08:44 --- Users 78 nicks [0 ops, 0 halfops, 0 voices, 78 normal]
08:46 --- Channel #awk was synced in 104 seconds
--- Log opened Mon Jan 17 08:52:00 2011
08:52 --- Users 78 nicks [0 ops, 0 halfops, 0 voices, 78 normal]
08:53 --- Channel #awk was synced in 118 seconds
--- Log opened Mon Jan 17 13:25:08 2011
13:25 --- Users 85 nicks [0 ops, 0 halfops, 0 voices, 85 normal]
13:26 --- Channel #awk was synced in 104 seconds
14:30  waldner: steve___: I know how to do it, but I'm not sure it's worth doing it
14:35  steve___: waldner: I was in the same boat.  If you were using a terminal program like irrsi, I was going to suggest checking out weechat.  Weechat has a feature called 'smart filters'.  If someone says something and leaves/quits within five minutes, then display their part/quit message.
14:40  waldner: ah, good to know
14:40  waldner: thanks
14:40  waldner: (I'm using irssi indeed)
14:45  steve___: waldner: As was I.  Weechat also supports python scripts.  There is a python script which connects to jabber servers.  Before this I was using bitlbee.
14:48  waldner: I'll check it out as soon as I have some spare time, thanks
14:48  fraff: hi all, I'd like to: iptables-save | awk -v chain=$chain '{ if ($0 ~ / chain /) print $0 }' ... but  / chain / does not work, how can I do that ?
14:49  waldner: $0 ~ chain
14:49  fraff: I need to add space around it
14:49  waldner: nope, you need to not use the slashes
14:51  fraff: hum, my bad, I've just understood my mistake, re=" chain " is not the same than re=" " chain " " ...
14:51  igli: you use /regex/ for a literal regex constant. if it's a variable, lose the slashes as waldner said.
14:51  fraff: thank you guys, it works now
15:05  hemanth: i have a file with certain keywords, that i need to extract from another file, how must i go about 
15:05  pgas: too vague
15:10  fraff: grep -Fo -f /path/to/patern /path/to/file ?
15:12  waldner: oh, and I thought it could not be done with grep
15:12  waldner: good catch
15:13  fraff: :)
15:20  pgas: (it needs gnu grep, he might want -w also)
15:24  hemanth: trying it out :)
15:24  pgas: hemanth: you might want to give us a short example of what you want. example of input, example of output
15:25  hemanth: Ex: input B.E is C.S or BS in Math; need to extract B.E and BS
15:28  hemanth: this is the keyword list['B.Pharma', 'B.B.A', 'BDS', 'B.Sc', 'LLB', 'BCA', 'B.Tech', 'Diploma', 'MBBS', 'B.Com', 'BVSC', 'B.Arch', 'B.Ed', 'BHM', 'B.A', 'B.E'] i have also made a synonyms list
15:35  hemanth: worked :)
15:35  hemanth: need to do more but..
15:37  pgas: but I think awk can help you to solve the whole thing
15:59  hemanth: ok!
16:02  hemanth: as of now will just fix this, and would be very happy to work on awk to get the thing done in the right way :)
16:10  oliver1804: I've the feeling that
16:10  oliver1804: for(i=1;i<=n;i++) {
16:11  oliver1804: getline < aVMPdatfiles[i]
16:11  oliver1804: print > fileto
16:11  oliver1804: }
16:11  oliver1804: is very slow compared to input on the shell
16:12  oliver1804: I'm working on Win XP with gawk 3.1.7
16:12  oliver1804: can somebody confirm this?
16:16  waldner: may be a localization problem
16:19  waldner: what you're doing can be done using head -n > fileto
16:19  waldner: (and can be done without getline, too)
16:22  oliver1804: waldner: what I printed here was only a part of the whole thing; I'm processing ~ 11,000,000 files with awk and simply tried printing without changing
16:22  oliver1804: anything
16:23  oliver1804: to find if I can speed up the whole thing
16:23  oliver1804: but I couldn't recognize
16:23  waldner: well, it can't be that fast if processing 11M files
16:24  waldner: probably it also depends on the underlying disk/filesystem
16:24  oliver1804: sry only 11,000
16:24  waldner: ah that's better
16:24  oliver1804: FS is NTFS
16:24  oliver1804: and the files are on a server
16:26  waldner: is it fast if you try to cat or head all those files (assuming you have the win version of those utilities)?
16:27  oliver1804: yes, gnuwin32 try it in a few minutes
16:30  oliver1804: cat is really fast
16:31  waldner: what if you do "awk 1"
16:31  waldner: (that should be the same as cat)
16:32  oliver1804: yeah pretty fast too
16:32  waldner: so it must be something you were doing in your script
16:35  oliver1804: could you take a glimpse http://eugeneciurana.com/pastebin/pastebin.php?show=43735 ?
16:38  waldner: not sure as it's windows, but maybe it's the dir /A etc. that's taking time
16:39  oliver1804: waldner: can't be cause it's only filling the array - printing to the file starts after the array is already filled
16:40  waldner: and how do you know which is fast which is slow?
16:40  waldner: are you printing disgnostic output?
16:40  waldner: also, uh
16:41  oliver1804: I see the growing output in the filemanager
16:41  waldner: you're always reading only one line from each file
16:41  waldner: the first line
16:41  waldner: also try removing asorti() and see
16:42  waldner: it shouldn't be the problem, but trying can't hurt
16:42  waldner: you could also pipe to sort later
16:44  waldner: or maybe it's the appending operation that is slow under windows
16:45  oliver1804: you say that I'm only reading the first line from each file - if this i true it would explain the slow growth of the output file
16:45  waldner: that is true, since you only call getline once, and in the next iteration i is different so you're reading another file
16:47  oliver1804: but where is my mistake - studying Arnolds documentation I can't find it (see 3.8.3)
16:48  waldner: I have no idea, since you didn't say what that code is supposed to do, and what you're trying to do
16:49  waldner: well even there it's quite clear: Use ‘getline < file’ to read the next record from file
16:50  waldner: the example there also reads a single line
16:50  waldner: (well, not exactly, but bear with me)
16:54  oliver1804: a one liner brought it to me that you're right gawk "BEGIN{getline < \"k:\\VMP\\HILFSVZ\\Datin\\OLD\\70855-0.BAK\";print}"
16:57  oliver1804: waldner: so to read whole files I need pipes?
16:57  waldner: no, you need a getline loop
16:57  waldner: but I'm almost 100% sure that you don't need getline at all here
16:58  oliver1804: I don't want to give it as arguments to the shell
16:59  oliver1804: it's much simpler to put it in a script I'd say
16:59  waldner: not at all, usually (but don't know about windows)
17:00  oliver1804: I want to use the script on a regular basis without a batch and just typing in gawk -f script.awk
17:02  oliver1804: waldner: how does a getline loop works?
17:02  waldner: so what's the problem?
17:02  waldner: put it into another script that builds the argument list
17:02  waldner: then you'd just type the name of the second script
17:09  oliver1804: if I understand correct you mean I should create an awk script that 1st creates a file with the filelist and 2nd starts awk with this file as arguments?
17:09  waldner: no, you create a script containing "awk -f script.awk file1 file2 file3 ... filen"
17:10  waldner: then call this last script
17:11  oliver1804: really nice
17:13  waldner: surely not worse that calling dir from awk
17:13  waldner: *than
17:13  oliver1804: thx
--- Log closed Mon Jan 17 21:26:37 2011
--- Log opened Mon Jan 17 21:32:07 2011
21:32 --- Users 83 nicks [0 ops, 0 halfops, 0 voices, 83 normal]
21:33 --- Channel #awk was synced in 112 seconds
--- Log closed Mon Jan 17 21:57:19 2011
--- Log opened Mon Jan 17 22:07:46 2011
22:07 --- Users 84 nicks [0 ops, 0 halfops, 0 voices, 84 normal]
22:09 --- Channel #awk was synced in 107 seconds
--- Log closed Mon Jan 17 22:19:44 2011
--- Log opened Mon Jan 17 22:20:04 2011
22:20 --- Users 85 nicks [0 ops, 0 halfops, 0 voices, 85 normal]
22:21 --- Channel #awk was synced in 104 seconds
--- Log closed Mon Jan 17 23:46:14 2011
--- Log opened Mon Jan 17 23:46:33 2011
23:46 --- Users 82 nicks [0 ops, 0 halfops, 0 voices, 82 normal]
23:48 --- Channel #awk was synced in 103 seconds
--- Log closed Tue Jan 18 00:00:37 2011
