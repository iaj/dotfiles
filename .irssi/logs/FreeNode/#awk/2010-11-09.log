--- Log opened Tue Nov 09 08:36:15 2010
08:36 --- Users 102 nicks [0 ops, 0 halfops, 0 voices, 102 normal]
08:38 --- Channel #awk was synced in 115 seconds
08:43  brainstack: pgas: START and END were just dummy strings.. the file has different texts
08:44  brainstack: only the common part is _HL_ENCODED_  , _HL and  _HL__blank_HL_ 
08:47  pgas: how should I know? 
08:47  pgas: is this on several lines?
08:47  pgas: considering pasting a sample of your input/ expected output
08:48  {xmb}{bottz}7man: is it for replacing something in between marks ? i got a leet script doing such
09:01  {xmb}{bottz}7man: brainstack
09:06  brainstack: {xmb}{bottz}7man: pgas: example: http://www.fpaste.org/pAcT/
--- Log closed Tue Nov 09 09:06:28 2010
--- Log opened Tue Nov 09 09:08:16 2010
09:08 --- Users 102 nicks [0 ops, 0 halfops, 0 voices, 102 normal]
09:10  robinatw: I have a question to ask , why gnu account can't allow register ??
09:10  {xmb}{bottz}7man: thats easy
09:10  robinatw: who can help me ??
09:10  {xmb}{bottz}7man: maybe nobody implentet register there rob ?
09:11  robinatw: prompt you input the text as follow  "antispam text:"
09:11 --- Channel #awk was synced in 214 seconds
09:11  robinatw: i can' understant it at all..
09:11  {xmb}{bottz}7man: u on console ?
09:12  robinatw: :-)
09:12  {xmb}{bottz}7man: yeah ?
09:12  {xmb}{bottz}7man: cause if u are u need to view a picture
09:12  {xmb}{bottz}7man: kaptscha
09:12  {xmb}{bottz}7man: then decypher and write whats there
09:13  {xmb}{bottz}7man: then it goes on
09:13  robinatw: haven't picture.
09:13  {xmb}{bottz}7man: brainschtakk: awk ' { gsub ( /_HL.[0-9]_HL_|_HL__.*/, "") ; print}'
09:14  {xmb}{bottz}7man: nearly
09:14  {xmb}{bottz}7man: brainschtakk: awk ' { gsub ( /_HL.[0-9]_HL_|_HL__.*HL_/, "") ; print}'
09:14  {xmb}{bottz}7man: there
09:14  {xmb}{bottz}7man: tru that
09:16  brainstack: {xmb}{bottz}7man: it still has _HL_ENCODED_https://test.com/id-40840_HL_ in it
09:16  brainstack: I want to remove this as well... starting from _HL_ENCODED to _HL_
09:17  brainstack: i can't use sed becuase the url has different id's in it
09:17  {xmb}{bottz}7man: wha
09:17  {xmb}{bottz}7man: oh i forgot a char
09:18  {xmb}{bottz}7man: use /_HL.*
09:18  {xmb}{bottz}7man: add the wildcard
09:20  {xmb}{bottz}7man: brainstack
09:21  brainstack: {xmb}{bottz}7man: wow.. awesome !! thanks a ton !
09:22  {xmb}{bottz}7man: schuurr diinggg
10:53  stockholm: hi
10:53  stockholm: can i write this more compact with help of awk?
10:53  stockholm: dd if=/dev/random bs=12 count=1 2>/dev/null  |uuencode -m -| sed -n 2,2p
10:54  stockholm: i just want 12 char random data 
10:54  stockholm: in ascii form
10:59  waldner: I doube implementing uuencode in awk would be more compact than that
11:09  trumpen: stockholm: if you have base64 and/or openssl you could use them: dd .. | base64 or dd .. | openssl enc -base64
11:10  pgas: or maybe filter the unwanted char with tr and pipe to dd or head
11:11  stockholm: tr has the advantage of being short :-)
11:12  stockholm: what chars do i need to filter out?
11:13  {xmb}{bottz}7man: for what
11:13  {xmb}{bottz}7man: i have a script for random data
11:13  {xmb}{bottz}7man: second please
11:13  {xmb}{bottz}7man: stockholm: //xmb.root.pe/code/D
11:14  {xmb}{bottz}7man: ' # D 12'
11:17  stockholm: this is an attempt to produce an as short as possible command line to get a password hash on mac os x, and i think the random salt can be done more compact. this is where we are at right now:
11:18  stockholm: echo '<? printf("\n%s\n",crypt("'$(read -s -p \
11:18  stockholm: "Password:" a; echo $a)'", "\$5\$'$(dd if=/dev/random bs=12 \
11:18  stockholm: count=1 2>/dev/null |uuencode -m -| sed -n 2,2p)'\$"))?>' | php
11:18  stockholm: mac can not do sha-crypt in its libc
11:18  stockholm: python, perl, ruby etc dont come with sha-crypt
11:18  stockholm: but php does...
11:19  stockholm: plus "php" is shorter then the others :-)
11:19  stockholm: (just kidding there)
11:22  {xmb}{bottz}7man: umm
11:23  {xmb}{bottz}7man: please::use::this::plus::plus
11:23  {xmb}{bottz}7man: heh
11:23  {xmb}{bottz}7man: md5crypt ?
11:23  {xmb}{bottz}7man: see on the console in os x
11:23  {xmb}{bottz}7man: if it has sha* programs
11:23  {xmb}{bottz}7man: otherwise openssl can do em
11:24  {xmb}{bottz}7man: anyway
11:25  {xmb}{bottz}7man: tr -dc 12-
11:28  stockholm: no, we want sha-crypt, we have used openssl's  crypt so far, but it does not provide sha-crypt 
11:29  {xmb}{bottz}7man: k
11:29  {xmb}{bottz}7man: sukajgy os x i tell u
11:29  {xmb}{bottz}7man: lol about it
11:40  {xmb}{bottz}7man: well
11:40  {xmb}{bottz}7man: use random data ?
11:42  stockholm: {xmb}{bottz}7man: i try to navigate your script collection... how does that work?
11:43  stockholm: the url above is broken
12:36  {xmb}{bottz}7man: stockholm: //xmb.home.cosmic-cow.net/code/
12:46  {xmb}{bottz}7man: i dunno why the dirs on other domains have nowork
12:46  {xmb}{bottz}7man: u can get it all @ xmb.root.pe/xmb-code-tree-transition.tgz
13:07 --- The-Comp1ler is now known as The-Compiler
13:08  stockholm: {xmb}{bottz}7man: http://xmb.home.cosmic-cow.net/code/D has some garbled content. is that supposed to be like that?
13:09  {xmb}{bottz}7man: yes thats output from itself
13:09  {xmb}{bottz}7man: its commented
13:09  {xmb}{bottz}7man: i use D for stamps
13:09  {xmb}{bottz}7man: with 77 or 777 args
13:09  {xmb}{bottz}7man: newly 777
13:17  stockholm: ah
13:29  ch077179: eval "awk -F\":\" '{ print \$1 \$3 \$4 \"$OS\" \"$MAINTLEVEL\" }'" <- I need to run it like that (within a ksh script). How can I insert the commas between the variables, so that it prints whitespaces between the fields?
13:30  pgas: consider passing the variables using -v
13:33  ch077179: awk -F":" '{ print $1,$3,$4,"$OS","$MAINTLEVEL" }' is what I want as effect, now I understand that $n -> \$n, and outside vars are within quotes, but how do I tell awk to whitespace delimit all fields, internal and extarnal?
13:36  pgas: awk -v var="$shelvar" '{print $1,$2,$3,bar}'
13:36  pgas: it 's not clear to mean why you add the eval layer
13:36  pgas: (to me)
13:38  pgas: -v avoids one layer of quotes juggling
14:14  geirha: So: awk -v os="$OS" -v lvl="$MAINTLEVEL" -F: '{print $1,$3,$4,os,lvl}'
14:21  lesshaste: how can I use awk to implement cut -d \  -f X  where X is the count from the right not the left?
14:21  geirha: !range
14:22  lesshaste: should that have brought up a link?
14:22  krzie: is there a way to have awk return 0 to the shell when it didnt have anything to print, so i can use it with && to set variables?
14:22  geirha: I don't remember if there's a bot for that or not in here :)
14:22  geirha: http://awk.freeshell.org/RangeOfFields
14:24  geirha: awk '/something/{p=1; print} END { exit(p) }'
--- Log closed Tue Nov 09 14:30:07 2010
--- Log opened Tue Nov 09 14:30:29 2010
14:30 --- Users 104 nicks [0 ops, 0 halfops, 0 voices, 104 normal]
14:30 --- Server: [lindbohm.freenode.net] [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
14:32 --- Channel #awk was synced in 120 seconds
14:35  krzie: http://pastebin.ca/1986306
14:46  ch077179: thanks pgas and geirha 
14:48  ch077179: we had a fire alarm, will test your suggestion right away
14:57  krzie: http://pastebin.ca/1986331   i tried to add what geirha said to what i was doing not sure where to go from here
15:14  krzie: i guess i can go back to using grep -E, i liked the awk could specify which field to match
15:20  krzie: awk '{print $3}' ${sacuts}|grep -qe "^${agent}$" && IS_M_AGENT="1"
--- Log closed Tue Nov 09 15:30:40 2010
--- Log opened Tue Nov 09 15:31:00 2010
15:31 --- Users 104 nicks [0 ops, 0 halfops, 0 voices, 104 normal]
15:31 --- Server: [calvino.freenode.net] [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
15:31  geirha: krzie: you want awk to return false if $1 == var, true otherwise?
15:31  geirha: '$1 == var {exit(1)}'
15:32  geirha: krzie: The last two lines have $1 == foo, so it will return false. So what's wrong?
15:32 --- Channel #awk was synced in 118 seconds
15:33  geirha: Did you perhaps mistake return value 1 as true and return value 0 as false?   0 is true, everything else is false.
15:33  geirha: If so; '$1 == var {exit(0)} END {exit(1)}'
15:33  krzie: ahh yes thats what it was
15:38  geirha: That one will make awk act similar to grep -q
15:38  krzie: hrm, doesnt change my results tho
15:38  krzie: MacBook-Pro:~ krzee$ agent=foo
15:38  krzie: MacBook-Pro:~ krzee$ awk -v var="$agent" '($1 == var){exit(0)} END {exit(1)}' test  1>/dev/null 2>&1 && IS_M_AGENT="1"
15:38  krzie: MacBook-Pro:~ krzee$ echo $IS_M_AGENT
15:38  krzie: nothing
15:39  geirha: 4# echo 'foo bar' > test; agent=foo; awk -v var="$agent" '($1 == var){exit(0)} END {exit(1)}' test; echo $?
15:39  shbot: geirha: 1
15:40  geirha: Oh, maybe it executes the END part on exit.
15:40  krzie: 4# echo 'foo bar' > test; agent=foo; awk -v var="$agent" '($1 == var){exit(0)} END {exit(1)}' test && TEST="1" && echo $TEST
15:40  shbot: krzie: no output
15:41  krzie: 4# echo 'foo bar' > test; agent=foo; awk -v var="$agent" '($1 == var){exit(1)} END {exit(0)}' test && TEST="1" && echo $TEST
15:41  shbot: krzie: 1
15:41  krzie: 4# echo 'bar bar' > test; agent=foo; awk -v var="$agent" '($1 == var){exit(1)} END {exit(0)}' test && TEST="1" && echo $TEST
15:41  shbot: krzie: 1
15:41  geirha: 4# echo 'foo bar' > test; agent=foo; awk -v var="$agent" '($1 == var){found=1;exit} END {if (found) exit(0); else exit(1)}' test; echo $?
15:41  shbot: geirha: 0
15:41  geirha: 4# echo 'no foo bar' > test; agent=foo; awk -v var="$agent" '($1 == var){found=1;exit} END {if (found) exit(0); else exit(1)}' test; echo $?
15:41  shbot: geirha: 1
15:43  krzie: nice, thanx
15:43  krzie: think its more efficient than the awk | grep i was doing?
15:44  geirha: Yes
15:45  krzie: sweet =]
15:59  krzie: different issue, im having a problem forcing $2 to be a number instead of "" by adding 0, ie:  
15:59  krzie:     stuck=$(awk -v var="$agent" '($1 == var){print $2 +0}' "${stucks}")
16:00  krzie: it is not setting $stuck to 0 when $stucks does not have a $1 matching $agent
--- Log closed Tue Nov 09 16:07:45 2010
--- Log opened Tue Nov 09 16:08:09 2010
16:08 --- Users 105 nicks [0 ops, 0 halfops, 0 voices, 105 normal]
16:10 --- Channel #awk was synced in 125 seconds
16:11  geirha: krzie: What does it do instead?
16:13  krzie: stays unset
16:18  geirha: empty you mean.
16:18  geirha: That's probably because there's no lines where $1 == var
16:18  geirha: So the print is never executed
16:18  krzie: right
16:18  krzie: thats why i was +0
16:19  krzie: works when not printing a $#
16:19  krzie: like works for SUM
16:20  geirha: What's supposed to happen if more than one line has $1 == var?
16:20  krzie: should never happen, i accept unexpected stuff
16:22  krzie: s/should/can/
16:24  geirha: '$1 == var {num=$2} END {print num+0}'
16:30  krzie: aye that did it
16:30  krzie: kinda similar solution too =]
--- Log closed Tue Nov 09 20:13:55 2010
