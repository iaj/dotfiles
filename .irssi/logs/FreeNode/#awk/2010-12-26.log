--- Log opened Sun Dec 26 20:31:30 2010
20:31 --- Users 86 nicks [0 ops, 0 halfops, 0 voices, 86 normal]
20:32  pazo: Hi, how to check if $1 is a regular match lilke [0-9]x[0-9] for exampple 1024x768?
20:32 --- Channel #awk was synced in 99 seconds
20:36  waldner: if ($1 ~ /[0-9]+x[0-9]+/) ...
20:37  waldner: perhaps also if ($1 ~ /^[0-9]+x[0-9]+$/) ...
20:40  pazo: uhmm ok
20:40  pazo: I am doing something like this, but I forget to use + instead of *
20:40  pazo: xrandr -q | awk '{ if($1 ~ /^[0-9]*x[0-9]*/) print $1 }'  | sort -tx -k1,1 -s | head -
20:40  waldner: that should still work
20:40  pazo: yes, but yours is better :)
20:41  waldner: if you're doing that, then you can do
20:41  waldner: xrandr -q | awk '$1 ~ /^[0-9]+x[0-9]+$/) {print $1}' | ...
20:41  waldner: remove the )
20:41  pazo: thanks
20:41  pr3d4t0r: Heh :)
20:42  pr3d4t0r: pazo: Hopping between channels? :)
20:42  pr3d4t0r: pazo: You can change your awk command to:
20:43  pazo: pr3d4t0r: well, in bash it was a sort question, here it was an awk question :D
20:43  pr3d4t0r: pazo: xrandr -q | awk '$1 ~ /^[0-9]+x[0-9]+$/' | sort -tx -k1,1 -s
20:43  pazo: thanks people :)
20:43  pr3d4t0r: pazo: The default action for awk is to "print" so just expressing what you want will send it to stdout.
20:44  waldner: but he wants to print $1, not $0 IIUC
20:44  pr3d4t0r: pazo: No need for that { } block or the print statement.
20:44  pr3d4t0r: waldner: Oh, I thought it was the whole thing.  Good catch.
20:44  pr3d4t0r: waldner: Still, he can simplify it a bit.
20:44  pr3d4t0r: pazo: xrandr -q | awk '$1 ~ /^[0-9]+x[0-9]+$/ { print($1); }' | sort -tx -k1,1 -s
20:44  pr3d4t0r: waldner: Better than that if statement stuck in the middle.
20:45  waldner: I know, that's whay I told him to use the same code as you
20:45  waldner: *why
20:46  pazo: uhmm, I can just put print($1); exit instead of using | head -1 at the end, not sure if is has sence here :P
20:46  waldner: then you wouldn't be sure that you're getting the highest value
20:46  pr3d4t0r: pazo: Sure.
20:46  pazo: ahh yes, right!
20:47  pr3d4t0r: pazo: Use exit(0); if you consider that normal output.
20:47  waldner: what you could do, instead, is to do the check from within awk and do away with sort and head entirely
20:48  pr3d4t0r: pazo: You don't even need to sort if you do what waldner suggests.  Just keep track of the highest rez.
20:49 * pr3d4t0r wishes he had a Linux box with a monitor to see what the output from xrandr looks like.
20:49  pazo: I try to use those methods, becasue xrand show all my values, but it puts at maximmum 4096x4096 so it's wrong.
20:49  pazo: ~$ xrandr 
20:49  pazo: Screen 0: minimum 320 x 200, current 1024 x 600, maximum 4096 x 4096
20:49  waldner: xrandr -q | awk '$1 ~ /^[0-9]+x[0-9]+$/ && substr($1,1,index($1,"x")-1) > max {max = $1}END{print max}'
20:49  waldner: (untested)
20:49  pazo: so parsing real values is more correct I think.
20:50  pr3d4t0r: pazo: Can you paste the actual output here for a sec?  http://eugeneciurana.com/pastebin
20:50  waldner: ah no wrong
20:50  pr3d4t0r: pazo: If we do this right we won't even need regexp.
20:50  pazo: of course
20:50  pr3d4t0r: pazo: I wrote a Vim extension that detects the screen dimensions on Linux/Gnome/KDE and OS X.  Similar thing but I didn't write the actual Linux bit :S
20:51  pazo: http://eugeneciurana.com/pastebin/pastebin.php?show=43693
20:51  waldner: xrandr -q | awk '$1 ~ /^[0-9]+x[0-9]+$/ && substr($1,1,index($1,"x")-1)+0 > max {max=substr($1,1,index($1,"x")-1)+0; top = $1}END{print top}'
20:52  waldner: probably can also be improved vith the right FS etc.
20:52  pr3d4t0r: pazo: OKi, of the three screens reported, which one do you care about?  Current?
20:53  pazo: well, my idea is to create a live cd, so I want to get maximum value of the screen, xrand does not seem to find a correct value using maximmum on netbooks (sorry my english)
20:53  pr3d4t0r: pazo: No problem with the English.
20:53  pr3d4t0r: pazo: Here's what we did for the Vim extension:
20:54  pr3d4t0r: pazo: http://eugeneciurana.com/pastebin/pastebin.php?show=43694
20:54  pazo: very good, seems to work fine!, thank a lot people :)
20:54  pr3d4t0r: pazo: Feedback I got from the Vim community is that it worked.  No bugs on that one.  So you can probably, safely, get the $8, $10 element.
20:55  pr3d4t0r: pazo: The purpose of the script is to automagically set the size of gVim on whatever screen you run it.  Similar to your live CD.
20:56  pr3d4t0r: pazo: Notice that we ran it without -q -- that reports the rez itself.  No regexp, straight forward stuff.  And xandr will report the actual active screen *always* on Screen 0.  If you have an external monitor plugged as the default, it'll report that.  If you have two active at once, it'll report the main one.
20:57  pr3d4t0r: pazo: http://www.vim.org/scripts/script.php?script_id=3196 - here's the full description and code from www.vim.org -- it shows the same operation on Windows and OS X, in case you want to go bananas and make your script available for those OSs as well.
20:57  pazo: ok, I think that with those things it will be more safe now, anyway I will start a xrand gui or something if for some reason does not work, to user with no better idea can put a correct screen.
20:57  pr3d4t0r: pazo: Detection is done through OS-level tools and awk or FIND.EXE :)
20:58  pr3d4t0r: pazo: Enjoy.
20:58  pazo: hehehe, thanks again!
20:58  pr3d4t0r: pazo: http://eugeneciurana.com/pastebin/pastebin.php?show=43695 - here's the full detection code.
20:58  pr3d4t0r: pazo: Merry Christmas - Feliz Navidad - etc.
20:58  pazo: gracias!
21:00  pazo: ok, see you, hasta la vista!
22:08  krzie: awk -v var=A46 '($1"" == var){print $3 +0}' filename
22:09  krzie: i have the +0 in order for it to return 0 if A46 does not exist in filename's $1
22:09  krzie: but that part is not working
22:09  krzie: any suggestions?
22:11  waldner: return as in "exit status"?
22:13  krzie: neg, but i just found it
22:13  krzie: i needed to use END
22:13  krzie: [root@backup ~/gametracker]# echo $(awk -v var=A46 '($1"" == var){print $3 +0}' $repto)
22:13  krzie: [root@backup ~/gametracker]# echo $(awk -v var=A46 '($1"" == var){FIG=$3} END {print FIG+0}' $repto)
22:13  krzie: 0
22:14  waldner: that way you only save the last one
22:14  krzie: garunteed in this context to only have 1
22:14  waldner: fine then
22:15  krzie: (output from db query, it cant give same $1 2x)
22:15  waldner: then you can just as well  do FIG=$3;exit to save some cycles
22:15  krzie: how you been?  meery xmas (or anything else you celebrate)
22:15  waldner: I'm good thanks
22:15  krzie: ahh good call!
22:16  waldner: and good $festivity to you too
22:16  krzie: saving cycles is definitely a goal in this program
22:16  waldner: ald to all, indeed
22:16  waldner: *and
--- Log closed Sun Dec 26 22:32:59 2010
--- Log opened Sun Dec 26 22:38:20 2010
22:38 --- Users 89 nicks [0 ops, 0 halfops, 0 voices, 89 normal]
22:39 --- Channel #awk was synced in 93 seconds
--- Log closed Mon Dec 27 00:00:04 2010
