--- Log opened Fri Jan 14 08:48:30 2011
--- Log closed Fri Jan 14 08:48:30 2011
--- Log opened Fri Jan 14 08:53:50 2011
08:53 --- Users 85 nicks [0 ops, 0 halfops, 0 voices, 85 normal]
08:55 --- Channel #awk was synced in 109 seconds
--- Log closed Fri Jan 14 09:16:01 2011
--- Log opened Fri Jan 14 09:26:24 2011
09:26 --- Users 86 nicks [0 ops, 0 halfops, 0 voices, 86 normal]
09:28 --- Channel #awk was synced in 105 seconds
10:39  oliver1804: hello, very often I need regexp like "^41[49].{48}$" and therefore I need --re-interval as a parameter on the shell - is there a way to put this into the script itself?
10:40  pgas: no
10:41  oliver1804: pgas: thx for the bad news :-)
10:42  pgas: the newest gawk will enable { } by default IIRC
10:43  oliver1804: pgas: thx for the hope - I hope there will be a Windows version
10:45  pgas: well, if your use case is always like the regexp above, you can use length as a workaround
10:46  oliver1804: pgas: yes, very simple and better than hoping, thx
10:47  prince_jammys: .............................
15:06 --- homie is now known as Guest56717
15:07 --- Guest56717 is now known as homie`
15:08 --- homie` is now known as homie
17:07 --- WinstonSmith_ is now known as WinstonSmith
21:15  kotique: hi there
21:15  kotique: how do I insert a line into 4th position after another line that matched?
21:18  pr3d4t0r: kotique: Input:  1 2 3 4 5 6
21:18  pr3d4t0r: kotique: Output 1 2 3 4
21:18  pr3d4t0r: kotique: 5 6
21:18  pr3d4t0r: kotique: ?
21:25  kotique: ruby -pe '$_.match(/^virtual_address_pipe:/) ? @off=0 : if @off; puts "a line" if @off==4;  @off+=1 end'
21:25  kotique: insert a line into 4th line position after virtal_addr matched
21:39  pr3d4t0r: kotique: Oh, 4th *line*
21:40  pr3d4t0r: kotique: awk '{ print; if (NR == 4) print("a line"); }'
21:41  kotique: after virtal_addr matched
21:41  pgas: awk '1;NR==4{print "blah"}' :D
21:42  pgas: awk '1;/virtal_addr/{i=4}!i--{print "blah"}' :D
21:42  pr3d4t0r: kotique: Fourth line after the match?
21:42  kotique: yeah, i guess that would work
21:42  pr3d4t0r: pgas: I bow to your mastery, but smack you for writing somewhat obfuscated code :)
21:43  kotique: pgas, it inserts into 2nd position, too
21:44  pgas: ?
21:44  kotique: cat /etc/exim.conf.mailman2.dist| awk '1;/^virtual_address_pipe:/{i=4}!i--{print "blah"}'  | grep blah | wc -l
21:44  kotique: 2
21:45  pgas: well it  does what you ask, maybe there is blah in your input, maybe you have 2 virtual_address
21:46  kotique: nope, only 1, no blah in there
21:47  pgas: oh yes sorry
21:49  pgas: awk '1;/virtal_addr/{i=4}!--i{print "blah"}' 
21:49  pgas: though you might need i=5
21:53  kotique: yep, that works. what's the in-place argument?
21:54  pgas: in-place argument?
21:54  pgas: like sed -i? there is no such thing in awk
21:54  kotique: damn
21:54  pgas: if you are editing a file, use an editor
--- Log closed Fri Jan 14 23:44:11 2011
--- Log opened Fri Jan 14 23:55:03 2011
23:55 --- Users 82 nicks [0 ops, 0 halfops, 0 voices, 82 normal]
23:55  pr3d4t0r: vkues: Heh.
23:55  pr3d4t0r: vkues: That's a level of nerdiness that I don't know if I can achieve :)
23:55  pr3d4t0r: vkues: My ultra geekness is invested in sushi.
23:56 --- Channel #awk was synced in 106 seconds
23:57  vkues: pr3d4t0r: it's art, poetry :)
23:58  vkues: sushi indeed is worth spending time on :)
--- Log closed Sat Jan 15 00:00:40 2011
