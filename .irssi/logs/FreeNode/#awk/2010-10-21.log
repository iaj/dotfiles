--- Log opened Thu Oct 21 00:00:08 2010
00:01  waldner: so a section is everything between 01   REG_NAME and EJECT?
00:05  dborba: yea
00:06  waldner: could this work for you?
00:06  waldner: awk '/^01  /{regname=$2}{print > regname}'
00:08  dborba: not exactly = but that's good enough of a start
00:09  dborba: the 01 isn't always at the same place with respect to the beginning of the line
00:10  waldner: well, maybe it's just a matter of extending the regexp and doing what it takes to extract the regname
00:10  waldner: that was based on the example you showed
00:10  dborba: right
00:11  dborba: basically i'd have to verify that regname isn't spaces
00:11  dborba: since the only other places '01  ' shows up, it is followed by spaces
00:11  waldner: so check that $2 is not "", for example
00:11  dborba: i should be able to figure it out from what you gave me though - appreciate it
00:12  waldner: ... /^01  / && $2!=""{...}
00:12  waldner: or something lke that
00:15  waldner: or perhaps NF==1
00:16  dborba: sweet - got it.
00:17  dborba:   /^ *01  /{regname=$2} did the trick
00:18  dborba: thanks again waldner 
00:21  waldner: np
00:22  waldner: too late
--- Log closed Thu Oct 21 00:31:45 2010
--- Log opened Thu Oct 21 00:32:05 2010
00:32 --- Users 104 nicks [0 ops, 0 halfops, 0 voices, 104 normal]
00:33 --- Channel #awk was synced in 107 seconds
--- Log closed Thu Oct 21 00:58:19 2010
--- Log opened Thu Oct 21 00:58:41 2010
00:58 --- Users 102 nicks [0 ops, 0 halfops, 0 voices, 102 normal]
01:00 --- Channel #awk was synced in 105 seconds
--- Log closed Thu Oct 21 01:22:53 2010
--- Log opened Thu Oct 21 01:23:15 2010
01:23 --- Users 103 nicks [0 ops, 0 halfops, 0 voices, 103 normal]
01:24 --- Channel #awk was synced in 106 seconds
--- Log closed Thu Oct 21 01:53:34 2010
--- Log opened Thu Oct 21 01:53:58 2010
01:53 --- Users 101 nicks [0 ops, 0 halfops, 0 voices, 101 normal]
01:55 --- Channel #awk was synced in 107 seconds
--- Log closed Thu Oct 21 02:21:13 2010
--- Log opened Thu Oct 21 02:21:34 2010
02:21 --- Users 99 nicks [0 ops, 0 halfops, 0 voices, 99 normal]
02:23 --- Channel #awk was synced in 108 seconds
--- Log closed Thu Oct 21 04:33:34 2010
--- Log opened Thu Oct 21 04:33:56 2010
04:33 --- Users 99 nicks [0 ops, 0 halfops, 0 voices, 99 normal]
04:35 --- Channel #awk was synced in 104 seconds
--- Log closed Thu Oct 21 05:22:28 2010
--- Log opened Thu Oct 21 05:27:49 2010
05:27 --- Users 98 nicks [0 ops, 0 halfops, 0 voices, 98 normal]
05:29 --- Channel #awk was synced in 103 seconds
06:03  g0pher: Error 502 - Bad Request  http://awk.freeshell.org/HomePage
--- Log closed Thu Oct 21 06:21:27 2010
--- Log opened Thu Oct 21 06:21:48 2010
06:21 --- Users 98 nicks [0 ops, 0 halfops, 0 voices, 98 normal]
06:23 --- Channel #awk was synced in 106 seconds
06:40  tmr: In perfect world webservers would never go "Eep!".
07:40  pgas: look ok now
--- Log closed Thu Oct 21 08:59:10 2010
--- Log opened Thu Oct 21 08:59:34 2010
08:59 --- Users 97 nicks [0 ops, 0 halfops, 0 voices, 97 normal]
09:01 --- Channel #awk was synced in 108 seconds
--- Log closed Thu Oct 21 09:26:50 2010
--- Log opened Thu Oct 21 09:27:15 2010
09:27 --- Users 98 nicks [0 ops, 0 halfops, 0 voices, 98 normal]
09:28 --- Channel #awk was synced in 107 seconds
--- Log closed Thu Oct 21 10:20:56 2010
--- Log opened Thu Oct 21 10:21:18 2010
10:21 --- Users 98 nicks [0 ops, 0 halfops, 0 voices, 98 normal]
10:22 --- Channel #awk was synced in 104 seconds
--- Log closed Thu Oct 21 11:13:59 2010
--- Log opened Thu Oct 21 11:14:23 2010
11:14 --- Users 97 nicks [0 ops, 0 halfops, 0 voices, 97 normal]
11:16 --- Channel #awk was synced in 107 seconds
--- Log closed Thu Oct 21 11:23:20 2010
--- Log opened Thu Oct 21 11:23:42 2010
11:23 --- Users 97 nicks [0 ops, 0 halfops, 0 voices, 97 normal]
11:25 --- Channel #awk was synced in 106 seconds
--- Log closed Thu Oct 21 12:08:42 2010
--- Log opened Thu Oct 21 12:08:51 2010
12:08 --- Users 98 nicks [0 ops, 0 halfops, 0 voices, 98 normal]
12:10 --- Channel #awk was synced in 105 seconds
13:15  stockholm: how can i do this (with seeking, not reading the whole file!), with awk?
13:15  stockholm: tail -n 1000000 /var/log/munin/munin-update.log | awk '/Fetched node:/ {sub(/\(/,"",$9);print $9, $8 }' 
13:16  pr3d4t0r: stockholm: awk reads the whole file, regardless, unless you force an exit on some condition.
13:16  stockholm: so tail is definetly the way to go?
13:16  pr3d4t0r: stockholm: You may add an exit(n); clause there if you meet some condition.
13:17  pr3d4t0r: stockholm: Probably.  Describe the problem in English, not in code.
13:17  pr3d4t0r: stockholm: I saw that trumpen gave you a good way of replacing the text you had, etc.  So describe the second problem about how much to read, and why, and so on.
13:18  pr3d4t0r: stockholm: There may be awk features you don't know yet or shell tools you can use that are more optimal, etc.
13:18  stockholm: pr3d4t0r: the file in question is huge. i want to parse only the end of the file, not the whole file. 
13:18  stockholm: especially because i do it to uncover a recent problem, not one a long time ago
13:18  pr3d4t0r: stockholm: OKi - tail is probably the easiest.  Does the log file continue to grow, and will you continue to monitor it?
13:19  pr3d4t0r: stockholm: Or is this a one-time anaysis pass?
13:19  stockholm: its one time, when there are problems
13:19  pr3d4t0r: stockholm: OKi.  Tail is the way to go then.
13:19  pr3d4t0r: stockholm: Now, to speed things up, are you familiar with tac?
13:19  stockholm: yes
13:20  pr3d4t0r: stockholm: Use tac instead.  That will run faster.
13:20  stockholm: tac the file and exit after some thoused lines?
13:20  pr3d4t0r: stockholm: Yeah.
13:20 --- pgas` is now known as pgas
13:20  pr3d4t0r: stockholm: Or tac the file and exit after some condition is met.
13:20  stockholm: that would give a broken pipe...
13:20  stockholm: lets see
13:21  pr3d4t0r: stockholm: For example, if your log files have date/time stamps, use the date as an exit condition.
13:22  stockholm: but tac cant read n lines only
13:22  pr3d4t0r: stockholm: awk can :)
13:22  karthee: pr3d4t0r:    NR <  totalLines-100000  
13:23  stockholm: pr3d4t0r: and just let the pipe break, you mean?
13:23  pr3d4t0r: stockholm: tac mybig.log | awk '/some test/ { someOperation(); } NR >= 1000 { exit(0); }'
13:23  pr3d4t0r: stockholm: Sure.
13:24  stockholm: like that i could search several _minutes_ back from now. that is good
13:24  pgas: the pipe will not break, it will be closed
13:25  stockholm: pgas: if awk stops reading and tac keeps piping?
13:26  pr3d4t0r: stockholm: awk is sending a legit exit() call.  You'll be fine.
--- Log closed Thu Oct 21 14:28:27 2010
--- Log opened Thu Oct 21 14:28:52 2010
14:28 --- Users 104 nicks [0 ops, 0 halfops, 0 voices, 104 normal]
14:30 --- Channel #awk was synced in 104 seconds
--- Log closed Thu Oct 21 17:28:32 2010
--- Log opened Thu Oct 21 17:38:58 2010
17:38 --- Users 105 nicks [0 ops, 0 halfops, 0 voices, 105 normal]
17:40 --- Channel #awk was synced in 102 seconds
--- Log closed Thu Oct 21 18:08:10 2010
--- Log opened Thu Oct 21 18:08:30 2010
18:08 --- Users 105 nicks [0 ops, 0 halfops, 0 voices, 105 normal]
18:10 --- Channel #awk was synced in 105 seconds
--- Log closed Thu Oct 21 19:07:38 2010
--- Log opened Thu Oct 21 19:07:59 2010
19:07 --- Users 103 nicks [0 ops, 0 halfops, 0 voices, 103 normal]
19:09 --- Channel #awk was synced in 103 seconds
--- Log closed Thu Oct 21 21:07:44 2010
--- Log opened Thu Oct 21 21:08:05 2010
21:08 --- Users 104 nicks [0 ops, 0 halfops, 0 voices, 104 normal]
21:09 --- Channel #awk was synced in 104 seconds
--- Log closed Fri Oct 22 00:00:26 2010
