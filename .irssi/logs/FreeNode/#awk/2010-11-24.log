--- Log opened Wed Nov 24 00:00:02 2010
--- Log closed Wed Nov 24 01:44:39 2010
--- Log opened Wed Nov 24 01:45:00 2010
01:45 --- Users 89 nicks [0 ops, 0 halfops, 0 voices, 89 normal]
01:46 --- Channel #awk was synced in 102 seconds
--- Log closed Wed Nov 24 05:45:38 2010
--- Log opened Wed Nov 24 05:45:59 2010
05:45 --- Users 93 nicks [0 ops, 0 halfops, 0 voices, 93 normal]
05:47 --- Channel #awk was synced in 101 seconds
05:51 --- Gatto is now known as no|G
05:51 --- no|G is now known as Gatto
08:05  optraz: hello, what is the best record separator to use? that is user cannot input it
08:24  g0pher: \n
08:29  optraz: alright
08:37  pgas: ah you mean with awk
--- Log closed Wed Nov 24 10:44:41 2010
--- Log opened Wed Nov 24 10:50:04 2010
10:50 --- Users 96 nicks [0 ops, 0 halfops, 0 voices, 96 normal]
10:51 --- Channel #awk was synced in 100 seconds
14:45 --- rbronosky is now known as richardbronosky
14:58  krzie: im using this:
14:58  krzie: awk -v var="$player" '($1 == var){print $3;exit}' "${repto}"
14:58  krzie: it was working well, but i just found an issue with it
14:58  krzie: there are entries in column $1 for 2 and 002
14:59  krzie: this choose the first 1, doesnt see 2 as different than 002
14:59  krzie: anyone know how to force that?
14:59  pgas: ($1 == var "")
15:02  krzie: thank you
15:09  giany: I have a set of .c files and I want to search in them for the following 3 lines : #ifndef STATIC #define STATIC static #endif. And after these 3 lines I need to append other 4 lines..how I can do that in awk?
15:54  Riviera: giany: probably the most idiotic way to do that: awk '/#ifndef STATIC/ { x = 1; print; next } /#define STATIC static/ && x == 1 { x++; print; next } /#endif/ && x == 2 { x = 0; print; print "line 1"; print "line 2"; print "line 3"; print "line 4"; next } { x = 0; print }'
15:57  Riviera: giany: but it should work. Note that with these expressions the strings "#ifndef STATIC" etc. might appear anyway on an input line, if you however would like those strings really to be the lines, either use anchors (i. e. add ^ and $, as in /^#ifndef STATIC$/) or conditions like $0 == "#ifndef STATIC" instead of the regular expression /things/
16:11  steve___: what about this?
16:11  steve___: a="1\n2\n3\n4" ; file="foo\nbar\n#ifndef STATIC\nbar\n#define STATIC static\nbaz\n#endif\nfoo\n#ifndef STATIC" ; echo -e "$file" |awk -v var="$a" '/^#ifndef STATIC$/ {print; print var} /^#define STATIC static$/ {print; print var} /^#endif$/ {print; print var}1'
16:12  steve___: no that isn't going to work.  Nevermind
16:14  steve___: this?
16:14  steve___: a="1\n2\n3\n4" ; file="foo\nbar\n#ifndef STATIC\nbar\n#define STATIC static\nbaz\n#endif\nfoo\n#ifndef STATIC\n" ; echo -e "$file" |awk -v var="$a" '/^#ifndef STATIC$/ || /^#define STATIC static$/ || /^#endif$/ {print; print var; next}1'
16:15  steve___: giany: ^^
16:26  pr3d4t0r: Good morning.
16:37  skered: What about:
16:37  skered: awk '{ l1=$0; print; getline; l2=$0; print; getline; l3=$0; print; } l1 ~ /line1/ && l2 ~ /line2/ && l3 ~ /line3/ { print .... }'
16:42  prince_jammys: problems
16:43  prince_jammys: e.g. when l2 matches "line1" (and the following two lines match what you want), you'll miss a match.
16:44  skered: Yeah, that is correct.
16:44  prince_jammys: you may want to use a variable to keep track of what you've matched instead
16:48  prince_jammys: if ((!m && /line1) || (m==1 && /line2/) || (m==2 && /line3/)) m++; else m=0; if (m==3) print "Yay"
16:49  prince_jammys: if (m==3) { print "Yay"; m=0 } # rather
16:50  prince_jammys: missing a '/' , but you get the idea
16:54  prince_jammys: i didn't scroll up, so i assumed the problem was "match three patterns that must appear in 3 consecutive lines"
16:55  skered: More or less
16:55  skered: Don't know if there's blank lines between
16:58  Riviera: prince_jammys: yes, you got that right.
16:58  prince_jammys: cool
16:58  prince_jammys: well, that looks like a viable solution
16:58  steve___: they wrote:
16:58  steve___: giany   I have a set of .c files and I want to search in them for the following 3 lines : #ifndef STATIC #define STATIC static #endif. And after these 3 lines I need to append other 4 lines..how I can do that in awk?
16:59  Riviera: prince_jammys: similar to mine; yours is less verbose and more elegant, though.
16:59  prince_jammys: ok, i'll scroll
16:59  steve___: is there issues with this?
16:59  steve___: a="1\n2\n3\n4" ; file="foo\nbar\n#ifndef STATIC\nbar\n#define STATIC static\nbaz\n#endif\nfoo\n#ifndef STATIC\n" ; echo -e "$file" |awk -v var="$a" '/^#ifndef STATIC$/ || /^#define STATIC static$/ || /^#endif$/ {print; print var; next}1'
16:59  Riviera: prince_jammys: err, no, no worries! :)
16:59  prince_jammys: yeah, same thing
16:59  Riviera: if anyone should scroll and say something, it's giany ;)
17:00  prince_jammys: so you'd stick {print} before the code i put up, and make "Yay" your appended stuff
17:01  prince_jammys: i'm sorry to say that your way cannot be the most idiotic
17:04  prince_jammys: i propose 3 tempfiles
17:05  prince_jammys: and have system("grep ...") somewhere in there
17:05  steve___: prince_jammys: are you saing "yeah, same thing" to me, as in I have the same problem as skered ?
17:05  steve___: /confuzzled/
17:05  prince_jammys: no, sorry. just read Riviera's solution which is the same thing unfactored
17:06  steve___: Ok I understand.
--- Log closed Thu Nov 25 08:25:10 2010
