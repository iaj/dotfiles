--- Log opened Sun Nov 28 00:57:11 2010
00:57 --- Users 93 nicks [0 ops, 0 halfops, 0 voices, 93 normal]
00:59 --- Channel #awk was synced in 118 seconds
03:42 --- pr3d4t0r is now known as pr3d4k4t
--- Log closed Sun Nov 28 12:13:15 2010
--- Log opened Sun Nov 28 12:13:42 2010
12:13 --- Users 94 nicks [0 ops, 0 halfops, 0 voices, 94 normal]
12:15 --- Channel #awk was synced in 122 seconds
--- Log closed Sun Nov 28 14:34:44 2010
--- Log opened Sun Nov 28 14:40:05 2010
14:40 --- Users 92 nicks [0 ops, 0 halfops, 0 voices, 92 normal]
14:41 --- Channel #awk was synced in 122 seconds
--- Log closed Sun Nov 28 15:32:07 2010
--- Log opened Sun Nov 28 15:42:31 2010
15:42 --- Users 95 nicks [0 ops, 0 halfops, 0 voices, 95 normal]
15:44 --- Channel #awk was synced in 121 seconds
--- Log closed Sun Nov 28 16:11:09 2010
--- Log opened Sun Nov 28 16:11:33 2010
16:11 --- Users 94 nicks [0 ops, 0 halfops, 0 voices, 94 normal]
16:13 --- Channel #awk was synced in 122 seconds
16:56  rene-: hello
16:56  gnubien: hi
16:57  rene-: i wonder if i can use awk to match lines in a file, using a list of values on its own file, and then print or redirect to a file the matched lines
16:59  gnubien: rene-: awk 'BEGIN { while (getline < "filename") print $1 }' #prints the file named filename
17:02  rene-: wow that is simple
17:03  rene-: filename is my list of values? 
17:03  rene-: or is it the other target file
17:04  gnubien: list of values
17:04  rene-: where does the other file go?
17:04  gnubien: rene-: not sure how to use each line that getline grabs to search another file
--- Log closed Sun Nov 28 17:10:42 2010
--- Log opened Sun Nov 28 17:11:04 2010
17:11 --- Users 97 nicks [0 ops, 0 halfops, 0 voices, 97 normal]
17:11  rene-: ah
17:11  gnubien: rene-: yea, i could not get this to work: awk -v var="$line" '/var/' nums
17:12 --- Channel #awk was synced in 120 seconds
17:12  rene-: ls
17:13  gnubien: rene-: while read line; do sed -n '/'"$line"'/p' nums; done < filename
17:30  rene-: wow, i found a way with grep, it is like literally thousands of times faster than with a ruby script
17:31  rene-: but thans gnubien for pointing myself in the right direction
17:31  rene-: for i in `cat missing_from_main.txt`
17:31  rene-: do
17:31  rene-:   grep $i west.csv.sql >> missing.sql
17:31  rene-: done
17:31  rene-: sorry for the multiline post
17:53  boss_: I am doing aggrecation like here : http://pastebin.com/mcS9y7ZY .I trying second level aggrecation . I need clue from someone to achive this
17:55  boss_: karthee : are you there?
17:56  boss_: Or any help from someone else
18:01  pgas: rene-: grep -f missing_from_main.txt 
18:03  pgas: boss_: your code doesn't really print anything and it seems you already agregate things in your arrays so I'm a little confused
18:03  boss_: I am printing in END
18:04  boss_: for(val in a) printf("%d\t%d\t%s\t%d\t%d\t%d\t%d\t%f\t%f\t%s\n", val,a[val],b[val],c[val],d[val],e[val],f[val],g[val],h[val],i[val])
18:05  pgas: well, just use other arrays like you do , in the loop in END, and add yet another loop
18:05  boss_: I have value in array
18:06  boss_: a[val]
18:06  boss_: How do i specify this in another array
18:06  boss_: ?
18:06  pgas: for (val in a) { aa[a[val]];ee[a[val]]+=e[val] ....
18:07  boss_: ok...
18:07  pgas: then: for (val in aa) print val,ee[val] ...
18:08  pgas: you can also probably do that when you do the first loop, since a[val] is really the original $3 no?
18:08  pgas: aa[$3] ee[$3]+=$11 etc..
18:10  boss_: Ok will try .
18:22  boss_: pgas : Yes It works with first loop itself : like aa[$3]=$4;bb[$3]+=$8;cc[$3]+=$10;dd[$3]+=$11;ee[$3]=$12;ff[$3]=$13;gg[$3]=$14;hh[$3]=$18
18:22  boss_: thanks 
18:28  boss_: pgas: I need to execute this Mysql query : select id,name from mytable ; and need to have the result set in awk for further processing
18:28  boss_: Is it possible with system()
18:28  boss_: ?
18:29  boss_: Or there may other way
--- Log closed Sun Nov 28 19:12:10 2010
--- Log opened Sun Nov 28 19:12:31 2010
19:12 --- Users 97 nicks [0 ops, 0 halfops, 0 voices, 97 normal]
19:14 --- Channel #awk was synced in 119 seconds
22:21  bdesham: hello
22:21  bdesham: I'm using split() in gawk, and one of the resulting strings is "00" (two zeroes). how can I tell gawk to treat this as a string?
22:21  bdesham: when I pass it to gensub() it gets converted to a numerical zero value somewhere along the way
22:47 --- bdesham_ is now known as bdesham
--- Log closed Mon Nov 29 08:19:23 2010
