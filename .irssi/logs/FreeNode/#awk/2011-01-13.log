--- Log opened Thu Jan 13 00:00:11 2011
01:01  multiverse: Hi, I am using the following find/awk combination:  find . -type f -size +512000k -mtime +14 -exec ls -lh {} \; | awk '{ print $9 ": " $5 }'
01:01  multiverse: It returns a list of files and their sizes.
01:02  cthuluh: why not use find ... -exec du ... \; ?
01:02  multiverse: Is it possible to use awk to total $5 for files that are found??
01:04  vkues: multiverse: Do you use GNU find?
01:05  multiverse: GNU 4.2.27
01:05  vkues: multiverse: (Note that adding ls -lh'd sizes involves parsing M/G/etc. prefixes)
01:06  multiverse: I guess what I need to do is find a way to drop the M, K, G off the end of each file size
01:06  vkues: multiverse: GNU find has the primary -printf
01:08  vkues: multiverse: Which supports format specifiers as %s for a file's size and %p for filenames.
01:08  cthuluh: multiverse: how would you then do the calculation?
--- Log closed Thu Jan 13 01:28:20 2011
--- Log opened Thu Jan 13 01:33:42 2011
01:33 --- Users 94 nicks [0 ops, 0 halfops, 0 voices, 94 normal]
01:35 --- Channel #awk was synced in 103 seconds
01:35  igli: du -h "$file" ;)
02:02  multiverse: bye
04:31 --- luptenschteiner is now known as probonono
05:39 --- luptenschteiner is now known as probonono
--- Log closed Thu Jan 13 09:25:48 2011
--- Log opened Thu Jan 13 09:31:31 2011
09:31 --- Users 91 nicks [0 ops, 0 halfops, 0 voices, 91 normal]
09:33 --- Channel #awk was synced in 107 seconds
15:21  h0cin: Hi, How can I remove the newline at the start of a system() output ? my script is like this -> cat foo | awk '{ print $1; system("dig -x "$2" +short | tr \"\n\" ") ; print $3 }'
15:22  pgas: at the start or at the end?
15:22  h0cin: it works fine, but the output gives an extra \n at start that I don't want
15:22  h0cin: pgas, at the end I remove it with tr like you see in the script
15:22  pgas: tr removes all the \n
15:22  pgas: you probably want printf "%s",$1
15:23  h0cin: at the start of the hole script ?
15:23  pgas: instead of print $1
15:23  pgas: you also probably need \\n
15:25  h0cin: but I wan all in the same line
15:25  h0cin: want*
15:26  pgas: yes, that's why you need printf becuase print prints a newline
15:31  h0cin: pgas, thks, it worked, but just using printf instead of print, but without %s
15:32  pgas: which is bad
15:32  h0cin: cat foo | awk '{ printf "SomeFoo: "$1" ("; system("dig -x "$2" +short | tr \"\n\" ") ; printf ") - MoreFoo: "$3 }'
15:32  h0cin: like that
15:32  pgas: don't do it like that
15:32  h0cin: why it's bad ?
15:33  pgas: the first argument is a format string. it will break if your $1 contains % for instance
15:33  pgas: printf "SomeFoo: %s (",$1
15:36  h0cin: what happens is that %s gives errors
15:37  pgas: ?
15:37  pgas: 4# echo foo  | awk  '{printf "SomeFoo: %s (",$1}'
15:37  shbot: pgas: SomeFoo: foo (
15:41  h0cin: I simplified my script just to make an example, but I have -> cat foo | awk '{ printf "Foo1: "$1:"\nFoo2: "$2"\nFoo3: ("; system("dig -x "$3" +short"); printf ")\n Foo4: "$4"\nFoo5: "$5 }' 
15:42  h0cin: when I make ->  cat foo | awk '{ printf "%s Foo1: "$1:"\nFoo2: "$2"\nFoo3: ("; system("dig -x "$3" +short"); printf "%s)\n Foo4: "$4"\nFoo5: "$5 }'  the scripts gives an error at the start of the system() output
15:42  pgas: ok, the syntax for printf is : printf "formatstring",argument,argument
15:43  pgas: for each %s in formatstring you need one arguement
15:43  pgas: printf "blah %s blah%s",$1,$2
15:43  pgas: the first %s is replaced by $1
15:43  pgas: the second %s is replaced by $2
15:43  h0cin: ah ok, like in c
15:43  h0cin: =P
15:43  pgas: exactly ;)
15:44  h0cin: great, and it should affect the system() output too right?
15:44  pgas: no
15:45  pgas: system returns only an exit code
15:45  pgas: if you want to capture the output of a command you need more work
15:45  pgas: like in C 
15:45  h0cin: I read that you need to use  cmd | getline
15:46  h0cin: but, doing the script I saw the output anyway
15:46  h0cin: that dig -x you see inside system() it really works
15:46  pgas: yes, or while ((cmd |getline) >0) if you need to capture multiple lines
15:46  pgas: sure, but you have no control on what it prints from awk
15:47  h0cin: ah, good, understood then
15:47  h0cin: pgas, thks for all your help !
15:47  pgas: no problem
19:52 --- SLot__ is now known as SLot
--- Log closed Fri Jan 14 08:48:30 2011
