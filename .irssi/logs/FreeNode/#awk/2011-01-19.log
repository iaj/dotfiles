--- Log opened Wed Jan 19 00:00:10 2011
--- Log closed Wed Jan 19 00:03:04 2011
--- Log opened Wed Jan 19 00:08:27 2011
00:08 --- Users 79 nicks [0 ops, 0 halfops, 0 voices, 79 normal]
00:10 --- Channel #awk was synced in 106 seconds
--- Log closed Wed Jan 19 00:21:25 2011
--- Log opened Wed Jan 19 00:21:49 2011
00:21 --- Users 79 nicks [0 ops, 0 halfops, 0 voices, 79 normal]
00:23 --- Channel #awk was synced in 108 seconds
--- Log closed Wed Jan 19 00:32:48 2011
--- Log opened Wed Jan 19 00:38:15 2011
00:38 --- Users 80 nicks [0 ops, 0 halfops, 0 voices, 80 normal]
00:39 --- Channel #awk was synced in 106 seconds
--- Log opened Wed Jan 19 02:03:53 2011
02:03 --- Users 80 nicks [0 ops, 0 halfops, 0 voices, 80 normal]
02:05 --- Channel #awk was synced in 116 seconds
--- Log closed Wed Jan 19 04:02:50 2011
--- Log opened Wed Jan 19 04:03:12 2011
04:03 --- Users 80 nicks [0 ops, 0 halfops, 0 voices, 80 normal]
04:04 --- Channel #awk was synced in 108 seconds
08:56  pr3d4t0r: Good morning.
08:57  pgas: yo
09:01  oliver1804: moin
10:12  xok_: lyhana8: did anyone answer?...
10:12  xok_: lyhana8: I had network problem.... 
10:13  vkues: xok: grep -Fvf excludes_file huge_file
10:13  xok_: let me try....
10:14  xok_: yoo, thank you very, very much, it works perfectly... :-D
10:15  vkues: great :)
10:15  vkues: there is also the -x option for grep if you want the patterns only to match whole lines
10:20  pgas: xok_: you asked in #bash not here by the way ;)
10:28 --- fraff_ is now known as fraff
14:36  daveb_: hey
14:37  daveb_: can you tell awk to ingore stuff in quotes, in case the field seperater is in there?
14:37  waldner: make an example
14:37  pgas: no
14:43  daveb_: echo "1,2,3,'Somestring','some, string'" | awk -F, '{ print $1 * $2 *$3, $5 }' 
14:43  daveb_: trying to get 6, 'some, string'
14:44  daveb_: waldner: ^
14:45  waldner: no, that's difficult to parse
14:50  daveb_: actually, I think the trick is to do two awks... one that uses -F\', then annother for the -F,
14:53  pgas: it depends on what you want to do
14:54  pgas: it's perhaps possible to work around but that would depends on your exact problem, unless you want to use the ready made csv parser for awk
14:55  daveb_: pgas: i didn't awk knew about cvs
14:56  pgas: it doesn't but you can teach it how: http://lorance.freeshell.org/csv/
14:58  daveb_: on a side note, how do you get awk to print a \'
14:58  daveb_: or "'"
14:59  daveb_: im getting alot of unexpected EOF while looking for matching
--- Log closed Wed Jan 19 14:59:34 2011
--- Log opened Wed Jan 19 15:02:26 2011
15:02 --- Users 92 nicks [0 ops, 0 halfops, 0 voices, 92 normal]
15:02  pgas: I like print "\047" too
15:02  waldner: yes
15:03  vkues: http://awk.freeshell.org/PrintASingleQuote
15:03  waldner: uh, what's the link to casino online there?
15:04 --- Channel #awk was synced in 121 seconds
15:05 * pr3d4t0r prefers to use sprintf("%c", 39); and form full strings as needed.
15:07  pgas: waldner: spam tha I missed
15:08  pgas: rolled back it was added a couple of hours ago
15:08  waldner: they're getting smarter
15:08  waldner: just sneaking a link in may go unnoticed
--- Log closed Wed Jan 19 15:09:12 2011
--- Log opened Wed Jan 19 15:48:24 2011
15:48 --- Users 92 nicks [0 ops, 0 halfops, 0 voices, 92 normal]
15:50 --- Channel #awk was synced in 107 seconds
15:50 --- daveb_ is now known as croepha
16:09  gionnico: hi
16:09  gionnico: what's less stupid than
16:09  gionnico: echo $line | awk -F \/ '{ print $6 }'
16:09  gionnico: and what can I use for print the last tokenized part ?
16:10  gionnico: something like { print $last }
16:11  cthuluh: $NF
16:11  cthuluh: and echo "$line" would be better
16:12  pgas: but even better read teh whole faq you were given in #bash
16:13  pgas: or, if the number of fields change, you can use ${line##*/}
16:15  gnubien: awk tricks: http://www.linuxaria.com/article/6-trucchi-con-awk?lang=en
16:45  ExpDate: "icon-16x16-chart.png", how to get number 16 
16:46  ExpDate: any idea
16:46  vkues: there are two 16s in your example
16:46  vkues: do you want to first or the second? :)
16:46  ExpDate: any 16
16:47  vkues: haha
16:47  ExpDate: let say second
16:47  vkues: awk '/16/ { print 16 }'
16:47  ExpDate: haha, 
16:47  ExpDate: i meant "icon-$numberx$number-chart.png"
16:47  ExpDate: the number is not fixed
16:47  vkues: awk 'match(/[[:digit:]]+/ { print substr($0, RSTART, RLENGTH) }'
16:48  vkues: That'd be the first.
16:48  ExpDate: awk  -F: '/(?:[0-9]{2})/'
16:48  vkues: 4k awk 'match(/[[:digit:]]+/ { print substr($0, RSTART, RLENGTH) }' <<< 'icon-16x16-chart.png'
16:48  ExpDate: is it possible with substr
16:48  vkues: 4# awk 'match(/[[:digit:]]+/ { print substr($0, RSTART, RLENGTH) }' <<< 'icon-16x16-chart.png'
16:48  shbot: vkues: awk: match(/[[:digit:]]+/ { print substr($0, RSTART, RLENGTH) }
16:48  shbot: vkues: awk:                      ^ syntax error
16:48  shbot: vkues: etc... ( http://pastebin.com/Gi1n027j )
16:48  vkues: mean :)
16:48  vkues: 4# awk 'match(/[[:digit:]]+/) { print substr($0, RSTART, RLENGTH) }' <<< 'icon-16x16-chart.png'
16:48  shbot: vkues: awk: fatal: 1 is invalid as number of arguments for match
16:48  vkues: 4# awk 'match(/[0-9]+/) { print substr($0, RSTART, RLENGTH) }' <<< 'icon-16x16-chart.png'
16:48  shbot: vkues: awk: fatal: 1 is invalid as number of arguments for match
16:48  vkues: :-(
16:49  ExpDate: hehe
16:49  vkues: 4# awk 'match($0, /[0-9]+/) { print substr($0, RSTART, RLENGTH) }' <<< 'icon-16x16-chart.png'
16:49  shbot: vkues: 16
16:50  vkues: '/(?:[0-9]{2})/' is not a valid regular expression in awk, it looks like a perl regular expressions flavour
16:50  ExpDate: so i would not possible , to have 16 with out substr
16:51  vkues: With sub(), yes.
16:51  gnubien: ExpDate: echo "icon-16x16-chart.png" |awk -F'[-x]' '{print $2}'  #prints: 16
16:52  ExpDate: gnubien: that looks much better, thanks
16:52  gnubien: ExpDate sure, have fun
16:54  steve___: ExpDate: unless the first part has an x in it.  eg iconx-16x16-chart.png
16:55  ExpDate: steve___:  what do u meant by first part?
16:55  ExpDate: steve___:  i got it
16:56  ExpDate: steve___: the format is fixed, icon-${var}x${var}-${something}.png
16:56  vkues: 4# awk '-F[^0-9]+' '{ print $2, $3 }' <<< 'icon-16x32-chart.png'
16:56  shbot: vkues: 16 32
16:58  ExpDate: vkues: '-F[^0-9]+'  i did not get it this
16:58  ExpDate: it works, but ^ would not meant first char in line
16:58  pgas: (of course if the name is in a shell variable, you'd use parameter expansion; like num=${var#icon-} num=${num%%x*})
16:58  vkues: ExpDate, that changes the field separator to everything not a digit
16:58  vkues: ExpDate: err, number
16:59  vkues: i am not sure if * would be better or worse than +
17:00  variable: :-|
17:00  vkues: why the ascii face?
17:03  gionnico: i'd like awk to take a list containing each line NNNN_name.jpg and outputing name each line
17:03  gionnico: to remove .jpg i managed to do awk -F \. '{ print $1}'
17:04  gionnico: what can i do to remove NNNN_ ? where NNNN is [0-9] ?
17:04  vkues: gionnico: where do these names come from?
17:04  gionnico: vkues: stdin: ls -1 | awk ...
17:05  gionnico: i'm sure ls -1 will only output so-formatted filenames in that directory i'm listing
17:05  igli: ugh don't parse ls output
17:05  gionnico: igli: well file in that directory are only written by a script
17:06  igli: awk 'some script' *
17:06  igli: well maybe not
17:08  igli: for f in *; do n=${f%.*}; while [[ $n = [0-9_]* ]]; do n=${n#?}; done; echo "$f : $n"; done
17:08  vkues: gionnico: in case you use bash, you could do this:
17:08  vkues: gionnico: shopt -s extglob
17:08  vkues: gionnico: for filename in *_*.jpg; do printf %s\\n "${filename#+([0-9])_}"; done
17:09  igli: that's cool. need to chop extension as well?
17:10  vkues: mh, what do you mean?
17:10  igli: you're stripping at front, but not the .jpg?
17:10  vkues: oh, right :)
17:10  igli: :)
17:11  vkues: gionnico: for filename in *_*.jpg; do n=${filename#+([0-9])_}; printf %s\\n "${n%.jpg}"; done
17:13  vkues: gionnico: does this suffice?
17:18  gionnico: vkues: let me try
17:18  igli: you need extglob
17:19  gionnico: with extglob it works
17:19  gionnico: is that a temporary setting?
17:19  gionnico: so i call it each time before executing the script?
17:20  vkues: you have to set it in the script
17:21  igli: this is all #bash material
17:21  gionnico: vkues: ok thanks :)
17:22  igli: gionnico: /msg greybot extglob
17:24  gionnico: just 1 question .. can't i for filename in dir/*_*.jpg ?
17:24  igli: ofc you can
17:25  gionnico: igli: ah but ofc i have to strip dir/ again ..
17:25  igli: gionnico: see /msg greybot pe
17:26  igli: "${filename#*/}"
17:27  gionnico: cool
--- Log closed Thu Jan 20 08:34:25 2011
