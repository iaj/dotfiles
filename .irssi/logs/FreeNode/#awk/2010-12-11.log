--- Log opened Sat Dec 11 00:52:09 2010
00:52 --- Users 100 nicks [0 ops, 0 halfops, 0 voices, 100 normal]
00:52  kingsley: When printing the csv output, it currently loops through all sequence numbers from 1 to the largest seen.
00:52  waldner: yes, it assumes that all numbers appear in one file or another
00:53  kingsley: However, by examining the data, I noticed that some sequence numbers in that range are never used.
00:53  waldner: it's easy to track seen keys and not print anything if the calculated key is not among them
00:53  kingsley: Of course, not having access to the data, you could not have been expected to know that.
00:53 --- Channel #awk was synced in 105 seconds
00:54  waldner: just add keys[$1] in the main body, and make the printing conditional to  if(i in keys)
00:54  kingsley: waldner: Yes, precisely. I agree that only those keys that have been seen should be printed.
00:55  kingsley: Anyways, I can tell that this is no big surprise to your formidable intellect.
00:55  kingsley: I just mention it for your info (FYI).
00:57  waldner: kingsley: awk -F, 'FNR==1 {nfiles++} {out[$1,nfiles]=$2; keys[$1]; if($1>max)max=$1} END {for(i=1;i<=max;i++){if(i in keys){line=i; for(j=1;j<=nfiles;j++){line=line "," out[i,j]}; print line}}}' file1 ... file58000
00:58  kingsley: OK, thanks.
00:59  waldner: also there's probably another improvement then
00:59  waldner: my code assumes that the lowest sequence number is 1
00:59  waldner: that may not be the case
01:00  waldner: (the for(i=1;i<=max...
01:00  kingsley: waldner: Yes, indeed the first key they used was 3, so it seems to me that starting at 1 is fine.
01:01  waldner: with the check that we added now (if(i in keys)), it wouldn't be printed anyway
01:01  kingsley: I agree.
01:02  waldner: but perhaps if the first key was, say, 100000, tracking the minimum would save 99999 useless loops
01:02  waldner: if it's 3, it's not a big deal
02:19 --- kizoku_ is now known as kizoku
02:43  pr3d4t0r: It's almost time to go for a swim.
02:43  pr3d4t0r: Maybe.
--- Log closed Sat Dec 11 03:25:25 2010
--- Log opened Sat Dec 11 03:29:05 2010
03:29 --- Users 98 nicks [0 ops, 0 halfops, 0 voices, 98 normal]
03:30 --- Channel #awk was synced in 98 seconds
06:00  kingsley: waldner: I happened to notice that your competent suggestion names its loop counters "i" and "j". I've seen loop counters in Fortran with the same names. Have you ever coded in Fortran?
06:23  alek{xmb}{bottz}: aio ewal all instantly own
06:42  alek{xmb}{bottz}: 2
07:41  pgas: sup
07:43  pgas: kingsley: i and j...k are like universal among programming languages, they probably come from maths
08:02  alek{xmb}{bottz}: yo pg
08:02  alek{xmb}{bottz}: did u tschekk my " sch" kouding language
08:03  alek{xmb}{bottz}: http://xmb.root.pe/art/audio/life/myself/m3.jpg
08:03  alek{xmb}{bottz}: thats mi btw
08:04  alek{xmb}{bottz}: pgas btw hai Ã©p
08:07  pgas: yeah I did...still stome work to do ;)
08:22  alek{xmb}{bottz}: yec yec
09:35  kingsley: waldner: For what it's worth, after 2.5 hours, my implementation of your suggestion is still running. It's evidently using about 80% of memory, 1% of CPU, and reading about 2 MB/sec from swap.
09:36  kingsley: waldner: If it's not done by tomorrow, maybe I'll kill it with ^c, and re-run it with fewer files and check the output for bugs.
11:20  alekz_xmb_bottz: {alekchsczx} {xmb} {bottz} {ouwhn} {n l o} {lab} {rapktschevf}
21:12  alcuadrado: Hi everybody? is awk compatible with perl regexps?
21:12  alcuadrado: I'm a complete noob with it
21:12  Riviera: No, it is not.
21:13  alcuadrado: and with posix ones?
21:13  Riviera: POSIX awk uses POSIX EREs. :)
21:15  alcuadrado: great, the GNU one seems to be mostly posix compatible :)
21:16  Riviera: Yes, they are a bit more powerful, though.
21:17  alcuadrado: awk was created by Aho and Kernighan, right?
21:17  alcuadrado: and the W is..?
21:17  Riviera: Weinberger
21:18  Riviera: http://en.wikipedia.org/wiki/Peter_J._Weinberger
21:18  alcuadrado: thanks :)
21:18  alcuadrado: well, I'll go through the tutorial in the topic
21:19  Riviera: good luck :)
21:24  alcuadrado: thanks! 
21:24  alcuadrado: see ya
22:49  kingsley: 4# awk 'BEGIN{a[01];for (b in a){print b}}'
22:49  shbot: kingsley: 1
22:49  kingsley: Can awk not strip leading zeros from elements in associative arrays? If so, how?
22:50  waldner: a["01"]
22:50  kingsley: waldner: Yes, but, what about...
22:51  kingsley: waldner: I need to think...
23:11  kingsley: Is it possible to pad a "for" loop counter with leading zeros until it's five bytes wide?
23:11  kingsley: If not, is it possible to pad a regular variable?
23:13  waldner: with sprintf(), you can probably do it
23:13  Riviera: you can use sprintf to zero pad a string from a varia ... what waldner says :)
23:14  kingsley: I'll check it out.
23:18  kingsley: 4# awk 'BEGIN{a=1;b=sprintf("%05d",a);print b}'
23:18  shbot: kingsley: 00001
23:19  kingsley: Thanks.
--- Log closed Sun Dec 12 00:00:40 2010
