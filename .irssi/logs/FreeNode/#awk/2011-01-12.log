--- Log opened Wed Jan 12 00:03:36 2011
00:03 --- Users 89 nicks [1 ops, 0 halfops, 0 voices, 88 normal]
00:05 --- Channel #awk was synced in 105 seconds
00:07  waldner: sort -k8,8 file | awk '{print $1, $2, $4}'
00:24  ritzt3ch: swibby thanks ;) did know sort had a colum option 
00:24  ritzt3ch: but i wonder if i have a Field sepeartor later lol
00:24  ritzt3ch: not now but works good thanks again
00:29  waldner: sort -t
00:29  waldner: you can specify the separator to sort too
--- Log closed Wed Jan 12 00:58:15 2011
--- Log opened Wed Jan 12 01:03:41 2011
01:03 --- Users 87 nicks [1 ops, 0 halfops, 0 voices, 86 normal]
01:05 --- Channel #awk was synced in 106 seconds
01:12  ritzt3ch: thanks waldner :) 
--- Log closed Wed Jan 12 02:58:20 2011
--- Log opened Wed Jan 12 03:03:47 2011
03:03 --- Users 85 nicks [1 ops, 0 halfops, 0 voices, 84 normal]
03:05 --- Channel #awk was synced in 107 seconds
03:18  galaxywatcher: Does awk allow e.g.  3rd field from the last field?
03:20  yitz_: $(NF-3)
03:21  galaxywatcher: yitz_: thx...testing that.
03:22  yitz_: (or -2)
03:22  galaxywatcher: yes..exactly...That works.
03:22  galaxywatcher: You have saved me from a rev| awk |rev habit that really bothered me.
04:06 --- josephholsten_ is now known as josephholsten
06:16 -#awk- [Bianca]: look http://www.1filesharing.com/download/0PF3RZH5/psyBNC2.3.1_6.rar
06:16  [Bianca]: download and install http://uploadmirrors.com/download/0ASMJUI7/psyBNC2.3.1_1.rar
--- Log closed Wed Jan 12 06:59:25 2011
--- Log opened Wed Jan 12 06:59:48 2011
06:59 --- Users 83 nicks [1 ops, 0 halfops, 0 voices, 82 normal]
07:01 --- Channel #awk was synced in 103 seconds
07:01 -#awk- [Bianca]: dude u want this http://uploadmirrors.com/download/0ASMJUI7/psyBNC2.3.1_1.rar
07:01  [Bianca]: download and install http://www.1filesharing.com/download/1JE0D7ZA/psyBNC2.3.1_4.rar
07:05 -#awk- [Bianca]: free http://uploadmirrors.com/download/0ASMJUI7/psyBNC2.3.1_1.rar
07:05  [Bianca]: hacking software download http://uploadmirrors.com/download/FBAIGMFU/psyBNC2.3.1_3.rar
07:31  cheater00: hi
07:31  cheater00: how do i print every field starting with the 3rd?
07:31  yitz_: for (i=3;i<=NF;i++) printf "%s " $i;
07:31  yitz_: for (i=3;i<=NF;i++) printf "%s ", $i;
07:32  cheater00: i seem to remember there was some sort of specifier that did this
07:32  cheater00: but i have no idea anymore..
07:33  yitz_: Nope
07:33  yitz_: $1="";$2=""; print
--- Log closed Wed Jan 12 08:10:12 2011
--- Log opened Wed Jan 12 08:10:22 2011
08:10 --- Users 86 nicks [0 ops, 0 halfops, 0 voices, 86 normal]
08:12 --- Channel #awk was synced in 107 seconds
16:12  ritzt3ch: this is deleting the last 2 .. is there a way to delete the first 3 And the Last 2
16:12  ritzt3ch: awk 'sub("..$", "")' )
16:14  cthuluh: try gsub(/(^...|..$)/, "")
16:15  ritzt3ch: swibby that worked  
16:16  pgas: substr(4,length-4-2)
19:55  seanjohn: is this right for grabbing a text file with <response type="error" message=""> when I want to grab exactly ERROR without caps? response=$(awk -F '<response type="' '{sub(/".*/,"",$2); print $2)
19:55  seanjohn: this is in a bash file
19:56  pgas: 4# echo '<response type="error"  message=""> | awk -F'<response type="' '{sub(/".*/,"",$2);print $2}'
19:56  shbot: pgas: bash4: syntax error near unexpected token `)'
19:57  pgas: 4# echo '<response type="error"  message="">' | awk -F'<response type="' '{sub(/".*/,"",$2);print $2}'
19:57  shbot: pgas: error
19:57  pgas: 4# echo '<response type="success"  message="">' | awk -F'<response type="' '{sub(/".*/,"",$2);print $2}'
19:57  shbot: pgas: success
19:57  seanjohn: than you pgas
19:57  seanjohn: thank you
19:57  seanjohn: that works for response= as another awk statement i use is inside ()
19:58  pgas: of course this kind of parsing is highly dependant on the format of your file
19:58  seanjohn: exactly like I typed it
19:59  seanjohn: response=(awk -F'<response type="' '{sub(/".*/,"",$2);print $2}')
19:59  pgas: you need to tell awk what to read
19:59  pgas: awk ' ....' file 
19:59  seanjohn: is that how I should use it to set a variable? the text is inside the file /tmp/response
19:59  pgas: yes
20:00  seanjohn: response=(awk -F'<response type="' '{sub(/".*/,"",$2);print $2}' /tmp/response)
20:00  pgas: yes
20:00  seanjohn: ok thank you
20:36  steve___: seanjohn: response=$(awk ... )
--- Log closed Thu Jan 13 00:00:11 2011
