--- Log opened Tue Oct 19 00:00:59 2010
00:43  demifuror: hi guys, could someone tell me how to extract the last node in a piece of xml using awk? the xml is huge, so i need to start parsing from the bottom of the file. im on aix, and i dont have tac, and i dont have permissions to install it
00:45  jwillia3: demifuror, use python or perl or something with an xml parser
00:47  demifuror: jwillia3, okay ill investigate using perl, thanks! dont suppose you have any good links that talk about what i want to do?
00:48  jwillia3: demifuror, i don't use perl myself, ask in #perl.
00:48  demifuror: okay tanks
01:03 --- The-Comp1ler is now known as The-Compiler
01:08  demifuror: can anyone tell me how to make awk parse a file from the bottom up?
01:10  jwillia3: you don't.
01:11  cthuluh: you have to store the lines in an array, and print those lines in the reverse order in the END clause
01:13  demifuror: okay. so, see when a line matches my pattern, can i record the line number that its on?
01:13  cthuluh: yes, of course
01:13  demifuror: how do i do that?
01:15  cthuluh: well, the question is related to how you store the lines in the array
01:15  jwillia3: demifuror, ...if you go through, save, and process every line, what is the point of going backwards?
01:15  cthuluh: the answer*
01:21  demifuror: is it possible to pass awk variables into sed?
01:22  g0pher: to rev -  {A[NR]=$0}END{while(NR)print(A[NR--])}
01:41  demifuror: can i have a .awk file with multiple programs in it?
01:43  g0pher: just by logic:  -v pgmname="prog1"  BEGIN{if(pgmname=="prog1") {#do code for prog1} else ...}
01:46  demifuror: the thing is, i want to reverse a file using awk (i havent got tac) and then, i want to parse it using awk. the reason i want too reverse it is because i want to retrive teh latest xml added to teh file. its quite big, so starting at the end would be best. 
02:12  g0pher: how big ? - isnt there a `rev` or `tail` pgm to read a file backwards from the end ?
02:51  demifuror: how can i change a bash variable from within awk?
02:53  igli: you can't
02:54  igli: you can output the value and allow bash to read it in tho.
02:54  demifuror: how can i do that?
02:54  igli: s/allow/have
02:55  igli: do you have any awk in mind or is this purely speculative?
02:55  igli: try: help read # in a terminal for a start
02:56  demifuror: well, i want to assign the line number of line that matches a pattern, and then i want to use the line number in a bash script
02:58  igli: so: while read -r lineNum; do stuff -with each "$lineNum"; done < <(awk '/pattern/ { print NF }') # afair
02:58  demifuror: yep
02:58  igli: ask #bash about the syntax
02:59  g0pher: indirect - /patrn/{system("script name" " " NR)}
02:59  igli: evening g0pher
02:59  g0pher: hi
03:09  demifuror: in my script i have if tag == 0 {print $0}, how can i check that the current line contains a string?
03:10  yitz_: tag == 0 && 0 ~ /string/
03:10  demifuror: um, i want to check inisde the {}, sorry, i should have said
03:10  yitz_: Why?
03:12  igli: tag == 0 { if ($0 ~ /string/) print $0 } ?
03:13  demifuror: does ~ mean EQUAL TO or CONTAINS?
03:13  demifuror: i need contains
03:13  igli: it means "regex match"
03:13  igli: seriously, check out some of the docs in /topic please
03:22  g0pher: or if(index($0,string))print
03:26  igli: yeah good one
03:32  g0pher: am old school - admit regex confuses me - once used \5 thinking it would escape the `5` char - forgot that \5 is numeric eg \005 or \x05
03:34  demifuror: guys, in my awk script, im using > and >> to overwrite and append, but they seem to both be appending, does anyone know why?
03:37  g0pher: the diff is on opening a file - the > overwites - >> appends ; after initial open they are same
03:38  g0pher: to overwrite again do close(filename);  then the > will overwrite
03:39  demifuror: i have to do this within awk?
03:43  demifuror: do i have to explicitly open the file from within awk as well?
03:43  g0pher: in awk - print 1 >filename; print 2 >filename - will put 2 lines
03:43  demifuror: what does >> do?
03:44  g0pher: whereas print 1 >filename; close(filename); print 2 >filename  - will have one line with number 2
03:45  g0pher: on initial open -- >> will append to end of existing file
03:45  demifuror: oh okay, thanks very much for your help, it seems to be coming together now!
06:38  awknsed: Hi everyone, I need to use awk or sed to retreive all the text between two " " only if the text contains the word -upload-
06:39  awknsed: I have been reading online tutorials for hours but I'm pretty lost.
06:42  jwillia3: sed -n 's/.*"\(.*-upload-.*\)"/\1/p'
06:42  jwillia3: sed -n 's/.*"\(.*-upload-.*\)".*/\1/p'
06:42  g0pher: start with simple eg /upload/ {print}
06:43  g0pher: jwillia3 this is #awk
06:43  jwillia3: g0pher, he said awk or sed
06:43  g0pher: yes - but this is #awk - and there are awk solutions
06:44  jwillia3: i'm not stoping you from giving one.
06:45  g0pher: jwillia3: you have knowledge of awk - just saying that an awk solution is more appopriate to this channel imho
06:47  awknsed: jwillia3: hrm, let's say I'm try to grab check for the upload keyword in every href"" in a sourcefile and print the result of the " " of the href"" only if it contains uploads
06:48  jwillia3: what?
06:48  awknsed: jwillia3: hrm, let's say I'm trying to check for the upload keyword in every href"" in a sourcefile and print the info contained in the href"" only if it contains uploads
06:48  jwillia3: ...repeating it doesn't make it clearer.
06:49  awknsed: it's not repeated.
06:49  awknsed: I corrected it
06:49  jwillia3: well, explain what it means
06:49  tmr: Somehow this sounds like html parser would be the most apporiate answer.
06:49  jwillia3: actually, just give the input you have  and the output you expect http://dpaste.com
06:51  awknsed: http://dpaste.com/259984/
06:52  awknsed: I want to extract the .png file URL
06:52  awknsed: only if it's contained in a src="" that has the keyword "upload" in it
06:54  jwillia3: awknsed, you'll make it a lot easier if you seperate it so that there's only one src="" per line.
06:55  awknsed: hrm, how can I do that with the original source code of the page ?
06:55  jwillia3: awknsed, join ##sed
07:08  g0pher: jwillia3: not be to be confrontaional - but suspect anything sed/grep/bash can do - that awk language can do also ?
07:09  jwillia3: g0pher, yes, awk is as powerful as any of them. the reason that i gave a sed solution is because it's simplest and shortest.
07:12  g0pher: perhaps is simple and short but is incomprehensible whereas some awk code in a file can be very easy to comment and debug
07:14  g0pher: and besides - this is the awk language channel - some might not have a sed command ?
07:15  jwillia3: g0pher, i'm not here to debate the relative merits of sed & awk. he asked for either, i gave him sed. he wasn't in ##sed, so i posted it here.
07:24  g0pher: jwillia3: what would be your awk solution for the sed code ?
07:24  jwillia3: hold on, i'm still working with him
07:26  g0pher: ok - Just that some might not have sed/grep - whereas imho iirc awk can do same as they
07:28  awknsed: g0pher: The sed solution was: sed 's/src=/\nsrc=/g' file1 | sed -n 's:.*src="\([^"]*uploads/2010/10/[^"]*[.]png\)".*:\1:p'>file2 .. if you want to translate that into awk
07:29  jwillia3: g0pher, you want the whole solution in awk?
07:30  g0pher: Yes Obvious - This is awk code -- iirc Anything done in sed/grep can be done in awk ? eg the codebase is same
07:30  g0pher: s/This is awk code/This is awk channel/
07:31  jwillia3: the codebase is not the same, and just because this is awk doesn't mean everything has to be completely in awk.
07:32  awknsed: jwillia3: I removed the /2010/10 part to make it more general
07:32  g0pher: jwillia3: OK as analogy - If someone gave a solution in Visual Basic - You would Flame them for being off topic ?
07:32  awknsed: It worked just fine
07:34  jwillia3: g0pher, talking about visual basic is different than talking about sed, tr, & bash.
07:39  g0pher: jwillia3: Please explain how so eg this is awk language channel - suspect you would be amazed how many use awk on other systems wheras sed/tr/bas/grep not native ?
07:41  jwillia3: g0pher, no, i would not be surprised, and if they don't have those tools, they will say so. I'm not going to write an inappropriately complicated or verbose program for the just for the sake of keeping it only in awk if i don't have to.
07:41  jwillia3: g0pher, and if you have anything further to say on the matter, please keep it to youself or ignore me.
07:45  g0pher: jwillia3: suspect you not know the power of awk - can be as complicated or verbose as sed/tr/grep
--- Log closed Tue Oct 19 08:37:19 2010
--- Log opened Tue Oct 19 08:42:43 2010
08:42 --- Users 98 nicks [0 ops, 0 halfops, 0 voices, 98 normal]
08:43  g0pher: have not a clue what `backreferences` means - is there a simple explanation
08:44 --- Channel #awk was synced in 102 seconds
08:44  pgas: you can group expressions inside \( \), then you can refer to what has been matched in this group using \1
08:44  pgas: ie: grep '\(.\{4\}\)foo\1'
08:44  pgas: \(.\{4\}\)  matches 4 chars
08:45  pgas: \1 is the same 4 chars that have been matched
08:45  g0pher: but awk has MATCH var ?
08:46  pgas: no, it has a match function
08:49  g0pher: match(s, r [, a])
08:49  g0pher: returns the position in s where the regular expression r
08:49  g0pher: occurs, or 0 if r is not present, and sets the values of variables
08:49  g0pher: RSTART and RLENGTH. If a is supplied, the text matching
08:49  g0pher: all of r is placed in a[0]. If there were parenthesized
08:49  g0pher: subexpressions, the matching texts are placed in a[1],
08:50  g0pher: a[2], and so on. Subscripts a[n, "start"], and a[n,
08:50  g0pher: "length"] provide the starting index in the string and
08:50  g0pher: length respectively, of each matching substring.
08:50  pgas: yes ....I think you ...*I* know what it does....
08:51  pgas: well, enough time wasted with you
08:53  g0pher: pgas: aplogy - when you posted $$i - was new ideas
08:55  pgas: see http://awk.freeshell.org/GeneralizedTextReplacement
08:57  pgas: it's not impossible to do things like this in awk. but it's not that easy either
08:59  g0pher: pgas - ever read this - ie Every easy way to awk - http://www.gnu.org/manual/gawk/
08:59  pgas: have you? 
09:00  g0pher: yes - every day - http://www.gnu.org/manual/gawk/gawk.html
09:00  g0pher: Second only to the original awk book
--- Log opened Tue Oct 19 11:58:11 2010
11:58 --- Users 100 nicks [0 ops, 0 halfops, 0 voices, 100 normal]
11:59 --- Channel #awk was synced in 111 seconds
13:04  Quanta: hi, i have a file with the following line: DistN0   =2.69227;      ErrDistN0=0.000363077; and i would to get: 2.69227     0.000363077. i tried this:awk -v size="$size" '/DistN0/ {printf "%d\t %f\t %f\n", size, $2, $3 }' $resultFile >> $meanDistance and i get $size 0.00000 0.0000.
13:07  pgas:  | LC_ALL=C awk -v ....
13:08  pgas: your de_DE locale probably means that your awk expect floats written like: 0,12
13:10  Quanta: i tried echo "DistN0   =2.69227;      ErrDistN0=0.000363077;" | LC_ALL=C awk '/DistN0/ {printf "%d\t %s\t %s\n", 153, $2, $3 }' and got "153	 =2.69227;	 ErrDistN0=0.000363077;", so it didnt solve it...
13:11  pgas: well, yes $2 and $3 are not numbers
13:11  pgas: awk -F '[=;]'  and use $2 and $4
13:12  Quanta: thanks
13:12  Quanta: worked
--- Log closed Tue Oct 19 16:01:03 2010
--- Log opened Tue Oct 19 16:06:13 2010
16:06 --- Users 100 nicks [0 ops, 0 halfops, 0 voices, 100 normal]
16:07 --- Channel #awk was synced in 103 seconds
16:09 --- Carmageddon1 is now known as Carmageddon2
16:09 --- Carmageddon2 is now known as Carmageddon
16:31  stockholm: http://paste.debian.net/97258/
16:31  stockholm: pgas: the systax is wrong, what is the problem?
16:31  stockholm: i get 
16:31  stockholm: awk: ./ap-geodns-analysis.awk:5:     while ( ( apctl -p 4469 status | readline ) >0 )
16:31  stockholm: awk: ./ap-geodns-analysis.awk:5:                                                     ^ unexpected newline or end of string
16:33  stockholm: unfortunatly i dont find much on syntax or whatever of awk scripts
16:37  probonono: stockholm, you have mistakenly used a closing brace '}' instead of an opening brace '{'
16:39  stockholm: probonono: so i dont have a main block (like BEGIN{} {#main} END{})?
16:39  stockholm: can i have an END block?
16:41  stockholm: probonono: now it gives me syntax errors on the readline
16:41  probonono: Ah, sorry I didn't look closely enough (font a bit small), your structure is BEGIN { while(...) } {print...} but you want:  BEGIN { while(...) {print ...} }  or just:  BEGIN { while(...) print }
16:43  stockholm: ok
16:43  stockholm: probonono: how do i call the external program?
16:45  probonono: Just enclose it in quotes:  while ( ( "apctl -p 4469 status" | readline ) >0 )
16:47  pgas: stockholm: also it 's not readline, please take the time to read the doc instead of trying random things
16:48  stockholm: pgas: i just came to that. i did search for readline in several awk docs and didnt find it
16:48  pgas: of course it doesn't exist
16:50  pgas: <stockholm> what is the getline for? is that mandatory? <pgas> you need it to read the output of the cmd
--- Log closed Tue Oct 19 17:58:22 2010
--- Log opened Tue Oct 19 17:58:44 2010
17:58 --- Users 102 nicks [0 ops, 0 halfops, 0 voices, 102 normal]
18:00 --- Channel #awk was synced in 101 seconds
--- Log closed Tue Oct 19 18:15:37 2010
--- Log opened Tue Oct 19 18:16:02 2010
18:16 --- Users 101 nicks [0 ops, 0 halfops, 0 voices, 101 normal]
18:17 --- Channel #awk was synced in 105 seconds
18:21 --- dot_prime is now known as dotCOMmie
--- Log closed Tue Oct 19 19:16:38 2010
--- Log opened Tue Oct 19 19:17:01 2010
19:17 --- Users 101 nicks [0 ops, 0 halfops, 0 voices, 101 normal]
19:18 --- Channel #awk was synced in 102 seconds
19:47  stockholm: how can i do a for loop here:
19:47  stockholm:     while (  ( "/usr/bin/apctl -p 4469 status" | getline ) >0  )
19:48  pgas: for loop to do what?
19:48  stockholm: i want to replace the 4469 with a 4469-4478
19:48  stockholm: and execute each in turn
19:49  jwillia3: stockholm, for (i=4469; i<=4478; i++) while ( ("/usr/bin/apct -p " i " status" | getline ) >0 );
19:49  pgas: for (i=4469;i<=4478;i++) { cmd =  "/usr/bin/apctl -p " i " status" ;while ( (cmd | getline) >0 ) { .... } ;close(cmd) }
19:49  jwillia3: oh, yes, must close()
19:50  stockholm: great
19:50  stockholm: can you point out how do do the overall script nicer?
19:50  stockholm: http://paste.debian.net/97276/
19:53  pgas: hmm, you could do something with associative arrays I guess
19:53  pgas: a["SE"]=0 a["FR"]=0 .....
19:54  pgas: then do if ($2 in a) { a[$2]++} else { a["any"]++ } 
19:54  StrikerST: question.. im still struggling on this http://pastebin.com/b1wg1rGZ I have a bunch of ip addresses 1 per line and each block of addresses is seperated by a blank line... I want to read each block of addresses and save it to a file that starts with begin and end each block of addresses gets a new file name.... my code only keeps reading the first block and saving it to a different file name... any advice?
19:54  pgas: and finally use a["FR"] a["SE"] to get the sums
19:55  stockholm: pgas: nice, yes
19:55  StrikerST: oh whoops wrong channel
19:55  StrikerST: sorry
19:55  StrikerST: haha
--- Log closed Tue Oct 19 21:14:35 2010
--- Log opened Tue Oct 19 21:14:55 2010
21:14 --- Users 100 nicks [0 ops, 0 halfops, 0 voices, 100 normal]
21:16 --- Channel #awk was synced in 102 seconds
--- Log closed Tue Oct 19 23:55:12 2010
--- Log opened Tue Oct 19 23:55:36 2010
23:55 --- Users 100 nicks [0 ops, 0 halfops, 0 voices, 100 normal]
23:57 --- Channel #awk was synced in 97 seconds
--- Log closed Wed Oct 20 00:00:31 2010
